/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdd_AA_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2122_11_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150502 = ae + be;
    const double C150501 = ae * be;
    const double C150500 = yA - yB;
    const double C150519 = 0 * be;
    const double C150552 = 0 * ae;
    const double C150544 = 0 * be;
    const double C150610 = p + q;
    const double C150609 = p * q;
    const double C150618 = std::pow(ae, 2);
    const double C150616 = bs[3];
    const double C150615 = yP - yQ;
    const double C150624 = bs[4];
    const double C150622 = xP - xQ;
    const double C150632 = bs[5];
    const double C150641 = bs[6];
    const double C150652 = bs[7];
    const double C150667 = bs[8];
    const double C150688 = bs[2];
    const double C150807 = zP - zQ;
    const double C136 = bs[0];
    const double C151900 = xA - xB;
    const double C151928 = ce + de;
    const double C151927 = ce * de;
    const double C151926 = xC - xD;
    const double C151960 = yC - yD;
    const double C151978 = zC - zD;
    const double C152154 = zA - zB;
    const double C150521 = 2 * C150502;
    const double C150520 = std::pow(C150502, 2);
    const double C150523 = 2 * C150501;
    const double C150507 = C150501 * C150500;
    const double C152159 = std::pow(C150500, 2);
    const double C152175 = C150500 * be;
    const double C152174 = C150500 * ae;
    const double C150547 = C150500 * C150519;
    const double C150546 = -2 * C150519;
    const double C150560 = C150552 / C150502;
    const double C150611 = 2 * C150609;
    const double C150619 = std::pow(C150615, 2);
    const double C150681 = C150615 * ae;
    const double C150634 = std::pow(C150622, 2);
    const double C150951 = std::pow(C150807, 2);
    const double C151903 = C151900 * be;
    const double C151902 = C151900 * ae;
    const double C151901 = std::pow(C151900, 2);
    const double C151932 = 2 * C151928;
    const double C151931 = std::pow(C151928, 2);
    const double C151933 = C151926 * de;
    const double C151930 = C151926 * ce;
    const double C151929 = std::pow(C151926, 2);
    const double C151961 = std::pow(C151960, 2);
    const double C152020 = C151960 * de;
    const double C152018 = C151960 * ce;
    const double C151979 = std::pow(C151978, 2);
    const double C152062 = C151978 * de;
    const double C152060 = C151978 * ce;
    const double C152189 = std::pow(C152154, 2);
    const double C152201 = C152154 * be;
    const double C152200 = C152154 * ae;
    const double C151911 = std::pow(C150521, -1);
    const double C152300 = std::pow(C150521, -2);
    const double C150548 = 2 * C150520;
    const double C150545 = C150520 * C150521;
    const double C152268 = 4 * C150520;
    const double C152160 = C152159 * C150501;
    const double C150555 = C150547 / C150502;
    const double C150554 = ae * C150546;
    const double C150613 = C150611 / C150610;
    const double C152 =
        ((std::pow(yP - yQ, 2) * bs[2] * std::pow(C150611 / C150610, 2) -
          (bs[1] * C150611) / C150610) *
         std::pow(ae, 2)) /
        C150520;
    const double C137 = -(C150622 * bs[1] * C150611) / C150610;
    const double C353 = -(C150615 * bs[1] * C150611) / C150610;
    const double C590 = -(C150807 * bs[1] * C150611) / C150610;
    const double C150626 = C150619 * C150624;
    const double C150635 = C150619 * C150632;
    const double C150643 = C150619 * C150641;
    const double C150655 = C150619 * C150652;
    const double C150670 = C150619 * C150667;
    const double C150682 = C150624 * C150681;
    const double C150691 = C150616 * C150681;
    const double C150705 = C150632 * C150681;
    const double C150717 = C150641 * C150681;
    const double C150738 = C150652 * C150681;
    const double C150765 = C150667 * C150681;
    const double C144 = (-(bs[1] * C150681 * C150611) / C150610) / C150502;
    const double C151904 = C151901 * C150501;
    const double C151945 = std::pow(C151932, -1);
    const double C152276 = std::pow(C151932, -2);
    const double C151946 = 2 * C151931;
    const double C152280 = C151931 * C151932;
    const double C152279 = 4 * C151931;
    const double C152269 = std::pow(C151930, 2);
    const double C151934 = C151929 * C151927;
    const double C151962 = C151961 * C151927;
    const double C152281 = std::pow(C152018, 2);
    const double C151980 = C151979 * C151927;
    const double C152283 = std::pow(C152060, 2);
    const double C152190 = C152189 * C150501;
    const double C150559 = C150519 / C150548;
    const double C150556 = C150544 / C150548;
    const double C152161 = C152160 / C150502;
    const double C150561 = 0 - C150555;
    const double C150617 = -C150613;
    const double C150625 = std::pow(C150613, 4);
    const double C150642 = std::pow(C150613, 6);
    const double C150668 = std::pow(C150613, 8);
    const double C150687 = std::pow(C150613, 2);
    const double C153 =
        ((xP - xQ) *
         (bs[2] * std::pow(C150613, 2) +
          std::pow(yP - yQ, 2) * bs[3] * std::pow(-C150613, 3)) *
         std::pow(ae, 2)) /
        C150520;
    const double C151905 = C151904 / C150502;
    const double C152324 = 4 * C152280;
    const double C152323 = C151928 * C152279;
    const double C151935 = C151934 / C151928;
    const double C151963 = C151962 / C151928;
    const double C151981 = C151980 / C151928;
    const double C152191 = C152190 / C150502;
    const double C152162 = -C152161;
    const double C150565 = C150561 * ae;
    const double C150620 = std::pow(C150617, 3);
    const double C150633 = std::pow(C150617, 5);
    const double C150653 = std::pow(C150617, 7);
    const double C150627 = C150626 * C150625;
    const double C150631 = C150624 * C150625;
    const double C150683 = C150625 * C150682;
    const double C150644 = C150643 * C150642;
    const double C150651 = C150641 * C150642;
    const double C150721 = C150642 * C150717;
    const double C150671 = C150670 * C150668;
    const double C150771 = C150668 * C150765;
    const double C150690 = C150688 * C150687;
    const double C145 = (C150622 * C150687 * C150688 * C150681) / C150502;
    const double C365 = (C150615 * C150687 * C150688 * C150681) / C150502 -
                        (ae * bs[1] * C150611) / (C150610 * C150502);
    const double C602 = (C150807 * C150687 * C150688 * C150681) / C150502;
    const double C151906 = -C151905;
    const double C151936 = -C151935;
    const double C151964 = -C151963;
    const double C151982 = -C151981;
    const double C152192 = -C152191;
    const double C152163 = std::exp(C152162);
    const double C150567 = C150565 / C150502;
    const double C150623 = C150616 * C150620;
    const double C150692 = C150620 * C150691;
    const double C154 =
        ((bs[2] * std::pow(C150613, 2) + C150619 * C150616 * C150620) *
             C150618 +
         (C150616 * C150620 + C150619 * bs[4] * std::pow(C150613, 4)) *
             C150618 * std::pow(xP - xQ, 2)) /
        C150520;
    const double C377 =
        (2 * ae * C150687 * C150688 * C150681 +
         C150615 * (C150688 * C150687 + C150619 * C150616 * C150620) *
             C150618) /
        C150520;
    const double C150636 = C150635 * C150633;
    const double C150640 = C150632 * C150633;
    const double C150707 = C150633 * C150705;
    const double C150656 = C150655 * C150653;
    const double C150666 = C150652 * C150653;
    const double C150743 = C150653 * C150738;
    const double C150706 = C150631 * C150634;
    const double C150718 = C150622 * C150631;
    const double C150865 = C150631 * C150619;
    const double C150864 = C150615 * C150631;
    const double C150863 = C150631 * ae;
    const double C151833 = C150631 * C150951;
    const double C151863 = C150807 * C150631;
    const double C150698 = C150622 * C150683;
    const double C150848 = C150615 * C150683;
    const double C150859 = ae * C150683;
    const double C150741 = C150651 * C150634;
    const double C150768 = C150622 * C150651;
    const double C151241 = C150651 * C150619;
    const double C151240 = C150615 * C150651;
    const double C151239 = C150651 * ae;
    const double C151889 = C150651 * C150951;
    const double C150724 = C150721 * C150634;
    const double C150737 = C150622 * C150721;
    const double C151041 = C150615 * C150721;
    const double C151233 = ae * C150721;
    const double C151334 = C150721 * C150951;
    const double C151371 = C150807 * C150721;
    const double C150774 = C150771 * C150634;
    const double C151288 = C150622 * C150771;
    const double C151451 = C150615 * C150771;
    const double C150693 = C150690 * ae;
    const double C614 =
        ((zP - zQ) * (C150690 + C150619 * C150616 * C150620) * C150618) /
        C150520;
    const double C138 = C150690 * C150634 - (bs[1] * C150611) / C150610;
    const double C352 = C150615 * C150622 * C150690;
    const double C354 = C150690 * C150619 - (bs[1] * C150611) / C150610;
    const double C589 = C150807 * C150622 * C150690;
    const double C591 = C150690 * C150951 - (bs[1] * C150611) / C150610;
    const double C1155 = C150807 * C150615 * C150690;
    const double C151907 = std::exp(C151906);
    const double C151937 = std::exp(C151936);
    const double C151965 = std::exp(C151964);
    const double C151983 = std::exp(C151982);
    const double C152193 = std::exp(C152192);
    const double C164 = C152163 * C153;
    const double C150508 = C150507 * C152163;
    const double C134 =
        -((C152163 - (C150500 * 2 * C150501 * C150500 * C152163) / C150502) *
          2 * C150501) /
        C150502;
    const double C135 = -(2 * C150501 * C150500 * C152163) / C150502;
    const double C152176 = C152163 * C152174;
    const double C152179 = C151911 * C152163;
    const double C152303 = C152163 * C152175;
    const double C152302 = C152163 / C150521;
    const double C23162 = C152300 * C152163;
    const double C150568 = C150567 - C150556;
    const double C150628 = C150623 + C150627;
    const double C150699 = C150622 * C150623;
    const double C150850 = C150615 * C150623;
    const double C150849 = C150623 * ae;
    const double C139 =
        2 * C150622 * C150690 + C150622 * (C150690 + C150623 * C150634);
    const double C351 = C150615 * (C150690 + C150623 * C150634);
    const double C588 = C150807 * (C150690 + C150623 * C150634);
    const double C1442 =
        2 * C150615 * C150690 + C150615 * (C150690 + C150623 * C150619);
    const double C1624 = C150807 * (C150690 + C150623 * C150619);
    const double C2564 =
        2 * C150807 * C150690 + C150807 * (C150690 + C150623 * C150951);
    const double C2565 = 3 * (C150690 + C150623 * C150951) +
                         C150807 * (2 * C150807 * C150623 +
                                    C150807 * (C150623 + C150631 * C150951));
    const double C150694 = C150615 * C150692;
    const double C146 =
        (C150687 * C150688 * C150681 + C150692 * C150634) / C150502;
    const double C147 =
        (2 * C150622 * C150692 + C150622 * (C150692 + C150683 * C150634)) /
        C150502;
    const double C363 = (C150615 * (C150692 + C150683 * C150634) +
                         (C150690 + C150623 * C150634) * ae) /
                        C150502;
    const double C364 =
        (C150615 * C150622 * C150692 + C150622 * C150690 * ae) / C150502;
    const double C600 = (C150807 * (C150692 + C150683 * C150634)) / C150502;
    const double C601 = (C150807 * C150622 * C150692) / C150502;
    const double C603 =
        (C150687 * C150688 * C150681 + C150692 * C150951) / C150502;
    const double C2572 =
        (2 * C150807 * C150692 + C150807 * (C150692 + C150683 * C150951)) /
        C150502;
    const double C167 = C152163 * C154;
    const double C150637 = C150631 + C150636;
    const double C150645 = C150640 + C150644;
    const double C150719 = C150640 * C150634;
    const double C150740 = C150622 * C150640;
    const double C151044 = C150640 * C150619;
    const double C151043 = C150615 * C150640;
    const double C151042 = C150640 * ae;
    const double C151864 = C150640 * C150951;
    const double C151888 = C150807 * C150640;
    const double C150709 = C150707 * C150634;
    const double C150716 = C150622 * C150707;
    const double C150862 = C150615 * C150707;
    const double C151037 = ae * C150707;
    const double C151171 = C150807 * C150707;
    const double C151698 = C150707 * C150951;
    const double C2573 = (3 * (C150692 + C150683 * C150951) +
                          C150807 * (2 * C150807 * C150683 +
                                     C150807 * (C150683 + C150707 * C150951))) /
                         C150502;
    const double C150657 = C150651 + C150656;
    const double C150672 = C150666 + C150671;
    const double C150769 = C150666 * C150634;
    const double C151289 = C150622 * C150666;
    const double C151454 = C150666 * C150619;
    const double C151453 = C150615 * C150666;
    const double C151452 = C150666 * ae;
    const double C150746 = C150743 * C150634;
    const double C150764 = C150622 * C150743;
    const double C151238 = C150615 * C150743;
    const double C151445 = ae * C150743;
    const double C151507 = C150743 * C150951;
    const double C151533 = C150807 * C150743;
    const double C150708 = C150623 + C150706;
    const double C150722 = 2 * C150718;
    const double C150839 = C150615 * C150718;
    const double C150838 = C150718 * ae;
    const double C150869 = C150623 + C150865;
    const double C150868 = C150864 * ae;
    const double C151045 = 2 * C150864;
    const double C151834 = C150623 + C151833;
    const double C151865 = 2 * C151863;
    const double C150700 = C150615 * C150698;
    const double C604 = (C150622 * C150692 + C150698 * C150951) / C150502;
    const double C150866 = 2 * C150859;
    const double C150745 = C150640 + C150741;
    const double C150772 = 2 * C150768;
    const double C151080 = C150768 * C150619;
    const double C151079 = C150615 * C150768;
    const double C151078 = C150768 * ae;
    const double C151871 = C150768 * C150951;
    const double C151249 = C150640 + C151241;
    const double C151248 = C151240 * ae;
    const double C151455 = 2 * C151240;
    const double C151881 = C151240 * C150951;
    const double C151891 = C150640 + C151889;
    const double C150726 = C150707 + C150724;
    const double C150742 = 2 * C150737;
    const double C150885 = C150615 * C150737;
    const double C151073 = ae * C150737;
    const double C151184 = C150807 * C150737;
    const double C151701 = C150737 * C150951;
    const double C151246 = 2 * C151233;
    const double C151339 = C150707 + C151334;
    const double C151378 = ae * C151371;
    const double C151578 = 2 * C151371;
    const double C150776 = C150743 + C150774;
    const double C151296 = C150615 * C151288;
    const double C15288 = C152163 * C614;
    const double C151908 = C151907 * C151902;
    const double C151912 = C151911 * C151907;
    const double C152264 = C151907 / C150521;
    const double C152263 = C151907 * C151903;
    const double C6222 = C152300 * C151907;
    const double C151939 = C151937 * C151930;
    const double C151938 = C151937 / C151932;
    const double C151948 = C151945 * C151937;
    const double C152272 = C151937 * C151933;
    const double C152321 = C152276 * C151937;
    const double C152315 = C151937 * C152269;
    const double C152019 = C151965 / C151932;
    const double C152021 = C151965 * C152018;
    const double C152028 = C151945 * C151965;
    const double C152287 = C151965 * C152020;
    const double C152327 = C152276 * C151965;
    const double C152325 = C151965 * C152281;
    const double C152061 = C151983 / C151932;
    const double C152063 = C151983 * C152060;
    const double C152070 = C151945 * C151983;
    const double C152293 = C151983 * C152062;
    const double C152330 = C152276 * C151983;
    const double C152328 = C151983 * C152283;
    const double C152202 = C152193 * C152200;
    const double C152205 = C151911 * C152193;
    const double C152308 = C152193 * C152201;
    const double C152307 = C152193 / C150521;
    const double C45712 = C152300 * C152193;
    const double C150522 = 2 * C150508;
    const double C150553 = C150508 / C150520;
    const double C150549 = -4 * C150508;
    const double C6223 =
        (((-4 * C150508) / C150502 -
          (C150500 * (C152163 - (C150500 * 2 * C150508) / C150502) * 2 *
           C150501) /
              C150502) *
         ae) /
        C150502;
    const double C6224 =
        ((C152163 - (C150500 * 2 * C150508) / C150502) * ae) / C150502 -
        (0 * be) / (2 * std::pow(C150502, 2));
    const double C6225 =
        (-((C152163 - (C150500 * 2 * C150508) / C150502) * 2 * C150501) /
         C150502) /
        (2 * C150502);
    const double C6226 = (0 * ae) / C150502 - C150508 / std::pow(C150502, 2);
    const double C165 = C134 * C138;
    const double C162 = C134 * C137;
    const double C393 = C134 * C352;
    const double C630 = C134 * C589;
    const double C15293 = C134 * C591;
    const double C15287 = C134 * C590;
    const double C15996 = C134 * C1155;
    const double C163 = C135 * C145;
    const double C161 = C135 * C144;
    const double C396 = C135 * C365;
    const double C633 = C135 * C602;
    const double C152305 = C152176 / C150548;
    const double C152304 = C152176 * C152175;
    const double C152299 = C152176 / C150502;
    const double C152182 = C152179 * C152175;
    const double C31750 = C152179 / C152268;
    const double C76441 = C152179 / C150521;
    const double C152344 = C152303 / C150502;
    const double C23161 = (-2 * C151911 * C152303) / C150502;
    const double C23160 = (C152163 * std::pow(C152175, 2)) / C150520 + C152302;
    const double C150629 = C150628 * C150618;
    const double C150701 = C150699 * ae;
    const double C355 = C150622 * C150690 + C150699 * C150619;
    const double C592 = C150622 * C150690 + C150699 * C150951;
    const double C1156 = C150807 * C150615 * C150699;
    const double C1441 =
        2 * C150615 * C150699 + C150615 * (C150699 + C150718 * C150619);
    const double C1623 = C150807 * (C150699 + C150718 * C150619);
    const double C2563 =
        2 * C150807 * C150699 + C150807 * (C150699 + C150718 * C150951);
    const double C150852 = C150850 * ae;
    const double C1620 = C150615 * C150690 + C150850 * C150951;
    const double C3089 =
        2 * C150807 * C150850 + C150807 * (C150850 + C150864 * C150951);
    const double C150851 = C150848 + C150849;
    const double C168 = C134 * C139;
    const double C390 = C134 * C351;
    const double C627 = C134 * C588;
    const double C16575 = C134 * C1624;
    const double C17877 = C134 * C2564;
    const double C17885 = C134 * C2565;
    const double C150695 = C150694 + C150693;
    const double C166 = C135 * C146;
    const double C169 = C135 * C147;
    const double C391 = C135 * C363;
    const double C394 = C135 * C364;
    const double C628 = C135 * C600;
    const double C631 = C135 * C601;
    const double C634 = C135 * C603;
    const double C2589 = C135 * C2572;
    const double C150638 = C150637 * C150618;
    const double C150646 = C150645 * C150618;
    const double C150723 = C150631 + C150719;
    const double C150744 = 2 * C150740;
    const double C150888 = C150740 * C150619;
    const double C150887 = C150615 * C150740;
    const double C150886 = C150740 * ae;
    const double C151836 = C150740 * C150951;
    const double C151870 = C150807 * C150740;
    const double C2566 = 3 * (C150699 + C150718 * C150951) +
                         C150807 * (2 * C150807 * C150718 +
                                    C150807 * (C150718 + C150740 * C150951));
    const double C151050 = C150631 + C151044;
    const double C151049 = C151043 * ae;
    const double C151242 = 2 * C151043;
    const double C151857 = C151043 * C150951;
    const double C151880 = C150807 * C151043;
    const double C9540 = 3 * (C150850 + C150864 * C150951) +
                         C150807 * (2 * C150807 * C150864 +
                                    C150807 * (C150864 + C151043 * C150951));
    const double C151048 = C151041 + C151042;
    const double C151866 = C150631 + C151864;
    const double C151890 = 2 * C151888;
    const double C150711 = C150683 + C150709;
    const double C150720 = 2 * C150716;
    const double C150837 = C150615 * C150716;
    const double C150882 = ae * C150716;
    const double C2571 =
        (2 * C150807 * C150698 + C150807 * (C150698 + C150716 * C150951)) /
        C150502;
    const double C2574 = (3 * (C150698 + C150716 * C150951) +
                          C150807 * (2 * C150807 * C150716 +
                                     C150807 * (C150716 + C150737 * C150951))) /
                         C150502;
    const double C150867 = C150862 + C150863;
    const double C151047 = 2 * C151037;
    const double C151176 = ae * C151171;
    const double C151724 = 2 * C151171;
    const double C151699 = C150683 + C151698;
    const double C2590 = C135 * C2573;
    const double C150658 = C150657 * C150618;
    const double C150673 = C150672 * C150618;
    const double C150773 = C150651 + C150769;
    const double C151299 = C151289 * C150619;
    const double C151298 = C150615 * C151289;
    const double C151297 = C151289 * ae;
    const double C151464 = C150651 + C151454;
    const double C151463 = C151453 * ae;
    const double C151462 = C151451 + C151452;
    const double C150748 = C150721 + C150746;
    const double C150770 = 2 * C150764;
    const double C151077 = C150615 * C150764;
    const double C151283 = ae * C150764;
    const double C151352 = C150764 * C150951;
    const double C151390 = C150807 * C150764;
    const double C151247 = C151238 + C151239;
    const double C151461 = 2 * C151445;
    const double C151514 = C150721 + C151507;
    const double C151542 = ae * C151533;
    const double C150710 = C150708 * ae;
    const double C140 = 3 * (C150690 + C150623 * C150634) +
                        C150622 * (2 * C150699 + C150622 * C150708);
    const double C350 = C150615 * (2 * C150699 + C150622 * C150708);
    const double C356 = C150690 + C150623 * C150634 + C150708 * C150619;
    const double C587 = C150807 * (2 * C150699 + C150622 * C150708);
    const double C593 = C150690 + C150623 * C150634 + C150708 * C150951;
    const double C1157 = C150807 * C150615 * C150708;
    const double C150841 = C150839 * ae;
    const double C1619 = C150615 * C150699 + C150839 * C150951;
    const double C150872 = C150869 * ae;
    const double C1443 = 3 * (C150690 + C150623 * C150619) +
                         C150615 * (2 * C150850 + C150615 * C150869);
    const double C1625 = C150690 + C150623 * C150619 + C150869 * C150951;
    const double C2163 = C150807 * (2 * C150850 + C150615 * C150869);
    const double C17867 =
        4 * (2 * C150807 * C150623 + C150807 * C151834) +
        C150807 *
            (3 * C151834 + C150807 * (2 * C150807 * C150631 +
                                      C150807 * (C150631 + C150640 * C150951)));
    const double C636 = C135 * C604;
    const double C150747 = C150622 * C150745;
    const double C150767 = 3 * C150745;
    const double C150911 = C150745 * C150619;
    const double C150910 = C150615 * C150745;
    const double C150909 = C150745 * ae;
    const double C151839 = C150745 * C150951;
    const double C151086 = C150740 + C151080;
    const double C151085 = C151079 * ae;
    const double C151290 = 2 * C151079;
    const double C151877 = C151079 * C150951;
    const double C151873 = C150740 + C151871;
    const double C151254 = C150615 * C151249;
    const double C151253 = C151249 * ae;
    const double C151456 = 3 * C151249;
    const double C151860 = C151249 * C150951;
    const double C151883 = C151043 + C151881;
    const double C151892 = C150807 * C151891;
    const double C150728 = C150622 * C150726;
    const double C150736 = 3 * C150726;
    const double C150825 = C150615 * C150726;
    const double C150905 = ae * C150726;
    const double C151083 = 2 * C151073;
    const double C151189 = ae * C151184;
    const double C151728 = 2 * C151184;
    const double C151702 = C150716 + C151701;
    const double C151344 = ae * C151339;
    const double C151725 = C150807 * C151339;
    const double C151734 = 3 * C151339;
    const double C151384 = 2 * C151378;
    const double C150778 = C150622 * C150776;
    const double C151113 = C150615 * C150776;
    const double C152266 = C151908 / C150548;
    const double C152265 = C151908 * C151903;
    const double C152262 = C151908 / C150502;
    const double C151915 = C151912 * C151903;
    const double C125 = C151912 / C152268;
    const double C67858 = C151912 / C150521;
    const double C6220 = (C151907 * std::pow(C151903, 2)) / C150520 + C152264;
    const double C152312 = C152263 / C150502;
    const double C6221 = (-2 * C151911 * C152263) / C150502;
    const double C151940 = C151939 * C151933;
    const double C151947 = C151939 / C151946;
    const double C152273 = C151945 * C151939;
    const double C152271 = C151939 / C151928;
    const double C347 = (C151937 * std::pow(C151933, 2)) / C151931 + C151938;
    const double C151949 = C151948 * C151933;
    const double C152277 = C151930 * C151948;
    const double C152275 = 2 * C151948;
    const double C152331 = C151948 / C152279;
    const double C133 = C151948 / C152324;
    const double C3722 = C151948 / C151932;
    const double C152317 = C152272 / C151928;
    const double C348 = (-2 * C151945 * C152272) / C151928;
    const double C152351 = C152315 / C151931;
    const double C1345 = (C151965 * std::pow(C152020, 2)) / C151931 + C152019;
    const double C152022 = C152021 * C152020;
    const double C152027 = C152021 / C151946;
    const double C152285 = C152021 / C151928;
    const double C152282 = C151945 * C152021;
    const double C152029 = C152028 * C152020;
    const double C152291 = C152018 * C152028;
    const double C152290 = 2 * C152028;
    const double C152337 = C152028 / C152279;
    const double C1437 = C152028 / C152324;
    const double C3719 = C152028 / C151932;
    const double C152333 = C152287 / C151928;
    const double C1346 = (-2 * C151945 * C152287) / C151928;
    const double C152356 = C152325 / C151931;
    const double C2325 = (C151983 * std::pow(C152062, 2)) / C151931 + C152061;
    const double C152064 = C152063 * C152062;
    const double C152069 = C152063 / C151946;
    const double C152286 = C152063 / C151928;
    const double C152284 = C151945 * C152063;
    const double C152071 = C152070 * C152062;
    const double C152297 = C152060 * C152070;
    const double C152296 = 2 * C152070;
    const double C152343 = C152070 / C152279;
    const double C2560 = C152070 / C152324;
    const double C4913 = C152070 / C151932;
    const double C152339 = C152293 / C151928;
    const double C2326 = (-2 * C151945 * C152293) / C151928;
    const double C152358 = C152328 / C151931;
    const double C152310 = C152202 / C150548;
    const double C152309 = C152202 * C152201;
    const double C152301 = C152202 / C150502;
    const double C152208 = C152205 * C152201;
    const double C62297 = C152205 / C152268;
    const double C115085 = C152205 / C150521;
    const double C152347 = C152308 / C150502;
    const double C45711 = (-2 * C151911 * C152308) / C150502;
    const double C45710 = (C152193 * std::pow(C152201, 2)) / C150520 + C152307;
    const double C150524 = C150500 * C150522;
    const double C23170 =
        ((-C150522 / C150502) / C150521 - (0 * be) / C150502) / C150521 -
        (0 * be) / C150502;
    const double C67862 = (-C150522 / C150502) / C150521 - (0 * be) / C150502;
    const double C150564 = C150560 - C150553;
    const double C150557 = C150549 / C150502;
    const double C6245 = C6223 * C139;
    const double C6236 = C6223 * C138;
    const double C6230 = C6223 * C137;
    const double C6522 = C6223 * C352;
    const double C6516 = C6223 * C351;
    const double C6822 = C6223 * C589;
    const double C6816 = C6223 * C588;
    const double C54425 = C6223 * C2564;
    const double C54419 = C6223 * C591;
    const double C54415 = C6223 * C590;
    const double C55128 = C6223 * C1155;
    const double C55719 = C6223 * C1624;
    const double C57038 = C6223 * C2565;
    const double C6246 = C6224 * C147;
    const double C6237 = C6224 * C146;
    const double C6231 = C6224 * C145;
    const double C6228 = C6224 * C144;
    const double C6526 = C6224 * C365;
    const double C6523 = C6224 * C364;
    const double C6517 = C6224 * C363;
    const double C6830 = C6224 * C604;
    const double C6827 = C6224 * C603;
    const double C6826 = C6224 * C602;
    const double C6823 = C6224 * C601;
    const double C6817 = C6224 * C600;
    const double C9556 = C6224 * C2573;
    const double C9555 = C6224 * C2572;
    const double C6239 = C6225 * C351;
    const double C6233 = C6225 * C352;
    const double C54417 = C6225 * C1155;
    const double C55130 = C6225 * C1624;
    const double C6240 = C6226 * C363;
    const double C6234 = C6226 * C364;
    const double C6229 = C6226 * C365;
    const double C181 = C162 + C163;
    const double C15307 = C15287 + C633;
    const double C152345 = C152304 / C150520;
    const double C6238 = C152299 * C154;
    const double C6232 = C152299 * C153;
    const double C54416 = C152299 * C614;
    const double C152306 = C152182 / C150502;
    const double C67854 = -C152344;
    const double C23192 = C23160 * C154;
    const double C23177 = C23160 * C153;
    const double C37841 = C23160 * C614;
    const double C155 =
        (2 * C150622 * C150629 +
         C150622 * (C150629 + (C150624 * C150625 +
                               C150619 * bs[5] * std::pow(C150617, 5)) *
                                  C150618 * std::pow(C150622, 2))) /
        C150520;
    const double C376 = (2 * ae * C150622 * C150620 * C150616 * C150681 +
                         C150615 * C150622 * C150629) /
                        C150520;
    const double C613 = ((zP - zQ) * C150622 * C150629) / C150520;
    const double C615 = ((C150690 + C150619 * C150616 * C150620) * C150618 +
                         C150629 * std::pow(zP - zQ, 2)) /
                        C150520;
    const double C1167 =
        (2 * ae * C150807 * C150692 + C150615 * C150807 * C150629) / C150520;
    const double C150702 = C150700 + C150701;
    const double C398 = C134 * C355;
    const double C6529 = C6223 * C355;
    const double C6519 = C6225 * C355;
    const double C635 = C134 * C592;
    const double C6829 = C6223 * C592;
    const double C1175 = C134 * C1156;
    const double C6819 = C6225 * C1156;
    const double C7601 = C6223 * C1156;
    const double C1809 = C134 * C1441;
    const double C6532 = C6225 * C1441;
    const double C8446 = C6223 * C1441;
    const double C2022 = C134 * C1623;
    const double C7604 = C6225 * C1623;
    const double C8758 = C6223 * C1623;
    const double C2948 = C134 * C2563;
    const double C10074 = C6223 * C2563;
    const double C16571 = C134 * C1620;
    const double C54421 = C6225 * C1620;
    const double C55132 = C6223 * C1620;
    const double C18602 = C134 * C3089;
    const double C54423 = C6225 * C3089;
    const double C55712 = C6223 * C3089;
    const double C150854 = ae * C150851;
    const double C150853 = C150615 * C150851;
    const double C150861 = 2 * C150851;
    const double C150965 = C150807 * C150851;
    const double C150696 = ae * C150695;
    const double C366 = (C150687 * C150688 * C150681 + C150615 * C150695 +
                         C150615 * C150690 * ae) /
                        C150502;
    const double C1161 = (C150807 * C150695) / C150502;
    const double C1632 = (C150695 + C150851 * C150951) / C150502;
    const double C182 = C165 + C166;
    const double C183 = C168 + C169;
    const double C416 = C390 + C391;
    const double C417 = C393 + C394;
    const double C653 = C627 + C628;
    const double C654 = C630 + C631;
    const double C15308 = C15293 + C634;
    const double C17890 = C17877 + C2589;
    const double C150836 = C150622 * C150638;
    const double C150860 = C150615 * C150638;
    const double C150998 = C150807 * C150638;
    const double C156 =
        (3 * (C150629 + C150638 * C150634) +
         C150622 *
             (2 * C150622 * C150638 +
              C150622 * (C150638 + (C150632 * C150633 +
                                    C150619 * bs[6] * std::pow(C150613, 6)) *
                                       C150618 * C150634))) /
        C150520;
    const double C375 =
        (2 * ae * (C150620 * C150616 * C150681 + C150683 * C150634) +
         C150615 * (C150629 + C150638 * C150634)) /
        C150520;
    const double C612 = ((zP - zQ) * (C150629 + C150638 * C150634)) / C150520;
    const double C616 =
        (C150622 * C150629 + C150622 * C150638 * std::pow(zP - zQ, 2)) /
        C150520;
    const double C1168 =
        (2 * ae * C150807 * C150698 + C150615 * C150807 * C150622 * C150638) /
        C150520;
    const double C1644 = (2 * ae * (C150692 + C150683 * C150951) +
                          C150615 * (C150629 + C150638 * C150951)) /
                         C150520;
    const double C2580 =
        (2 * C150807 * C150629 + C150807 * (C150629 + C150638 * C150951)) /
        C150520;
    const double C150647 = C150646 * C150634;
    const double C150650 = C150622 * C150646;
    const double C151038 = C150615 * C150646;
    const double C151144 = C150646 * C150951;
    const double C151172 = C150807 * C150646;
    const double C150725 = C150622 * C150723;
    const double C150739 = 3 * C150723;
    const double C150827 = C150615 * C150723;
    const double C150826 = C150723 * ae;
    const double C1440 =
        2 * C150615 * C150708 + C150615 * (C150708 + C150723 * C150619);
    const double C1622 = C150807 * (C150708 + C150723 * C150619);
    const double C2562 =
        2 * C150807 * C150708 + C150807 * (C150708 + C150723 * C150951);
    const double C2567 = 3 * (C150708 + C150723 * C150951) +
                         C150807 * (2 * C150807 * C150723 +
                                    C150807 * (C150723 + C150745 * C150951));
    const double C150892 = C150718 + C150888;
    const double C150891 = C150887 * ae;
    const double C151081 = 2 * C150887;
    const double C3090 =
        2 * C150807 * C150839 + C150807 * (C150839 + C150887 * C150951);
    const double C9541 = 3 * (C150839 + C150887 * C150951) +
                         C150807 * (2 * C150807 * C150887 +
                                    C150807 * (C150887 + C151079 * C150951));
    const double C150890 = C150885 + C150886;
    const double C151837 = C150718 + C151836;
    const double C151872 = 2 * C151870;
    const double C17883 = C134 * C2566;
    const double C57566 = C6223 * C2566;
    const double C151054 = C150615 * C151050;
    const double C151053 = C151050 * ae;
    const double C151243 = 3 * C151050;
    const double C10283 =
        2 * C150807 * C150869 + C150807 * (C150869 + C151050 * C150951);
    const double C26493 = 3 * (C150869 + C151050 * C150951) +
                          C150807 * (2 * C150807 * C151050 +
                                     C150807 * (C151050 + C151249 * C150951));
    const double C151858 = C150864 + C151857;
    const double C151882 = 2 * C151880;
    const double C49421 = C134 * C9540;
    const double C57040 = C6225 * C9540;
    const double C57774 = C6223 * C9540;
    const double C151055 = ae * C151048;
    const double C151052 = C150615 * C151048;
    const double C151146 = C151048 * C150951;
    const double C151175 = C150807 * C151048;
    const double C151237 = 2 * C151048;
    const double C151867 = C150807 * C151866;
    const double C151887 = 3 * C151866;
    const double C150712 = C150615 * C150711;
    const double C148 = (3 * (C150692 + C150683 * C150634) +
                         C150622 * (2 * C150698 + C150622 * C150711)) /
                        C150502;
    const double C362 = (C150615 * (2 * C150698 + C150622 * C150711) +
                         (2 * C150699 + C150622 * C150708) * ae) /
                        C150502;
    const double C599 = (C150807 * (2 * C150698 + C150622 * C150711)) / C150502;
    const double C605 =
        (C150692 + C150683 * C150634 + C150711 * C150951) / C150502;
    const double C2570 =
        (2 * C150807 * C150711 + C150807 * (C150711 + C150726 * C150951)) /
        C150502;
    const double C150840 = C150837 + C150838;
    const double C150889 = 2 * C150882;
    const double C2588 = C135 * C2571;
    const double C9553 = C6224 * C2571;
    const double C2591 = C135 * C2574;
    const double C9558 = C6224 * C2574;
    const double C150873 = ae * C150867;
    const double C150871 = C150615 * C150867;
    const double C150968 = C150867 * C150951;
    const double C151000 = C150807 * C150867;
    const double C151040 = 2 * C150867;
    const double C151181 = 2 * C151176;
    const double C17870 =
        (4 * (2 * C150807 * C150683 + C150807 * C151699) +
         C150807 *
             (3 * C151699 + C150807 * (2 * C151171 + C150807 * C151339))) /
        C150502;
    const double C17893 = C17885 + C2590;
    const double C150659 = C150658 * C150634;
    const double C150665 = C150622 * C150658;
    const double C151234 = C150615 * C150658;
    const double C151335 = C150658 * C150951;
    const double C151372 = C150807 * C150658;
    const double C150674 = C150673 * C150634;
    const double C151284 = C150622 * C150673;
    const double C151446 = C150615 * C150673;
    const double C151508 = C150673 * C150951;
    const double C151534 = C150807 * C150673;
    const double C150775 = C150622 * C150773;
    const double C151116 = C150773 * C150619;
    const double C151115 = C150615 * C150773;
    const double C151114 = C150773 * ae;
    const double C151304 = C150768 + C151299;
    const double C151303 = C151298 * ae;
    const double C151302 = C151296 + C151297;
    const double C151470 = C150615 * C151464;
    const double C151469 = C151464 * ae;
    const double C151471 = ae * C151462;
    const double C151468 = C150615 * C151462;
    const double C151512 = C151462 * C150951;
    const double C151539 = C150807 * C151462;
    const double C150750 = C150622 * C150748;
    const double C150763 = 3 * C150748;
    const double C150908 = C150615 * C150748;
    const double C151109 = ae * C150748;
    const double C151197 = C150807 * C150748;
    const double C151704 = C150748 * C150951;
    const double C2575 = (3 * (C150711 + C150726 * C150951) +
                          C150807 * (2 * C150807 * C150726 +
                                     C150807 * (C150726 + C150748 * C150951))) /
                         C150502;
    const double C151084 = C151077 + C151078;
    const double C151294 = 2 * C151283;
    const double C151357 = C150737 + C151352;
    const double C151397 = ae * C151390;
    const double C151255 = ae * C151247;
    const double C151252 = C150615 * C151247;
    const double C151338 = C151247 * C150951;
    const double C151376 = C150807 * C151247;
    const double C151450 = 2 * C151247;
    const double C151520 = ae * C151514;
    const double C151579 = C150807 * C151514;
    const double C151550 = 2 * C151542;
    const double C171 = C134 * C140;
    const double C6248 = C6223 * C140;
    const double C387 = C134 * C350;
    const double C6242 = C6225 * C350;
    const double C6541 = C6223 * C350;
    const double C401 = C134 * C356;
    const double C6535 = C6223 * C356;
    const double C6513 = C6225 * C356;
    const double C624 = C134 * C587;
    const double C6841 = C6223 * C587;
    const double C638 = C134 * C593;
    const double C6835 = C6223 * C593;
    const double C1178 = C134 * C1157;
    const double C6813 = C6225 * C1157;
    const double C7607 = C6223 * C1157;
    const double C2795 = C134 * C1619;
    const double C6832 = C6225 * C1619;
    const double C9858 = C6223 * C1619;
    const double C16583 = C134 * C1625;
    const double C55134 = C6225 * C1625;
    const double C55723 = C6223 * C1625;
    const double C17299 = C134 * C2163;
    const double C55721 = C6225 * C2163;
    const double C56454 = C6223 * C2163;
    const double C48714 = C134 * C17867;
    const double C57045 = C6223 * C17867;
    const double C150749 = C150744 + C150747;
    const double C150915 = C150723 + C150911;
    const double C150914 = C150910 * ae;
    const double C151117 = 2 * C150910;
    const double C151840 = C150723 + C151839;
    const double C151090 = C150615 * C151086;
    const double C151089 = C151086 * ae;
    const double C151291 = 3 * C151086;
    const double C151878 = C150887 + C151877;
    const double C151874 = C150807 * C151873;
    const double C151258 = C151242 + C151254;
    const double C151861 = C151050 + C151860;
    const double C151884 = C150807 * C151883;
    const double C151893 = C151890 + C151892;
    const double C150730 = C150720 + C150728;
    const double C150912 = 2 * C150905;
    const double C151194 = 2 * C151189;
    const double C151349 = 2 * C151344;
    const double C151726 = C151724 + C151725;
    const double C150780 = C150770 + C150778;
    const double C152313 = C152265 / C150520;
    const double C152267 = C151915 / C150502;
    const double C76442 = -C152312;
    const double C151941 = C151940 / C151931;
    const double C152318 = 2 * C152273;
    const double C151950 = C151949 / C151928;
    const double C152322 = C152277 / C151946;
    const double C152352 = C152271 - C152317;
    const double C3375 = -C152317;
    const double C152368 = C152351 + C151938;
    const double C152023 = C152022 / C151931;
    const double C152326 = 2 * C152282;
    const double C152030 = C152029 / C151928;
    const double C152336 = C152291 / C151946;
    const double C152360 = C152285 - C152333;
    const double C3235 = -C152333;
    const double C152371 = C152356 + C152019;
    const double C152065 = C152064 / C151931;
    const double C152329 = 2 * C152284;
    const double C152072 = C152071 / C151928;
    const double C152342 = C152297 / C151946;
    const double C152363 = C152286 - C152339;
    const double C4241 = -C152339;
    const double C152372 = C152358 + C152061;
    const double C152348 = C152309 / C150520;
    const double C152311 = C152208 / C150502;
    const double C96036 = -C152347;
    const double C150525 = C150524 / C150502;
    const double C67876 = C67862 * C363;
    const double C67870 = C67862 * C364;
    const double C67865 = C67862 * C365;
    const double C31759 =
        (C150564 / C150521 - (0 * be) / C150502) / C150521 - (0 * be) / C150502;
    const double C76449 = C150564 / C150521 - (0 * be) / C150502;
    const double C6267 = C6245 + C6246;
    const double C6264 = C6236 + C6237;
    const double C6262 = C6230 + C6231;
    const double C6560 = C6522 + C6523;
    const double C6558 = C6516 + C6517;
    const double C54431 = C54419 + C6827;
    const double C54429 = C54415 + C6826;
    const double C6860 = C6822 + C6823;
    const double C6858 = C6816 + C6817;
    const double C57051 = C57038 + C9556;
    const double C54434 = C54425 + C9555;
    const double C6265 = C6239 + C6240;
    const double C6263 = C6233 + C6234;
    const double C187 = C181 + C163;
    const double C15309 = C15307 + C633;
    const double C152366 = C152302 - C152345;
    const double C152346 = C152305 - C152306;
    const double C67874 = C67854 * C154;
    const double C67868 = C67854 * C153;
    const double C85658 = C67854 * C614;
    const double C170 = C152163 * C155;
    const double C6247 = C152299 * C155;
    const double C23195 = C23160 * C155;
    const double C67883 = C67854 * C155;
    const double C395 = C152163 * C376;
    const double C6235 = C152179 * C376;
    const double C6524 = C152299 * C376;
    const double C23180 = C23161 * C376;
    const double C23476 = C23160 * C376;
    const double C67871 = C152179 * C376;
    const double C68160 = C67854 * C376;
    const double C632 = C152163 * C613;
    const double C6824 = C152299 * C613;
    const double C23778 = C23160 * C613;
    const double C68460 = C67854 * C613;
    const double C15294 = C152163 * C615;
    const double C37851 = C23160 * C615;
    const double C54420 = C152299 * C615;
    const double C85666 = C67854 * C615;
    const double C15997 = C152163 * C1167;
    const double C37843 = C23161 * C1167;
    const double C38549 = C23160 * C1167;
    const double C54418 = C152179 * C1167;
    const double C55129 = C152299 * C1167;
    const double C85660 = C152179 * C1167;
    const double C86587 = C67854 * C1167;
    const double C150703 = ae * C150702;
    const double C367 =
        (C150622 * C150692 + C150615 * C150702 + C150615 * C150699 * ae) /
        C150502;
    const double C1162 = (C150807 * C150702) / C150502;
    const double C655 = C635 + C636;
    const double C6861 = C6829 + C6830;
    const double C150855 = C150692 + C150853;
    const double C150966 = ae * C150965;
    const double C378 =
        ((C150690 + C150619 * C150616 * C150620) * C150618 + C150696 + C150696 +
         C150615 * (2 * ae * C150692 + C150615 * C150629)) /
        C150520;
    const double C397 = C135 * C366;
    const double C6527 = C6224 * C366;
    const double C6525 = C6226 * C366;
    const double C23174 = C23170 * C366;
    const double C68161 = C67862 * C366;
    const double C1174 = C135 * C1161;
    const double C6825 = C6226 * C1161;
    const double C7599 = C6224 * C1161;
    const double C68461 = C67862 * C1161;
    const double C1657 = C135 * C1632;
    const double C6828 = C6226 * C1632;
    const double C8233 = C6224 * C1632;
    const double C68464 = C67862 * C1632;
    const double C188 = C182 + C166;
    const double C189 = C183 + C169;
    const double C424 = C416 + C391;
    const double C425 = C417 + C394;
    const double C661 = C653 + C628;
    const double C662 = C654 + C631;
    const double C15310 = C15308 + C634;
    const double C17894 = C17890 + C2589;
    const double C150870 = C150866 + C150860;
    const double C2581 =
        (3 * (C150629 + C150638 * C150951) +
         C150807 * (2 * C150998 + C150807 * (C150638 + C150646 * C150951))) /
        C150520;
    const double C3097 =
        (2 * ae *
             (2 * C150807 * C150683 + C150807 * (C150683 + C150707 * C150951)) +
         C150615 * (2 * C150998 + C150807 * (C150638 + C150646 * C150951))) /
        C150520;
    const double C173 = C152163 * C156;
    const double C6250 = C152299 * C156;
    const double C23210 = C23160 * C156;
    const double C67886 = C67854 * C156;
    const double C392 = C152163 * C375;
    const double C6241 = C152179 * C375;
    const double C6518 = C152299 * C375;
    const double C23189 = C23161 * C375;
    const double C23494 = C23160 * C375;
    const double C67877 = C152179 * C375;
    const double C68154 = C67854 * C375;
    const double C629 = C152163 * C612;
    const double C6818 = C152299 * C612;
    const double C23796 = C23160 * C612;
    const double C68454 = C67854 * C612;
    const double C637 = C152163 * C616;
    const double C6831 = C152299 * C616;
    const double C23787 = C23160 * C616;
    const double C68467 = C67854 * C616;
    const double C1177 = C152163 * C1168;
    const double C6821 = C152179 * C1168;
    const double C7603 = C152299 * C1168;
    const double C23775 = C23161 * C1168;
    const double C24573 = C23160 * C1168;
    const double C68457 = C152179 * C1168;
    const double C69239 = C67854 * C1168;
    const double C16572 = C152163 * C1644;
    const double C37849 = C23161 * C1644;
    const double C39125 = C23160 * C1644;
    const double C54422 = C152179 * C1644;
    const double C55133 = C152299 * C1644;
    const double C85664 = C152179 * C1644;
    const double C87346 = C67854 * C1644;
    const double C17878 = C152163 * C2580;
    const double C40433 = C23160 * C2580;
    const double C54426 = C152299 * C2580;
    const double C89060 = C67854 * C2580;
    const double C150648 = C150638 + C150647;
    const double C150654 = 2 * C150650;
    const double C150883 = C150615 * C150650;
    const double C151004 = C150807 * C150650;
    const double C1643 = (2 * ae * (C150698 + C150716 * C150951) +
                          C150615 * (C150836 + C150650 * C150951)) /
                         C150520;
    const double C2579 =
        (2 * C150807 * C150836 + C150807 * (C150836 + C150650 * C150951)) /
        C150520;
    const double C151051 = C151047 + C151038;
    const double C151147 = C150638 + C151144;
    const double C151177 = C150615 * C151172;
    const double C151424 = 2 * C151172;
    const double C150727 = C150722 + C150725;
    const double C150829 = C150827 * ae;
    const double C1618 = C150615 * C150708 + C150827 * C150951;
    const double C3091 =
        2 * C150807 * C150827 + C150807 * (C150827 + C150910 * C150951);
    const double C150828 = C150825 + C150826;
    const double C1807 = C134 * C1440;
    const double C6538 = C6225 * C1440;
    const double C8442 = C6223 * C1440;
    const double C2020 = C134 * C1622;
    const double C7610 = C6225 * C1622;
    const double C8754 = C6223 * C1622;
    const double C2946 = C134 * C2562;
    const double C10070 = C6223 * C2562;
    const double C17881 = C134 * C2567;
    const double C150895 = C150892 * ae;
    const double C1444 = 3 * (C150699 + C150718 * C150619) +
                         C150615 * (2 * C150839 + C150615 * C150892);
    const double C1626 = C150699 + C150718 * C150619 + C150892 * C150951;
    const double C2164 = C150807 * (2 * C150839 + C150615 * C150892);
    const double C10284 =
        2 * C150807 * C150892 + C150807 * (C150892 + C151086 * C150951);
    const double C10072 = C6225 * C3090;
    const double C18198 = C134 * C3090;
    const double C57358 = C6223 * C3090;
    const double C49017 = C134 * C9541;
    const double C57564 = C6225 * C9541;
    const double C150896 = ae * C150890;
    const double C150894 = C150615 * C150890;
    const double C150972 = C150890 * C150951;
    const double C151006 = C150807 * C150890;
    const double C151076 = 2 * C150890;
    const double C17868 =
        4 * (2 * C150807 * C150718 + C150807 * C151837) +
        C150807 *
            (3 * C151837 + C150807 * (2 * C150807 * C150740 +
                                      C150807 * (C150740 + C150768 * C150951)));
    const double C151058 = C151045 + C151054;
    const double C47434 = C134 * C10283;
    const double C55730 = C6223 * C10283;
    const double C55714 = C6225 * C10283;
    const double C57772 = C6225 * C26493;
    const double C63448 = C134 * C26493;
    const double C40425 =
        4 * (2 * C150807 * C150864 + C150807 * C151858) +
        C150807 *
            (3 * C151858 + C150807 * (2 * C150807 * C151043 +
                                      C150807 * (C151043 + C151240 * C150951)));
    const double C151232 = C150646 + C151055;
    const double C151057 = C150707 + C151052;
    const double C151149 = C150867 + C151146;
    const double C151180 = ae * C151175;
    const double C151409 = 2 * C151175;
    const double C151868 = C151865 + C151867;
    const double C150713 = C150712 + C150710;
    const double C172 = C135 * C148;
    const double C6249 = C6224 * C148;
    const double C388 = C135 * C362;
    const double C6243 = C6226 * C362;
    const double C6542 = C6224 * C362;
    const double C67879 = C67862 * C362;
    const double C625 = C135 * C599;
    const double C6842 = C6224 * C599;
    const double C639 = C135 * C605;
    const double C6836 = C6224 * C605;
    const double C2587 = C135 * C2570;
    const double C9551 = C6224 * C2570;
    const double C150843 = ae * C150840;
    const double C150842 = C150615 * C150840;
    const double C150884 = 2 * C150840;
    const double C150962 = C150807 * C150840;
    const double C1631 = (C150702 + C150840 * C150951) / C150502;
    const double C2953 = C2948 + C2588;
    const double C10081 = C10074 + C9553;
    const double C17892 = C17883 + C2591;
    const double C57572 = C57566 + C9558;
    const double C151036 = C150638 + C150873;
    const double C150874 = C150683 + C150871;
    const double C150969 = C150851 + C150968;
    const double C151002 = ae * C151000;
    const double C151213 = 2 * C151000;
    const double C17887 = C135 * C17870;
    const double C57046 = C6224 * C17870;
    const double C17897 = C17893 + C2590;
    const double C150660 = C150646 + C150659;
    const double C150669 = 2 * C150665;
    const double C151074 = C150615 * C150665;
    const double C151153 = C150665 * C150951;
    const double C151185 = C150807 * C150665;
    const double C151251 = C151246 + C151234;
    const double C151340 = C150646 + C151335;
    const double C151379 = C150615 * C151372;
    const double C151558 = 2 * C151372;
    const double C150675 = C150658 + C150674;
    const double C151295 = C150615 * C151284;
    const double C151353 = C151284 * C150951;
    const double C151391 = C150807 * C151284;
    const double C151467 = C151461 + C151446;
    const double C151515 = C150658 + C151508;
    const double C151543 = C150615 * C151534;
    const double C150777 = C150772 + C150775;
    const double C151122 = C150745 + C151116;
    const double C151121 = C151115 * ae;
    const double C9542 = 3 * (C150827 + C150910 * C150951) +
                         C150807 * (2 * C150807 * C150910 +
                                    C150807 * (C150910 + C151115 * C150951));
    const double C151120 = C151113 + C151114;
    const double C151308 = C150615 * C151304;
    const double C151307 = C151304 * ae;
    const double C26494 = 3 * (C150892 + C151086 * C150951) +
                          C150807 * (2 * C150807 * C151086 +
                                     C150807 * (C151086 + C151304 * C150951));
    const double C151309 = ae * C151302;
    const double C151306 = C150615 * C151302;
    const double C151356 = C151302 * C150951;
    const double C151395 = C150807 * C151302;
    const double C151474 = C151455 + C151470;
    const double C151473 = C150743 + C151468;
    const double C151519 = C151247 + C151512;
    const double C151548 = ae * C151539;
    const double C150752 = C150742 + C150750;
    const double C150913 = C150908 + C150909;
    const double C151119 = 2 * C151109;
    const double C151202 = ae * C151197;
    const double C151705 = C150726 + C151704;
    const double C2592 = C135 * C2575;
    const double C9560 = C6224 * C2575;
    const double C151091 = ae * C151084;
    const double C151088 = C150615 * C151084;
    const double C151155 = C151084 * C150951;
    const double C151188 = C150807 * C151084;
    const double C151287 = 2 * C151084;
    const double C151362 = ae * C151357;
    const double C151729 = C150807 * C151357;
    const double C17871 =
        (4 * (2 * C150807 * C150716 + C150807 * C151702) +
         C150807 *
             (3 * C151702 + C150807 * (2 * C151184 + C150807 * C151357))) /
        C150502;
    const double C151403 = 2 * C151397;
    const double C151444 = C150658 + C151255;
    const double C151257 = C150721 + C151252;
    const double C151343 = C151048 + C151338;
    const double C151383 = ae * C151376;
    const double C151564 = 2 * C151376;
    const double C151526 = 2 * C151520;
    const double C151585 = C151578 + C151579;
    const double C150751 = C150622 * C150749;
    const double C150766 = 4 * C150749;
    const double C150816 = C150615 * C150749;
    const double C150815 = C150749 * ae;
    const double C150918 = C150915 * ae;
    const double C1445 = 3 * (C150708 + C150723 * C150619) +
                         C150615 * (2 * C150827 + C150615 * C150915);
    const double C1627 = C150708 + C150723 * C150619 + C150915 * C150951;
    const double C2165 = C150807 * (2 * C150827 + C150615 * C150915);
    const double C17869 =
        4 * (2 * C150807 * C150723 + C150807 * C151840) +
        C150807 *
            (3 * C151840 + C150807 * (2 * C150807 * C150745 +
                                      C150807 * (C150745 + C150773 * C150951)));
    const double C151094 = C151081 + C151090;
    const double C49415 =
        4 * (2 * C150807 * C150887 + C150807 * C151878) +
        C150807 *
            (3 * C151878 + C150807 * (2 * C150807 * C151079 +
                                      C150807 * (C151079 + C151298 * C150951)));
    const double C151875 = C151872 + C151874;
    const double C151262 = C150615 * C151258;
    const double C151261 = C151258 * ae;
    const double C151457 = 4 * C151258;
    const double C40426 =
        4 * (2 * C150807 * C151050 + C150807 * C151861) +
        C150807 *
            (3 * C151861 + C150807 * (2 * C150807 * C151249 +
                                      C150807 * (C151249 + C151464 * C150951)));
    const double C151885 = C151882 + C151884;
    const double C151894 = C150807 * C151893;
    const double C150731 = C150615 * C150730;
    const double C149 = (4 * (2 * C150698 + C150622 * C150711) +
                         C150622 * (3 * C150711 + C150622 * C150730)) /
                        C150502;
    const double C606 =
        (2 * C150698 + C150622 * C150711 + C150730 * C150951) / C150502;
    const double C607 = (C150807 * (3 * C150711 + C150622 * C150730)) / C150502;
    const double C150782 = C150622 * C150780;
    const double C150931 = C150615 * C150780;
    const double C152350 = C152264 - C152313;
    const double C152314 = C152266 - C152267;
    const double C151942 = C151938 - C151941;
    const double C152353 = C152318 / C151928;
    const double C151951 = C151947 - C151950;
    const double C152369 = C152352 / C151932;
    const double C152024 = C152019 - C152023;
    const double C152357 = C152326 / C151928;
    const double C152031 = C152027 - C152030;
    const double C152373 = C152360 / C151932;
    const double C152066 = C152061 - C152065;
    const double C152359 = C152329 / C151928;
    const double C152073 = C152069 - C152072;
    const double C152375 = C152363 / C151932;
    const double C152367 = C152307 - C152348;
    const double C152349 = C152310 - C152311;
    const double C150526 = C152163 - C150525;
    const double C76453 = C76449 * C366;
    const double C6277 = C6267 + C6246;
    const double C6274 = C6264 + C6237;
    const double C6272 = C6262 + C6231;
    const double C6572 = C6560 + C6523;
    const double C6570 = C6558 + C6517;
    const double C54438 = C54431 + C6827;
    const double C54436 = C54429 + C6826;
    const double C6872 = C6860 + C6823;
    const double C6870 = C6858 + C6817;
    const double C57055 = C57051 + C9556;
    const double C54441 = C54434 + C9555;
    const double C6275 = C6265 + C6240;
    const double C6273 = C6263 + C6234;
    const double C193 = C187 + C164;
    const double C15311 = C15309 + C15288;
    const double C76489 = C152366 * C156;
    const double C76474 = C152366 * C155;
    const double C76471 = C152366 * C154;
    const double C76456 = C152366 * C153;
    const double C76773 = C152366 * C375;
    const double C76755 = C152366 * C376;
    const double C77075 = C152366 * C612;
    const double C77066 = C152366 * C616;
    const double C77057 = C152366 * C613;
    const double C77852 = C152366 * C1168;
    const double C134564 = C152366 * C615;
    const double C134554 = C152366 * C614;
    const double C135262 = C152366 * C1167;
    const double C135838 = C152366 * C1644;
    const double C137140 = C152366 * C2580;
    const double C31747 =
        (C152299 - C152344) / C150521 - (C152366 * C152175) / C150502;
    const double C76468 = C152346 * C375;
    const double C76459 = C152346 * C376;
    const double C77054 = C152346 * C1168;
    const double C134562 = C152346 * C1644;
    const double C134556 = C152346 * C1167;
    const double C31748 =
        (2 * C152179 + C152366) / C150521 - (C152346 * C152175) / C150502;
    const double C31749 = C152346 / C150521 - C152182 / C150548;
    const double C379 =
        (C150622 * C150629 + C150703 + C150703 +
         C150615 * (2 * ae * C150698 + C150615 * C150622 * C150638)) /
        C150520;
    const double C399 = C135 * C367;
    const double C6530 = C6224 * C367;
    const double C6520 = C6226 * C367;
    const double C23182 = C23170 * C367;
    const double C68156 = C67862 * C367;
    const double C76461 = C76449 * C367;
    const double C1176 = C135 * C1162;
    const double C6820 = C6226 * C1162;
    const double C7602 = C6224 * C1162;
    const double C68456 = C67862 * C1162;
    const double C663 = C655 + C636;
    const double C6873 = C6861 + C6830;
    const double C150856 = C150855 + C150852;
    const double C1648 =
        (C150807 * C150629 + C150966 + C150966 +
         C150615 * (2 * ae * C150807 * C150683 + C150615 * C150807 * C150638)) /
        C150520;
    const double C16006 = C15996 + C1174;
    const double C54430 = C54417 + C6825;
    const double C55136 = C55128 + C7599;
    const double C16588 = C16571 + C1657;
    const double C54432 = C54421 + C6828;
    const double C55138 = C55132 + C8233;
    const double C194 = C188 + C167;
    const double C195 = C189 + C170;
    const double C433 = C425 + C395;
    const double C670 = C662 + C632;
    const double C15312 = C15310 + C15294;
    const double C17886 = C152163 * C2581;
    const double C40443 = C23160 * C2581;
    const double C57039 = C152299 * C2581;
    const double C89070 = C67854 * C2581;
    const double C137150 = C152366 * C2581;
    const double C18603 = C152163 * C3097;
    const double C40435 = C23161 * C3097;
    const double C41148 = C23160 * C3097;
    const double C54424 = C152179 * C3097;
    const double C55713 = C152299 * C3097;
    const double C89062 = C152179 * C3097;
    const double C90012 = C67854 * C3097;
    const double C137142 = C152346 * C3097;
    const double C137855 = C152366 * C3097;
    const double C432 = C424 + C392;
    const double C669 = C661 + C629;
    const double C17898 = C17894 + C17878;
    const double C157 =
        (4 * (2 * C150622 * C150638 + C150622 * C150648) +
         C150622 * (3 * C150648 +
                    C150622 * (2 * C150622 * C150646 +
                               C150622 * (C150646 + (C150641 * C150642 +
                                                     C150619 * bs[7] *
                                                         std::pow(C150617, 7)) *
                                                        C150618 * C150634)))) /
        C150520;
    const double C374 =
        (2 * ae *
             (2 * C150622 * C150683 +
              C150622 * (C150683 + C150633 * C150632 * C150681 * C150634)) +
         C150615 * (2 * C150622 * C150638 + C150622 * C150648)) /
        C150520;
    const double C611 =
        ((zP - zQ) * (2 * C150622 * C150638 + C150622 * C150648)) / C150520;
    const double C617 =
        (C150629 + C150638 * C150634 + C150648 * std::pow(zP - zQ, 2)) /
        C150520;
    const double C1169 =
        (2 * ae * C150807 * C150711 + C150615 * C150807 * C150648) / C150520;
    const double C150893 = C150889 + C150883;
    const double C2582 =
        (3 * (C150836 + C150650 * C150951) +
         C150807 * (2 * C151004 + C150807 * (C150650 + C150665 * C150951))) /
        C150520;
    const double C3098 =
        (2 * ae *
             (2 * C150807 * C150716 + C150807 * (C150716 + C150737 * C150951)) +
         C150615 * (2 * C151004 + C150807 * (C150650 + C150665 * C150951))) /
        C150520;
    const double C2796 = C152163 * C1643;
    const double C6834 = C152179 * C1643;
    const double C9859 = C152299 * C1643;
    const double C23790 = C23161 * C1643;
    const double C26807 = C23160 * C1643;
    const double C68470 = C152179 * C1643;
    const double C71459 = C67854 * C1643;
    const double C77069 = C152346 * C1643;
    const double C80062 = C152366 * C1643;
    const double C2949 = C152163 * C2579;
    const double C10075 = C152299 * C2579;
    const double C27019 = C23160 * C2579;
    const double C71675 = C67854 * C2579;
    const double C80274 = C152366 * C2579;
    const double C151056 = C150615 * C151051;
    const double C151231 = 2 * C151051;
    const double C9546 =
        (2 * ae *
             (3 * (C150683 + C150707 * C150951) +
              C150807 *
                  (2 * C151171 + C150807 * (C150707 + C150721 * C150951))) +
         C150615 * (3 * C151147 +
                    C150807 * (2 * C151172 +
                               C150807 * (C150646 + C150658 * C150951)))) /
        C150520;
    const double C17873 =
        (4 * (2 * C150998 + C150807 * C151147) +
         C150807 * (3 * C151147 +
                    C150807 * (2 * C151172 +
                               C150807 * (C150646 + C150658 * C150951)))) /
        C150520;
    const double C151182 = C151181 + C151177;
    const double C150729 = C150727 * ae;
    const double C370 = (C150615 * (3 * C150711 + C150622 * C150730) +
                         (3 * C150708 + C150622 * C150727) * ae) /
                        C150502;
    const double C141 = 4 * (2 * C150699 + C150622 * C150708) +
                        C150622 * (3 * C150708 + C150622 * C150727);
    const double C357 = 2 * C150699 + C150622 * C150708 + C150727 * C150619;
    const double C358 = C150615 * (3 * C150708 + C150622 * C150727);
    const double C594 = 2 * C150699 + C150622 * C150708 + C150727 * C150951;
    const double C595 = C150807 * (3 * C150708 + C150622 * C150727);
    const double C1158 = C150807 * C150615 * C150727;
    const double C1439 =
        2 * C150615 * C150727 + C150615 * (C150727 + C150749 * C150619);
    const double C1621 = C150807 * (C150727 + C150749 * C150619);
    const double C2561 =
        2 * C150807 * C150727 + C150807 * (C150727 + C150749 * C150951);
    const double C2793 = C134 * C1618;
    const double C6838 = C6225 * C1618;
    const double C9854 = C6223 * C1618;
    const double C10068 = C6225 * C3091;
    const double C18196 = C134 * C3091;
    const double C150831 = ae * C150828;
    const double C150830 = C150615 * C150828;
    const double C150907 = 2 * C150828;
    const double C150959 = C150807 * C150828;
    const double C8444 = C6225 * C1444;
    const double C9856 = C6225 * C1626;
    const double C16581 = C134 * C1626;
    const double C56248 = C6223 * C1626;
    const double C8756 = C6225 * C2164;
    const double C16804 = C134 * C2164;
    const double C106770 = C6223 * C2164;
    const double C47432 = C134 * C10284;
    const double C57356 = C6225 * C10284;
    const double C151072 = C150650 + C150896;
    const double C150897 = C150716 + C150894;
    const double C150973 = C150840 + C150972;
    const double C151008 = ae * C151006;
    const double C151218 = 2 * C151006;
    const double C48712 = C134 * C17868;
    const double C151061 = C151058 * ae;
    const double C7979 = 4 * (2 * C150850 + C150615 * C150869) +
                         C150615 * (3 * C150869 + C150615 * C151058);
    const double C8218 = 2 * C150850 + C150615 * C150869 + C151058 * C150951;
    const double C8967 = C150807 * (3 * C150869 + C150615 * C151058);
    const double C27225 =
        2 * C150807 * C151058 + C150807 * (C151058 + C151258 * C150951);
    const double C57042 = C6225 * C40425;
    const double C64762 = C134 * C40425;
    const double C151245 = C151232 + C151055;
    const double C151060 = C151057 + C151049;
    const double C151151 = ae * C151149;
    const double C151214 = C150807 * C151149;
    const double C151408 = 3 * C151149;
    const double C151370 = C151172 + C151180;
    const double C48702 =
        5 * (3 * C151834 + C150807 * C151868) +
        C150807 *
            (4 * C151868 +
             C150807 * (3 * C151866 +
                        C150807 * (2 * C150807 * C150640 +
                                   C150807 * (C150640 + C150651 * C150951))));
    const double C150714 = ae * C150713;
    const double C368 = (C150692 + C150683 * C150634 + C150615 * C150713 +
                         C150615 * C150708 * ae) /
                        C150502;
    const double C1163 = (C150807 * C150713) / C150502;
    const double C1630 = (C150713 + C150828 * C150951) / C150502;
    const double C184 = C171 + C172;
    const double C6268 = C6248 + C6249;
    const double C415 = C387 + C388;
    const double C6266 = C6242 + C6243;
    const double C6565 = C6541 + C6542;
    const double C652 = C624 + C625;
    const double C6865 = C6841 + C6842;
    const double C656 = C638 + C639;
    const double C6863 = C6835 + C6836;
    const double C2952 = C2946 + C2587;
    const double C10079 = C10070 + C9551;
    const double C150844 = C150698 + C150842;
    const double C150963 = ae * C150962;
    const double C1656 = C135 * C1631;
    const double C6833 = C6226 * C1631;
    const double C8231 = C6224 * C1631;
    const double C68469 = C67862 * C1631;
    const double C2956 = C2953 + C2588;
    const double C10085 = C10081 + C9553;
    const double C17896 = C17892 + C2591;
    const double C57574 = C57572 + C9558;
    const double C151046 = C151036 + C150873;
    const double C150875 = C150874 + C150868;
    const double C150970 = ae * C150969;
    const double C3093 = (2 * C150965 + C150807 * C150969) / C150502;
    const double C48720 = C48714 + C17887;
    const double C57054 = C57045 + C57046;
    const double C150661 = C150622 * C150660;
    const double C150664 = 3 * C150660;
    const double C150906 = C150615 * C150660;
    const double C151010 = C150807 * C150660;
    const double C1642 = (2 * ae * (C150711 + C150726 * C150951) +
                          C150615 * (C150648 + C150660 * C150951)) /
                         C150520;
    const double C2578 =
        (2 * C150807 * C150648 + C150807 * (C150648 + C150660 * C150951)) /
        C150520;
    const double C151087 = C151083 + C151074;
    const double C151156 = C150650 + C151153;
    const double C151190 = C150615 * C151185;
    const double C151433 = 2 * C151185;
    const double C151256 = C150615 * C151251;
    const double C151443 = 2 * C151251;
    const double C151345 = C150615 * C151340;
    const double C151425 = C150807 * C151340;
    const double C151557 = 3 * C151340;
    const double C151385 = C151384 + C151379;
    const double C150676 = C150622 * C150675;
    const double C151110 = C150615 * C150675;
    const double C151162 = C150675 * C150951;
    const double C151198 = C150807 * C150675;
    const double C151301 = C151294 + C151295;
    const double C151358 = C150665 + C151353;
    const double C151398 = C150615 * C151391;
    const double C151472 = C150615 * C151467;
    const double C151521 = C150615 * C151515;
    const double C151559 = C150807 * C151515;
    const double C151551 = C151550 + C151543;
    const double C150779 = C150622 * C150777;
    const double C150934 = C150777 * C150619;
    const double C150933 = C150615 * C150777;
    const double C150932 = C150777 * ae;
    const double C2568 = 3 * (C150727 + C150749 * C150951) +
                         C150807 * (2 * C150807 * C150749 +
                                    C150807 * (C150749 + C150777 * C150951));
    const double C151126 = C150615 * C151122;
    const double C151125 = C151122 * ae;
    const double C10285 =
        2 * C150807 * C150915 + C150807 * (C150915 + C151122 * C150951);
    const double C151127 = ae * C151120;
    const double C151124 = C150615 * C151120;
    const double C151164 = C151120 * C150951;
    const double C151201 = C150807 * C151120;
    const double C151312 = C151290 + C151308;
    const double C151311 = C150764 + C151306;
    const double C151361 = C151084 + C151356;
    const double C151402 = ae * C151395;
    const double C151478 = C150615 * C151474;
    const double C151477 = C151474 * ae;
    const double C33837 = 3 * (C151058 + C151258 * C150951) +
                          C150807 * (2 * C150807 * C151258 +
                                     C150807 * (C151258 + C151474 * C150951));
    const double C151476 = C151473 + C151463;
    const double C151525 = ae * C151519;
    const double C151565 = C150807 * C151519;
    const double C150754 = C150622 * C150752;
    const double C150762 = 4 * C150752;
    const double C150814 = C150615 * C150752;
    const double C150928 = ae * C150752;
    const double C2569 =
        (2 * C150807 * C150730 + C150807 * (C150730 + C150752 * C150951)) /
        C150502;
    const double C2576 = (3 * (C150730 + C150752 * C150951) +
                          C150807 * (2 * C150807 * C150752 +
                                     C150807 * (C150752 + C150780 * C150951))) /
                         C150502;
    const double C150919 = ae * C150913;
    const double C150917 = C150615 * C150913;
    const double C150976 = C150913 * C150951;
    const double C151012 = C150807 * C150913;
    const double C151112 = 2 * C150913;
    const double C151207 = 2 * C151202;
    const double C17872 =
        (4 * (2 * C150807 * C150726 + C150807 * C151705) +
         C150807 * (3 * C151705 +
                    C150807 * (2 * C151197 +
                               C150807 * (C150748 + C150776 * C150951)))) /
        C150502;
    const double C17891 = C17881 + C2592;
    const double C151282 = C150665 + C151091;
    const double C151093 = C150737 + C151088;
    const double C151158 = C150890 + C151155;
    const double C151193 = ae * C151188;
    const double C151417 = 2 * C151188;
    const double C151367 = 2 * C151362;
    const double C151730 = C151728 + C151729;
    const double C17888 = C135 * C17871;
    const double C57568 = C6224 * C17871;
    const double C151460 = C151444 + C151255;
    const double C151260 = C151257 + C151248;
    const double C151348 = ae * C151343;
    const double C151410 = C150807 * C151343;
    const double C151563 = 3 * C151343;
    const double C151532 = C151372 + C151383;
    const double C151587 = ae * C151585;
    const double C151735 = C150807 * C151585;
    const double C48704 =
        (5 * (3 * C151699 + C150807 * C151726) +
         C150807 *
             (4 * C151726 + C150807 * (3 * C151339 + C150807 * C151585))) /
        C150502;
    const double C150753 = C150739 + C150751;
    const double C150818 = C150816 * ae;
    const double C1617 = C150615 * C150727 + C150816 * C150951;
    const double C8440 = C6225 * C1445;
    const double C9852 = C6225 * C1627;
    const double C16579 = C134 * C1627;
    const double C8752 = C6225 * C2165;
    const double C16802 = C134 * C2165;
    const double C151097 = C151094 * ae;
    const double C7980 = 4 * (2 * C150839 + C150615 * C150892) +
                         C150615 * (3 * C150892 + C150615 * C151094);
    const double C8219 = 2 * C150839 + C150615 * C150892 + C151094 * C150951;
    const double C8968 = C150807 * (3 * C150892 + C150615 * C151094);
    const double C48703 =
        5 * (3 * C151837 + C150807 * C151875) +
        C150807 *
            (4 * C151875 +
             C150807 * (3 * C151873 +
                        C150807 * (2 * C150807 * C150768 +
                                   C150807 * (C150768 + C151289 * C150951))));
    const double C151265 = C151243 + C151262;
    const double C57033 =
        5 * (3 * C151858 + C150807 * C151885) +
        C150807 *
            (4 * C151885 +
             C150807 * (3 * C151883 +
                        C150807 * (2 * C150807 * C151240 +
                                   C150807 * (C151240 + C151453 * C150951))));
    const double C151895 = C151887 + C151894;
    const double C175 = C135 * C149;
    const double C6258 = C6224 * C149;
    const double C642 = C135 * C606;
    const double C6851 = C6224 * C606;
    const double C645 = C135 * C607;
    const double C6854 = C6224 * C607;
    const double C150784 = C150763 + C150782;
    const double C122 =
        (C152262 - C152312) / C150521 - (C152350 * C151903) / C150502;
    const double C123 =
        (2 * C151912 + C152350) / C150521 - (C152314 * C151903) / C150502;
    const double C124 = C152314 / C150521 - C151915 / C150548;
    const double C152270 = C151942 * C151930;
    const double C152320 = C152275 + C151942;
    const double C152278 = C151951 / C151932;
    const double C152274 = C151951 * C151930;
    const double C807 = C152369 - (C151942 * C151933) / C151928;
    const double C152288 = C152024 * C152018;
    const double C152335 = C152290 + C152024;
    const double C152292 = C152031 / C151932;
    const double C152289 = C152031 * C152018;
    const double C1795 = C152373 - (C152024 * C152020) / C151928;
    const double C152294 = C152066 * C152060;
    const double C152341 = C152296 + C152066;
    const double C152298 = C152073 / C151932;
    const double C152295 = C152073 * C152060;
    const double C2936 = C152375 - (C152066 * C152062) / C151928;
    const double C62294 =
        (C152301 - C152347) / C150521 - (C152367 * C152201) / C150502;
    const double C62295 =
        (2 * C152205 + C152367) / C150521 - (C152349 * C152201) / C150502;
    const double C62296 = C152349 / C150521 - C152208 / C150548;
    const double C150527 = C150526 * C150523;
    const double C150551 = C150526 * ae;
    const double C23166 =
        ((-(0 * be) / C150502) / C150521 -
         ((0 - (C150500 * C150519) / C150502) * be) / C150502) /
            C150521 -
        ((C150500 *
              ((-C150519 / C150502) / C150521 - (C150526 * be) / C150502) +
          C67854) *
         be) /
            C150502 +
        (-C150522 / C150502) / C150521 - (0 * be) / C150502;
    const double C23168 =
        ((-C150519 / C150502) / C150521 - (C150526 * be) / C150502) / C150521 -
        ((C150500 * ((-C150522 / C150502) / C150521 - (0 * be) / C150502) +
          C152179) *
         be) /
            C150502;
    const double C67860 =
        (-C150519 / C150502) / C150521 - (C150526 * be) / C150502;
    const double C6287 = C6277 + C6247;
    const double C6284 = C6274 + C6238;
    const double C6282 = C6272 + C6232;
    const double C6584 = C6572 + C6524;
    const double C6582 = C6570 + C6518;
    const double C54444 = C54438 + C54420;
    const double C54442 = C54436 + C54416;
    const double C6884 = C6872 + C6824;
    const double C6882 = C6870 + C6818;
    const double C54447 = C54441 + C54426;
    const double C6285 = C6275 + C6241;
    const double C6283 = C6273 + C6235;
    const double C15313 = C15311 * C6220;
    const double C46150 = C15311 * C152262;
    const double C62591 = C15311 * C151907;
    const double C96475 = C15311 * C152350;
    const double C115523 = C15311 * C76442;
    const double C400 = C152163 * C379;
    const double C6531 = C152299 * C379;
    const double C6521 = C152179 * C379;
    const double C23183 = C23162 * C379;
    const double C23485 = C23160 * C379;
    const double C23473 = C23161 * C379;
    const double C68167 = C67854 * C379;
    const double C68157 = C152179 * C379;
    const double C76462 = C76441 * C379;
    const double C76764 = C152366 * C379;
    const double C76752 = C152346 * C379;
    const double C418 = C398 + C399;
    const double C6561 = C6529 + C6530;
    const double C6559 = C6519 + C6520;
    const double C1188 = C1175 + C1176;
    const double C6859 = C6819 + C6820;
    const double C7621 = C7601 + C7602;
    const double C671 = C663 + C637;
    const double C6885 = C6873 + C6831;
    const double C150857 = ae * C150856;
    const double C1450 =
        (2 * C150695 + C150615 * C150856 + (C150690 + C150623 * C150619) * ae) /
        C150502;
    const double C1636 = (C150807 * C150856) / C150502;
    const double C16576 = C152163 * C1648;
    const double C37845 = C23162 * C1648;
    const double C38551 = C23161 * C1648;
    const double C39131 = C23160 * C1648;
    const double C55131 = C152179 * C1648;
    const double C55720 = C152299 * C1648;
    const double C86589 = C152179 * C1648;
    const double C87350 = C67854 * C1648;
    const double C134558 = C76441 * C1648;
    const double C135264 = C152346 * C1648;
    const double C135844 = C152366 * C1648;
    const double C16007 = C16006 + C1174;
    const double C54437 = C54430 + C6825;
    const double C55140 = C55136 + C7599;
    const double C16593 = C16588 + C1657;
    const double C54439 = C54432 + C6828;
    const double C55142 = C55138 + C8233;
    const double C15295 = C670 * C6220;
    const double C15289 = C670 * C6221;
    const double C46156 = C670 * C152262;
    const double C46151 = C670 * C151912;
    const double C62595 = C670 * C151907;
    const double C96481 = C670 * C152350;
    const double C96476 = C670 * C152314;
    const double C115529 = C670 * C76442;
    const double C115524 = C670 * C151912;
    const double C15314 = C15312 * C6220;
    const double C46152 = C15312 * C152262;
    const double C62592 = C15312 * C151907;
    const double C96480 = C15312 * C152350;
    const double C115525 = C15312 * C76442;
    const double C17901 = C17897 + C17886;
    const double C57059 = C57055 + C57039;
    const double C15301 = C669 * C6220;
    const double C15296 = C669 * C6221;
    const double C15290 = C669 * C6222;
    const double C46162 = C669 * C152262;
    const double C46157 = C669 * C151912;
    const double C62599 = C669 * C151907;
    const double C96487 = C669 * C152350;
    const double C96482 = C669 * C152314;
    const double C96477 = C669 * C67858;
    const double C115535 = C669 * C76442;
    const double C115530 = C669 * C151912;
    const double C17902 = C17898 * C6220;
    const double C46155 = C17898 * C152262;
    const double C62593 = C17898 * C151907;
    const double C98992 = C17898 * C152350;
    const double C115528 = C17898 * C76442;
    const double C176 = C152163 * C157;
    const double C6259 = C152299 * C157;
    const double C67895 = C67854 * C157;
    const double C389 = C152163 * C374;
    const double C6244 = C152179 * C374;
    const double C6543 = C152299 * C374;
    const double C23198 = C23161 * C374;
    const double C24053 = C23160 * C374;
    const double C67880 = C152179 * C374;
    const double C68179 = C67854 * C374;
    const double C76477 = C152346 * C374;
    const double C77332 = C152366 * C374;
    const double C626 = C152163 * C611;
    const double C6843 = C152299 * C611;
    const double C24265 = C23160 * C611;
    const double C68479 = C67854 * C611;
    const double C77544 = C152366 * C611;
    const double C640 = C152163 * C617;
    const double C6837 = C152299 * C617;
    const double C23811 = C23160 * C617;
    const double C68473 = C67854 * C617;
    const double C77090 = C152366 * C617;
    const double C1180 = C152163 * C1169;
    const double C6815 = C152179 * C1169;
    const double C7609 = C152299 * C1169;
    const double C23799 = C23161 * C1169;
    const double C24588 = C23160 * C1169;
    const double C68451 = C152179 * C1169;
    const double C69245 = C67854 * C1169;
    const double C77078 = C152346 * C1169;
    const double C77867 = C152366 * C1169;
    const double C17884 = C152163 * C2582;
    const double C57567 = C152299 * C2582;
    const double C89066 = C67854 * C2582;
    const double C10073 = C152179 * C3098;
    const double C18199 = C152163 * C3098;
    const double C27017 = C23161 * C3098;
    const double C57359 = C152299 * C3098;
    const double C71673 = C152179 * C3098;
    const double C80272 = C152346 * C3098;
    const double C89483 = C67854 * C3098;
    const double C40441 = C23161 * C9546;
    const double C49422 = C152163 * C9546;
    const double C57041 = C152179 * C9546;
    const double C57775 = C152299 * C9546;
    const double C89068 = C152179 * C9546;
    const double C137148 = C152346 * C9546;
    const double C146060 = C67854 * C9546;
    const double C48715 = C152163 * C17873;
    const double C57047 = C152299 * C17873;
    const double C145365 = C67854 * C17873;
    const double C150732 = C150731 + C150729;
    const double C408 = C135 * C370;
    const double C6252 = C6226 * C370;
    const double C6554 = C6224 * C370;
    const double C67888 = C67862 * C370;
    const double C174 = C134 * C141;
    const double C6257 = C6223 * C141;
    const double C404 = C134 * C357;
    const double C6550 = C6223 * C357;
    const double C6544 = C6225 * C357;
    const double C407 = C134 * C358;
    const double C6251 = C6225 * C358;
    const double C7092 = C6223 * C358;
    const double C641 = C134 * C594;
    const double C6850 = C6223 * C594;
    const double C644 = C134 * C595;
    const double C7299 = C6223 * C595;
    const double C1181 = C134 * C1158;
    const double C6844 = C6225 * C1158;
    const double C7616 = C6223 * C1158;
    const double C1805 = C134 * C1439;
    const double C6547 = C6225 * C1439;
    const double C2018 = C134 * C1621;
    const double C7613 = C6225 * C1621;
    const double C2944 = C134 * C2561;
    const double C150832 = C150711 + C150830;
    const double C150960 = ae * C150959;
    const double C151082 = C151072 + C150896;
    const double C150898 = C150897 + C150891;
    const double C150974 = ae * C150973;
    const double C3094 = (2 * C150962 + C150807 * C150973) / C150502;
    const double C48136 = C134 * C8218;
    const double C55725 = C6225 * C8218;
    const double C56458 = C6223 * C8218;
    const double C56456 = C6225 * C8967;
    const double C55727 = C6225 * C27225;
    const double C63914 = C134 * C27225;
    const double C151063 = ae * C151060;
    const double C151062 = C150615 * C151060;
    const double C151145 = C151060 * C150951;
    const double C151174 = C150807 * C151060;
    const double C151236 = 3 * C151060;
    const double C151215 = C151213 + C151214;
    const double C151377 = C151370 + C151180;
    const double C64299 = C134 * C48702;
    const double C380 = (C150629 + C150638 * C150634 + C150714 + C150714 +
                         C150615 * (2 * ae * C150711 + C150615 * C150648)) /
                        C150520;
    const double C402 = C135 * C368;
    const double C6536 = C6224 * C368;
    const double C6514 = C6226 * C368;
    const double C23185 = C23170 * C368;
    const double C68150 = C67862 * C368;
    const double C76464 = C76449 * C368;
    const double C1179 = C135 * C1163;
    const double C6814 = C6226 * C1163;
    const double C7608 = C6224 * C1163;
    const double C68450 = C67862 * C1163;
    const double C1655 = C135 * C1630;
    const double C6839 = C6226 * C1630;
    const double C8229 = C6224 * C1630;
    const double C68475 = C67862 * C1630;
    const double C190 = C184 + C172;
    const double C6278 = C6268 + C6249;
    const double C423 = C415 + C388;
    const double C6276 = C6266 + C6243;
    const double C6577 = C6565 + C6542;
    const double C660 = C652 + C625;
    const double C6877 = C6865 + C6842;
    const double C664 = C656 + C639;
    const double C6875 = C6863 + C6836;
    const double C2955 = C2952 + C2587;
    const double C10083 = C10079 + C9551;
    const double C150845 = C150844 + C150841;
    const double C1647 =
        (C150807 * C150836 + C150963 + C150963 +
         C150615 * (2 * ae * C150807 * C150716 + C150615 * C150807 * C150650)) /
        C150520;
    const double C2800 = C2795 + C1656;
    const double C6862 = C6832 + C6833;
    const double C9865 = C9858 + C8231;
    const double C2959 = C2956 + C2949;
    const double C10089 = C10085 + C10075;
    const double C151059 = C151046 + C151056;
    const double C150877 = ae * C150875;
    const double C150876 = C150615 * C150875;
    const double C150999 = C150807 * C150875;
    const double C151039 = 3 * C150875;
    const double C1637 = (C150856 + C150875 * C150951) / C150502;
    const double C1649 = (C150629 + C150638 * C150951 + C150970 + C150970 +
                          C150615 * (2 * ae * (C150683 + C150707 * C150951) +
                                     C150615 * (C150638 + C150646 * C150951))) /
                         C150520;
    const double C3102 = C135 * C3093;
    const double C9554 = C6226 * C3093;
    const double C10293 = C6224 * C3093;
    const double C71154 = C67862 * C3093;
    const double C48722 = C48720 + C17887;
    const double C57058 = C57054 + C57046;
    const double C150662 = C150654 + C150661;
    const double C150916 = C150912 + C150906;
    const double C2583 =
        (3 * (C150648 + C150660 * C150951) +
         C150807 * (2 * C151010 + C150807 * (C150660 + C150675 * C150951))) /
        C150520;
    const double C3099 =
        (2 * ae *
             (2 * C150807 * C150726 + C150807 * (C150726 + C150748 * C150951)) +
         C150615 * (2 * C151010 + C150807 * (C150660 + C150675 * C150951))) /
        C150520;
    const double C2794 = C152163 * C1642;
    const double C6840 = C152179 * C1642;
    const double C9855 = C152299 * C1642;
    const double C23808 = C23161 * C1642;
    const double C68476 = C152179 * C1642;
    const double C71455 = C67854 * C1642;
    const double C77087 = C152346 * C1642;
    const double C2947 = C152163 * C2578;
    const double C10071 = C152299 * C2578;
    const double C71671 = C67854 * C2578;
    const double C151092 = C150615 * C151087;
    const double C151281 = 2 * C151087;
    const double C9547 =
        (2 * ae *
             (3 * (C150716 + C150737 * C150951) +
              C150807 *
                  (2 * C151184 + C150807 * (C150737 + C150764 * C150951))) +
         C150615 *
             (3 * C151156 +
              C150807 * (2 * C151185 +
                         C150807 * (C150665 + C150622 * C150673 * C150951)))) /
        C150520;
    const double C17874 =
        (4 * (2 * C151004 + C150807 * C151156) +
         C150807 *
             (3 * C151156 +
              C150807 * (2 * C151185 +
                         C150807 * (C150665 + C150622 * C150673 * C150951)))) /
        C150520;
    const double C151195 = C151194 + C151190;
    const double C151259 = C151245 + C151256;
    const double C151350 = C151349 + C151345;
    const double C151429 = C151424 + C151425;
    const double C151386 = C150615 * C151385;
    const double C151531 = 2 * C151385;
    const double C150677 = C150669 + C150676;
    const double C151123 = C151119 + C151110;
    const double C151165 = C150660 + C151162;
    const double C151203 = C150615 * C151198;
    const double C151305 = C150615 * C151301;
    const double C151363 = C150615 * C151358;
    const double C151434 = C150807 * C151358;
    const double C151404 = C151403 + C151398;
    const double C151527 = C151526 + C151521;
    const double C151566 = C151558 + C151559;
    const double C151552 = C150615 * C151551;
    const double C150781 = C150767 + C150779;
    const double C150938 = C150749 + C150934;
    const double C150937 = C150933 * ae;
    const double C3092 =
        2 * C150807 * C150816 + C150807 * (C150816 + C150933 * C150951);
    const double C150936 = C150931 + C150932;
    const double C151130 = C151117 + C151126;
    const double C151129 = C150748 + C151124;
    const double C151167 = C150913 + C151164;
    const double C151206 = ae * C151201;
    const double C151316 = C150615 * C151312;
    const double C151315 = C151312 * ae;
    const double C27226 =
        2 * C150807 * C151094 + C150807 * (C151094 + C151312 * C150951);
    const double C151314 = C151311 + C151303;
    const double C151366 = ae * C151361;
    const double C151418 = C150807 * C151361;
    const double C151481 = C151456 + C151478;
    const double C151482 = ae * C151476;
    const double C151480 = C150615 * C151476;
    const double C151511 = C151476 * C150951;
    const double C151538 = C150807 * C151476;
    const double C151568 = C151564 + C151565;
    const double C150756 = C150736 + C150754;
    const double C150817 = C150814 + C150815;
    const double C150935 = 2 * C150928;
    const double C2586 = C135 * C2569;
    const double C10076 = C6224 * C2569;
    const double C2593 = C135 * C2576;
    const double C151108 = C150660 + C150919;
    const double C150920 = C150726 + C150917;
    const double C150977 = C150828 + C150976;
    const double C151014 = ae * C151012;
    const double C151223 = 2 * C151012;
    const double C17889 = C135 * C17872;
    const double C17895 = C17891 + C2592;
    const double C151293 = C151282 + C151091;
    const double C151096 = C151093 + C151085;
    const double C151160 = ae * C151158;
    const double C151219 = C150807 * C151158;
    const double C151416 = 3 * C151158;
    const double C151389 = C151185 + C151193;
    const double C48705 =
        (5 * (3 * C151702 + C150807 * C151730) +
         C150807 * (4 * C151730 +
                    C150807 * (3 * C151357 +
                               C150807 * (2 * C151390 +
                                          C150807 * (C150764 +
                                                     C151288 * C150951))))) /
        C150502;
    const double C48719 = C48712 + C17888;
    const double C151475 = C151460 + C151472;
    const double C151266 = ae * C151260;
    const double C151264 = C150615 * C151260;
    const double C151337 = C151260 * C150951;
    const double C151375 = C150807 * C151260;
    const double C151449 = 3 * C151260;
    const double C151506 = C151340 + C151348;
    const double C151411 = C151409 + C151410;
    const double C151541 = C151532 + C151383;
    const double C151589 = 2 * C151587;
    const double C151736 = C151734 + C151735;
    const double C48716 = C135 * C48704;
    const double C57048 = C6224 * C48704;
    const double C150755 = C150753 * ae;
    const double C142 = 5 * (3 * C150708 + C150622 * C150727) +
                        C150622 * (4 * C150727 + C150622 * C150753);
    const double C359 = 3 * C150708 + C150622 * C150727 + C150753 * C150619;
    const double C360 = C150615 * (4 * C150727 + C150622 * C150753);
    const double C596 = 3 * C150708 + C150622 * C150727 + C150753 * C150951;
    const double C597 = C150807 * (4 * C150727 + C150622 * C150753);
    const double C1159 = C150807 * C150615 * C150753;
    const double C2791 = C134 * C1617;
    const double C6847 = C6225 * C1617;
    const double C47641 = C134 * C8219;
    const double C56250 = C6225 * C8219;
    const double C106768 = C6225 * C8968;
    const double C151269 = C151265 * ae;
    const double C24949 = 5 * (3 * C150869 + C150615 * C151058) +
                          C150615 * (4 * C151058 + C150615 * C151265);
    const double C25185 = 3 * C150869 + C150615 * C151058 + C151265 * C150951;
    const double C25923 = C150807 * (4 * C151058 + C150615 * C151265);
    const double C64294 =
        6 * (4 * C151868 + C150807 * C151895) +
        C150807 *
            (5 * C151895 +
             C150807 * (4 * C151893 +
                        C150807 * (3 * C151891 +
                                   C150807 * (2 * C150807 * C150651 +
                                              C150807 * (C150651 +
                                                         C150666 * C150951)))));
    const double C150786 = C150622 * C150784;
    const double C150984 = C150615 * C150784;
    const double C152316 = C152270 / C151928;
    const double C152354 = C152320 / C151932;
    const double C152355 = C152322 + C152278;
    const double C809 = C152278 - C151949 / C151946;
    const double C152319 = C152274 / C151928;
    const double C152332 = C152288 / C151928;
    const double C152361 = C152335 / C151932;
    const double C152362 = C152336 + C152292;
    const double C1797 = C152292 - C152029 / C151946;
    const double C152334 = C152289 / C151928;
    const double C152338 = C152294 / C151928;
    const double C152364 = C152341 / C151932;
    const double C152365 = C152342 + C152298;
    const double C2938 = C152298 - C152071 / C151946;
    const double C152340 = C152295 / C151928;
    const double C150534 = C150500 * C150527;
    const double C23165 =
        (-(be * -2 * C150519) / C150520) / C150521 -
        ((2 * ((-C150519 / C150502) / C150521 - (C150526 * be) / C150502) -
          (C150500 *
           ((-4 * C150508) / C150502 - (C150500 * C150527) / C150502) * be) /
              C150502) *
         be) /
            C150502 -
        C150527 / (2 * C150520);
    const double C23169 = (-C150527 / C150502) / (4 * C150520);
    const double C31758 = (-C150527 / C150502) / (4 * C150545);
    const double C67861 = (-C150527 / C150502) / C150521;
    const double C76448 = (-C150527 / C150502) / (4 * C150520);
    const double C150558 = C150551 / C150502;
    const double C23211 = C23166 * C149;
    const double C23209 = C23166 * C148;
    const double C23194 = C23166 * C147;
    const double C23191 = C23166 * C146;
    const double C23176 = C23166 * C145;
    const double C23172 = C23166 * C144;
    const double C23512 = C23166 * C362;
    const double C23508 = C23166 * C368;
    const double C23493 = C23166 * C363;
    const double C23484 = C23166 * C367;
    const double C23480 = C23166 * C366;
    const double C23479 = C23166 * C365;
    const double C23475 = C23166 * C364;
    const double C23815 = C23166 * C606;
    const double C23814 = C23166 * C599;
    const double C23810 = C23166 * C605;
    const double C23795 = C23166 * C600;
    const double C23786 = C23166 * C604;
    const double C23782 = C23166 * C603;
    const double C23781 = C23166 * C602;
    const double C23777 = C23166 * C601;
    const double C24054 = C23166 * C370;
    const double C24266 = C23166 * C607;
    const double C24587 = C23166 * C1163;
    const double C24572 = C23166 * C1162;
    const double C24568 = C23166 * C1161;
    const double C25197 = C23166 * C1632;
    const double C25194 = C23166 * C1631;
    const double C26509 = C23166 * C2574;
    const double C26506 = C23166 * C2573;
    const double C26505 = C23166 * C2572;
    const double C26502 = C23166 * C2571;
    const double C26808 = C23166 * C1630;
    const double C27020 = C23166 * C2570;
    const double C27232 = C23166 * C3093;
    const double C40444 = C23166 * C17870;
    const double C23206 = C23168 * C370;
    const double C23197 = C23168 * C362;
    const double C23188 = C23168 * C363;
    const double C23179 = C23168 * C364;
    const double C23173 = C23168 * C365;
    const double C23496 = C23168 * C368;
    const double C23478 = C23168 * C366;
    const double C23472 = C23168 * C367;
    const double C23807 = C23168 * C1630;
    const double C23798 = C23168 * C1163;
    const double C23789 = C23168 * C1631;
    const double C23783 = C23168 * C1632;
    const double C23780 = C23168 * C1161;
    const double C23774 = C23168 * C1162;
    const double C26504 = C23168 * C3093;
    const double C67894 = C67860 * C149;
    const double C67885 = C67860 * C148;
    const double C67882 = C67860 * C147;
    const double C67873 = C67860 * C146;
    const double C67867 = C67860 * C145;
    const double C67864 = C67860 * C144;
    const double C68190 = C67860 * C370;
    const double C68178 = C67860 * C362;
    const double C68172 = C67860 * C368;
    const double C68166 = C67860 * C367;
    const double C68163 = C67860 * C366;
    const double C68162 = C67860 * C365;
    const double C68159 = C67860 * C364;
    const double C68153 = C67860 * C363;
    const double C68490 = C67860 * C607;
    const double C68487 = C67860 * C606;
    const double C68478 = C67860 * C599;
    const double C68472 = C67860 * C605;
    const double C68466 = C67860 * C604;
    const double C68463 = C67860 * C603;
    const double C68462 = C67860 * C602;
    const double C68459 = C67860 * C601;
    const double C68453 = C67860 * C600;
    const double C69244 = C67860 * C1163;
    const double C69238 = C67860 * C1162;
    const double C69235 = C67860 * C1161;
    const double C69851 = C67860 * C1632;
    const double C69849 = C67860 * C1631;
    const double C69847 = C67860 * C1630;
    const double C71160 = C67860 * C2575;
    const double C71158 = C67860 * C2574;
    const double C71156 = C67860 * C2573;
    const double C71155 = C67860 * C2572;
    const double C71153 = C67860 * C2571;
    const double C71151 = C67860 * C2570;
    const double C71676 = C67860 * C2569;
    const double C71884 = C67860 * C3093;
    const double C89073 = C67860 * C17871;
    const double C89071 = C67860 * C17870;
    const double C145366 = C67860 * C48704;
    const double C6292 = C6284 + C6285;
    const double C426 = C418 + C399;
    const double C6573 = C6561 + C6530;
    const double C6571 = C6559 + C6520;
    const double C1192 = C1188 + C1176;
    const double C6871 = C6859 + C6820;
    const double C7627 = C7621 + C7602;
    const double C15298 = C671 * C6220;
    const double C15292 = C671 * C6221;
    const double C46158 = C671 * C152262;
    const double C46153 = C671 * C151912;
    const double C62596 = C671 * C151907;
    const double C96484 = C671 * C152350;
    const double C96479 = C671 * C152314;
    const double C115531 = C671 * C76442;
    const double C115526 = C671 * C151912;
    const double C1458 =
        (2 * (2 * ae * C150692 + C150615 * C150629) + C150857 + C150857 +
         C150615 * (C150629 + C150854 + C150854 +
                    C150615 * (2 * ae * C150683 + C150615 * C150638))) /
        C150520;
    const double C1467 = C135 * C1450;
    const double C6528 = C6226 * C1450;
    const double C7994 = C6224 * C1450;
    const double C23481 = C23168 * C1450;
    const double C23477 = C23170 * C1450;
    const double C24961 = C23166 * C1450;
    const double C31764 = C31759 * C1450;
    const double C68164 = C67862 * C1450;
    const double C69621 = C67860 * C1450;
    const double C76756 = C76449 * C1450;
    const double C1661 = C135 * C1636;
    const double C7600 = C6226 * C1636;
    const double C8239 = C6224 * C1636;
    const double C23779 = C23170 * C1636;
    const double C24569 = C23168 * C1636;
    const double C25203 = C23166 * C1636;
    const double C69236 = C67862 * C1636;
    const double C69857 = C67860 * C1636;
    const double C77058 = C76449 * C1636;
    const double C16008 = C16007 + C15997;
    const double C54443 = C54437 + C54418;
    const double C55144 = C55140 + C55129;
    const double C16598 = C16593 + C16572;
    const double C54445 = C54439 + C54422;
    const double C55146 = C55142 + C55133;
    const double C17905 = C17901 * C6220;
    const double C48710 = C17901 * C152262;
    const double C62594 = C17901 * C151907;
    const double C98997 = C17901 * C152350;
    const double C118051 = C17901 * C76442;
    const double C17900 = C17896 + C17884;
    const double C57576 = C57574 + C57567;
    const double C150733 = ae * C150732;
    const double C369 = (2 * C150698 + C150622 * C150711 + C150615 * C150732 +
                         C150615 * C150727 * ae) /
                        C150502;
    const double C1164 = (C150807 * C150732) / C150502;
    const double C185 = C174 + C175;
    const double C6271 = C6257 + C6258;
    const double C421 = C407 + C408;
    const double C6269 = C6251 + C6252;
    const double C7097 = C7092 + C6554;
    const double C657 = C641 + C642;
    const double C6868 = C6850 + C6851;
    const double C658 = C644 + C645;
    const double C7304 = C7299 + C6854;
    const double C150833 = C150832 + C150829;
    const double C1646 =
        (C150807 * C150648 + C150960 + C150960 +
         C150615 * (2 * ae * C150807 * C150726 + C150615 * C150807 * C150660)) /
        C150520;
    const double C150900 = ae * C150898;
    const double C150899 = C150615 * C150898;
    const double C151005 = C150807 * C150898;
    const double C151075 = 3 * C150898;
    const double C1650 = (C150836 + C150650 * C150951 + C150974 + C150974 +
                          C150615 * (2 * ae * (C150716 + C150737 * C150951) +
                                     C150615 * (C150650 + C150665 * C150951))) /
                         C150520;
    const double C3103 = C135 * C3094;
    const double C9552 = C6226 * C3094;
    const double C10295 = C6224 * C3094;
    const double C26501 = C23168 * C3094;
    const double C27235 = C23166 * C3094;
    const double C71152 = C67862 * C3094;
    const double C71886 = C67860 * C3094;
    const double C151244 = C151231 + C151063;
    const double C151064 = C151040 + C151062;
    const double C151148 = C150875 + C151145;
    const double C151179 = ae * C151174;
    const double C151426 = 2 * C151174;
    const double C151216 = ae * C151215;
    const double C9543 = (3 * C150969 + C150807 * C151215) / C150502;
    const double C403 = C152163 * C380;
    const double C6537 = C152299 * C380;
    const double C6515 = C152179 * C380;
    const double C23186 = C23162 * C380;
    const double C23509 = C23160 * C380;
    const double C23497 = C23161 * C380;
    const double C68173 = C67854 * C380;
    const double C68151 = C152179 * C380;
    const double C76465 = C76441 * C380;
    const double C76788 = C152366 * C380;
    const double C76776 = C152346 * C380;
    const double C419 = C401 + C402;
    const double C6563 = C6535 + C6536;
    const double C6557 = C6513 + C6514;
    const double C1189 = C1178 + C1179;
    const double C6857 = C6813 + C6814;
    const double C7623 = C7607 + C7608;
    const double C2799 = C2793 + C1655;
    const double C6864 = C6838 + C6839;
    const double C9863 = C9854 + C8229;
    const double C196 = C190 + C173;
    const double C6288 = C6278 + C6250;
    const double C431 = C423 + C389;
    const double C6286 = C6276 + C6244;
    const double C6589 = C6577 + C6543;
    const double C668 = C660 + C626;
    const double C6889 = C6877 + C6843;
    const double C672 = C664 + C640;
    const double C6887 = C6875 + C6837;
    const double C150846 = ae * C150845;
    const double C1449 =
        (2 * C150702 + C150615 * C150845 + (C150699 + C150718 * C150619) * ae) /
        C150502;
    const double C1635 = (C150807 * C150845) / C150502;
    const double C1638 = (C150845 + C150898 * C150951) / C150502;
    const double C2023 = C152163 * C1647;
    const double C7606 = C152179 * C1647;
    const double C8759 = C152299 * C1647;
    const double C23772 = C23162 * C1647;
    const double C24576 = C23161 * C1647;
    const double C25717 = C23160 * C1647;
    const double C69242 = C152179 * C1647;
    const double C70377 = C67854 * C1647;
    const double C77051 = C76441 * C1647;
    const double C77855 = C152346 * C1647;
    const double C78984 = C152366 * C1647;
    const double C2803 = C2800 + C1656;
    const double C6874 = C6862 + C6833;
    const double C9869 = C9865 + C8231;
    const double C17879 = C2959 * C6221;
    const double C18405 = C2959 * C6220;
    const double C46160 = C2959 * C152262;
    const double C46154 = C2959 * C151912;
    const double C62597 = C2959 * C151907;
    const double C98993 = C2959 * C152314;
    const double C99487 = C2959 * C152350;
    const double C115533 = C2959 * C76442;
    const double C115527 = C2959 * C151912;
    const double C150878 = C150861 + C150876;
    const double C151001 = ae * C150999;
    const double C1662 = C135 * C1637;
    const double C8240 = C6224 * C1637;
    const double C8232 = C6226 * C1637;
    const double C23784 = C23170 * C1637;
    const double C25204 = C23166 * C1637;
    const double C25196 = C23168 * C1637;
    const double C69858 = C67860 * C1637;
    const double C69850 = C67862 * C1637;
    const double C77063 = C76449 * C1637;
    const double C16584 = C152163 * C1649;
    const double C37847 = C23162 * C1649;
    const double C39141 = C23160 * C1649;
    const double C39127 = C23161 * C1649;
    const double C55135 = C152179 * C1649;
    const double C55724 = C152299 * C1649;
    const double C87360 = C67854 * C1649;
    const double C87348 = C152179 * C1649;
    const double C134560 = C76441 * C1649;
    const double C135854 = C152366 * C1649;
    const double C135840 = C152346 * C1649;
    const double C18607 = C18602 + C3102;
    const double C54433 = C54423 + C9554;
    const double C55735 = C55712 + C10293;
    const double C48724 = C48722 + C48715;
    const double C57062 = C57058 + C57047;
    const double C158 =
        (5 * (3 * C150648 + C150622 * C150662) +
         C150622 *
             (4 * C150662 +
              C150622 *
                  (3 * C150660 +
                   C150622 * (2 * C150622 * C150658 +
                              C150622 * (C150658 + (C150652 * C150653 +
                                                    C150619 * bs[8] *
                                                        std::pow(C150613, 8)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C382 = (2 * ae * (3 * C150711 + C150622 * C150730) +
                         C150615 * (3 * C150648 + C150622 * C150662)) /
                        C150520;
    const double C618 = (2 * C150622 * C150638 + C150622 * C150648 +
                         C150662 * std::pow(zP - zQ, 2)) /
                        C150520;
    const double C619 =
        ((zP - zQ) * (3 * C150648 + C150622 * C150662)) / C150520;
    const double C1170 =
        (2 * ae * C150807 * C150730 + C150615 * C150807 * C150662) / C150520;
    const double C17882 = C152163 * C2583;
    const double C10069 = C152179 * C3099;
    const double C18197 = C152163 * C3099;
    const double C71669 = C152179 * C3099;
    const double C2958 = C2955 + C2947;
    const double C10087 = C10083 + C10071;
    const double C151095 = C151082 + C151092;
    const double C49018 = C152163 * C9547;
    const double C57565 = C152179 * C9547;
    const double C89064 = C152179 * C9547;
    const double C48713 = C152163 * C17874;
    const double C151263 = C150615 * C151259;
    const double C151442 = 3 * C151259;
    const double C151387 = C151377 + C151386;
    const double C150678 = C150622 * C150677;
    const double C150929 = C150615 * C150677;
    const double C151016 = C150807 * C150677;
    const double C1641 = (2 * ae * (C150730 + C150752 * C150951) +
                          C150615 * (C150662 + C150677 * C150951)) /
                         C150520;
    const double C2577 =
        (2 * C150807 * C150662 + C150807 * (C150662 + C150677 * C150951)) /
        C150520;
    const double C151128 = C150615 * C151123;
    const double C9548 =
        (2 * ae *
             (3 * (C150726 + C150748 * C150951) +
              C150807 *
                  (2 * C151197 + C150807 * (C150748 + C150776 * C150951))) +
         C150615 *
             (3 * C151165 +
              C150807 *
                  (2 * C151198 +
                   C150807 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150951)))) /
        C150520;
    const double C17875 =
        (4 * (2 * C151010 + C150807 * C151165) +
         C150807 *
             (3 * C151165 +
              C150807 *
                  (2 * C151198 +
                   C150807 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150951)))) /
        C150520;
    const double C151208 = C151207 + C151203;
    const double C151368 = C151367 + C151363;
    const double C151438 = C151433 + C151434;
    const double C151405 = C150615 * C151404;
    const double C151528 = C150615 * C151527;
    const double C151569 = C150807 * C151566;
    const double C151580 = C150615 * C151566;
    const double C150783 = C150622 * C150781;
    const double C150986 = C150615 * C150781;
    const double C150985 = C150781 * ae;
    const double C1801 =
        2 * C150615 * C150753 + C150615 * (C150753 + C150781 * C150619);
    const double C2014 = C150807 * (C150753 + C150781 * C150619);
    const double C2940 =
        2 * C150807 * C150753 + C150807 * (C150753 + C150781 * C150951);
    const double C150941 = C150938 * ae;
    const double C1446 = 3 * (C150727 + C150749 * C150619) +
                         C150615 * (2 * C150816 + C150615 * C150938);
    const double C1628 = C150727 + C150749 * C150619 + C150938 * C150951;
    const double C2166 = C150807 * (2 * C150816 + C150615 * C150938);
    const double C150942 = ae * C150936;
    const double C150940 = C150615 * C150936;
    const double C150980 = C150936 * C150951;
    const double C151018 = C150807 * C150936;
    const double C151133 = C151130 * ae;
    const double C7981 = 4 * (2 * C150827 + C150615 * C150915) +
                         C150615 * (3 * C150915 + C150615 * C151130);
    const double C8220 = 2 * C150827 + C150615 * C150915 + C151130 * C150951;
    const double C8969 = C150807 * (3 * C150915 + C150615 * C151130);
    const double C151132 = C151129 + C151121;
    const double C151169 = ae * C151167;
    const double C151224 = C150807 * C151167;
    const double C151319 = C151291 + C151316;
    const double C151320 = ae * C151314;
    const double C151318 = C150615 * C151314;
    const double C151355 = C151314 * C150951;
    const double C151394 = C150807 * C151314;
    const double C151419 = C151417 + C151418;
    const double C151486 = C150615 * C151481;
    const double C151485 = C151481 * ae;
    const double C34310 =
        2 * C150807 * C151265 + C150807 * (C151265 + C151481 * C150951);
    const double C151484 = C151450 + C151480;
    const double C151518 = C151260 + C151511;
    const double C151547 = ae * C151538;
    const double C151571 = C150807 * C151568;
    const double C151584 = ae * C151568;
    const double C150757 = C150615 * C150756;
    const double C150 = (5 * (3 * C150711 + C150622 * C150730) +
                         C150622 * (4 * C150730 + C150622 * C150756)) /
                        C150502;
    const double C372 = (C150615 * (4 * C150730 + C150622 * C150756) +
                         (4 * C150727 + C150622 * C150753) * ae) /
                        C150502;
    const double C608 =
        (3 * C150711 + C150622 * C150730 + C150756 * C150951) / C150502;
    const double C609 = (C150807 * (4 * C150730 + C150622 * C150756)) / C150502;
    const double C2941 =
        (2 * C150807 * C150756 + C150807 * (C150756 + C150784 * C150951)) /
        C150502;
    const double C150820 = ae * C150817;
    const double C150819 = C150615 * C150817;
    const double C150930 = 2 * C150817;
    const double C150956 = C150807 * C150817;
    const double C1629 = (C150732 + C150817 * C150951) / C150502;
    const double C2951 = C2944 + C2586;
    const double C151118 = C151108 + C150919;
    const double C150921 = C150920 + C150914;
    const double C150978 = ae * C150977;
    const double C3095 = (2 * C150959 + C150807 * C150977) / C150502;
    const double C151310 = C151293 + C151305;
    const double C151099 = ae * C151096;
    const double C151098 = C150615 * C151096;
    const double C151154 = C151096 * C150951;
    const double C151187 = C150807 * C151096;
    const double C151286 = 3 * C151096;
    const double C151220 = C151218 + C151219;
    const double C151396 = C151389 + C151193;
    const double C48717 = C135 * C48705;
    const double C48721 = C48719 + C17888;
    const double C151479 = C150615 * C151475;
    const double C151459 = C151443 + C151266;
    const double C151268 = C151237 + C151264;
    const double C151342 = C151060 + C151337;
    const double C151382 = ae * C151375;
    const double C151561 = 2 * C151375;
    const double C151513 = C151506 + C151348;
    const double C151412 = C150807 * C151411;
    const double C151428 = ae * C151411;
    const double C151593 = 4 * C151411;
    const double C151553 = C151541 + C151552;
    const double C64295 =
        (6 * (4 * C151726 + C150807 * C151736) +
         C150807 *
             (5 * C151736 +
              C150807 *
                  (4 * C151585 +
                   C150807 * (3 * C151514 +
                              C150807 * (2 * C151533 +
                                         C150807 * (C150743 +
                                                    C150771 * C150951)))))) /
        C150502;
    const double C64302 = C64299 + C48716;
    const double C177 = C134 * C142;
    const double C410 = C134 * C359;
    const double C7090 = C6225 * C359;
    const double C815 = C134 * C360;
    const double C6254 = C6225 * C360;
    const double C647 = C134 * C596;
    const double C956 = C134 * C597;
    const double C1184 = C134 * C1159;
    const double C7297 = C6225 * C1159;
    const double C56460 = C6225 * C25185;
    const double C150788 = C150762 + C150786;
    const double C152377 = C152316 + C152369;
    const double C808 = C152354 - (C151951 * C151933) / C151928;
    const double C132 = C152355 / C151932 - C151949 / C152323;
    const double C152370 = C152319 + C152354;
    const double C152378 = C152332 + C152373;
    const double C1796 = C152361 - (C152031 * C152020) / C151928;
    const double C1436 = C152362 / C151932 - C152029 / C152323;
    const double C152374 = C152334 + C152361;
    const double C152379 = C152338 + C152375;
    const double C2937 = C152364 - (C152073 * C152062) / C151928;
    const double C2559 = C152365 / C151932 - C152071 / C152323;
    const double C152376 = C152340 + C152364;
    const double C150550 = C150534 / C150502;
    const double C23167 =
        (-(((-4 * C150508) / C150502 - C150534 / C150502) * be) / C150502) /
            C150521 -
        ((2 * ((-C150522 / C150502) / C150521 - (0 * be) / C150502) -
          C150534 / (2 * C150520)) *
         be) /
            C150502;
    const double C23208 = C23165 * C140;
    const double C23193 = C23165 * C139;
    const double C23190 = C23165 * C138;
    const double C23175 = C23165 * C137;
    const double C23507 = C23165 * C356;
    const double C23492 = C23165 * C351;
    const double C23483 = C23165 * C355;
    const double C23474 = C23165 * C352;
    const double C23809 = C23165 * C593;
    const double C23794 = C23165 * C588;
    const double C23785 = C23165 * C592;
    const double C23776 = C23165 * C589;
    const double C24052 = C23165 * C350;
    const double C24264 = C23165 * C587;
    const double C24586 = C23165 * C1157;
    const double C24571 = C23165 * C1156;
    const double C25408 = C23165 * C1441;
    const double C25716 = C23165 * C1623;
    const double C26806 = C23165 * C1619;
    const double C27018 = C23165 * C2563;
    const double C37850 = C23165 * C591;
    const double C37840 = C23165 * C590;
    const double C38548 = C23165 * C1155;
    const double C39140 = C23165 * C1625;
    const double C39130 = C23165 * C1624;
    const double C39124 = C23165 * C1620;
    const double C39850 = C23165 * C2163;
    const double C40442 = C23165 * C2565;
    const double C40432 = C23165 * C2564;
    const double C41147 = C23165 * C3089;
    const double C23202 = C23169 * C359;
    const double C23199 = C23169 * C357;
    const double C23184 = C23169 * C356;
    const double C23181 = C23169 * C355;
    const double C23501 = C23169 * C1445;
    const double C23498 = C23169 * C1440;
    const double C23489 = C23169 * C1444;
    const double C23468 = C23169 * C1441;
    const double C23803 = C23169 * C1627;
    const double C23800 = C23169 * C1622;
    const double C23791 = C23169 * C1626;
    const double C23770 = C23169 * C1623;
    const double C24048 = C23169 * C1439;
    const double C24260 = C23169 * C1621;
    const double C24580 = C23169 * C2165;
    const double C24577 = C23169 * C2164;
    const double C25404 = C23169 * C7980;
    const double C25712 = C23169 * C8968;
    const double C26802 = C23169 * C8219;
    const double C27014 = C23169 * C10284;
    const double C37846 = C23169 * C1625;
    const double C37844 = C23169 * C1624;
    const double C38552 = C23169 * C2163;
    const double C39136 = C23169 * C25185;
    const double C39134 = C23169 * C8967;
    const double C39128 = C23169 * C8218;
    const double C39854 = C23169 * C25923;
    const double C40438 = C23169 * C26493;
    const double C40436 = C23169 * C10283;
    const double C41143 = C23169 * C27225;
    const double C67890 = C67861 * C360;
    const double C67887 = C67861 * C358;
    const double C67878 = C67861 * C350;
    const double C67875 = C67861 * C351;
    const double C67869 = C67861 * C352;
    const double C68183 = C67861 * C1439;
    const double C68180 = C67861 * C357;
    const double C68174 = C67861 * C1440;
    const double C68168 = C67861 * C1441;
    const double C68155 = C67861 * C355;
    const double C68149 = C67861 * C356;
    const double C68483 = C67861 * C1617;
    const double C68480 = C67861 * C1158;
    const double C68474 = C67861 * C1618;
    const double C68468 = C67861 * C1619;
    const double C68455 = C67861 * C1156;
    const double C68449 = C67861 * C1157;
    const double C68726 = C67861 * C359;
    const double C68933 = C67861 * C1159;
    const double C69249 = C67861 * C1621;
    const double C69246 = C67861 * C1622;
    const double C69240 = C67861 * C1623;
    const double C70062 = C67861 * C1444;
    const double C70058 = C67861 * C1445;
    const double C70374 = C67861 * C2164;
    const double C70370 = C67861 * C2165;
    const double C71456 = C67861 * C1626;
    const double C71452 = C67861 * C1627;
    const double C71672 = C67861 * C3090;
    const double C71668 = C67861 * C3091;
    const double C85663 = C67861 * C1620;
    const double C85659 = C67861 * C1155;
    const double C86588 = C67861 * C1624;
    const double C87357 = C67861 * C8218;
    const double C87353 = C67861 * C8219;
    const double C87351 = C67861 * C2163;
    const double C87347 = C67861 * C1625;
    const double C87647 = C67861 * C8968;
    const double C88305 = C67861 * C8967;
    const double C89067 = C67861 * C9540;
    const double C89063 = C67861 * C9541;
    const double C89061 = C67861 * C3089;
    const double C89480 = C67861 * C10284;
    const double C90009 = C67861 * C10283;
    const double C144098 = C67861 * C27225;
    const double C144792 = C67861 * C25185;
    const double C145362 = C67861 * C40425;
    const double C146057 = C67861 * C26493;
    const double C76481 = C76448 * C359;
    const double C76478 = C76448 * C357;
    const double C76463 = C76448 * C356;
    const double C76460 = C76448 * C355;
    const double C76780 = C76448 * C1445;
    const double C76777 = C76448 * C1440;
    const double C76768 = C76448 * C1444;
    const double C76747 = C76448 * C1441;
    const double C77082 = C76448 * C1627;
    const double C77079 = C76448 * C1622;
    const double C77070 = C76448 * C1626;
    const double C77049 = C76448 * C1623;
    const double C77327 = C76448 * C1439;
    const double C77539 = C76448 * C1621;
    const double C77859 = C76448 * C2165;
    const double C77856 = C76448 * C2164;
    const double C78671 = C76448 * C7980;
    const double C78979 = C76448 * C8968;
    const double C80057 = C76448 * C8219;
    const double C80269 = C76448 * C10284;
    const double C134559 = C76448 * C1625;
    const double C134557 = C76448 * C1624;
    const double C135265 = C76448 * C2163;
    const double C135849 = C76448 * C25185;
    const double C135847 = C76448 * C8967;
    const double C135841 = C76448 * C8218;
    const double C136567 = C76448 * C25923;
    const double C137145 = C76448 * C26493;
    const double C137143 = C76448 * C10283;
    const double C137850 = C76448 * C27225;
    const double C150563 = C150558 - C150559;
    const double C434 = C426 + C400;
    const double C6585 = C6573 + C6531;
    const double C6583 = C6571 + C6521;
    const double C1196 = C1192 + C1177;
    const double C6883 = C6871 + C6821;
    const double C7633 = C7627 + C7603;
    const double C46168 = C46152 + C46153;
    const double C115541 = C115525 + C115526;
    const double C16589 = C16575 + C1661;
    const double C55137 = C55130 + C7600;
    const double C55738 = C55719 + C8239;
    const double C16009 = C16008 * C6220;
    const double C46853 = C16008 * C152262;
    const double C63060 = C16008 * C151907;
    const double C97174 = C16008 * C152350;
    const double C116226 = C16008 * C76442;
    const double C16603 = C16598 * C6220;
    const double C46855 = C16598 * C152262;
    const double C63061 = C16598 * C151907;
    const double C97741 = C16598 * C152350;
    const double C116228 = C16598 * C76442;
    const double C54448 = C54444 + C54445;
    const double C17904 = C17900 * C6221;
    const double C48711 = C17900 * C151912;
    const double C49221 = C17900 * C152262;
    const double C62598 = C17900 * C151907;
    const double C98996 = C17900 * C152314;
    const double C118052 = C17900 * C151912;
    const double C118545 = C17900 * C76442;
    const double C381 =
        (2 * C150622 * C150638 + C150622 * C150648 + C150733 + C150733 +
         C150615 * (2 * ae * C150730 + C150615 * C150662)) /
        C150520;
    const double C405 = C135 * C369;
    const double C6551 = C6224 * C369;
    const double C6545 = C6226 * C369;
    const double C23200 = C23170 * C369;
    const double C23513 = C23166 * C369;
    const double C23511 = C23168 * C369;
    const double C68187 = C67860 * C369;
    const double C68181 = C67862 * C369;
    const double C76479 = C76449 * C369;
    const double C1182 = C135 * C1164;
    const double C6845 = C6226 * C1164;
    const double C7617 = C6224 * C1164;
    const double C23813 = C23168 * C1164;
    const double C24589 = C23166 * C1164;
    const double C68481 = C67862 * C1164;
    const double C69253 = C67860 * C1164;
    const double C191 = C185 + C175;
    const double C6281 = C6271 + C6258;
    const double C429 = C421 + C408;
    const double C6279 = C6269 + C6252;
    const double C7099 = C7097 + C6554;
    const double C665 = C657 + C642;
    const double C6880 = C6868 + C6851;
    const double C666 = C658 + C645;
    const double C7306 = C7304 + C6854;
    const double C150834 = ae * C150833;
    const double C1448 =
        (2 * C150713 + C150615 * C150833 + (C150708 + C150723 * C150619) * ae) /
        C150502;
    const double C1634 = (C150807 * C150833) / C150502;
    const double C2021 = C152163 * C1646;
    const double C7612 = C152179 * C1646;
    const double C8755 = C152299 * C1646;
    const double C23802 = C23162 * C1646;
    const double C24585 = C23161 * C1646;
    const double C69248 = C152179 * C1646;
    const double C70373 = C67854 * C1646;
    const double C77081 = C76441 * C1646;
    const double C77864 = C152346 * C1646;
    const double C150901 = C150884 + C150899;
    const double C151007 = ae * C151005;
    const double C9857 = C152179 * C1650;
    const double C16582 = C152163 * C1650;
    const double C23793 = C23162 * C1650;
    const double C26805 = C23161 * C1650;
    const double C56249 = C152299 * C1650;
    const double C71457 = C152179 * C1650;
    const double C77072 = C76441 * C1650;
    const double C80060 = C152346 * C1650;
    const double C87356 = C67854 * C1650;
    const double C18204 = C18198 + C3103;
    const double C10080 = C10072 + C9552;
    const double C57364 = C57358 + C10295;
    const double C151250 = C151244 + C151063;
    const double C151065 = C151064 + C151053;
    const double C151150 = ae * C151148;
    const double C10286 = (2 * C150999 + C150807 * C151148) / C150502;
    const double C10289 =
        (2 * C150998 + C150807 * C151147 + C151216 + C151216 +
         C150615 *
             (2 * ae * (2 * C151171 + C150807 * (C150707 + C150721 * C150951)) +
              C150615 *
                  (2 * C151172 + C150807 * (C150646 + C150658 * C150951)))) /
        C150520;
    const double C9557 = C6226 * C9543;
    const double C18604 = C135 * C9543;
    const double C26507 = C23168 * C9543;
    const double C41149 = C23166 * C9543;
    const double C55718 = C6224 * C9543;
    const double C71157 = C67862 * C9543;
    const double C90013 = C67860 * C9543;
    const double C427 = C419 + C402;
    const double C6575 = C6563 + C6536;
    const double C6569 = C6557 + C6514;
    const double C1193 = C1189 + C1179;
    const double C6869 = C6857 + C6814;
    const double C7629 = C7623 + C7608;
    const double C2802 = C2799 + C1655;
    const double C6876 = C6864 + C6839;
    const double C9867 = C9863 + C8229;
    const double C6293 = C6286 + C6287;
    const double C15302 = C668 * C6221;
    const double C15297 = C668 * C6222;
    const double C15703 = C668 * C6220;
    const double C46163 = C668 * C151912;
    const double C46559 = C668 * C152262;
    const double C62863 = C668 * C151907;
    const double C96488 = C668 * C152314;
    const double C96483 = C668 * C67858;
    const double C96881 = C668 * C152350;
    const double C115536 = C668 * C151912;
    const double C115932 = C668 * C76442;
    const double C15306 = C672 * C6220;
    const double C15299 = C672 * C6221;
    const double C15291 = C672 * C6222;
    const double C46164 = C672 * C152262;
    const double C46159 = C672 * C151912;
    const double C62600 = C672 * C151907;
    const double C96492 = C672 * C152350;
    const double C96485 = C672 * C152314;
    const double C96478 = C672 * C67858;
    const double C115537 = C672 * C76442;
    const double C115532 = C672 * C151912;
    const double C1457 =
        (2 * (2 * ae * C150698 + C150615 * C150836) + C150846 + C150846 +
         C150615 * (C150836 + C150843 + C150843 +
                    C150615 * (2 * ae * C150716 + C150615 * C150650))) /
        C150520;
    const double C1466 = C135 * C1449;
    const double C6533 = C6226 * C1449;
    const double C7992 = C6224 * C1449;
    const double C23487 = C23168 * C1449;
    const double C23469 = C23170 * C1449;
    const double C24958 = C23166 * C1449;
    const double C31765 = C31759 * C1449;
    const double C68169 = C67862 * C1449;
    const double C69619 = C67860 * C1449;
    const double C76748 = C76449 * C1449;
    const double C1660 = C135 * C1635;
    const double C7605 = C6226 * C1635;
    const double C8237 = C6224 * C1635;
    const double C23771 = C23170 * C1635;
    const double C24575 = C23168 * C1635;
    const double C25200 = C23166 * C1635;
    const double C69241 = C67862 * C1635;
    const double C69855 = C67860 * C1635;
    const double C77050 = C76449 * C1635;
    const double C1663 = C135 * C1638;
    const double C8242 = C6224 * C1638;
    const double C8230 = C6226 * C1638;
    const double C23792 = C23170 * C1638;
    const double C25207 = C23166 * C1638;
    const double C25193 = C23168 * C1638;
    const double C69860 = C67860 * C1638;
    const double C69848 = C67862 * C1638;
    const double C77071 = C76449 * C1638;
    const double C2806 = C2803 + C2796;
    const double C6886 = C6874 + C6834;
    const double C9873 = C9869 + C9859;
    const double C48709 = C46154 + C46155;
    const double C118050 = C115527 + C115528;
    const double C150879 = C150878 + C150872;
    const double C2171 = (2 * (2 * ae * C150807 * C150683 + C150615 * C150998) +
                          C151001 + C151001 +
                          C150615 * (C150998 + C151002 + C151002 +
                                     C150615 * (2 * ae * C150807 * C150707 +
                                                C150615 * C150807 * C150646))) /
                         C150520;
    const double C16592 = C16583 + C1662;
    const double C55740 = C55723 + C8240;
    const double C55139 = C55134 + C8232;
    const double C18608 = C18607 + C3102;
    const double C54440 = C54433 + C9554;
    const double C55744 = C55735 + C10293;
    const double C48726 = C48724 * C152262;
    const double C64298 = C48724 * C151907;
    const double C118054 = C48724 * C76442;
    const double C179 = C152163 * C158;
    const double C409 = C152163 * C382;
    const double C6253 = C152179 * C382;
    const double C7093 = C152299 * C382;
    const double C23207 = C23161 * C382;
    const double C67889 = C152179 * C382;
    const double C68729 = C67854 * C382;
    const double C76486 = C152346 * C382;
    const double C643 = C152163 * C618;
    const double C6852 = C152299 * C618;
    const double C68488 = C67854 * C618;
    const double C646 = C152163 * C619;
    const double C7300 = C152299 * C619;
    const double C68936 = C67854 * C619;
    const double C1183 = C152163 * C1170;
    const double C6846 = C152179 * C1170;
    const double C7618 = C152299 * C1170;
    const double C24263 = C23161 * C1170;
    const double C68482 = C152179 * C1170;
    const double C69254 = C67854 * C1170;
    const double C77542 = C152346 * C1170;
    const double C17899 = C17895 + C17882;
    const double C17880 = C2958 * C6222;
    const double C18404 = C2958 * C6221;
    const double C46167 = C2958 * C152262;
    const double C46161 = C2958 * C151912;
    const double C62601 = C2958 * C151907;
    const double C98994 = C2958 * C67858;
    const double C99486 = C2958 * C152314;
    const double C115540 = C2958 * C76442;
    const double C115534 = C2958 * C151912;
    const double C150679 = C150664 + C150678;
    const double C150939 = C150935 + C150929;
    const double C2584 =
        (3 * (C150662 + C150677 * C150951) +
         C150807 *
             (2 * C151016 +
              C150807 * (C150677 +
                         (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)) *
                             C150951))) /
        C150520;
    const double C3100 =
        (2 * ae *
             (2 * C150807 * C150752 + C150807 * (C150752 + C150780 * C150951)) +
         C150615 *
             (2 * C151016 +
              C150807 * (C150677 +
                         (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)) *
                             C150951))) /
        C150520;
    const double C2792 = C152163 * C1641;
    const double C6849 = C152179 * C1641;
    const double C68485 = C152179 * C1641;
    const double C2945 = C152163 * C2577;
    const double C48707 =
        (5 * (3 * C151156 + C150807 * C151438) +
         C150807 *
             (4 * C151438 +
              C150807 * (3 * C151358 +
                         C150807 * (2 * C151391 +
                                    C150807 * (C151284 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150951))))) /
        C150520;
    const double C49417 =
        (2 * ae *
             (4 * (2 * C151184 + C150807 * C151357) +
              C150807 * (3 * C151357 +
                         C150807 * (2 * C151390 +
                                    C150807 * (C150764 + C151288 * C150951)))) +
         C150615 *
             (4 * C151438 +
              C150807 * (3 * C151358 +
                         C150807 * (2 * C151391 +
                                    C150807 * (C151284 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150951))))) /
        C150520;
    const double C151572 = C151557 + C151569;
    const double C151590 = C151589 + C151580;
    const double C150785 = C150766 + C150783;
    const double C150988 = C150986 * ae;
    const double C2787 = C150615 * C150753 + C150986 * C150951;
    const double C150987 = C150984 + C150985;
    const double C150943 = C150752 + C150940;
    const double C150981 = C150817 + C150980;
    const double C151020 = ae * C151018;
    const double C151135 = ae * C151132;
    const double C151134 = C150615 * C151132;
    const double C151163 = C151132 * C150951;
    const double C151200 = C150807 * C151132;
    const double C151225 = C151223 + C151224;
    const double C151322 = C151319 * ae;
    const double C24950 = 5 * (3 * C150892 + C150615 * C151094) +
                          C150615 * (4 * C151094 + C150615 * C151319);
    const double C25186 = 3 * C150892 + C150615 * C151094 + C151319 * C150951;
    const double C25924 = C150807 * (4 * C151094 + C150615 * C151319);
    const double C151321 = C151287 + C151318;
    const double C151360 = C151096 + C151355;
    const double C151401 = ae * C151394;
    const double C151420 = C150807 * C151419;
    const double C151437 = ae * C151419;
    const double C151489 = C151457 + C151486;
    const double C151488 = C151484 + C151469;
    const double C151524 = ae * C151518;
    const double C151562 = C150807 * C151518;
    const double C151574 = C151563 + C151571;
    const double C150758 = C150757 + C150755;
    const double C178 = C135 * C150;
    const double C6260 = C6224 * C150;
    const double C67896 = C67860 * C150;
    const double C413 = C135 * C372;
    const double C6255 = C6226 * C372;
    const double C7094 = C6224 * C372;
    const double C23212 = C23168 * C372;
    const double C67891 = C67862 * C372;
    const double C68730 = C67860 * C372;
    const double C648 = C135 * C608;
    const double C6855 = C6224 * C608;
    const double C68491 = C67860 * C608;
    const double C650 = C135 * C609;
    const double C7301 = C6224 * C609;
    const double C68937 = C67860 * C609;
    const double C2950 = C135 * C2941;
    const double C150821 = C150730 + C150819;
    const double C150957 = ae * C150956;
    const double C1654 = C135 * C1629;
    const double C6848 = C6226 * C1629;
    const double C9860 = C6224 * C1629;
    const double C23816 = C23168 * C1629;
    const double C68484 = C67862 * C1629;
    const double C71460 = C67860 * C1629;
    const double C2954 = C2951 + C2586;
    const double C151131 = C151118 + C151128;
    const double C150923 = ae * C150921;
    const double C150922 = C150615 * C150921;
    const double C151011 = C150807 * C150921;
    const double C151111 = 3 * C150921;
    const double C1639 = (C150833 + C150921 * C150951) / C150502;
    const double C1651 = (C150648 + C150660 * C150951 + C150978 + C150978 +
                          C150615 * (2 * ae * (C150726 + C150748 * C150951) +
                                     C150615 * (C150660 + C150675 * C150951))) /
                         C150520;
    const double C3104 = C135 * C3095;
    const double C9550 = C6226 * C3095;
    const double C10297 = C6224 * C3095;
    const double C27021 = C23168 * C3095;
    const double C71150 = C67862 * C3095;
    const double C71888 = C67860 * C3095;
    const double C151313 = C150615 * C151310;
    const double C151292 = C151281 + C151099;
    const double C151100 = C151076 + C151098;
    const double C151157 = C150898 + C151154;
    const double C151192 = ae * C151187;
    const double C151435 = 2 * C151187;
    const double C151221 = ae * C151220;
    const double C9544 = (3 * C150973 + C150807 * C151220) / C150502;
    const double C151406 = C151396 + C151405;
    const double C48723 = C48721 + C48713;
    const double C151466 = C151459 + C151266;
    const double C151270 = C151268 + C151253;
    const double C151347 = ae * C151342;
    const double C151427 = C150807 * C151342;
    const double C151560 = 3 * C151342;
    const double C151540 = C151531 + C151382;
    const double C151529 = C151513 + C151528;
    const double C151413 = C151408 + C151412;
    const double C151554 = C150615 * C151553;
    const double C64301 = C135 * C64295;
    const double C64303 = C64302 + C48716;
    const double C150789 = C150615 * C150788;
    const double C1172 =
        (2 * ae * C150807 * C150788 +
         C150615 * C150807 *
             (4 * C150677 +
              C150622 *
                  (3 * C150675 +
                   C150622 * (2 * C150622 * C150673 +
                              C150622 * (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C151 = (6 * (4 * C150730 + C150622 * C150756) +
                         C150622 * (5 * C150756 + C150622 * C150788)) /
                        C150502;
    const double C610 =
        (4 * C150730 + C150622 * C150756 + C150788 * C150951) / C150502;
    const double C953 = (C150807 * (5 * C150756 + C150622 * C150788)) / C150502;
    const double C129 =
        (C152368 + 2 * C151942) / C151932 - (C152377 * C151933) / C151928;
    const double C130 = (C152353 + 2 * C151951 + C152377) / C151932 -
                        (C152370 * C151933) / C151928;
    const double C131 = (C152321 + C151948 / C151928 + C152370) / C151932 -
                        (C152355 * C151933) / C151928;
    const double C1433 =
        (C152371 + 2 * C152024) / C151932 - (C152378 * C152020) / C151928;
    const double C1434 = (C152357 + 2 * C152031 + C152378) / C151932 -
                         (C152374 * C152020) / C151928;
    const double C1435 = (C152327 + C152028 / C151928 + C152374) / C151932 -
                         (C152362 * C152020) / C151928;
    const double C2556 =
        (C152372 + 2 * C152066) / C151932 - (C152379 * C152062) / C151928;
    const double C2557 = (C152359 + 2 * C152073 + C152379) / C151932 -
                         (C152376 * C152062) / C151928;
    const double C2558 = (C152330 + C152070 / C151928 + C152376) / C151932 -
                         (C152365 * C152062) / C151928;
    const double C150562 = C150557 - C150550;
    const double C23205 = C23167 * C358;
    const double C23196 = C23167 * C350;
    const double C23187 = C23167 * C351;
    const double C23178 = C23167 * C352;
    const double C23504 = C23167 * C1440;
    const double C23495 = C23167 * C356;
    const double C23486 = C23167 * C1441;
    const double C23471 = C23167 * C355;
    const double C23806 = C23167 * C1618;
    const double C23797 = C23167 * C1157;
    const double C23788 = C23167 * C1619;
    const double C23773 = C23167 * C1156;
    const double C24050 = C23167 * C357;
    const double C24262 = C23167 * C1158;
    const double C24583 = C23167 * C1622;
    const double C24574 = C23167 * C1623;
    const double C25406 = C23167 * C1444;
    const double C25714 = C23167 * C2164;
    const double C26804 = C23167 * C1626;
    const double C27016 = C23167 * C3090;
    const double C37848 = C23167 * C1620;
    const double C37842 = C23167 * C1155;
    const double C38550 = C23167 * C1624;
    const double C39138 = C23167 * C8218;
    const double C39132 = C23167 * C2163;
    const double C39126 = C23167 * C1625;
    const double C39852 = C23167 * C8967;
    const double C40440 = C23167 * C9540;
    const double C40434 = C23167 * C3089;
    const double C41145 = C23167 * C10283;
    const double C23225 = C23208 + C23209;
    const double C23220 = C23193 + C23194;
    const double C23219 = C23190 + C23191;
    const double C23214 = C23175 + C23176;
    const double C23527 = C23507 + C23508;
    const double C23522 = C23492 + C23493;
    const double C23519 = C23483 + C23484;
    const double C23518 = C23474 + C23475;
    const double C23829 = C23809 + C23810;
    const double C23824 = C23794 + C23795;
    const double C23821 = C23785 + C23786;
    const double C23820 = C23776 + C23777;
    const double C24059 = C24052 + C23512;
    const double C24271 = C24264 + C23814;
    const double C24597 = C24586 + C24587;
    const double C24592 = C24571 + C24572;
    const double C26813 = C26806 + C25194;
    const double C27025 = C27018 + C26502;
    const double C37857 = C37850 + C23782;
    const double C37852 = C37840 + C23781;
    const double C38554 = C38548 + C24568;
    const double C39153 = C39140 + C25204;
    const double C39148 = C39130 + C25203;
    const double C39145 = C39124 + C25197;
    const double C40452 = C40442 + C26506;
    const double C40447 = C40432 + C26505;
    const double C41154 = C41147 + C27232;
    const double C23217 = C23184 + C23185;
    const double C23216 = C23181 + C23182;
    const double C37855 = C37846 + C23784;
    const double C37854 = C37844 + C23779;
    const double C67905 = C67887 + C67888;
    const double C67902 = C67878 + C67879;
    const double C67901 = C67875 + C67876;
    const double C67899 = C67869 + C67870;
    const double C68195 = C68155 + C68156;
    const double C68193 = C68149 + C68150;
    const double C68500 = C68474 + C68475;
    const double C68498 = C68468 + C68469;
    const double C68495 = C68455 + C68456;
    const double C68493 = C68449 + C68450;
    const double C71680 = C71672 + C71152;
    const double C85673 = C85663 + C68464;
    const double C85672 = C85659 + C68461;
    const double C86594 = C86588 + C69236;
    const double C87366 = C87347 + C69850;
    const double C89076 = C89061 + C71154;
    const double C76496 = C76463 + C76464;
    const double C76495 = C76460 + C76461;
    const double C134568 = C134559 + C77063;
    const double C134567 = C134557 + C77058;
    const double C31753 =
        ((((0 - (C150500 * C150544) / C150502) * ae) / C150502 -
          (0 * be) / C150548 + C150519 / C150502) /
             C150521 -
         ((C150500 * C150568 + 0) * be) / C150502) /
            C150521 -
        ((C150500 * (C150568 / C150521 -
                     ((C150500 * C150563 + C152299) * be) / C150502 + C150564) +
          C152366) *
         be) /
            C150502 +
        C150563 / C150521 - ((C150500 * C150564 + C152179) * be) / C150502;
    const double C31755 =
        (C150568 / C150521 - ((C150500 * C150563 + C152299) * be) / C150502 +
         C150564) /
            C150521 -
        ((C150500 * (C150563 / C150521 -
                     ((C150500 * C150564 + C152179) * be) / C150502) +
          C152346) *
         be) /
            C150502 +
        2 * (C150564 / C150521 - (0 * be) / C150502);
    const double C31757 =
        (C150563 / C150521 - ((C150500 * C150564 + C152179) * be) / C150502) /
            C150521 -
        ((C150500 * (C150564 / C150521 - (0 * be) / C150502) + C76441) * be) /
            C150502;
    const double C76445 = C150568 / C150521 -
                          ((C150500 * C150563 + C152299) * be) / C150502 +
                          C150564;
    const double C76447 =
        C150563 / C150521 - ((C150500 * C150564 + C152179) * be) / C150502;
    const double C16000 = C1196 * C6220;
    const double C15998 = C1196 * C6221;
    const double C46857 = C1196 * C152262;
    const double C46854 = C1196 * C151912;
    const double C63063 = C1196 * C151907;
    const double C97177 = C1196 * C152350;
    const double C97175 = C1196 * C152314;
    const double C116230 = C1196 * C76442;
    const double C116227 = C1196 * C151912;
    const double C104856 = C6883 + C6884;
    const double C104855 = C6884 + C6883;
    const double C16594 = C16589 + C1661;
    const double C55141 = C55137 + C7600;
    const double C55746 = C55738 + C8239;
    const double C54449 = C54448 * C151907;
    const double C48718 = C48710 + C48711;
    const double C118055 = C118051 + C118052;
    const double C406 = C152163 * C381;
    const double C6552 = C152299 * C381;
    const double C6546 = C152179 * C381;
    const double C23201 = C23162 * C381;
    const double C24051 = C23161 * C381;
    const double C68188 = C67854 * C381;
    const double C68182 = C152179 * C381;
    const double C76480 = C76441 * C381;
    const double C77330 = C152346 * C381;
    const double C420 = C404 + C405;
    const double C6568 = C6550 + C6551;
    const double C6566 = C6544 + C6545;
    const double C23222 = C23199 + C23200;
    const double C68202 = C68180 + C68181;
    const double C76501 = C76478 + C76479;
    const double C1190 = C1181 + C1182;
    const double C6866 = C6844 + C6845;
    const double C7626 = C7616 + C7617;
    const double C68502 = C68480 + C68481;
    const double C197 = C191 + C176;
    const double C6291 = C6281 + C6259;
    const double C1456 =
        (2 * (2 * ae * C150711 + C150615 * C150648) + C150834 + C150834 +
         C150615 * (C150648 + C150831 + C150831 +
                    C150615 * (2 * ae * C150726 + C150615 * C150660))) /
        C150520;
    const double C1465 = C135 * C1448;
    const double C6539 = C6226 * C1448;
    const double C7990 = C6224 * C1448;
    const double C23505 = C23168 * C1448;
    const double C23499 = C23170 * C1448;
    const double C25410 = C23166 * C1448;
    const double C31772 = C31759 * C1448;
    const double C68175 = C67862 * C1448;
    const double C69617 = C67860 * C1448;
    const double C76778 = C76449 * C1448;
    const double C1659 = C135 * C1634;
    const double C7611 = C6226 * C1634;
    const double C8235 = C6224 * C1634;
    const double C23801 = C23170 * C1634;
    const double C24584 = C23168 * C1634;
    const double C25718 = C23166 * C1634;
    const double C69247 = C67862 * C1634;
    const double C69853 = C67860 * C1634;
    const double C77080 = C76449 * C1634;
    const double C150902 = C150901 + C150895;
    const double C2172 = (2 * (2 * ae * C150807 * C150716 + C150615 * C151004) +
                          C151007 + C151007 +
                          C150615 * (C151004 + C151008 + C151008 +
                                     C150615 * (2 * ae * C150807 * C150737 +
                                                C150615 * C150807 * C150665))) /
                         C150520;
    const double C18206 = C18204 + C3103;
    const double C10084 = C10080 + C9552;
    const double C57366 = C57364 + C10295;
    const double C151267 = C151250 + C151263;
    const double C151067 = ae * C151065;
    const double C151066 = C150615 * C151065;
    const double C151173 = C150807 * C151065;
    const double C151235 = 4 * C151065;
    const double C8224 =
        (2 * (2 * ae * (C150683 + C150707 * C150951) + C150615 * C151147) +
         C151150 + C151150 +
         C150615 * (C151147 + C151151 + C151151 +
                    C150615 * (2 * ae * (C150707 + C150721 * C150951) +
                               C150615 * (C150646 + C150658 * C150951)))) /
        C150520;
    const double C10294 = C6226 * C10286;
    const double C16585 = C135 * C10286;
    const double C26503 = C23170 * C10286;
    const double C27233 = C23168 * C10286;
    const double C39142 = C23166 * C10286;
    const double C55731 = C6224 * C10286;
    const double C71885 = C67862 * C10286;
    const double C79758 = C76449 * C10286;
    const double C87361 = C67860 * C10286;
    const double C40437 = C23162 * C10289;
    const double C41146 = C23161 * C10289;
    const double C47435 = C152163 * C10289;
    const double C55732 = C152299 * C10289;
    const double C55715 = C152179 * C10289;
    const double C90010 = C152179 * C10289;
    const double C137144 = C76441 * C10289;
    const double C137853 = C152346 * C10289;
    const double C144101 = C67854 * C10289;
    const double C57052 = C57040 + C9557;
    const double C49425 = C49421 + C18604;
    const double C57780 = C57774 + C55718;
    const double C89079 = C89067 + C71157;
    const double C435 = C427 + C403;
    const double C6587 = C6575 + C6537;
    const double C6581 = C6569 + C6515;
    const double C1197 = C1193 + C1180;
    const double C6881 = C6869 + C6815;
    const double C7635 = C7629 + C7609;
    const double C2805 = C2802 + C2794;
    const double C6888 = C6876 + C6840;
    const double C9871 = C9867 + C9855;
    const double C46169 = C46159 + C46158;
    const double C115542 = C115532 + C115531;
    const double C1810 = C152163 * C1457;
    const double C6534 = C152179 * C1457;
    const double C8447 = C152299 * C1457;
    const double C23488 = C23161 * C1457;
    const double C23470 = C23162 * C1457;
    const double C25409 = C23160 * C1457;
    const double C68170 = C152179 * C1457;
    const double C70065 = C67854 * C1457;
    const double C76767 = C152346 * C1457;
    const double C76749 = C76441 * C1457;
    const double C78676 = C152366 * C1457;
    const double C1814 = C1809 + C1466;
    const double C6562 = C6532 + C6533;
    const double C8453 = C8446 + C7992;
    const double C23516 = C23468 + C23469;
    const double C25415 = C25408 + C24958;
    const double C68198 = C68168 + C68169;
    const double C76795 = C76747 + C76748;
    const double C2027 = C2022 + C1660;
    const double C7622 = C7604 + C7605;
    const double C8765 = C8758 + C8237;
    const double C23818 = C23770 + C23771;
    const double C25723 = C25716 + C25200;
    const double C69258 = C69240 + C69241;
    const double C77097 = C77049 + C77050;
    const double C16591 = C16581 + C1663;
    const double C56254 = C56248 + C8242;
    const double C9864 = C9856 + C8230;
    const double C23823 = C23791 + C23792;
    const double C71464 = C71456 + C69848;
    const double C77102 = C77070 + C77071;
    const double C16573 = C2806 * C6221;
    const double C18202 = C2806 * C6220;
    const double C46859 = C2806 * C152262;
    const double C46856 = C2806 * C151912;
    const double C63064 = C2806 * C151907;
    const double C97742 = C2806 * C152314;
    const double C99290 = C2806 * C152350;
    const double C116232 = C2806 * C76442;
    const double C116229 = C2806 * C151912;
    const double C54427 = C6886 + C6885;
    const double C104857 = C6885 + C6886;
    const double C150880 = ae * C150879;
    const double C1451 = (3 * C150856 + C150615 * C150879 +
                          (2 * C150850 + C150615 * C150869) * ae) /
                         C150502;
    const double C2167 = (C150807 * C150879) / C150502;
    const double C8221 = (C150879 + C151065 * C150951) / C150502;
    const double C17300 = C152163 * C2171;
    const double C38553 = C23162 * C2171;
    const double C39133 = C23161 * C2171;
    const double C39851 = C23160 * C2171;
    const double C55722 = C152179 * C2171;
    const double C56455 = C152299 * C2171;
    const double C87352 = C152179 * C2171;
    const double C88304 = C67854 * C2171;
    const double C135266 = C76441 * C2171;
    const double C135846 = C152346 * C2171;
    const double C136564 = C152366 * C2171;
    const double C16597 = C16592 + C1662;
    const double C55748 = C55740 + C8240;
    const double C55143 = C55139 + C8232;
    const double C18609 = C18608 + C18603;
    const double C54446 = C54440 + C54424;
    const double C55752 = C55744 + C55713;
    const double C437 = C429 + C409;
    const double C6289 = C6279 + C6253;
    const double C7101 = C7099 + C7093;
    const double C673 = C665 + C643;
    const double C6892 = C6880 + C6852;
    const double C674 = C666 + C646;
    const double C7308 = C7306 + C7300;
    const double C17903 = C17899 * C6222;
    const double C49220 = C17899 * C151912;
    const double C62602 = C17899 * C151907;
    const double C98995 = C17899 * C67858;
    const double C118544 = C17899 * C151912;
    const double C49219 = C46160 + C46161;
    const double C118543 = C115533 + C115534;
    const double C159 =
        (6 * (4 * C150662 + C150622 * C150679) +
         C150622 *
             (5 * C150679 +
              C150622 *
                  (4 * C150677 +
                   C150622 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C384 = (2 * ae * (4 * C150730 + C150622 * C150756) +
                         C150615 * (4 * C150662 + C150622 * C150679)) /
                        C150520;
    const double C620 =
        (3 * C150648 + C150622 * C150662 + C150679 * std::pow(zP - zQ, 2)) /
        C150520;
    const double C621 =
        ((zP - zQ) * (4 * C150662 + C150622 * C150679)) / C150520;
    const double C622 =
        (4 * C150662 + C150622 * C150679 +
         (4 * C150677 +
          C150622 *
              (3 * C150675 +
               C150622 * (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)))) *
             std::pow(zP - zQ, 2)) /
        C150520;
    const double C813 =
        (2 * ae * (5 * C150756 + C150622 * C150788) +
         C150615 *
             (5 * C150679 +
              C150622 *
                  (4 * C150677 +
                   C150622 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C954 =
        ((zP - zQ) *
         (5 * C150679 +
          C150622 *
              (4 * C150677 +
               C150622 * (3 * C150675 +
                          C150622 * (2 * C150622 * C150673 +
                                     C150622 * (C150673 +
                                                (C150667 * C150668 +
                                                 C150619 * bs[9] *
                                                     std::pow(C150617, 9)) *
                                                    C150618 * C150634)))))) /
        C150520;
    const double C1171 =
        (2 * ae * C150807 * C150756 + C150615 * C150807 * C150679) / C150520;
    const double C2789 =
        (2 * ae * (C150756 + C150784 * C150951) +
         C150615 *
             (C150679 +
              (3 * C150675 +
               C150622 * (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634))) *
                  C150951)) /
        C150520;
    const double C2942 =
        (2 * C150807 * C150679 +
         C150807 *
             (C150679 +
              (3 * C150675 +
               C150622 * (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634))) *
                  C150951)) /
        C150520;
    const double C40429 = (2 * ae *
                               (4 * (2 * C151171 + C150807 * C151339) +
                                C150807 * (3 * C151339 + C150807 * C151585)) +
                           C150615 * (4 * C151429 + C150807 * C151572)) /
                          C150520;
    const double C48706 = (5 * (3 * C151147 + C150807 * C151429) +
                           C150807 * (4 * C151429 + C150807 * C151572)) /
                          C150520;
    const double C57035 =
        (2 * ae *
             (5 * (3 * C151339 + C150807 * C151585) +
              C150807 *
                  (4 * C151585 +
                   C150807 *
                       (3 * C151514 +
                        C150807 * (2 * C151533 +
                                   C150807 * (C150743 + C150771 * C150951))))) +
         C150615 *
             (5 * C151572 +
              C150807 *
                  (4 * C151566 +
                   C150807 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C151534 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150951)))))) /
        C150520;
    const double C64296 =
        (6 * (4 * C151429 + C150807 * C151572) +
         C150807 *
             (5 * C151572 +
              C150807 *
                  (4 * C151566 +
                   C150807 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C151534 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150951)))))) /
        C150520;
    const double C150787 = C150785 * ae;
    const double C812 = (C150615 * (5 * C150756 + C150622 * C150788) +
                         (5 * C150753 + C150622 * C150785) * ae) /
                        C150502;
    const double C143 = 6 * (4 * C150727 + C150622 * C150753) +
                        C150622 * (5 * C150753 + C150622 * C150785);
    const double C361 = 4 * C150727 + C150622 * C150753 + C150785 * C150619;
    const double C598 = 4 * C150727 + C150622 * C150753 + C150785 * C150951;
    const double C811 = C150615 * (5 * C150753 + C150622 * C150785);
    const double C952 = C150807 * (5 * C150753 + C150622 * C150785);
    const double C1160 = C150807 * C150615 * C150785;
    const double C150990 = ae * C150987;
    const double C150989 = C150615 * C150987;
    const double C150995 = C150807 * C150987;
    const double C150944 = C150943 + C150937;
    const double C150982 = ae * C150981;
    const double C3096 = (2 * C150956 + C150807 * C150981) / C150502;
    const double C151136 = C151112 + C151134;
    const double C151166 = C150921 + C151163;
    const double C151205 = ae * C151200;
    const double C151226 = ae * C151225;
    const double C9545 = (3 * C150977 + C150807 * C151225) / C150502;
    const double C151323 = C151321 + C151307;
    const double C151365 = ae * C151360;
    const double C151436 = C150807 * C151360;
    const double C151421 = C151416 + C151420;
    const double C151492 = C151489 * ae;
    const double C32822 = 6 * (4 * C151058 + C150615 * C151265) +
                          C150615 * (5 * C151265 + C150615 * C151489);
    const double C32979 = 4 * C151058 + C150615 * C151265 + C151489 * C150951;
    const double C33456 = C150807 * (5 * C151265 + C150615 * C151489);
    const double C151493 = ae * C151488;
    const double C151491 = C150615 * C151488;
    const double C151510 = C151488 * C150951;
    const double C151537 = C150807 * C151488;
    const double C151567 = C151561 + C151562;
    const double C151576 = ae * C151574;
    const double C151594 = C150807 * C151574;
    const double C150759 = ae * C150758;
    const double C371 = (3 * C150711 + C150622 * C150730 + C150615 * C150758 +
                         C150615 * C150753 * ae) /
                        C150502;
    const double C1165 = (C150807 * C150758) / C150502;
    const double C2788 = (C150758 + C150987 * C150951) / C150502;
    const double C186 = C177 + C178;
    const double C818 = C815 + C413;
    const double C6270 = C6254 + C6255;
    const double C67906 = C67890 + C67891;
    const double C659 = C647 + C648;
    const double C959 = C956 + C650;
    const double C150822 = C150821 + C150818;
    const double C1645 =
        (C150807 * C150662 + C150957 + C150957 +
         C150615 * (2 * ae * C150807 * C150752 + C150615 * C150807 * C150677)) /
        C150520;
    const double C2798 = C2791 + C1654;
    const double C6867 = C6847 + C6848;
    const double C68503 = C68483 + C68484;
    const double C2957 = C2954 + C2945;
    const double C150924 = C150907 + C150922;
    const double C151013 = ae * C151011;
    const double C1664 = C135 * C1639;
    const double C8244 = C6224 * C1639;
    const double C8228 = C6226 * C1639;
    const double C23804 = C23170 * C1639;
    const double C26809 = C23168 * C1639;
    const double C69862 = C67860 * C1639;
    const double C69846 = C67862 * C1639;
    const double C77083 = C76449 * C1639;
    const double C9853 = C152179 * C1651;
    const double C16580 = C152163 * C1651;
    const double C23805 = C23162 * C1651;
    const double C71453 = C152179 * C1651;
    const double C77084 = C76441 * C1651;
    const double C18203 = C18196 + C3104;
    const double C10078 = C10068 + C9550;
    const double C71678 = C71668 + C71150;
    const double C151300 = C151292 + C151099;
    const double C151101 = C151100 + C151089;
    const double C151159 = ae * C151157;
    const double C10287 = (2 * C151005 + C150807 * C151157) / C150502;
    const double C10290 =
        (2 * C151004 + C150807 * C151156 + C151221 + C151221 +
         C150615 *
             (2 * ae * (2 * C151184 + C150807 * (C150737 + C150764 * C150951)) +
              C150615 * (2 * C151185 +
                         C150807 * (C150665 + C150622 * C150673 * C150951)))) /
        C150520;
    const double C9559 = C6226 * C9544;
    const double C18605 = C135 * C9544;
    const double C26510 = C23168 * C9544;
    const double C57360 = C6224 * C9544;
    const double C71159 = C67862 * C9544;
    const double C90015 = C67860 * C9544;
    const double C48725 = C48723 * C151912;
    const double C64631 = C48723 * C151907;
    const double C118053 = C48723 * C151912;
    const double C151483 = C151466 + C151479;
    const double C151272 = ae * C151270;
    const double C151271 = C150615 * C151270;
    const double C151336 = C151270 * C150951;
    const double C151374 = C150807 * C151270;
    const double C151448 = 4 * C151270;
    const double C151430 = C151426 + C151427;
    const double C151549 = C151540 + C151382;
    const double C151414 = ae * C151413;
    const double C40427 = (4 * C151215 + C150807 * C151413) / C150502;
    const double C180 = C135 * C151;
    const double C651 = C135 * C610;
    const double C958 = C135 * C953;
    const double C150566 = C150562 * ae;
    const double C67859 = -(C150562 * be) / C150502;
    const double C23224 = C23205 + C23206;
    const double C23221 = C23196 + C23197;
    const double C23218 = C23187 + C23188;
    const double C23215 = C23178 + C23179;
    const double C23523 = C23495 + C23496;
    const double C23520 = C23486 + C23487;
    const double C23517 = C23471 + C23472;
    const double C23828 = C23806 + C23807;
    const double C23825 = C23797 + C23798;
    const double C23822 = C23788 + C23789;
    const double C23819 = C23773 + C23774;
    const double C24058 = C24050 + C23511;
    const double C24270 = C24262 + C23813;
    const double C24593 = C24574 + C24575;
    const double C26812 = C26804 + C25193;
    const double C27024 = C27016 + C26501;
    const double C37856 = C37848 + C23783;
    const double C37853 = C37842 + C23780;
    const double C38555 = C38550 + C24569;
    const double C39146 = C39126 + C25196;
    const double C40451 = C40440 + C26507;
    const double C40448 = C40434 + C26504;
    const double C23237 = C23225 + C23209;
    const double C23232 = C23220 + C23194;
    const double C23231 = C23219 + C23191;
    const double C23226 = C23214 + C23176;
    const double C23539 = C23527 + C23508;
    const double C23534 = C23522 + C23493;
    const double C23531 = C23519 + C23484;
    const double C23530 = C23518 + C23475;
    const double C23841 = C23829 + C23810;
    const double C23836 = C23824 + C23795;
    const double C23833 = C23821 + C23786;
    const double C23832 = C23820 + C23777;
    const double C24062 = C24059 + C23512;
    const double C24274 = C24271 + C23814;
    const double C24603 = C24597 + C24587;
    const double C24598 = C24592 + C24572;
    const double C26816 = C26813 + C25194;
    const double C27028 = C27025 + C26502;
    const double C37863 = C37857 + C23782;
    const double C37858 = C37852 + C23781;
    const double C38557 = C38554 + C24568;
    const double C39162 = C39153 + C25204;
    const double C39157 = C39148 + C25203;
    const double C39154 = C39145 + C25197;
    const double C40458 = C40452 + C26506;
    const double C40453 = C40447 + C26505;
    const double C41157 = C41154 + C27232;
    const double C23229 = C23217 + C23185;
    const double C23228 = C23216 + C23182;
    const double C37861 = C37855 + C23784;
    const double C37860 = C37854 + C23779;
    const double C67915 = C67905 + C67888;
    const double C67912 = C67902 + C67879;
    const double C67911 = C67901 + C67876;
    const double C67909 = C67899 + C67870;
    const double C68207 = C68195 + C68156;
    const double C68205 = C68193 + C68150;
    const double C68512 = C68500 + C68475;
    const double C68510 = C68498 + C68469;
    const double C68507 = C68495 + C68456;
    const double C68505 = C68493 + C68450;
    const double C71684 = C71680 + C71152;
    const double C85677 = C85673 + C68464;
    const double C85676 = C85672 + C68461;
    const double C86596 = C86594 + C69236;
    const double C87374 = C87366 + C69850;
    const double C89082 = C89076 + C71154;
    const double C76508 = C76496 + C76464;
    const double C76507 = C76495 + C76461;
    const double C134574 = C134568 + C77063;
    const double C134573 = C134567 + C77058;
    const double C31777 = C31753 * C148;
    const double C31776 = C31753 * C147;
    const double C31769 = C31753 * C146;
    const double C31768 = C31753 * C145;
    const double C31761 = C31753 * C144;
    const double C31947 = C31753 * C368;
    const double C31946 = C31753 * C363;
    const double C31942 = C31753 * C367;
    const double C31935 = C31753 * C364;
    const double C31931 = C31753 * C366;
    const double C31930 = C31753 * C365;
    const double C32117 = C31753 * C605;
    const double C32116 = C31753 * C600;
    const double C32112 = C31753 * C604;
    const double C32105 = C31753 * C601;
    const double C32101 = C31753 * C603;
    const double C32100 = C31753 * C602;
    const double C32251 = C31753 * C362;
    const double C32385 = C31753 * C599;
    const double C32591 = C31753 * C1163;
    const double C32590 = C31753 * C1162;
    const double C32583 = C31753 * C1161;
    const double C32829 = C31753 * C1450;
    const double C32991 = C31753 * C1637;
    const double C32990 = C31753 * C1636;
    const double C32986 = C31753 * C1632;
    const double C33125 = C31753 * C1449;
    const double C33323 = C31753 * C1635;
    const double C33845 = C31753 * C2573;
    const double C33844 = C31753 * C2572;
    const double C34043 = C31753 * C1631;
    const double C34177 = C31753 * C2571;
    const double C34314 = C31753 * C3093;
    const double C31778 = C31755 * C370;
    const double C31775 = C31755 * C362;
    const double C31770 = C31755 * C363;
    const double C31767 = C31755 * C364;
    const double C31762 = C31755 * C365;
    const double C31948 = C31755 * C1448;
    const double C31945 = C31755 * C368;
    const double C31941 = C31755 * C1449;
    const double C31936 = C31755 * C367;
    const double C31932 = C31755 * C1450;
    const double C31929 = C31755 * C366;
    const double C32118 = C31755 * C1630;
    const double C32115 = C31755 * C1163;
    const double C32111 = C31755 * C1631;
    const double C32106 = C31755 * C1162;
    const double C32102 = C31755 * C1632;
    const double C32099 = C31755 * C1161;
    const double C32252 = C31755 * C369;
    const double C32386 = C31755 * C1164;
    const double C32592 = C31755 * C1634;
    const double C32589 = C31755 * C1635;
    const double C32584 = C31755 * C1636;
    const double C32985 = C31755 * C1637;
    const double C33846 = C31755 * C9543;
    const double C33843 = C31755 * C3093;
    const double C34044 = C31755 * C1638;
    const double C34178 = C31755 * C3094;
    const double C34315 = C31755 * C10286;
    const double C31774 = C31757 * C369;
    const double C31771 = C31757 * C368;
    const double C31766 = C31757 * C367;
    const double C31763 = C31757 * C366;
    const double C31944 = C31757 * C1448;
    const double C31937 = C31757 * C1449;
    const double C31928 = C31757 * C1450;
    const double C32119 = C31757 * C1639;
    const double C32114 = C31757 * C1634;
    const double C32110 = C31757 * C1638;
    const double C32107 = C31757 * C1635;
    const double C32103 = C31757 * C1637;
    const double C32098 = C31757 * C1636;
    const double C33842 = C31757 * C10286;
    const double C76490 = C76445 * C149;
    const double C76488 = C76445 * C148;
    const double C76473 = C76445 * C147;
    const double C76470 = C76445 * C146;
    const double C76455 = C76445 * C145;
    const double C76451 = C76445 * C144;
    const double C76792 = C76445 * C369;
    const double C76791 = C76445 * C362;
    const double C76787 = C76445 * C368;
    const double C76772 = C76445 * C363;
    const double C76763 = C76445 * C367;
    const double C76759 = C76445 * C366;
    const double C76758 = C76445 * C365;
    const double C76754 = C76445 * C364;
    const double C77094 = C76445 * C606;
    const double C77093 = C76445 * C599;
    const double C77089 = C76445 * C605;
    const double C77074 = C76445 * C600;
    const double C77065 = C76445 * C604;
    const double C77061 = C76445 * C603;
    const double C77060 = C76445 * C602;
    const double C77056 = C76445 * C601;
    const double C77333 = C76445 * C370;
    const double C77545 = C76445 * C607;
    const double C77868 = C76445 * C1164;
    const double C77866 = C76445 * C1163;
    const double C77851 = C76445 * C1162;
    const double C77847 = C76445 * C1161;
    const double C78234 = C76445 * C1450;
    const double C78231 = C76445 * C1449;
    const double C78474 = C76445 * C1638;
    const double C78471 = C76445 * C1637;
    const double C78470 = C76445 * C1636;
    const double C78467 = C76445 * C1635;
    const double C78464 = C76445 * C1632;
    const double C78461 = C76445 * C1631;
    const double C78677 = C76445 * C1448;
    const double C78985 = C76445 * C1634;
    const double C79764 = C76445 * C2574;
    const double C79761 = C76445 * C2573;
    const double C79760 = C76445 * C2572;
    const double C79757 = C76445 * C2571;
    const double C80063 = C76445 * C1630;
    const double C80275 = C76445 * C2570;
    const double C80484 = C76445 * C3094;
    const double C80481 = C76445 * C3093;
    const double C135855 = C76445 * C10286;
    const double C137151 = C76445 * C17870;
    const double C137856 = C76445 * C9543;
    const double C76491 = C76447 * C372;
    const double C76485 = C76447 * C370;
    const double C76476 = C76447 * C362;
    const double C76467 = C76447 * C363;
    const double C76458 = C76447 * C364;
    const double C76452 = C76447 * C365;
    const double C76790 = C76447 * C369;
    const double C76784 = C76447 * C1448;
    const double C76775 = C76447 * C368;
    const double C76766 = C76447 * C1449;
    const double C76760 = C76447 * C1450;
    const double C76757 = C76447 * C366;
    const double C76751 = C76447 * C367;
    const double C77095 = C76447 * C1629;
    const double C77092 = C76447 * C1164;
    const double C77086 = C76447 * C1630;
    const double C77077 = C76447 * C1163;
    const double C77068 = C76447 * C1631;
    const double C77062 = C76447 * C1632;
    const double C77059 = C76447 * C1161;
    const double C77053 = C76447 * C1162;
    const double C77863 = C76447 * C1634;
    const double C77854 = C76447 * C1635;
    const double C77848 = C76447 * C1636;
    const double C78463 = C76447 * C1637;
    const double C78460 = C76447 * C1638;
    const double C79765 = C76447 * C9544;
    const double C79762 = C76447 * C9543;
    const double C79759 = C76447 * C3093;
    const double C79756 = C76447 * C3094;
    const double C80064 = C76447 * C1639;
    const double C80276 = C76447 * C3095;
    const double C80482 = C76447 * C10286;
    const double C16599 = C16594 + C16576;
    const double C55145 = C55141 + C55131;
    const double C55754 = C55746 + C55720;
    const double C428 = C420 + C405;
    const double C6580 = C6568 + C6551;
    const double C6578 = C6566 + C6545;
    const double C23234 = C23222 + C23200;
    const double C68214 = C68202 + C68181;
    const double C76513 = C76501 + C76479;
    const double C1194 = C1190 + C1182;
    const double C6878 = C6866 + C6845;
    const double C7632 = C7626 + C7617;
    const double C68514 = C68502 + C68481;
    const double C1808 = C152163 * C1456;
    const double C6540 = C152179 * C1456;
    const double C8443 = C152299 * C1456;
    const double C23506 = C23161 * C1456;
    const double C23500 = C23162 * C1456;
    const double C68176 = C152179 * C1456;
    const double C70061 = C67854 * C1456;
    const double C76785 = C152346 * C1456;
    const double C76779 = C76441 * C1456;
    const double C1813 = C1807 + C1465;
    const double C6564 = C6538 + C6539;
    const double C8451 = C8442 + C7990;
    const double C23526 = C23504 + C23505;
    const double C23524 = C23498 + C23499;
    const double C68200 = C68174 + C68175;
    const double C76803 = C76777 + C76778;
    const double C2026 = C2020 + C1659;
    const double C7624 = C7610 + C7611;
    const double C8763 = C8754 + C8235;
    const double C23826 = C23800 + C23801;
    const double C24596 = C24583 + C24584;
    const double C69260 = C69246 + C69247;
    const double C77105 = C77079 + C77080;
    const double C150903 = ae * C150902;
    const double C1452 = (3 * C150845 + C150615 * C150902 +
                          (2 * C150839 + C150615 * C150892) * ae) /
                         C150502;
    const double C2168 = (C150807 * C150902) / C150502;
    const double C8757 = C152179 * C2172;
    const double C16805 = C152163 * C2172;
    const double C24579 = C23162 * C2172;
    const double C25715 = C23161 * C2172;
    const double C70375 = C152179 * C2172;
    const double C77858 = C76441 * C2172;
    const double C78982 = C152346 * C2172;
    const double C87650 = C67854 * C2172;
    const double C106771 = C152299 * C2172;
    const double C18208 = C18206 + C18199;
    const double C10088 = C10084 + C10073;
    const double C57368 = C57366 + C57359;
    const double C151068 = C151039 + C151066;
    const double C151178 = ae * C151173;
    const double C39139 = C23161 * C8224;
    const double C39129 = C23162 * C8224;
    const double C48137 = C152163 * C8224;
    const double C55726 = C152179 * C8224;
    const double C56459 = C152299 * C8224;
    const double C87358 = C152179 * C8224;
    const double C135852 = C152346 * C8224;
    const double C135842 = C76441 * C8224;
    const double C144791 = C67854 * C8224;
    const double C55736 = C55714 + C10294;
    const double C47440 = C47434 + C16585;
    const double C40449 = C40436 + C26503;
    const double C41153 = C41145 + C27233;
    const double C55743 = C55730 + C55731;
    const double C90017 = C90009 + C71885;
    const double C137156 = C137143 + C79758;
    const double C57056 = C57052 + C9557;
    const double C49426 = C49425 + C18604;
    const double C57782 = C57780 + C55718;
    const double C89085 = C89079 + C71157;
    const double C6593 = C6581 + C6582;
    const double C16003 = C1197 * C6220;
    const double C16001 = C1197 * C6221;
    const double C15999 = C1197 * C6222;
    const double C46861 = C1197 * C152262;
    const double C46858 = C1197 * C151912;
    const double C63066 = C1197 * C151907;
    const double C97180 = C1197 * C152350;
    const double C97178 = C1197 * C152314;
    const double C97176 = C1197 * C67858;
    const double C116234 = C1197 * C76442;
    const double C116231 = C1197 * C151912;
    const double C6893 = C6881 + C6882;
    const double C104858 = C6882 + C6881;
    const double C16574 = C2805 * C6222;
    const double C18201 = C2805 * C6221;
    const double C46863 = C2805 * C152262;
    const double C46860 = C2805 * C151912;
    const double C63067 = C2805 * C151907;
    const double C97743 = C2805 * C67858;
    const double C99289 = C2805 * C152314;
    const double C116236 = C2805 * C76442;
    const double C116233 = C2805 * C151912;
    const double C6894 = C6887 + C6888;
    const double C104859 = C6888 + C6887;
    const double C1817 = C1814 + C1466;
    const double C6574 = C6562 + C6533;
    const double C8457 = C8453 + C7992;
    const double C23528 = C23516 + C23469;
    const double C25418 = C25415 + C24958;
    const double C68210 = C68198 + C68169;
    const double C76807 = C76795 + C76748;
    const double C2030 = C2027 + C1660;
    const double C7628 = C7622 + C7605;
    const double C8769 = C8765 + C8237;
    const double C23830 = C23818 + C23771;
    const double C25726 = C25723 + C25200;
    const double C69264 = C69258 + C69241;
    const double C77109 = C77097 + C77050;
    const double C16596 = C16591 + C1663;
    const double C56256 = C56254 + C8242;
    const double C9868 = C9864 + C8230;
    const double C23835 = C23823 + C23792;
    const double C71468 = C71464 + C69848;
    const double C77114 = C77102 + C77071;
    const double C47427 = C46856 + C46855;
    const double C116798 = C116229 + C116228;
    const double C54435 = C54427 * C151907;
    const double C1459 =
        (3 * (C150629 + C150854 + C150854 + C150615 * C150870) + C150880 +
         C150880 +
         C150615 *
             (2 * C150870 + C150877 + C150877 +
              C150615 * (C150638 + C150873 + C150873 +
                         C150615 * (2 * ae * C150707 + C150615 * C150646)))) /
        C150520;
    const double C1468 = C135 * C1451;
    const double C7995 = C6224 * C1451;
    const double C7993 = C6226 * C1451;
    const double C23482 = C23170 * C1451;
    const double C24962 = C23166 * C1451;
    const double C24960 = C23168 * C1451;
    const double C31933 = C31757 * C1451;
    const double C31927 = C31759 * C1451;
    const double C32830 = C31753 * C1451;
    const double C32828 = C31755 * C1451;
    const double C69622 = C67860 * C1451;
    const double C69620 = C67862 * C1451;
    const double C76761 = C76449 * C1451;
    const double C78235 = C76445 * C1451;
    const double C78233 = C76447 * C1451;
    const double C2176 = C135 * C2167;
    const double C8238 = C6226 * C2167;
    const double C8977 = C6224 * C2167;
    const double C24570 = C23170 * C2167;
    const double C25202 = C23168 * C2167;
    const double C25930 = C23166 * C2167;
    const double C32097 = C31759 * C2167;
    const double C32585 = C31757 * C2167;
    const double C32989 = C31755 * C2167;
    const double C33460 = C31753 * C2167;
    const double C69856 = C67862 * C2167;
    const double C70586 = C67860 * C2167;
    const double C77849 = C76449 * C2167;
    const double C78469 = C76447 * C2167;
    const double C79191 = C76445 * C2167;
    const double C8241 = C6226 * C8221;
    const double C17303 = C135 * C8221;
    const double C25205 = C23168 * C8221;
    const double C25195 = C23170 * C8221;
    const double C32104 = C31759 * C8221;
    const double C32992 = C31755 * C8221;
    const double C32984 = C31757 * C8221;
    const double C39856 = C23166 * C8221;
    const double C55489 = C6224 * C8221;
    const double C69859 = C67862 * C8221;
    const double C78472 = C76447 * C8221;
    const double C78462 = C76449 * C8221;
    const double C88307 = C67860 * C8221;
    const double C136569 = C76445 * C8221;
    const double C16602 = C16597 + C16584;
    const double C55756 = C55748 + C55724;
    const double C55147 = C55143 + C55135;
    const double C18610 = C18609 * C6220;
    const double C47425 = C18609 * C152262;
    const double C63062 = C18609 * C151907;
    const double C99684 = C18609 * C152350;
    const double C116796 = C18609 * C76442;
    const double C57037 = C54446 + C54447;
    const double C6294 = C6288 + C6289;
    const double C15305 = C673 * C6221;
    const double C15300 = C673 * C6222;
    const double C46165 = C673 * C151912;
    const double C46561 = C673 * C152262;
    const double C62864 = C673 * C151907;
    const double C96491 = C673 * C152314;
    const double C96486 = C673 * C67858;
    const double C115538 = C673 * C151912;
    const double C115934 = C673 * C76442;
    const double C15303 = C674 * C6222;
    const double C15704 = C674 * C6221;
    const double C46560 = C674 * C151912;
    const double C96489 = C674 * C67858;
    const double C96882 = C674 * C152314;
    const double C115933 = C674 * C151912;
    const double C816 = C152163 * C384;
    const double C6256 = C152179 * C384;
    const double C67892 = C152179 * C384;
    const double C649 = C152163 * C620;
    const double C957 = C152163 * C621;
    const double C1186 = C152163 * C1171;
    const double C7298 = C152179 * C1171;
    const double C68934 = C152179 * C1171;
    const double C57044 = C152179 * C40429;
    const double C64763 = C152163 * C40429;
    const double C145363 = C152179 * C40429;
    const double C64300 = C152163 * C48706;
    const double C150790 = C150789 + C150787;
    const double C817 = C135 * C812;
    const double C6261 = C6226 * C812;
    const double C67897 = C67862 * C812;
    const double C150991 = C150756 + C150989;
    const double C150996 = ae * C150995;
    const double C150946 = ae * C150944;
    const double C150945 = C150615 * C150944;
    const double C151017 = C150807 * C150944;
    const double C1652 =
        (C150662 + C150677 * C150951 + C150982 + C150982 +
         C150615 *
             (2 * ae * (C150752 + C150780 * C150951) +
              C150615 * (C150677 +
                         (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)) *
                             C150951))) /
        C150520;
    const double C3105 = C135 * C3096;
    const double C10077 = C6226 * C3096;
    const double C71677 = C67862 * C3096;
    const double C151137 = C151136 + C151125;
    const double C151168 = ae * C151166;
    const double C10288 = (2 * C151011 + C150807 * C151166) / C150502;
    const double C10291 =
        (2 * C151010 + C150807 * C151165 + C151226 + C151226 +
         C150615 *
             (2 * ae * (2 * C151197 + C150807 * (C150748 + C150776 * C150951)) +
              C150615 *
                  (2 * C151198 +
                   C150807 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150951)))) /
        C150520;
    const double C9561 = C6226 * C9545;
    const double C18606 = C135 * C9545;
    const double C71161 = C67862 * C9545;
    const double C151325 = ae * C151323;
    const double C151324 = C150615 * C151323;
    const double C151354 = C151323 * C150951;
    const double C151393 = C150807 * C151323;
    const double C151439 = C151435 + C151436;
    const double C151422 = ae * C151421;
    const double C49416 = (4 * C151220 + C150807 * C151421) / C150502;
    const double C151494 = C151449 + C151491;
    const double C151517 = C151270 + C151510;
    const double C151546 = ae * C151537;
    const double C151570 = C150807 * C151567;
    const double C151583 = ae * C151567;
    const double C151595 = C151593 + C151594;
    const double C383 = (3 * C150648 + C150622 * C150662 + C150759 + C150759 +
                         C150615 * (2 * ae * C150756 + C150615 * C150679)) /
                        C150520;
    const double C411 = C135 * C371;
    const double C6555 = C6224 * C371;
    const double C6553 = C6226 * C371;
    const double C23203 = C23170 * C371;
    const double C24055 = C23168 * C371;
    const double C31779 = C31757 * C371;
    const double C68191 = C67860 * C371;
    const double C68189 = C67862 * C371;
    const double C76482 = C76449 * C371;
    const double C77334 = C76447 * C371;
    const double C1185 = C135 * C1165;
    const double C6853 = C6226 * C1165;
    const double C7619 = C6224 * C1165;
    const double C24267 = C23168 * C1165;
    const double C68489 = C67862 * C1165;
    const double C69255 = C67860 * C1165;
    const double C77546 = C76447 * C1165;
    const double C2797 = C135 * C2788;
    const double C6856 = C6226 * C2788;
    const double C68492 = C67862 * C2788;
    const double C192 = C186 + C178;
    const double C819 = C818 + C413;
    const double C6280 = C6270 + C6255;
    const double C67916 = C67906 + C67891;
    const double C667 = C659 + C648;
    const double C960 = C959 + C650;
    const double C150823 = ae * C150822;
    const double C1447 =
        (2 * C150732 + C150615 * C150822 + (C150727 + C150749 * C150619) * ae) /
        C150502;
    const double C1633 = (C150807 * C150822) / C150502;
    const double C1640 = (C150822 + C150944 * C150951) / C150502;
    const double C2019 = C152163 * C1645;
    const double C7615 = C152179 * C1645;
    const double C24261 = C23162 * C1645;
    const double C69251 = C152179 * C1645;
    const double C77540 = C76441 * C1645;
    const double C2801 = C2798 + C1654;
    const double C6879 = C6867 + C6848;
    const double C68515 = C68503 + C68484;
    const double C18403 = C2957 * C6222;
    const double C46166 = C2957 * C151912;
    const double C62865 = C2957 * C151907;
    const double C99485 = C2957 * C67858;
    const double C115539 = C2957 * C151912;
    const double C150925 = C150924 + C150918;
    const double C2173 = (2 * (2 * ae * C150807 * C150726 + C150615 * C151010) +
                          C151013 + C151013 +
                          C150615 * (C151010 + C151014 + C151014 +
                                     C150615 * (2 * ae * C150807 * C150748 +
                                                C150615 * C150807 * C150675))) /
                         C150520;
    const double C16590 = C16579 + C1664;
    const double C9862 = C9852 + C8228;
    const double C23827 = C23803 + C23804;
    const double C71462 = C71452 + C69846;
    const double C77106 = C77082 + C77083;
    const double C18205 = C18203 + C3104;
    const double C10082 = C10078 + C9550;
    const double C71682 = C71678 + C71150;
    const double C151317 = C151300 + C151313;
    const double C151103 = ae * C151101;
    const double C151102 = C150615 * C151101;
    const double C151186 = C150807 * C151101;
    const double C151285 = 4 * C151101;
    const double C8222 = (C150902 + C151101 * C150951) / C150502;
    const double C8225 =
        (2 * (2 * ae * (C150716 + C150737 * C150951) + C150615 * C151156) +
         C151159 + C151159 +
         C150615 *
             (C151156 + C151160 + C151160 +
              C150615 * (2 * ae * (C150737 + C150764 * C150951) +
                         C150615 * (C150665 + C150622 * C150673 * C150951)))) /
        C150520;
    const double C10296 = C6226 * C10287;
    const double C16586 = C135 * C10287;
    const double C26500 = C23170 * C10287;
    const double C27236 = C23168 * C10287;
    const double C34179 = C31757 * C10287;
    const double C56252 = C6224 * C10287;
    const double C71887 = C67862 * C10287;
    const double C79755 = C76449 * C10287;
    const double C80485 = C76447 * C10287;
    const double C87363 = C67860 * C10287;
    const double C27015 = C23162 * C10290;
    const double C47433 = C152163 * C10290;
    const double C57357 = C152179 * C10290;
    const double C80270 = C76441 * C10290;
    const double C89481 = C152179 * C10290;
    const double C57571 = C57564 + C9559;
    const double C49022 = C49017 + C18605;
    const double C89077 = C89063 + C71159;
    const double C151487 = C150615 * C151483;
    const double C151458 = C151442 + C151272;
    const double C151273 = C151236 + C151271;
    const double C151341 = C151065 + C151336;
    const double C151381 = ae * C151374;
    const double C151581 = 2 * C151374;
    const double C151431 = ae * C151430;
    const double C26495 = (3 * C151148 + C150807 * C151430) / C150502;
    const double C151555 = C151549 + C151554;
    const double C26497 =
        (3 * C151147 + C150807 * (2 * C151172 + C150807 * C151340) + C151414 +
         C151414 +
         C150615 * (2 * ae *
                        (3 * C151339 +
                         C150807 * (2 * C151371 +
                                    C150807 * (C150721 + C150743 * C150951))) +
                    C150615 * (3 * C151340 +
                               C150807 * (2 * C151372 +
                                          C150807 * (C150658 +
                                                     C150673 * C150951))))) /
        C150520;
    const double C40445 = C23168 * C40427;
    const double C49423 = C135 * C40427;
    const double C57043 = C6226 * C40427;
    const double C57776 = C6224 * C40427;
    const double C89072 = C67862 * C40427;
    const double C137152 = C76447 * C40427;
    const double C146061 = C67860 * C40427;
    const double C31752 =
        ((ae * -2 * C150544) / C150545 -
         (((C150500 * C150554) / C150520 + 2 * C150568) * be) / C150502) /
            C150521 -
        ((C150500 *
              (C150554 / C150545 -
               (((C150500 * C150566) / C150502 + 2 * C150563) * be) / C150502 -
               C150527 / C150548) +
          2 * (C150568 / C150521 -
               ((C150500 * C150563 + C152299) * be) / C150502 + C150564)) *
         be) /
            C150502 +
        C150566 / C150548 - ((2 * C150564 - C150534 / C150548) * be) / C150502;
    const double C31754 =
        (C150554 / C150545 -
         (((C150500 * C150566) / C150502 + 2 * C150563) * be) / C150502 -
         C150527 / C150548) /
            C150521 -
        ((C150500 * (C150566 / C150548 -
                     ((2 * C150564 - C150534 / C150548) * be) / C150502) +
          2 * (C150563 / C150521 -
               ((C150500 * C150564 + C152179) * be) / C150502)) *
         be) /
            C150502 +
        (-2 * C150527) / (C150502 * 4 * C150520);
    const double C31756 = (C150566 / C150548 -
                           ((2 * C150564 - C150534 / C150548) * be) / C150502) /
                              C150521 -
                          ((2 * (C150564 / C150521 - (0 * be) / C150502) -
                            C150534 / (C150502 * 4 * C150520)) *
                           be) /
                              C150502;
    const double C76444 =
        C150554 / C150545 -
        (((C150500 * C150566) / C150502 + 2 * C150563) * be) / C150502 -
        C150527 / C150548;
    const double C76446 =
        C150566 / C150548 - ((2 * C150564 - C150534 / C150548) * be) / C150502;
    const double C67893 = C67859 * C141;
    const double C67884 = C67859 * C140;
    const double C67881 = C67859 * C139;
    const double C67872 = C67859 * C138;
    const double C67866 = C67859 * C137;
    const double C68186 = C67859 * C357;
    const double C68177 = C67859 * C350;
    const double C68171 = C67859 * C356;
    const double C68165 = C67859 * C355;
    const double C68158 = C67859 * C352;
    const double C68152 = C67859 * C351;
    const double C68486 = C67859 * C594;
    const double C68477 = C67859 * C587;
    const double C68471 = C67859 * C593;
    const double C68465 = C67859 * C592;
    const double C68458 = C67859 * C589;
    const double C68452 = C67859 * C588;
    const double C68728 = C67859 * C358;
    const double C68935 = C67859 * C595;
    const double C69252 = C67859 * C1158;
    const double C69243 = C67859 * C1157;
    const double C69237 = C67859 * C1156;
    const double C70064 = C67859 * C1441;
    const double C70060 = C67859 * C1440;
    const double C70376 = C67859 * C1623;
    const double C70372 = C67859 * C1622;
    const double C71458 = C67859 * C1619;
    const double C71454 = C67859 * C1618;
    const double C71674 = C67859 * C2563;
    const double C71670 = C67859 * C2562;
    const double C85665 = C67859 * C591;
    const double C85657 = C67859 * C590;
    const double C86586 = C67859 * C1155;
    const double C87359 = C67859 * C1625;
    const double C87355 = C67859 * C1626;
    const double C87349 = C67859 * C1624;
    const double C87345 = C67859 * C1620;
    const double C87649 = C67859 * C2164;
    const double C88303 = C67859 * C2163;
    const double C89069 = C67859 * C2565;
    const double C89065 = C67859 * C2566;
    const double C89059 = C67859 * C2564;
    const double C89482 = C67859 * C3090;
    const double C90011 = C67859 * C3089;
    const double C144100 = C67859 * C10283;
    const double C144790 = C67859 * C8218;
    const double C145364 = C67859 * C17867;
    const double C146059 = C67859 * C9540;
    const double C23236 = C23224 + C23206;
    const double C23233 = C23221 + C23197;
    const double C23230 = C23218 + C23188;
    const double C23227 = C23215 + C23179;
    const double C23535 = C23523 + C23496;
    const double C23532 = C23520 + C23487;
    const double C23529 = C23517 + C23472;
    const double C23840 = C23828 + C23807;
    const double C23837 = C23825 + C23798;
    const double C23834 = C23822 + C23789;
    const double C23831 = C23819 + C23774;
    const double C24061 = C24058 + C23511;
    const double C24273 = C24270 + C23813;
    const double C24599 = C24593 + C24575;
    const double C26815 = C26812 + C25193;
    const double C27027 = C27024 + C26501;
    const double C37862 = C37856 + C23783;
    const double C37859 = C37853 + C23780;
    const double C38558 = C38555 + C24569;
    const double C39155 = C39146 + C25196;
    const double C40457 = C40451 + C26507;
    const double C40454 = C40448 + C26504;
    const double C23249 = C23237 + C23210;
    const double C23244 = C23232 + C23195;
    const double C23243 = C23231 + C23192;
    const double C23238 = C23226 + C23177;
    const double C23551 = C23539 + C23509;
    const double C23546 = C23534 + C23494;
    const double C23543 = C23531 + C23485;
    const double C23542 = C23530 + C23476;
    const double C23853 = C23841 + C23811;
    const double C23848 = C23836 + C23796;
    const double C23845 = C23833 + C23787;
    const double C23844 = C23832 + C23778;
    const double C24065 = C24062 + C24053;
    const double C24277 = C24274 + C24265;
    const double C24609 = C24603 + C24588;
    const double C24604 = C24598 + C24573;
    const double C26819 = C26816 + C26807;
    const double C27031 = C27028 + C27019;
    const double C37869 = C37863 + C37851;
    const double C37864 = C37858 + C37841;
    const double C38560 = C38557 + C38549;
    const double C39171 = C39162 + C39141;
    const double C39166 = C39157 + C39131;
    const double C39163 = C39154 + C39125;
    const double C40464 = C40458 + C40443;
    const double C40459 = C40453 + C40433;
    const double C41160 = C41157 + C41148;
    const double C23241 = C23229 + C23186;
    const double C23240 = C23228 + C23183;
    const double C37867 = C37861 + C37847;
    const double C37866 = C37860 + C37845;
    const double C67925 = C67915 + C67889;
    const double C67922 = C67912 + C67880;
    const double C67921 = C67911 + C67877;
    const double C67919 = C67909 + C67871;
    const double C68219 = C68207 + C68157;
    const double C68217 = C68205 + C68151;
    const double C68524 = C68512 + C68476;
    const double C68522 = C68510 + C68470;
    const double C68519 = C68507 + C68457;
    const double C68517 = C68505 + C68451;
    const double C71688 = C71684 + C71673;
    const double C85681 = C85677 + C85664;
    const double C85680 = C85676 + C85660;
    const double C86598 = C86596 + C86589;
    const double C87382 = C87374 + C87348;
    const double C89088 = C89082 + C89062;
    const double C76520 = C76508 + C76465;
    const double C76519 = C76507 + C76462;
    const double C134580 = C134574 + C134560;
    const double C134579 = C134573 + C134558;
    const double C16604 = C16599 * C6220;
    const double C47428 = C16599 * C152262;
    const double C63445 = C16599 * C151907;
    const double C97744 = C16599 * C152350;
    const double C116799 = C16599 * C76442;
    const double C436 = C428 + C406;
    const double C6592 = C6580 + C6552;
    const double C6590 = C6578 + C6546;
    const double C23246 = C23234 + C23201;
    const double C68226 = C68214 + C68182;
    const double C76525 = C76513 + C76480;
    const double C1198 = C1194 + C1183;
    const double C6890 = C6878 + C6846;
    const double C7638 = C7632 + C7618;
    const double C68526 = C68514 + C68482;
    const double C1816 = C1813 + C1465;
    const double C6576 = C6564 + C6539;
    const double C8455 = C8451 + C7990;
    const double C23538 = C23526 + C23505;
    const double C23536 = C23524 + C23499;
    const double C68212 = C68200 + C68175;
    const double C76815 = C76803 + C76778;
    const double C2029 = C2026 + C1659;
    const double C7630 = C7624 + C7611;
    const double C8767 = C8763 + C8235;
    const double C23838 = C23826 + C23801;
    const double C24602 = C24596 + C24584;
    const double C69266 = C69260 + C69247;
    const double C77117 = C77105 + C77080;
    const double C1460 =
        (3 * (C150836 + C150843 + C150843 + C150615 * C150893) + C150903 +
         C150903 +
         C150615 *
             (2 * C150893 + C150900 + C150900 +
              C150615 * (C150650 + C150896 + C150896 +
                         C150615 * (2 * ae * C150737 + C150615 * C150665)))) /
        C150520;
    const double C1469 = C135 * C1452;
    const double C7997 = C6224 * C1452;
    const double C7991 = C6226 * C1452;
    const double C23490 = C23170 * C1452;
    const double C24965 = C23166 * C1452;
    const double C24957 = C23168 * C1452;
    const double C31940 = C31757 * C1452;
    const double C31938 = C31759 * C1452;
    const double C33126 = C31755 * C1452;
    const double C69624 = C67860 * C1452;
    const double C69618 = C67862 * C1452;
    const double C76769 = C76449 * C1452;
    const double C78238 = C76445 * C1452;
    const double C78230 = C76447 * C1452;
    const double C2177 = C135 * C2168;
    const double C8236 = C6226 * C2168;
    const double C8979 = C6224 * C2168;
    const double C24578 = C23170 * C2168;
    const double C25199 = C23168 * C2168;
    const double C25933 = C23166 * C2168;
    const double C32108 = C31759 * C2168;
    const double C32588 = C31757 * C2168;
    const double C33324 = C31755 * C2168;
    const double C69854 = C67862 * C2168;
    const double C70588 = C67860 * C2168;
    const double C77857 = C76449 * C2168;
    const double C78466 = C76447 * C2168;
    const double C79194 = C76445 * C2168;
    const double C18601 = C18208 * C6221;
    const double C47426 = C18208 * C151912;
    const double C49021 = C18208 * C152262;
    const double C63065 = C18208 * C151907;
    const double C99683 = C18208 * C152314;
    const double C116797 = C18208 * C151912;
    const double C118348 = C18208 * C76442;
    const double C57563 = C10089 + C10088;
    const double C108811 = C10088 + C10089;
    const double C151069 = C151068 + C151061;
    const double C8973 =
        (3 * (C150998 + C151002 + C151002 + C150615 * C151182) + C151178 +
         C151178 +
         C150615 * (2 * C151182 + C151179 + C151179 +
                    C150615 * (C151172 + C151180 + C151180 +
                               C150615 * (2 * ae * C150807 * C150721 +
                                          C150615 * C150807 * C150658)))) /
        C150520;
    const double C55745 = C55736 + C10294;
    const double C47442 = C47440 + C16585;
    const double C40455 = C40449 + C26503;
    const double C41156 = C41153 + C27233;
    const double C55751 = C55743 + C55731;
    const double C90019 = C90017 + C71885;
    const double C137162 = C137156 + C79758;
    const double C57060 = C57056 + C57041;
    const double C49427 = C49426 + C49422;
    const double C57784 = C57782 + C57775;
    const double C89091 = C89085 + C89068;
    const double C49019 = C46859 + C46860;
    const double C118346 = C116232 + C116233;
    const double C54428 = C6894 * C151907;
    const double C1820 = C1817 + C1810;
    const double C6586 = C6574 + C6534;
    const double C8461 = C8457 + C8447;
    const double C23540 = C23528 + C23470;
    const double C25421 = C25418 + C25409;
    const double C68222 = C68210 + C68170;
    const double C76819 = C76807 + C76749;
    const double C2033 = C2030 + C2023;
    const double C7634 = C7628 + C7606;
    const double C8773 = C8769 + C8759;
    const double C23842 = C23830 + C23772;
    const double C25729 = C25726 + C25717;
    const double C69270 = C69264 + C69242;
    const double C77121 = C77109 + C77051;
    const double C16601 = C16596 + C16582;
    const double C56258 = C56256 + C56249;
    const double C9872 = C9868 + C9857;
    const double C23847 = C23835 + C23793;
    const double C71472 = C71468 + C71457;
    const double C77126 = C77114 + C77072;
    const double C17306 = C17299 + C2176;
    const double C55739 = C55721 + C8238;
    const double C56464 = C56454 + C8977;
    const double C38556 = C38552 + C24570;
    const double C39149 = C39132 + C25202;
    const double C39859 = C39850 + C25930;
    const double C87368 = C87351 + C69856;
    const double C135269 = C135265 + C77849;
    const double C55741 = C55725 + C8241;
    const double C48141 = C48136 + C17303;
    const double C39152 = C39138 + C25205;
    const double C39147 = C39128 + C25195;
    const double C56466 = C56458 + C55489;
    const double C87371 = C87357 + C69859;
    const double C135860 = C135841 + C78462;
    const double C16607 = C16602 * C6220;
    const double C47430 = C16602 * C152262;
    const double C63446 = C16602 * C151907;
    const double C97749 = C16602 * C152350;
    const double C116801 = C16602 * C76442;
    const double C55716 = C55147 + C55146;
    const double C57050 = C57037 * C151907;
    const double C46170 = C46164 + C46165;
    const double C115543 = C115537 + C115538;
    const double C64304 = C64303 + C64300;
    const double C150791 = ae * C150790;
    const double C373 = (4 * C150730 + C150622 * C150756 + C150615 * C150790 +
                         C150615 * C150785 * ae) /
                        C150502;
    const double C1166 = (C150807 * C150790) / C150502;
    const double C150992 = C150991 + C150988;
    const double C2016 =
        (C150807 * C150679 + C150996 + C150996 +
         C150615 *
             (2 * ae * C150807 * C150784 +
              C150615 * C150807 *
                  (3 * C150675 +
                   C150622 * (2 * C150622 * C150673 +
                              C150622 * (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C150947 = C150930 + C150945;
    const double C151019 = ae * C151017;
    const double C151139 = ae * C151137;
    const double C151138 = C150615 * C151137;
    const double C151199 = C150807 * C151137;
    const double C8226 =
        (2 * (2 * ae * (C150726 + C150748 * C150951) + C150615 * C151165) +
         C151168 + C151168 +
         C150615 *
             (C151165 + C151169 + C151169 +
              C150615 *
                  (2 * ae * (C150748 + C150776 * C150951) +
                   C150615 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150951)))) /
        C150520;
    const double C10298 = C6226 * C10288;
    const double C16587 = C135 * C10288;
    const double C27022 = C23170 * C10288;
    const double C71889 = C67862 * C10288;
    const double C80277 = C76449 * C10288;
    const double C151326 = C151286 + C151324;
    const double C151359 = C151101 + C151354;
    const double C151400 = ae * C151393;
    const double C151440 = ae * C151439;
    const double C26496 = (3 * C151157 + C150807 * C151439) / C150502;
    const double C26498 =
        (3 * C151156 + C150807 * (2 * C151185 + C150807 * C151358) + C151422 +
         C151422 +
         C150615 *
             (2 * ae *
                  (3 * C151357 +
                   C150807 * (2 * C151390 +
                              C150807 * (C150764 + C151288 * C150951))) +
              C150615 * (3 * C151358 +
                         C150807 * (2 * C151391 +
                                    C150807 * (C151284 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150951))))) /
        C150520;
    const double C49424 = C135 * C49416;
    const double C57569 = C6226 * C49416;
    const double C89074 = C67862 * C49416;
    const double C151495 = C151494 + C151477;
    const double C151523 = ae * C151517;
    const double C151582 = C150807 * C151517;
    const double C151573 = C151560 + C151570;
    const double C151596 = ae * C151595;
    const double C57034 = (5 * C151413 + C150807 * C151595) / C150502;
    const double C412 = C152163 * C383;
    const double C7091 = C152179 * C383;
    const double C23204 = C23162 * C383;
    const double C68727 = C152179 * C383;
    const double C76483 = C76441 * C383;
    const double C422 = C410 + C411;
    const double C7096 = C7090 + C6553;
    const double C23223 = C23202 + C23203;
    const double C68732 = C68726 + C68189;
    const double C76502 = C76481 + C76482;
    const double C1191 = C1184 + C1185;
    const double C7303 = C7297 + C6853;
    const double C68939 = C68933 + C68489;
    const double C198 = C192 + C179;
    const double C820 = C819 + C816;
    const double C6290 = C6280 + C6256;
    const double C67926 = C67916 + C67892;
    const double C675 = C667 + C649;
    const double C961 = C960 + C957;
    const double C1455 =
        (2 * (2 * ae * C150730 + C150615 * C150662) + C150823 + C150823 +
         C150615 * (C150662 + C150820 + C150820 +
                    C150615 * (2 * ae * C150752 + C150615 * C150677))) /
        C150520;
    const double C1464 = C135 * C1447;
    const double C6548 = C6226 * C1447;
    const double C8448 = C6224 * C1447;
    const double C23514 = C23168 * C1447;
    const double C23510 = C23170 * C1447;
    const double C31773 = C31759 * C1447;
    const double C32253 = C31757 * C1447;
    const double C68184 = C67862 * C1447;
    const double C70066 = C67860 * C1447;
    const double C76793 = C76447 * C1447;
    const double C76789 = C76449 * C1447;
    const double C1658 = C135 * C1633;
    const double C7614 = C6226 * C1633;
    const double C8760 = C6224 * C1633;
    const double C23812 = C23170 * C1633;
    const double C24590 = C23168 * C1633;
    const double C32387 = C31757 * C1633;
    const double C69250 = C67862 * C1633;
    const double C70378 = C67860 * C1633;
    const double C77091 = C76449 * C1633;
    const double C77869 = C76447 * C1633;
    const double C1665 = C135 * C1640;
    const double C9861 = C6226 * C1640;
    const double C23817 = C23170 * C1640;
    const double C71461 = C67862 * C1640;
    const double C77096 = C76449 * C1640;
    const double C2804 = C2801 + C2792;
    const double C6891 = C6879 + C6849;
    const double C68527 = C68515 + C68485;
    const double C150926 = ae * C150925;
    const double C1453 = (3 * C150833 + C150615 * C150925 +
                          (2 * C150827 + C150615 * C150915) * ae) /
                         C150502;
    const double C2169 = (C150807 * C150925) / C150502;
    const double C8223 = (C150925 + C151137 * C150951) / C150502;
    const double C8753 = C152179 * C2173;
    const double C16803 = C152163 * C2173;
    const double C24582 = C23162 * C2173;
    const double C70371 = C152179 * C2173;
    const double C77861 = C76441 * C2173;
    const double C16595 = C16590 + C1664;
    const double C9866 = C9862 + C8228;
    const double C23839 = C23827 + C23804;
    const double C71466 = C71462 + C69846;
    const double C77118 = C77106 + C77083;
    const double C18207 = C18205 + C18197;
    const double C10086 = C10082 + C10069;
    const double C71686 = C71682 + C71669;
    const double C151104 = C151075 + C151102;
    const double C151191 = ae * C151186;
    const double C8243 = C6226 * C8222;
    const double C17304 = C135 * C8222;
    const double C25208 = C23168 * C8222;
    const double C25192 = C23170 * C8222;
    const double C32109 = C31759 * C8222;
    const double C34045 = C31757 * C8222;
    const double C55956 = C6224 * C8222;
    const double C69861 = C67862 * C8222;
    const double C78475 = C76447 * C8222;
    const double C78459 = C76449 * C8222;
    const double C88309 = C67860 * C8222;
    const double C26803 = C23162 * C8225;
    const double C47642 = C152163 * C8225;
    const double C56251 = C152179 * C8225;
    const double C80058 = C76441 * C8225;
    const double C87354 = C152179 * C8225;
    const double C57363 = C57356 + C10296;
    const double C47439 = C47432 + C16586;
    const double C27023 = C27014 + C26500;
    const double C89485 = C89480 + C71887;
    const double C80278 = C80269 + C79755;
    const double C57573 = C57571 + C9559;
    const double C49023 = C49022 + C18605;
    const double C89083 = C89077 + C71159;
    const double C151465 = C151458 + C151272;
    const double C151274 = C151273 + C151261;
    const double C151346 = ae * C151341;
    const double C27227 = (2 * C151173 + C150807 * C151341) / C150502;
    const double C27229 =
        (2 * (2 * ae * (2 * C151171 + C150807 * C151339) + C150615 * C151429) +
         C151431 + C151431 +
         C150615 *
             (C151429 + C151428 + C151428 +
              C150615 *
                  (2 * ae *
                       (2 * C151371 + C150807 * (C150721 + C150743 * C150951)) +
                   C150615 * (2 * C151372 +
                              C150807 * (C150658 + C150673 * C150951))))) /
        C150520;
    const double C26508 = C23170 * C26495;
    const double C33847 = C31757 * C26495;
    const double C41150 = C23168 * C26495;
    const double C47436 = C135 * C26495;
    const double C55733 = C6224 * C26495;
    const double C55717 = C6226 * C26495;
    const double C79763 = C76449 * C26495;
    const double C90014 = C67862 * C26495;
    const double C137857 = C76447 * C26495;
    const double C144102 = C67860 * C26495;
    const double C40439 = C23162 * C26497;
    const double C57773 = C152179 * C26497;
    const double C63449 = C152163 * C26497;
    const double C137146 = C76441 * C26497;
    const double C146058 = C152179 * C26497;
    const double C64765 = C64762 + C49423;
    const double C57053 = C57042 + C57043;
    const double C145370 = C145362 + C89072;
    const double C76487 = C76444 * C140;
    const double C76472 = C76444 * C139;
    const double C76469 = C76444 * C138;
    const double C76454 = C76444 * C137;
    const double C76786 = C76444 * C356;
    const double C76771 = C76444 * C351;
    const double C76762 = C76444 * C355;
    const double C76753 = C76444 * C352;
    const double C77088 = C76444 * C593;
    const double C77073 = C76444 * C588;
    const double C77064 = C76444 * C592;
    const double C77055 = C76444 * C589;
    const double C77331 = C76444 * C350;
    const double C77543 = C76444 * C587;
    const double C77865 = C76444 * C1157;
    const double C77850 = C76444 * C1156;
    const double C78675 = C76444 * C1441;
    const double C78983 = C76444 * C1623;
    const double C80061 = C76444 * C1619;
    const double C80273 = C76444 * C2563;
    const double C134563 = C76444 * C591;
    const double C134553 = C76444 * C590;
    const double C135261 = C76444 * C1155;
    const double C135853 = C76444 * C1625;
    const double C135843 = C76444 * C1624;
    const double C135837 = C76444 * C1620;
    const double C136563 = C76444 * C2163;
    const double C137149 = C76444 * C2565;
    const double C137139 = C76444 * C2564;
    const double C137854 = C76444 * C3089;
    const double C76484 = C76446 * C358;
    const double C76475 = C76446 * C350;
    const double C76466 = C76446 * C351;
    const double C76457 = C76446 * C352;
    const double C76783 = C76446 * C1440;
    const double C76774 = C76446 * C356;
    const double C76765 = C76446 * C1441;
    const double C76750 = C76446 * C355;
    const double C77085 = C76446 * C1618;
    const double C77076 = C76446 * C1157;
    const double C77067 = C76446 * C1619;
    const double C77052 = C76446 * C1156;
    const double C77329 = C76446 * C357;
    const double C77541 = C76446 * C1158;
    const double C77862 = C76446 * C1622;
    const double C77853 = C76446 * C1623;
    const double C78673 = C76446 * C1444;
    const double C78981 = C76446 * C2164;
    const double C80059 = C76446 * C1626;
    const double C80271 = C76446 * C3090;
    const double C134561 = C76446 * C1620;
    const double C134555 = C76446 * C1155;
    const double C135263 = C76446 * C1624;
    const double C135851 = C76446 * C8218;
    const double C135845 = C76446 * C2163;
    const double C135839 = C76446 * C1625;
    const double C136565 = C76446 * C8967;
    const double C137147 = C76446 * C9540;
    const double C137141 = C76446 * C3089;
    const double C137852 = C76446 * C10283;
    const double C67907 = C67893 + C67894;
    const double C67904 = C67884 + C67885;
    const double C67903 = C67881 + C67882;
    const double C67900 = C67872 + C67873;
    const double C67898 = C67866 + C67867;
    const double C68204 = C68186 + C68187;
    const double C68201 = C68177 + C68178;
    const double C68199 = C68171 + C68172;
    const double C68197 = C68165 + C68166;
    const double C68196 = C68158 + C68159;
    const double C68194 = C68152 + C68153;
    const double C68504 = C68486 + C68487;
    const double C68501 = C68477 + C68478;
    const double C68499 = C68471 + C68472;
    const double C68497 = C68465 + C68466;
    const double C68496 = C68458 + C68459;
    const double C68494 = C68452 + C68453;
    const double C68733 = C68728 + C68190;
    const double C68940 = C68935 + C68490;
    const double C69262 = C69252 + C69253;
    const double C69259 = C69243 + C69244;
    const double C69257 = C69237 + C69238;
    const double C70071 = C70064 + C69619;
    const double C70069 = C70060 + C69617;
    const double C70383 = C70376 + C69855;
    const double C70381 = C70372 + C69853;
    const double C71465 = C71458 + C69849;
    const double C71463 = C71454 + C69847;
    const double C71681 = C71674 + C71153;
    const double C71679 = C71670 + C71151;
    const double C85674 = C85665 + C68463;
    const double C85671 = C85657 + C68462;
    const double C86593 = C86586 + C69235;
    const double C87372 = C87359 + C69858;
    const double C87370 = C87355 + C69860;
    const double C87367 = C87349 + C69857;
    const double C87365 = C87345 + C69851;
    const double C88311 = C88303 + C70586;
    const double C89080 = C89069 + C71156;
    const double C89078 = C89065 + C71158;
    const double C89075 = C89059 + C71155;
    const double C89486 = C89482 + C71886;
    const double C90018 = C90011 + C71884;
    const double C144107 = C144100 + C87361;
    const double C144796 = C144790 + C88307;
    const double C145371 = C145364 + C89071;
    const double C146065 = C146059 + C90013;
    const double C23248 = C23236 + C23207;
    const double C23245 = C23233 + C23198;
    const double C23242 = C23230 + C23189;
    const double C23239 = C23227 + C23180;
    const double C23547 = C23535 + C23497;
    const double C23544 = C23532 + C23488;
    const double C23541 = C23529 + C23473;
    const double C23852 = C23840 + C23808;
    const double C23849 = C23837 + C23799;
    const double C23846 = C23834 + C23790;
    const double C23843 = C23831 + C23775;
    const double C24064 = C24061 + C24051;
    const double C24276 = C24273 + C24263;
    const double C24605 = C24599 + C24576;
    const double C26818 = C26815 + C26805;
    const double C27030 = C27027 + C27017;
    const double C37868 = C37862 + C37849;
    const double C37865 = C37859 + C37843;
    const double C38561 = C38558 + C38551;
    const double C39164 = C39155 + C39127;
    const double C40463 = C40457 + C40441;
    const double C40460 = C40454 + C40435;
    const double C7089 = C6589 + C6590;
    const double C16004 = C1198 * C6221;
    const double C16002 = C1198 * C6222;
    const double C46862 = C1198 * C151912;
    const double C97181 = C1198 * C152314;
    const double C97179 = C1198 * C67858;
    const double C116235 = C1198 * C151912;
    const double C7296 = C6889 + C6890;
    const double C105376 = C6890 + C6889;
    const double C1819 = C1816 + C1808;
    const double C6588 = C6576 + C6540;
    const double C8459 = C8455 + C8443;
    const double C23550 = C23538 + C23506;
    const double C23548 = C23536 + C23500;
    const double C68224 = C68212 + C68176;
    const double C76827 = C76815 + C76779;
    const double C2032 = C2029 + C2021;
    const double C7636 = C7630 + C7612;
    const double C8771 = C8767 + C8755;
    const double C23850 = C23838 + C23802;
    const double C24608 = C24602 + C24585;
    const double C69272 = C69266 + C69248;
    const double C77129 = C77117 + C77081;
    const double C8445 = C152179 * C1460;
    const double C23491 = C23162 * C1460;
    const double C25407 = C23161 * C1460;
    const double C70063 = C152179 * C1460;
    const double C76770 = C76441 * C1460;
    const double C78674 = C152346 * C1460;
    const double C8452 = C8444 + C7991;
    const double C23521 = C23489 + C23490;
    const double C25414 = C25406 + C24957;
    const double C70070 = C70062 + C69618;
    const double C76800 = C76768 + C76769;
    const double C16807 = C16804 + C2177;
    const double C8764 = C8756 + C8236;
    const double C106773 = C106770 + C8979;
    const double C24594 = C24577 + C24578;
    const double C25722 = C25714 + C25199;
    const double C70382 = C70374 + C69854;
    const double C87652 = C87649 + C70588;
    const double C77873 = C77856 + C77857;
    const double C49419 = C47425 + C47426;
    const double C118740 = C116796 + C116797;
    const double C57570 = C57563 * C151907;
    const double C151070 = ae * C151069;
    const double C7982 = (4 * C150879 + C150615 * C151069 +
                          (3 * C150869 + C150615 * C151058) * ae) /
                         C150502;
    const double C8970 = (C150807 * C151069) / C150502;
    const double C39135 = C23162 * C8973;
    const double C39853 = C23161 * C8973;
    const double C56457 = C152179 * C8973;
    const double C88306 = C152179 * C8973;
    const double C135848 = C76441 * C8973;
    const double C136566 = C152346 * C8973;
    const double C55753 = C55745 + C55715;
    const double C47444 = C47442 + C47435;
    const double C40461 = C40455 + C40437;
    const double C41159 = C41156 + C41146;
    const double C55759 = C55751 + C55732;
    const double C90021 = C90019 + C90010;
    const double C137168 = C137162 + C137144;
    const double C57063 = C57059 + C57060;
    const double C49428 = C49427 * C152262;
    const double C63444 = C49427 * C151907;
    const double C118742 = C49427 * C76442;
    const double C16577 = C2033 * C6221;
    const double C17102 = C2033 * C6220;
    const double C47429 = C2033 * C151912;
    const double C47936 = C2033 * C152262;
    const double C63779 = C2033 * C151907;
    const double C97745 = C2033 * C152314;
    const double C98234 = C2033 * C152350;
    const double C116800 = C2033 * C151912;
    const double C117290 = C2033 * C76442;
    const double C105764 = C7634 + C7633;
    const double C105763 = C7633 + C7634;
    const double C16606 = C16601 * C6221;
    const double C47431 = C16601 * C151912;
    const double C47938 = C16601 * C152262;
    const double C63780 = C16601 * C151907;
    const double C97748 = C16601 * C152314;
    const double C116802 = C16601 * C151912;
    const double C117292 = C16601 * C76442;
    const double C57355 = C9873 + C9872;
    const double C108552 = C9872 + C9873;
    const double C17307 = C17306 + C2176;
    const double C55747 = C55739 + C8238;
    const double C56468 = C56464 + C8977;
    const double C38559 = C38556 + C24570;
    const double C39158 = C39149 + C25202;
    const double C39862 = C39859 + C25930;
    const double C87376 = C87368 + C69856;
    const double C135272 = C135269 + C77849;
    const double C55749 = C55741 + C8241;
    const double C48142 = C48141 + C17303;
    const double C39161 = C39152 + C25205;
    const double C39156 = C39147 + C25195;
    const double C56470 = C56466 + C55489;
    const double C87379 = C87371 + C69859;
    const double C135869 = C135860 + C78462;
    const double C55737 = C55716 * C151907;
    const double C64305 = C64304 * C151907;
    const double C385 =
        (4 * C150662 + C150622 * C150679 + C150791 + C150791 +
         C150615 *
             (2 * ae * C150788 +
              C150615 *
                  (4 * C150677 +
                   C150622 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C414 = C135 * C373;
    const double C7095 = C6226 * C373;
    const double C23213 = C23170 * C373;
    const double C68731 = C67862 * C373;
    const double C76492 = C76449 * C373;
    const double C1187 = C135 * C1166;
    const double C7302 = C6226 * C1166;
    const double C68938 = C67862 * C1166;
    const double C150993 = ae * C150992;
    const double C1802 =
        (2 * C150758 + C150615 * C150992 + (C150753 + C150781 * C150619) * ae) /
        C150502;
    const double C2015 = (C150807 * C150992) / C150502;
    const double C150948 = C150947 + C150941;
    const double C2174 =
        (2 * (2 * ae * C150807 * C150752 + C150615 * C151016) + C151019 +
         C151019 +
         C150615 *
             (C151016 + C151020 + C151020 +
              C150615 * (2 * ae * C150807 * C150780 +
                         C150615 * C150807 *
                             (2 * C150622 * C150673 +
                              C150622 * (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C151140 = C151111 + C151138;
    const double C151204 = ae * C151199;
    const double C151327 = C151326 + C151315;
    const double C151364 = ae * C151359;
    const double C27228 = (2 * C151186 + C150807 * C151359) / C150502;
    const double C27230 =
        (2 * (2 * ae * (2 * C151184 + C150807 * C151357) + C150615 * C151438) +
         C151440 + C151440 +
         C150615 *
             (C151438 + C151437 + C151437 +
              C150615 *
                  (2 * ae *
                       (2 * C151390 + C150807 * (C150764 + C151288 * C150951)) +
                   C150615 *
                       (2 * C151391 +
                        C150807 * (C151284 + C150622 *
                                                 (C150667 * C150668 +
                                                  C150619 * bs[9] *
                                                      std::pow(C150617, 9)) *
                                                 C150618 * C150951))))) /
        C150520;
    const double C26511 = C23170 * C26496;
    const double C47437 = C135 * C26496;
    const double C57361 = C6226 * C26496;
    const double C79766 = C76449 * C26496;
    const double C90016 = C67862 * C26496;
    const double C151497 = ae * C151495;
    const double C151496 = C150615 * C151495;
    const double C151509 = C151495 * C150951;
    const double C151536 = C150807 * C151495;
    const double C151586 = C151581 + C151582;
    const double C151575 = ae * C151573;
    const double C40428 = (4 * C151430 + C150807 * C151573) / C150502;
    const double C40430 =
        (4 * C151429 + C150807 * C151572 + C151596 + C151596 +
         C150615 *
             (2 * ae *
                  (4 * C151585 +
                   C150807 *
                       (3 * C151514 +
                        C150807 * (2 * C151533 +
                                   C150807 * (C150743 + C150771 * C150951)))) +
              C150615 *
                  (4 * C151566 +
                   C150807 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C151534 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150951)))))) /
        C150520;
    const double C57049 = C6226 * C57034;
    const double C64764 = C135 * C57034;
    const double C145367 = C67862 * C57034;
    const double C430 = C422 + C411;
    const double C7098 = C7096 + C6553;
    const double C23235 = C23223 + C23203;
    const double C68734 = C68732 + C68189;
    const double C76514 = C76502 + C76482;
    const double C1195 = C1191 + C1185;
    const double C7305 = C7303 + C6853;
    const double C68941 = C68939 + C68489;
    const double C15304 = C675 * C6222;
    const double C46562 = C675 * C151912;
    const double C96490 = C675 * C67858;
    const double C115935 = C675 * C151912;
    const double C15705 = C961 * C6222;
    const double C96883 = C961 * C67858;
    const double C1806 = C152163 * C1455;
    const double C6549 = C152179 * C1455;
    const double C24049 = C23162 * C1455;
    const double C68185 = C152179 * C1455;
    const double C77328 = C76441 * C1455;
    const double C1812 = C1805 + C1464;
    const double C6567 = C6547 + C6548;
    const double C24057 = C24048 + C23510;
    const double C68203 = C68183 + C68184;
    const double C77336 = C77327 + C76789;
    const double C2025 = C2018 + C1658;
    const double C7625 = C7613 + C7614;
    const double C24269 = C24260 + C23812;
    const double C69261 = C69249 + C69250;
    const double C77548 = C77539 + C77091;
    const double C18200 = C2804 * C6222;
    const double C46864 = C2804 * C151912;
    const double C99288 = C2804 * C67858;
    const double C116237 = C2804 * C151912;
    const double C1461 =
        (3 * (C150648 + C150831 + C150831 + C150615 * C150916) + C150926 +
         C150926 +
         C150615 *
             (2 * C150916 + C150923 + C150923 +
              C150615 * (C150660 + C150919 + C150919 +
                         C150615 * (2 * ae * C150748 + C150615 * C150675)))) /
        C150520;
    const double C1470 = C135 * C1453;
    const double C7999 = C6224 * C1453;
    const double C7989 = C6226 * C1453;
    const double C23502 = C23170 * C1453;
    const double C25411 = C23168 * C1453;
    const double C31949 = C31757 * C1453;
    const double C31943 = C31759 * C1453;
    const double C69626 = C67860 * C1453;
    const double C69616 = C67862 * C1453;
    const double C76781 = C76449 * C1453;
    const double C78678 = C76447 * C1453;
    const double C2178 = C135 * C2169;
    const double C8234 = C6226 * C2169;
    const double C8981 = C6224 * C2169;
    const double C24581 = C23170 * C2169;
    const double C25719 = C23168 * C2169;
    const double C32113 = C31759 * C2169;
    const double C32593 = C31757 * C2169;
    const double C69852 = C67862 * C2169;
    const double C70590 = C67860 * C2169;
    const double C77860 = C76449 * C2169;
    const double C78986 = C76447 * C2169;
    const double C8245 = C6226 * C8223;
    const double C17305 = C135 * C8223;
    const double C26810 = C23170 * C8223;
    const double C32120 = C31759 * C8223;
    const double C69863 = C67862 * C8223;
    const double C80065 = C76449 * C8223;
    const double C16600 = C16595 + C16580;
    const double C9870 = C9866 + C9853;
    const double C23851 = C23839 + C23805;
    const double C71470 = C71466 + C71453;
    const double C77130 = C77118 + C77084;
    const double C18600 = C18207 * C6222;
    const double C49020 = C18207 * C151912;
    const double C63068 = C18207 * C151907;
    const double C99682 = C18207 * C67858;
    const double C118347 = C18207 * C151912;
    const double C151105 = C151104 + C151097;
    const double C8974 =
        (3 * (C151004 + C151008 + C151008 + C150615 * C151195) + C151191 +
         C151191 +
         C150615 *
             (2 * C151195 + C151192 + C151192 +
              C150615 * (C151185 + C151193 + C151193 +
                         C150615 * (2 * ae * C150807 * C150764 +
                                    C150615 * C150807 * C150622 * C150673)))) /
        C150520;
    const double C56255 = C56250 + C8243;
    const double C47643 = C47641 + C17304;
    const double C26811 = C26802 + C25192;
    const double C87369 = C87353 + C69861;
    const double C80066 = C80057 + C78459;
    const double C57365 = C57363 + C10296;
    const double C47441 = C47439 + C16586;
    const double C27026 = C27023 + C26500;
    const double C89487 = C89485 + C71887;
    const double C80281 = C80278 + C79755;
    const double C57575 = C57573 + C57565;
    const double C49024 = C49023 + C49018;
    const double C89089 = C89083 + C89064;
    const double C151490 = C151465 + C151487;
    const double C151276 = ae * C151274;
    const double C151275 = C150615 * C151274;
    const double C151373 = C150807 * C151274;
    const double C151447 = 5 * C151274;
    const double C25187 = (C151069 + C151274 * C150951) / C150502;
    const double C25189 =
        (3 * (C151147 + C151151 + C151151 + C150615 * C151350) + C151346 +
         C151346 +
         C150615 *
             (2 * C151350 + C151347 + C151347 +
              C150615 *
                  (C151340 + C151348 + C151348 +
                   C150615 * (2 * ae * (C150721 + C150743 * C150951) +
                              C150615 * (C150658 + C150673 * C150951))))) /
        C150520;
    const double C27234 = C23170 * C27227;
    const double C33841 = C31759 * C27227;
    const double C34316 = C31757 * C27227;
    const double C39143 = C23168 * C27227;
    const double C48139 = C135 * C27227;
    const double C55728 = C6226 * C27227;
    const double C56462 = C6224 * C27227;
    const double C80483 = C76449 * C27227;
    const double C87362 = C67862 * C27227;
    const double C135856 = C76447 * C27227;
    const double C144794 = C67860 * C27227;
    const double C41144 = C23162 * C27229;
    const double C55729 = C152179 * C27229;
    const double C63915 = C152163 * C27229;
    const double C137851 = C76441 * C27229;
    const double C144099 = C152179 * C27229;
    const double C40450 = C40438 + C26508;
    const double C63451 = C63448 + C47436;
    const double C57779 = C57772 + C55717;
    const double C137157 = C137145 + C79763;
    const double C146064 = C146057 + C90014;
    const double C64766 = C64765 + C49423;
    const double C57057 = C57053 + C57043;
    const double C145372 = C145370 + C89072;
    const double C76504 = C76487 + C76488;
    const double C76499 = C76472 + C76473;
    const double C76498 = C76469 + C76470;
    const double C76493 = C76454 + C76455;
    const double C76806 = C76786 + C76787;
    const double C76801 = C76771 + C76772;
    const double C76798 = C76762 + C76763;
    const double C76797 = C76753 + C76754;
    const double C77108 = C77088 + C77089;
    const double C77103 = C77073 + C77074;
    const double C77100 = C77064 + C77065;
    const double C77099 = C77055 + C77056;
    const double C77338 = C77331 + C76791;
    const double C77550 = C77543 + C77093;
    const double C77876 = C77865 + C77866;
    const double C77871 = C77850 + C77851;
    const double C78682 = C78675 + C78231;
    const double C78990 = C78983 + C78467;
    const double C80068 = C80061 + C78461;
    const double C80280 = C80273 + C79757;
    const double C134570 = C134563 + C77061;
    const double C134565 = C134553 + C77060;
    const double C135267 = C135261 + C77847;
    const double C135866 = C135853 + C78471;
    const double C135861 = C135843 + C78470;
    const double C135858 = C135837 + C78464;
    const double C136572 = C136563 + C79191;
    const double C137159 = C137149 + C79761;
    const double C137154 = C137139 + C79760;
    const double C137861 = C137854 + C80481;
    const double C76503 = C76484 + C76485;
    const double C76500 = C76475 + C76476;
    const double C76497 = C76466 + C76467;
    const double C76494 = C76457 + C76458;
    const double C76805 = C76783 + C76784;
    const double C76802 = C76774 + C76775;
    const double C76799 = C76765 + C76766;
    const double C76796 = C76750 + C76751;
    const double C77107 = C77085 + C77086;
    const double C77104 = C77076 + C77077;
    const double C77101 = C77067 + C77068;
    const double C77098 = C77052 + C77053;
    const double C77337 = C77329 + C76790;
    const double C77549 = C77541 + C77092;
    const double C77875 = C77862 + C77863;
    const double C77872 = C77853 + C77854;
    const double C78681 = C78673 + C78230;
    const double C78989 = C78981 + C78466;
    const double C80067 = C80059 + C78460;
    const double C80279 = C80271 + C79756;
    const double C134569 = C134561 + C77062;
    const double C134566 = C134555 + C77059;
    const double C135268 = C135263 + C77848;
    const double C135865 = C135851 + C78472;
    const double C135862 = C135845 + C78469;
    const double C135859 = C135839 + C78463;
    const double C137158 = C137147 + C79762;
    const double C137155 = C137141 + C79759;
    const double C137860 = C137852 + C80482;
    const double C67917 = C67907 + C67894;
    const double C67914 = C67904 + C67885;
    const double C67913 = C67903 + C67882;
    const double C67910 = C67900 + C67873;
    const double C67908 = C67898 + C67867;
    const double C68216 = C68204 + C68187;
    const double C68213 = C68201 + C68178;
    const double C68211 = C68199 + C68172;
    const double C68209 = C68197 + C68166;
    const double C68208 = C68196 + C68159;
    const double C68206 = C68194 + C68153;
    const double C68516 = C68504 + C68487;
    const double C68513 = C68501 + C68478;
    const double C68511 = C68499 + C68472;
    const double C68509 = C68497 + C68466;
    const double C68508 = C68496 + C68459;
    const double C68506 = C68494 + C68453;
    const double C68735 = C68733 + C68190;
    const double C68942 = C68940 + C68490;
    const double C69268 = C69262 + C69253;
    const double C69265 = C69259 + C69244;
    const double C69263 = C69257 + C69238;
    const double C70075 = C70071 + C69619;
    const double C70073 = C70069 + C69617;
    const double C70387 = C70383 + C69855;
    const double C70385 = C70381 + C69853;
    const double C71469 = C71465 + C69849;
    const double C71467 = C71463 + C69847;
    const double C71685 = C71681 + C71153;
    const double C71683 = C71679 + C71151;
    const double C85678 = C85674 + C68463;
    const double C85675 = C85671 + C68462;
    const double C86595 = C86593 + C69235;
    const double C87380 = C87372 + C69858;
    const double C87378 = C87370 + C69860;
    const double C87375 = C87367 + C69857;
    const double C87373 = C87365 + C69851;
    const double C88313 = C88311 + C70586;
    const double C89086 = C89080 + C71156;
    const double C89084 = C89078 + C71158;
    const double C89081 = C89075 + C71155;
    const double C89488 = C89486 + C71886;
    const double C90020 = C90018 + C71884;
    const double C144109 = C144107 + C87361;
    const double C144798 = C144796 + C88307;
    const double C145373 = C145371 + C89071;
    const double C146067 = C146065 + C90013;
    const double C6594 = C6587 + C6588;
    const double C16578 = C2032 * C6222;
    const double C17103 = C2032 * C6221;
    const double C47937 = C2032 * C151912;
    const double C97746 = C2032 * C67858;
    const double C98235 = C2032 * C152314;
    const double C117291 = C2032 * C151912;
    const double C7639 = C7635 + C7636;
    const double C105765 = C7636 + C7635;
    const double C8456 = C8452 + C7991;
    const double C23533 = C23521 + C23490;
    const double C25417 = C25414 + C24957;
    const double C70074 = C70070 + C69618;
    const double C76812 = C76800 + C76769;
    const double C16809 = C16807 + C2177;
    const double C8768 = C8764 + C8236;
    const double C106775 = C106773 + C8979;
    const double C24600 = C24594 + C24578;
    const double C25725 = C25722 + C25199;
    const double C70386 = C70382 + C69854;
    const double C87654 = C87652 + C70588;
    const double C77879 = C77873 + C77857;
    const double C7985 =
        (4 * (2 * C150870 + C150877 + C150877 + C150615 * C151059) + C151070 +
         C151070 +
         C150615 * (3 * C151059 + C151067 + C151067 +
                    C150615 * (2 * C151051 + C151063 + C151063 +
                               C150615 * (C150646 + C151055 + C151055 +
                                          C150615 * (2 * ae * C150721 +
                                                     C150615 * C150658))))) /
        C150520;
    const double C7996 = C6226 * C7982;
    const double C24963 = C23168 * C7982;
    const double C24959 = C23170 * C7982;
    const double C31934 = C31759 * C7982;
    const double C32831 = C31755 * C7982;
    const double C32827 = C31757 * C7982;
    const double C69623 = C67862 * C7982;
    const double C78236 = C76447 * C7982;
    const double C78232 = C76449 * C7982;
    const double C8978 = C6226 * C8970;
    const double C16350 = C135 * C8970;
    const double C25201 = C23170 * C8970;
    const double C25931 = C23168 * C8970;
    const double C32586 = C31759 * C8970;
    const double C32988 = C31757 * C8970;
    const double C33461 = C31755 * C8970;
    const double C38903 = C23166 * C8970;
    const double C55490 = C6224 * C8970;
    const double C70587 = C67862 * C8970;
    const double C78468 = C76449 * C8970;
    const double C79192 = C76447 * C8970;
    const double C87051 = C67860 * C8970;
    const double C135616 = C76445 * C8970;
    const double C57771 = C55752 + C55753;
    const double C47446 = C47444 * C152262;
    const double C63447 = C47444 * C151907;
    const double C116804 = C47444 * C76442;
    const double C57064 = C57063 * C151907;
    const double C47438 = C47430 + C47431;
    const double C116805 = C116801 + C116802;
    const double C57362 = C57355 * C151907;
    const double C17308 = C17307 + C17300;
    const double C55755 = C55747 + C55722;
    const double C56472 = C56468 + C56455;
    const double C38562 = C38559 + C38553;
    const double C39167 = C39158 + C39133;
    const double C39865 = C39862 + C39851;
    const double C87384 = C87376 + C87352;
    const double C135275 = C135272 + C135266;
    const double C55757 = C55749 + C55726;
    const double C48143 = C48142 + C48137;
    const double C39170 = C39161 + C39139;
    const double C39165 = C39156 + C39129;
    const double C56474 = C56470 + C56459;
    const double C87387 = C87379 + C87358;
    const double C135878 = C135869 + C135842;
    const double C1803 =
        (2 * (2 * ae * C150756 + C150615 * C150679) + C150993 + C150993 +
         C150615 *
             (C150679 + C150990 + C150990 +
              C150615 *
                  (2 * ae * C150784 +
                   C150615 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C1811 = C135 * C1802;
    const double C6556 = C6226 * C1802;
    const double C24056 = C23170 * C1802;
    const double C31780 = C31759 * C1802;
    const double C68192 = C67862 * C1802;
    const double C77335 = C76449 * C1802;
    const double C2024 = C135 * C2015;
    const double C7620 = C6226 * C2015;
    const double C24268 = C23170 * C2015;
    const double C69256 = C67862 * C2015;
    const double C77547 = C76449 * C2015;
    const double C150949 = ae * C150948;
    const double C1454 = (3 * C150822 + C150615 * C150948 +
                          (2 * C150816 + C150615 * C150938) * ae) /
                         C150502;
    const double C2170 = (C150807 * C150948) / C150502;
    const double C151141 = C151140 + C151133;
    const double C8975 =
        (3 * (C151010 + C151014 + C151014 + C150615 * C151208) + C151204 +
         C151204 +
         C150615 *
             (2 * C151208 + C151205 + C151205 +
              C150615 * (C151198 + C151206 + C151206 +
                         C150615 * (2 * ae * C150807 * C150776 +
                                    C150615 * C150807 *
                                        (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C151329 = ae * C151327;
    const double C151328 = C150615 * C151327;
    const double C151392 = C150807 * C151327;
    const double C25190 =
        (3 * (C151156 + C151160 + C151160 + C150615 * C151368) + C151364 +
         C151364 +
         C150615 *
             (2 * C151368 + C151365 + C151365 +
              C150615 * (C151358 + C151366 + C151366 +
                         C150615 * (2 * ae * (C150764 + C151288 * C150951) +
                                    C150615 * (C151284 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150951))))) /
        C150520;
    const double C27237 = C23170 * C27228;
    const double C34180 = C31759 * C27228;
    const double C48140 = C135 * C27228;
    const double C56253 = C6226 * C27228;
    const double C80486 = C76449 * C27228;
    const double C87364 = C67862 * C27228;
    const double C151498 = C151448 + C151496;
    const double C151516 = C151274 + C151509;
    const double C151545 = ae * C151536;
    const double C151588 = ae * C151586;
    const double C33838 = (3 * C151341 + C150807 * C151586) / C150502;
    const double C33839 =
        (2 * (2 * ae *
                  (3 * C151339 + C150807 * (2 * C151371 + C150807 * C151514)) +
              C150615 * C151572) +
         C151575 + C151575 +
         C150615 *
             (C151572 + C151576 + C151576 +
              C150615 *
                  (2 * ae *
                       (3 * C151514 +
                        C150807 * (2 * C151533 +
                                   C150807 * (C150743 + C150771 * C150951))) +
                   C150615 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C151534 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150951)))))) /
        C150520;
    const double C40446 = C23170 * C40428;
    const double C57777 = C6226 * C40428;
    const double C63450 = C135 * C40428;
    const double C137153 = C76449 * C40428;
    const double C146062 = C67862 * C40428;
    const double C438 = C430 + C412;
    const double C7100 = C7098 + C7091;
    const double C23247 = C23235 + C23204;
    const double C68736 = C68734 + C68727;
    const double C76526 = C76514 + C76483;
    const double C1199 = C1195 + C1186;
    const double C7307 = C7305 + C7298;
    const double C68943 = C68941 + C68934;
    const double C1815 = C1812 + C1464;
    const double C6579 = C6567 + C6548;
    const double C24060 = C24057 + C23510;
    const double C68215 = C68203 + C68184;
    const double C77339 = C77336 + C76789;
    const double C2028 = C2025 + C1658;
    const double C7631 = C7625 + C7614;
    const double C24272 = C24269 + C23812;
    const double C69267 = C69261 + C69250;
    const double C77551 = C77548 + C77091;
    const double C8441 = C152179 * C1461;
    const double C23503 = C23162 * C1461;
    const double C70059 = C152179 * C1461;
    const double C76782 = C76441 * C1461;
    const double C8450 = C8440 + C7989;
    const double C23525 = C23501 + C23502;
    const double C70068 = C70058 + C69616;
    const double C76804 = C76780 + C76781;
    const double C16806 = C16802 + C2178;
    const double C8762 = C8752 + C8234;
    const double C24595 = C24580 + C24581;
    const double C70380 = C70370 + C69852;
    const double C77874 = C77859 + C77860;
    const double C16605 = C16600 * C6222;
    const double C47939 = C16600 * C151912;
    const double C97747 = C16600 * C67858;
    const double C117293 = C16600 * C151912;
    const double C151106 = ae * C151105;
    const double C7983 = (4 * C150902 + C150615 * C151105 +
                          (3 * C150892 + C150615 * C151094) * ae) /
                         C150502;
    const double C8971 = (C150807 * C151105) / C150502;
    const double C25188 = (C151105 + C151327 * C150951) / C150502;
    const double C25713 = C23162 * C8974;
    const double C78980 = C76441 * C8974;
    const double C87648 = C152179 * C8974;
    const double C106769 = C152179 * C8974;
    const double C56257 = C56255 + C8243;
    const double C47644 = C47643 + C17304;
    const double C26814 = C26811 + C25192;
    const double C87377 = C87369 + C69861;
    const double C80069 = C80066 + C78459;
    const double C57367 = C57365 + C57357;
    const double C47443 = C47441 + C47433;
    const double C27029 = C27026 + C27015;
    const double C89489 = C89487 + C89481;
    const double C80284 = C80281 + C80270;
    const double C49420 = C49024 * C151912;
    const double C64500 = C49024 * C151907;
    const double C118741 = C49024 * C151912;
    const double C151277 = C151235 + C151275;
    const double C151380 = ae * C151373;
    const double C25206 = C23170 * C25187;
    const double C32993 = C31757 * C25187;
    const double C32983 = C31759 * C25187;
    const double C39857 = C23168 * C25187;
    const double C47205 = C135 * C25187;
    const double C55492 = C6224 * C25187;
    const double C55488 = C6226 * C25187;
    const double C78473 = C76449 * C25187;
    const double C88308 = C67862 * C25187;
    const double C136570 = C76447 * C25187;
    const double C143876 = C67860 * C25187;
    const double C39137 = C23162 * C25189;
    const double C56461 = C152179 * C25189;
    const double C135850 = C76441 * C25189;
    const double C144793 = C152179 * C25189;
    const double C41152 = C41143 + C27234;
    const double C63917 = C63914 + C48139;
    const double C55742 = C55727 + C55728;
    const double C137859 = C137850 + C80483;
    const double C144106 = C144098 + C87362;
    const double C40456 = C40450 + C26508;
    const double C63452 = C63451 + C47436;
    const double C57781 = C57779 + C55717;
    const double C137163 = C137157 + C79763;
    const double C146066 = C146064 + C90014;
    const double C64767 = C64766 + C64763;
    const double C57061 = C57057 + C57044;
    const double C145374 = C145372 + C145363;
    const double C76516 = C76504 + C76488;
    const double C76511 = C76499 + C76473;
    const double C76510 = C76498 + C76470;
    const double C76505 = C76493 + C76455;
    const double C76818 = C76806 + C76787;
    const double C76813 = C76801 + C76772;
    const double C76810 = C76798 + C76763;
    const double C76809 = C76797 + C76754;
    const double C77120 = C77108 + C77089;
    const double C77115 = C77103 + C77074;
    const double C77112 = C77100 + C77065;
    const double C77111 = C77099 + C77056;
    const double C77341 = C77338 + C76791;
    const double C77553 = C77550 + C77093;
    const double C77882 = C77876 + C77866;
    const double C77877 = C77871 + C77851;
    const double C78685 = C78682 + C78231;
    const double C78993 = C78990 + C78467;
    const double C80071 = C80068 + C78461;
    const double C80283 = C80280 + C79757;
    const double C134576 = C134570 + C77061;
    const double C134571 = C134565 + C77060;
    const double C135270 = C135267 + C77847;
    const double C135875 = C135866 + C78471;
    const double C135870 = C135861 + C78470;
    const double C135867 = C135858 + C78464;
    const double C136575 = C136572 + C79191;
    const double C137165 = C137159 + C79761;
    const double C137160 = C137154 + C79760;
    const double C137864 = C137861 + C80481;
    const double C76515 = C76503 + C76485;
    const double C76512 = C76500 + C76476;
    const double C76509 = C76497 + C76467;
    const double C76506 = C76494 + C76458;
    const double C76817 = C76805 + C76784;
    const double C76814 = C76802 + C76775;
    const double C76811 = C76799 + C76766;
    const double C76808 = C76796 + C76751;
    const double C77119 = C77107 + C77086;
    const double C77116 = C77104 + C77077;
    const double C77113 = C77101 + C77068;
    const double C77110 = C77098 + C77053;
    const double C77340 = C77337 + C76790;
    const double C77552 = C77549 + C77092;
    const double C77881 = C77875 + C77863;
    const double C77878 = C77872 + C77854;
    const double C78684 = C78681 + C78230;
    const double C78992 = C78989 + C78466;
    const double C80070 = C80067 + C78460;
    const double C80282 = C80279 + C79756;
    const double C134575 = C134569 + C77062;
    const double C134572 = C134566 + C77059;
    const double C135271 = C135268 + C77848;
    const double C135874 = C135865 + C78472;
    const double C135871 = C135862 + C78469;
    const double C135868 = C135859 + C78463;
    const double C137164 = C137158 + C79762;
    const double C137161 = C137155 + C79759;
    const double C137863 = C137860 + C80482;
    const double C67927 = C67917 + C67895;
    const double C67924 = C67914 + C67886;
    const double C67923 = C67913 + C67883;
    const double C67920 = C67910 + C67874;
    const double C67918 = C67908 + C67868;
    const double C68228 = C68216 + C68188;
    const double C68225 = C68213 + C68179;
    const double C68223 = C68211 + C68173;
    const double C68221 = C68209 + C68167;
    const double C68220 = C68208 + C68160;
    const double C68218 = C68206 + C68154;
    const double C68528 = C68516 + C68488;
    const double C68525 = C68513 + C68479;
    const double C68523 = C68511 + C68473;
    const double C68521 = C68509 + C68467;
    const double C68520 = C68508 + C68460;
    const double C68518 = C68506 + C68454;
    const double C68737 = C68735 + C68729;
    const double C68944 = C68942 + C68936;
    const double C69274 = C69268 + C69254;
    const double C69271 = C69265 + C69245;
    const double C69269 = C69263 + C69239;
    const double C70079 = C70075 + C70065;
    const double C70077 = C70073 + C70061;
    const double C70391 = C70387 + C70377;
    const double C70389 = C70385 + C70373;
    const double C71473 = C71469 + C71459;
    const double C71471 = C71467 + C71455;
    const double C71689 = C71685 + C71675;
    const double C71687 = C71683 + C71671;
    const double C85682 = C85678 + C85666;
    const double C85679 = C85675 + C85658;
    const double C86597 = C86595 + C86587;
    const double C87388 = C87380 + C87360;
    const double C87386 = C87378 + C87356;
    const double C87383 = C87375 + C87350;
    const double C87381 = C87373 + C87346;
    const double C88315 = C88313 + C88304;
    const double C89092 = C89086 + C89070;
    const double C89090 = C89084 + C89066;
    const double C89087 = C89081 + C89060;
    const double C89490 = C89488 + C89483;
    const double C90022 = C90020 + C90012;
    const double C144111 = C144109 + C144101;
    const double C144800 = C144798 + C144791;
    const double C145375 = C145373 + C145365;
    const double C146069 = C146067 + C146060;
    const double C8460 = C8456 + C8445;
    const double C23545 = C23533 + C23491;
    const double C25420 = C25417 + C25407;
    const double C70078 = C70074 + C70063;
    const double C76824 = C76812 + C76770;
    const double C16811 = C16809 + C16805;
    const double C8772 = C8768 + C8757;
    const double C106777 = C106775 + C106771;
    const double C24606 = C24600 + C24579;
    const double C25728 = C25725 + C25715;
    const double C70390 = C70386 + C70375;
    const double C87656 = C87654 + C87650;
    const double C77885 = C77879 + C77858;
    const double C56465 = C56456 + C8978;
    const double C39150 = C39134 + C25201;
    const double C39860 = C39852 + C25931;
    const double C88312 = C88305 + C70587;
    const double C135863 = C135847 + C78468;
    const double C136573 = C136565 + C79192;
    const double C57778 = C57771 * C151907;
    const double C17309 = C17308 * C6220;
    const double C48134 = C17308 * C152262;
    const double C63912 = C17308 * C151907;
    const double C98431 = C17308 * C152350;
    const double C117488 = C17308 * C76442;
    const double C55760 = C55756 + C55757;
    const double C48144 = C48143 * C152262;
    const double C63913 = C48143 * C151907;
    const double C117490 = C48143 * C76442;
    const double C1462 =
        (3 * (C150662 + C150820 + C150820 + C150615 * C150939) + C150949 +
         C150949 +
         C150615 *
             (2 * C150939 + C150946 + C150946 +
              C150615 *
                  (C150677 + C150942 + C150942 +
                   C150615 *
                       (2 * ae * C150780 +
                        C150615 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C1471 = C135 * C1454;
    const double C8449 = C6226 * C1454;
    const double C23515 = C23170 * C1454;
    const double C32254 = C31759 * C1454;
    const double C70067 = C67862 * C1454;
    const double C76794 = C76449 * C1454;
    const double C2179 = C135 * C2170;
    const double C8761 = C6226 * C2170;
    const double C24591 = C23170 * C2170;
    const double C32388 = C31759 * C2170;
    const double C70379 = C67862 * C2170;
    const double C77870 = C76449 * C2170;
    const double C151142 = ae * C151141;
    const double C7984 = (4 * C150925 + C150615 * C151141 +
                          (3 * C150915 + C150615 * C151130) * ae) /
                         C150502;
    const double C8972 = (C150807 * C151141) / C150502;
    const double C151330 = C151285 + C151328;
    const double C151399 = ae * C151392;
    const double C151499 = C151498 + C151485;
    const double C151522 = ae * C151516;
    const double C34311 = (2 * C151373 + C150807 * C151516) / C150502;
    const double C34312 =
        (3 * (C151429 + C151428 + C151428 + C150615 * C151590) + C151588 +
         C151588 +
         C150615 *
             (2 * C151590 + C151583 + C151583 +
              C150615 *
                  (C151566 + C151584 + C151584 +
                   C150615 *
                       (2 * ae *
                            (2 * C151533 +
                             C150807 * (C150743 + C150771 * C150951)) +
                        C150615 *
                            (2 * C151534 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150951)))))) /
        C150520;
    const double C33848 = C31759 * C33838;
    const double C41151 = C23170 * C33838;
    const double C55734 = C6226 * C33838;
    const double C63916 = C135 * C33838;
    const double C137858 = C76449 * C33838;
    const double C144103 = C67862 * C33838;
    const double C16005 = C1199 * C6222;
    const double C97182 = C1199 * C67858;
    const double C1818 = C1815 + C1806;
    const double C6591 = C6579 + C6549;
    const double C24063 = C24060 + C24049;
    const double C68227 = C68215 + C68185;
    const double C77342 = C77339 + C77328;
    const double C2031 = C2028 + C2019;
    const double C7637 = C7631 + C7615;
    const double C24275 = C24272 + C24261;
    const double C69273 = C69267 + C69251;
    const double C77554 = C77551 + C77540;
    const double C8454 = C8450 + C7989;
    const double C23537 = C23525 + C23502;
    const double C70072 = C70068 + C69616;
    const double C76816 = C76804 + C76781;
    const double C16808 = C16806 + C2178;
    const double C8766 = C8762 + C8234;
    const double C24601 = C24595 + C24581;
    const double C70384 = C70380 + C69852;
    const double C77880 = C77874 + C77860;
    const double C7986 =
        (4 * (2 * C150893 + C150900 + C150900 + C150615 * C151095) + C151106 +
         C151106 +
         C150615 * (3 * C151095 + C151103 + C151103 +
                    C150615 * (2 * C151087 + C151099 + C151099 +
                               C150615 * (C150665 + C151091 + C151091 +
                                          C150615 * (2 * ae * C150764 +
                                                     C150615 * C150622 *
                                                         C150673))))) /
        C150520;
    const double C7998 = C6226 * C7983;
    const double C24966 = C23168 * C7983;
    const double C24956 = C23170 * C7983;
    const double C31939 = C31759 * C7983;
    const double C33127 = C31757 * C7983;
    const double C69625 = C67862 * C7983;
    const double C78239 = C76447 * C7983;
    const double C78229 = C76449 * C7983;
    const double C8980 = C6226 * C8971;
    const double C16351 = C135 * C8971;
    const double C25198 = C23170 * C8971;
    const double C25934 = C23168 * C8971;
    const double C32587 = C31759 * C8971;
    const double C33325 = C31757 * C8971;
    const double C70589 = C67862 * C8971;
    const double C78465 = C76449 * C8971;
    const double C79195 = C76447 * C8971;
    const double C87053 = C67860 * C8971;
    const double C106218 = C6224 * C8971;
    const double C25209 = C23170 * C25188;
    const double C34046 = C31759 * C25188;
    const double C47206 = C135 * C25188;
    const double C55957 = C6226 * C25188;
    const double C78476 = C76449 * C25188;
    const double C88310 = C67862 * C25188;
    const double C56259 = C56257 + C56251;
    const double C47645 = C47644 + C47642;
    const double C26817 = C26814 + C26803;
    const double C87385 = C87377 + C87354;
    const double C80072 = C80069 + C80058;
    const double C47445 = C47443 * C151912;
    const double C63781 = C47443 * C151907;
    const double C116803 = C47443 * C151912;
    const double C151278 = C151277 + C151269;
    const double C25927 =
        (4 * (2 * C151182 + C151179 + C151179 + C150615 * C151387) + C151380 +
         C151380 +
         C150615 *
             (3 * C151387 + C151381 + C151381 +
              C150615 *
                  (2 * C151385 + C151382 + C151382 +
                   C150615 * (C151372 + C151383 + C151383 +
                              C150615 * (2 * ae * C150807 * C150743 +
                                         C150615 * C150807 * C150673))))) /
        C150520;
    const double C39151 = C39136 + C25206;
    const double C56467 = C56460 + C55488;
    const double C135864 = C135849 + C78473;
    const double C144797 = C144792 + C88308;
    const double C41155 = C41152 + C27234;
    const double C63918 = C63917 + C48139;
    const double C55750 = C55742 + C55728;
    const double C137862 = C137859 + C80483;
    const double C144108 = C144106 + C87362;
    const double C40462 = C40456 + C40439;
    const double C63453 = C63452 + C63449;
    const double C57783 = C57781 + C57773;
    const double C137169 = C137163 + C137146;
    const double C146068 = C146066 + C146058;
    const double C64768 = C64767 * C151907;
    const double C76528 = C76516 + C76489;
    const double C76523 = C76511 + C76474;
    const double C76522 = C76510 + C76471;
    const double C76517 = C76505 + C76456;
    const double C76830 = C76818 + C76788;
    const double C76825 = C76813 + C76773;
    const double C76822 = C76810 + C76764;
    const double C76821 = C76809 + C76755;
    const double C77132 = C77120 + C77090;
    const double C77127 = C77115 + C77075;
    const double C77124 = C77112 + C77066;
    const double C77123 = C77111 + C77057;
    const double C77344 = C77341 + C77332;
    const double C77556 = C77553 + C77544;
    const double C77888 = C77882 + C77867;
    const double C77883 = C77877 + C77852;
    const double C78688 = C78685 + C78676;
    const double C78996 = C78993 + C78984;
    const double C80074 = C80071 + C80062;
    const double C80286 = C80283 + C80274;
    const double C134582 = C134576 + C134564;
    const double C134577 = C134571 + C134554;
    const double C135273 = C135270 + C135262;
    const double C135884 = C135875 + C135854;
    const double C135879 = C135870 + C135844;
    const double C135876 = C135867 + C135838;
    const double C136578 = C136575 + C136564;
    const double C137171 = C137165 + C137150;
    const double C137166 = C137160 + C137140;
    const double C137867 = C137864 + C137855;
    const double C76527 = C76515 + C76486;
    const double C76524 = C76512 + C76477;
    const double C76521 = C76509 + C76468;
    const double C76518 = C76506 + C76459;
    const double C76829 = C76817 + C76785;
    const double C76826 = C76814 + C76776;
    const double C76823 = C76811 + C76767;
    const double C76820 = C76808 + C76752;
    const double C77131 = C77119 + C77087;
    const double C77128 = C77116 + C77078;
    const double C77125 = C77113 + C77069;
    const double C77122 = C77110 + C77054;
    const double C77343 = C77340 + C77330;
    const double C77555 = C77552 + C77542;
    const double C77887 = C77881 + C77864;
    const double C77884 = C77878 + C77855;
    const double C78687 = C78684 + C78674;
    const double C78995 = C78992 + C78982;
    const double C80073 = C80070 + C80060;
    const double C80285 = C80282 + C80272;
    const double C134581 = C134575 + C134562;
    const double C134578 = C134572 + C134556;
    const double C135274 = C135271 + C135264;
    const double C135883 = C135874 + C135852;
    const double C135880 = C135871 + C135846;
    const double C135877 = C135868 + C135840;
    const double C137170 = C137164 + C137148;
    const double C137167 = C137161 + C137142;
    const double C137866 = C137863 + C137853;
    const double C67930 = C67924 + C67925;
    const double C67929 = C67922 + C67923;
    const double C67928 = C67920 + C67921;
    const double C68725 = C68225 + C68226;
    const double C68230 = C68223 + C68224;
    const double C68229 = C68217 + C68218;
    const double C68932 = C68525 + C68526;
    const double C86199 = C68526 + C68525;
    const double C68530 = C68523 + C68524;
    const double C85670 = C68524 + C68523;
    const double C85668 = C68521 + C68522;
    const double C85662 = C68522 + C68521;
    const double C85667 = C68519 + C68520;
    const double C85661 = C68520 + C68519;
    const double C68529 = C68517 + C68518;
    const double C85669 = C68518 + C68517;
    const double C69275 = C69271 + C69272;
    const double C86592 = C69272 + C69271;
    const double C86591 = C69270 + C69269;
    const double C86590 = C69269 + C69270;
    const double C89484 = C71472 + C71473;
    const double C89479 = C71473 + C71472;
    const double C89750 = C71688 + C71689;
    const double C89749 = C71689 + C71688;
    const double C142854 = C85682 + C85681;
    const double C144097 = C87388 + C87387;
    const double C144096 = C87382 + C87381;
    const double C145361 = C89092 + C89091;
    const double C145360 = C89088 + C89087;
    const double C146056 = C90022 + C90021;
    const double C17301 = C16811 * C6221;
    const double C48135 = C16811 * C151912;
    const double C98432 = C16811 * C152314;
    const double C117489 = C16811 * C151912;
    const double C107165 = C8772 + C8773;
    const double C107164 = C8773 + C8772;
    const double C88044 = C70390 + C70391;
    const double C88043 = C70391 + C70390;
    const double C56469 = C56465 + C8978;
    const double C39159 = C39150 + C25201;
    const double C39863 = C39860 + C25931;
    const double C88314 = C88312 + C70587;
    const double C135872 = C135863 + C78468;
    const double C136576 = C136573 + C79192;
    const double C55761 = C55760 * C151907;
    const double C7987 =
        (4 * (2 * C150916 + C150923 + C150923 + C150615 * C151131) + C151142 +
         C151142 +
         C150615 *
             (3 * C151131 + C151139 + C151139 +
              C150615 *
                  (2 * C151123 + C151135 + C151135 +
                   C150615 *
                       (C150675 + C151127 + C151127 +
                        C150615 *
                            (2 * ae * C150776 +
                             C150615 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C8000 = C6226 * C7984;
    const double C25412 = C23170 * C7984;
    const double C31950 = C31759 * C7984;
    const double C69627 = C67862 * C7984;
    const double C78679 = C76449 * C7984;
    const double C8982 = C6226 * C8972;
    const double C16352 = C135 * C8972;
    const double C25720 = C23170 * C8972;
    const double C32594 = C31759 * C8972;
    const double C70591 = C67862 * C8972;
    const double C78987 = C76449 * C8972;
    const double C151331 = C151330 + C151322;
    const double C25928 =
        (4 * (2 * C151195 + C151192 + C151192 + C150615 * C151406) + C151399 +
         C151399 +
         C150615 *
             (3 * C151406 + C151400 + C151400 +
              C150615 * (2 * C151404 + C151401 + C151401 +
                         C150615 * (C151391 + C151402 + C151402 +
                                    C150615 * (2 * ae * C150807 * C151288 +
                                               C150615 * C150807 * C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618))))) /
        C150520;
    const double C151501 = ae * C151499;
    const double C151500 = C150615 * C151499;
    const double C151535 = C150807 * C151499;
    const double C32981 =
        (4 * (2 * C151350 + C151347 + C151347 + C150615 * C151529) + C151522 +
         C151522 +
         C150615 *
             (3 * C151529 + C151523 + C151523 +
              C150615 *
                  (2 * C151527 + C151524 + C151524 +
                   C150615 *
                       (C151515 + C151525 + C151525 +
                        C150615 *
                            (2 * ae * (C150743 + C150771 * C150951) +
                             C150615 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150951)))))) /
        C150520;
    const double C34317 = C31759 * C34311;
    const double C39144 = C23170 * C34311;
    const double C56463 = C6226 * C34311;
    const double C63297 = C135 * C34311;
    const double C135857 = C76449 * C34311;
    const double C144795 = C67862 * C34311;
    const double C17104 = C2031 * C6222;
    const double C98236 = C2031 * C67858;
    const double C8458 = C8454 + C8441;
    const double C23549 = C23537 + C23503;
    const double C70076 = C70072 + C70059;
    const double C76828 = C76816 + C76782;
    const double C16810 = C16808 + C16803;
    const double C8770 = C8766 + C8753;
    const double C24607 = C24601 + C24582;
    const double C70388 = C70384 + C70371;
    const double C77886 = C77880 + C77861;
    const double C25405 = C23162 * C7986;
    const double C78672 = C76441 * C7986;
    const double C25413 = C25404 + C24956;
    const double C78680 = C78671 + C78229;
    const double C106772 = C106768 + C8980;
    const double C25721 = C25712 + C25198;
    const double C87651 = C87647 + C70589;
    const double C78988 = C78979 + C78465;
    const double C48138 = C47645 * C151912;
    const double C117491 = C47645 * C151912;
    const double C151279 = ae * C151278;
    const double C24951 = (5 * C151069 + C150615 * C151278 +
                           (4 * C151058 + C150615 * C151265) * ae) /
                          C150502;
    const double C25925 = (C150807 * C151278) / C150502;
    const double C32980 = (C151278 + C151499 * C150951) / C150502;
    const double C39855 = C23162 * C25927;
    const double C136568 = C76441 * C25927;
    const double C39160 = C39151 + C25206;
    const double C56471 = C56467 + C55488;
    const double C135873 = C135864 + C78473;
    const double C144799 = C144797 + C88308;
    const double C41158 = C41155 + C41144;
    const double C63919 = C63918 + C63915;
    const double C55758 = C55750 + C55729;
    const double C137865 = C137862 + C137851;
    const double C144110 = C144108 + C144099;
    const double C63454 = C63453 * C151907;
    const double C142856 = C68530 * C151907;
    const double C142855 = C85662 * C151907;
    const double C145666 = C89479 * C151907;
    const double C145861 = C89749 * C151907;
    const double C142857 = C142854 * C151907;
    const double C144105 = C144097 * C151907;
    const double C144104 = C144096 * C151907;
    const double C145369 = C145361 * C151907;
    const double C145368 = C145360 * C151907;
    const double C146063 = C146056 * C151907;
    const double C56473 = C56469 + C56457;
    const double C39168 = C39159 + C39135;
    const double C39866 = C39863 + C39853;
    const double C88316 = C88314 + C88306;
    const double C135881 = C135872 + C135848;
    const double C136579 = C136576 + C136566;
    const double C151332 = ae * C151331;
    const double C24952 = (5 * C151105 + C150615 * C151331 +
                           (4 * C151094 + C150615 * C151319) * ae) /
                          C150502;
    const double C25926 = (C150807 * C151331) / C150502;
    const double C151502 = C151447 + C151500;
    const double C151544 = ae * C151535;
    const double C17302 = C16810 * C6222;
    const double C98433 = C16810 * C67858;
    const double C25416 = C25413 + C24956;
    const double C78683 = C78680 + C78229;
    const double C106774 = C106772 + C8980;
    const double C25724 = C25721 + C25198;
    const double C87653 = C87651 + C70589;
    const double C78991 = C78988 + C78465;
    const double C24953 =
        (5 * (3 * C151059 + C151067 + C151067 + C150615 * C151267) + C151279 +
         C151279 +
         C150615 *
             (4 * C151267 + C151276 + C151276 +
              C150615 *
                  (3 * C151259 + C151272 + C151272 +
                   C150615 * (2 * C151251 + C151266 + C151266 +
                              C150615 * (C150658 + C151255 + C151255 +
                                         C150615 * (2 * ae * C150743 +
                                                    C150615 * C150673)))))) /
        C150520;
    const double C24964 = C23170 * C24951;
    const double C32832 = C31757 * C24951;
    const double C32826 = C31759 * C24951;
    const double C78237 = C76449 * C24951;
    const double C25932 = C23170 * C25925;
    const double C32987 = C31759 * C25925;
    const double C33462 = C31757 * C25925;
    const double C38904 = C23168 * C25925;
    const double C55491 = C6226 * C25925;
    const double C79193 = C76449 * C25925;
    const double C87052 = C67862 * C25925;
    const double C135617 = C76447 * C25925;
    const double C32994 = C31759 * C32980;
    const double C39858 = C23170 * C32980;
    const double C55493 = C6226 * C32980;
    const double C136571 = C76449 * C32980;
    const double C143877 = C67862 * C32980;
    const double C39169 = C39160 + C39137;
    const double C56475 = C56471 + C56461;
    const double C135882 = C135873 + C135850;
    const double C144801 = C144799 + C144793;
    const double C63920 = C63919 * C151907;
    const double C24954 =
        (5 * (3 * C151095 + C151103 + C151103 + C150615 * C151317) + C151332 +
         C151332 +
         C150615 *
             (4 * C151317 + C151329 + C151329 +
              C150615 *
                  (3 * C151310 + C151325 + C151325 +
                   C150615 *
                       (2 * C151301 + C151320 + C151320 +
                        C150615 * (C151284 + C151309 + C151309 +
                                   C150615 * (2 * ae * C151288 +
                                              C150615 * C150622 *
                                                  (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                  C150618)))))) /
        C150520;
    const double C24967 = C23170 * C24952;
    const double C33128 = C31759 * C24952;
    const double C78240 = C76449 * C24952;
    const double C25935 = C23170 * C25926;
    const double C33326 = C31759 * C25926;
    const double C79196 = C76449 * C25926;
    const double C87054 = C67862 * C25926;
    const double C106219 = C6226 * C25926;
    const double C151503 = C151502 + C151492;
    const double C33458 =
        (5 * (3 * C151387 + C151381 + C151381 + C150615 * C151555) + C151544 +
         C151544 +
         C150615 *
             (4 * C151555 + C151545 + C151545 +
              C150615 *
                  (3 * C151553 + C151546 + C151546 +
                   C150615 *
                       (2 * C151551 + C151547 + C151547 +
                        C150615 * (C151534 + C151548 + C151548 +
                                   C150615 * (2 * ae * C150807 * C150771 +
                                              C150615 * C150807 *
                                                  (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                  C150618)))))) /
        C150520;
    const double C25419 = C25416 + C25405;
    const double C78686 = C78683 + C78672;
    const double C106776 = C106774 + C106769;
    const double C25727 = C25724 + C25713;
    const double C87655 = C87653 + C87648;
    const double C78994 = C78991 + C78980;
    const double C39861 = C39854 + C25932;
    const double C136574 = C136567 + C79193;
    const double C151504 = ae * C151503;
    const double C32823 = (6 * C151278 + C150615 * C151503 +
                           (5 * C151265 + C150615 * C151489) * ae) /
                          C150502;
    const double C33457 = (C150807 * C151503) / C150502;
    const double C39864 = C39861 + C25932;
    const double C136577 = C136574 + C79193;
    const double C32824 =
        (6 * (4 * C151267 + C151276 + C151276 + C150615 * C151490) + C151504 +
         C151504 +
         C150615 *
             (5 * C151490 + C151501 + C151501 +
              C150615 *
                  (4 * C151483 + C151497 + C151497 +
                   C150615 *
                       (3 * C151475 + C151493 + C151493 +
                        C150615 *
                            (2 * C151467 + C151482 + C151482 +
                             C150615 *
                                 (C150673 + C151471 + C151471 +
                                  C150615 * (2 * ae * C150771 +
                                             C150615 *
                                                 (C150667 * C150668 +
                                                  C150619 * bs[9] *
                                                      std::pow(C150617, 9)) *
                                                 C150618))))))) /
        C150520;
    const double C32833 = C31759 * C32823;
    const double C33463 = C31759 * C33457;
    const double C38905 = C23170 * C33457;
    const double C135618 = C76449 * C33457;
    const double C39867 = C39864 + C39855;
    const double C136580 = C136577 + C136568;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152024 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152031 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C3719) *
              C151942 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C152031 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152024 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C3719) *
              C151951 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C152024 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C152031 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C152350 +
                    (C67918 + C67919) * C152314 + C67928 * C67858) *
                       C152193 * C152286 -
                   (C68529 * C67858 + (C68519 + C68520) * C152314 +
                    (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
                     C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                        C152350) *
                       C152193 * C152070) *
                      C152024 +
                  (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
                     C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                        C152350 +
                    (C69269 + C69270) * C152314 + C69275 * C67858) *
                       C152193 * C152070 -
                   (C68229 * C67858 + (C68219 + C68220) * C152314 +
                    (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                     C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                        C152350) *
                       C152193 * C152286) *
                      C152031 +
                  (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                     C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                        C152350 +
                    (C68221 + C68222) * C152314 + C68230 * C67858) *
                       C152193 * C152286 -
                   ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
                    (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
                     C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                        C152350) *
                       C152193 * C152070) *
                      C3719) *
                     C3375 +
                 ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
                    C68932 * C67858) *
                       C152193 * C152070 -
                   (C67929 * C67858 + (C67921 + C67920) * C152314 +
                    (C67919 + C67918) * C152350) *
                       C152193 * C152286) *
                      C152024 +
                  (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
                    C68725 * C67858) *
                       C152193 * C152286 -
                   ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
                    (C69270 + C69269) * C152350) *
                       C152193 * C152070) *
                      C152031 +
                  (((C70391 + C70390) * C152350 + (C70389 + C70388) * C152314 +
                    (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                     C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                        C67858) *
                       C152193 * C152070 -
                   ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
                    (C68222 + C68221) * C152350) *
                       C152193 * C152286) *
                      C3719) *
                     C151948)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152378 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152374 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152362 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C152374 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152378 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152362 +
           ((C70079 + C70078) * C152350 + (C70077 + C70076) * C152314 +
            (C67859 * C1439 + C70066 + C70066 + C67854 * C1455 +
             C67861 * C1446 + C70067 + C70067 + C152179 * C1462) *
                C67858) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C3235 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C152028 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C3235) *
              C152370 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C3235 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C152028) *
              C152355 +
          ((C68725 * C152350 + (C68737 + C68736) * C152314 +
            (C67859 * C360 + C68730 + C68730 + C67854 * C384 + C67861 * C361 +
             C68731 + C68731 + C152179 * C385) *
                C67858) *
               C152193 * C151983 * C152028 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C152372 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152359 +
            ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
              C68464 + C68464 + C152179 * C1644) *
                 C152350 +
             (C68521 + C68522) * C152314 + C68530 * C67858) *
                C152193 * C152330) *
               C3235 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152359 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C152372 -
            ((C71470 + C71471) * C67858 + (C71472 + C71473) * C152314 +
             (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
              C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                 C152350) *
                C152193 * C152330) *
               C152028) *
              C3375 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152359 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C152372 -
            ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
             (C68522 + C68521) * C152350) *
                C152193 * C152330) *
               C3235 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C152372 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152359 +
            ((C71473 + C71472) * C152350 + (C71471 + C71470) * C152314 +
             (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
              C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                 C67858) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C152286 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C3235 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C152286) *
               C152028) *
              C151942 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C152286) *
               C3235 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C152286 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
                C152193 * C152286 -
            ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
             C68529 * C152350) *
                C152193 * C152070) *
               C3235 +
           ((C69275 * C152350 + (C69274 + C69273) * C152314 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C67858) *
                C152193 * C152070 -
            ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
             C68229 * C152350) *
                C152193 * C152286) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C3235 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C152028 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C3235) *
              C152370 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C3235 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C152028) *
              C152355 +
          ((C68725 * C152350 + (C68737 + C68736) * C152314 +
            (C67859 * C360 + C68730 + C68730 + C67854 * C384 + C67861 * C361 +
             C68731 + C68731 + C152179 * C385) *
                C67858) *
               C152193 * C151983 * C152028 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152378 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152374 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152362 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C152374 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152378 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152362 +
           ((C70079 + C70078) * C152350 + (C70077 + C70076) * C152314 +
            (C67859 * C1439 + C70066 + C70066 + C67854 * C1455 +
             C67861 * C1446 + C70067 + C70067 + C152179 * C1462) *
                C67858) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C152350 +
                    (C67918 + C67919) * C152314 + C67928 * C67858) *
                       C152193 * C4241 -
                   (C68529 * C67858 + (C68519 + C68520) * C152314 +
                    (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
                     C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                        C152350) *
                       C152193 * C152070) *
                      C152024 +
                  (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
                     C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                        C152350 +
                    (C69269 + C69270) * C152314 + C69275 * C67858) *
                       C152193 * C152070 -
                   (C68229 * C67858 + (C68219 + C68220) * C152314 +
                    (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                     C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                        C152350) *
                       C152193 * C4241) *
                      C152031 +
                  (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                     C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                        C152350 +
                    (C68221 + C68222) * C152314 + C68230 * C67858) *
                       C152193 * C4241 -
                   ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
                    (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
                     C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                        C152350) *
                       C152193 * C152070) *
                      C3719) *
                     C152271 +
                 ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
                    C68932 * C67858) *
                       C152193 * C152070 -
                   (C67929 * C67858 + (C67921 + C67920) * C152314 +
                    (C67919 + C67918) * C152350) *
                       C152193 * C4241) *
                      C152024 +
                  (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
                    C68725 * C67858) *
                       C152193 * C4241 -
                   ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
                    (C69270 + C69269) * C152350) *
                       C152193 * C152070) *
                      C152031 +
                  (((C70391 + C70390) * C152350 + (C70389 + C70388) * C152314 +
                    (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                     C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                        C67858) *
                       C152193 * C152070 -
                   ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
                    (C68222 + C68221) * C152350) *
                       C152193 * C4241) *
                      C3719) *
                     C151948)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                    C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                       C152350 +
                   (C67918 + C67919) * C152314 + C67928 * C67858) *
                      C152193 * C152066 -
                  (C68529 * C67858 + (C68519 + C68520) * C152314 +
                   (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
                    C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                       C152350) *
                      C152193 * C152073 +
                  ((C67859 * C591 + C68463 + C68463 + C67854 * C615 +
                    C67861 * C1620 + C68464 + C68464 + C152179 * C1644) *
                       C152350 +
                   (C68521 + C68522) * C152314 + C68530 * C67858) *
                      C152193 * C4913) *
                     C152024 +
                 (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
                    C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                       C152350 +
                   (C69269 + C69270) * C152314 + C69275 * C67858) *
                      C152193 * C152073 -
                  (C68229 * C67858 + (C68219 + C68220) * C152314 +
                   (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                    C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                       C152350) *
                      C152193 * C152066 -
                  ((C71470 + C71471) * C67858 + (C71472 + C71473) * C152314 +
                   (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
                    C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                       C152350) *
                      C152193 * C4913) *
                     C152031 +
                 (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                    C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                       C152350 +
                   (C68221 + C68222) * C152314 + C68230 * C67858) *
                      C152193 * C152066 -
                  ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
                   (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
                    C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                       C152350) *
                      C152193 * C152073 +
                  ((C67859 * C1625 + C69858 + C69858 + C67854 * C1649 +
                    C67861 * C8218 + C69859 + C69859 + C152179 * C8224) *
                       C152350 +
                   (C67859 * C1626 + C69860 + C69860 + C67854 * C1650 +
                    C67861 * C8219 + C69861 + C69861 + C152179 * C8225) *
                       C152314 +
                   (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
                    C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                       C67858) *
                      C152193 * C4913) *
                     C3719) *
                C151937) /
               (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C4241 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C152378 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C152070 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C4241) *
              C152374 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C4241 -
           ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C152070) *
              C152362 +
          (((C67859 * C2163 + C70586 + C70586 + C67854 * C2171 +
             C67861 * C8967 + C70587 + C70587 + C152179 * C8973) *
                C152350 +
            (C67859 * C2164 + C70588 + C70588 + C67854 * C2172 +
             C67861 * C8968 + C70589 + C70589 + C152179 * C8974) *
                C152314 +
            (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
             C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                C67858) *
               C152193 * C152070 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C4241 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C3235 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C4241) *
               C3235 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C4241 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
                C152193 * C4241 -
            ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
             C68529 * C152350) *
                C152193 * C152070) *
               C3235 +
           ((C69275 * C152350 + (C69274 + C69273) * C152314 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C67858) *
                C152193 * C152070 -
            ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
             C68229 * C152350) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152379 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152376 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152365 -
           ((C71686 + C71687) * C67858 + (C71688 + C71689) * C152314 +
            (C67861 * C3089 + C71154 + C71154 + C152179 * C3097 +
             C67859 * C2564 + C71155 + C71155 + C67854 * C2580) *
                C152350) *
               C152193 * C152343) *
              C3235 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C152376 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C152379 -
           ((C71470 + C71471) * C67858 + (C71472 + C71473) * C152314 +
            (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
             C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                C152350) *
               C152193 * C152365 +
           ((C67859 * C3089 + C71884 + C71884 + C67854 * C3097 +
             C67861 * C10283 + C71885 + C71885 + C152179 * C10289) *
                C152350 +
            (C67859 * C3090 + C71886 + C71886 + C67854 * C3098 +
             C67861 * C10284 + C71887 + C71887 + C152179 * C10290) *
                C152314 +
            (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
             C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                C67858) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C152350 +
                    (C67918 + C67919) * C152314 + C67928 * C67858) *
                       C152193 * C152066 -
                   (C68529 * C67858 + (C68519 + C68520) * C152314 +
                    (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
                     C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                        C152350) *
                       C152193 * C152073 +
                   ((C67859 * C591 + C68463 + C68463 + C67854 * C615 +
                     C67861 * C1620 + C68464 + C68464 + C152179 * C1644) *
                        C152350 +
                    (C68521 + C68522) * C152314 + C68530 * C67858) *
                       C152193 * C4913) *
                      C3235 +
                  (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
                     C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                        C152350 +
                    (C69269 + C69270) * C152314 + C69275 * C67858) *
                       C152193 * C152073 -
                   (C68229 * C67858 + (C68219 + C68220) * C152314 +
                    (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                     C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                        C152350) *
                       C152193 * C152066 -
                   ((C71470 + C71471) * C67858 + (C71472 + C71473) * C152314 +
                    (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
                     C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                        C152350) *
                       C152193 * C4913) *
                      C152028) *
                     C152271 +
                 ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
                    C68932 * C67858) *
                       C152193 * C152073 -
                   (C67929 * C67858 + (C67921 + C67920) * C152314 +
                    (C67919 + C67918) * C152350) *
                       C152193 * C152066 -
                   ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
                    (C68522 + C68521) * C152350) *
                       C152193 * C4913) *
                      C3235 +
                  (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
                    C68725 * C67858) *
                       C152193 * C152066 -
                   ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
                    (C69270 + C69269) * C152350) *
                       C152193 * C152073 +
                   ((C71473 + C71472) * C152350 + (C71471 + C71470) * C152314 +
                    (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
                     C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                        C67858) *
                       C152193 * C4913) *
                      C152028) *
                     C151948)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C4241 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C3235 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C4241) *
               C3235 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C4241 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
                C152193 * C4241 -
            ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
             C68529 * C152350) *
                C152193 * C152070) *
               C3235 +
           ((C69275 * C152350 + (C69274 + C69273) * C152314 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C67858) *
                C152193 * C152070 -
            ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
             C68229 * C152350) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C4241 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C152378 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C152070 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C4241) *
              C152374 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C4241 -
           ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C152070) *
              C152362 +
          (((C67859 * C2163 + C70586 + C70586 + C67854 * C2171 +
             C67861 * C8967 + C70587 + C70587 + C152179 * C8973) *
                C152350 +
            (C67859 * C2164 + C70588 + C70588 + C67854 * C2172 +
             C67861 * C8968 + C70589 + C70589 + C152179 * C8974) *
                C152314 +
            (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
             C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                C67858) *
               C152193 * C152070 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C1795 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C1796 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C1797 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C1796 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C1795 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C1797 +
           ((C70079 + C70078) * C152350 + (C70077 + C70076) * C152314 +
            (C67859 * C1439 + C70066 + C70066 + C67854 * C1455 +
             C67861 * C1446 + C70067 + C70067 + C152179 * C1462) *
                C67858) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152285 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C152028 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152285) *
              C808 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C152285 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C152028) *
              C809 +
          ((C68725 * C152350 + (C68737 + C68736) * C152314 +
            (C67859 * C360 + C68730 + C68730 + C67854 * C384 + C67861 * C361 +
             C68731 + C68731 + C152179 * C385) *
                C67858) *
               C152193 * C151983 * C152028 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C2325 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C2326 +
            ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
              C68464 + C68464 + C152179 * C1644) *
                 C152350 +
             (C68521 + C68522) * C152314 + C68530 * C67858) *
                C152193 * C152330) *
               C152285 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C2326 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C2325 -
            ((C71470 + C71471) * C67858 + (C71472 + C71473) * C152314 +
             (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
              C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                 C152350) *
                C152193 * C152330) *
               C152028) *
              C152271 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C2326 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C2325 -
            ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
             (C68522 + C68521) * C152350) *
                C152193 * C152330) *
               C152285 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C2325 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C2326 +
            ((C71473 + C71472) * C152350 + (C71471 + C71470) * C152314 +
             (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
              C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                 C67858) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152286 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C1795 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C152070 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C152286) *
              C1796 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C152286 -
           ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C152070) *
              C1797 +
          (((C67859 * C2163 + C70586 + C70586 + C67854 * C2171 +
             C67861 * C8967 + C70587 + C70587 + C152179 * C8973) *
                C152350 +
            (C67859 * C2164 + C70588 + C70588 + C67854 * C2172 +
             C67861 * C8968 + C70589 + C70589 + C152179 * C8974) *
                C152314 +
            (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
             C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                C67858) *
               C152193 * C152070 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C152286 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C152285 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C152286) *
               C152285 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C152286 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
                C152193 * C152286 -
            ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
             C68529 * C152350) *
                C152193 * C152070) *
               C152285 +
           ((C69275 * C152350 + (C69274 + C69273) * C152314 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C67858) *
                C152193 * C152070 -
            ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
             C68229 * C152350) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C2936 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C2937 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C2938 -
           ((C71686 + C71687) * C67858 + (C71688 + C71689) * C152314 +
            (C67861 * C3089 + C71154 + C71154 + C152179 * C3097 +
             C67859 * C2564 + C71155 + C71155 + C67854 * C2580) *
                C152350) *
               C152193 * C152343) *
              C152285 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C2937 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C2936 -
           ((C71470 + C71471) * C67858 + (C71472 + C71473) * C152314 +
            (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
             C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                C152350) *
               C152193 * C2938 +
           ((C67859 * C3089 + C71884 + C71884 + C67854 * C3097 +
             C67861 * C10283 + C71885 + C71885 + C152179 * C10289) *
                C152350 +
            (C67859 * C3090 + C71886 + C71886 + C67854 * C3098 +
             C67861 * C10284 + C71887 + C71887 + C152179 * C10290) *
                C152314 +
            (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
             C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                C67858) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                   C152350 +
               (C67918 + C67919) * C152314 + C67928 * C67858) *
                  C152193 * C151983 * C151965 * C129 -
              (C67929 * C67858 + (C67921 + C67920) * C152314 +
               (C67919 + C67918) * C152350) *
                  C152193 * C151983 * C151965 * C130 +
              (C67928 * C152350 + (C67923 + C67922) * C152314 +
               C67930 * C67858) *
                  C152193 * C151983 * C151965 * C131 -
              ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
               C67929 * C152350) *
                  C152193 * C151983 * C151965 * C132 +
              (C67930 * C152350 + (C67927 + C67926) * C152314 +
               (C67859 * C142 + C67896 + C67896 + C67854 * C158 +
                C67861 * C811 + C67897 + C67897 + C152179 * C813) *
                   C67858) *
                  C152193 * C151983 * C151965 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                 C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                    C152350 +
                (C67918 + C67919) * C152314 + C67928 * C67858) *
                   C152193 * C151983 * C152371 -
               (C68229 * C67858 + (C68219 + C68220) * C152314 +
                (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                 C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                    C152350) *
                   C152193 * C151983 * C152357 +
               ((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                 C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                    C152350 +
                (C68221 + C68222) * C152314 + C68230 * C67858) *
                   C152193 * C151983 * C152327) *
                  C347 +
              (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
                (C68225 + C68226) * C67858) *
                   C152193 * C151983 * C152357 -
               (C67929 * C67858 + (C67921 + C67920) * C152314 +
                (C67919 + C67918) * C152350) *
                   C152193 * C151983 * C152371 -
               ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
                (C68222 + C68221) * C152350) *
                   C152193 * C151983 * C152327) *
                  C348 +
              ((C67928 * C152350 + (C67923 + C67922) * C152314 +
                C67930 * C67858) *
                   C152193 * C151983 * C152371 -
               ((C67861 * C359 + C68189 + C68189 + C152179 * C383 +
                 C67859 * C358 + C68190 + C68190 + C67854 * C382) *
                    C67858 +
                (C68226 + C68225) * C152314 + C68229 * C152350) *
                   C152193 * C151983 * C152357 +
               (C68230 * C152350 + (C68228 + C68227) * C152314 +
                (C67859 * C359 + C68191 + C68191 + C67854 * C383 +
                 C67861 * C1801 + C68192 + C68192 + C152179 * C1803) *
                    C67858) *
                   C152193 * C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152372 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152359 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            (C68525 + C68526) * C67858) *
               C152193 * C152359 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C152372 -
           ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
            (C68522 + C68521) * C152350) *
               C152193 * C152330) *
              C151965 * C348 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C152372 -
           ((C67861 * C1159 + C68489 + C68489 + C152179 * C1171 +
             C67859 * C595 + C68490 + C68490 + C67854 * C619) *
                C67858 +
            (C68526 + C68525) * C152314 + C68529 * C152350) *
               C152193 * C152359 +
           (C68530 * C152350 + (C68528 + C68527) * C152314 +
            (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
             C68492 + C68492 + C152179 * C2789) *
                C67858) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C1345 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C1346 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C1345 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C1345 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C1346 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C151983 * C1433 -
          (C68229 * C67858 + (C68219 + C68220) * C152314 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C152350) *
              C152193 * C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C152350 +
           (C68221 + C68222) * C152314 + C68230 * C67858) *
              C152193 * C151983 * C1435 -
          ((C67861 * C1445 + C69616 + C69616 + C152179 * C1461 +
            C67859 * C1440 + C69617 + C69617 + C67854 * C1456) *
               C67858 +
           (C67861 * C1444 + C69618 + C69618 + C152179 * C1460 +
            C67859 * C1441 + C69619 + C69619 + C67854 * C1457) *
               C152314 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C152350) *
              C152193 * C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C152350 +
           (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 + C67861 * C7980 +
            C69625 + C69625 + C152179 * C7986) *
               C152314 +
           (C67859 * C1445 + C69626 + C69626 + C67854 * C1461 + C67861 * C7981 +
            C69627 + C69627 + C152179 * C7987) *
               C67858) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152372 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152359 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C1345 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C152359 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C152372 -
           ((C67861 * C1627 + C69846 + C69846 + C152179 * C1651 +
             C67859 * C1618 + C69847 + C69847 + C67854 * C1642) *
                C67858 +
            (C67861 * C1626 + C69848 + C69848 + C152179 * C1650 +
             C67859 * C1619 + C69849 + C69849 + C67854 * C1643) *
                C152314 +
            (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
             C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                C152350) *
               C152193 * C152330) *
              C1346 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C152372 -
           ((C67861 * C2165 + C69852 + C69852 + C152179 * C2173 +
             C67859 * C1622 + C69853 + C69853 + C67854 * C1646) *
                C67858 +
            (C67861 * C2164 + C69854 + C69854 + C152179 * C2172 +
             C67859 * C1623 + C69855 + C69855 + C67854 * C1647) *
                C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C152359 +
           ((C67859 * C1625 + C69858 + C69858 + C67854 * C1649 +
             C67861 * C8218 + C69859 + C69859 + C152179 * C8224) *
                C152350 +
            (C67859 * C1626 + C69860 + C69860 + C67854 * C1650 +
             C67861 * C8219 + C69861 + C69861 + C152179 * C8225) *
                C152314 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C67858) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C2325 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C2326 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C2326 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C2325 -
           ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
            (C68522 + C68521) * C152350) *
               C152193 * C152330) *
              C151965 * C152353 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C2325 -
           ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
            C68529 * C152350) *
               C152193 * C2326 +
           (C68530 * C152350 + (C68528 + C68527) * C152314 +
            (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
             C68492 + C68492 + C152179 * C2789) *
                C67858) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C2325 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C2326 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C152371 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C2326 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C2325 -
           ((C67861 * C1627 + C69846 + C69846 + C152179 * C1651 +
             C67859 * C1618 + C69847 + C69847 + C67854 * C1642) *
                C67858 +
            (C67861 * C1626 + C69848 + C69848 + C152179 * C1650 +
             C67859 * C1619 + C69849 + C69849 + C67854 * C1643) *
                C152314 +
            (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
             C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                C152350) *
               C152193 * C152330) *
              C152357 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C2325 -
           ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C2326 +
           ((C67859 * C1625 + C69858 + C69858 + C67854 * C1649 +
             C67861 * C8218 + C69859 + C69859 + C152179 * C8224) *
                C152350 +
            (C67859 * C1626 + C69860 + C69860 + C67854 * C1650 +
             C67861 * C8219 + C69861 + C69861 + C152179 * C8225) *
                C152314 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C67858) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C2556 -
          (C68529 * C67858 + (C68519 + C68520) * C152314 +
           (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 + C67859 * C590 +
            C68462 + C68462 + C67854 * C614) *
               C152350) *
              C152193 * C2557 +
          ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
            C68464 + C68464 + C152179 * C1644) *
               C152350 +
           (C68521 + C68522) * C152314 + C68530 * C67858) *
              C152193 * C2558 -
          ((C67861 * C3091 + C71150 + C71150 + C152179 * C3099 +
            C67859 * C2562 + C71151 + C71151 + C67854 * C2578) *
               C67858 +
           (C67861 * C3090 + C71152 + C71152 + C152179 * C3098 +
            C67859 * C2563 + C71153 + C71153 + C67854 * C2579) *
               C152314 +
           (C67861 * C3089 + C71154 + C71154 + C152179 * C3097 +
            C67859 * C2564 + C71155 + C71155 + C67854 * C2580) *
               C152350) *
              C152193 * C2559 +
          ((C67859 * C2565 + C71156 + C71156 + C67854 * C2581 + C67861 * C9540 +
            C71157 + C71157 + C152179 * C9546) *
               C152350 +
           (C67859 * C2566 + C71158 + C71158 + C67854 * C2582 + C67861 * C9541 +
            C71159 + C71159 + C152179 * C9547) *
               C152314 +
           (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 + C67861 * C9542 +
            C71161 + C71161 + C152179 * C9548) *
               C67858) *
              C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C152286 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C1345 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C152286) *
               C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152350 +
             (C68221 + C68222) * C152314 + C68230 * C67858) *
                C152193 * C152286 -
            ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
             (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
              C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                 C152350) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C152286) *
               C1345 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C152286 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C1346 +
           (((C70391 + C70390) * C152350 + (C70389 + C70388) * C152314 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C67858) *
                C152193 * C152070 -
            ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
             (C68222 + C68221) * C152350) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152286 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C152070 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C152286) *
              C151965 * C808 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C152286 -
           ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
            C68529 * C152350) *
               C152193 * C152070) *
              C151965 * C809 +
          ((C68932 * C152350 + (C68944 + C68943) * C152314 +
            (C67859 * C597 + C68937 + C68937 + C67854 * C621 + C67861 * C1160 +
             C68938 + C68938 + C152179 * C1172) *
                C67858) *
               C152193 * C152070 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C2936 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C2937 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C2938 -
           ((C71686 + C71687) * C67858 + (C71688 + C71689) * C152314 +
            (C67861 * C3089 + C71154 + C71154 + C152179 * C3097 +
             C67859 * C2564 + C71155 + C71155 + C67854 * C2580) *
                C152350) *
               C152193 * C152343) *
              C151965 * C152271 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C2937 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C2936 -
           ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
            (C68522 + C68521) * C152350) *
               C152193 * C2938 +
           ((C71689 + C71688) * C152350 + (C71687 + C71686) * C152314 +
            (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
             C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                C67858) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152371 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152357 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            (C68225 + C68226) * C67858) *
               C152193 * C151983 * C152357 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152371 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C152371 -
           ((C67861 * C359 + C68189 + C68189 + C152179 * C383 + C67859 * C358 +
             C68190 + C68190 + C67854 * C382) *
                C67858 +
            (C68226 + C68225) * C152314 + C68229 * C152350) *
               C152193 * C151983 * C152357 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C151983 * C151965 * C129 -
          (C67929 * C67858 + (C67921 + C67920) * C152314 +
           (C67919 + C67918) * C152350) *
              C152193 * C151983 * C151965 * C130 +
          (C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
              C152193 * C151983 * C151965 * C131 -
          ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
           C67929 * C152350) *
              C152193 * C151983 * C151965 * C132 +
          (C67930 * C152350 + (C67927 + C67926) * C152314 +
           (C67859 * C142 + C67896 + C67896 + C67854 * C158 + C67861 * C811 +
            C67897 + C67897 + C152179 * C813) *
               C67858) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C1345 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C1346 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C1345 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C1345 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C1346 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C151983 * C1433 -
          (C68229 * C67858 + (C68219 + C68220) * C152314 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C152350) *
              C152193 * C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C152350 +
           (C68221 + C68222) * C152314 + C68230 * C67858) *
              C152193 * C151983 * C1435 -
          ((C67861 * C1445 + C69616 + C69616 + C152179 * C1461 +
            C67859 * C1440 + C69617 + C69617 + C67854 * C1456) *
               C67858 +
           (C67861 * C1444 + C69618 + C69618 + C152179 * C1460 +
            C67859 * C1441 + C69619 + C69619 + C67854 * C1457) *
               C152314 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C152350) *
              C152193 * C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C152350 +
           (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 + C67861 * C7980 +
            C69625 + C69625 + C152179 * C7986) *
               C152314 +
           (C67859 * C1445 + C69626 + C69626 + C67854 * C1461 + C67861 * C7981 +
            C69627 + C69627 + C152179 * C7987) *
               C67858) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C2325 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C2326 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C2326 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C2325 -
           ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
            (C68522 + C68521) * C152350) *
               C152193 * C152330) *
              C151965 * C152353 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C2325 -
           ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
            C68529 * C152350) *
               C152193 * C2326 +
           (C68530 * C152350 + (C68528 + C68527) * C152314 +
            (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
             C68492 + C68492 + C152179 * C2789) *
                C67858) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C2325 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C2326 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C152371 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C2326 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C2325 -
           ((C67861 * C1627 + C69846 + C69846 + C152179 * C1651 +
             C67859 * C1618 + C69847 + C69847 + C67854 * C1642) *
                C67858 +
            (C67861 * C1626 + C69848 + C69848 + C152179 * C1650 +
             C67859 * C1619 + C69849 + C69849 + C67854 * C1643) *
                C152314 +
            (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
             C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                C152350) *
               C152193 * C152330) *
              C152357 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C2325 -
           ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C2326 +
           ((C67859 * C1625 + C69858 + C69858 + C67854 * C1649 +
             C67861 * C8218 + C69859 + C69859 + C152179 * C8224) *
                C152350 +
            (C67859 * C1626 + C69860 + C69860 + C67854 * C1650 +
             C67861 * C8219 + C69861 + C69861 + C152179 * C8225) *
                C152314 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C67858) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C4241 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C152285 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C4241) *
               C152028) *
              C151942 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C4241) *
               C152285 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C4241 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
                C152193 * C4241 -
            ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
             C68529 * C152350) *
                C152193 * C152070) *
               C152285 +
           ((C69275 * C152350 + (C69274 + C69273) * C152314 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C67858) *
                C152193 * C152070 -
            ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
             C68229 * C152350) *
                C152193 * C4241) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C152350 +
                     (C67918 + C67919) * C152314 + C67928 * C67858) *
                        C152193 * C152066 -
                    (C68529 * C67858 + (C68519 + C68520) * C152314 +
                     (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
                      C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                         C152350) *
                        C152193 * C152073 +
                    ((C67859 * C591 + C68463 + C68463 + C67854 * C615 +
                      C67861 * C1620 + C68464 + C68464 + C152179 * C1644) *
                         C152350 +
                     (C68521 + C68522) * C152314 + C68530 * C67858) *
                        C152193 * C4913) *
                       C152285 +
                   (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
                      C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                         C152350 +
                     (C69269 + C69270) * C152314 + C69275 * C67858) *
                        C152193 * C152073 -
                    (C68229 * C67858 + (C68219 + C68220) * C152314 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C152350) *
                        C152193 * C152066 -
                    ((C71470 + C71471) * C67858 + (C71472 + C71473) * C152314 +
                     (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
                      C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                         C152350) *
                        C152193 * C4913) *
                       C152028) *
                      C3375 +
                  ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
                     C68932 * C67858) *
                        C152193 * C152073 -
                    (C67929 * C67858 + (C67921 + C67920) * C152314 +
                     (C67919 + C67918) * C152350) *
                        C152193 * C152066 -
                    ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
                     (C68522 + C68521) * C152350) *
                        C152193 * C4913) *
                       C152285 +
                   (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
                     C68725 * C67858) *
                        C152193 * C152066 -
                    ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
                     (C69270 + C69269) * C152350) *
                        C152193 * C152073 +
                    ((C71473 + C71472) * C152350 + (C71471 + C71470) * C152314 +
                     (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
                      C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                         C67858) *
                        C152193 * C4913) *
                       C152028) *
                      C151948)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C4241 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C152371 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C4241) *
               C152357 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152350 +
             (C68221 + C68222) * C152314 + C68230 * C67858) *
                C152193 * C4241 -
            ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
             (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
              C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                 C152350) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C4241) *
               C152371 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C4241 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152357 +
           (((C70391 + C70390) * C152350 + (C70389 + C70388) * C152314 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C67858) *
                C152193 * C152070 -
            ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
             (C68222 + C68221) * C152350) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C4241 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C152070 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C4241) *
              C151965 * C152370 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C4241 -
           ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
            C68529 * C152350) *
               C152193 * C152070) *
              C151965 * C152355 +
          ((C68932 * C152350 + (C68944 + C68943) * C152314 +
            (C67859 * C597 + C68937 + C68937 + C67854 * C621 + C67861 * C1160 +
             C68938 + C68938 + C152179 * C1172) *
                C67858) *
               C152193 * C152070 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152379 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152376 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152365 -
           ((C71686 + C71687) * C67858 + (C71688 + C71689) * C152314 +
            (C67861 * C3089 + C71154 + C71154 + C152179 * C3097 +
             C67859 * C2564 + C71155 + C71155 + C67854 * C2580) *
                C152350) *
               C152193 * C152343) *
              C151965 * C3375 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C152376 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C152379 -
           ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
            (C68522 + C68521) * C152350) *
               C152193 * C152365 +
           ((C71689 + C71688) * C152350 + (C71687 + C71686) * C152314 +
            (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
             C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                C67858) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152066 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152073 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C4913) *
              C151965 * C151942 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C152073 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C152066 -
           ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
            (C68522 + C68521) * C152350) *
               C152193 * C4913) *
              C151965 * C151951 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C152066 -
           ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
            C68529 * C152350) *
               C152193 * C152073 +
           (C68530 * C152350 + (C68528 + C68527) * C152314 +
            (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
             C68492 + C68492 + C152179 * C2789) *
                C67858) *
               C152193 * C4913) *
              C151965 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C4241 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C152070 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C4241) *
              C151965 * C152370 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C4241 -
           ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
            C68529 * C152350) *
               C152193 * C152070) *
              C151965 * C152355 +
          ((C68932 * C152350 + (C68944 + C68943) * C152314 +
            (C67859 * C597 + C68937 + C68937 + C67854 * C621 + C67861 * C1160 +
             C68938 + C68938 + C152179 * C1172) *
                C67858) *
               C152193 * C152070 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C4241 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C152371 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C4241) *
               C152357 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152350 +
             (C68221 + C68222) * C152314 + C68230 * C67858) *
                C152193 * C4241 -
            ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
             (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
              C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                 C152350) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C4241) *
               C152371 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C4241 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152357 +
           (((C70391 + C70390) * C152350 + (C70389 + C70388) * C152314 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C67858) *
                C152193 * C152070 -
            ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
             (C68222 + C68221) * C152350) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152285 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C152028 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152285) *
              C808 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C152285 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C152028) *
              C809 +
          ((C68725 * C152350 + (C68737 + C68736) * C152314 +
            (C67859 * C360 + C68730 + C68730 + C67854 * C384 + C67861 * C361 +
             C68731 + C68731 + C152179 * C385) *
                C67858) *
               C152193 * C151983 * C152028 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C1795 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C1796 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C1797 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C1796 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C1795 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C1797 +
           ((C70079 + C70078) * C152350 + (C70077 + C70076) * C152314 +
            (C67859 * C1439 + C70066 + C70066 + C67854 * C1455 +
             C67861 * C1446 + C70067 + C70067 + C152179 * C1462) *
                C67858) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C152286 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C152285 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C152286) *
               C152285 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C152286 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
                C152193 * C152286 -
            ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
             C68529 * C152350) *
                C152193 * C152070) *
               C152285 +
           ((C69275 * C152350 + (C69274 + C69273) * C152314 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C67858) *
                C152193 * C152070 -
            ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
             C68229 * C152350) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152286 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C1795 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C152070 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C152286) *
              C1796 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C152286 -
           ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C152070) *
              C1797 +
          (((C67859 * C2163 + C70586 + C70586 + C67854 * C2171 +
             C67861 * C8967 + C70587 + C70587 + C152179 * C8973) *
                C152350 +
            (C67859 * C2164 + C70588 + C70588 + C67854 * C2172 +
             C67861 * C8968 + C70589 + C70589 + C152179 * C8974) *
                C152314 +
            (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
             C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                C67858) *
               C152193 * C152070 -
           ((C70076 + C70077) * C67858 + (C70078 + C70079) * C152314 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152350) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152371 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152357 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            (C68225 + C68226) * C67858) *
               C152193 * C151983 * C152357 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152371 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C152371 -
           ((C67861 * C359 + C68189 + C68189 + C152179 * C383 + C67859 * C358 +
             C68190 + C68190 + C67854 * C382) *
                C67858 +
            (C68226 + C68225) * C152314 + C68229 * C152350) *
               C152193 * C151983 * C152357 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C151983 * C151965 * C129 -
          (C67929 * C67858 + (C67921 + C67920) * C152314 +
           (C67919 + C67918) * C152350) *
              C152193 * C151983 * C151965 * C130 +
          (C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
              C152193 * C151983 * C151965 * C131 -
          ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
           C67929 * C152350) *
              C152193 * C151983 * C151965 * C132 +
          (C67930 * C152350 + (C67927 + C67926) * C152314 +
           (C67859 * C142 + C67896 + C67896 + C67854 * C158 + C67861 * C811 +
            C67897 + C67897 + C152179 * C813) *
               C67858) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152372 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152359 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            (C68525 + C68526) * C67858) *
               C152193 * C152359 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C152372 -
           ((C68527 + C68528) * C67858 + (C68524 + C68523) * C152314 +
            (C68522 + C68521) * C152350) *
               C152193 * C152330) *
              C151965 * C348 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C152372 -
           ((C67861 * C1159 + C68489 + C68489 + C152179 * C1171 +
             C67859 * C595 + C68490 + C68490 + C67854 * C619) *
                C67858 +
            (C68526 + C68525) * C152314 + C68529 * C152350) *
               C152193 * C152359 +
           (C68530 * C152350 + (C68528 + C68527) * C152314 +
            (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
             C68492 + C68492 + C152179 * C2789) *
                C67858) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C1345 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C1346 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C1345 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C1345 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C1346 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C151983 * C1433 -
          (C68229 * C67858 + (C68219 + C68220) * C152314 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C152350) *
              C152193 * C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C152350 +
           (C68221 + C68222) * C152314 + C68230 * C67858) *
              C152193 * C151983 * C1435 -
          ((C67861 * C1445 + C69616 + C69616 + C152179 * C1461 +
            C67859 * C1440 + C69617 + C69617 + C67854 * C1456) *
               C67858 +
           (C67861 * C1444 + C69618 + C69618 + C152179 * C1460 +
            C67859 * C1441 + C69619 + C69619 + C67854 * C1457) *
               C152314 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C152350) *
              C152193 * C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C152350 +
           (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 + C67861 * C7980 +
            C69625 + C69625 + C152179 * C7986) *
               C152314 +
           (C67859 * C1445 + C69626 + C69626 + C67854 * C1461 + C67861 * C7981 +
            C69627 + C69627 + C152179 * C7987) *
               C67858) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152372 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152359 +
           ((C67859 * C591 + C68463 + C68463 + C67854 * C615 + C67861 * C1620 +
             C68464 + C68464 + C152179 * C1644) *
                C152350 +
            (C68521 + C68522) * C152314 + C68530 * C67858) *
               C152193 * C152330) *
              C1345 +
          (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
             C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                C152350 +
            (C69269 + C69270) * C152314 + C69275 * C67858) *
               C152193 * C152359 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C152372 -
           ((C67861 * C1627 + C69846 + C69846 + C152179 * C1651 +
             C67859 * C1618 + C69847 + C69847 + C67854 * C1642) *
                C67858 +
            (C67861 * C1626 + C69848 + C69848 + C152179 * C1650 +
             C67859 * C1619 + C69849 + C69849 + C67854 * C1643) *
                C152314 +
            (C67861 * C1625 + C69850 + C69850 + C152179 * C1649 +
             C67859 * C1620 + C69851 + C69851 + C67854 * C1644) *
                C152350) *
               C152193 * C152330) *
              C1346 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C152372 -
           ((C67861 * C2165 + C69852 + C69852 + C152179 * C2173 +
             C67859 * C1622 + C69853 + C69853 + C67854 * C1646) *
                C67858 +
            (C67861 * C2164 + C69854 + C69854 + C152179 * C2172 +
             C67859 * C1623 + C69855 + C69855 + C67854 * C1647) *
                C152314 +
            (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
             C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                C152350) *
               C152193 * C152359 +
           ((C67859 * C1625 + C69858 + C69858 + C67854 * C1649 +
             C67861 * C8218 + C69859 + C69859 + C152179 * C8224) *
                C152350 +
            (C67859 * C1626 + C69860 + C69860 + C67854 * C1650 +
             C67861 * C8219 + C69861 + C69861 + C152179 * C8225) *
                C152314 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C67858) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C152286 -
           (C68529 * C67858 + (C68519 + C68520) * C152314 +
            (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
             C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                C152350) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
            C68932 * C67858) *
               C152193 * C152070 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C152286) *
              C151965 * C808 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C152286 -
           ((C68943 + C68944) * C67858 + (C68526 + C68525) * C152314 +
            C68529 * C152350) *
               C152193 * C152070) *
              C151965 * C809 +
          ((C68932 * C152350 + (C68944 + C68943) * C152314 +
            (C67859 * C597 + C68937 + C68937 + C67854 * C621 + C67861 * C1160 +
             C68938 + C68938 + C152179 * C1172) *
                C67858) *
               C152193 * C152070 -
           ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
            C67929 * C152350) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152350 +
             (C67918 + C67919) * C152314 + C67928 * C67858) *
                C152193 * C152286 -
            (C68529 * C67858 + (C68519 + C68520) * C152314 +
             (C67861 * C1155 + C68461 + C68461 + C152179 * C1167 +
              C67859 * C590 + C68462 + C68462 + C67854 * C614) *
                 C152350) *
                C152193 * C152070) *
               C1345 +
           (((C67859 * C1155 + C69235 + C69235 + C67854 * C1167 +
              C67861 * C1624 + C69236 + C69236 + C152179 * C1648) *
                 C152350 +
             (C69269 + C69270) * C152314 + C69275 * C67858) *
                C152193 * C152070 -
            (C68229 * C67858 + (C68219 + C68220) * C152314 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152350) *
                C152193 * C152286) *
               C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152350 +
             (C68221 + C68222) * C152314 + C68230 * C67858) *
                C152193 * C152286 -
            ((C70388 + C70389) * C67858 + (C70390 + C70391) * C152314 +
             (C67861 * C2163 + C69856 + C69856 + C152179 * C2171 +
              C67859 * C1624 + C69857 + C69857 + C67854 * C1648) *
                 C152350) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C68520 + C68519) * C152350 + (C68518 + C68517) * C152314 +
             C68932 * C67858) *
                C152193 * C152070 -
            (C67929 * C67858 + (C67921 + C67920) * C152314 +
             (C67919 + C67918) * C152350) *
                C152193 * C152286) *
               C1345 +
           (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
             C68725 * C67858) *
                C152193 * C152286 -
            ((C69273 + C69274) * C67858 + (C69272 + C69271) * C152314 +
             (C69270 + C69269) * C152350) *
                C152193 * C152070) *
               C1346 +
           (((C70391 + C70390) * C152350 + (C70389 + C70388) * C152314 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C67858) *
                C152193 * C152070 -
            ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
             (C68222 + C68221) * C152350) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C151983 * C151965 * C129 -
          (C67929 * C67858 + (C67921 + C67920) * C152314 +
           (C67919 + C67918) * C152350) *
              C152193 * C151983 * C151965 * C130 +
          (C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
              C152193 * C151983 * C151965 * C131 -
          ((C67926 + C67927) * C67858 + (C67925 + C67924) * C152314 +
           C67929 * C152350) *
              C152193 * C151983 * C151965 * C132 +
          (C67930 * C152350 + (C67927 + C67926) * C152314 +
           (C67859 * C142 + C67896 + C67896 + C67854 * C158 + C67861 * C811 +
            C67897 + C67897 + C152179 * C813) *
               C67858) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C152371 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C152357 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            (C68225 + C68226) * C67858) *
               C152193 * C151983 * C152357 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C152371 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C152371 -
           ((C67861 * C359 + C68189 + C68189 + C152179 * C383 + C67859 * C358 +
             C68190 + C68190 + C67854 * C382) *
                C67858 +
            (C68226 + C68225) * C152314 + C68229 * C152350) *
               C152193 * C151983 * C152357 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152350 +
            (C67918 + C67919) * C152314 + C67928 * C67858) *
               C152193 * C151983 * C1345 -
           (C68229 * C67858 + (C68219 + C68220) * C152314 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152350) *
               C152193 * C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152350 +
            (C68221 + C68222) * C152314 + C68230 * C67858) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C152350 + (C68218 + C68217) * C152314 +
            C68725 * C67858) *
               C152193 * C151983 * C1346 -
           (C67929 * C67858 + (C67921 + C67920) * C152314 +
            (C67919 + C67918) * C152350) *
               C152193 * C151983 * C1345 -
           ((C68227 + C68228) * C67858 + (C68224 + C68223) * C152314 +
            (C68222 + C68221) * C152350) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C67928 * C152350 + (C67923 + C67922) * C152314 + C67930 * C67858) *
               C152193 * C151983 * C1345 -
           ((C68736 + C68737) * C67858 + (C68226 + C68225) * C152314 +
            C68229 * C152350) *
               C152193 * C151983 * C1346 +
           (C68230 * C152350 + (C68228 + C68227) * C152314 +
            (C67859 * C359 + C68191 + C68191 + C67854 * C383 + C67861 * C1801 +
             C68192 + C68192 + C152179 * C1803) *
                C67858) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C152350 +
           (C67918 + C67919) * C152314 + C67928 * C67858) *
              C152193 * C151983 * C1433 -
          (C68229 * C67858 + (C68219 + C68220) * C152314 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C152350) *
              C152193 * C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C152350 +
           (C68221 + C68222) * C152314 + C68230 * C67858) *
              C152193 * C151983 * C1435 -
          ((C67861 * C1445 + C69616 + C69616 + C152179 * C1461 +
            C67859 * C1440 + C69617 + C69617 + C67854 * C1456) *
               C67858 +
           (C67861 * C1444 + C69618 + C69618 + C152179 * C1460 +
            C67859 * C1441 + C69619 + C69619 + C67854 * C1457) *
               C152314 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C152350) *
              C152193 * C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C152350 +
           (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 + C67861 * C7980 +
            C69625 + C69625 + C152179 * C7986) *
               C152314 +
           (C67859 * C1445 + C69626 + C69626 + C67854 * C1461 + C67861 * C7981 +
            C69627 + C69627 + C152179 * C7987) *
               C67858) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152024 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152031 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C3719) *
                      C151942 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152031 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152024 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C3719) *
                      C151951 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C152024 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152031 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C3719) *
                      C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152286 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C152024 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152286) *
                       C152031 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C76442 +
                     (C76822 + C76823 + C76824) * C151912) *
                        C152193 * C152286 -
                    ((C78994 + C78995 + C78996) * C151912 +
                     (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                         C76442) *
                        C152193 * C152070) *
                       C3719) *
                      C3375 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152286) *
                       C152024 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152286 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152031 +
                   (((C78996 + C78995 + C78994) * C76442 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151912) *
                        C152193 * C152070 -
                    ((C76828 + C76829 + C76830) * C151912 +
                     (C76824 + C76823 + C76822) * C76442) *
                        C152193 * C152286) *
                       C3719) *
                      C151948)) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152378 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152374 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152362 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C151983 * C152337) *
                      C3375 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152374 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152378 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152362 +
                   ((C78688 + C78687 + C78686) * C76442 +
                    (C76444 * C1440 + C78677 + C78677 + C152366 * C1456 +
                     C76446 * C1445 + C78678 + C78678 + C152346 * C1461 +
                     C76448 * C7981 + C78679 + C78679 + C76441 * C7987) *
                        C151912) *
                       C152193 * C151983 * C152337) *
                      C151948)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C3235 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152028) *
                      C152377 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C3235) *
                      C152370 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C3235 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152028) *
                      C152355 +
                  (((C77344 + C77343 + C77342) * C76442 +
                    (C76444 * C358 + C77333 + C77333 + C152366 * C382 +
                     C76446 * C359 + C77334 + C77334 + C152346 * C383 +
                     C76448 * C1801 + C77335 + C77335 + C76441 * C1803) *
                        C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C151983 * C3235) *
                      C152331)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152372 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152359 +
                    ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                      C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                      C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                         C76442 +
                     (C77124 + C77125 + C77126) * C151912) *
                        C152193 * C152330) *
                       C3235 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152359 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152372 -
                    ((C80072 + C80073 + C80074) * C151912 +
                     (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                      C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                      C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                         C76442) *
                        C152193 * C152330) *
                       C152028) *
                      C3375 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152359 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152372 -
                    ((C77130 + C77131 + C77132) * C151912 +
                     (C77126 + C77125 + C77124) * C76442) *
                        C152193 * C152330) *
                       C3235 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152372 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152359 +
                    ((C80074 + C80073 + C80072) * C76442 +
                     (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                      C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                      C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                         C151912) *
                        C152193 * C152330) *
                       C152028) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152286 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C3235 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152286) *
                       C152028) *
                      C151942 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152286) *
                       C3235 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152286 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152028) *
                      C151951 +
                  ((((C76522 + C76521 + C76520) * C76442 +
                     (C76523 + C76524 + C76525) * C151912) *
                        C152193 * C152286 -
                    ((C77554 + C77555 + C77556) * C151912 +
                     (C77129 + C77128 + C77127) * C76442) *
                        C152193 * C152070) *
                       C3235 +
                   (((C77888 + C77887 + C77886) * C76442 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151912) *
                        C152193 * C152070 -
                    ((C77342 + C77343 + C77344) * C151912 +
                     (C76827 + C76826 + C76825) * C76442) *
                        C152193 * C152286) *
                       C152028) *
                      C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C3235 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152028) *
                      C152377 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C3235) *
                      C152370 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C3235 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152028) *
                      C152355 +
                  (((C77344 + C77343 + C77342) * C76442 +
                    (C76444 * C358 + C77333 + C77333 + C152366 * C382 +
                     C76446 * C359 + C77334 + C77334 + C152346 * C383 +
                     C76448 * C1801 + C77335 + C77335 + C76441 * C1803) *
                        C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C151983 * C3235) *
                      C152331)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152378 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152374 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152362 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C151983 * C152337) *
                      C3375 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152374 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152378 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152362 +
                   ((C78688 + C78687 + C78686) * C76442 +
                    (C76444 * C1440 + C78677 + C78677 + C152366 * C1456 +
                     C76446 * C1445 + C78678 + C78678 + C152346 * C1461 +
                     C76448 * C7981 + C78679 + C78679 + C76441 * C7987) *
                        C151912) *
                       C152193 * C151983 * C152337) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C4241 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C152024 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C4241) *
                       C152031 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C76442 +
                     (C76822 + C76823 + C76824) * C151912) *
                        C152193 * C4241 -
                    ((C78994 + C78995 + C78996) * C151912 +
                     (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                         C76442) *
                        C152193 * C152070) *
                       C3719) *
                      C152271 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C4241) *
                       C152024 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C4241 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152031 +
                   (((C78996 + C78995 + C78994) * C76442 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151912) *
                        C152193 * C152070 -
                    ((C76828 + C76829 + C76830) * C151912 +
                     (C76824 + C76823 + C76822) * C76442) *
                        C152193 * C4241) *
                       C3719) *
                      C151948)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152066 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152073 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C4913) *
                      C152024 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152073 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C152066 -
                   ((C80072 + C80073 + C80074) * C151912 +
                    (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                     C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                     C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                        C76442) *
                       C152193 * C4913) *
                      C152031 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C152066 -
                   ((C78994 + C78995 + C78996) * C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C152073 +
                   ((C76444 * C1625 + C78471 + C78471 + C152366 * C1649 +
                     C76446 * C8218 + C78472 + C78472 + C152346 * C8224 +
                     C76448 * C25185 + C78473 + C78473 + C76441 * C25189) *
                        C76442 +
                    (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                     C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                     C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                        C151912) *
                       C152193 * C4913) *
                      C3719) *
                 C151937) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C4241 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C152378 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152070 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C4241) *
                      C152374 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C4241 -
                   ((C78994 + C78995 + C78996) * C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C152070) *
                      C152362 +
                  (((C76444 * C2163 + C79191 + C79191 + C152366 * C2171 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76448 * C25923 + C79193 + C79193 + C76441 * C25927) *
                        C76442 +
                    (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                     C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                     C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                        C151912) *
                       C152193 * C152070 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C4241) *
                      C152337) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C4241 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C3235 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C4241) *
                       C152028) *
                      C152368 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C4241) *
                       C3235 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C4241 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152028) *
                      C152353 +
                  ((((C76522 + C76521 + C76520) * C76442 +
                     (C76523 + C76524 + C76525) * C151912) *
                        C152193 * C4241 -
                    ((C77554 + C77555 + C77556) * C151912 +
                     (C77129 + C77128 + C77127) * C76442) *
                        C152193 * C152070) *
                       C3235 +
                   (((C77888 + C77887 + C77886) * C76442 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151912) *
                        C152193 * C152070 -
                    ((C77342 + C77343 + C77344) * C151912 +
                     (C76827 + C76826 + C76825) * C76442) *
                        C152193 * C4241) *
                       C152028) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152379 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152376 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152365 -
                   ((C80284 + C80285 + C80286) * C151912 +
                    (C76448 * C10283 + C79758 + C79758 + C76441 * C10289 +
                     C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                     C76444 * C2564 + C79760 + C79760 + C152366 * C2580) *
                        C76442) *
                       C152193 * C152343) *
                      C3235 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152376 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C152379 -
                   ((C80072 + C80073 + C80074) * C151912 +
                    (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                     C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                     C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                        C76442) *
                       C152193 * C152365 +
                   ((C76444 * C3089 + C80481 + C80481 + C152366 * C3097 +
                     C76446 * C10283 + C80482 + C80482 + C152346 * C10289 +
                     C76448 * C27225 + C80483 + C80483 + C76441 * C27229) *
                        C76442 +
                    (C76444 * C3090 + C80484 + C80484 + C152366 * C3098 +
                     C76446 * C10284 + C80485 + C80485 + C152346 * C10290 +
                     C76448 * C27226 + C80486 + C80486 + C76441 * C27230) *
                        C151912) *
                       C152193 * C152343) *
                      C152028) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152066 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152073 +
                    ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                      C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                      C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                         C76442 +
                     (C77124 + C77125 + C77126) * C151912) *
                        C152193 * C4913) *
                       C3235 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152073 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152066 -
                    ((C80072 + C80073 + C80074) * C151912 +
                     (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                      C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                      C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                         C76442) *
                        C152193 * C4913) *
                       C152028) *
                      C152271 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152073 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152066 -
                    ((C77130 + C77131 + C77132) * C151912 +
                     (C77126 + C77125 + C77124) * C76442) *
                        C152193 * C4913) *
                       C3235 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152066 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152073 +
                    ((C80074 + C80073 + C80072) * C76442 +
                     (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                      C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                      C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                         C151912) *
                        C152193 * C4913) *
                       C152028) *
                      C151948)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C4241 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C3235 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C4241) *
                       C152028) *
                      C152368 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C4241) *
                       C3235 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C4241 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152028) *
                      C152353 +
                  ((((C76522 + C76521 + C76520) * C76442 +
                     (C76523 + C76524 + C76525) * C151912) *
                        C152193 * C4241 -
                    ((C77554 + C77555 + C77556) * C151912 +
                     (C77129 + C77128 + C77127) * C76442) *
                        C152193 * C152070) *
                       C3235 +
                   (((C77888 + C77887 + C77886) * C76442 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151912) *
                        C152193 * C152070 -
                    ((C77342 + C77343 + C77344) * C151912 +
                     (C76827 + C76826 + C76825) * C76442) *
                        C152193 * C4241) *
                       C152028) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C4241 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C152378 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152070 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C4241) *
                      C152374 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C4241 -
                   ((C78994 + C78995 + C78996) * C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C152070) *
                      C152362 +
                  (((C76444 * C2163 + C79191 + C79191 + C152366 * C2171 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76448 * C25923 + C79193 + C79193 + C76441 * C25927) *
                        C76442 +
                    (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                     C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                     C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                        C151912) *
                       C152193 * C152070 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C4241) *
                      C152337) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C1795 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C1796 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C1797 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C151983 * C152337) *
                      C152271 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C1796 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C1795 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C1797 +
                   ((C78688 + C78687 + C78686) * C76442 +
                    (C76444 * C1440 + C78677 + C78677 + C152366 * C1456 +
                     C76446 * C1445 + C78678 + C78678 + C152346 * C1461 +
                     C76448 * C7981 + C78679 + C78679 + C76441 * C7987) *
                        C151912) *
                       C152193 * C151983 * C152337) *
                      C151948)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152285 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152028) *
                      C807 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152285) *
                      C808 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C152285 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152028) *
                      C809 +
                  (((C77344 + C77343 + C77342) * C76442 +
                    (C76444 * C358 + C77333 + C77333 + C152366 * C382 +
                     C76446 * C359 + C77334 + C77334 + C152346 * C383 +
                     C76448 * C1801 + C77335 + C77335 + C76441 * C1803) *
                        C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C151983 * C152285) *
                      C152331)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C2325 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C2326 +
                    ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                      C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                      C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                         C76442 +
                     (C77124 + C77125 + C77126) * C151912) *
                        C152193 * C152330) *
                       C152285 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C2326 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C2325 -
                    ((C80072 + C80073 + C80074) * C151912 +
                     (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                      C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                      C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                         C76442) *
                        C152193 * C152330) *
                       C152028) *
                      C152271 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C2326 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C2325 -
                    ((C77130 + C77131 + C77132) * C151912 +
                     (C77126 + C77125 + C77124) * C76442) *
                        C152193 * C152330) *
                       C152285 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C2325 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C2326 +
                    ((C80074 + C80073 + C80072) * C76442 +
                     (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                      C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                      C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                         C151912) *
                        C152193 * C152330) *
                       C152028) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152286 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C1795 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152070 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C152286) *
                      C1796 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C152286 -
                   ((C78994 + C78995 + C78996) * C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C152070) *
                      C1797 +
                  (((C76444 * C2163 + C79191 + C79191 + C152366 * C2171 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76448 * C25923 + C79193 + C79193 + C76441 * C25927) *
                        C76442 +
                    (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                     C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                     C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                        C151912) *
                       C152193 * C152070 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C152286) *
                      C152337) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152286 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C152285 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152286) *
                       C152028) *
                      C347 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152286) *
                       C152285 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152286 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152028) *
                      C348 +
                  ((((C76522 + C76521 + C76520) * C76442 +
                     (C76523 + C76524 + C76525) * C151912) *
                        C152193 * C152286 -
                    ((C77554 + C77555 + C77556) * C151912 +
                     (C77129 + C77128 + C77127) * C76442) *
                        C152193 * C152070) *
                       C152285 +
                   (((C77888 + C77887 + C77886) * C76442 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151912) *
                        C152193 * C152070 -
                    ((C77342 + C77343 + C77344) * C151912 +
                     (C76827 + C76826 + C76825) * C76442) *
                        C152193 * C152286) *
                       C152028) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C2936 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C2937 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C2938 -
                   ((C80284 + C80285 + C80286) * C151912 +
                    (C76448 * C10283 + C79758 + C79758 + C76441 * C10289 +
                     C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                     C76444 * C2564 + C79760 + C79760 + C152366 * C2580) *
                        C76442) *
                       C152193 * C152343) *
                      C152285 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C2937 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C2936 -
                   ((C80072 + C80073 + C80074) * C151912 +
                    (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                     C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                     C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                        C76442) *
                       C152193 * C2938 +
                   ((C76444 * C3089 + C80481 + C80481 + C152366 * C3097 +
                     C76446 * C10283 + C80482 + C80482 + C152346 * C10289 +
                     C76448 * C27225 + C80483 + C80483 + C76441 * C27229) *
                        C76442 +
                    (C76444 * C3090 + C80484 + C80484 + C152366 * C3098 +
                     C76446 * C10284 + C80485 + C80485 + C152346 * C10290 +
                     C76448 * C27226 + C80486 + C80486 + C76441 * C27230) *
                        C151912) *
                       C152193 * C152343) *
                      C152028) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                        C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                        C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                           C76442 +
                       (C76517 + C76518 + C76519) * C151912) *
                          C152193 * C151983 * C151965 * C129 -
                      ((C76520 + C76521 + C76522) * C151912 +
                       (C76519 + C76518 + C76517) * C76442) *
                          C152193 * C151983 * C151965 * C130 +
                      ((C76522 + C76521 + C76520) * C76442 +
                       (C76523 + C76524 + C76525) * C151912) *
                          C152193 * C151983 * C151965 * C131 -
                      ((C76526 + C76527 + C76528) * C151912 +
                       (C76525 + C76524 + C76523) * C76442) *
                          C152193 * C151983 * C151965 * C132 +
                      ((C76528 + C76527 + C76526) * C76442 +
                       (C76444 * C141 + C76490 + C76490 + C152366 * C157 +
                        C76446 * C360 + C76491 + C76491 + C152346 * C384 +
                        C76448 * C361 + C76492 + C76492 + C76441 * C385) *
                           C151912) *
                          C152193 * C151983 * C151965 * C133) +
                 std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                         C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                         C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                            C76442 +
                        (C76517 + C76518 + C76519) * C151912) *
                           C152193 * C151983 * C152371 -
                       ((C76819 + C76820 + C76821) * C151912 +
                        (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                         C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                         C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                            C76442) *
                           C152193 * C151983 * C152357 +
                       ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                         C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                         C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                            C76442 +
                        (C76822 + C76823 + C76824) * C151912) *
                           C152193 * C151983 * C152327) *
                          C347 +
                      (((C76821 + C76820 + C76819) * C76442 +
                        (C76825 + C76826 + C76827) * C151912) *
                           C152193 * C151983 * C152357 -
                       ((C76520 + C76521 + C76522) * C151912 +
                        (C76519 + C76518 + C76517) * C76442) *
                           C152193 * C151983 * C152371 -
                       ((C76828 + C76829 + C76830) * C151912 +
                        (C76824 + C76823 + C76822) * C76442) *
                           C152193 * C151983 * C152327) *
                          C348 +
                      (((C76522 + C76521 + C76520) * C76442 +
                        (C76523 + C76524 + C76525) * C151912) *
                           C152193 * C151983 * C152371 -
                       ((C76448 * C1439 + C76789 + C76789 + C76441 * C1455 +
                         C76446 * C357 + C76790 + C76790 + C152346 * C381 +
                         C76444 * C350 + C76791 + C76791 + C152366 * C374) *
                            C151912 +
                        (C76827 + C76826 + C76825) * C76442) *
                           C152193 * C151983 * C152357 +
                       ((C76830 + C76829 + C76828) * C76442 +
                        (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                         C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                         C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                            C151912) *
                           C152193 * C151983 * C152327) *
                          C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152372 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152359 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C151965 * C347 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152359 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C152372 -
                   ((C77130 + C77131 + C77132) * C151912 +
                    (C77126 + C77125 + C77124) * C76442) *
                       C152193 * C152330) *
                      C151965 * C348 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C152372 -
                   ((C76448 * C1621 + C77091 + C77091 + C76441 * C1645 +
                     C76446 * C1158 + C77092 + C77092 + C152346 * C1170 +
                     C76444 * C587 + C77093 + C77093 + C152366 * C611) *
                        C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C152359 +
                   ((C77132 + C77131 + C77130) * C76442 +
                    (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                     C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                     C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                        C151912) *
                       C152193 * C152330) *
                      C151965 * C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152327) *
                      C152368 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C1346 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C1345 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152327) *
                      C152353 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C151983 * C1433 -
                  ((C76819 + C76820 + C76821) * C151912 +
                   (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                    C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                    C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                       C76442) *
                      C152193 * C151983 * C1434 +
                  ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                    C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                    C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                       C76442 +
                   (C76822 + C76823 + C76824) * C151912) *
                      C152193 * C151983 * C1435 -
                  ((C76448 * C7980 + C78229 + C78229 + C76441 * C7986 +
                    C76446 * C1444 + C78230 + C78230 + C152346 * C1460 +
                    C76444 * C1441 + C78231 + C78231 + C152366 * C1457) *
                       C151912 +
                   (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                    C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                    C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                       C76442) *
                      C152193 * C151983 * C1436 +
                  ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                    C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                    C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                       C76442 +
                   (C76444 * C1444 + C78238 + C78238 + C152366 * C1460 +
                    C76446 * C7980 + C78239 + C78239 + C152346 * C7986 +
                    C76448 * C24950 + C78240 + C78240 + C76441 * C24954) *
                       C151912) *
                      C152193 * C151983 * C1437) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152372 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152359 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C1345 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152359 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C152372 -
                   ((C76448 * C8219 + C78459 + C78459 + C76441 * C8225 +
                     C76446 * C1626 + C78460 + C78460 + C152346 * C1650 +
                     C76444 * C1619 + C78461 + C78461 + C152366 * C1643) *
                        C151912 +
                    (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                     C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                     C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                        C76442) *
                       C152193 * C152330) *
                      C1346 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C152372 -
                   ((C76448 * C8968 + C78465 + C78465 + C76441 * C8974 +
                     C76446 * C2164 + C78466 + C78466 + C152346 * C2172 +
                     C76444 * C1623 + C78467 + C78467 + C152366 * C1647) *
                        C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C152359 +
                   ((C76444 * C1625 + C78471 + C78471 + C152366 * C1649 +
                     C76446 * C8218 + C78472 + C78472 + C152346 * C8224 +
                     C76448 * C25185 + C78473 + C78473 + C76441 * C25189) *
                        C76442 +
                    (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                     C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                     C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                        C151912) *
                       C152193 * C152330) *
                      C152327) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C2325 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C2326 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C151965 * C152368 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C2326 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C2325 -
                   ((C77130 + C77131 + C77132) * C151912 +
                    (C77126 + C77125 + C77124) * C76442) *
                       C152193 * C152330) *
                      C151965 * C152353 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C2325 -
                   ((C77554 + C77555 + C77556) * C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C2326 +
                   ((C77132 + C77131 + C77130) * C76442 +
                    (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                     C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                     C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                        C151912) *
                       C152193 * C152330) *
                      C151965 * C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C2325 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C2326 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C152371 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C2326 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C2325 -
                   ((C76448 * C8219 + C78459 + C78459 + C76441 * C8225 +
                     C76446 * C1626 + C78460 + C78460 + C152346 * C1650 +
                     C76444 * C1619 + C78461 + C78461 + C152366 * C1643) *
                        C151912 +
                    (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                     C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                     C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                        C76442) *
                       C152193 * C152330) *
                      C152357 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C2325 -
                   ((C78994 + C78995 + C78996) * C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C2326 +
                   ((C76444 * C1625 + C78471 + C78471 + C152366 * C1649 +
                     C76446 * C8218 + C78472 + C78472 + C152346 * C8224 +
                     C76448 * C25185 + C78473 + C78473 + C76441 * C25189) *
                        C76442 +
                    (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                     C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                     C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                        C151912) *
                       C152193 * C152330) *
                      C152327) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C2556 -
                  ((C77121 + C77122 + C77123) * C151912 +
                   (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                    C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                    C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                       C76442) *
                      C152193 * C2557 +
                  ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                    C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                    C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                       C76442 +
                   (C77124 + C77125 + C77126) * C151912) *
                      C152193 * C2558 -
                  ((C76448 * C10284 + C79755 + C79755 + C76441 * C10290 +
                    C76446 * C3090 + C79756 + C79756 + C152346 * C3098 +
                    C76444 * C2563 + C79757 + C79757 + C152366 * C2579) *
                       C151912 +
                   (C76448 * C10283 + C79758 + C79758 + C76441 * C10289 +
                    C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                    C76444 * C2564 + C79760 + C79760 + C152366 * C2580) *
                       C76442) *
                      C152193 * C2559 +
                  ((C76444 * C2565 + C79761 + C79761 + C152366 * C2581 +
                    C76446 * C9540 + C79762 + C79762 + C152346 * C9546 +
                    C76448 * C26493 + C79763 + C79763 + C76441 * C26497) *
                       C76442 +
                   (C76444 * C2566 + C79764 + C79764 + C152366 * C2582 +
                    C76446 * C9541 + C79765 + C79765 + C152346 * C9547 +
                    C76448 * C26494 + C79766 + C79766 + C76441 * C26498) *
                       C151912) *
                      C152193 * C2560) *
                 C151965 * C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152286 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C1345 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152286) *
                       C1346 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C76442 +
                     (C76822 + C76823 + C76824) * C151912) *
                        C152193 * C152286 -
                    ((C78994 + C78995 + C78996) * C151912 +
                     (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                         C76442) *
                        C152193 * C152070) *
                       C152327) *
                      C152271 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152286) *
                       C1345 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152286 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C1346 +
                   (((C78996 + C78995 + C78994) * C76442 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151912) *
                        C152193 * C152070 -
                    ((C76828 + C76829 + C76830) * C151912 +
                     (C76824 + C76823 + C76822) * C76442) *
                        C152193 * C152286) *
                       C152327) *
                      C151948)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152286 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C151965 * C807 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152070 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C152286) *
                      C151965 * C808 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C152286 -
                   ((C77554 + C77555 + C77556) * C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C152070) *
                      C151965 * C809 +
                  (((C77556 + C77555 + C77554) * C76442 +
                    (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                     C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                     C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                        C151912) *
                       C152193 * C152070 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C152286) *
                      C151965 * C152331)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C2936 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C2937 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C2938 -
                   ((C80284 + C80285 + C80286) * C151912 +
                    (C76448 * C10283 + C79758 + C79758 + C76441 * C10289 +
                     C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                     C76444 * C2564 + C79760 + C79760 + C152366 * C2580) *
                        C76442) *
                       C152193 * C152343) *
                      C151965 * C152271 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C2937 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C2936 -
                   ((C77130 + C77131 + C77132) * C151912 +
                    (C77126 + C77125 + C77124) * C76442) *
                       C152193 * C2938 +
                   ((C80286 + C80285 + C80284) * C76442 +
                    (C76444 * C2562 + C80275 + C80275 + C152366 * C2578 +
                     C76446 * C3091 + C80276 + C80276 + C152346 * C3099 +
                     C76448 * C10285 + C80277 + C80277 + C76441 * C10291) *
                        C151912) *
                       C152193 * C152343) *
                      C151965 * C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152371 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152357 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152327) *
                      C347 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152357 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152371 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152327) *
                      C348 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C152371 -
                   ((C76448 * C1439 + C76789 + C76789 + C76441 * C1455 +
                     C76446 * C357 + C76790 + C76790 + C152346 * C381 +
                     C76444 * C350 + C76791 + C76791 + C152366 * C374) *
                        C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152357 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C151983 * C151965 * C129 -
                  ((C76520 + C76521 + C76522) * C151912 +
                   (C76519 + C76518 + C76517) * C76442) *
                      C152193 * C151983 * C151965 * C130 +
                  ((C76522 + C76521 + C76520) * C76442 +
                   (C76523 + C76524 + C76525) * C151912) *
                      C152193 * C151983 * C151965 * C131 -
                  ((C76526 + C76527 + C76528) * C151912 +
                   (C76525 + C76524 + C76523) * C76442) *
                      C152193 * C151983 * C151965 * C132 +
                  ((C76528 + C76527 + C76526) * C76442 +
                   (C76444 * C141 + C76490 + C76490 + C152366 * C157 +
                    C76446 * C360 + C76491 + C76491 + C152346 * C384 +
                    C76448 * C361 + C76492 + C76492 + C76441 * C385) *
                       C151912) *
                      C152193 * C151983 * C151965 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152327) *
                      C152368 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C1346 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C1345 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152327) *
                      C152353 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C151983 * C1433 -
                  ((C76819 + C76820 + C76821) * C151912 +
                   (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                    C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                    C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                       C76442) *
                      C152193 * C151983 * C1434 +
                  ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                    C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                    C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                       C76442 +
                   (C76822 + C76823 + C76824) * C151912) *
                      C152193 * C151983 * C1435 -
                  ((C76448 * C7980 + C78229 + C78229 + C76441 * C7986 +
                    C76446 * C1444 + C78230 + C78230 + C152346 * C1460 +
                    C76444 * C1441 + C78231 + C78231 + C152366 * C1457) *
                       C151912 +
                   (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                    C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                    C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                       C76442) *
                      C152193 * C151983 * C1436 +
                  ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                    C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                    C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                       C76442 +
                   (C76444 * C1444 + C78238 + C78238 + C152366 * C1460 +
                    C76446 * C7980 + C78239 + C78239 + C152346 * C7986 +
                    C76448 * C24950 + C78240 + C78240 + C76441 * C24954) *
                       C151912) *
                      C152193 * C151983 * C1437) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C2325 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C2326 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C151965 * C152368 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C2326 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C2325 -
                   ((C77130 + C77131 + C77132) * C151912 +
                    (C77126 + C77125 + C77124) * C76442) *
                       C152193 * C152330) *
                      C151965 * C152353 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C2325 -
                   ((C77554 + C77555 + C77556) * C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C2326 +
                   ((C77132 + C77131 + C77130) * C76442 +
                    (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                     C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                     C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                        C151912) *
                       C152193 * C152330) *
                      C151965 * C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C2325 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C2326 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C152371 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C2326 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C2325 -
                   ((C76448 * C8219 + C78459 + C78459 + C76441 * C8225 +
                     C76446 * C1626 + C78460 + C78460 + C152346 * C1650 +
                     C76444 * C1619 + C78461 + C78461 + C152366 * C1643) *
                        C151912 +
                    (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                     C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                     C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                        C76442) *
                       C152193 * C152330) *
                      C152357 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C2325 -
                   ((C78994 + C78995 + C78996) * C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C2326 +
                   ((C76444 * C1625 + C78471 + C78471 + C152366 * C1649 +
                     C76446 * C8218 + C78472 + C78472 + C152346 * C8224 +
                     C76448 * C25185 + C78473 + C78473 + C76441 * C25189) *
                        C76442 +
                    (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                     C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                     C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                        C151912) *
                       C152193 * C152330) *
                      C152327) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C4241 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C152285 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C4241) *
                       C152028) *
                      C151942 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C4241) *
                       C152285 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C4241 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152028) *
                      C151951 +
                  ((((C76522 + C76521 + C76520) * C76442 +
                     (C76523 + C76524 + C76525) * C151912) *
                        C152193 * C4241 -
                    ((C77554 + C77555 + C77556) * C151912 +
                     (C77129 + C77128 + C77127) * C76442) *
                        C152193 * C152070) *
                       C152285 +
                   (((C77888 + C77887 + C77886) * C76442 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151912) *
                        C152193 * C152070 -
                    ((C77342 + C77343 + C77344) * C151912 +
                     (C76827 + C76826 + C76825) * C76442) *
                        C152193 * C4241) *
                       C152028) *
                      C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152066 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152073 +
                    ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                      C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                      C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                         C76442 +
                     (C77124 + C77125 + C77126) * C151912) *
                        C152193 * C4913) *
                       C152285 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152073 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152066 -
                    ((C80072 + C80073 + C80074) * C151912 +
                     (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                      C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                      C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                         C76442) *
                        C152193 * C4913) *
                       C152028) *
                      C3375 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152073 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152066 -
                    ((C77130 + C77131 + C77132) * C151912 +
                     (C77126 + C77125 + C77124) * C76442) *
                        C152193 * C4913) *
                       C152285 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152066 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152073 +
                    ((C80074 + C80073 + C80072) * C76442 +
                     (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                      C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                      C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                         C151912) *
                        C152193 * C4913) *
                       C152028) *
                      C151948)) /
                (p * q * std::sqrt(p + q));
    d2ee[42] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C4241 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C152371 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C4241) *
                       C152357 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C76442 +
                     (C76822 + C76823 + C76824) * C151912) *
                        C152193 * C4241 -
                    ((C78994 + C78995 + C78996) * C151912 +
                     (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                         C76442) *
                        C152193 * C152070) *
                       C152327) *
                      C3375 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C4241) *
                       C152371 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C4241 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152357 +
                   (((C78996 + C78995 + C78994) * C76442 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151912) *
                        C152193 * C152070 -
                    ((C76828 + C76829 + C76830) * C151912 +
                     (C76824 + C76823 + C76822) * C76442) *
                        C152193 * C4241) *
                       C152327) *
                      C151948)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C4241 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C151965 * C152377 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152070 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C4241) *
                      C151965 * C152370 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C4241 -
                   ((C77554 + C77555 + C77556) * C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C152070) *
                      C151965 * C152355 +
                  (((C77556 + C77555 + C77554) * C76442 +
                    (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                     C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                     C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                        C151912) *
                       C152193 * C152070 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C4241) *
                      C151965 * C152331)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152379 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152376 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152365 -
                   ((C80284 + C80285 + C80286) * C151912 +
                    (C76448 * C10283 + C79758 + C79758 + C76441 * C10289 +
                     C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                     C76444 * C2564 + C79760 + C79760 + C152366 * C2580) *
                        C76442) *
                       C152193 * C152343) *
                      C151965 * C3375 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152376 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C152379 -
                   ((C77130 + C77131 + C77132) * C151912 +
                    (C77126 + C77125 + C77124) * C76442) *
                       C152193 * C152365 +
                   ((C80286 + C80285 + C80284) * C76442 +
                    (C76444 * C2562 + C80275 + C80275 + C152366 * C2578 +
                     C76446 * C3091 + C80276 + C80276 + C152346 * C3099 +
                     C76448 * C10285 + C80277 + C80277 + C76441 * C10291) *
                        C151912) *
                       C152193 * C152343) *
                      C151965 * C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152066 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152073 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C4913) *
                      C151965 * C151942 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152073 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C152066 -
                   ((C77130 + C77131 + C77132) * C151912 +
                    (C77126 + C77125 + C77124) * C76442) *
                       C152193 * C4913) *
                      C151965 * C151951 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C152066 -
                   ((C77554 + C77555 + C77556) * C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C152073 +
                   ((C77132 + C77131 + C77130) * C76442 +
                    (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                     C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                     C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                        C151912) *
                       C152193 * C4913) *
                      C151965 * C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C4241 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C151965 * C152377 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152070 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C4241) *
                      C151965 * C152370 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C4241 -
                   ((C77554 + C77555 + C77556) * C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C152070) *
                      C151965 * C152355 +
                  (((C77556 + C77555 + C77554) * C76442 +
                    (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                     C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                     C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                        C151912) *
                       C152193 * C152070 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C4241) *
                      C151965 * C152331)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C4241 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C152371 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C4241) *
                       C152357 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C76442 +
                     (C76822 + C76823 + C76824) * C151912) *
                        C152193 * C4241 -
                    ((C78994 + C78995 + C78996) * C151912 +
                     (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                         C76442) *
                        C152193 * C152070) *
                       C152327) *
                      C3375 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C4241) *
                       C152371 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C4241 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152357 +
                   (((C78996 + C78995 + C78994) * C76442 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151912) *
                        C152193 * C152070 -
                    ((C76828 + C76829 + C76830) * C151912 +
                     (C76824 + C76823 + C76822) * C76442) *
                        C152193 * C4241) *
                       C152327) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152285 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152028) *
                      C807 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152285) *
                      C808 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C152285 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152028) *
                      C809 +
                  (((C77344 + C77343 + C77342) * C76442 +
                    (C76444 * C358 + C77333 + C77333 + C152366 * C382 +
                     C76446 * C359 + C77334 + C77334 + C152346 * C383 +
                     C76448 * C1801 + C77335 + C77335 + C76441 * C1803) *
                        C151912) *
                       C152193 * C151983 * C152028 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C151983 * C152285) *
                      C152331)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C1795 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C1796 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C1797 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C151983 * C152337) *
                      C152271 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C1796 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C1795 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C1797 +
                   ((C78688 + C78687 + C78686) * C76442 +
                    (C76444 * C1440 + C78677 + C78677 + C152366 * C1456 +
                     C76446 * C1445 + C78678 + C78678 + C152346 * C1461 +
                     C76448 * C7981 + C78679 + C78679 + C76441 * C7987) *
                        C151912) *
                       C152193 * C151983 * C152337) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152286 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C152285 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152286) *
                       C152028) *
                      C347 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152286) *
                       C152285 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152286 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C152028) *
                      C348 +
                  ((((C76522 + C76521 + C76520) * C76442 +
                     (C76523 + C76524 + C76525) * C151912) *
                        C152193 * C152286 -
                    ((C77554 + C77555 + C77556) * C151912 +
                     (C77129 + C77128 + C77127) * C76442) *
                        C152193 * C152070) *
                       C152285 +
                   (((C77888 + C77887 + C77886) * C76442 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151912) *
                        C152193 * C152070 -
                    ((C77342 + C77343 + C77344) * C151912 +
                     (C76827 + C76826 + C76825) * C76442) *
                        C152193 * C152286) *
                       C152028) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152286 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C1795 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152070 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C152286) *
                      C1796 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C152286 -
                   ((C78994 + C78995 + C78996) * C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C152070) *
                      C1797 +
                  (((C76444 * C2163 + C79191 + C79191 + C152366 * C2171 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76448 * C25923 + C79193 + C79193 + C76441 * C25927) *
                        C76442 +
                    (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                     C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                     C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                        C151912) *
                       C152193 * C152070 -
                   ((C78686 + C78687 + C78688) * C151912 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C76442) *
                       C152193 * C152286) *
                      C152337) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[47] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152371 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152357 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152327) *
                      C347 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152357 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152371 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152327) *
                      C348 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C152371 -
                   ((C76448 * C1439 + C76789 + C76789 + C76441 * C1455 +
                     C76446 * C357 + C76790 + C76790 + C152346 * C381 +
                     C76444 * C350 + C76791 + C76791 + C152366 * C374) *
                        C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152357 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C151983 * C151965 * C129 -
                  ((C76520 + C76521 + C76522) * C151912 +
                   (C76519 + C76518 + C76517) * C76442) *
                      C152193 * C151983 * C151965 * C130 +
                  ((C76522 + C76521 + C76520) * C76442 +
                   (C76523 + C76524 + C76525) * C151912) *
                      C152193 * C151983 * C151965 * C131 -
                  ((C76526 + C76527 + C76528) * C151912 +
                   (C76525 + C76524 + C76523) * C76442) *
                      C152193 * C151983 * C151965 * C132 +
                  ((C76528 + C76527 + C76526) * C76442 +
                   (C76444 * C141 + C76490 + C76490 + C152366 * C157 +
                    C76446 * C360 + C76491 + C76491 + C152346 * C384 +
                    C76448 * C361 + C76492 + C76492 + C76441 * C385) *
                       C151912) *
                      C152193 * C151983 * C151965 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152372 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152359 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C151965 * C347 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152359 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C152372 -
                   ((C77130 + C77131 + C77132) * C151912 +
                    (C77126 + C77125 + C77124) * C76442) *
                       C152193 * C152330) *
                      C151965 * C348 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C152372 -
                   ((C76448 * C1621 + C77091 + C77091 + C76441 * C1645 +
                     C76446 * C1158 + C77092 + C77092 + C152346 * C1170 +
                     C76444 * C587 + C77093 + C77093 + C152366 * C611) *
                        C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C152359 +
                   ((C77132 + C77131 + C77130) * C76442 +
                    (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                     C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                     C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                        C151912) *
                       C152193 * C152330) *
                      C151965 * C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152327) *
                      C152368 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C1346 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C1345 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152327) *
                      C152353 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C151983 * C1433 -
                  ((C76819 + C76820 + C76821) * C151912 +
                   (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                    C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                    C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                       C76442) *
                      C152193 * C151983 * C1434 +
                  ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                    C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                    C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                       C76442 +
                   (C76822 + C76823 + C76824) * C151912) *
                      C152193 * C151983 * C1435 -
                  ((C76448 * C7980 + C78229 + C78229 + C76441 * C7986 +
                    C76446 * C1444 + C78230 + C78230 + C152346 * C1460 +
                    C76444 * C1441 + C78231 + C78231 + C152366 * C1457) *
                       C151912 +
                   (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                    C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                    C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                       C76442) *
                      C152193 * C151983 * C1436 +
                  ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                    C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                    C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                       C76442 +
                   (C76444 * C1444 + C78238 + C78238 + C152366 * C1460 +
                    C76446 * C7980 + C78239 + C78239 + C152346 * C7986 +
                    C76448 * C24950 + C78240 + C78240 + C76441 * C24954) *
                       C151912) *
                      C152193 * C151983 * C1437) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152372 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152359 +
                   ((C76444 * C591 + C77061 + C77061 + C152366 * C615 +
                     C76446 * C1620 + C77062 + C77062 + C152346 * C1644 +
                     C76448 * C1625 + C77063 + C77063 + C76441 * C1649) *
                        C76442 +
                    (C77124 + C77125 + C77126) * C151912) *
                       C152193 * C152330) *
                      C1345 +
                  (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                     C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                     C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                        C76442 +
                    (C77883 + C77884 + C77885) * C151912) *
                       C152193 * C152359 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C152372 -
                   ((C76448 * C8219 + C78459 + C78459 + C76441 * C8225 +
                     C76446 * C1626 + C78460 + C78460 + C152346 * C1650 +
                     C76444 * C1619 + C78461 + C78461 + C152366 * C1643) *
                        C151912 +
                    (C76448 * C8218 + C78462 + C78462 + C76441 * C8224 +
                     C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                     C76444 * C1620 + C78464 + C78464 + C152366 * C1644) *
                        C76442) *
                       C152193 * C152330) *
                      C1346 +
                  (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C152372 -
                   ((C76448 * C8968 + C78465 + C78465 + C76441 * C8974 +
                     C76446 * C2164 + C78466 + C78466 + C152346 * C2172 +
                     C76444 * C1623 + C78467 + C78467 + C152366 * C1647) *
                        C151912 +
                    (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                        C76442) *
                       C152193 * C152359 +
                   ((C76444 * C1625 + C78471 + C78471 + C152366 * C1649 +
                     C76446 * C8218 + C78472 + C78472 + C152346 * C8224 +
                     C76448 * C25185 + C78473 + C78473 + C76441 * C25189) *
                        C76442 +
                    (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                     C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                     C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                        C151912) *
                       C152193 * C152330) *
                      C152327) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C152286 -
                   ((C77121 + C77122 + C77123) * C151912 +
                    (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                        C76442) *
                       C152193 * C152070) *
                      C151965 * C807 +
                  (((C77123 + C77122 + C77121) * C76442 +
                    (C77127 + C77128 + C77129) * C151912) *
                       C152193 * C152070 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C152286) *
                      C151965 * C808 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C152286 -
                   ((C77554 + C77555 + C77556) * C151912 +
                    (C77129 + C77128 + C77127) * C76442) *
                       C152193 * C152070) *
                      C151965 * C809 +
                  (((C77556 + C77555 + C77554) * C76442 +
                    (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                     C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                     C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                        C151912) *
                       C152193 * C152070 -
                   ((C76526 + C76527 + C76528) * C151912 +
                    (C76525 + C76524 + C76523) * C76442) *
                       C152193 * C152286) *
                      C151965 * C152331)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C76442 +
                     (C76517 + C76518 + C76519) * C151912) *
                        C152193 * C152286 -
                    ((C77121 + C77122 + C77123) * C151912 +
                     (C76448 * C1624 + C77058 + C77058 + C76441 * C1648 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76444 * C590 + C77060 + C77060 + C152366 * C614) *
                         C76442) *
                        C152193 * C152070) *
                       C1345 +
                   (((C76444 * C1155 + C77847 + C77847 + C152366 * C1167 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76448 * C2163 + C77849 + C77849 + C76441 * C2171) *
                         C76442 +
                     (C77883 + C77884 + C77885) * C151912) *
                        C152193 * C152070 -
                    ((C76819 + C76820 + C76821) * C151912 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C76442) *
                        C152193 * C152286) *
                       C1346 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C76442 +
                     (C76822 + C76823 + C76824) * C151912) *
                        C152193 * C152286 -
                    ((C78994 + C78995 + C78996) * C151912 +
                     (C76448 * C8967 + C78468 + C78468 + C76441 * C8973 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76444 * C1624 + C78470 + C78470 + C152366 * C1648) *
                         C76442) *
                        C152193 * C152070) *
                       C152327) *
                      C152271 +
                  ((((C77123 + C77122 + C77121) * C76442 +
                     (C77127 + C77128 + C77129) * C151912) *
                        C152193 * C152070 -
                    ((C76520 + C76521 + C76522) * C151912 +
                     (C76519 + C76518 + C76517) * C76442) *
                        C152193 * C152286) *
                       C1345 +
                   (((C76821 + C76820 + C76819) * C76442 +
                     (C76825 + C76826 + C76827) * C151912) *
                        C152193 * C152286 -
                    ((C77886 + C77887 + C77888) * C151912 +
                     (C77885 + C77884 + C77883) * C76442) *
                        C152193 * C152070) *
                       C1346 +
                   (((C78996 + C78995 + C78994) * C76442 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151912) *
                        C152193 * C152070 -
                    ((C76828 + C76829 + C76830) * C151912 +
                     (C76824 + C76823 + C76822) * C76442) *
                        C152193 * C152286) *
                       C152327) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C151983 * C151965 * C129 -
                  ((C76520 + C76521 + C76522) * C151912 +
                   (C76519 + C76518 + C76517) * C76442) *
                      C152193 * C151983 * C151965 * C130 +
                  ((C76522 + C76521 + C76520) * C76442 +
                   (C76523 + C76524 + C76525) * C151912) *
                      C152193 * C151983 * C151965 * C131 -
                  ((C76526 + C76527 + C76528) * C151912 +
                   (C76525 + C76524 + C76523) * C76442) *
                      C152193 * C151983 * C151965 * C132 +
                  ((C76528 + C76527 + C76526) * C76442 +
                   (C76444 * C141 + C76490 + C76490 + C152366 * C157 +
                    C76446 * C360 + C76491 + C76491 + C152346 * C384 +
                    C76448 * C361 + C76492 + C76492 + C76441 * C385) *
                       C151912) *
                      C152193 * C151983 * C151965 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C152371 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C152357 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152327) *
                      C347 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C152357 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C152371 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152327) *
                      C348 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C152371 -
                   ((C76448 * C1439 + C76789 + C76789 + C76441 * C1455 +
                     C76446 * C357 + C76790 + C76790 + C152346 * C381 +
                     C76444 * C350 + C76791 + C76791 + C152366 * C374) *
                        C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C152357 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C76442 +
                    (C76517 + C76518 + C76519) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C76819 + C76820 + C76821) * C151912 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C76442 +
                    (C76822 + C76823 + C76824) * C151912) *
                       C152193 * C151983 * C152327) *
                      C152368 +
                  (((C76821 + C76820 + C76819) * C76442 +
                    (C76825 + C76826 + C76827) * C151912) *
                       C152193 * C151983 * C1346 -
                   ((C76520 + C76521 + C76522) * C151912 +
                    (C76519 + C76518 + C76517) * C76442) *
                       C152193 * C151983 * C1345 -
                   ((C76828 + C76829 + C76830) * C151912 +
                    (C76824 + C76823 + C76822) * C76442) *
                       C152193 * C151983 * C152327) *
                      C152353 +
                  (((C76522 + C76521 + C76520) * C76442 +
                    (C76523 + C76524 + C76525) * C151912) *
                       C152193 * C151983 * C1345 -
                   ((C77342 + C77343 + C77344) * C151912 +
                    (C76827 + C76826 + C76825) * C76442) *
                       C152193 * C151983 * C1346 +
                   ((C76830 + C76829 + C76828) * C76442 +
                    (C76444 * C357 + C76792 + C76792 + C152366 * C381 +
                     C76446 * C1439 + C76793 + C76793 + C152346 * C1455 +
                     C76448 * C1446 + C76794 + C76794 + C76441 * C1462) *
                        C151912) *
                       C152193 * C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                    C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                    C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                       C76442 +
                   (C76517 + C76518 + C76519) * C151912) *
                      C152193 * C151983 * C1433 -
                  ((C76819 + C76820 + C76821) * C151912 +
                   (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                    C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                    C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                       C76442) *
                      C152193 * C151983 * C1434 +
                  ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                    C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                    C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                       C76442 +
                   (C76822 + C76823 + C76824) * C151912) *
                      C152193 * C151983 * C1435 -
                  ((C76448 * C7980 + C78229 + C78229 + C76441 * C7986 +
                    C76446 * C1444 + C78230 + C78230 + C152346 * C1460 +
                    C76444 * C1441 + C78231 + C78231 + C152366 * C1457) *
                       C151912 +
                   (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                    C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                    C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                       C76442) *
                      C152193 * C151983 * C1436 +
                  ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                    C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                    C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                       C76442 +
                   (C76444 * C1444 + C78238 + C78238 + C152366 * C1460 +
                    C76446 * C7980 + C78239 + C78239 + C152346 * C7986 +
                    C76448 * C24950 + C78240 + C78240 + C76441 * C24954) *
                       C151912) *
                      C152193 * C151983 * C1437) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C152024 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C152031 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                       C151983 * C3719) *
                      C151942 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    (C86590 * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C152031 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C152024 -
                   (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C3719) *
                      C151951 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C152024 -
                   (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C152031 +
                   ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                    ((C70389 + C70388) * C76442 +
                     (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                      C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                         C151912) *
                        C152205) *
                       C151983 * C3719) *
                      C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C152024 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152286) *
               C152031 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C76442 +
              (C68221 + C68222) * C151912) *
                 C152301 +
             ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                C152286 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                C152070) *
               C3719) *
              C3375 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152286) *
               C152024 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152031 +
           (((C88043 * C76442 + (C70389 + C70388) * C151912) * C152301 +
             ((C87386 + C87385) * C76442 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                 C152301) *
                C152286) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C151983 * C152378 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C151983 * C152374 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
               C151983 * C152362 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C76442) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C76442) *
                C152301) *
               C151983 * C152337) *
              C3375 +
          ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                C152301 +
            (C86590 * C76442 + C69275 * C151912) * C152205) *
               C151983 * C152374 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C151983 * C152378 -
           (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                C152301) *
               C151983 * C152362 +
           (((C70079 + C70078) * C76442 + (C70077 + C70076) * C151912) *
                C152301 +
            ((C87656 + C87655) * C76442 +
             (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
              C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C151983 * C3235 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C151983 * C152028) *
              C152377 +
          ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                C152301 +
            (C86590 * C76442 + C69275 * C151912) * C152205) *
               C151983 * C152028 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C151983 * C3235) *
              C152370 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C151983 * C3235 -
           (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C68725 * C76442 + (C68737 + C68736) * C151912) * C152301 +
            ((C69274 + C69273) * C76442 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C68943 + C68944) * C151912 + C86199 * C76442) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152372 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152359 +
            (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
             ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
                C152330) *
               C3235 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152359 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152372 -
            (((C89489 + C89490) * C151912 + (C90021 + C90022) * C76442) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C76442) * C152301) *
                C152330) *
               C152028) *
              C3375 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152359 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152372 -
            (((C71686 + C71687) * C151912 + C89750 * C76442) * C152205 +
             (C85670 * C151912 + C85662 * C76442) * C152301) *
                C152330) *
               C3235 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152372 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152359 +
            ((C89479 * C76442 + (C71471 + C71470) * C151912) * C152301 +
             ((C89490 + C89489) * C76442 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C3235 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152286) *
               C152028) *
              C151942 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152286) *
               C3235 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
             (C85669 * C76442 + C68932 * C151912) * C152205) *
                C152286 -
            (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
             (C86199 * C151912 + C68529 * C76442) * C152301) *
                C152070) *
               C3235 +
           (((C69275 * C76442 + (C69274 + C69273) * C151912) * C152301 +
             ((C71471 + C71470) * C76442 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                C152286) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C3235 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C152028) *
                      C152377 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    (C86590 * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C152028 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C3235) *
                      C152370 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C3235 -
                   (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C152028) *
                      C152355 +
                  (((C68725 * C76442 + (C68737 + C68736) * C151912) * C152301 +
                    ((C69274 + C69273) * C76442 +
                     (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
                      C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                         C151912) *
                        C152205) *
                       C151983 * C152028 -
                   (((C68943 + C68944) * C151912 + C86199 * C76442) * C152205 +
                    ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
                       C151983 * C3235) *
                      C152331)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C152378 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C152374 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                       C151983 * C152362 -
                   (((C87655 + C87656) * C151912 + (C88316 + C88315) * C76442) *
                        C152205 +
                    ((C70078 + C70079) * C151912 +
                     (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
                      C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                         C76442) *
                        C152301) *
                       C151983 * C152337) *
                      C3375 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    (C86590 * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C152374 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C152378 -
                   (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C152362 +
                   (((C70079 + C70078) * C76442 + (C70077 + C70076) * C151912) *
                        C152301 +
                    ((C87656 + C87655) * C76442 +
                     (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
                      C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                         C151912) *
                        C152205) *
                       C151983 * C152337) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C152024 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C4241) *
               C152031 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C76442 +
              (C68221 + C68222) * C151912) *
                 C152301 +
             ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                C4241 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                C152070) *
               C3719) *
              C152271 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C4241) *
               C152024 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152031 +
           (((C88043 * C76442 + (C70389 + C70388) * C151912) * C152301 +
             ((C87386 + C87385) * C76442 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                 C152301) *
                C4241) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C152066 -
                   ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
                    (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                       C152073 +
                   (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
                    ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
                       C4913) *
                      C152024 +
                  ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
                    ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                       C152073 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C152066 -
                   (((C89489 + C89490) * C151912 + (C90021 + C90022) * C76442) *
                        C152205 +
                    (C89484 * C151912 + (C87382 + C87381) * C76442) * C152301) *
                       C4913) *
                      C152031 +
                  ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                       C152066 -
                   (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                        C152205 +
                    (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                       C152073 +
                   (((C87388 + C87387) * C76442 + (C87386 + C87385) * C151912) *
                        C152301 +
                    ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
                      C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                         C76442 +
                     (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
                      C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                         C151912) *
                        C152205) *
                       C4913) *
                      C3719) *
                 C151937) /
                (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C152378 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C4241) *
              C152374 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
               C4241 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
               C152070) *
              C152362 +
          ((((C88315 + C88316) * C76442 + (C87656 + C87655) * C151912) *
                C152301 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C76442 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C76442) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C76442) *
                C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C3235 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C4241) *
               C3235 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
             (C85669 * C76442 + C68932 * C151912) * C152205) *
                C4241 -
            (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
             (C86199 * C151912 + C68529 * C76442) * C152301) *
                C152070) *
               C3235 +
           (((C69275 * C76442 + (C69274 + C69273) * C151912) * C152301 +
             ((C71471 + C71470) * C76442 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152379 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152376 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
               C152365 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C76442) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C76442) * C152301) *
               C152343) *
              C3235 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
               C152376 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C152379 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C76442) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C76442) * C152301) *
               C152365 +
           (((C90022 + C90021) * C76442 + (C89490 + C89489) * C151912) *
                C152301 +
            ((C67859 * C9540 + C90013 + C90013 + C67854 * C9546 +
              C67861 * C26493 + C90014 + C90014 + C152179 * C26497) *
                 C76442 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151912) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152066 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152073 +
            (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
             ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
                C4913) *
               C3235 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152073 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152066 -
            (((C89489 + C89490) * C151912 + (C90021 + C90022) * C76442) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C76442) * C152301) *
                C4913) *
               C152028) *
              C152271 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152073 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152066 -
            (((C71686 + C71687) * C151912 + C89750 * C76442) * C152205 +
             (C85670 * C151912 + C85662 * C76442) * C152301) *
                C4913) *
               C3235 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152066 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152073 +
            ((C89479 * C76442 + (C71471 + C71470) * C151912) * C152301 +
             ((C89490 + C89489) * C76442 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C3235 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C4241) *
               C3235 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
             (C85669 * C76442 + C68932 * C151912) * C152205) *
                C4241 -
            (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
             (C86199 * C151912 + C68529 * C76442) * C152301) *
                C152070) *
               C3235 +
           (((C69275 * C76442 + (C69274 + C69273) * C151912) * C152301 +
             ((C71471 + C71470) * C76442 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C152378 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C4241) *
              C152374 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
               C4241 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
               C152070) *
              C152362 +
          ((((C88315 + C88316) * C76442 + (C87656 + C87655) * C151912) *
                C152301 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C76442 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C76442) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C76442) *
                C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C151983 * C1795 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C151983 * C1796 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + (C70391 + C70390) * C151912) *
                C152205) *
               C151983 * C1797 -
           (((C87655 + C87656) * C151912 +
             (C67861 * C8967 + C70587 + C70587 + C152179 * C8973 +
              C67859 * C2163 + C70586 + C70586 + C67854 * C2171) *
                 C76442) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C76442) *
                C152301) *
               C151983 * C152337) *
              C152271 +
          ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                C152301 +
            (C86590 * C76442 + C69275 * C151912) * C152205) *
               C151983 * C1796 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C151983 * C1795 -
           (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                C152301) *
               C151983 * C1797 +
           (((C70079 + C70078) * C76442 + (C70077 + C70076) * C151912) *
                C152301 +
            ((C87656 + C87655) * C76442 +
             (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
              C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C151983 * C152285 -
           (((C69270 + C69269) * C151912 +
             (C67861 * C1624 + C69236 + C69236 + C152179 * C1648 +
              C67859 * C1155 + C69235 + C69235 + C67854 * C1167) *
                 C76442) *
                C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C151983 * C152028) *
              C807 +
          ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                C152301 +
            ((C69269 + C69270) * C76442 + C69275 * C151912) * C152205) *
               C151983 * C152028 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C151983 * C152285) *
              C808 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C151983 * C152285 -
           (((C69273 + C69274) * C151912 + (C69272 + C69271) * C76442) *
                C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
               C151983 * C152028) *
              C809 +
          (((C68725 * C76442 + (C68737 + C68736) * C151912) * C152301 +
            ((C69274 + C69273) * C76442 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C68943 + C68944) * C151912 + (C68526 + C68525) * C76442) *
                C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C2325 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C2326 +
            (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
             ((C89087 + C89088) * C76442 + (C71689 + C71688) * C151912) *
                 C152205) *
                C152330) *
               C152285 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C2326 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C2325 -
            (((C89489 + C89490) * C151912 +
              (C67861 * C10283 + C71885 + C71885 + C152179 * C10289 +
               C67859 * C3089 + C71884 + C71884 + C67854 * C3097) *
                  C76442) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C76442) * C152301) *
                C152330) *
               C152028) *
              C152271 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C2326 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C2325 -
            (((C71686 + C71687) * C151912 + (C71688 + C71689) * C76442) *
                 C152205 +
             (C85670 * C151912 + C85662 * C76442) * C152301) *
                C152330) *
               C152285 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C2325 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C2326 +
            ((C89479 * C76442 + (C71471 + C71470) * C151912) * C152301 +
             ((C89490 + C89489) * C76442 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C1795 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C152286) *
              C1796 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
               C152286 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
               C152070) *
              C1797 +
          ((((C88315 + C88316) * C76442 + (C87656 + C87655) * C151912) *
                C152301 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C76442 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C76442) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C76442) *
                C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C152285 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C67859 * C1620 + C69851 + C69851 + C67854 * C1644 +
               C67861 * C1625 + C69850 + C69850 + C152179 * C1649) *
                  C76442 +
              (C71473 + C71472) * C151912) *
                 C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152286) *
               C152285 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + (C71472 + C71473) * C76442) *
                 C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
             (C85669 * C76442 + C68932 * C151912) * C152205) *
                C152286 -
            (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
             (C86199 * C151912 + C68529 * C76442) * C152301) *
                C152070) *
               C152285 +
           (((C69275 * C76442 + (C69274 + C69273) * C151912) * C152301 +
             ((C71471 + C71470) * C76442 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C2936 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C2937 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
               C2938 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C76442) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C76442) * C152301) *
               C152343) *
              C152285 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
               C2937 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C2936 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C76442) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C76442) * C152301) *
               C2938 +
           (((C90022 + C90021) * C76442 + (C89490 + C89489) * C151912) *
                C152301 +
            ((C67859 * C9540 + C90013 + C90013 + C67854 * C9546 +
              C67861 * C26493 + C90014 + C90014 + C152179 * C26497) *
                 C76442 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151912) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                 C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                    C76442 +
                (C67918 + C67919) * C151912) *
                   C152301 +
               ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                 C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                    C76442 +
                (C68520 + C68519) * C151912) *
                   C152205) *
                  C151983 * C151965 * C129 -
              ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
               ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                   C152301) *
                  C151983 * C151965 * C130 +
              ((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
               ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                  C151983 * C151965 * C131 -
              (((C68943 + C68944) * C151912 + (C68526 + C68525) * C76442) *
                   C152205 +
               ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
                  C151983 * C151965 * C132 +
              ((C67930 * C76442 + (C67927 + C67926) * C151912) * C152301 +
               ((C68944 + C68943) * C76442 +
                (C67859 * C597 + C68937 + C68937 + C67854 * C621 +
                 C67861 * C1160 + C68938 + C68938 + C152179 * C1172) *
                    C151912) *
                   C152205) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                  C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                     C76442 +
                 (C67918 + C67919) * C151912) *
                    C152301 +
                ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                  C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                     C76442 +
                 (C68520 + C68519) * C151912) *
                    C152205) *
                   C151983 * C152371 -
               (((C69270 + C69269) * C151912 +
                 (C67861 * C1624 + C69236 + C69236 + C152179 * C1648 +
                  C67859 * C1155 + C69235 + C69235 + C67854 * C1167) *
                     C76442) *
                    C152205 +
                ((C68219 + C68220) * C151912 +
                 (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                  C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                     C76442) *
                    C152301) *
                   C151983 * C152357 +
               (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                  C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                     C76442 +
                 (C68221 + C68222) * C151912) *
                    C152301 +
                ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                  C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                     C76442 +
                 (C70391 + C70390) * C151912) *
                    C152205) *
                   C151983 * C152327) *
                  C347 +
              ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                    C152301 +
                ((C69269 + C69270) * C76442 + C69275 * C151912) * C152205) *
                   C151983 * C152357 -
               ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
                ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                    C152301) *
                   C151983 * C152371 -
               (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                    C152205 +
                ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                    C152301) *
                   C151983 * C152327) *
                  C348 +
              (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                   C151983 * C152371 -
               (((C69273 + C69274) * C151912 + (C69272 + C69271) * C76442) *
                    C152205 +
                ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                   C151983 * C152357 +
               ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                ((C70389 + C70388) * C76442 +
                 (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                  C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                     C151912) *
                    C152205) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152372 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152359 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
              C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                 C76442 +
             (C71689 + C71688) * C151912) *
                C152205) *
               C152330) *
              C151965 * C347 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C152359 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C152372 -
           (((C71686 + C71687) * C151912 + (C71688 + C71689) * C76442) *
                C152205 +
            (C85670 * C151912 + C85662 * C76442) * C152301) *
               C152330) *
              C151965 * C348 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C152372 -
           (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
            ((C68526 + C68525) * C151912 + C68529 * C76442) * C152301) *
               C152359 +
           ((C68530 * C76442 + (C68528 + C68527) * C151912) * C152301 +
            ((C71687 + C71686) * C76442 +
             (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
              C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C151983 * C1345 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C151983 * C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
              C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                 C76442 +
             (C70391 + C70390) * C151912) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                C152301 +
            (C86590 * C76442 + C69275 * C151912) * C152205) *
               C151983 * C1346 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C151983 * C1345 -
           (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                C152301) *
               C151983 * C152327) *
              C152353 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C151983 * C1345 -
           (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
               C151983 * C1346 +
           ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
            ((C70389 + C70388) * C76442 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C76442 +
            (C67918 + C67919) * C151912) *
               C152301 +
           ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
              C151983 * C1433 -
          ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
           ((C68219 + C68220) * C151912 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C76442) *
               C152301) *
              C151983 * C1434 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C76442 +
            (C68221 + C68222) * C151912) *
               C152301 +
           ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
             C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                C76442 +
            (C70391 + C70390) * C151912) *
               C152205) *
              C151983 * C1435 -
          (((C67861 * C8968 + C70589 + C70589 + C152179 * C8974 +
             C67859 * C2164 + C70588 + C70588 + C67854 * C2172) *
                C151912 +
            (C67861 * C8967 + C70587 + C70587 + C152179 * C8973 +
             C67859 * C2163 + C70586 + C70586 + C67854 * C2171) *
                C76442) *
               C152205 +
           ((C70078 + C70079) * C151912 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C76442) *
               C152301) *
              C151983 * C1436 +
          (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
             C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                C76442 +
            (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
             C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                C151912) *
               C152301 +
           ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
             C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                C76442 +
            (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
             C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152372 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152359 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
              C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                 C76442 +
             (C71689 + C71688) * C151912) *
                C152205) *
               C152330) *
              C1345 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                C152205) *
               C152359 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C152372 -
           (((C67861 * C10284 + C71887 + C71887 + C152179 * C10290 +
              C67859 * C3090 + C71886 + C71886 + C67854 * C3098) *
                 C151912 +
             (C67861 * C10283 + C71885 + C71885 + C152179 * C10289 +
              C67859 * C3089 + C71884 + C71884 + C67854 * C3097) *
                 C76442) *
                C152205 +
            ((C71472 + C71473) * C151912 + (C87382 + C87381) * C76442) *
                C152301) *
               C152330) *
              C1346 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + (C70391 + C70390) * C151912) *
                C152205) *
               C152372 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                C152205 +
            ((C70390 + C70391) * C151912 + (C87384 + C87383) * C76442) *
                C152301) *
               C152359 +
           (((C87388 + C87387) * C76442 + (C87386 + C87385) * C151912) *
                C152301 +
            ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
              C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                 C76442 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C2325 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C2326 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
              C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                 C76442 +
             (C71689 + C71688) * C151912) *
                C152205) *
               C152330) *
              C151965 * C152368 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C2326 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C2325 -
           (((C71686 + C71687) * C151912 + (C71688 + C71689) * C76442) *
                C152205 +
            (C85670 * C151912 + C85662 * C76442) * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C2325 -
           (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
            (C86199 * C151912 + C68529 * C76442) * C152301) *
               C2326 +
           ((C68530 * C76442 + (C68528 + C68527) * C151912) * C152301 +
            ((C71687 + C71686) * C76442 +
             (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
              C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C2325 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C2326 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
              C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                 C76442 +
             (C71689 + C71688) * C151912) *
                C152205) *
               C152330) *
              C152371 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                C152205) *
               C2326 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C2325 -
           (((C67861 * C10284 + C71887 + C71887 + C152179 * C10290 +
              C67859 * C3090 + C71886 + C71886 + C67854 * C3098) *
                 C151912 +
             (C67861 * C10283 + C71885 + C71885 + C152179 * C10289 +
              C67859 * C3089 + C71884 + C71884 + C67854 * C3097) *
                 C76442) *
                C152205 +
            ((C71472 + C71473) * C151912 + (C87382 + C87381) * C76442) *
                C152301) *
               C152330) *
              C152357 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
               C2325 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
               C2326 +
           (((C87388 + C87387) * C76442 + (C87386 + C87385) * C151912) *
                C152301 +
            ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
              C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                 C76442 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C76442 +
            (C67918 + C67919) * C151912) *
               C152301 +
           ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
              C2556 -
          ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
           (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
              C2557 +
          (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
           ((C89087 + C89088) * C76442 + (C71689 + C71688) * C151912) *
               C152205) *
              C2558 -
          (((C89089 + C89090) * C151912 + (C89091 + C89092) * C76442) *
               C152205 +
           ((C71688 + C71689) * C151912 + (C89088 + C89087) * C76442) *
               C152301) *
              C2559 +
          (((C89092 + C89091) * C76442 + (C89090 + C89089) * C151912) *
               C152301 +
           ((C67859 * C17867 + C89071 + C89071 + C67854 * C17873 +
             C67861 * C40425 + C89072 + C89072 + C152179 * C40429) *
                C76442 +
            (C67859 * C17868 + C89073 + C89073 + C67854 * C17874 +
             C67861 * C49415 + C89074 + C89074 + C152179 * C49417) *
                C151912) *
               C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C1345 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                 C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152286) *
               C1346 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C76442 +
              (C68221 + C68222) * C151912) *
                 C152301 +
             ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                C152286 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152286) *
               C1345 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + (C71472 + C71473) * C76442) *
                 C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C1346 +
           (((C88043 * C76442 + (C70389 + C70388) * C151912) * C152301 +
             ((C87386 + C87385) * C76442 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                 C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C151965 * C807 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C152286) *
              C151965 * C808 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C152286 -
           (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
            (C86199 * C151912 + C68529 * C76442) * C152301) *
               C152070) *
              C151965 * C809 +
          (((C68932 * C76442 + (C68944 + C68943) * C151912) * C152301 +
            ((C68528 + C68527) * C76442 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C76442) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C2936 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C2937 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
               C2938 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C76442) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C76442) * C152301) *
               C152343) *
              C151965 * C152271 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C2937 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C2936 -
           (((C71686 + C71687) * C151912 + C89750 * C76442) * C152205 +
            (C85670 * C151912 + C85662 * C76442) * C152301) *
               C2938 +
           ((C89749 * C76442 + (C71687 + C71686) * C151912) * C152301 +
            ((C89090 + C89089) * C76442 +
             (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
              C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                 C151912) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                      C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                         C76442 +
                     (C68520 + C68519) * C151912) *
                        C152205) *
                       C151983 * C152371 -
                   (((C69270 + C69269) * C151912 +
                     (C67861 * C1624 + C69236 + C69236 + C152179 * C1648 +
                      C67859 * C1155 + C69235 + C69235 + C67854 * C1167) *
                         C76442) *
                        C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C152357 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                      C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                         C76442 +
                     (C70391 + C70390) * C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C347 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    ((C69269 + C69270) * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C152357 -
                   ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C152371 -
                   (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                        C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C152327) *
                      C348 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C152371 -
                   (((C69273 + C69274) * C151912 + (C69272 + C69271) * C76442) *
                        C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C152357 +
                   ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                    ((C70389 + C70388) * C76442 +
                     (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                      C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                         C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C76442 +
                    (C67918 + C67919) * C151912) *
                       C152301 +
                   ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                     C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                        C76442 +
                    (C68520 + C68519) * C151912) *
                       C152205) *
                      C151983 * C151965 * C129 -
                  ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
                   ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                       C152301) *
                      C151983 * C151965 * C130 +
                  ((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                   ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                      C151983 * C151965 * C131 -
                  (((C68943 + C68944) * C151912 + (C68526 + C68525) * C76442) *
                       C152205 +
                   ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
                      C151983 * C151965 * C132 +
                  ((C67930 * C76442 + (C67927 + C67926) * C151912) * C152301 +
                   ((C68944 + C68943) * C76442 +
                    (C67859 * C597 + C68937 + C68937 + C67854 * C621 +
                     C67861 * C1160 + C68938 + C68938 + C152179 * C1172) *
                        C151912) *
                       C152205) *
                      C151983 * C151965 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C1345 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C1346 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                      C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                         C76442 +
                     (C70391 + C70390) * C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152368 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    (C86590 * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C1346 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C1345 -
                   (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                        C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C152327) *
                      C152353 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C1345 -
                   (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C1346 +
                   ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                    ((C70389 + C70388) * C76442 +
                     (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                      C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                         C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C76442 +
                    (C67918 + C67919) * C151912) *
                       C152301 +
                   ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                      C151983 * C1433 -
                  ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                   ((C68219 + C68220) * C151912 +
                    (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                     C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                        C76442) *
                       C152301) *
                      C151983 * C1434 +
                  (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                     C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                        C76442 +
                    (C68221 + C68222) * C151912) *
                       C152301 +
                   ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                     C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                        C76442 +
                    (C70391 + C70390) * C151912) *
                       C152205) *
                      C151983 * C1435 -
                  (((C67861 * C8968 + C70589 + C70589 + C152179 * C8974 +
                     C67859 * C2164 + C70588 + C70588 + C67854 * C2172) *
                        C151912 +
                    (C67861 * C8967 + C70587 + C70587 + C152179 * C8973 +
                     C67859 * C2163 + C70586 + C70586 + C67854 * C2171) *
                        C76442) *
                       C152205 +
                   ((C70078 + C70079) * C151912 +
                    (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
                     C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                        C76442) *
                       C152301) *
                      C151983 * C1436 +
                  (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
                     C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                        C76442 +
                    (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
                     C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                        C151912) *
                       C152301 +
                   ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
                     C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                        C76442 +
                    (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
                     C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                        C151912) *
                       C152205) *
                      C151983 * C1437) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C2325 -
                   ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
                    (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                       C2326 +
                   (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
                    ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
                      C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                         C76442 +
                     (C71689 + C71688) * C151912) *
                        C152205) *
                       C152330) *
                      C151965 * C152368 +
                  (((C85661 * C76442 + C85669 * C151912) * C152301 +
                    (C85668 * C76442 + C68530 * C151912) * C152205) *
                       C2326 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C2325 -
                   (((C71686 + C71687) * C151912 + (C71688 + C71689) * C76442) *
                        C152205 +
                    (C85670 * C151912 + C85662 * C76442) * C152301) *
                       C152330) *
                      C151965 * C152353 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C2325 -
                   (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
                    (C86199 * C151912 + C68529 * C76442) * C152301) *
                       C2326 +
                   ((C68530 * C76442 + (C68528 + C68527) * C151912) * C152301 +
                    ((C71687 + C71686) * C76442 +
                     (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
                      C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                         C151912) *
                        C152205) *
                       C152330) *
                      C151965 * C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C2325 -
                   ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
                    (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                       C2326 +
                   (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
                    ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
                      C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                         C76442 +
                     (C71689 + C71688) * C151912) *
                        C152205) *
                       C152330) *
                      C152371 +
                  ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
                    ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                        C152205) *
                       C2326 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C2325 -
                   (((C67861 * C10284 + C71887 + C71887 + C152179 * C10290 +
                      C67859 * C3090 + C71886 + C71886 + C67854 * C3098) *
                         C151912 +
                     (C67861 * C10283 + C71885 + C71885 + C152179 * C10289 +
                      C67859 * C3089 + C71884 + C71884 + C67854 * C3097) *
                         C76442) *
                        C152205 +
                    ((C71472 + C71473) * C151912 + (C87382 + C87381) * C76442) *
                        C152301) *
                       C152330) *
                      C152357 +
                  ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                       C2325 -
                   (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                        C152205 +
                    (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                       C2326 +
                   (((C87388 + C87387) * C76442 + (C87386 + C87385) * C151912) *
                        C152301 +
                    ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
                      C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                         C76442 +
                     (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
                      C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                         C151912) *
                        C152205) *
                       C152330) *
                      C152327) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C152285 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C4241) *
               C152028) *
              C151942 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C4241) *
               C152285 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
             (C85669 * C76442 + C68932 * C151912) * C152205) *
                C4241 -
            (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
             (C86199 * C151912 + C68529 * C76442) * C152301) *
                C152070) *
               C152285 +
           (((C69275 * C76442 + (C69274 + C69273) * C151912) * C152301 +
             ((C71471 + C71470) * C76442 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                C4241) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152066 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152073 +
            (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
             ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
                C4913) *
               C152285 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152073 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152066 -
            (((C89489 + C89490) * C151912 + (C90021 + C90022) * C76442) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C76442) * C152301) *
                C4913) *
               C152028) *
              C3375 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152073 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152066 -
            (((C71686 + C71687) * C151912 + C89750 * C76442) * C152205 +
             (C85670 * C151912 + C85662 * C76442) * C152301) *
                C4913) *
               C152285 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152066 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152073 +
            ((C89479 * C76442 + (C71471 + C71470) * C151912) * C152301 +
             ((C89490 + C89489) * C76442 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C152371 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C4241) *
               C152357 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C76442 +
              (C68221 + C68222) * C151912) *
                 C152301 +
             ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                C4241 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C4241) *
               C152371 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152357 +
           (((C88043 * C76442 + (C70389 + C70388) * C151912) * C152301 +
             ((C87386 + C87385) * C76442 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                 C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C4241) *
              C151965 * C152370 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C4241 -
           (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
            (C86199 * C151912 + C68529 * C76442) * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C68932 * C76442 + (C68944 + C68943) * C151912) * C152301 +
            ((C68528 + C68527) * C76442 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C76442) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152379 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152376 +
           (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
            ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
               C152365 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C76442) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C76442) * C152301) *
               C152343) *
              C151965 * C3375 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C152376 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C152379 -
           (((C71686 + C71687) * C151912 + C89750 * C76442) * C152205 +
            (C85670 * C151912 + C85662 * C76442) * C152301) *
               C152365 +
           ((C89749 * C76442 + (C71687 + C71686) * C151912) * C152301 +
            ((C89090 + C89089) * C76442 +
             (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
              C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                 C151912) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C152066 -
                   ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
                    (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                       C152073 +
                   (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
                    ((C89087 + C89088) * C76442 + C89749 * C151912) * C152205) *
                       C4913) *
                      C151965 * C151942 +
                  (((C85661 * C76442 + C85669 * C151912) * C152301 +
                    (C85668 * C76442 + C68530 * C151912) * C152205) *
                       C152073 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C152066 -
                   (((C71686 + C71687) * C151912 + C89750 * C76442) * C152205 +
                    (C85670 * C151912 + C85662 * C76442) * C152301) *
                       C4913) *
                      C151965 * C151951 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C152066 -
                   (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
                    (C86199 * C151912 + C68529 * C76442) * C152301) *
                       C152073 +
                   ((C68530 * C76442 + (C68528 + C68527) * C151912) * C152301 +
                    ((C71687 + C71686) * C76442 +
                     (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
                      C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                         C151912) *
                        C152205) *
                       C4913) *
                      C151965 * C3722)) /
                (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C4241) *
              C151965 * C152370 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C4241 -
           (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
            (C86199 * C151912 + C68529 * C76442) * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C68932 * C76442 + (C68944 + C68943) * C151912) * C152301 +
            ((C68528 + C68527) * C76442 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C76442) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C152371 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C4241) *
               C152357 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C76442 +
              (C68221 + C68222) * C151912) *
                 C152301 +
             ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                C4241 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C4241) *
               C152371 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C76442) * C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152357 +
           (((C88043 * C76442 + (C70389 + C70388) * C151912) * C152301 +
             ((C87386 + C87385) * C76442 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                 C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C152285 -
                   (((C69270 + C69269) * C151912 +
                     (C67861 * C1624 + C69236 + C69236 + C152179 * C1648 +
                      C67859 * C1155 + C69235 + C69235 + C67854 * C1167) *
                         C76442) *
                        C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C152028) *
                      C807 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    ((C69269 + C69270) * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C152028 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C152285) *
                      C808 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C152285 -
                   (((C69273 + C69274) * C151912 + (C69272 + C69271) * C76442) *
                        C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C152028) *
                      C809 +
                  (((C68725 * C76442 + (C68737 + C68736) * C151912) * C152301 +
                    ((C69274 + C69273) * C76442 +
                     (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
                      C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                         C151912) *
                        C152205) *
                       C151983 * C152028 -
                   (((C68943 + C68944) * C151912 + (C68526 + C68525) * C76442) *
                        C152205 +
                    ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
                       C151983 * C152285) *
                      C152331)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C1795 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C1796 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C87383 + C87384) * C76442 + (C70391 + C70390) * C151912) *
                        C152205) *
                       C151983 * C1797 -
                   (((C87655 + C87656) * C151912 +
                     (C67861 * C8967 + C70587 + C70587 + C152179 * C8973 +
                      C67859 * C2163 + C70586 + C70586 + C67854 * C2171) *
                         C76442) *
                        C152205 +
                    ((C70078 + C70079) * C151912 +
                     (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
                      C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                         C76442) *
                        C152301) *
                       C151983 * C152337) *
                      C152271 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    (C86590 * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C1796 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C1795 -
                   (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                        C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C1797 +
                   (((C70079 + C70078) * C76442 + (C70077 + C70076) * C151912) *
                        C152301 +
                    ((C87656 + C87655) * C76442 +
                     (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
                      C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                         C151912) *
                        C152205) *
                       C151983 * C152337) *
                      C151948)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C152285 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C67859 * C1620 + C69851 + C69851 + C67854 * C1644 +
               C67861 * C1625 + C69850 + C69850 + C152179 * C1649) *
                  C76442 +
              (C71473 + C71472) * C151912) *
                 C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152286) *
               C152285 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + (C71472 + C71473) * C76442) *
                 C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
             (C85669 * C76442 + C68932 * C151912) * C152205) *
                C152286 -
            (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
             (C86199 * C151912 + C68529 * C76442) * C152301) *
                C152070) *
               C152285 +
           (((C69275 * C76442 + (C69274 + C69273) * C151912) * C152301 +
             ((C71471 + C71470) * C76442 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C1795 +
          ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
            ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C76442) *
                C152301) *
               C152286) *
              C1796 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C76442 +
             (C68221 + C68222) * C151912) *
                C152301 +
            ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
               C152286 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
               C152070) *
              C1797 +
          ((((C88315 + C88316) * C76442 + (C87656 + C87655) * C151912) *
                C152301 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C76442 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C76442) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C76442) *
                C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[72] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                      C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                         C76442 +
                     (C68520 + C68519) * C151912) *
                        C152205) *
                       C151983 * C152371 -
                   (((C69270 + C69269) * C151912 +
                     (C67861 * C1624 + C69236 + C69236 + C152179 * C1648 +
                      C67859 * C1155 + C69235 + C69235 + C67854 * C1167) *
                         C76442) *
                        C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C152357 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                      C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                         C76442 +
                     (C70391 + C70390) * C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C347 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    ((C69269 + C69270) * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C152357 -
                   ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C152371 -
                   (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                        C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C152327) *
                      C348 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C152371 -
                   (((C69273 + C69274) * C151912 + (C69272 + C69271) * C76442) *
                        C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C152357 +
                   ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                    ((C70389 + C70388) * C76442 +
                     (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                      C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                         C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C76442 +
                    (C67918 + C67919) * C151912) *
                       C152301 +
                   ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                     C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                        C76442 +
                    (C68520 + C68519) * C151912) *
                       C152205) *
                      C151983 * C151965 * C129 -
                  ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
                   ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                       C152301) *
                      C151983 * C151965 * C130 +
                  ((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                   ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                      C151983 * C151965 * C131 -
                  (((C68943 + C68944) * C151912 + (C68526 + C68525) * C76442) *
                       C152205 +
                   ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
                      C151983 * C151965 * C132 +
                  ((C67930 * C76442 + (C67927 + C67926) * C151912) * C152301 +
                   ((C68944 + C68943) * C76442 +
                    (C67859 * C597 + C68937 + C68937 + C67854 * C621 +
                     C67861 * C1160 + C68938 + C68938 + C152179 * C1172) *
                        C151912) *
                       C152205) *
                      C151983 * C151965 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C152372 -
                   ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
                    (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                       C152359 +
                   (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
                    ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
                      C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                         C76442 +
                     (C71689 + C71688) * C151912) *
                        C152205) *
                       C152330) *
                      C151965 * C347 +
                  (((C85661 * C76442 + C85669 * C151912) * C152301 +
                    (C85668 * C76442 + C68530 * C151912) * C152205) *
                       C152359 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C152372 -
                   (((C71686 + C71687) * C151912 + (C71688 + C71689) * C76442) *
                        C152205 +
                    (C85670 * C151912 + C85662 * C76442) * C152301) *
                       C152330) *
                      C151965 * C348 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C152372 -
                   (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
                    ((C68526 + C68525) * C151912 + C68529 * C76442) * C152301) *
                       C152359 +
                   ((C68530 * C76442 + (C68528 + C68527) * C151912) * C152301 +
                    ((C71687 + C71686) * C76442 +
                     (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
                      C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                         C151912) *
                        C152205) *
                       C152330) *
                      C151965 * C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C1345 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C1346 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                      C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                         C76442 +
                     (C70391 + C70390) * C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152368 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    (C86590 * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C1346 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C1345 -
                   (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                        C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C152327) *
                      C152353 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C1345 -
                   (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C1346 +
                   ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                    ((C70389 + C70388) * C76442 +
                     (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                      C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                         C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C76442 +
                    (C67918 + C67919) * C151912) *
                       C152301 +
                   ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                      C151983 * C1433 -
                  ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                   ((C68219 + C68220) * C151912 +
                    (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                     C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                        C76442) *
                       C152301) *
                      C151983 * C1434 +
                  (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                     C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                        C76442 +
                    (C68221 + C68222) * C151912) *
                       C152301 +
                   ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                     C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                        C76442 +
                    (C70391 + C70390) * C151912) *
                       C152205) *
                      C151983 * C1435 -
                  (((C67861 * C8968 + C70589 + C70589 + C152179 * C8974 +
                     C67859 * C2164 + C70588 + C70588 + C67854 * C2172) *
                        C151912 +
                    (C67861 * C8967 + C70587 + C70587 + C152179 * C8973 +
                     C67859 * C2163 + C70586 + C70586 + C67854 * C2171) *
                        C76442) *
                       C152205 +
                   ((C70078 + C70079) * C151912 +
                    (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
                     C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                        C76442) *
                       C152301) *
                      C151983 * C1436 +
                  (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
                     C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                        C76442 +
                    (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
                     C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                        C151912) *
                       C152301 +
                   ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
                     C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                        C76442 +
                    (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
                     C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                        C151912) *
                       C152205) *
                      C151983 * C1437) *
                 C151937) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C152372 -
                   ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
                    (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                       C152359 +
                   (((C85682 + C85681) * C76442 + C85668 * C151912) * C152301 +
                    ((C67859 * C2564 + C71155 + C71155 + C67854 * C2580 +
                      C67861 * C3089 + C71154 + C71154 + C152179 * C3097) *
                         C76442 +
                     (C71689 + C71688) * C151912) *
                        C152205) *
                       C152330) *
                      C1345 +
                  ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
                    ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                        C152205) *
                       C152359 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C152372 -
                   (((C67861 * C10284 + C71887 + C71887 + C152179 * C10290 +
                      C67859 * C3090 + C71886 + C71886 + C67854 * C3098) *
                         C151912 +
                     (C67861 * C10283 + C71885 + C71885 + C152179 * C10289 +
                      C67859 * C3089 + C71884 + C71884 + C67854 * C3097) *
                         C76442) *
                        C152205 +
                    ((C71472 + C71473) * C151912 + (C87382 + C87381) * C76442) *
                        C152301) *
                       C152330) *
                      C1346 +
                  ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C87383 + C87384) * C76442 + (C70391 + C70390) * C151912) *
                        C152205) *
                       C152372 -
                   (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                        C152205 +
                    ((C70390 + C70391) * C151912 + (C87384 + C87383) * C76442) *
                        C152301) *
                       C152359 +
                   (((C87388 + C87387) * C76442 + (C87386 + C87385) * C151912) *
                        C152301 +
                    ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
                      C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                         C76442 +
                     (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
                      C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                         C151912) *
                        C152205) *
                       C152330) *
                      C152327) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C76442 +
             (C67918 + C67919) * C151912) *
                C152301 +
            ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
               C152070) *
              C151965 * C807 +
          (((C85661 * C76442 + C85669 * C151912) * C152301 +
            (C85668 * C76442 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C76442) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                C152301) *
               C152286) *
              C151965 * C808 +
          (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
            (C85669 * C76442 + C68932 * C151912) * C152205) *
               C152286 -
           (((C68527 + C68528) * C151912 + C85670 * C76442) * C152205 +
            (C86199 * C151912 + C68529 * C76442) * C152301) *
               C152070) *
              C151965 * C809 +
          (((C68932 * C76442 + (C68944 + C68943) * C151912) * C152301 +
            ((C68528 + C68527) * C76442 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C76442) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C76442 +
              (C67918 + C67919) * C151912) *
                 C152301 +
             ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C76442) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C76442) * C152301) *
                C152070) *
               C1345 +
           ((((C86597 + C86598) * C76442 + C86590 * C151912) * C152301 +
             ((C87381 + C87382) * C76442 + (C71473 + C71472) * C151912) *
                 C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C76442) *
                 C152301) *
                C152286) *
               C1346 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C76442 +
              (C68221 + C68222) * C151912) *
                 C152301 +
             ((C87383 + C87384) * C76442 + C88043 * C151912) * C152205) *
                C152286 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C76442) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C76442) * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C85661 * C76442 + C85669 * C151912) * C152301 +
             (C85668 * C76442 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C76442) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                 C152301) *
                C152286) *
               C1345 +
           ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                 C152301 +
             (C86590 * C76442 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + (C71472 + C71473) * C76442) *
                 C152205 +
             (C86592 * C151912 + C86591 * C76442) * C152301) *
                C152070) *
               C1346 +
           (((C88043 * C76442 + (C70389 + C70388) * C151912) * C152301 +
             ((C87386 + C87385) * C76442 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C76442) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                 C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C76442 +
                    (C67918 + C67919) * C151912) *
                       C152301 +
                   ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                     C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                        C76442 +
                    (C68520 + C68519) * C151912) *
                       C152205) *
                      C151983 * C151965 * C129 -
                  ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
                   ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                       C152301) *
                      C151983 * C151965 * C130 +
                  ((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                   ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                      C151983 * C151965 * C131 -
                  (((C68943 + C68944) * C151912 + (C68526 + C68525) * C76442) *
                       C152205 +
                   ((C67925 + C67924) * C151912 + C67929 * C76442) * C152301) *
                      C151983 * C151965 * C132 +
                  ((C67930 * C76442 + (C67927 + C67926) * C151912) * C152301 +
                   ((C68944 + C68943) * C76442 +
                    (C67859 * C597 + C68937 + C68937 + C67854 * C621 +
                     C67861 * C1160 + C68938 + C68938 + C152179 * C1172) *
                        C151912) *
                       C152205) *
                      C151983 * C151965 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C67859 * C590 + C68462 + C68462 + C67854 * C614 +
                      C67861 * C1155 + C68461 + C68461 + C152179 * C1167) *
                         C76442 +
                     (C68520 + C68519) * C151912) *
                        C152205) *
                       C151983 * C152371 -
                   (((C69270 + C69269) * C151912 +
                     (C67861 * C1624 + C69236 + C69236 + C152179 * C1648 +
                      C67859 * C1155 + C69235 + C69235 + C67854 * C1167) *
                         C76442) *
                        C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C152357 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                      C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                         C76442 +
                     (C70391 + C70390) * C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C347 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    ((C69269 + C69270) * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C152357 -
                   ((C68529 * C151912 + (C68519 + C68520) * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C152371 -
                   (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                        C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C152327) *
                      C348 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    ((C68518 + C68517) * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C152371 -
                   (((C69273 + C69274) * C151912 + (C69272 + C69271) * C76442) *
                        C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C152357 +
                   ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                    ((C70389 + C70388) * C76442 +
                     (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                      C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                         C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                      C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                         C76442 +
                     (C67918 + C67919) * C151912) *
                        C152301 +
                    ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                       C151983 * C1345 -
                   ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                    ((C68219 + C68220) * C151912 +
                     (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                      C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                         C76442) *
                        C152301) *
                       C151983 * C1346 +
                   (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                      C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                         C76442 +
                     (C68221 + C68222) * C151912) *
                        C152301 +
                    ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                      C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                         C76442 +
                     (C70391 + C70390) * C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152368 +
                  ((((C68220 + C68219) * C76442 + (C68218 + C68217) * C151912) *
                        C152301 +
                    (C86590 * C76442 + C69275 * C151912) * C152205) *
                       C151983 * C1346 -
                   ((C68529 * C151912 + C85667 * C76442) * C152205 +
                    ((C67921 + C67920) * C151912 + (C67919 + C67918) * C76442) *
                        C152301) *
                       C151983 * C1345 -
                   (((C70388 + C70389) * C151912 + (C70390 + C70391) * C76442) *
                        C152205 +
                    ((C68224 + C68223) * C151912 + (C68222 + C68221) * C76442) *
                        C152301) *
                       C151983 * C152327) *
                      C152353 +
                  (((C67928 * C76442 + (C67923 + C67922) * C151912) * C152301 +
                    (C85669 * C76442 + C68932 * C151912) * C152205) *
                       C151983 * C1345 -
                   (((C69273 + C69274) * C151912 + C86592 * C76442) * C152205 +
                    ((C68226 + C68225) * C151912 + C68229 * C76442) * C152301) *
                       C151983 * C1346 +
                   ((C68230 * C76442 + (C68228 + C68227) * C151912) * C152301 +
                    ((C70389 + C70388) * C76442 +
                     (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                      C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                         C151912) *
                        C152205) *
                       C151983 * C152327) *
                      C152321)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                     C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                        C76442 +
                    (C67918 + C67919) * C151912) *
                       C152301 +
                   ((C85679 + C85680) * C76442 + C85661 * C151912) * C152205) *
                      C151983 * C1433 -
                  ((C86591 * C151912 + (C86598 + C86597) * C76442) * C152205 +
                   ((C68219 + C68220) * C151912 +
                    (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                     C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                        C76442) *
                       C152301) *
                      C151983 * C1434 +
                  (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                     C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                        C76442 +
                    (C68221 + C68222) * C151912) *
                       C152301 +
                   ((C67859 * C1624 + C69857 + C69857 + C67854 * C1648 +
                     C67861 * C2163 + C69856 + C69856 + C152179 * C2171) *
                        C76442 +
                    (C70391 + C70390) * C151912) *
                       C152205) *
                      C151983 * C1435 -
                  (((C67861 * C8968 + C70589 + C70589 + C152179 * C8974 +
                     C67859 * C2164 + C70588 + C70588 + C67854 * C2172) *
                        C151912 +
                    (C67861 * C8967 + C70587 + C70587 + C152179 * C8973 +
                     C67859 * C2163 + C70586 + C70586 + C67854 * C2171) *
                        C76442) *
                       C152205 +
                   ((C70078 + C70079) * C151912 +
                    (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
                     C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                        C76442) *
                       C152301) *
                      C151983 * C1436 +
                  (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
                     C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                        C76442 +
                    (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
                     C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                        C151912) *
                       C152301 +
                   ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
                     C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                        C76442 +
                    (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
                     C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                        C151912) *
                       C152205) *
                      C151983 * C1437) *
                 C151937) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152024 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152031 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C3719) *
              C151942 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152031 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152024 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C3719) *
              C151951 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C152024 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152031 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C152024 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152286) *
               C152031 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C152262 +
              (C68221 + C68222) * C151912) *
                 C96036 +
             ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
                C152286 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
                C152070) *
               C3719) *
              C3375 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152286) *
               C152024 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152031 +
           (((C88043 * C152262 + (C70389 + C70388) * C151912) * C96036 +
             ((C87386 + C87385) * C152262 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                 C96036) *
                C152286) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152378 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152374 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152362 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C151983 * C152337) *
              C3375 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152374 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152378 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152362 +
           (((C70079 + C70078) * C152262 + (C70077 + C70076) * C151912) *
                C96036 +
            ((C87656 + C87655) * C152262 +
             (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
              C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C3235 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152028) *
              C152377 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152028 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C3235) *
              C152370 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C3235 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152028) *
              C152355 +
          (((C68725 * C152262 + (C68737 + C68736) * C151912) * C96036 +
            ((C69274 + C69273) * C152262 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152372 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152359 +
            (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
             ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
                C152330) *
               C3235 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152359 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152372 -
            (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
                C152330) *
               C152028) *
              C3375 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152359 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152372 -
            (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
             (C85670 * C151912 + C85662 * C152262) * C96036) *
                C152330) *
               C3235 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152372 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152359 +
            ((C89479 * C152262 + (C71471 + C71470) * C151912) * C96036 +
             ((C89490 + C89489) * C152262 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C3235 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152286) *
               C152028) *
              C151942 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152286) *
               C3235 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152028) *
              C151951 +
          ((((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
             (C85669 * C152262 + C68932 * C151912) * C152205) *
                C152286 -
            (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
             (C86199 * C151912 + C68529 * C152262) * C96036) *
                C152070) *
               C3235 +
           (((C69275 * C152262 + (C69274 + C69273) * C151912) * C96036 +
             ((C71471 + C71470) * C152262 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
                C152286) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C3235 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152028) *
              C152377 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152028 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C3235) *
              C152370 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C3235 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152028) *
              C152355 +
          (((C68725 * C152262 + (C68737 + C68736) * C151912) * C96036 +
            ((C69274 + C69273) * C152262 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152378 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152374 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152362 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C151983 * C152337) *
              C3375 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152374 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152378 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152362 +
           (((C70079 + C70078) * C152262 + (C70077 + C70076) * C151912) *
                C96036 +
            ((C87656 + C87655) * C152262 +
             (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
              C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C152024 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C4241) *
               C152031 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C152262 +
              (C68221 + C68222) * C151912) *
                 C96036 +
             ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
                C4241 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
                C152070) *
               C3719) *
              C152271 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C4241) *
               C152024 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152031 +
           (((C88043 * C152262 + (C70389 + C70388) * C151912) * C96036 +
             ((C87386 + C87385) * C152262 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                 C96036) *
                C4241) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152066 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152073 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C4913) *
              C152024 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152073 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C152066 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
               C4913) *
              C152031 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C152066 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C152073 +
           (((C87388 + C87387) * C152262 + (C87386 + C87385) * C151912) *
                C96036 +
            ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
              C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                 C152262 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C4913) *
              C3719) *
         C151937) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C152378 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C4241) *
              C152374 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C4241 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C152070) *
              C152362 +
          ((((C88315 + C88316) * C152262 + (C87656 + C87655) * C151912) *
                C96036 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C152262 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C3235 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C4241) *
               C152028) *
              C152368 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C4241) *
               C3235 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152028) *
              C152353 +
          ((((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
             (C85669 * C152262 + C68932 * C151912) * C152205) *
                C4241 -
            (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
             (C86199 * C151912 + C68529 * C152262) * C96036) *
                C152070) *
               C3235 +
           (((C69275 * C152262 + (C69274 + C69273) * C151912) * C96036 +
             ((C71471 + C71470) * C152262 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152379 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152376 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152365 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C152262) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C152262) * C96036) *
               C152343) *
              C3235 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152376 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C152379 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
               C152365 +
           (((C90022 + C90021) * C152262 + (C89490 + C89489) * C151912) *
                C96036 +
            ((C67859 * C9540 + C90013 + C90013 + C67854 * C9546 +
              C67861 * C26493 + C90014 + C90014 + C152179 * C26497) *
                 C152262 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151912) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152066 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152073 +
            (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
             ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
                C4913) *
               C3235 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152073 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152066 -
            (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
                C4913) *
               C152028) *
              C152271 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152073 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152066 -
            (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
             (C85670 * C151912 + C85662 * C152262) * C96036) *
                C4913) *
               C3235 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152066 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152073 +
            ((C89479 * C152262 + (C71471 + C71470) * C151912) * C96036 +
             ((C89490 + C89489) * C152262 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C3235 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C4241) *
               C152028) *
              C152368 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C4241) *
               C3235 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152028) *
              C152353 +
          ((((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
             (C85669 * C152262 + C68932 * C151912) * C152205) *
                C4241 -
            (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
             (C86199 * C151912 + C68529 * C152262) * C96036) *
                C152070) *
               C3235 +
           (((C69275 * C152262 + (C69274 + C69273) * C151912) * C96036 +
             ((C71471 + C71470) * C152262 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C152378 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C4241) *
              C152374 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C4241 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C152070) *
              C152362 +
          ((((C88315 + C88316) * C152262 + (C87656 + C87655) * C151912) *
                C96036 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C152262 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C1795 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C1796 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C1797 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C151983 * C152337) *
              C152271 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C1796 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C1795 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C1797 +
           (((C70079 + C70078) * C152262 + (C70077 + C70076) * C151912) *
                C96036 +
            ((C87656 + C87655) * C152262 +
             (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
              C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152285 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152028) *
              C807 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152028 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152285) *
              C808 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C152285 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152028) *
              C809 +
          (((C68725 * C152262 + (C68737 + C68736) * C151912) * C96036 +
            ((C69274 + C69273) * C152262 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C2325 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C2326 +
            (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
             ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
                C152330) *
               C152285 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C2326 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C2325 -
            (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
                C152330) *
               C152028) *
              C152271 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C2326 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C2325 -
            (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
             (C85670 * C151912 + C85662 * C152262) * C96036) *
                C152330) *
               C152285 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C2325 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C2326 +
            ((C89479 * C152262 + (C71471 + C71470) * C151912) * C96036 +
             ((C89490 + C89489) * C152262 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C1795 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C152286) *
              C1796 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C152286 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C152070) *
              C1797 +
          ((((C88315 + C88316) * C152262 + (C87656 + C87655) * C151912) *
                C96036 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C152262 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C152285 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152286) *
               C152028) *
              C347 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152286) *
               C152285 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152028) *
              C348 +
          ((((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
             (C85669 * C152262 + C68932 * C151912) * C152205) *
                C152286 -
            (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
             (C86199 * C151912 + C68529 * C152262) * C96036) *
                C152070) *
               C152285 +
           (((C69275 * C152262 + (C69274 + C69273) * C151912) * C96036 +
             ((C71471 + C71470) * C152262 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C2936 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C2937 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C2938 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C152262) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C152262) * C96036) *
               C152343) *
              C152285 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C2937 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C2936 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
               C2938 +
           (((C90022 + C90021) * C152262 + (C89490 + C89489) * C151912) *
                C96036 +
            ((C67859 * C9540 + C90013 + C90013 + C67854 * C9546 +
              C67861 * C26493 + C90014 + C90014 + C152179 * C26497) *
                 C152262 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151912) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                 C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                    C152262 +
                (C67918 + C67919) * C151912) *
                   C96036 +
               ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                  C151983 * C151965 * C129 -
              ((C68529 * C151912 + C85667 * C152262) * C152205 +
               ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                   C96036) *
                  C151983 * C151965 * C130 +
              ((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
               (C85669 * C152262 + C68932 * C151912) * C152205) *
                  C151983 * C151965 * C131 -
              (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
               ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
                  C151983 * C151965 * C132 +
              ((C67930 * C152262 + (C67927 + C67926) * C151912) * C96036 +
               ((C68944 + C68943) * C152262 +
                (C67859 * C597 + C68937 + C68937 + C67854 * C621 +
                 C67861 * C1160 + C68938 + C68938 + C152179 * C1172) *
                    C151912) *
                   C152205) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                  C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                     C152262 +
                 (C67918 + C67919) * C151912) *
                    C96036 +
                ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                   C151983 * C152371 -
               ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
                ((C68219 + C68220) * C151912 +
                 (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                  C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                     C152262) *
                    C96036) *
                   C151983 * C152357 +
               (((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                  C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                     C152262 +
                 (C68221 + C68222) * C151912) *
                    C96036 +
                ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
                   C151983 * C152327) *
                  C347 +
              ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                    C96036 +
                (C86590 * C152262 + C69275 * C151912) * C152205) *
                   C151983 * C152357 -
               ((C68529 * C151912 + C85667 * C152262) * C152205 +
                ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                    C96036) *
                   C151983 * C152371 -
               (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
                ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                    C96036) *
                   C151983 * C152327) *
                  C348 +
              (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
                (C85669 * C152262 + C68932 * C151912) * C152205) *
                   C151983 * C152371 -
               (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
                ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
                   C151983 * C152357 +
               ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
                ((C70389 + C70388) * C152262 +
                 (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
                  C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                     C151912) *
                    C152205) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152372 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152359 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C151965 * C347 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152359 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C152372 -
           (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
            (C85670 * C151912 + C85662 * C152262) * C96036) *
               C152330) *
              C151965 * C348 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C152372 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C152359 +
           ((C68530 * C152262 + (C68528 + C68527) * C151912) * C96036 +
            ((C71687 + C71686) * C152262 +
             (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
              C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C1345 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C1346 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C1345 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152327) *
              C152353 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C1345 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C1346 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C151983 * C1433 -
          ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
           ((C68219 + C68220) * C151912 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152262) *
               C96036) *
              C151983 * C1434 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152262 +
            (C68221 + C68222) * C151912) *
               C96036 +
           ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
              C151983 * C1435 -
          (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
               C152205 +
           ((C70078 + C70079) * C151912 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152262) *
               C96036) *
              C151983 * C1436 +
          (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
             C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                C152262 +
            (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
             C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
             C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                C152262 +
            (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
             C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152372 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152359 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C1345 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152359 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C152372 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
               C152330) *
              C1346 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C152372 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C152359 +
           (((C87388 + C87387) * C152262 + (C87386 + C87385) * C151912) *
                C96036 +
            ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
              C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                 C152262 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C2325 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C2326 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C2326 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C2325 -
           (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
            (C85670 * C151912 + C85662 * C152262) * C96036) *
               C152330) *
              C151965 * C152353 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C2325 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C2326 +
           ((C68530 * C152262 + (C68528 + C68527) * C151912) * C96036 +
            ((C71687 + C71686) * C152262 +
             (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
              C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C2325 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C2326 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C152371 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C2326 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C2325 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
               C152330) *
              C152357 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C2325 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C2326 +
           (((C87388 + C87387) * C152262 + (C87386 + C87385) * C151912) *
                C96036 +
            ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
              C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                 C152262 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C2556 -
          ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
           (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
              C2557 +
          (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
           ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
              C2558 -
          (((C89089 + C89090) * C151912 + (C89091 + C89092) * C152262) *
               C152205 +
           (C89750 * C151912 + (C89088 + C89087) * C152262) * C96036) *
              C2559 +
          (((C89092 + C89091) * C152262 + (C89090 + C89089) * C151912) *
               C96036 +
           ((C67859 * C17867 + C89071 + C89071 + C67854 * C17873 +
             C67861 * C40425 + C89072 + C89072 + C152179 * C40429) *
                C152262 +
            (C67859 * C17868 + C89073 + C89073 + C67854 * C17874 +
             C67861 * C49415 + C89074 + C89074 + C152179 * C49417) *
                C151912) *
               C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C1345 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152286) *
               C1346 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C152262 +
              (C68221 + C68222) * C151912) *
                 C96036 +
             ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
                C152286 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
                C152070) *
               C152327) *
              C152271 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152286) *
               C1345 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C1346 +
           (((C88043 * C152262 + (C70389 + C70388) * C151912) * C96036 +
             ((C87386 + C87385) * C152262 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                 C96036) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C151965 * C807 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C152286) *
              C151965 * C808 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C152286 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C152070) *
              C151965 * C809 +
          (((C68932 * C152262 + (C68944 + C68943) * C151912) * C96036 +
            ((C68528 + C68527) * C152262 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C2936 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C2937 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C2938 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C152262) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C152262) * C96036) *
               C152343) *
              C151965 * C152271 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C2937 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C2936 -
           (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
            (C85670 * C151912 + C85662 * C152262) * C96036) *
               C2938 +
           ((C89749 * C152262 + (C71687 + C71686) * C151912) * C96036 +
            ((C89090 + C89089) * C152262 +
             (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
              C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                 C151912) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152371 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152357 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152327) *
              C347 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152357 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152371 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152327) *
              C348 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C152371 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152357 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C151983 * C151965 * C129 -
          ((C68529 * C151912 + C85667 * C152262) * C152205 +
           ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
               C96036) *
              C151983 * C151965 * C130 +
          ((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
           (C85669 * C152262 + C68932 * C151912) * C152205) *
              C151983 * C151965 * C131 -
          (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
           ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
              C151983 * C151965 * C132 +
          ((C67930 * C152262 + (C67927 + C67926) * C151912) * C96036 +
           ((C68944 + C68943) * C152262 +
            (C67859 * C597 + C68937 + C68937 + C67854 * C621 + C67861 * C1160 +
             C68938 + C68938 + C152179 * C1172) *
                C151912) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C1345 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C1346 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C1345 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152327) *
              C152353 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C1345 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C1346 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C151983 * C1433 -
          ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
           ((C68219 + C68220) * C151912 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152262) *
               C96036) *
              C151983 * C1434 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152262 +
            (C68221 + C68222) * C151912) *
               C96036 +
           ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
              C151983 * C1435 -
          (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
               C152205 +
           ((C70078 + C70079) * C151912 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152262) *
               C96036) *
              C151983 * C1436 +
          (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
             C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                C152262 +
            (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
             C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
             C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                C152262 +
            (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
             C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C2325 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C2326 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C2326 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C2325 -
           (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
            (C85670 * C151912 + C85662 * C152262) * C96036) *
               C152330) *
              C151965 * C152353 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C2325 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C2326 +
           ((C68530 * C152262 + (C68528 + C68527) * C151912) * C96036 +
            ((C71687 + C71686) * C152262 +
             (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
              C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C2325 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C2326 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C152371 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C2326 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C2325 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
               C152330) *
              C152357 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C2325 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C2326 +
           (((C87388 + C87387) * C152262 + (C87386 + C87385) * C151912) *
                C96036 +
            ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
              C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                 C152262 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C152285 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C4241) *
               C152028) *
              C151942 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C4241) *
               C152285 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152028) *
              C151951 +
          ((((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
             (C85669 * C152262 + C68932 * C151912) * C152205) *
                C4241 -
            (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
             (C86199 * C151912 + C68529 * C152262) * C96036) *
                C152070) *
               C152285 +
           (((C69275 * C152262 + (C69274 + C69273) * C151912) * C96036 +
             ((C71471 + C71470) * C152262 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
                C4241) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152066 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152073 +
            (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
             ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
                C4913) *
               C152285 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152073 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152066 -
            (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                 C152205 +
             (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
                C4913) *
               C152028) *
              C3375 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152073 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152066 -
            (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
             (C85670 * C151912 + C85662 * C152262) * C96036) *
                C4913) *
               C152285 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152066 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152073 +
            ((C89479 * C152262 + (C71471 + C71470) * C151912) * C96036 +
             ((C89490 + C89489) * C152262 +
              (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
               C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C152371 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C4241) *
               C152357 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C152262 +
              (C68221 + C68222) * C151912) *
                 C96036 +
             ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
                C4241 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
                C152070) *
               C152327) *
              C3375 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C4241) *
               C152371 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152357 +
           (((C88043 * C152262 + (C70389 + C70388) * C151912) * C96036 +
             ((C87386 + C87385) * C152262 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                 C96036) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C151965 * C152377 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C4241) *
              C151965 * C152370 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C4241 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C152070) *
              C151965 * C152355 +
          (((C68932 * C152262 + (C68944 + C68943) * C151912) * C96036 +
            ((C68528 + C68527) * C152262 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152379 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152376 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152365 -
           (((C89089 + C89090) * C151912 + (C89091 + C89092) * C152262) *
                C152205 +
            (C89750 * C151912 + (C89088 + C89087) * C152262) * C96036) *
               C152343) *
              C151965 * C3375 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152376 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C152379 -
           (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
            (C85670 * C151912 + C85662 * C152262) * C96036) *
               C152365 +
           ((C89749 * C152262 + (C71687 + C71686) * C151912) * C96036 +
            ((C89090 + C89089) * C152262 +
             (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
              C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                 C151912) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152066 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152073 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C4913) *
              C151965 * C151942 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152073 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C152066 -
           (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
            (C85670 * C151912 + C85662 * C152262) * C96036) *
               C4913) *
              C151965 * C151951 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C152066 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C152073 +
           ((C68530 * C152262 + (C68528 + C68527) * C151912) * C96036 +
            ((C71687 + C71686) * C152262 +
             (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
              C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C4913) *
              C151965 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C4241 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C151965 * C152377 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C4241) *
              C151965 * C152370 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C4241 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C152070) *
              C151965 * C152355 +
          (((C68932 * C152262 + (C68944 + C68943) * C151912) * C96036 +
            ((C68528 + C68527) * C152262 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C4241 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C152371 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C4241) *
               C152357 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C152262 +
              (C68221 + C68222) * C151912) *
                 C96036 +
             ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
                C4241 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
                C152070) *
               C152327) *
              C3375 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C4241) *
               C152371 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C4241 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152357 +
           (((C88043 * C152262 + (C70389 + C70388) * C151912) * C96036 +
             ((C87386 + C87385) * C152262 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                 C96036) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152285 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152028) *
              C807 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152028 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152285) *
              C808 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C152285 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152028) *
              C809 +
          (((C68725 * C152262 + (C68737 + C68736) * C151912) * C96036 +
            ((C69274 + C69273) * C152262 +
             (C67859 * C1159 + C69255 + C69255 + C67854 * C1171 +
              C67861 * C2014 + C69256 + C69256 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C1795 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C1796 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C1797 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C151983 * C152337) *
              C152271 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C1796 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C1795 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C1797 +
           (((C70079 + C70078) * C152262 + (C70077 + C70076) * C151912) *
                C96036 +
            ((C87656 + C87655) * C152262 +
             (C67859 * C2165 + C70590 + C70590 + C67854 * C2173 +
              C67861 * C8969 + C70591 + C70591 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C152285 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152286) *
               C152028) *
              C347 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152286) *
               C152285 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C152028) *
              C348 +
          ((((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
             (C85669 * C152262 + C68932 * C151912) * C152205) *
                C152286 -
            (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
             (C86199 * C151912 + C68529 * C152262) * C96036) *
                C152070) *
               C152285 +
           (((C69275 * C152262 + (C69274 + C69273) * C151912) * C96036 +
             ((C71471 + C71470) * C152262 +
              (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
               C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
             ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C1795 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152070 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C152286) *
              C1796 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C152286 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C152070) *
              C1797 +
          ((((C88315 + C88316) * C152262 + (C87656 + C87655) * C151912) *
                C96036 +
            ((C67859 * C8218 + C88307 + C88307 + C67854 * C8224 +
              C67861 * C25185 + C88308 + C88308 + C152179 * C25189) *
                 C152262 +
             (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
              C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
                C152205 +
            ((C70078 + C70079) * C151912 +
             (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
              C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                 C152262) *
                C96036) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152371 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152357 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152327) *
              C347 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152357 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152371 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152327) *
              C348 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C152371 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152357 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C151983 * C151965 * C129 -
          ((C68529 * C151912 + C85667 * C152262) * C152205 +
           ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
               C96036) *
              C151983 * C151965 * C130 +
          ((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
           (C85669 * C152262 + C68932 * C151912) * C152205) *
              C151983 * C151965 * C131 -
          (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
           ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
              C151983 * C151965 * C132 +
          ((C67930 * C152262 + (C67927 + C67926) * C151912) * C96036 +
           ((C68944 + C68943) * C152262 +
            (C67859 * C597 + C68937 + C68937 + C67854 * C621 + C67861 * C1160 +
             C68938 + C68938 + C152179 * C1172) *
                C151912) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152372 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152359 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C151965 * C347 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152359 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C152372 -
           (((C71686 + C71687) * C151912 + C89750 * C152262) * C152205 +
            (C85670 * C151912 + C85662 * C152262) * C96036) *
               C152330) *
              C151965 * C348 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C152372 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C152359 +
           ((C68530 * C152262 + (C68528 + C68527) * C151912) * C96036 +
            ((C71687 + C71686) * C152262 +
             (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
              C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C1345 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C1346 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C1345 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152327) *
              C152353 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C1345 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C1346 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C151983 * C1433 -
          ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
           ((C68219 + C68220) * C151912 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152262) *
               C96036) *
              C151983 * C1434 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152262 +
            (C68221 + C68222) * C151912) *
               C96036 +
           ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
              C151983 * C1435 -
          (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
               C152205 +
           ((C70078 + C70079) * C151912 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152262) *
               C96036) *
              C151983 * C1436 +
          (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
             C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                C152262 +
            (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
             C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
             C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                C152262 +
            (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
             C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152372 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152359 +
           (((C85682 + C85681) * C152262 + C85668 * C151912) * C96036 +
            ((C89087 + C89088) * C152262 + C89749 * C151912) * C152205) *
               C152330) *
              C1345 +
          ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
            ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
               C152359 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C152372 -
           (((C89489 + C89490) * C151912 + (C90021 + C90022) * C152262) *
                C152205 +
            (C89484 * C151912 + (C87382 + C87381) * C152262) * C96036) *
               C152330) *
              C1346 +
          ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C152372 -
           (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                C152205 +
            (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
               C152359 +
           (((C87388 + C87387) * C152262 + (C87386 + C87385) * C151912) *
                C96036 +
            ((C67859 * C10283 + C87361 + C87361 + C67854 * C10289 +
              C67861 * C27225 + C87362 + C87362 + C152179 * C27229) *
                 C152262 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C152286 -
           ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
            (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
               C152070) *
              C151965 * C807 +
          (((C85661 * C152262 + C85669 * C151912) * C96036 +
            (C85668 * C152262 + C68530 * C151912) * C152205) *
               C152070 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C152286) *
              C151965 * C808 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C152286 -
           (((C68527 + C68528) * C151912 + C85670 * C152262) * C152205 +
            (C86199 * C151912 + C68529 * C152262) * C96036) *
               C152070) *
              C151965 * C809 +
          (((C68932 * C152262 + (C68944 + C68943) * C151912) * C96036 +
            ((C68528 + C68527) * C152262 +
             (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
              C68492 + C68492 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
            ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
               C67865 + C67865 + C152179 * C377) *
                  C152262 +
              (C67918 + C67919) * C151912) *
                 C96036 +
             ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
                C152286 -
            ((C85662 * C151912 + (C85681 + C85682) * C152262) * C152205 +
             (C85667 * C151912 + (C85680 + C85679) * C152262) * C96036) *
                C152070) *
               C1345 +
           ((((C86597 + C86598) * C152262 + C86590 * C151912) * C96036 +
             ((C87381 + C87382) * C152262 + C89479 * C151912) * C152205) *
                C152070 -
            ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
             ((C68219 + C68220) * C151912 +
              (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
               C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                  C152262) *
                 C96036) *
                C152286) *
               C1346 +
           ((((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
               C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                  C152262 +
              (C68221 + C68222) * C151912) *
                 C96036 +
             ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
                C152286 -
            (((C87385 + C87386) * C151912 + (C87387 + C87388) * C152262) *
                 C152205 +
             (C88044 * C151912 + (C87384 + C87383) * C152262) * C96036) *
                C152070) *
               C152327) *
              C152271 +
          ((((C85661 * C152262 + C85669 * C151912) * C96036 +
             (C85668 * C152262 + C68530 * C151912) * C152205) *
                C152070 -
            ((C68529 * C151912 + C85667 * C152262) * C152205 +
             ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                 C96036) *
                C152286) *
               C1345 +
           ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                 C96036 +
             (C86590 * C152262 + C69275 * C151912) * C152205) *
                C152286 -
            (((C71470 + C71471) * C151912 + C89484 * C152262) * C152205 +
             (C86592 * C151912 + C86591 * C152262) * C96036) *
                C152070) *
               C1346 +
           (((C88043 * C152262 + (C70389 + C70388) * C151912) * C96036 +
             ((C87386 + C87385) * C152262 +
              (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
               C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
             ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                 C96036) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C151983 * C151965 * C129 -
          ((C68529 * C151912 + C85667 * C152262) * C152205 +
           ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
               C96036) *
              C151983 * C151965 * C130 +
          ((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
           (C85669 * C152262 + C68932 * C151912) * C152205) *
              C151983 * C151965 * C131 -
          (((C68943 + C68944) * C151912 + C86199 * C152262) * C152205 +
           ((C67925 + C67924) * C151912 + C67929 * C152262) * C96036) *
              C151983 * C151965 * C132 +
          ((C67930 * C152262 + (C67927 + C67926) * C151912) * C96036 +
           ((C68944 + C68943) * C152262 +
            (C67859 * C597 + C68937 + C68937 + C67854 * C621 + C67861 * C1160 +
             C68938 + C68938 + C152179 * C1172) *
                C151912) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C152371 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C152357 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152327) *
              C347 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C152357 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C152371 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152327) *
              C348 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C152371 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C152357 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C152262 +
             (C67918 + C67919) * C151912) *
                C96036 +
            ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
               C151983 * C1345 -
           ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
            ((C68219 + C68220) * C151912 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C152262) *
                C96036) *
               C151983 * C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C152262 +
             (C68221 + C68222) * C151912) *
                C96036 +
            ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C68220 + C68219) * C152262 + (C68218 + C68217) * C151912) *
                C96036 +
            (C86590 * C152262 + C69275 * C151912) * C152205) *
               C151983 * C1346 -
           ((C68529 * C151912 + C85667 * C152262) * C152205 +
            ((C67921 + C67920) * C151912 + (C67919 + C67918) * C152262) *
                C96036) *
               C151983 * C1345 -
           (((C70388 + C70389) * C151912 + C88044 * C152262) * C152205 +
            ((C68224 + C68223) * C151912 + (C68222 + C68221) * C152262) *
                C96036) *
               C151983 * C152327) *
              C152353 +
          (((C67928 * C152262 + (C67923 + C67922) * C151912) * C96036 +
            (C85669 * C152262 + C68932 * C151912) * C152205) *
               C151983 * C1345 -
           (((C69273 + C69274) * C151912 + C86592 * C152262) * C152205 +
            ((C68226 + C68225) * C151912 + C68229 * C152262) * C96036) *
               C151983 * C1346 +
           ((C68230 * C152262 + (C68228 + C68227) * C151912) * C96036 +
            ((C70389 + C70388) * C152262 +
             (C67859 * C1621 + C70378 + C70378 + C67854 * C1645 +
              C67861 * C2166 + C70379 + C70379 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C152262 +
            (C67918 + C67919) * C151912) *
               C96036 +
           ((C85679 + C85680) * C152262 + C85661 * C151912) * C152205) *
              C151983 * C1433 -
          ((C86591 * C151912 + (C86598 + C86597) * C152262) * C152205 +
           ((C68219 + C68220) * C151912 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C152262) *
               C96036) *
              C151983 * C1434 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C152262 +
            (C68221 + C68222) * C151912) *
               C96036 +
           ((C87383 + C87384) * C152262 + C88043 * C151912) * C152205) *
              C151983 * C1435 -
          (((C87655 + C87656) * C151912 + (C88316 + C88315) * C152262) *
               C152205 +
           ((C70078 + C70079) * C151912 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C152262) *
               C96036) *
              C151983 * C1436 +
          (((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 +
             C67861 * C7979 + C69623 + C69623 + C152179 * C7985) *
                C152262 +
            (C67859 * C1444 + C69624 + C69624 + C67854 * C1460 +
             C67861 * C7980 + C69625 + C69625 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
             C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
                C152262 +
            (C67859 * C8968 + C87053 + C87053 + C67854 * C8974 +
             C67861 * C25924 + C87054 + C87054 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[100] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C152024 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152031 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C151983 * C3719) *
                       C151942 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152031 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152024 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C3719) *
                       C151951 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C152024 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152031 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C3719) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[101] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152286 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C152024 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152286) *
                        C152031 +
                    (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                       C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                       C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                          C151907 * C96036 +
                      (C135879 + C135880 + C135881) * C151907 * C152205) *
                         C152286 -
                     ((C135882 + C135883 + C135884) * C151907 * C152205 +
                      (C135881 + C135880 + C135879) * C151907 * C96036) *
                         C152070) *
                        C3719) *
                       C3375 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152286) *
                        C152024 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152286 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152031 +
                    (((C78996 + C78995 + C78994) * C151907 * C96036 +
                      (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                       C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                       C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                          C151907 * C152205) *
                         C152070 -
                     ((C78994 + C78995 + C78996) * C151907 * C152205 +
                      (C76824 + C76823 + C76822) * C151907 * C96036) *
                         C152286) *
                        C3719) *
                       C151948)) /
                 (p * q * std::sqrt(p + q));
    d2ee[102] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C152378 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152374 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C151983 * C152362 -
                    ((C136580 + C136579 + C136578) * C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C151983 * C152337) *
                       C3375 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152374 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152378 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152362 +
                    ((C78688 + C78687 + C78686) * C151907 * C96036 +
                     (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                      C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                      C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                         C151907 * C152205) *
                        C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C3235 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152028) *
                       C152377 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C3235) *
                       C152370 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C3235 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152028) *
                       C152355 +
                   (((C77344 + C77343 + C77342) * C151907 * C96036 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C151983 * C3235) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152372 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152359 +
                     ((C134582 + C134581 + C134580) * C151907 * C96036 +
                      (C137166 + C137167 + C137168) * C151907 * C152205) *
                         C152330) *
                        C3235 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152359 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152372 -
                     ((C137865 + C137866 + C137867) * C151907 * C152205 +
                      (C135878 + C135877 + C135876) * C151907 * C96036) *
                         C152330) *
                        C152028) *
                       C3375 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152359 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152372 -
                     ((C80284 + C80285 + C80286) * C151907 * C152205 +
                      (C77126 + C77125 + C77124) * C151907 * C96036) *
                         C152330) *
                        C3235 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152372 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152359 +
                     ((C80074 + C80073 + C80072) * C151907 * C96036 +
                      (C76444 * C3090 + C80484 + C80484 + C152366 * C3098 +
                       C76446 * C10284 + C80485 + C80485 + C152346 * C10290 +
                       C76448 * C27226 + C80486 + C80486 + C76441 * C27230) *
                          C151907 * C152205) *
                         C152330) *
                        C152028) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[103] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152286 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C3235 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152286) *
                        C152028) *
                       C151942 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152286) *
                        C3235 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152286 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152028) *
                       C151951 +
                   ((((C76522 + C76521 + C76520) * C151907 * C96036 +
                      (C77127 + C77128 + C77129) * C151907 * C152205) *
                         C152286 -
                     ((C77130 + C77131 + C77132) * C151907 * C152205 +
                      (C77129 + C77128 + C77127) * C151907 * C96036) *
                         C152070) *
                        C3235 +
                    (((C77888 + C77887 + C77886) * C151907 * C96036 +
                      (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                       C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                       C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                          C151907 * C152205) *
                         C152070 -
                     ((C77886 + C77887 + C77888) * C151907 * C152205 +
                      (C76827 + C76826 + C76825) * C151907 * C96036) *
                         C152286) *
                        C152028) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[104] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C3235 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152028) *
                       C152377 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C3235) *
                       C152370 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C3235 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152028) *
                       C152355 +
                   (((C77344 + C77343 + C77342) * C151907 * C96036 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C151983 * C3235) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C152378 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152374 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C151983 * C152362 -
                    ((C136580 + C136579 + C136578) * C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C151983 * C152337) *
                       C3375 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152374 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152378 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152362 +
                    ((C78688 + C78687 + C78686) * C151907 * C96036 +
                     (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                      C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                      C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                         C151907 * C152205) *
                        C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[105] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C4241 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C152024 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C4241) *
                        C152031 +
                    (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                       C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                       C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                          C151907 * C96036 +
                      (C135879 + C135880 + C135881) * C151907 * C152205) *
                         C4241 -
                     ((C135882 + C135883 + C135884) * C151907 * C152205 +
                      (C135881 + C135880 + C135879) * C151907 * C96036) *
                         C152070) *
                        C3719) *
                       C152271 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C4241) *
                        C152024 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C4241 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152031 +
                    (((C78996 + C78995 + C78994) * C151907 * C96036 +
                      (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                       C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                       C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                          C151907 * C152205) *
                         C152070 -
                     ((C78994 + C78995 + C78996) * C151907 * C152205 +
                      (C76824 + C76823 + C76822) * C151907 * C96036) *
                         C4241) *
                        C3719) *
                       C151948)) /
                 (p * q * std::sqrt(p + q));
    d2ee[106] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152066 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152073 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C137166 + C137167 + C137168) * C151907 * C152205) *
                        C4913) *
                       C152024 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152073 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C152066 -
                    ((C137865 + C137866 + C137867) * C151907 * C152205 +
                     (C135878 + C135877 + C135876) * C151907 * C96036) *
                        C4913) *
                       C152031 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C152066 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C152073 +
                    ((C135884 + C135883 + C135882) * C151907 * C96036 +
                     (C76444 * C10283 + C135855 + C135855 + C152366 * C10289 +
                      C76446 * C27225 + C135856 + C135856 + C152346 * C27229 +
                      C76448 * C34310 + C135857 + C135857 + C76441 * C34312) *
                         C151907 * C152205) *
                        C4913) *
                       C3719) *
                  C151937) /
                 (p * q * std::sqrt(p + q));
    d2ee[107] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C4241 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C152378 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152070 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C4241) *
                       C152374 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C4241 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C152070) *
                       C152362 +
                   (((C136578 + C136579 + C136580) * C151907 * C96036 +
                     (C76444 * C8218 + C136569 + C136569 + C152366 * C8224 +
                      C76446 * C25185 + C136570 + C136570 + C152346 * C25189 +
                      C76448 * C32979 + C136571 + C136571 + C76441 * C32981) *
                         C151907 * C152205) *
                        C152070 -
                    ((C136580 + C136579 + C136578) * C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C4241) *
                       C152337) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C4241 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C3235 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C4241) *
                        C152028) *
                       C152368 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C4241) *
                        C3235 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C4241 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152028) *
                       C152353 +
                   ((((C76522 + C76521 + C76520) * C151907 * C96036 +
                      (C77127 + C77128 + C77129) * C151907 * C152205) *
                         C4241 -
                     ((C77130 + C77131 + C77132) * C151907 * C152205 +
                      (C77129 + C77128 + C77127) * C151907 * C96036) *
                         C152070) *
                        C3235 +
                    (((C77888 + C77887 + C77886) * C151907 * C96036 +
                      (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                       C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                       C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                          C151907 * C152205) *
                         C152070 -
                     ((C77886 + C77887 + C77888) * C151907 * C152205 +
                      (C76827 + C76826 + C76825) * C151907 * C96036) *
                         C4241) *
                        C152028) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152379 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152376 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C137166 + C137167 + C137168) * C151907 * C152205) *
                        C152365 -
                    ((C137169 + C137170 + C137171) * C151907 * C152205 +
                     (C137168 + C137167 + C137166) * C151907 * C96036) *
                        C152343) *
                       C3235 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152376 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C152379 -
                    ((C137865 + C137866 + C137867) * C151907 * C152205 +
                     (C135878 + C135877 + C135876) * C151907 * C96036) *
                        C152365 +
                    ((C137867 + C137866 + C137865) * C151907 * C96036 +
                     (C76444 * C9540 + C137856 + C137856 + C152366 * C9546 +
                      C76446 * C26493 + C137857 + C137857 + C152346 * C26497 +
                      C76448 * C33837 + C137858 + C137858 + C76441 * C33839) *
                         C151907 * C152205) *
                        C152343) *
                       C152028) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[108] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152066 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152073 +
                     ((C134582 + C134581 + C134580) * C151907 * C96036 +
                      (C137166 + C137167 + C137168) * C151907 * C152205) *
                         C4913) *
                        C3235 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152073 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152066 -
                     ((C137865 + C137866 + C137867) * C151907 * C152205 +
                      (C135878 + C135877 + C135876) * C151907 * C96036) *
                         C4913) *
                        C152028) *
                       C152271 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152073 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152066 -
                     ((C80284 + C80285 + C80286) * C151907 * C152205 +
                      (C77126 + C77125 + C77124) * C151907 * C96036) *
                         C4913) *
                        C3235 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152066 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152073 +
                     ((C80074 + C80073 + C80072) * C151907 * C96036 +
                      (C76444 * C3090 + C80484 + C80484 + C152366 * C3098 +
                       C76446 * C10284 + C80485 + C80485 + C152346 * C10290 +
                       C76448 * C27226 + C80486 + C80486 + C76441 * C27230) *
                          C151907 * C152205) *
                         C4913) *
                        C152028) *
                       C151948)) /
                 (p * q * std::sqrt(p + q));
    d2ee[109] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C4241 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C3235 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C4241) *
                        C152028) *
                       C152368 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C4241) *
                        C3235 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C4241 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152028) *
                       C152353 +
                   ((((C76522 + C76521 + C76520) * C151907 * C96036 +
                      (C77127 + C77128 + C77129) * C151907 * C152205) *
                         C4241 -
                     ((C77130 + C77131 + C77132) * C151907 * C152205 +
                      (C77129 + C77128 + C77127) * C151907 * C96036) *
                         C152070) *
                        C3235 +
                    (((C77888 + C77887 + C77886) * C151907 * C96036 +
                      (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                       C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                       C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                          C151907 * C152205) *
                         C152070 -
                     ((C77886 + C77887 + C77888) * C151907 * C152205 +
                      (C76827 + C76826 + C76825) * C151907 * C96036) *
                         C4241) *
                        C152028) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C4241 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C152378 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152070 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C4241) *
                       C152374 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C4241 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C152070) *
                       C152362 +
                   (((C136578 + C136579 + C136580) * C151907 * C96036 +
                     (C76444 * C8218 + C136569 + C136569 + C152366 * C8224 +
                      C76446 * C25185 + C136570 + C136570 + C152346 * C25189 +
                      C76448 * C32979 + C136571 + C136571 + C76441 * C32981) *
                         C151907 * C152205) *
                        C152070 -
                    ((C136580 + C136579 + C136578) * C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C4241) *
                       C152337) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[110] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C1795 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C1796 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C151983 * C1797 -
                    ((C76448 * C25923 + C79193 + C79193 + C76441 * C25927 +
                      C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                      C76444 * C2163 + C79191 + C79191 + C152366 * C2171) *
                         C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C151983 * C152337) *
                       C152271 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C1796 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C1795 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C1797 +
                    ((C78688 + C78687 + C78686) * C151907 * C96036 +
                     (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                      C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                      C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                         C151907 * C152205) *
                        C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C152285 -
                    ((C76448 * C2163 + C77849 + C77849 + C76441 * C2171 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76444 * C1155 + C77847 + C77847 + C152366 * C1167) *
                         C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152028) *
                       C807 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152285) *
                       C808 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C152285 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152028) *
                       C809 +
                   (((C77344 + C77343 + C77342) * C151907 * C96036 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C151983 * C152285) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C2325 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C2326 +
                     ((C134582 + C134581 + C134580) * C151907 * C96036 +
                      (C137166 + C137167 + C137168) * C151907 * C152205) *
                         C152330) *
                        C152285 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C2326 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C2325 -
                     ((C76448 * C27225 + C80483 + C80483 + C76441 * C27229 +
                       C76446 * C10283 + C80482 + C80482 + C152346 * C10289 +
                       C76444 * C3089 + C80481 + C80481 + C152366 * C3097) *
                          C151907 * C152205 +
                      (C135878 + C135877 + C135876) * C151907 * C96036) *
                         C152330) *
                        C152028) *
                       C152271 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C2326 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C2325 -
                     ((C80284 + C80285 + C80286) * C151907 * C152205 +
                      (C77126 + C77125 + C77124) * C151907 * C96036) *
                         C152330) *
                        C152285 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C2325 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C2326 +
                     ((C80074 + C80073 + C80072) * C151907 * C96036 +
                      (C76444 * C3090 + C80484 + C80484 + C152366 * C3098 +
                       C76446 * C10284 + C80485 + C80485 + C152346 * C10290 +
                       C76448 * C27226 + C80486 + C80486 + C76441 * C27230) *
                          C151907 * C152205) *
                         C152330) *
                        C152028) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[111] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152286 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C1795 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152070 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C152286) *
                       C1796 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C152286 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C152070) *
                       C1797 +
                   (((C136578 + C136579 + C136580) * C151907 * C96036 +
                     (C76444 * C8218 + C136569 + C136569 + C152366 * C8224 +
                      C76446 * C25185 + C136570 + C136570 + C152346 * C25189 +
                      C76448 * C32979 + C136571 + C136571 + C76441 * C32981) *
                         C151907 * C152205) *
                        C152070 -
                    ((C136580 + C136579 + C136578) * C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C152286) *
                       C152337) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152286 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C152285 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C76444 * C1620 + C78464 + C78464 + C152366 * C1644 +
                       C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                       C76448 * C8218 + C78462 + C78462 + C76441 * C8224) *
                          C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152286) *
                        C152028) *
                       C347 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152286) *
                        C152285 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152286 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152028) *
                       C348 +
                   ((((C76522 + C76521 + C76520) * C151907 * C96036 +
                      (C77127 + C77128 + C77129) * C151907 * C152205) *
                         C152286 -
                     ((C77130 + C77131 + C77132) * C151907 * C152205 +
                      (C77129 + C77128 + C77127) * C151907 * C96036) *
                         C152070) *
                        C152285 +
                    (((C77888 + C77887 + C77886) * C151907 * C96036 +
                      (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                       C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                       C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                          C151907 * C152205) *
                         C152070 -
                     ((C77886 + C77887 + C77888) * C151907 * C152205 +
                      (C76827 + C76826 + C76825) * C151907 * C96036) *
                         C152286) *
                        C152028) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C2936 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C2937 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C137166 + C137167 + C137168) * C151907 * C152205) *
                        C2938 -
                    ((C137169 + C137170 + C137171) * C151907 * C152205 +
                     (C137168 + C137167 + C137166) * C151907 * C96036) *
                        C152343) *
                       C152285 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C2937 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C2936 -
                    ((C137865 + C137866 + C137867) * C151907 * C152205 +
                     (C135878 + C135877 + C135876) * C151907 * C96036) *
                        C2938 +
                    ((C137867 + C137866 + C137865) * C151907 * C96036 +
                     (C76444 * C9540 + C137856 + C137856 + C152366 * C9546 +
                      C76446 * C26493 + C137857 + C137857 + C152346 * C26497 +
                      C76448 * C33837 + C137858 + C137858 + C76441 * C33839) *
                         C151907 * C152205) *
                        C152343) *
                       C152028) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[112] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                         C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                         C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                            C151907 * C96036 +
                        (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                         C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                         C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                            C151907 * C152205) *
                           C151983 * C151965 * C129 -
                       ((C77121 + C77122 + C77123) * C151907 * C152205 +
                        (C76519 + C76518 + C76517) * C151907 * C96036) *
                           C151983 * C151965 * C130 +
                       ((C76522 + C76521 + C76520) * C151907 * C96036 +
                        (C77127 + C77128 + C77129) * C151907 * C152205) *
                           C151983 * C151965 * C131 -
                       ((C77554 + C77555 + C77556) * C151907 * C152205 +
                        (C76525 + C76524 + C76523) * C151907 * C96036) *
                           C151983 * C151965 * C132 +
                       ((C76528 + C76527 + C76526) * C151907 * C96036 +
                        (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                         C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                         C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                            C151907 * C152205) *
                           C151983 * C151965 * C133) +
                  std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                          C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                          C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                             C151907 * C96036 +
                         (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                          C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                          C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                             C151907 * C152205) *
                            C151983 * C152371 -
                        ((C76448 * C2163 + C77849 + C77849 + C76441 * C2171 +
                          C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                          C76444 * C1155 + C77847 + C77847 + C152366 * C1167) *
                             C151907 * C152205 +
                         (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                          C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                          C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                             C151907 * C96036) *
                            C151983 * C152357 +
                        ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                          C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                          C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                             C151907 * C96036 +
                         (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                          C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                          C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                             C151907 * C152205) *
                            C151983 * C152327) *
                           C347 +
                       (((C76821 + C76820 + C76819) * C151907 * C96036 +
                         (C77883 + C77884 + C77885) * C151907 * C152205) *
                            C151983 * C152357 -
                        ((C77121 + C77122 + C77123) * C151907 * C152205 +
                         (C76519 + C76518 + C76517) * C151907 * C96036) *
                            C151983 * C152371 -
                        ((C78994 + C78995 + C78996) * C151907 * C152205 +
                         (C76824 + C76823 + C76822) * C151907 * C96036) *
                            C151983 * C152327) *
                           C348 +
                       (((C76522 + C76521 + C76520) * C151907 * C96036 +
                         (C77127 + C77128 + C77129) * C151907 * C152205) *
                            C151983 * C152371 -
                        ((C77886 + C77887 + C77888) * C151907 * C152205 +
                         (C76827 + C76826 + C76825) * C151907 * C96036) *
                            C151983 * C152357 +
                        ((C76830 + C76829 + C76828) * C151907 * C96036 +
                         (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                          C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                          C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                             C151907 * C152205) *
                            C151983 * C152327) *
                           C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152372 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152359 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C347 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152359 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C152372 -
                    ((C80284 + C80285 + C80286) * C151907 * C152205 +
                     (C77126 + C77125 + C77124) * C151907 * C96036) *
                        C152330) *
                       C151965 * C348 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C152372 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C152359 +
                    ((C77132 + C77131 + C77130) * C151907 * C96036 +
                     (C76444 * C2562 + C80275 + C80275 + C152366 * C2578 +
                      C76446 * C3091 + C80276 + C80276 + C152346 * C3099 +
                      C76448 * C10285 + C80277 + C80277 + C76441 * C10291) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152368 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C1346 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C1345 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152327) *
                       C152353 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C134577 + C134578 + C134579) * C151907 * C152205) *
                       C151983 * C1433 -
                   ((C135275 + C135274 + C135273) * C151907 * C152205 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C151907 * C96036) *
                       C151983 * C1434 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C151907 * C96036 +
                    (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                        C151907 * C152205) *
                       C151983 * C1435 -
                   ((C76448 * C25923 + C79193 + C79193 + C76441 * C25927 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76444 * C2163 + C79191 + C79191 + C152366 * C2171) *
                        C151907 * C152205 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C151907 * C96036) *
                       C151983 * C1436 +
                   ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                     C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                     C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                        C151907 * C96036 +
                    (C76444 * C8967 + C135616 + C135616 + C152366 * C8973 +
                     C76446 * C25923 + C135617 + C135617 + C152346 * C25927 +
                     C76448 * C33456 + C135618 + C135618 + C76441 * C33458) *
                        C151907 * C152205) *
                       C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152372 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152359 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C1345 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152359 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C152372 -
                    ((C76448 * C27225 + C80483 + C80483 + C76441 * C27229 +
                      C76446 * C10283 + C80482 + C80482 + C152346 * C10289 +
                      C76444 * C3089 + C80481 + C80481 + C152366 * C3097) *
                         C151907 * C152205 +
                     (C135878 + C135877 + C135876) * C151907 * C96036) *
                        C152330) *
                       C1346 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C152372 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C152359 +
                    ((C135884 + C135883 + C135882) * C151907 * C96036 +
                     (C76444 * C10283 + C135855 + C135855 + C152366 * C10289 +
                      C76446 * C27225 + C135856 + C135856 + C152346 * C27229 +
                      C76448 * C34310 + C135857 + C135857 + C76441 * C34312) *
                         C151907 * C152205) *
                        C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C2325 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C2326 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C152368 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C2326 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C2325 -
                    ((C80284 + C80285 + C80286) * C151907 * C152205 +
                     (C77126 + C77125 + C77124) * C151907 * C96036) *
                        C152330) *
                       C151965 * C152353 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C2325 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C2326 +
                    ((C77132 + C77131 + C77130) * C151907 * C96036 +
                     (C76444 * C2562 + C80275 + C80275 + C152366 * C2578 +
                      C76446 * C3091 + C80276 + C80276 + C152346 * C3099 +
                      C76448 * C10285 + C80277 + C80277 + C76441 * C10291) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C2325 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C2326 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C152371 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C2326 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C2325 -
                    ((C76448 * C27225 + C80483 + C80483 + C76441 * C27229 +
                      C76446 * C10283 + C80482 + C80482 + C152346 * C10289 +
                      C76444 * C3089 + C80481 + C80481 + C152366 * C3097) *
                         C151907 * C152205 +
                     (C135878 + C135877 + C135876) * C151907 * C96036) *
                        C152330) *
                       C152357 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C2325 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C2326 +
                    ((C135884 + C135883 + C135882) * C151907 * C96036 +
                     (C76444 * C10283 + C135855 + C135855 + C152366 * C10289 +
                      C76446 * C27225 + C135856 + C135856 + C152346 * C27229 +
                      C76448 * C34310 + C135857 + C135857 + C76441 * C34312) *
                         C151907 * C152205) *
                        C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C134577 + C134578 + C134579) * C151907 * C152205) *
                       C2556 -
                   ((C134580 + C134581 + C134582) * C151907 * C152205 +
                    (C134579 + C134578 + C134577) * C151907 * C96036) *
                       C2557 +
                   ((C134582 + C134581 + C134580) * C151907 * C96036 +
                    (C137166 + C137167 + C137168) * C151907 * C152205) *
                       C2558 -
                   ((C137169 + C137170 + C137171) * C151907 * C152205 +
                    (C137168 + C137167 + C137166) * C151907 * C96036) *
                       C2559 +
                   ((C137171 + C137170 + C137169) * C151907 * C96036 +
                    (C76444 * C17867 + C137151 + C137151 + C152366 * C17873 +
                     C76446 * C40425 + C137152 + C137152 + C152346 * C40429 +
                     C76448 * C40426 + C137153 + C137153 + C76441 * C40430) *
                        C151907 * C152205) *
                       C2560) *
                  C151965 * C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[113] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152286 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C1345 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152286) *
                        C1346 +
                    (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                       C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                       C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                          C151907 * C96036 +
                      (C135879 + C135880 + C135881) * C151907 * C152205) *
                         C152286 -
                     ((C135882 + C135883 + C135884) * C151907 * C152205 +
                      (C135881 + C135880 + C135879) * C151907 * C96036) *
                         C152070) *
                        C152327) *
                       C152271 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152286) *
                        C1345 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152286 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C1346 +
                    (((C78996 + C78995 + C78994) * C151907 * C96036 +
                      (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                       C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                       C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                          C151907 * C152205) *
                         C152070 -
                     ((C78994 + C78995 + C78996) * C151907 * C152205 +
                      (C76824 + C76823 + C76822) * C151907 * C96036) *
                         C152286) *
                        C152327) *
                       C151948)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152286 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C151965 * C807 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152070 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C152286) *
                       C151965 * C808 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C152286 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C152070) *
                       C151965 * C809 +
                   (((C77556 + C77555 + C77554) * C151907 * C96036 +
                     (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                      C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                      C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                         C151907 * C152205) *
                        C152070 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C152286) *
                       C151965 * C152331)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C2936 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C2937 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C137166 + C137167 + C137168) * C151907 * C152205) *
                        C2938 -
                    ((C137169 + C137170 + C137171) * C151907 * C152205 +
                     (C137168 + C137167 + C137166) * C151907 * C96036) *
                        C152343) *
                       C151965 * C152271 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C2937 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C2936 -
                    ((C80284 + C80285 + C80286) * C151907 * C152205 +
                     (C77126 + C77125 + C77124) * C151907 * C96036) *
                        C2938 +
                    ((C80286 + C80285 + C80284) * C151907 * C96036 +
                     (C76444 * C2566 + C79764 + C79764 + C152366 * C2582 +
                      C76446 * C9541 + C79765 + C79765 + C152346 * C9547 +
                      C76448 * C26494 + C79766 + C79766 + C76441 * C26498) *
                         C151907 * C152205) *
                        C152343) *
                       C151965 * C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[114] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                         C151907 * C152205) *
                        C151983 * C152371 -
                    ((C76448 * C2163 + C77849 + C77849 + C76441 * C2171 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76444 * C1155 + C77847 + C77847 + C152366 * C1167) *
                         C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152357 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C347 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152357 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152371 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152327) *
                       C348 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C152371 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152357 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                        C151907 * C152205) *
                       C151983 * C151965 * C129 -
                   ((C77121 + C77122 + C77123) * C151907 * C152205 +
                    (C76519 + C76518 + C76517) * C151907 * C96036) *
                       C151983 * C151965 * C130 +
                   ((C76522 + C76521 + C76520) * C151907 * C96036 +
                    (C77127 + C77128 + C77129) * C151907 * C152205) *
                       C151983 * C151965 * C131 -
                   ((C77554 + C77555 + C77556) * C151907 * C152205 +
                    (C76525 + C76524 + C76523) * C151907 * C96036) *
                       C151983 * C151965 * C132 +
                   ((C76528 + C76527 + C76526) * C151907 * C96036 +
                    (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                     C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                     C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                        C151907 * C152205) *
                       C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152368 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C1346 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C1345 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152327) *
                       C152353 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C134577 + C134578 + C134579) * C151907 * C152205) *
                       C151983 * C1433 -
                   ((C135275 + C135274 + C135273) * C151907 * C152205 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C151907 * C96036) *
                       C151983 * C1434 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C151907 * C96036 +
                    (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                        C151907 * C152205) *
                       C151983 * C1435 -
                   ((C76448 * C25923 + C79193 + C79193 + C76441 * C25927 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76444 * C2163 + C79191 + C79191 + C152366 * C2171) *
                        C151907 * C152205 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C151907 * C96036) *
                       C151983 * C1436 +
                   ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                     C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                     C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                        C151907 * C96036 +
                    (C76444 * C8967 + C135616 + C135616 + C152366 * C8973 +
                     C76446 * C25923 + C135617 + C135617 + C152346 * C25927 +
                     C76448 * C33456 + C135618 + C135618 + C76441 * C33458) *
                        C151907 * C152205) *
                       C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C2325 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C2326 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C152368 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C2326 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C2325 -
                    ((C80284 + C80285 + C80286) * C151907 * C152205 +
                     (C77126 + C77125 + C77124) * C151907 * C96036) *
                        C152330) *
                       C151965 * C152353 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C2325 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C2326 +
                    ((C77132 + C77131 + C77130) * C151907 * C96036 +
                     (C76444 * C2562 + C80275 + C80275 + C152366 * C2578 +
                      C76446 * C3091 + C80276 + C80276 + C152346 * C3099 +
                      C76448 * C10285 + C80277 + C80277 + C76441 * C10291) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C2325 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C2326 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C152371 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C2326 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C2325 -
                    ((C76448 * C27225 + C80483 + C80483 + C76441 * C27229 +
                      C76446 * C10283 + C80482 + C80482 + C152346 * C10289 +
                      C76444 * C3089 + C80481 + C80481 + C152366 * C3097) *
                         C151907 * C152205 +
                     (C135878 + C135877 + C135876) * C151907 * C96036) *
                        C152330) *
                       C152357 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C2325 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C2326 +
                    ((C135884 + C135883 + C135882) * C151907 * C96036 +
                     (C76444 * C10283 + C135855 + C135855 + C152366 * C10289 +
                      C76446 * C27225 + C135856 + C135856 + C152346 * C27229 +
                      C76448 * C34310 + C135857 + C135857 + C76441 * C34312) *
                         C151907 * C152205) *
                        C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[115] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C4241 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C152285 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C4241) *
                        C152028) *
                       C151942 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C4241) *
                        C152285 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C4241 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152028) *
                       C151951 +
                   ((((C76522 + C76521 + C76520) * C151907 * C96036 +
                      (C77127 + C77128 + C77129) * C151907 * C152205) *
                         C4241 -
                     ((C77130 + C77131 + C77132) * C151907 * C152205 +
                      (C77129 + C77128 + C77127) * C151907 * C96036) *
                         C152070) *
                        C152285 +
                    (((C77888 + C77887 + C77886) * C151907 * C96036 +
                      (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                       C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                       C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                          C151907 * C152205) *
                         C152070 -
                     ((C77886 + C77887 + C77888) * C151907 * C152205 +
                      (C76827 + C76826 + C76825) * C151907 * C96036) *
                         C4241) *
                        C152028) *
                       C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[116] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152066 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152073 +
                     ((C134582 + C134581 + C134580) * C151907 * C96036 +
                      (C137166 + C137167 + C137168) * C151907 * C152205) *
                         C4913) *
                        C152285 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152073 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152066 -
                     ((C137865 + C137866 + C137867) * C151907 * C152205 +
                      (C135878 + C135877 + C135876) * C151907 * C96036) *
                         C4913) *
                        C152028) *
                       C3375 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152073 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152066 -
                     ((C80284 + C80285 + C80286) * C151907 * C152205 +
                      (C77126 + C77125 + C77124) * C151907 * C96036) *
                         C4913) *
                        C152285 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152066 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152073 +
                     ((C80074 + C80073 + C80072) * C151907 * C96036 +
                      (C76444 * C3090 + C80484 + C80484 + C152366 * C3098 +
                       C76446 * C10284 + C80485 + C80485 + C152346 * C10290 +
                       C76448 * C27226 + C80486 + C80486 + C76441 * C27230) *
                          C151907 * C152205) *
                         C4913) *
                        C152028) *
                       C151948)) /
                 (p * q * std::sqrt(p + q));
    d2ee[117] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C4241 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C152371 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C4241) *
                        C152357 +
                    (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                       C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                       C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                          C151907 * C96036 +
                      (C135879 + C135880 + C135881) * C151907 * C152205) *
                         C4241 -
                     ((C135882 + C135883 + C135884) * C151907 * C152205 +
                      (C135881 + C135880 + C135879) * C151907 * C96036) *
                         C152070) *
                        C152327) *
                       C3375 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C4241) *
                        C152371 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C4241 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152357 +
                    (((C78996 + C78995 + C78994) * C151907 * C96036 +
                      (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                       C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                       C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                          C151907 * C152205) *
                         C152070 -
                     ((C78994 + C78995 + C78996) * C151907 * C152205 +
                      (C76824 + C76823 + C76822) * C151907 * C96036) *
                         C4241) *
                        C152327) *
                       C151948)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C4241 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C151965 * C152377 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152070 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C4241) *
                       C151965 * C152370 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C4241 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C152070) *
                       C151965 * C152355 +
                   (((C77556 + C77555 + C77554) * C151907 * C96036 +
                     (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                      C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                      C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                         C151907 * C152205) *
                        C152070 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C4241) *
                       C151965 * C152331)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152379 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152376 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C137166 + C137167 + C137168) * C151907 * C152205) *
                        C152365 -
                    ((C137169 + C137170 + C137171) * C151907 * C152205 +
                     (C137168 + C137167 + C137166) * C151907 * C96036) *
                        C152343) *
                       C151965 * C3375 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152376 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C152379 -
                    ((C80284 + C80285 + C80286) * C151907 * C152205 +
                     (C77126 + C77125 + C77124) * C151907 * C96036) *
                        C152365 +
                    ((C80286 + C80285 + C80284) * C151907 * C96036 +
                     (C76444 * C2566 + C79764 + C79764 + C152366 * C2582 +
                      C76446 * C9541 + C79765 + C79765 + C152346 * C9547 +
                      C76448 * C26494 + C79766 + C79766 + C76441 * C26498) *
                         C151907 * C152205) *
                        C152343) *
                       C151965 * C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[118] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152066 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152073 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C137166 + C137167 + C137168) * C151907 * C152205) *
                        C4913) *
                       C151965 * C151942 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152073 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C152066 -
                    ((C80284 + C80285 + C80286) * C151907 * C152205 +
                     (C77126 + C77125 + C77124) * C151907 * C96036) *
                        C4913) *
                       C151965 * C151951 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C152066 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C152073 +
                    ((C77132 + C77131 + C77130) * C151907 * C96036 +
                     (C76444 * C2562 + C80275 + C80275 + C152366 * C2578 +
                      C76446 * C3091 + C80276 + C80276 + C152346 * C3099 +
                      C76448 * C10285 + C80277 + C80277 + C76441 * C10291) *
                         C151907 * C152205) *
                        C4913) *
                       C151965 * C3722)) /
                 (p * q * std::sqrt(p + q));
    d2ee[119] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C4241 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C151965 * C152377 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152070 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C4241) *
                       C151965 * C152370 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C4241 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C152070) *
                       C151965 * C152355 +
                   (((C77556 + C77555 + C77554) * C151907 * C96036 +
                     (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                      C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                      C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                         C151907 * C152205) *
                        C152070 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C4241) *
                       C151965 * C152331)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C4241 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C152371 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C4241) *
                        C152357 +
                    (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                       C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                       C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                          C151907 * C96036 +
                      (C135879 + C135880 + C135881) * C151907 * C152205) *
                         C4241 -
                     ((C135882 + C135883 + C135884) * C151907 * C152205 +
                      (C135881 + C135880 + C135879) * C151907 * C96036) *
                         C152070) *
                        C152327) *
                       C3375 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C4241) *
                        C152371 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C4241 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152357 +
                    (((C78996 + C78995 + C78994) * C151907 * C96036 +
                      (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                       C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                       C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                          C151907 * C152205) *
                         C152070 -
                     ((C78994 + C78995 + C78996) * C151907 * C152205 +
                      (C76824 + C76823 + C76822) * C151907 * C96036) *
                         C4241) *
                        C152327) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[120] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C152285 -
                    ((C76448 * C2163 + C77849 + C77849 + C76441 * C2171 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76444 * C1155 + C77847 + C77847 + C152366 * C1167) *
                         C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152028) *
                       C807 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152285) *
                       C808 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C152285 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152028) *
                       C809 +
                   (((C77344 + C77343 + C77342) * C151907 * C96036 +
                     (C76444 * C1158 + C77868 + C77868 + C152366 * C1170 +
                      C76446 * C1621 + C77869 + C77869 + C152346 * C1645 +
                      C76448 * C2166 + C77870 + C77870 + C76441 * C2174) *
                         C151907 * C152205) *
                        C151983 * C152028 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C151983 * C152285) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C1795 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C1796 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C151983 * C1797 -
                    ((C76448 * C25923 + C79193 + C79193 + C76441 * C25927 +
                      C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                      C76444 * C2163 + C79191 + C79191 + C152366 * C2171) *
                         C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C151983 * C152337) *
                       C152271 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C1796 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C1795 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C1797 +
                    ((C78688 + C78687 + C78686) * C151907 * C96036 +
                     (C76444 * C2164 + C79194 + C79194 + C152366 * C2172 +
                      C76446 * C8968 + C79195 + C79195 + C152346 * C8974 +
                      C76448 * C25924 + C79196 + C79196 + C76441 * C25928) *
                         C151907 * C152205) *
                        C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[121] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152286 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C152285 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C76444 * C1620 + C78464 + C78464 + C152366 * C1644 +
                       C76446 * C1625 + C78463 + C78463 + C152346 * C1649 +
                       C76448 * C8218 + C78462 + C78462 + C76441 * C8224) *
                          C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152286) *
                        C152028) *
                       C347 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152286) *
                        C152285 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152286 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C152028) *
                       C348 +
                   ((((C76522 + C76521 + C76520) * C151907 * C96036 +
                      (C77127 + C77128 + C77129) * C151907 * C152205) *
                         C152286 -
                     ((C77130 + C77131 + C77132) * C151907 * C152205 +
                      (C77129 + C77128 + C77127) * C151907 * C96036) *
                         C152070) *
                        C152285 +
                    (((C77888 + C77887 + C77886) * C151907 * C96036 +
                      (C76444 * C1618 + C80063 + C80063 + C152366 * C1642 +
                       C76446 * C1627 + C80064 + C80064 + C152346 * C1651 +
                       C76448 * C8220 + C80065 + C80065 + C76441 * C8226) *
                          C151907 * C152205) *
                         C152070 -
                     ((C77886 + C77887 + C77888) * C151907 * C152205 +
                      (C76827 + C76826 + C76825) * C151907 * C96036) *
                         C152286) *
                        C152028) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152286 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C1795 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152070 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C152286) *
                       C1796 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C152286 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C152070) *
                       C1797 +
                   (((C136578 + C136579 + C136580) * C151907 * C96036 +
                     (C76444 * C8218 + C136569 + C136569 + C152366 * C8224 +
                      C76446 * C25185 + C136570 + C136570 + C152346 * C25189 +
                      C76448 * C32979 + C136571 + C136571 + C76441 * C32981) *
                         C151907 * C152205) *
                        C152070 -
                    ((C136580 + C136579 + C136578) * C151907 * C152205 +
                     (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                      C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                      C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                         C151907 * C96036) *
                        C152286) *
                       C152337) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[122] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                         C151907 * C152205) *
                        C151983 * C152371 -
                    ((C76448 * C2163 + C77849 + C77849 + C76441 * C2171 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76444 * C1155 + C77847 + C77847 + C152366 * C1167) *
                         C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152357 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C347 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152357 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152371 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152327) *
                       C348 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C152371 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152357 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                        C151907 * C152205) *
                       C151983 * C151965 * C129 -
                   ((C77121 + C77122 + C77123) * C151907 * C152205 +
                    (C76519 + C76518 + C76517) * C151907 * C96036) *
                       C151983 * C151965 * C130 +
                   ((C76522 + C76521 + C76520) * C151907 * C96036 +
                    (C77127 + C77128 + C77129) * C151907 * C152205) *
                       C151983 * C151965 * C131 -
                   ((C77554 + C77555 + C77556) * C151907 * C152205 +
                    (C76525 + C76524 + C76523) * C151907 * C96036) *
                       C151983 * C151965 * C132 +
                   ((C76528 + C76527 + C76526) * C151907 * C96036 +
                    (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                     C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                     C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                        C151907 * C152205) *
                       C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152372 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152359 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C347 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152359 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C152372 -
                    ((C80284 + C80285 + C80286) * C151907 * C152205 +
                     (C77126 + C77125 + C77124) * C151907 * C96036) *
                        C152330) *
                       C151965 * C348 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C152372 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C152359 +
                    ((C77132 + C77131 + C77130) * C151907 * C96036 +
                     (C76444 * C2562 + C80275 + C80275 + C152366 * C2578 +
                      C76446 * C3091 + C80276 + C80276 + C152346 * C3099 +
                      C76448 * C10285 + C80277 + C80277 + C76441 * C10291) *
                         C151907 * C152205) *
                        C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152368 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C1346 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C1345 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152327) *
                       C152353 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C134577 + C134578 + C134579) * C151907 * C152205) *
                       C151983 * C1433 -
                   ((C135275 + C135274 + C135273) * C151907 * C152205 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C151907 * C96036) *
                       C151983 * C1434 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C151907 * C96036 +
                    (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                        C151907 * C152205) *
                       C151983 * C1435 -
                   ((C76448 * C25923 + C79193 + C79193 + C76441 * C25927 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76444 * C2163 + C79191 + C79191 + C152366 * C2171) *
                        C151907 * C152205 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C151907 * C96036) *
                       C151983 * C1436 +
                   ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                     C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                     C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                        C151907 * C96036 +
                    (C76444 * C8967 + C135616 + C135616 + C152366 * C8973 +
                     C76446 * C25923 + C135617 + C135617 + C152346 * C25927 +
                     C76448 * C33456 + C135618 + C135618 + C76441 * C33458) *
                        C151907 * C152205) *
                       C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152372 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152359 +
                    ((C134582 + C134581 + C134580) * C151907 * C96036 +
                     (C76444 * C2564 + C79760 + C79760 + C152366 * C2580 +
                      C76446 * C3089 + C79759 + C79759 + C152346 * C3097 +
                      C76448 * C10283 + C79758 + C79758 + C76441 * C10289) *
                         C151907 * C152205) *
                        C152330) *
                       C1345 +
                   (((C135273 + C135274 + C135275) * C151907 * C96036 +
                     (C135876 + C135877 + C135878) * C151907 * C152205) *
                        C152359 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C152372 -
                    ((C76448 * C27225 + C80483 + C80483 + C76441 * C27229 +
                      C76446 * C10283 + C80482 + C80482 + C152346 * C10289 +
                      C76444 * C3089 + C80481 + C80481 + C152366 * C3097) *
                         C151907 * C152205 +
                     (C135878 + C135877 + C135876) * C151907 * C96036) *
                        C152330) *
                       C1346 +
                   (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C135879 + C135880 + C135881) * C151907 * C152205) *
                        C152372 -
                    ((C135882 + C135883 + C135884) * C151907 * C152205 +
                     (C135881 + C135880 + C135879) * C151907 * C96036) *
                        C152359 +
                    ((C135884 + C135883 + C135882) * C151907 * C96036 +
                     (C76444 * C10283 + C135855 + C135855 + C152366 * C10289 +
                      C76446 * C27225 + C135856 + C135856 + C152346 * C27229 +
                      C76448 * C34310 + C135857 + C135857 + C76441 * C34312) *
                         C151907 * C152205) *
                        C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[123] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C152286 -
                    ((C134580 + C134581 + C134582) * C151907 * C152205 +
                     (C134579 + C134578 + C134577) * C151907 * C96036) *
                        C152070) *
                       C151965 * C807 +
                   (((C77123 + C77122 + C77121) * C151907 * C96036 +
                     (C77124 + C77125 + C77126) * C151907 * C152205) *
                        C152070 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C152286) *
                       C151965 * C808 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C152286 -
                    ((C77130 + C77131 + C77132) * C151907 * C152205 +
                     (C77129 + C77128 + C77127) * C151907 * C96036) *
                        C152070) *
                       C151965 * C809 +
                   (((C77556 + C77555 + C77554) * C151907 * C96036 +
                     (C76444 * C594 + C77094 + C77094 + C152366 * C618 +
                      C76446 * C1617 + C77095 + C77095 + C152346 * C1641 +
                      C76448 * C1628 + C77096 + C77096 + C76441 * C1652) *
                         C151907 * C152205) *
                        C152070 -
                    ((C77554 + C77555 + C77556) * C151907 * C152205 +
                     (C76525 + C76524 + C76523) * C151907 * C96036) *
                        C152286) *
                       C151965 * C152331)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                       C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                       C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                          C151907 * C96036 +
                      (C134577 + C134578 + C134579) * C151907 * C152205) *
                         C152286 -
                     ((C134580 + C134581 + C134582) * C151907 * C152205 +
                      (C134579 + C134578 + C134577) * C151907 * C96036) *
                         C152070) *
                        C1345 +
                    (((C135273 + C135274 + C135275) * C151907 * C96036 +
                      (C135876 + C135877 + C135878) * C151907 * C152205) *
                         C152070 -
                     ((C135275 + C135274 + C135273) * C151907 * C152205 +
                      (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                       C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                       C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                          C151907 * C96036) *
                         C152286) *
                        C1346 +
                    (((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                       C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                       C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                          C151907 * C96036 +
                      (C135879 + C135880 + C135881) * C151907 * C152205) *
                         C152286 -
                     ((C135882 + C135883 + C135884) * C151907 * C152205 +
                      (C135881 + C135880 + C135879) * C151907 * C96036) *
                         C152070) *
                        C152327) *
                       C152271 +
                   ((((C77123 + C77122 + C77121) * C151907 * C96036 +
                      (C77124 + C77125 + C77126) * C151907 * C152205) *
                         C152070 -
                     ((C77121 + C77122 + C77123) * C151907 * C152205 +
                      (C76519 + C76518 + C76517) * C151907 * C96036) *
                         C152286) *
                        C1345 +
                    (((C76821 + C76820 + C76819) * C151907 * C96036 +
                      (C77883 + C77884 + C77885) * C151907 * C152205) *
                         C152286 -
                     ((C80072 + C80073 + C80074) * C151907 * C152205 +
                      (C77885 + C77884 + C77883) * C151907 * C96036) *
                         C152070) *
                        C1346 +
                    (((C78996 + C78995 + C78994) * C151907 * C96036 +
                      (C76444 * C1626 + C78474 + C78474 + C152366 * C1650 +
                       C76446 * C8219 + C78475 + C78475 + C152346 * C8225 +
                       C76448 * C25186 + C78476 + C78476 + C76441 * C25190) *
                          C151907 * C152205) *
                         C152070 -
                     ((C78994 + C78995 + C78996) * C151907 * C152205 +
                      (C76824 + C76823 + C76822) * C151907 * C96036) *
                         C152286) *
                        C152327) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[124] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                     C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                     C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                        C151907 * C152205) *
                       C151983 * C151965 * C129 -
                   ((C77121 + C77122 + C77123) * C151907 * C152205 +
                    (C76519 + C76518 + C76517) * C151907 * C96036) *
                       C151983 * C151965 * C130 +
                   ((C76522 + C76521 + C76520) * C151907 * C96036 +
                    (C77127 + C77128 + C77129) * C151907 * C152205) *
                       C151983 * C151965 * C131 -
                   ((C77554 + C77555 + C77556) * C151907 * C152205 +
                    (C76525 + C76524 + C76523) * C151907 * C96036) *
                       C151983 * C151965 * C132 +
                   ((C76528 + C76527 + C76526) * C151907 * C96036 +
                    (C76444 * C595 + C77545 + C77545 + C152366 * C619 +
                     C76446 * C1159 + C77546 + C77546 + C152346 * C1171 +
                     C76448 * C2014 + C77547 + C77547 + C76441 * C2016) *
                        C151907 * C152205) *
                       C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C76444 * C590 + C77060 + C77060 + C152366 * C614 +
                      C76446 * C1155 + C77059 + C77059 + C152346 * C1167 +
                      C76448 * C1624 + C77058 + C77058 + C76441 * C1648) *
                         C151907 * C152205) *
                        C151983 * C152371 -
                    ((C76448 * C2163 + C77849 + C77849 + C76441 * C2171 +
                      C76446 * C1624 + C77848 + C77848 + C152346 * C1648 +
                      C76444 * C1155 + C77847 + C77847 + C152366 * C1167) *
                         C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C152357 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C347 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C152357 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C152371 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152327) *
                       C348 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C152371 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C152357 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                      C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                      C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                         C151907 * C96036 +
                     (C134577 + C134578 + C134579) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C135275 + C135274 + C135273) * C151907 * C152205 +
                     (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                      C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                      C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                         C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                      C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                      C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                         C151907 * C96036 +
                     (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                      C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                      C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152368 +
                   (((C76821 + C76820 + C76819) * C151907 * C96036 +
                     (C77883 + C77884 + C77885) * C151907 * C152205) *
                        C151983 * C1346 -
                    ((C77121 + C77122 + C77123) * C151907 * C152205 +
                     (C76519 + C76518 + C76517) * C151907 * C96036) *
                        C151983 * C1345 -
                    ((C78994 + C78995 + C78996) * C151907 * C152205 +
                     (C76824 + C76823 + C76822) * C151907 * C96036) *
                        C151983 * C152327) *
                       C152353 +
                   (((C76522 + C76521 + C76520) * C151907 * C96036 +
                     (C77127 + C77128 + C77129) * C151907 * C152205) *
                        C151983 * C1345 -
                    ((C77886 + C77887 + C77888) * C151907 * C152205 +
                     (C76827 + C76826 + C76825) * C151907 * C96036) *
                        C151983 * C1346 +
                    ((C76830 + C76829 + C76828) * C151907 * C96036 +
                     (C76444 * C1622 + C78985 + C78985 + C152366 * C1646 +
                      C76446 * C2165 + C78986 + C78986 + C152346 * C2173 +
                      C76448 * C8969 + C78987 + C78987 + C76441 * C8975) *
                         C151907 * C152205) *
                        C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C76444 * C136 + C76451 + C76451 + C152366 * C152 +
                     C76446 * C353 + C76452 + C76452 + C152346 * C377 +
                     C76448 * C354 + C76453 + C76453 + C76441 * C378) *
                        C151907 * C96036 +
                    (C134577 + C134578 + C134579) * C151907 * C152205) *
                       C151983 * C1433 -
                   ((C135275 + C135274 + C135273) * C151907 * C152205 +
                    (C76448 * C1442 + C76756 + C76756 + C76441 * C1458 +
                     C76446 * C354 + C76757 + C76757 + C152346 * C378 +
                     C76444 * C353 + C76758 + C76758 + C152366 * C377) *
                        C151907 * C96036) *
                       C151983 * C1434 +
                   ((C76444 * C354 + C76759 + C76759 + C152366 * C378 +
                     C76446 * C1442 + C76760 + C76760 + C152346 * C1458 +
                     C76448 * C1443 + C76761 + C76761 + C76441 * C1459) *
                        C151907 * C96036 +
                    (C76444 * C1624 + C78470 + C78470 + C152366 * C1648 +
                     C76446 * C2163 + C78469 + C78469 + C152346 * C2171 +
                     C76448 * C8967 + C78468 + C78468 + C76441 * C8973) *
                        C151907 * C152205) *
                       C151983 * C1435 -
                   ((C76448 * C25923 + C79193 + C79193 + C76441 * C25927 +
                     C76446 * C8967 + C79192 + C79192 + C152346 * C8973 +
                     C76444 * C2163 + C79191 + C79191 + C152366 * C2171) *
                        C151907 * C152205 +
                    (C76448 * C7979 + C78232 + C78232 + C76441 * C7985 +
                     C76446 * C1443 + C78233 + C78233 + C152346 * C1459 +
                     C76444 * C1442 + C78234 + C78234 + C152366 * C1458) *
                        C151907 * C96036) *
                       C151983 * C1436 +
                   ((C76444 * C1443 + C78235 + C78235 + C152366 * C1459 +
                     C76446 * C7979 + C78236 + C78236 + C152346 * C7985 +
                     C76448 * C24949 + C78237 + C78237 + C76441 * C24953) *
                        C151907 * C96036 +
                    (C76444 * C8967 + C135616 + C135616 + C152366 * C8973 +
                     C76446 * C25923 + C135617 + C135617 + C152346 * C25927 +
                     C76448 * C33456 + C135618 + C135618 + C76441 * C33458) *
                        C151907 * C152205) *
                       C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C152024 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152031 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C151983 * C3719) *
              C151942 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C145666 * C115085) *
               C151983 * C152031 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152024 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C3719) *
              C151951 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C152024 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152031 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152286 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C152024 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152286) *
               C152031 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C151907 * C152367 +
             (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
                C152286 -
            ((C144110 + C144111) * C151907 * C115085 +
             (C87387 + C87388) * C151907 * C152349 +
             (C87384 + C87383) * C151907 * C152367) *
                C152070) *
               C3719) *
              C3375 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152286) *
               C152024 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C152286 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152031 +
           ((C88043 * C151907 * C152367 +
             (C87386 + C87385) * C151907 * C152349 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151907 * C115085) *
                C152070 -
            ((C87385 + C87386) * C151907 * C115085 +
             C88044 * C151907 * C152349 +
             (C68222 + C68221) * C151907 * C152367) *
                C152286) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C152378 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152374 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C151983 * C152362 -
           ((C144801 + C144800) * C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C151983 * C152337) *
              C3375 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C145666 * C115085) *
               C151983 * C152374 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152378 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152362 +
           ((C70079 + C70078) * C151907 * C152367 +
            (C87656 + C87655) * C151907 * C152349 +
            (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
             C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                C151907 * C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C3235 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152028) *
              C152377 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C145666 * C115085) *
               C151983 * C152028 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C3235) *
              C152370 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C3235 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152028) *
              C152355 +
          ((C68725 * C151907 * C152367 + (C69274 + C69273) * C151907 * C152349 +
            (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
             C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                C151907 * C115085) *
               C151983 * C152028 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152372 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152359 +
            (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
             C145369 * C115085) *
                C152330) *
               C3235 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152359 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152372 -
            ((C146068 + C146069) * C151907 * C115085 +
             (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
                C152330) *
               C152028) *
              C3375 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152359 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152372 -
            ((C89089 + C89090) * C151907 * C115085 +
             C89750 * C151907 * C152349 + C142855 * C152367) *
                C152330) *
               C3235 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C152372 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152359 +
            (C145666 * C152367 + (C89490 + C89489) * C151907 * C152349 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151907 * C115085) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152286 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C3235 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152286) *
               C152028) *
              C151942 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152286) *
               C3235 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C152286 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152028) *
              C151951 +
          (((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
             C142856 * C115085) *
                C152286 -
            ((C71686 + C71687) * C151907 * C115085 +
             C85670 * C151907 * C152349 + C68529 * C151907 * C152367) *
                C152070) *
               C3235 +
           ((C69275 * C151907 * C152367 +
             (C71471 + C71470) * C151907 * C152349 +
             (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
              C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                 C151907 * C115085) *
                C152070 -
            ((C71470 + C71471) * C151907 * C115085 +
             C86592 * C151907 * C152349 + C68229 * C151907 * C152367) *
                C152286) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C3235 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152028) *
              C152377 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C145666 * C115085) *
               C151983 * C152028 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C3235) *
              C152370 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C3235 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152028) *
              C152355 +
          ((C68725 * C151907 * C152367 + (C69274 + C69273) * C151907 * C152349 +
            (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
             C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                C151907 * C115085) *
               C151983 * C152028 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C152378 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152374 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C151983 * C152362 -
           ((C144801 + C144800) * C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C151983 * C152337) *
              C3375 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C145666 * C115085) *
               C151983 * C152374 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152378 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152362 +
           ((C70079 + C70078) * C151907 * C152367 +
            (C87656 + C87655) * C151907 * C152349 +
            (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
             C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                C151907 * C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C4241 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C152024 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C4241) *
               C152031 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C151907 * C152367 +
             (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
                C4241 -
            ((C144110 + C144111) * C151907 * C115085 +
             (C87387 + C87388) * C151907 * C152349 +
             (C87384 + C87383) * C151907 * C152367) *
                C152070) *
               C3719) *
              C152271 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C4241) *
               C152024 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C4241 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152031 +
           ((C88043 * C151907 * C152367 +
             (C87386 + C87385) * C151907 * C152349 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151907 * C115085) *
                C152070 -
            ((C87385 + C87386) * C151907 * C115085 +
             C88044 * C151907 * C152349 +
             (C68222 + C68221) * C151907 * C152367) *
                C4241) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152066 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152073 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            C145369 * C115085) *
               C4913) *
              C152024 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
               C152073 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C152066 -
           ((C146068 + C146069) * C151907 * C115085 +
            (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
               C4913) *
              C152031 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C152066 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C152073 +
           (C144105 * C152367 + (C144111 + C144110) * C151907 * C152349 +
            (C67859 * C26493 + C144102 + C144102 + C67854 * C26497 +
             C67861 * C33837 + C144103 + C144103 + C152179 * C33839) *
                C151907 * C115085) *
               C4913) *
              C3719) *
         C151937) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C4241 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C152378 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
               C152070 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C4241) *
              C152374 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C4241 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C152070) *
              C152362 +
          (((C88315 + C88316) * C151907 * C152367 +
            (C144800 + C144801) * C151907 * C152349 +
            (C67859 * C27225 + C144794 + C144794 + C67854 * C27229 +
             C67861 * C34310 + C144795 + C144795 + C152179 * C34312) *
                C151907 * C115085) *
               C152070 -
           ((C144801 + C144800) * C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C4241 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C3235 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C4241) *
               C152028) *
              C152368 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C4241) *
               C3235 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C4241 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152028) *
              C152353 +
          (((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
             C142856 * C115085) *
                C4241 -
            ((C71686 + C71687) * C151907 * C115085 +
             C85670 * C151907 * C152349 + C68529 * C151907 * C152367) *
                C152070) *
               C3235 +
           ((C69275 * C151907 * C152367 +
             (C71471 + C71470) * C151907 * C152349 +
             (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
              C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                 C151907 * C115085) *
                C152070 -
            ((C71470 + C71471) * C151907 * C115085 +
             C86592 * C151907 * C152349 + C68229 * C151907 * C152367) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152379 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152376 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            C145369 * C115085) *
               C152365 -
           ((C145374 + C145375) * C151907 * C115085 +
            (C89091 + C89092) * C151907 * C152349 + C145368 * C152367) *
               C152343) *
              C3235 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
               C152376 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C152379 -
           ((C146068 + C146069) * C151907 * C115085 +
            (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
               C152365 +
           (C146063 * C152367 + (C146069 + C146068) * C151907 * C152349 +
            (C67859 * C40425 + C146061 + C146061 + C67854 * C40429 +
             C67861 * C40426 + C146062 + C146062 + C152179 * C40430) *
                C151907 * C115085) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152066 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152073 +
            (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
             C145369 * C115085) *
                C4913) *
               C3235 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152073 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152066 -
            ((C146068 + C146069) * C151907 * C115085 +
             (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
                C4913) *
               C152028) *
              C152271 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152073 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152066 -
            ((C89089 + C89090) * C151907 * C115085 +
             C89750 * C151907 * C152349 + C142855 * C152367) *
                C4913) *
               C3235 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C152066 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152073 +
            (C145666 * C152367 + (C89490 + C89489) * C151907 * C152349 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151907 * C115085) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C4241 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C3235 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C4241) *
               C152028) *
              C152368 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C4241) *
               C3235 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C4241 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152028) *
              C152353 +
          (((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
             C142856 * C115085) *
                C4241 -
            ((C71686 + C71687) * C151907 * C115085 +
             C85670 * C151907 * C152349 + C68529 * C151907 * C152367) *
                C152070) *
               C3235 +
           ((C69275 * C151907 * C152367 +
             (C71471 + C71470) * C151907 * C152349 +
             (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
              C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                 C151907 * C115085) *
                C152070 -
            ((C71470 + C71471) * C151907 * C115085 +
             C86592 * C151907 * C152349 + C68229 * C151907 * C152367) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C4241 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C152378 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
               C152070 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C4241) *
              C152374 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C4241 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C152070) *
              C152362 +
          (((C88315 + C88316) * C151907 * C152367 +
            (C144800 + C144801) * C151907 * C152349 +
            (C67859 * C27225 + C144794 + C144794 + C67854 * C27229 +
             C67861 * C34310 + C144795 + C144795 + C152179 * C34312) *
                C151907 * C115085) *
               C152070 -
           ((C144801 + C144800) * C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C1795 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C1796 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C151983 * C1797 -
           ((C67861 * C25185 + C88308 + C88308 + C152179 * C25189 +
             C67859 * C8218 + C88307 + C88307 + C67854 * C8224) *
                C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C151983 * C152337) *
              C152271 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C1796 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C1795 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C1797 +
           ((C70079 + C70078) * C151907 * C152367 +
            (C87656 + C87655) * C151907 * C152349 +
            (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
             C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                C151907 * C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C152285 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152028) *
              C807 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C152028 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152285) *
              C808 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C152285 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152028) *
              C809 +
          ((C68725 * C151907 * C152367 + (C69274 + C69273) * C151907 * C152349 +
            (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
             C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                C151907 * C115085) *
               C151983 * C152028 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C2325 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C2326 +
            (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
             C145369 * C115085) *
                C152330) *
               C152285 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 +
             (C90022 + C90021) * C151907 * C115085) *
                C2326 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C2325 -
            ((C67861 * C26493 + C90014 + C90014 + C152179 * C26497 +
              C67859 * C9540 + C90013 + C90013 + C67854 * C9546) *
                 C151907 * C115085 +
             (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
                C152330) *
               C152028) *
              C152271 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C89749 * C151907 * C115085) *
                C2326 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C2325 -
            ((C89089 + C89090) * C151907 * C115085 +
             C89750 * C151907 * C152349 + C142855 * C152367) *
                C152330) *
               C152285 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C2325 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C2326 +
            (C145666 * C152367 + (C89490 + C89489) * C151907 * C152349 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151907 * C115085) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152286 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C1795 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 +
            (C90022 + C90021) * C151907 * C115085) *
               C152070 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C152286) *
              C1796 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C152286 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C152070) *
              C1797 +
          (((C88315 + C88316) * C151907 * C152367 +
            (C144800 + C144801) * C151907 * C152349 +
            (C67859 * C27225 + C144794 + C144794 + C67854 * C27229 +
             C67861 * C34310 + C144795 + C144795 + C152179 * C34312) *
                C151907 * C115085) *
               C152070 -
           ((C144801 + C144800) * C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152286 -
            ((C89088 + C89087) * C151907 * C115085 +
             (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C152285 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 +
             (C90022 + C90021) * C151907 * C115085) *
                C152070 -
            ((C87382 + C87381) * C151907 * C115085 +
             (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152286) *
               C152028) *
              C347 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C89749 * C151907 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152286) *
               C152285 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C89479 * C151907 * C115085) *
                C152286 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152028) *
              C348 +
          (((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
             C142856 * C115085) *
                C152286 -
            ((C71686 + C71687) * C151907 * C115085 +
             C85670 * C151907 * C152349 + C68529 * C151907 * C152367) *
                C152070) *
               C152285 +
           ((C69275 * C151907 * C152367 +
             (C71471 + C71470) * C151907 * C152349 +
             (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
              C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                 C151907 * C115085) *
                C152070 -
            ((C71470 + C71471) * C151907 * C115085 +
             C86592 * C151907 * C152349 + C68229 * C151907 * C152367) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C2936 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C2937 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            C145369 * C115085) *
               C2938 -
           ((C145374 + C145375) * C151907 * C115085 +
            (C89091 + C89092) * C151907 * C152349 + C145368 * C152367) *
               C152343) *
              C152285 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
               C2937 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C2936 -
           ((C146068 + C146069) * C151907 * C115085 +
            (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
               C2938 +
           (C146063 * C152367 + (C146069 + C146068) * C151907 * C152349 +
            (C67859 * C40425 + C146061 + C146061 + C67854 * C40429 +
             C67861 * C40426 + C146062 + C146062 + C152179 * C40430) *
                C151907 * C115085) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                   C151907 * C152367 +
               (C85679 + C85680) * C151907 * C152349 +
               (C85682 + C85681) * C151907 * C115085) *
                  C151983 * C151965 * C129 -
              (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
               (C67919 + C67918) * C151907 * C152367) *
                  C151983 * C151965 * C130 +
              (C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
               C68530 * C151907 * C115085) *
                  C151983 * C151965 * C131 -
              ((C68527 + C68528) * C151907 * C115085 +
               C86199 * C151907 * C152349 + C67929 * C151907 * C152367) *
                  C151983 * C151965 * C132 +
              (C67930 * C151907 * C152367 +
               (C68944 + C68943) * C151907 * C152349 +
               (C67859 * C596 + C68491 + C68491 + C67854 * C620 +
                C67861 * C2787 + C68492 + C68492 + C152179 * C2789) *
                   C151907 * C115085) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 +
                 C67861 * C353 + C67865 + C67865 + C152179 * C377) *
                    C151907 * C152367 +
                (C85679 + C85680) * C151907 * C152349 +
                (C85682 + C85681) * C151907 * C115085) *
                   C151983 * C152371 -
               ((C87382 + C87381) * C151907 * C115085 +
                (C86598 + C86597) * C151907 * C152349 +
                (C67861 * C354 + C68161 + C68161 + C152179 * C378 +
                 C67859 * C353 + C68162 + C68162 + C67854 * C377) *
                    C151907 * C152367) *
                   C151983 * C152357 +
               ((C67859 * C354 + C68163 + C68163 + C67854 * C378 +
                 C67861 * C1442 + C68164 + C68164 + C152179 * C1458) *
                    C151907 * C152367 +
                (C87383 + C87384) * C151907 * C152349 +
                (C87388 + C87387) * C151907 * C115085) *
                   C151983 * C152327) *
                  C347 +
              (((C68220 + C68219) * C151907 * C152367 +
                C86590 * C151907 * C152349 + C89479 * C151907 * C115085) *
                   C151983 * C152357 -
               (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
                (C67919 + C67918) * C151907 * C152367) *
                   C151983 * C152371 -
               ((C87385 + C87386) * C151907 * C115085 +
                C88044 * C151907 * C152349 +
                (C68222 + C68221) * C151907 * C152367) *
                   C151983 * C152327) *
                  C348 +
              ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
                C68530 * C151907 * C115085) *
                   C151983 * C152371 -
               ((C71470 + C71471) * C151907 * C115085 +
                C86592 * C151907 * C152349 + C68229 * C151907 * C152367) *
                   C151983 * C152357 +
               (C68230 * C151907 * C152367 +
                (C70389 + C70388) * C151907 * C152349 +
                (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
                 C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                    C151907 * C115085) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152372 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152359 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C151965 * C347 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C89749 * C151907 * C115085) *
               C152359 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C152372 -
           ((C89089 + C89090) * C151907 * C115085 + C89750 * C151907 * C152349 +
            C142855 * C152367) *
               C152330) *
              C151965 * C348 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C152372 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C152359 +
           (C142856 * C152367 + (C71687 + C71686) * C151907 * C152349 +
            (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
             C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                C151907 * C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C1345 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 +
            (C87388 + C87387) * C151907 * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C1346 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C1345 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152327) *
              C152353 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C1345 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C1346 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
              C151983 * C1433 -
          ((C87382 + C87381) * C151907 * C115085 +
           (C86598 + C86597) * C151907 * C152349 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C151907 * C152367) *
              C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C151907 * C152367 +
           (C87383 + C87384) * C151907 * C152349 +
           (C87388 + C87387) * C151907 * C115085) *
              C151983 * C1435 -
          ((C67861 * C25185 + C88308 + C88308 + C152179 * C25189 +
            C67859 * C8218 + C88307 + C88307 + C67854 * C8224) *
               C151907 * C115085 +
           (C88316 + C88315) * C151907 * C152349 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C151907 * C152367) *
              C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C151907 * C152367 +
           (C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
            C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
               C151907 * C152349 +
           (C67859 * C25185 + C143876 + C143876 + C67854 * C25189 +
            C67861 * C32979 + C143877 + C143877 + C152179 * C32981) *
               C151907 * C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152372 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152359 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C1345 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 +
            (C90022 + C90021) * C151907 * C115085) *
               C152359 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C152372 -
           ((C67861 * C26493 + C90014 + C90014 + C152179 * C26497 +
             C67859 * C9540 + C90013 + C90013 + C67854 * C9546) *
                C151907 * C115085 +
            (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
               C152330) *
              C1346 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C152372 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C152359 +
           (C144105 * C152367 + (C144111 + C144110) * C151907 * C152349 +
            (C67859 * C26493 + C144102 + C144102 + C67854 * C26497 +
             C67861 * C33837 + C144103 + C144103 + C152179 * C33839) *
                C151907 * C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C2325 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C2326 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C151965 * C152368 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C89749 * C151907 * C115085) *
               C2326 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C2325 -
           ((C89089 + C89090) * C151907 * C115085 + C89750 * C151907 * C152349 +
            C142855 * C152367) *
               C152330) *
              C151965 * C152353 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C2325 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C2326 +
           (C142856 * C152367 + (C71687 + C71686) * C151907 * C152349 +
            (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
             C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                C151907 * C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C2325 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C2326 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C152371 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 +
            (C90022 + C90021) * C151907 * C115085) *
               C2326 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C2325 -
           ((C67861 * C26493 + C90014 + C90014 + C152179 * C26497 +
             C67859 * C9540 + C90013 + C90013 + C67854 * C9546) *
                C151907 * C115085 +
            (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
               C152330) *
              C152357 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C2325 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C2326 +
           (C144105 * C152367 + (C144111 + C144110) * C151907 * C152349 +
            (C67859 * C26493 + C144102 + C144102 + C67854 * C26497 +
             C67861 * C33837 + C144103 + C144103 + C152179 * C33839) *
                C151907 * C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
              C2556 -
          (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
           (C85680 + C85679) * C151907 * C152367) *
              C2557 +
          (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
           C145369 * C115085) *
              C2558 -
          ((C145374 + C145375) * C151907 * C115085 +
           (C89091 + C89092) * C151907 * C152349 + C145368 * C152367) *
              C2559 +
          (C145369 * C152367 + (C145375 + C145374) * C151907 * C152349 +
           (C67859 * C48702 + C145366 + C145366 + C67854 * C48706 +
            C67861 * C57033 + C145367 + C145367 + C152179 * C57035) *
               C151907 * C115085) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152286 -
            ((C89088 + C89087) * C151907 * C115085 +
             (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C1345 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 +
             (C90022 + C90021) * C151907 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152286) *
               C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C151907 * C152367 +
             (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
                C152286 -
            ((C144110 + C144111) * C151907 * C115085 +
             (C87387 + C87388) * C151907 * C152349 +
             (C87384 + C87383) * C151907 * C152367) *
                C152070) *
               C152327) *
              C152271 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C89749 * C151907 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152286) *
               C1345 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C89479 * C151907 * C115085) *
                C152286 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C1346 +
           ((C88043 * C151907 * C152367 +
             (C87386 + C87385) * C151907 * C152349 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151907 * C115085) *
                C152070 -
            ((C87385 + C87386) * C151907 * C115085 +
             C88044 * C151907 * C152349 +
             (C68222 + C68221) * C151907 * C152367) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152286 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C151965 * C807 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C89749 * C151907 * C115085) *
               C152070 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C152286) *
              C151965 * C808 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C152286 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C152070) *
              C151965 * C809 +
          ((C68932 * C151907 * C152367 + (C68528 + C68527) * C151907 * C152349 +
            (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
             C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                C151907 * C115085) *
               C152070 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C2936 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C2937 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            C145369 * C115085) *
               C2938 -
           ((C145374 + C145375) * C151907 * C115085 +
            (C89091 + C89092) * C151907 * C152349 + C145368 * C152367) *
               C152343) *
              C151965 * C152271 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C145861 * C115085) *
               C2937 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C2936 -
           ((C89089 + C89090) * C151907 * C115085 + C89750 * C151907 * C152349 +
            C142855 * C152367) *
               C2938 +
           (C145861 * C152367 + (C89090 + C89089) * C151907 * C152349 +
            (C67859 * C17868 + C89073 + C89073 + C67854 * C17874 +
             C67861 * C49415 + C89074 + C89074 + C152179 * C49417) *
                C151907 * C115085) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 +
            (C85682 + C85681) * C151907 * C115085) *
               C151983 * C152371 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152357 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 +
            (C87388 + C87387) * C151907 * C115085) *
               C151983 * C152327) *
              C347 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C152357 -
           (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152371 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152327) *
              C348 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C68530 * C151907 * C115085) *
               C151983 * C152371 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152357 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 +
           (C85682 + C85681) * C151907 * C115085) *
              C151983 * C151965 * C129 -
          (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
           (C67919 + C67918) * C151907 * C152367) *
              C151983 * C151965 * C130 +
          (C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
           C68530 * C151907 * C115085) *
              C151983 * C151965 * C131 -
          ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
           C67929 * C151907 * C152367) *
              C151983 * C151965 * C132 +
          (C67930 * C151907 * C152367 + (C68944 + C68943) * C151907 * C152349 +
           (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
            C68492 + C68492 + C152179 * C2789) *
               C151907 * C115085) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C1345 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 +
            (C87388 + C87387) * C151907 * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C1346 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C1345 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152327) *
              C152353 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C1345 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C1346 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
              C151983 * C1433 -
          ((C87382 + C87381) * C151907 * C115085 +
           (C86598 + C86597) * C151907 * C152349 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C151907 * C152367) *
              C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C151907 * C152367 +
           (C87383 + C87384) * C151907 * C152349 +
           (C87388 + C87387) * C151907 * C115085) *
              C151983 * C1435 -
          ((C67861 * C25185 + C88308 + C88308 + C152179 * C25189 +
            C67859 * C8218 + C88307 + C88307 + C67854 * C8224) *
               C151907 * C115085 +
           (C88316 + C88315) * C151907 * C152349 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C151907 * C152367) *
              C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C151907 * C152367 +
           (C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
            C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
               C151907 * C152349 +
           (C67859 * C25185 + C143876 + C143876 + C67854 * C25189 +
            C67861 * C32979 + C143877 + C143877 + C152179 * C32981) *
               C151907 * C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C2325 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C2326 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C151965 * C152368 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C89749 * C151907 * C115085) *
               C2326 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C2325 -
           ((C89089 + C89090) * C151907 * C115085 + C89750 * C151907 * C152349 +
            C142855 * C152367) *
               C152330) *
              C151965 * C152353 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C2325 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C2326 +
           (C142856 * C152367 + (C71687 + C71686) * C151907 * C152349 +
            (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
             C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                C151907 * C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C2325 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C2326 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C152371 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 +
            (C90022 + C90021) * C151907 * C115085) *
               C2326 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C2325 -
           ((C67861 * C26493 + C90014 + C90014 + C152179 * C26497 +
             C67859 * C9540 + C90013 + C90013 + C67854 * C9546) *
                C151907 * C115085 +
            (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
               C152330) *
              C152357 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C2325 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C2326 +
           (C144105 * C152367 + (C144111 + C144110) * C151907 * C152349 +
            (C67859 * C26493 + C144102 + C144102 + C67854 * C26497 +
             C67861 * C33837 + C144103 + C144103 + C152179 * C33839) *
                C151907 * C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C4241 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C152285 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C4241) *
               C152028) *
              C151942 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C4241) *
               C152285 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C4241 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152028) *
              C151951 +
          (((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
             C142856 * C115085) *
                C4241 -
            ((C71686 + C71687) * C151907 * C115085 +
             C85670 * C151907 * C152349 + C68529 * C151907 * C152367) *
                C152070) *
               C152285 +
           ((C69275 * C151907 * C152367 +
             (C71471 + C71470) * C151907 * C152349 +
             (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
              C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                 C151907 * C115085) *
                C152070 -
            ((C71470 + C71471) * C151907 * C115085 +
             C86592 * C151907 * C152349 + C68229 * C151907 * C152367) *
                C4241) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152066 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152073 +
            (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
             C145369 * C115085) *
                C4913) *
               C152285 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152073 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152066 -
            ((C146068 + C146069) * C151907 * C115085 +
             (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
                C4913) *
               C152028) *
              C3375 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152073 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152066 -
            ((C89089 + C89090) * C151907 * C115085 +
             C89750 * C151907 * C152349 + C142855 * C152367) *
                C4913) *
               C152285 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C152066 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152073 +
            (C145666 * C152367 + (C89490 + C89489) * C151907 * C152349 +
             (C67859 * C9541 + C90015 + C90015 + C67854 * C9547 +
              C67861 * C26494 + C90016 + C90016 + C152179 * C26498) *
                 C151907 * C115085) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C4241 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C152371 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C4241) *
               C152357 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C151907 * C152367 +
             (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
                C4241 -
            ((C144110 + C144111) * C151907 * C115085 +
             (C87387 + C87388) * C151907 * C152349 +
             (C87384 + C87383) * C151907 * C152367) *
                C152070) *
               C152327) *
              C3375 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C4241) *
               C152371 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C4241 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152357 +
           ((C88043 * C151907 * C152367 +
             (C87386 + C87385) * C151907 * C152349 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151907 * C115085) *
                C152070 -
            ((C87385 + C87386) * C151907 * C115085 +
             C88044 * C151907 * C152349 +
             (C68222 + C68221) * C151907 * C152367) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C4241 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C151965 * C152377 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C145861 * C115085) *
               C152070 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C4241) *
              C151965 * C152370 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C4241 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C152070) *
              C151965 * C152355 +
          ((C68932 * C151907 * C152367 + (C68528 + C68527) * C151907 * C152349 +
            (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
             C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                C151907 * C115085) *
               C152070 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152379 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152376 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            C145369 * C115085) *
               C152365 -
           ((C145374 + C145375) * C151907 * C115085 +
            (C89091 + C89092) * C151907 * C152349 + C145368 * C152367) *
               C152343) *
              C151965 * C3375 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C145861 * C115085) *
               C152376 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C152379 -
           ((C89089 + C89090) * C151907 * C115085 + C89750 * C151907 * C152349 +
            C142855 * C152367) *
               C152365 +
           (C145861 * C152367 + (C89090 + C89089) * C151907 * C152349 +
            (C67859 * C17868 + C89073 + C89073 + C67854 * C17874 +
             C67861 * C49415 + C89074 + C89074 + C152179 * C49417) *
                C151907 * C115085) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152066 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152073 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            C145369 * C115085) *
               C4913) *
              C151965 * C151942 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C145861 * C115085) *
               C152073 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C152066 -
           ((C89089 + C89090) * C151907 * C115085 + C89750 * C151907 * C152349 +
            C142855 * C152367) *
               C4913) *
              C151965 * C151951 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C152066 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C152073 +
           (C142856 * C152367 + (C71687 + C71686) * C151907 * C152349 +
            (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
             C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                C151907 * C115085) *
               C4913) *
              C151965 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C4241 -
           (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C151965 * C152377 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C145861 * C115085) *
               C152070 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C4241) *
              C151965 * C152370 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C4241 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C152070) *
              C151965 * C152355 +
          ((C68932 * C151907 * C152367 + (C68528 + C68527) * C151907 * C152349 +
            (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
             C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                C151907 * C115085) *
               C152070 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C4241 -
            (C145368 * C115085 + (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C152371 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 + C146063 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C4241) *
               C152357 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C151907 * C152367 +
             (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
                C4241 -
            ((C144110 + C144111) * C151907 * C115085 +
             (C87387 + C87388) * C151907 * C152349 +
             (C87384 + C87383) * C151907 * C152367) *
                C152070) *
               C152327) *
              C3375 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C145861 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C4241) *
               C152371 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C145666 * C115085) *
                C4241 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152357 +
           ((C88043 * C151907 * C152367 +
             (C87386 + C87385) * C151907 * C152349 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151907 * C115085) *
                C152070 -
            ((C87385 + C87386) * C151907 * C115085 +
             C88044 * C151907 * C152349 +
             (C68222 + C68221) * C151907 * C152367) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C152285 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152028) *
              C807 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C152028 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152285) *
              C808 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C152285 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152028) *
              C809 +
          ((C68725 * C151907 * C152367 + (C69274 + C69273) * C151907 * C152349 +
            (C67859 * C1617 + C71460 + C71460 + C67854 * C1641 +
             C67861 * C1628 + C71461 + C71461 + C152179 * C1652) *
                C151907 * C115085) *
               C151983 * C152028 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C1795 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C1796 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C151983 * C1797 -
           ((C67861 * C25185 + C88308 + C88308 + C152179 * C25189 +
             C67859 * C8218 + C88307 + C88307 + C67854 * C8224) *
                C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C151983 * C152337) *
              C152271 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C1796 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C1795 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C1797 +
           ((C70079 + C70078) * C151907 * C152367 +
            (C87656 + C87655) * C151907 * C152349 +
            (C67859 * C8219 + C88309 + C88309 + C67854 * C8225 +
             C67861 * C25186 + C88310 + C88310 + C152179 * C25190) *
                C151907 * C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152286 -
            ((C89088 + C89087) * C151907 * C115085 +
             (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C152285 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 +
             (C90022 + C90021) * C151907 * C115085) *
                C152070 -
            ((C87382 + C87381) * C151907 * C115085 +
             (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152286) *
               C152028) *
              C347 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C89749 * C151907 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152286) *
               C152285 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C89479 * C151907 * C115085) *
                C152286 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C152028) *
              C348 +
          (((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
             C142856 * C115085) *
                C152286 -
            ((C71686 + C71687) * C151907 * C115085 +
             C85670 * C151907 * C152349 + C68529 * C151907 * C152367) *
                C152070) *
               C152285 +
           ((C69275 * C151907 * C152367 +
             (C71471 + C71470) * C151907 * C152349 +
             (C67859 * C3091 + C71888 + C71888 + C67854 * C3099 +
              C67861 * C10285 + C71889 + C71889 + C152179 * C10291) *
                 C151907 * C115085) *
                C152070 -
            ((C71470 + C71471) * C151907 * C115085 +
             C86592 * C151907 * C152349 + C68229 * C151907 * C152367) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152286 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C1795 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 +
            (C90022 + C90021) * C151907 * C115085) *
               C152070 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C152286) *
              C1796 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C152286 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C152070) *
              C1797 +
          (((C88315 + C88316) * C151907 * C152367 +
            (C144800 + C144801) * C151907 * C152349 +
            (C67859 * C27225 + C144794 + C144794 + C67854 * C27229 +
             C67861 * C34310 + C144795 + C144795 + C152179 * C34312) *
                C151907 * C115085) *
               C152070 -
           ((C144801 + C144800) * C151907 * C115085 +
            (C88316 + C88315) * C151907 * C152349 +
            (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
             C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
                C151907 * C152367) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 +
            (C85682 + C85681) * C151907 * C115085) *
               C151983 * C152371 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152357 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 +
            (C87388 + C87387) * C151907 * C115085) *
               C151983 * C152327) *
              C347 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C152357 -
           (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152371 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152327) *
              C348 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C68530 * C151907 * C115085) *
               C151983 * C152371 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152357 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 +
           (C85682 + C85681) * C151907 * C115085) *
              C151983 * C151965 * C129 -
          (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
           (C67919 + C67918) * C151907 * C152367) *
              C151983 * C151965 * C130 +
          (C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
           C68530 * C151907 * C115085) *
              C151983 * C151965 * C131 -
          ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
           C67929 * C151907 * C152367) *
              C151983 * C151965 * C132 +
          (C67930 * C151907 * C152367 + (C68944 + C68943) * C151907 * C152349 +
           (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
            C68492 + C68492 + C152179 * C2789) *
               C151907 * C115085) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152372 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152359 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C151965 * C347 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C89749 * C151907 * C115085) *
               C152359 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C152372 -
           ((C89089 + C89090) * C151907 * C115085 + C89750 * C151907 * C152349 +
            C142855 * C152367) *
               C152330) *
              C151965 * C348 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C152372 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C152359 +
           (C142856 * C152367 + (C71687 + C71686) * C151907 * C152349 +
            (C67859 * C2567 + C71160 + C71160 + C67854 * C2583 +
             C67861 * C9542 + C71161 + C71161 + C152179 * C9548) *
                C151907 * C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C1345 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 +
            (C87388 + C87387) * C151907 * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C1346 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C1345 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152327) *
              C152353 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C1345 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C1346 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
              C151983 * C1433 -
          ((C87382 + C87381) * C151907 * C115085 +
           (C86598 + C86597) * C151907 * C152349 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C151907 * C152367) *
              C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C151907 * C152367 +
           (C87383 + C87384) * C151907 * C152349 +
           (C87388 + C87387) * C151907 * C115085) *
              C151983 * C1435 -
          ((C67861 * C25185 + C88308 + C88308 + C152179 * C25189 +
            C67859 * C8218 + C88307 + C88307 + C67854 * C8224) *
               C151907 * C115085 +
           (C88316 + C88315) * C151907 * C152349 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C151907 * C152367) *
              C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C151907 * C152367 +
           (C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
            C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
               C151907 * C152349 +
           (C67859 * C25185 + C143876 + C143876 + C67854 * C25189 +
            C67861 * C32979 + C143877 + C143877 + C152179 * C32981) *
               C151907 * C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152372 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152359 +
           (C142857 * C152367 + (C89087 + C89088) * C151907 * C152349 +
            (C89092 + C89091) * C151907 * C115085) *
               C152330) *
              C1345 +
          (((C86597 + C86598) * C151907 * C152367 +
            (C87381 + C87382) * C151907 * C152349 +
            (C90022 + C90021) * C151907 * C115085) *
               C152359 -
           (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C152372 -
           ((C67861 * C26493 + C90014 + C90014 + C152179 * C26497 +
             C67859 * C9540 + C90013 + C90013 + C67854 * C9546) *
                C151907 * C115085 +
            (C90021 + C90022) * C151907 * C152349 + C144104 * C152367) *
               C152330) *
              C1346 +
          (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
               C152372 -
           ((C144110 + C144111) * C151907 * C115085 +
            (C87387 + C87388) * C151907 * C152349 +
            (C87384 + C87383) * C151907 * C152367) *
               C152359 +
           (C144105 * C152367 + (C144111 + C144110) * C151907 * C152349 +
            (C67859 * C26493 + C144102 + C144102 + C67854 * C26497 +
             C67861 * C33837 + C144103 + C144103 + C152179 * C33839) *
                C151907 * C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C152286 -
           ((C89088 + C89087) * C151907 * C115085 +
            (C85681 + C85682) * C151907 * C152349 +
            (C85680 + C85679) * C151907 * C152367) *
               C152070) *
              C151965 * C807 +
          ((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
            C89749 * C151907 * C115085) *
               C152070 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C152286) *
              C151965 * C808 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C152286 -
           ((C71686 + C71687) * C151907 * C115085 + C85670 * C151907 * C152349 +
            C68529 * C151907 * C152367) *
               C152070) *
              C151965 * C809 +
          ((C68932 * C151907 * C152367 + (C68528 + C68527) * C151907 * C152349 +
            (C67859 * C2561 + C71676 + C71676 + C67854 * C2577 +
             C67861 * C3092 + C71677 + C71677 + C152179 * C3100) *
                C151907 * C115085) *
               C152070 -
           ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
            C67929 * C151907 * C152367) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
              C67865 + C67865 + C152179 * C377) *
                 C151907 * C152367 +
             (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
                C152286 -
            ((C89088 + C89087) * C151907 * C115085 +
             (C85681 + C85682) * C151907 * C152349 +
             (C85680 + C85679) * C151907 * C152367) *
                C152070) *
               C1345 +
           (((C86597 + C86598) * C151907 * C152367 +
             (C87381 + C87382) * C151907 * C152349 +
             (C90022 + C90021) * C151907 * C115085) *
                C152070 -
            (C144104 * C115085 + (C86598 + C86597) * C151907 * C152349 +
             (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
              C68162 + C68162 + C67854 * C377) *
                 C151907 * C152367) *
                C152286) *
               C1346 +
           (((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
              C68164 + C68164 + C152179 * C1458) *
                 C151907 * C152367 +
             (C87383 + C87384) * C151907 * C152349 + C144105 * C115085) *
                C152286 -
            ((C144110 + C144111) * C151907 * C115085 +
             (C87387 + C87388) * C151907 * C152349 +
             (C87384 + C87383) * C151907 * C152367) *
                C152070) *
               C152327) *
              C152271 +
          (((C85661 * C151907 * C152367 + C85668 * C151907 * C152349 +
             C89749 * C151907 * C115085) *
                C152070 -
            (C142855 * C115085 + C85667 * C151907 * C152349 +
             (C67919 + C67918) * C151907 * C152367) *
                C152286) *
               C1345 +
           (((C68220 + C68219) * C151907 * C152367 +
             C86590 * C151907 * C152349 + C89479 * C151907 * C115085) *
                C152286 -
            ((C89489 + C89490) * C151907 * C115085 +
             C89484 * C151907 * C152349 + C86591 * C151907 * C152367) *
                C152070) *
               C1346 +
           ((C88043 * C151907 * C152367 +
             (C87386 + C87385) * C151907 * C152349 +
             (C67859 * C10284 + C87363 + C87363 + C67854 * C10290 +
              C67861 * C27226 + C87364 + C87364 + C152179 * C27230) *
                 C151907 * C115085) *
                C152070 -
            ((C87385 + C87386) * C151907 * C115085 +
             C88044 * C151907 * C152349 +
             (C68222 + C68221) * C151907 * C152367) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 +
           (C85682 + C85681) * C151907 * C115085) *
              C151983 * C151965 * C129 -
          (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
           (C67919 + C67918) * C151907 * C152367) *
              C151983 * C151965 * C130 +
          (C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
           C68530 * C151907 * C115085) *
              C151983 * C151965 * C131 -
          ((C68527 + C68528) * C151907 * C115085 + C86199 * C151907 * C152349 +
           C67929 * C151907 * C152367) *
              C151983 * C151965 * C132 +
          (C67930 * C151907 * C152367 + (C68944 + C68943) * C151907 * C152349 +
           (C67859 * C596 + C68491 + C68491 + C67854 * C620 + C67861 * C2787 +
            C68492 + C68492 + C152179 * C2789) *
               C151907 * C115085) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 +
            (C85682 + C85681) * C151907 * C115085) *
               C151983 * C152371 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C152357 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 +
            (C87388 + C87387) * C151907 * C115085) *
               C151983 * C152327) *
              C347 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C152357 -
           (C85662 * C151907 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C152371 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152327) *
              C348 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C68530 * C151907 * C115085) *
               C151983 * C152371 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C152357 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
             C67865 + C67865 + C152179 * C377) *
                C151907 * C152367 +
            (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
               C151983 * C1345 -
           ((C87382 + C87381) * C151907 * C115085 +
            (C86598 + C86597) * C151907 * C152349 +
            (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
             C68162 + C68162 + C67854 * C377) *
                C151907 * C152367) *
               C151983 * C1346 +
           ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
             C68164 + C68164 + C152179 * C1458) *
                C151907 * C152367 +
            (C87383 + C87384) * C151907 * C152349 +
            (C87388 + C87387) * C151907 * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C68220 + C68219) * C151907 * C152367 + C86590 * C151907 * C152349 +
            C89479 * C151907 * C115085) *
               C151983 * C1346 -
           (C142855 * C115085 + C85667 * C151907 * C152349 +
            (C67919 + C67918) * C151907 * C152367) *
               C151983 * C1345 -
           ((C87385 + C87386) * C151907 * C115085 + C88044 * C151907 * C152349 +
            (C68222 + C68221) * C151907 * C152367) *
               C151983 * C152327) *
              C152353 +
          ((C67928 * C151907 * C152367 + C85669 * C151907 * C152349 +
            C142856 * C115085) *
               C151983 * C1345 -
           ((C71470 + C71471) * C151907 * C115085 + C86592 * C151907 * C152349 +
            C68229 * C151907 * C152367) *
               C151983 * C1346 +
           (C68230 * C151907 * C152367 + (C70389 + C70388) * C151907 * C152349 +
            (C67859 * C1627 + C69862 + C69862 + C67854 * C1651 +
             C67861 * C8220 + C69863 + C69863 + C152179 * C8226) *
                C151907 * C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C67859 * C136 + C67864 + C67864 + C67854 * C152 + C67861 * C353 +
            C67865 + C67865 + C152179 * C377) *
               C151907 * C152367 +
           (C85679 + C85680) * C151907 * C152349 + C142857 * C115085) *
              C151983 * C1433 -
          ((C87382 + C87381) * C151907 * C115085 +
           (C86598 + C86597) * C151907 * C152349 +
           (C67861 * C354 + C68161 + C68161 + C152179 * C378 + C67859 * C353 +
            C68162 + C68162 + C67854 * C377) *
               C151907 * C152367) *
              C151983 * C1434 +
          ((C67859 * C354 + C68163 + C68163 + C67854 * C378 + C67861 * C1442 +
            C68164 + C68164 + C152179 * C1458) *
               C151907 * C152367 +
           (C87383 + C87384) * C151907 * C152349 +
           (C87388 + C87387) * C151907 * C115085) *
              C151983 * C1435 -
          ((C67861 * C25185 + C88308 + C88308 + C152179 * C25189 +
            C67859 * C8218 + C88307 + C88307 + C67854 * C8224) *
               C151907 * C115085 +
           (C88316 + C88315) * C151907 * C152349 +
           (C67861 * C1443 + C69620 + C69620 + C152179 * C1459 +
            C67859 * C1442 + C69621 + C69621 + C67854 * C1458) *
               C151907 * C152367) *
              C151983 * C1436 +
          ((C67859 * C1443 + C69622 + C69622 + C67854 * C1459 + C67861 * C7979 +
            C69623 + C69623 + C152179 * C7985) *
               C151907 * C152367 +
           (C67859 * C8967 + C87051 + C87051 + C67854 * C8973 +
            C67861 * C25923 + C87052 + C87052 + C152179 * C25927) *
               C151907 * C152349 +
           (C67859 * C25185 + C143876 + C143876 + C67854 * C25189 +
            C67861 * C32979 + C143877 + C143877 + C152179 * C32981) *
               C151907 * C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152024 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152031 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C3719) *
              C151942 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152031 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152024 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C3719) *
              C151951 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152024 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152031 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C152024 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152031 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C3719) *
              C151942 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152031 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C152024 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C3719) *
              C151951 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C152024 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C152031 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
               C152193 * C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C152024 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C151983 * C3719) *
              C151942 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + C49019 * C45712) *
               C151983 * C152031 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152024 -
           ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C3719) *
              C151951 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C152024 -
           ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152031 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152024 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C152286 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C3719) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C152024 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152024 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C152286 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C3719) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C152024 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152031 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152286 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C152024 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152286) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
              C434 * C151912) *
                 C45710 +
             (C47428 + C47429) * C45711 + C47438 * C45712) *
                C152286 -
            ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
             (C47429 + C47428) * C45710) *
                C152070) *
               C3719) *
              C3375 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152286) *
               C152024 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C152286 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152031 +
           (((C47936 + C47937) * C45710 + (C47938 + C47939) * C45711 +
             (C47443 * C152262 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C45712) *
                C152070 -
            ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
             (C435 * C151912 + C434 * C152262) * C45710) *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C3235 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C152028) *
                  C152377 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C152028 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C3235) *
                  C152370 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C151983 * C3235 -
               (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                   C152193 * C151983 * C152028) *
                  C152355 +
              ((C431 * C122 + C437 * C123 + C820 * C124 +
                (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
                   C152193 * C151983 * C152028 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152193 * C151983 * C3235) *
                  C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C152378 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C152374 +
               ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C151983 * C152362 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                   C152193 * C151983 * C152337) *
                  C3375 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C152374 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C152378 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152193 * C151983 * C152362 +
               (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
                   C152193 * C151983 * C152337) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152372 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152359 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C152330) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152359 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152372 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C152330) *
               C152028) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152359 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152372 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C152330) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152372 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152359 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C3235 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152028 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C3235) *
              C152370 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C3235 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152028) *
              C152355 +
          (((C24065 + C24064 + C24063) * C152262 +
            (C23165 * C358 + C24054 + C24054 + C23160 * C382 + C23167 * C359 +
             C24055 + C24055 + C23161 * C383 + C23169 * C1801 + C24056 +
             C24056 + C23162 * C1803) *
                C151912) *
               C152193 * C151983 * C152028 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152378 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152374 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152362 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152374 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152378 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152362 +
           ((C25421 + C25420 + C25419) * C152262 +
            (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
             C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
             C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                C151912) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152372 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152359 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C152330) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152359 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152372 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C152330) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152359 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152372 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C152330) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152372 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152359 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C3235 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + C49019 * C45712) *
               C151983 * C152028 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C3235 -
           ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C152262 + C437 * C151912) * C45710 +
            (C1198 * C152262 + C1199 * C151912) * C45711 +
            (C2804 * C152262 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C45712) *
               C151983 * C152028 -
           ((C46562 + C46561) * C45712 + (C46560 + C46559) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C152378 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C151983 * C152362 -
           ((C48138 + C48144) * C45712 + (C48135 + C48134) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + C49019 * C45712) *
               C151983 * C152374 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152378 -
           ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152362 +
           ((C1820 * C152262 + C1819 * C151912) * C45710 +
            (C16811 * C152262 + C16810 * C151912) * C45711 +
            (C47645 * C152262 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152372 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152359 +
            (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
                C152330) *
               C3235 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152359 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152372 -
            ((C49420 + C49428) * C45712 + (C47426 + C47425) * C45711 +
             C47427 * C45710) *
                C152330) *
               C152028) *
              C3375 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152359 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152372 -
            ((C49220 + C49221) * C45712 + (C46161 + C46160) * C45711 +
             C46169 * C45710) *
                C152330) *
               C3235 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C152372 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152359 +
            (C49019 * C45710 + (C49021 + C49020) * C45711 +
             (C49024 * C152262 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C45712) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C152286 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C152028) *
              C151942 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C152286 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152286 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C3235 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152286) *
               C152028) *
              C151942 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152286) *
               C3235 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C152286 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C152262 + C195 * C151912) * C45710 +
             (C46162 + C46163) * C45711 + C46170 * C45712) *
                C152286 -
            ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
             (C46163 + C46162) * C45710) *
                C152070) *
               C3235 +
           (((C46861 + C46862) * C45710 + (C46863 + C46864) * C45711 +
             (C18207 * C152262 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C45712) *
                C152070 -
            ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
             (C431 * C151912 + C432 * C152262) * C45710) *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C152378 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152374 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152362 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C151983 * C152337) *
              C3375 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152374 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C152378 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152362 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C3235 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152028) *
              C152377 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152028 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C3235) *
              C152370 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C3235 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C152028) *
              C152355 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
               C152193 * C151983 * C152028 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C3235 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152028 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C3235) *
              C152370 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C3235 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152028) *
              C152355 +
          (((C24065 + C24064 + C24063) * C152262 +
            (C23165 * C358 + C24054 + C24054 + C23160 * C382 + C23167 * C359 +
             C24055 + C24055 + C23161 * C383 + C23169 * C1801 + C24056 +
             C24056 + C23162 * C1803) *
                C151912) *
               C152193 * C151983 * C152028 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152378 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152374 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152362 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152374 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152378 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152362 +
           ((C25421 + C25420 + C25419) * C152262 +
            (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
             C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
             C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                C151912) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C3235 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + C49019 * C45712) *
               C151983 * C152028 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C3235 -
           ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C152262 + C437 * C151912) * C45710 +
            (C1198 * C152262 + C1199 * C151912) * C45711 +
            (C2804 * C152262 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C45712) *
               C151983 * C152028 -
           ((C46562 + C46561) * C45712 + (C46560 + C46559) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C152378 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C151983 * C152362 -
           ((C48138 + C48144) * C45712 + (C48135 + C48134) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + C49019 * C45712) *
               C151983 * C152374 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152378 -
           ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152362 +
           ((C1820 * C152262 + C1819 * C151912) * C45710 +
            (C16811 * C152262 + C16810 * C151912) * C45711 +
            (C47645 * C152262 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152024 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C4241 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C3719) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152024 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152024 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C3719) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C152024 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152031 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C4241 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C152024 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C4241) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
              C434 * C151912) *
                 C45710 +
             (C47428 + C47429) * C45711 + C47438 * C45712) *
                C4241 -
            ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
             (C47429 + C47428) * C45710) *
                C152070) *
               C3719) *
              C152271 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C4241) *
               C152024 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C4241 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152031 +
           (((C47936 + C47937) * C45710 + (C47938 + C47939) * C45711 +
             (C47443 * C152262 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C45712) *
                C152070 -
            ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
             (C435 * C151912 + C434 * C152262) * C45710) *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152066 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152073 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C4913) *
              C152024 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152073 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152066 -
           ((C26817 + C26818 + C26819) * C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C4913) *
              C152031 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152066 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152073 +
           ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
             C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
             C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                C152262 +
            (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
             C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
             C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                C151912) *
               C152193 * C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152066 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152073 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C4913) *
              C152024 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152073 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152066 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C4913) *
              C152031 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C152066 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152073 +
           ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
               C152193 * C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152066 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152073 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
               C4913) *
              C152024 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            C49419 * C45712) *
               C152073 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C152066 -
           ((C49420 + C49428) * C45712 + (C47426 + C47425) * C45711 +
            C47427 * C45710) *
               C4913) *
              C152031 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C152066 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C152073 +
           (C47438 * C45710 + (C47446 + C47445) * C45711 +
            ((C134 * C26493 + C47436 + C47436 + C152163 * C26497) * C152262 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C45712) *
               C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152193 * C4241 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                    C152193 * C152070) *
                   C3235 +
               (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152193 * C152070 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                    C152193 * C4241) *
                   C152028) *
                  C152368 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152193 * C152070 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152193 * C4241) *
                   C3235 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152193 * C4241 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152193 * C152070) *
                   C152028) *
                  C152353 +
              (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                    C152193 * C4241 -
                (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                    C152193 * C152070) *
                   C3235 +
               ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
                 (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                    C152193 * C152070 -
                (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                    C152193 * C4241) *
                   C152028) *
                  C152321) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C4241 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C152070) *
                  C152378 +
              (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152193 * C152070 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C4241) *
                  C152374 +
              (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C4241 -
               (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                   C152193 * C152070) *
                  C152362 +
              (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
                (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
                (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
                (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
                   C152193 * C152070 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                   C152193 * C4241) *
                  C152337) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152379 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152376 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152365 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C3235 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152376 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152379 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C152365 +
           ((C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C125) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C4241 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C152378 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C4241 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C152362 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152379 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152376 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152365 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C3235 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152376 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152379 -
           ((C26817 + C26818 + C26819) * C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152365 +
           ((C23165 * C3089 + C27232 + C27232 + C23160 * C3097 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23169 * C27225 + C27234 + C27234 + C23162 * C27229) *
                C152262 +
            (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
             C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
             C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                C151912) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C4241 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C3235 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C4241) *
               C152028) *
              C152368 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C4241) *
               C3235 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C4241 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C152262 + C195 * C151912) * C45710 +
             (C46162 + C46163) * C45711 + C46170 * C45712) *
                C4241 -
            ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
             (C46163 + C46162) * C45710) *
                C152070) *
               C3235 +
           (((C46861 + C46862) * C45710 + (C46863 + C46864) * C45711 +
             (C18207 * C152262 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C45712) *
                C152070 -
            ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
             (C431 * C151912 + C432 * C152262) * C45710) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C4241 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C152378 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            C49419 * C45712) *
               C152070 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C4241 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C152070) *
              C152362 +
          (((C48134 + C48135) * C45710 + (C48144 + C48138) * C45711 +
            ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C152262 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C45712) *
               C152070 -
           ((C48138 + C48144) * C45712 + (C48135 + C48134) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152379 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152376 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
               C152365 -
           ((C48725 + C48726) * C45712 + (C48711 + C48710) * C45711 +
            C48709 * C45710) *
               C152343) *
              C3235 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            C49419 * C45712) *
               C152376 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C152379 -
           ((C49420 + C49428) * C45712 + (C47426 + C47425) * C45711 +
            C47427 * C45710) *
               C152365 +
           (C49419 * C45710 + (C49428 + C49420) * C45711 +
            ((C134 * C40425 + C49423 + C49423 + C152163 * C40429) * C152262 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151912) *
                C45712) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152066 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152073 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C4913) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152073 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152066 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C4913) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152073 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152066 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C4913) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152066 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152073 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152066 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152073 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C4913) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152073 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152066 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C4913) *
               C152028) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152073 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152066 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C4913) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152066 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152073 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152066 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152073 +
            (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
                C4913) *
               C3235 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152073 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152066 -
            ((C49420 + C49428) * C45712 + (C47426 + C47425) * C45711 +
             C47427 * C45710) *
                C4913) *
               C152028) *
              C152271 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152073 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152066 -
            ((C49220 + C49221) * C45712 + (C46161 + C46160) * C45711 +
             C46169 * C45710) *
                C4913) *
               C3235 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C152066 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152073 +
            (C49019 * C45710 + (C49021 + C49020) * C45711 +
             (C49024 * C152262 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C45712) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C152378 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152070 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C4241) *
              C152374 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C4241 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152070) *
              C152362 +
          (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
               C152193 * C152070 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C4241 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C152378 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C4241 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C152362 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C4241 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C3235 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C4241) *
               C152028) *
              C152368 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C4241) *
               C3235 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C4241 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C152262 + C195 * C151912) * C45710 +
             (C46162 + C46163) * C45711 + C46170 * C45712) *
                C4241 -
            ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
             (C46163 + C46162) * C45710) *
                C152070) *
               C3235 +
           (((C46861 + C46862) * C45710 + (C46863 + C46864) * C45711 +
             (C18207 * C152262 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C45712) *
                C152070 -
            ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
             (C431 * C151912 + C432 * C152262) * C45710) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C4241 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C152378 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            C49419 * C45712) *
               C152070 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C4241 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C152070) *
              C152362 +
          (((C48134 + C48135) * C45710 + (C48144 + C48138) * C45711 +
            ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C152262 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C45712) *
               C152070 -
           ((C48138 + C48144) * C45712 + (C48135 + C48134) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C152285 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C152028) *
                  C807 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C152028 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C152285) *
                  C808 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C151983 * C152285 -
               (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                   C152193 * C151983 * C152028) *
                  C809 +
              ((C431 * C122 + C437 * C123 + C820 * C124 +
                (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
                   C152193 * C151983 * C152028 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152193 * C151983 * C152285) *
                  C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C1795 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C1796 +
               ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C151983 * C1797 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                   C152193 * C151983 * C152337) *
                  C152271 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C1796 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C1795 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152193 * C151983 * C1797 +
               (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
                   C152193 * C151983 * C152337) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C2325 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C2326 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C152330) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C2326 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C2325 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C152330) *
               C152028) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C2326 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C2325 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C152330) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C2325 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C2326 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152285 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152028 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152285) *
              C808 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152285 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152028) *
              C809 +
          (((C24065 + C24064 + C24063) * C152262 +
            (C23165 * C358 + C24054 + C24054 + C23160 * C382 + C23167 * C359 +
             C24055 + C24055 + C23161 * C383 + C23169 * C1801 + C24056 +
             C24056 + C23162 * C1803) *
                C151912) *
               C152193 * C151983 * C152028 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1795 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1796 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C1797 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1796 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1795 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C1797 +
           ((C25421 + C25420 + C25419) * C152262 +
            (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
             C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
             C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                C151912) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C2325 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C2326 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C152330) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C2326 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C2325 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C152330) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C2326 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C2325 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C152330) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C2325 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C2326 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C152285 -
           ((C2806 * C151912 + C16598 * C152262) * C45712 +
            (C1196 * C151912 + C16008 * C152262) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152028) *
              C807 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C1196 * C152262 + C1197 * C151912) * C45711 +
            (C2806 * C152262 + C2805 * C151912) * C45712) *
               C151983 * C152028 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152285) *
              C808 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C152285 -
           ((C2804 * C151912 + C2805 * C152262) * C45712 +
            (C1198 * C151912 + C1197 * C152262) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152028) *
              C809 +
          (((C431 * C152262 + C437 * C151912) * C45710 +
            (C1198 * C152262 + C1199 * C151912) * C45711 +
            (C2804 * C152262 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C45712) *
               C151983 * C152028 -
           ((C675 * C151912 + C673 * C152262) * C45712 +
            (C674 * C151912 + C668 * C152262) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C1795 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C151983 * C1797 -
           ((C47645 * C151912 +
             (C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C152262) *
                C45712 +
            (C16811 * C151912 + C17308 * C152262) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
               C151983 * C1796 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C1795 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C1797 +
           ((C1820 * C152262 + C1819 * C151912) * C45710 +
            (C16811 * C152262 + C16810 * C151912) * C45711 +
            (C47645 * C152262 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C2325 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C2326 +
            (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
                C152330) *
               C152285 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             (C47425 + C47426) * C45712) *
                C2326 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C2325 -
            ((C49024 * C151912 +
              (C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C152262) *
                 C45712 +
             (C47426 + C47425) * C45711 + C47427 * C45710) *
                C152330) *
               C152028) *
              C152271 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             (C46160 + C46161) * C45712) *
                C2326 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C2325 -
            ((C17899 * C151912 + C17900 * C152262) * C45712 +
             (C46161 + C46160) * C45711 + C46169 * C45710) *
                C152330) *
               C152285 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C2325 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C2326 +
            (C49019 * C45710 + (C49021 + C49020) * C45711 +
             (C49024 * C152262 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C45712) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152193 * C152286 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                    C152193 * C152070) *
                   C152285 +
               (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152193 * C152070 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                    C152193 * C152286) *
                   C152028) *
                  C347 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152193 * C152070 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152193 * C152286) *
                   C152285 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152193 * C152286 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152193 * C152070) *
                   C152028) *
                  C348 +
              (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                    C152193 * C152286 -
                (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                    C152193 * C152070) *
                   C152285 +
               ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
                 (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                    C152193 * C152070 -
                (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                    C152193 * C152286) *
                   C152028) *
                  C152321) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C152286 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C152070) *
                  C1795 +
              (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152193 * C152070 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C152286) *
                  C1796 +
              (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C152286 -
               (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                   C152193 * C152070) *
                  C1797 +
              (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
                (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
                (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
                (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
                   C152193 * C152070 -
               (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                   C152193 * C152286) *
                  C152337) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2937 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C152285 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C2937 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C2936 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C2938 +
           ((C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C125) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C152286 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C1795 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152286 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C1797 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2936 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2937 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C2938 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C152285 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C2937 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C2936 -
           ((C26817 + C26818 + C26819) * C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C2938 +
           ((C23165 * C3089 + C27232 + C27232 + C23160 * C3097 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23169 * C27225 + C27234 + C27234 + C23162 * C27229) *
                C152262 +
            (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
             C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
             C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                C151912) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152286 -
            ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C152285 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             (C18609 * C152262 + C18208 * C151912) * C45712) *
                C152070 -
            ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152286) *
               C152028) *
              C347 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             (C46160 + C46161) * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152286) *
               C152285 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
                C152286 -
            ((C18207 * C151912 + C18208 * C152262) * C45712 +
             (C46860 + C46859) * C45711 + (C46858 + C46857) * C45710) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C152262 + C195 * C151912) * C45710 +
             (C46162 + C46163) * C45711 + C46170 * C45712) *
                C152286 -
            ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
             (C46163 + C46162) * C45710) *
                C152070) *
               C152285 +
           (((C46861 + C46862) * C45710 + (C46863 + C46864) * C45711 +
             (C18207 * C152262 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C45712) *
                C152070 -
            ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
             (C431 * C151912 + C432 * C152262) * C45710) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152286 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C1795 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            (C47425 + C47426) * C45712) *
               C152070 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C152286 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C152070) *
              C1797 +
          (((C48134 + C48135) * C45710 + (C48144 + C48138) * C45711 +
            ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C152262 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C45712) *
               C152070 -
           ((C48138 + C48144) * C45712 + (C48135 + C48134) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C2936 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C2937 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
               C2938 -
           ((C48725 + C48726) * C45712 + (C48711 + C48710) * C45711 +
            C48709 * C45710) *
               C152343) *
              C152285 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            C49419 * C45712) *
               C2937 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C2936 -
           ((C49420 + C49428) * C45712 + (C47426 + C47425) * C45711 +
            C47427 * C45710) *
               C2938 +
           (C49419 * C45710 + (C49428 + C49420) * C45711 +
            ((C134 * C40425 + C49423 + C49423 + C152163 * C40429) * C152262 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151912) *
                C45712) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152193 * C151983 * C151965 * C129 -
              (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                  C152193 * C151983 * C151965 * C130 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                  C152193 * C151983 * C151965 * C131 -
              (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C152193 * C151983 * C151965 * C132 +
              (C196 * C122 + C197 * C123 + C198 * C124 +
               (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
                  C152193 * C151983 * C151965 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C152371 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C152357 +
               ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C151983 * C152327) *
                  C347 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C152357 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C152371 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152193 * C151983 * C152327) *
                  C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C151983 * C152371 -
               ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 +
                C437 * C124 + C431 * C123 + C432 * C122) *
                   C152193 * C151983 * C152357 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                   C152193 * C151983 * C152327) *
                  C152321) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C152372 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C152359 +
               ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152193 * C152330) *
                  C151965 * C347 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152193 * C152359 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C152372 -
               (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                   C152193 * C152330) *
                  C151965 * C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C152372 -
               ((C134 * C597 + C650 + C650 + C152163 * C621) * C125 +
                C674 * C124 + C668 * C123 + C669 * C122) *
                   C152193 * C152359 +
               (C672 * C122 + C673 * C123 + C675 * C124 +
                (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
                   C152193 * C152330) *
                  C151965 * C152321) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C1345 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C1346 +
               ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C151983 * C152327) *
                  C152368 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C1346 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C1345 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152193 * C151983 * C152327) *
                  C152353 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C151983 * C1345 -
               (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                   C152193 * C151983 * C1346 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                   C152193 * C151983 * C152327) *
                  C152321) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152193 * C151983 * C1433 -
              (C431 * C125 + C432 * C124 + C433 * C123 +
               (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                  C152193 * C151983 * C1434 +
              ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
               C434 * C123 + C435 * C124 + C436 * C125) *
                  C152193 * C151983 * C1435 -
              ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
               (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
               (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
               (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                  C152193 * C151983 * C1436 +
              ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
               (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
               (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
               (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
                  C152193 * C151983 * C1437) *
             C151937 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C152372 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C152359 +
               ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152193 * C152330) *
                  C1345 +
              (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152193 * C152359 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C152372 -
               ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
                (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
                (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
                (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                   C152193 * C152330) *
                  C1346 +
              (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C152372 -
               ((C134 * C1621 + C1658 + C1658 + C152163 * C1645) * C125 +
                (C134 * C1622 + C1659 + C1659 + C152163 * C1646) * C124 +
                (C134 * C1623 + C1660 + C1660 + C152163 * C1647) * C123 +
                (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                   C152193 * C152359 +
               ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
                (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
                (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
                (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
                   C152193 * C152330) *
                  C152327) *
             C151937 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C2325 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C2326 +
               ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152193 * C152330) *
                  C151965 * C152368 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152193 * C2326 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C2325 -
               (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                   C152193 * C152330) *
                  C151965 * C152353 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C2325 -
               (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                   C152193 * C2326 +
               (C672 * C122 + C673 * C123 + C675 * C124 +
                (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
                   C152193 * C152330) *
                  C151965 * C152321) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C2325 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C2326 +
               ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                C671 * C123 + C672 * C124 + C673 * C125) *
                   C152193 * C152330) *
                  C152371 +
              (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                C1196 * C123 + C1197 * C124 + C1198 * C125) *
                   C152193 * C2326 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C2325 -
               ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
                (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
                (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
                (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                   C152193 * C152330) *
                  C152357 +
              (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C2325 -
               (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                   C152193 * C2326 +
               ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
                (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
                (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
                (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
                   C152193 * C152330) *
                  C152327) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C2556 -
          (C668 * C125 + C669 * C124 + C670 * C123 +
           (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
              C152193 * C2557 +
          ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
           C672 * C124 + C673 * C125) *
              C152193 * C2558 -
          ((C134 * C2561 + C2586 + C2586 + C152163 * C2577) * C125 +
           (C134 * C2562 + C2587 + C2587 + C152163 * C2578) * C124 +
           (C134 * C2563 + C2588 + C2588 + C152163 * C2579) * C123 +
           (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
              C152193 * C2559 +
          ((C134 * C2565 + C2590 + C2590 + C152163 * C2581) * C122 +
           (C134 * C2566 + C2591 + C2591 + C152163 * C2582) * C123 +
           (C134 * C2567 + C2592 + C2592 + C152163 * C2583) * C124 +
           (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C125) *
              C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C151965 * C129 -
          ((C23241 + C23242 + C23243) * C151912 +
           (C23240 + C23239 + C23238) * C152262) *
              C152193 * C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C152262 +
           (C23244 + C23245 + C23246) * C151912) *
              C152193 * C151983 * C151965 * C131 -
          ((C23247 + C23248 + C23249) * C151912 +
           (C23246 + C23245 + C23244) * C152262) *
              C152193 * C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C152262 +
           (C23165 * C141 + C23211 + C23211 + C23160 * C157 + C23167 * C360 +
            C23212 + C23212 + C23161 * C384 + C23169 * C361 + C23213 + C23213 +
            C23162 * C385) *
               C151912) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152357 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152371 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 + C23167 * C357 +
             C23511 + C23511 + C23161 * C381 + C23165 * C350 + C23512 + C23512 +
             C23160 * C374) *
                C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152372 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152359 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152372 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152330) *
              C151965 * C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152372 -
           ((C23169 * C1621 + C23812 + C23812 + C23162 * C1645 +
             C23167 * C1158 + C23813 + C23813 + C23161 * C1170 + C23165 * C587 +
             C23814 + C23814 + C23160 * C611) *
                C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152359 +
           ((C23853 + C23852 + C23851) * C152262 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151912) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1345 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1346 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1345 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C1345 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C1433 -
          ((C23540 + C23541 + C23542) * C151912 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C152262) *
              C152193 * C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C152262 +
           (C23543 + C23544 + C23545) * C151912) *
              C152193 * C151983 * C1435 -
          ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 + C23167 * C1444 +
            C24957 + C24957 + C23161 * C1460 + C23165 * C1441 + C24958 +
            C24958 + C23160 * C1457) *
               C151912 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C152262) *
              C152193 * C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C152262 +
           (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 + C23167 * C7980 +
            C24966 + C24966 + C23161 * C7986 + C23169 * C24950 + C24967 +
            C24967 + C23162 * C24954) *
               C151912) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152372 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C1345 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152359 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152372 -
           ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
             C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
             C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152330) *
              C1346 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152372 -
           ((C23169 * C8968 + C25198 + C25198 + C23162 * C8974 +
             C23167 * C2164 + C25199 + C25199 + C23161 * C2172 +
             C23165 * C1623 + C25200 + C25200 + C23160 * C1647) *
                C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
             C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
             C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                C152262 +
            (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
             C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
             C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                C151912) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2325 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C2326 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C2325 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152330) *
              C151965 * C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C2325 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C2326 +
           ((C23853 + C23852 + C23851) * C152262 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151912) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2325 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C152371 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C2326 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C2325 -
           ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
             C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
             C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152330) *
              C152357 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C2325 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
             C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
             C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                C152262 +
            (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
             C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
             C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                C151912) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C2556 -
          ((C23842 + C23843 + C23844) * C151912 +
           (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23165 * C590 + C23781 + C23781 +
            C23160 * C614) *
               C152262) *
              C152193 * C2557 +
          ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
            C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
            C23784 + C23162 * C1649) *
               C152262 +
           (C23845 + C23846 + C23847) * C151912) *
              C152193 * C2558 -
          ((C23169 * C10284 + C26500 + C26500 + C23162 * C10290 +
            C23167 * C3090 + C26501 + C26501 + C23161 * C3098 + C23165 * C2563 +
            C26502 + C26502 + C23160 * C2579) *
               C151912 +
           (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
            C23167 * C3089 + C26504 + C26504 + C23161 * C3097 + C23165 * C2564 +
            C26505 + C26505 + C23160 * C2580) *
               C152262) *
              C152193 * C2559 +
          ((C23165 * C2565 + C26506 + C26506 + C23160 * C2581 + C23167 * C9540 +
            C26507 + C26507 + C23161 * C9546 + C23169 * C26493 + C26508 +
            C26508 + C23162 * C26497) *
               C152262 +
           (C23165 * C2566 + C26509 + C26509 + C23160 * C2582 + C23167 * C9541 +
            C26510 + C26510 + C23161 * C9547 + C23169 * C26494 + C26511 +
            C26511 + C23162 * C26498) *
               C151912) *
              C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C15311 * C152262 + C670 * C151912) * C45711 +
           (C15312 * C152262 + C671 * C151912) * C45712) *
              C151983 * C151965 * C129 -
          ((C672 * C151912 + C671 * C152262) * C45712 +
           (C669 * C151912 + C670 * C152262) * C45711 +
           (C194 * C151912 + C193 * C152262) * C45710) *
              C151983 * C151965 * C130 +
          ((C194 * C152262 + C195 * C151912) * C45710 +
           (C669 * C152262 + C668 * C151912) * C45711 +
           (C672 * C152262 + C673 * C151912) * C45712) *
              C151983 * C151965 * C131 -
          ((C675 * C151912 + C673 * C152262) * C45712 +
           (C674 * C151912 + C668 * C152262) * C45711 +
           (C196 * C151912 + C195 * C152262) * C45710) *
              C151983 * C151965 * C132 +
          ((C196 * C152262 + C197 * C151912) * C45710 +
           (C674 * C152262 + C961 * C151912) * C45711 +
           (C675 * C152262 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
               C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C15311 * C152262 + C670 * C151912) * C45711 +
            (C15312 * C152262 + C671 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2806 * C151912 + C16598 * C152262) * C45712 +
            (C1196 * C151912 + C16008 * C152262) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C347 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C1196 * C152262 + C1197 * C151912) * C45711 +
            (C2806 * C152262 + C2805 * C151912) * C45712) *
               C151983 * C152357 -
           ((C672 * C151912 + C671 * C152262) * C45712 +
            (C669 * C151912 + C670 * C152262) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152371 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C348 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C669 * C152262 + C668 * C151912) * C45711 +
            (C672 * C152262 + C673 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2804 * C151912 + C2805 * C152262) * C45712 +
            (C1198 * C151912 + C1197 * C152262) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152357 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152372 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152359 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C151965 * C347 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            (C46160 + C46161) * C45712) *
               C152359 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C152372 -
           ((C17899 * C151912 + C17900 * C152262) * C45712 +
            (C46161 + C46160) * C45711 + C46169 * C45710) *
               C152330) *
              C151965 * C348 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C152372 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C152359 +
           (C46170 * C45710 + (C46167 + C46166) * C45711 +
            (C17899 * C152262 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C1345 -
           ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
               C151983 * C1346 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C1345 -
           ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C1346 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C46150 + C46151) * C45711 + C46168 * C45712) *
              C151983 * C1433 -
          ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
               C45710) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
            C434 * C151912) *
               C45710 +
           (C16599 * C152262 + C2033 * C151912) * C45711 +
           (C16602 * C152262 + C16601 * C151912) * C45712) *
              C151983 * C1435 -
          (((C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C151912 +
            (C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C152262) *
               C45712 +
           (C16811 * C151912 + C17308 * C152262) * C45711 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
               C45710) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152262 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C45710 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152262 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C45711 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C152262 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152372 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152359 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C1345 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            (C47425 + C47426) * C45712) *
               C152359 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C152372 -
           (((C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C151912 +
             (C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C152262) *
                C45712 +
            (C47426 + C47425) * C45711 + C47427 * C45710) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C152372 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C152359 +
           (C47438 * C45710 + (C47446 + C47445) * C45711 +
            ((C134 * C26493 + C47436 + C47436 + C152163 * C26497) * C152262 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C2325 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C2326 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C151965 * C152368 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            (C46160 + C46161) * C45712) *
               C2326 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C2325 -
           ((C17899 * C151912 + C17900 * C152262) * C45712 +
            (C46161 + C46160) * C45711 + C46169 * C45710) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C2325 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C2326 +
           (C46170 * C45710 + (C46167 + C46166) * C45711 +
            (C17899 * C152262 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C2325 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C2326 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C152371 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            (C47425 + C47426) * C45712) *
               C2326 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C2325 -
           (((C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C151912 +
             (C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C152262) *
                C45712 +
            (C47426 + C47425) * C45711 + C47427 * C45710) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C2325 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C2326 +
           (C47438 * C45710 + (C47446 + C47445) * C45711 +
            ((C134 * C26493 + C47436 + C47436 + C152163 * C26497) * C152262 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C46150 + C46151) * C45711 + C46168 * C45712) *
              C2556 -
          (C48709 * C45712 + (C46153 + C46152) * C45711 +
           (C46151 + C46150) * C45710) *
              C2557 +
          (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
              C2558 -
          ((C48725 + C48726) * C45712 + (C48711 + C48710) * C45711 +
           C48709 * C45710) *
              C2559 +
          (C48718 * C45710 + (C48726 + C48725) * C45711 +
           ((C134 * C48702 + C48716 + C48716 + C152163 * C48706) * C152262 +
            (C134 * C48703 + C48717 + C48717 + C152163 * C48707) * C151912) *
               C45712) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C152286 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C152070) *
                  C151965 * C807 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152193 * C152070 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C152286) *
                  C151965 * C808 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C152286 -
               (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                   C152193 * C152070) *
                  C151965 * C809 +
              ((C668 * C122 + C674 * C123 + C961 * C124 +
                (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
                   C152193 * C152070 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152193 * C152286) *
                  C151965 * C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152193 * C152286 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                    C152193 * C152070) *
                   C1345 +
               (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152193 * C152070 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                    C152193 * C152286) *
                   C1346 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                 C434 * C123 + C435 * C124 + C436 * C125) *
                    C152193 * C152286 -
                (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                 (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                    C152193 * C152070) *
                   C152327) *
                  C152271 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152193 * C152070 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152193 * C152286) *
                   C1345 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152193 * C152286 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152193 * C152070) *
                   C1346 +
               ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
                 (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                    C152193 * C152070 -
                (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                    C152193 * C152286) *
                   C152327) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2937 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C151965 * C152271 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C2937 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C2936 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C2938 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C125) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152286 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C1345 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C152286 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2936 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2937 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C2938 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C151965 * C152271 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C2937 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C2936 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C2938 +
           ((C27031 + C27030 + C27029) * C152262 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151912) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152286 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C151965 * C807 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            (C46160 + C46161) * C45712) *
               C152070 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C152286) *
              C151965 * C808 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C152286 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C152070) *
              C151965 * C809 +
          (((C46559 + C46560) * C45710 + (C46561 + C46562) * C45711 +
            (C2957 * C152262 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C45712) *
               C152070 -
           ((C46562 + C46561) * C45712 + (C46560 + C46559) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152286 -
            ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C1345 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             (C47425 + C47426) * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
              C434 * C151912) *
                 C45710 +
             (C47428 + C47429) * C45711 + C47438 * C45712) *
                C152286 -
            ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
             (C47429 + C47428) * C45710) *
                C152070) *
               C152327) *
              C152271 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             (C46160 + C46161) * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152286) *
               C1345 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
                C152286 -
            ((C18207 * C151912 + C18208 * C152262) * C45712 +
             (C46860 + C46859) * C45711 + (C46858 + C46857) * C45710) *
                C152070) *
               C1346 +
           (((C47936 + C47937) * C45710 + (C47938 + C47939) * C45711 +
             (C47443 * C152262 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C45712) *
                C152070 -
            ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
             (C435 * C151912 + C434 * C152262) * C45710) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C2936 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C2937 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
               C2938 -
           ((C48725 + C48726) * C45712 + (C48711 + C48710) * C45711 +
            C48709 * C45710) *
               C152343) *
              C151965 * C152271 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            C49219 * C45712) *
               C2937 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C2936 -
           ((C49220 + C49221) * C45712 + (C46161 + C46160) * C45711 +
            C46169 * C45710) *
               C2938 +
           (C49219 * C45710 + (C49221 + C49220) * C45711 +
            (C48723 * C152262 +
             (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151912) *
                C45712) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C151983 * C151965 * C129 -
          (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
              C151983 * C151965 * C130 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
              C151983 * C151965 * C131 -
          (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
              C151983 * C151965 * C132 +
          (C196 * C122 + C197 * C123 + C198 * C124 +
           (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C152371 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152357 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152327) *
              C347 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152357 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C152371 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152327) *
              C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C152371 -
           ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 + C437 * C124 +
            C431 * C123 + C432 * C122) *
               C152193 * C151983 * C152357 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152327) *
              C152368 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152327) *
              C152353 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C151983 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
              C152193 * C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152193 * C151983 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
              C152193 * C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2326 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C151965 * C152368 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C2326 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C2325 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C152330) *
              C151965 * C152353 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C2325 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C2326 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2326 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C152371 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C2326 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C2325 -
           ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C152330) *
              C152357 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C2325 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C2326 +
           ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C151965 * C129 -
          ((C23241 + C23242 + C23243) * C151912 +
           (C23240 + C23239 + C23238) * C152262) *
              C152193 * C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C152262 +
           (C23244 + C23245 + C23246) * C151912) *
              C152193 * C151983 * C151965 * C131 -
          ((C23247 + C23248 + C23249) * C151912 +
           (C23246 + C23245 + C23244) * C152262) *
              C152193 * C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C152262 +
           (C23165 * C141 + C23211 + C23211 + C23160 * C157 + C23167 * C360 +
            C23212 + C23212 + C23161 * C384 + C23169 * C361 + C23213 + C23213 +
            C23162 * C385) *
               C151912) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152357 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152371 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 + C23167 * C357 +
             C23511 + C23511 + C23161 * C381 + C23165 * C350 + C23512 + C23512 +
             C23160 * C374) *
                C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1345 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1346 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1345 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C1345 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C1433 -
          ((C23540 + C23541 + C23542) * C151912 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C152262) *
              C152193 * C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C152262 +
           (C23543 + C23544 + C23545) * C151912) *
              C152193 * C151983 * C1435 -
          ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 + C23167 * C1444 +
            C24957 + C24957 + C23161 * C1460 + C23165 * C1441 + C24958 +
            C24958 + C23160 * C1457) *
               C151912 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C152262) *
              C152193 * C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C152262 +
           (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 + C23167 * C7980 +
            C24966 + C24966 + C23161 * C7986 + C23169 * C24950 + C24967 +
            C24967 + C23162 * C24954) *
               C151912) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2325 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C2326 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C2325 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152330) *
              C151965 * C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C2325 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C2326 +
           ((C23853 + C23852 + C23851) * C152262 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151912) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2325 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C152371 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C2326 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C2325 -
           ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
             C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
             C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152330) *
              C152357 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C2325 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
             C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
             C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                C152262 +
            (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
             C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
             C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                C151912) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C15311 * C152262 + C670 * C151912) * C45711 +
           (C15312 * C152262 + C671 * C151912) * C45712) *
              C151983 * C151965 * C129 -
          ((C672 * C151912 + C671 * C152262) * C45712 +
           (C669 * C151912 + C670 * C152262) * C45711 +
           (C194 * C151912 + C193 * C152262) * C45710) *
              C151983 * C151965 * C130 +
          ((C194 * C152262 + C195 * C151912) * C45710 +
           (C669 * C152262 + C668 * C151912) * C45711 +
           (C672 * C152262 + C673 * C151912) * C45712) *
              C151983 * C151965 * C131 -
          ((C675 * C151912 + C673 * C152262) * C45712 +
           (C674 * C151912 + C668 * C152262) * C45711 +
           (C196 * C151912 + C195 * C152262) * C45710) *
              C151983 * C151965 * C132 +
          ((C196 * C152262 + C197 * C151912) * C45710 +
           (C674 * C152262 + C961 * C151912) * C45711 +
           (C675 * C152262 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
               C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C15311 * C152262 + C670 * C151912) * C45711 +
            (C15312 * C152262 + C671 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2806 * C151912 + C16598 * C152262) * C45712 +
            (C1196 * C151912 + C16008 * C152262) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C347 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C1196 * C152262 + C1197 * C151912) * C45711 +
            (C2806 * C152262 + C2805 * C151912) * C45712) *
               C151983 * C152357 -
           ((C672 * C151912 + C671 * C152262) * C45712 +
            (C669 * C151912 + C670 * C152262) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152371 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C348 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C669 * C152262 + C668 * C151912) * C45711 +
            (C672 * C152262 + C673 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2804 * C151912 + C2805 * C152262) * C45712 +
            (C1198 * C151912 + C1197 * C152262) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152357 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C1345 -
           ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
               C151983 * C1346 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C1345 -
           ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C1346 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C46150 + C46151) * C45711 + C46168 * C45712) *
              C151983 * C1433 -
          ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
               C45710) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
            C434 * C151912) *
               C45710 +
           (C16599 * C152262 + C2033 * C151912) * C45711 +
           (C16602 * C152262 + C16601 * C151912) * C45712) *
              C151983 * C1435 -
          (((C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C151912 +
            (C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C152262) *
               C45712 +
           (C16811 * C151912 + C17308 * C152262) * C45711 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
               C45710) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152262 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C45710 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152262 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C45711 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C152262 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C2325 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C2326 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C151965 * C152368 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            (C46160 + C46161) * C45712) *
               C2326 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C2325 -
           ((C17899 * C151912 + C17900 * C152262) * C45712 +
            (C46161 + C46160) * C45711 + C46169 * C45710) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C2325 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C2326 +
           (C46170 * C45710 + (C46167 + C46166) * C45711 +
            (C17899 * C152262 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C2325 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C2326 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C152371 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            (C47425 + C47426) * C45712) *
               C2326 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C2325 -
           (((C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C151912 +
             (C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C152262) *
                C45712 +
            (C47426 + C47425) * C45711 + C47427 * C45710) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C2325 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C2326 +
           (C47438 * C45710 + (C47446 + C47445) * C45711 +
            ((C134 * C26493 + C47436 + C47436 + C152163 * C26497) * C152262 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C4241 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152028) *
              C151942 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C152285 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C4241 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C152285 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C4241) *
               C152028) *
              C151942 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C4241) *
               C152285 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C4241 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C152262 + C195 * C151912) * C45710 +
             (C46162 + C46163) * C45711 + C46170 * C45712) *
                C4241 -
            ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
             (C46163 + C46162) * C45710) *
                C152070) *
               C152285 +
           (((C46861 + C46862) * C45710 + (C46863 + C46864) * C45711 +
             (C18207 * C152262 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C45712) *
                C152070 -
            ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
             (C431 * C151912 + C432 * C152262) * C45710) *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152066 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152073 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C4913) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152073 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152066 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C4913) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152073 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152066 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C4913) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152066 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152073 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152066 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152073 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C4913) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152073 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152066 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C4913) *
               C152028) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152073 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152066 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C4913) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152066 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152073 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152066 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152073 +
            (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
                C4913) *
               C152285 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152073 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152066 -
            ((C49420 + C49428) * C45712 + (C47426 + C47425) * C45711 +
             C47427 * C45710) *
                C4913) *
               C152028) *
              C3375 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152073 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152066 -
            ((C49220 + C49221) * C45712 + (C46161 + C46160) * C45711 +
             C46169 * C45710) *
                C4913) *
               C152285 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C152066 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152073 +
            (C49019 * C45710 + (C49021 + C49020) * C45711 +
             (C49024 * C152262 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C45712) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C4241 -
               (C668 * C125 + C669 * C124 + C670 * C123 +
                (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                   C152193 * C152070) *
                  C151965 * C152377 +
              ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                   C152193 * C152070 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C4241) *
                  C151965 * C152370 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C4241 -
               (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                   C152193 * C152070) *
                  C151965 * C152355 +
              ((C668 * C122 + C674 * C123 + C961 * C124 +
                (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
                   C152193 * C152070 -
               (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                   C152193 * C4241) *
                  C151965 * C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                 C193 * C123 + C194 * C124 + C195 * C125) *
                    C152193 * C4241 -
                (C668 * C125 + C669 * C124 + C670 * C123 +
                 (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                    C152193 * C152070) *
                   C152371 +
               (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                 C1196 * C123 + C1197 * C124 + C1198 * C125) *
                    C152193 * C152070 -
                (C431 * C125 + C432 * C124 + C433 * C123 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                    C152193 * C4241) *
                   C152357 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                 C434 * C123 + C435 * C124 + C436 * C125) *
                    C152193 * C4241 -
                (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                 (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                    C152193 * C152070) *
                   C152327) *
                  C3375 +
              (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                    C152193 * C152070 -
                (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                    C152193 * C4241) *
                   C152371 +
               ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                    C152193 * C4241 -
                (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                    C152193 * C152070) *
                   C152357 +
               ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
                 (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                    C152193 * C152070 -
                (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                    C152193 * C4241) *
                   C152327) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152379 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152376 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152365 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C151965 * C3375 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152376 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152379 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C152365 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C125) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C4241 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152371 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C4241 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152379 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152376 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152365 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C151965 * C3375 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152376 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152379 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152365 +
           ((C27031 + C27030 + C27029) * C152262 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151912) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C4241 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C151965 * C152377 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            C49219 * C45712) *
               C152070 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C4241 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C152070) *
              C151965 * C152355 +
          (((C46559 + C46560) * C45710 + (C46561 + C46562) * C45711 +
            (C2957 * C152262 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C45712) *
               C152070 -
           ((C46562 + C46561) * C45712 + (C46560 + C46559) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C4241 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C152371 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
              C434 * C151912) *
                 C45710 +
             (C47428 + C47429) * C45711 + C47438 * C45712) *
                C4241 -
            ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
             (C47429 + C47428) * C45710) *
                C152070) *
               C152327) *
              C3375 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C4241) *
               C152371 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C4241 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152357 +
           (((C47936 + C47937) * C45710 + (C47938 + C47939) * C45711 +
             (C47443 * C152262 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C45712) *
                C152070 -
            ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
             (C435 * C151912 + C434 * C152262) * C45710) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152379 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152376 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
               C152365 -
           ((C48725 + C48726) * C45712 + (C48711 + C48710) * C45711 +
            C48709 * C45710) *
               C152343) *
              C151965 * C3375 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            C49219 * C45712) *
               C152376 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C152379 -
           ((C49220 + C49221) * C45712 + (C46161 + C46160) * C45711 +
            C46169 * C45710) *
               C152365 +
           (C49219 * C45710 + (C49221 + C49220) * C45711 +
            (C48723 * C152262 +
             (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151912) *
                C45712) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152066 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152073 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C4913) *
              C151965 * C151942 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152073 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152066 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C4913) *
              C151965 * C151951 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152066 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152073 +
           ((C23853 + C23852 + C23851) * C152262 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151912) *
               C152193 * C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152066 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152073 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C4913) *
              C151965 * C151942 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152073 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152066 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C4913) *
              C151965 * C151951 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C152066 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C152073 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
               C152193 * C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152066 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152073 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 + C48718 * C45712) *
               C4913) *
              C151965 * C151942 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            C49219 * C45712) *
               C152073 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C152066 -
           ((C49220 + C49221) * C45712 + (C46161 + C46160) * C45711 +
            C46169 * C45710) *
               C4913) *
              C151965 * C151951 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C152066 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C152073 +
           (C46170 * C45710 + (C46167 + C46166) * C45711 +
            (C17899 * C152262 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C45712) *
               C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152371 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C152371 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152357 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C151965 * C152377 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152070 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C4241) *
              C151965 * C152370 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C4241 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C152070) *
              C151965 * C152355 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
               C152193 * C152070 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C4241 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152371 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C4241 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C4241 -
           (C48709 * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C151965 * C152377 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            C49219 * C45712) *
               C152070 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C4241 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C152070) *
              C151965 * C152355 +
          (((C46559 + C46560) * C45710 + (C46561 + C46562) * C45711 +
            (C2957 * C152262 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C45712) *
               C152070 -
           ((C46562 + C46561) * C45712 + (C46560 + C46559) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C4241 -
            (C48709 * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C152371 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             C49419 * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
              C434 * C151912) *
                 C45710 +
             (C47428 + C47429) * C45711 + C47438 * C45712) *
                C4241 -
            ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
             (C47429 + C47428) * C45710) *
                C152070) *
               C152327) *
              C3375 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             C49219 * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C4241) *
               C152371 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + C49019 * C45712) *
                C4241 -
            ((C49020 + C49021) * C45712 + (C46860 + C46859) * C45711 +
             (C46858 + C46857) * C45710) *
                C152070) *
               C152357 +
           (((C47936 + C47937) * C45710 + (C47938 + C47939) * C45711 +
             (C47443 * C152262 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C45712) *
                C152070 -
            ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
             (C435 * C151912 + C434 * C152262) * C45710) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C1795 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C1796 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C1797 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C151983 * C152337) *
              C152271 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C1796 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C1795 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C1797 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C152285 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152028) *
              C807 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152028 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C152285) *
              C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C152285 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C152028) *
              C809 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
               C152193 * C151983 * C152028 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152285 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152028 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152285) *
              C808 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152285 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152028) *
              C809 +
          (((C24065 + C24064 + C24063) * C152262 +
            (C23165 * C358 + C24054 + C24054 + C23160 * C382 + C23167 * C359 +
             C24055 + C24055 + C23161 * C383 + C23169 * C1801 + C24056 +
             C24056 + C23162 * C1803) *
                C151912) *
               C152193 * C151983 * C152028 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1795 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1796 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C1797 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1796 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1795 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C1797 +
           ((C25421 + C25420 + C25419) * C152262 +
            (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
             C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
             C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                C151912) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C152285 -
           ((C2806 * C151912 + C16598 * C152262) * C45712 +
            (C1196 * C151912 + C16008 * C152262) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152028) *
              C807 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C1196 * C152262 + C1197 * C151912) * C45711 +
            (C2806 * C152262 + C2805 * C151912) * C45712) *
               C151983 * C152028 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152285) *
              C808 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C152285 -
           ((C2804 * C151912 + C2805 * C152262) * C45712 +
            (C1198 * C151912 + C1197 * C152262) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152028) *
              C809 +
          (((C431 * C152262 + C437 * C151912) * C45710 +
            (C1198 * C152262 + C1199 * C151912) * C45711 +
            (C2804 * C152262 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C45712) *
               C151983 * C152028 -
           ((C675 * C151912 + C673 * C152262) * C45712 +
            (C674 * C151912 + C668 * C152262) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C1795 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C151983 * C1797 -
           ((C47645 * C151912 +
             (C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C152262) *
                C45712 +
            (C16811 * C151912 + C17308 * C152262) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
               C151983 * C1796 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C1795 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C1797 +
           ((C1820 * C152262 + C1819 * C151912) * C45710 +
            (C16811 * C152262 + C16810 * C151912) * C45711 +
            (C47645 * C152262 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152286 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C1795 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152070 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152286) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C152286 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152070) *
              C1797 +
          (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
               C152193 * C152070 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C152028) *
              C347 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C152286 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C152285 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C152286 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C1795 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152286 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C1797 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152286 -
            ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C152285 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             (C18609 * C152262 + C18208 * C151912) * C45712) *
                C152070 -
            ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152286) *
               C152028) *
              C347 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             (C46160 + C46161) * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152286) *
               C152285 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
                C152286 -
            ((C18207 * C151912 + C18208 * C152262) * C45712 +
             (C46860 + C46859) * C45711 + (C46858 + C46857) * C45710) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C152262 + C195 * C151912) * C45710 +
             (C46162 + C46163) * C45711 + C46170 * C45712) *
                C152286 -
            ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
             (C46163 + C46162) * C45710) *
                C152070) *
               C152285 +
           (((C46861 + C46862) * C45710 + (C46863 + C46864) * C45711 +
             (C18207 * C152262 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C45712) *
                C152070 -
            ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
             (C431 * C151912 + C432 * C152262) * C45710) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152286 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C1795 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            (C47425 + C47426) * C45712) *
               C152070 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C152286 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C152070) *
              C1797 +
          (((C48134 + C48135) * C45710 + (C48144 + C48138) * C45711 +
            ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C152262 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C45712) *
               C152070 -
           ((C48138 + C48144) * C45712 + (C48135 + C48134) * C45711 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
                C45710) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152193 * C151983 * C151965 * C129 -
              (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                  C152193 * C151983 * C151965 * C130 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                  C152193 * C151983 * C151965 * C131 -
              (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C152193 * C151983 * C151965 * C132 +
              (C196 * C122 + C197 * C123 + C198 * C124 +
               (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
                  C152193 * C151983 * C151965 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C152371 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C152357 +
               ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C151983 * C152327) *
                  C347 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C152357 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C152371 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152193 * C151983 * C152327) *
                  C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C151983 * C152371 -
               ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 +
                C437 * C124 + C431 * C123 + C432 * C122) *
                   C152193 * C151983 * C152357 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                   C152193 * C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152372 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152359 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C151965 * C347 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152359 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152372 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C152330) *
              C151965 * C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C152372 -
           ((C134 * C597 + C650 + C650 + C152163 * C621) * C125 + C674 * C124 +
            C668 * C123 + C669 * C122) *
               C152193 * C152359 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152327) *
              C152368 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152327) *
              C152353 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C151983 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
              C152193 * C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152193 * C151983 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
              C152193 * C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152372 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152359 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C1345 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152359 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152372 -
           ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C152330) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C152372 -
           ((C134 * C1621 + C1658 + C1658 + C152163 * C1645) * C125 +
            (C134 * C1622 + C1659 + C1659 + C152163 * C1646) * C124 +
            (C134 * C1623 + C1660 + C1660 + C152163 * C1647) * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152359 +
           ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C151965 * C129 -
          ((C23241 + C23242 + C23243) * C151912 +
           (C23240 + C23239 + C23238) * C152262) *
              C152193 * C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C152262 +
           (C23244 + C23245 + C23246) * C151912) *
              C152193 * C151983 * C151965 * C131 -
          ((C23247 + C23248 + C23249) * C151912 +
           (C23246 + C23245 + C23244) * C152262) *
              C152193 * C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C152262 +
           (C23165 * C141 + C23211 + C23211 + C23160 * C157 + C23167 * C360 +
            C23212 + C23212 + C23161 * C384 + C23169 * C361 + C23213 + C23213 +
            C23162 * C385) *
               C151912) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152357 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152371 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 + C23167 * C357 +
             C23511 + C23511 + C23161 * C381 + C23165 * C350 + C23512 + C23512 +
             C23160 * C374) *
                C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152372 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152359 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152372 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152330) *
              C151965 * C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152372 -
           ((C23169 * C1621 + C23812 + C23812 + C23162 * C1645 +
             C23167 * C1158 + C23813 + C23813 + C23161 * C1170 + C23165 * C587 +
             C23814 + C23814 + C23160 * C611) *
                C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152359 +
           ((C23853 + C23852 + C23851) * C152262 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151912) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1345 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1346 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1345 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C1345 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C1433 -
          ((C23540 + C23541 + C23542) * C151912 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C152262) *
              C152193 * C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C152262 +
           (C23543 + C23544 + C23545) * C151912) *
              C152193 * C151983 * C1435 -
          ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 + C23167 * C1444 +
            C24957 + C24957 + C23161 * C1460 + C23165 * C1441 + C24958 +
            C24958 + C23160 * C1457) *
               C151912 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C152262) *
              C152193 * C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C152262 +
           (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 + C23167 * C7980 +
            C24966 + C24966 + C23161 * C7986 + C23169 * C24950 + C24967 +
            C24967 + C23162 * C24954) *
               C151912) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152372 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C1345 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152359 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152372 -
           ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
             C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
             C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152330) *
              C1346 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152372 -
           ((C23169 * C8968 + C25198 + C25198 + C23162 * C8974 +
             C23167 * C2164 + C25199 + C25199 + C23161 * C2172 +
             C23165 * C1623 + C25200 + C25200 + C23160 * C1647) *
                C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
             C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
             C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                C152262 +
            (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
             C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
             C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                C151912) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C15311 * C152262 + C670 * C151912) * C45711 +
           (C15312 * C152262 + C671 * C151912) * C45712) *
              C151983 * C151965 * C129 -
          ((C672 * C151912 + C671 * C152262) * C45712 +
           (C669 * C151912 + C670 * C152262) * C45711 +
           (C194 * C151912 + C193 * C152262) * C45710) *
              C151983 * C151965 * C130 +
          ((C194 * C152262 + C195 * C151912) * C45710 +
           (C669 * C152262 + C668 * C151912) * C45711 +
           (C672 * C152262 + C673 * C151912) * C45712) *
              C151983 * C151965 * C131 -
          ((C675 * C151912 + C673 * C152262) * C45712 +
           (C674 * C151912 + C668 * C152262) * C45711 +
           (C196 * C151912 + C195 * C152262) * C45710) *
              C151983 * C151965 * C132 +
          ((C196 * C152262 + C197 * C151912) * C45710 +
           (C674 * C152262 + C961 * C151912) * C45711 +
           (C675 * C152262 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
               C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C15311 * C152262 + C670 * C151912) * C45711 +
            (C15312 * C152262 + C671 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2806 * C151912 + C16598 * C152262) * C45712 +
            (C1196 * C151912 + C16008 * C152262) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C347 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C1196 * C152262 + C1197 * C151912) * C45711 +
            (C2806 * C152262 + C2805 * C151912) * C45712) *
               C151983 * C152357 -
           ((C672 * C151912 + C671 * C152262) * C45712 +
            (C669 * C151912 + C670 * C152262) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152371 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C348 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C669 * C152262 + C668 * C151912) * C45711 +
            (C672 * C152262 + C673 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2804 * C151912 + C2805 * C152262) * C45712 +
            (C1198 * C151912 + C1197 * C152262) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152357 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152372 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152359 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C151965 * C347 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            (C46160 + C46161) * C45712) *
               C152359 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C152372 -
           ((C17899 * C151912 + C17900 * C152262) * C45712 +
            (C46161 + C46160) * C45711 + C46169 * C45710) *
               C152330) *
              C151965 * C348 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C152372 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C152359 +
           (C46170 * C45710 + (C46167 + C46166) * C45711 +
            (C17899 * C152262 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C1345 -
           ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
               C151983 * C1346 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C1345 -
           ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C1346 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C46150 + C46151) * C45711 + C46168 * C45712) *
              C151983 * C1433 -
          ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
               C45710) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
            C434 * C151912) *
               C45710 +
           (C16599 * C152262 + C2033 * C151912) * C45711 +
           (C16602 * C152262 + C16601 * C151912) * C45712) *
              C151983 * C1435 -
          (((C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C151912 +
            (C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C152262) *
               C45712 +
           (C16811 * C151912 + C17308 * C152262) * C45711 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
               C45710) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152262 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C45710 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152262 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C45711 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C152262 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152372 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152359 +
           (C46168 * C45710 + (C46155 + C46154) * C45711 +
            (C17901 * C152262 + C17900 * C151912) * C45712) *
               C152330) *
              C1345 +
          (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
            (C47425 + C47426) * C45712) *
               C152359 -
           (C47427 * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C152372 -
           (((C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C151912 +
             (C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C152262) *
                C45712 +
            (C47426 + C47425) * C45711 + C47427 * C45710) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C47428 + C47429) * C45711 + C47438 * C45712) *
               C152372 -
           ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
            (C47429 + C47428) * C45710) *
               C152359 +
           (C47438 * C45710 + (C47446 + C47445) * C45711 +
            ((C134 * C26493 + C47436 + C47436 + C152163 * C26497) * C152262 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C1345 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C152286 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C1345 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C1346 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152286 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C151965 * C807 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152070 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152286) *
              C151965 * C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C152286 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C152070) *
              C151965 * C809 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
               C152193 * C152070 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152286 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C1345 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C152286 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C152286 -
           ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
            (C46151 + C46150) * C45710) *
               C152070) *
              C151965 * C807 +
          (((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
            (C46160 + C46161) * C45712) *
               C152070 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C152286) *
              C151965 * C808 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C152286 -
           ((C46166 + C46167) * C45712 + (C46165 + C46164) * C45711 +
            (C46163 + C46162) * C45710) *
               C152070) *
              C151965 * C809 +
          (((C46559 + C46560) * C45710 + (C46561 + C46562) * C45711 +
            (C2957 * C152262 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C45712) *
               C152070 -
           ((C46562 + C46561) * C45712 + (C46560 + C46559) * C45711 +
            (C196 * C151912 + C195 * C152262) * C45710) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
              C193 * C151912) *
                 C45710 +
             (C46150 + C46151) * C45711 + C46168 * C45712) *
                C152286 -
            ((C46154 + C46155) * C45712 + (C46153 + C46152) * C45711 +
             (C46151 + C46150) * C45710) *
                C152070) *
               C1345 +
           (((C46853 + C46854) * C45710 + (C46855 + C46856) * C45711 +
             (C47425 + C47426) * C45712) *
                C152070 -
            (C47427 * C45712 + (C46854 + C46853) * C45711 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                 C45710) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
              C434 * C151912) *
                 C45710 +
             (C47428 + C47429) * C45711 + C47438 * C45712) *
                C152286 -
            ((C47445 + C47446) * C45712 + (C47431 + C47430) * C45711 +
             (C47429 + C47428) * C45710) *
                C152070) *
               C152327) *
              C152271 +
          ((((C46156 + C46157) * C45710 + (C46158 + C46159) * C45711 +
             (C46160 + C46161) * C45712) *
                C152070 -
            (C46169 * C45712 + (C46157 + C46156) * C45711 +
             (C194 * C151912 + C193 * C152262) * C45710) *
                C152286) *
               C1345 +
           (((C433 * C152262 + C432 * C151912) * C45710 +
             (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
                C152286 -
            ((C18207 * C151912 + C18208 * C152262) * C45712 +
             (C46860 + C46859) * C45711 + (C46858 + C46857) * C45710) *
                C152070) *
               C1346 +
           (((C47936 + C47937) * C45710 + (C47938 + C47939) * C45711 +
             (C47443 * C152262 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C45712) *
                C152070 -
            ((C47939 + C47938) * C45712 + (C47937 + C47936) * C45711 +
             (C435 * C151912 + C434 * C152262) * C45710) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C152371 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152357 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152327) *
              C347 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152357 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C152371 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152327) *
              C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C152371 -
           ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 + C437 * C124 +
            C431 * C123 + C432 * C122) *
               C152193 * C151983 * C152357 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C151983 * C151965 * C129 -
          (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
              C151983 * C151965 * C130 +
          (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
              C151983 * C151965 * C131 -
          (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
              C151983 * C151965 * C132 +
          (C196 * C122 + C197 * C123 + C198 * C124 +
           (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152327) *
              C152368 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152327) *
              C152353 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C151983 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
              C152193 * C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152193 * C151983 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
              C152193 * C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C151965 * C129 -
          ((C23241 + C23242 + C23243) * C151912 +
           (C23240 + C23239 + C23238) * C152262) *
              C152193 * C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C152262 +
           (C23244 + C23245 + C23246) * C151912) *
              C152193 * C151983 * C151965 * C131 -
          ((C23247 + C23248 + C23249) * C151912 +
           (C23246 + C23245 + C23244) * C152262) *
              C152193 * C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C152262 +
           (C23165 * C141 + C23211 + C23211 + C23160 * C157 + C23167 * C360 +
            C23212 + C23212 + C23161 * C384 + C23169 * C361 + C23213 + C23213 +
            C23162 * C385) *
               C151912) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152357 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152371 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 + C23167 * C357 +
             C23511 + C23511 + C23161 * C381 + C23165 * C350 + C23512 + C23512 +
             C23160 * C374) *
                C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1345 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1346 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1345 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C1345 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C1433 -
          ((C23540 + C23541 + C23542) * C151912 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C152262) *
              C152193 * C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C152262 +
           (C23543 + C23544 + C23545) * C151912) *
              C152193 * C151983 * C1435 -
          ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 + C23167 * C1444 +
            C24957 + C24957 + C23161 * C1460 + C23165 * C1441 + C24958 +
            C24958 + C23160 * C1457) *
               C151912 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C152262) *
              C152193 * C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C152262 +
           (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 + C23167 * C7980 +
            C24966 + C24966 + C23161 * C7986 + C23169 * C24950 + C24967 +
            C24967 + C23162 * C24954) *
               C151912) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C15311 * C152262 + C670 * C151912) * C45711 +
           (C15312 * C152262 + C671 * C151912) * C45712) *
              C151983 * C151965 * C129 -
          ((C672 * C151912 + C671 * C152262) * C45712 +
           (C669 * C151912 + C670 * C152262) * C45711 +
           (C194 * C151912 + C193 * C152262) * C45710) *
              C151983 * C151965 * C130 +
          ((C194 * C152262 + C195 * C151912) * C45710 +
           (C669 * C152262 + C668 * C151912) * C45711 +
           (C672 * C152262 + C673 * C151912) * C45712) *
              C151983 * C151965 * C131 -
          ((C675 * C151912 + C673 * C152262) * C45712 +
           (C674 * C151912 + C668 * C152262) * C45711 +
           (C196 * C151912 + C195 * C152262) * C45710) *
              C151983 * C151965 * C132 +
          ((C196 * C152262 + C197 * C151912) * C45710 +
           (C674 * C152262 + C961 * C151912) * C45711 +
           (C675 * C152262 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
               C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C15311 * C152262 + C670 * C151912) * C45711 +
            (C15312 * C152262 + C671 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2806 * C151912 + C16598 * C152262) * C45712 +
            (C1196 * C151912 + C16008 * C152262) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C347 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C1196 * C152262 + C1197 * C151912) * C45711 +
            (C2806 * C152262 + C2805 * C151912) * C45712) *
               C151983 * C152357 -
           ((C672 * C151912 + C671 * C152262) * C45712 +
            (C669 * C151912 + C670 * C152262) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C152371 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C348 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C669 * C152262 + C668 * C151912) * C45711 +
            (C672 * C152262 + C673 * C151912) * C45712) *
               C151983 * C152371 -
           ((C2804 * C151912 + C2805 * C152262) * C45712 +
            (C1198 * C151912 + C1197 * C152262) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C152357 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
             C193 * C151912) *
                C45710 +
            (C46150 + C46151) * C45711 + C46168 * C45712) *
               C151983 * C1345 -
           ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
                C45710) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
             C434 * C151912) *
                C45710 +
            (C16599 * C152262 + C2033 * C151912) * C45711 +
            (C16602 * C152262 + C16601 * C151912) * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152262 + C432 * C151912) * C45710 +
            (C46857 + C46858) * C45711 + (C46859 + C46860) * C45712) *
               C151983 * C1346 -
           (C46169 * C45712 + (C46157 + C46156) * C45711 +
            (C194 * C151912 + C193 * C152262) * C45710) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C152262) * C45712 +
            (C2032 * C151912 + C2033 * C152262) * C45711 +
            (C435 * C151912 + C434 * C152262) * C45710) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152262 + C195 * C151912) * C45710 +
            (C46162 + C46163) * C45711 + C46170 * C45712) *
               C151983 * C1345 -
           ((C46864 + C46863) * C45712 + (C46862 + C46861) * C45711 +
            (C431 * C151912 + C432 * C152262) * C45710) *
               C151983 * C1346 +
           ((C435 * C152262 + C436 * C151912) * C45710 +
            (C2032 * C152262 + C2031 * C151912) * C45711 +
            (C16600 * C152262 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152262 +
            C193 * C151912) *
               C45710 +
           (C46150 + C46151) * C45711 + C46168 * C45712) *
              C151983 * C1433 -
          ((C46856 + C46855) * C45712 + (C46854 + C46853) * C45711 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152262) *
               C45710) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152262 +
            C434 * C151912) *
               C45710 +
           (C16599 * C152262 + C2033 * C151912) * C45711 +
           (C16602 * C152262 + C16601 * C151912) * C45712) *
              C151983 * C1435 -
          (((C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C151912 +
            (C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C152262) *
               C45712 +
           (C16811 * C151912 + C17308 * C152262) * C45711 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152262) *
               C45710) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152262 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C45710 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152262 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C45711 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C152262 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152024 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152031 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C3719) *
              C151942 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152031 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152024 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C3719) *
              C151951 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152024 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152031 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152024 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152031 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C3719) *
              C151942 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152031 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152024 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C3719) *
              C151951 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152024 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152031 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C152024 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152031 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C151983 * C3719) *
              C151942 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
               C151983 * C152031 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152024 -
           ((C56259 + C56258) * C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C3719) *
              C151951 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C152024 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152031 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152024 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152031 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C152286 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C3719) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C152024 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152031 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152024 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C152031 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C152286 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C3719) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C152024 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152031 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152286 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C152024 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152286) *
               C152031 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C151907 * C45710 +
             (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
                C152286 -
            ((C55758 + C55759) * C151907 * C45712 +
             (C55757 + C55756) * C151907 * C45711 +
             (C55755 + C55754) * C151907 * C45710) *
                C152070) *
               C3719) *
              C3375 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152286) *
               C152024 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C152286 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152031 +
           (((C8773 + C8772) * C151907 * C45710 +
             (C56258 + C56259) * C151907 * C45711 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151907 * C45712) *
                C152070 -
            ((C56259 + C56258) * C151907 * C45712 +
             (C8772 + C8773) * C151907 * C45711 +
             (C6586 + C6585) * C151907 * C45710) *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C3235 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C152028) *
                  C152377 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                C7089 * C6222) *
                   C152193 * C151983 * C152028 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C3235) *
                  C152370 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C151983 * C3235 -
               ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
                C6593 * C6220) *
                   C152193 * C151983 * C152028) *
                  C152355 +
              ((C7089 * C6220 + (C7101 + C7100) * C6221 +
                (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
                 C7095 + C7095 + C152179 * C385) *
                    C6222) *
                   C152193 * C151983 * C152028 -
               ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 +
                C6293 * C6220) *
                   C152193 * C151983 * C3235) *
                  C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C152378 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C152374 +
               ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C151983 * C152362 -
               ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
                (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 +
                 C6223 * C1442 + C7994 + C7994 + C152299 * C1458) *
                    C6220) *
                   C152193 * C151983 * C152337) *
                  C3375 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                C7089 * C6222) *
                   C152193 * C151983 * C152374 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C152378 -
               ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                (C6586 + C6585) * C6220) *
                   C152193 * C151983 * C152362 +
               ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
                (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 +
                 C6225 * C1446 + C8449 + C8449 + C152179 * C1462) *
                    C6222) *
                   C152193 * C151983 * C152337) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152372 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152359 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C152330) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152359 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152372 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C152330) *
               C152028) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152359 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152372 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C152330) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152372 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152359 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C152377 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C3235) *
              C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C152355 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152374 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152362 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C3375 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152374 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152362 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152372 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152359 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C152330) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152359 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152372 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C152330) *
               C152028) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152359 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152372 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C152330) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152372 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152359 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C3235 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152028) *
              C152377 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
               C151983 * C152028 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C3235) *
              C152370 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C3235 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152028) *
              C152355 +
          ((C7089 * C151907 * C45710 + (C7638 + C7637) * C151907 * C45711 +
            (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
             C9861 + C9861 + C152179 * C1652) *
                C151907 * C45712) *
               C151983 * C152028 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C152378 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152374 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C151983 * C152362 -
           ((C56475 + C56474) * C151907 * C45712 +
            (C56473 + C56472) * C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C151983 * C152337) *
              C3375 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
               C151983 * C152374 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152378 -
           ((C56259 + C56258) * C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152362 +
           ((C8461 + C8460) * C151907 * C45710 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C151907 * C45711 +
            (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
             C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                C151907 * C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152372 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152359 +
            (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
             C57064 * C45712) *
                C152330) *
               C3235 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152359 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152372 -
            ((C57783 + C57784) * C151907 * C45712 +
             (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
                C152330) *
               C152028) *
              C3375 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152359 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152372 -
            ((C57575 + C57576) * C151907 * C45712 +
             (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
                C152330) *
               C3235 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C152372 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152359 +
            (C57362 * C45710 + (C57368 + C57367) * C151907 * C45711 +
             (C6223 * C9541 + C57360 + C57360 + C152299 * C9547 +
              C6225 * C26494 + C57361 + C57361 + C152179 * C26498) *
                 C151907 * C45712) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152028) *
              C151942 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C151951 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C152286 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C152028) *
              C151942 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C152286 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C3235 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152286 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C3235 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152286) *
               C152028) *
              C151942 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152286) *
               C3235 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C152286 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152028) *
              C151951 +
          (((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
             C54428 * C45712) *
                C152286 -
            ((C10086 + C10087) * C151907 * C45712 +
             (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
                C152070) *
               C3235 +
           ((C7639 * C151907 * C45710 + (C9871 + C9870) * C151907 * C45711 +
             (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
              C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                 C151907 * C45712) *
                C152070 -
            ((C9870 + C9871) * C151907 * C45712 +
             (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152378 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152374 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152362 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152374 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152378 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152362 +
           ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
            (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 + C6225 * C1446 +
             C8449 + C8449 + C152179 * C1462) *
                C6222) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C3235 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152028 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C3235) *
              C152370 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C3235 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152028) *
              C152355 +
          ((C7089 * C6220 + (C7101 + C7100) * C6221 +
            (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
             C7095 + C7095 + C152179 * C385) *
                C6222) *
               C152193 * C151983 * C152028 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C152377 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C3235) *
              C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C152355 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152374 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152362 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C3375 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152374 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152362 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C3235 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152028) *
              C152377 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
               C151983 * C152028 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C3235) *
              C152370 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C3235 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152028) *
              C152355 +
          ((C7089 * C151907 * C45710 + (C7638 + C7637) * C151907 * C45711 +
            (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
             C9861 + C9861 + C152179 * C1652) *
                C151907 * C45712) *
               C151983 * C152028 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C152378 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152374 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C151983 * C152362 -
           ((C56475 + C56474) * C151907 * C45712 +
            (C56473 + C56472) * C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C151983 * C152337) *
              C3375 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
               C151983 * C152374 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152378 -
           ((C56259 + C56258) * C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152362 +
           ((C8461 + C8460) * C151907 * C45710 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C151907 * C45711 +
            (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
             C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                C151907 * C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152024 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152031 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C4241 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C3719) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152024 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152031 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152024 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152031 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C4241 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C3719) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C152024 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152031 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C4241 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C152024 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C4241) *
               C152031 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C151907 * C45710 +
             (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
                C4241 -
            ((C55758 + C55759) * C151907 * C45712 +
             (C55757 + C55756) * C151907 * C45711 +
             (C55755 + C55754) * C151907 * C45710) *
                C152070) *
               C3719) *
              C152271 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C4241) *
               C152024 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C4241 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152031 +
           (((C8773 + C8772) * C151907 * C45710 +
             (C56258 + C56259) * C151907 * C45711 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151907 * C45712) *
                C152070 -
            ((C56259 + C56258) * C151907 * C45712 +
             (C8772 + C8773) * C151907 * C45711 +
             (C6586 + C6585) * C151907 * C45710) *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152066 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152073 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C4913) *
              C152024 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152073 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152066 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C4913) *
              C152031 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152066 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152073 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152066 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152073 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C4913) *
              C152024 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152073 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152066 -
           ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C4913) *
              C152031 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152066 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152073 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152066 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152073 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            C57064 * C45712) *
               C4913) *
              C152024 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
               C152073 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C152066 -
           ((C57783 + C57784) * C151907 * C45712 +
            (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
               C4913) *
              C152031 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C152066 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C152073 +
           (C55761 * C45710 + (C55759 + C55758) * C151907 * C45711 +
            (C6223 * C26493 + C55733 + C55733 + C152299 * C26497 +
             C6225 * C33837 + C55734 + C55734 + C152179 * C33839) *
                C151907 * C45712) *
               C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                  C6229 + C6229 + C152179 * C377) *
                     C6220 +
                 (C6282 + C6283) * C6221 + C6292 * C6222) *
                    C152193 * C4241 -
                (C6893 * C6222 + (C6883 + C6884) * C6221 +
                 (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                  C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                     C6220) *
                    C152193 * C152070) *
                   C3235 +
               (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                  C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                     C6220 +
                 (C7633 + C7634) * C6221 + C7639 * C6222) *
                    C152193 * C152070 -
                (C6593 * C6222 + (C6583 + C6584) * C6221 +
                 (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                  C6526 + C6526 + C152299 * C377) *
                     C6220) *
                    C152193 * C4241) *
                   C152028) *
                  C152368 +
              ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                 C7296 * C6222) *
                    C152193 * C152070 -
                (C6293 * C6222 + (C6285 + C6284) * C6221 +
                 (C6283 + C6282) * C6220) *
                    C152193 * C4241) *
                   C3235 +
               (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                 C7089 * C6222) *
                    C152193 * C4241 -
                ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
                 (C7634 + C7633) * C6220) *
                    C152193 * C152070) *
                   C152028) *
                  C152353 +
              (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                    C152193 * C4241 -
                ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
                 C6893 * C6220) *
                    C152193 * C152070) *
                   C3235 +
               ((C7639 * C6220 + (C7638 + C7637) * C6221 +
                 (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 +
                  C6225 * C2014 + C7620 + C7620 + C152179 * C2016) *
                     C6222) *
                    C152193 * C152070 -
                ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
                 C6593 * C6220) *
                    C152193 * C4241) *
                   C152028) *
                  C152321) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C4241 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C152070) *
                  C152378 +
              (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                 C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                    C6220 +
                (C7633 + C7634) * C6221 + C7639 * C6222) *
                   C152193 * C152070 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C4241) *
                  C152374 +
              (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C4241 -
               ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
                (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 +
                 C6223 * C1624 + C8239 + C8239 + C152299 * C1648) *
                    C6220) *
                   C152193 * C152070) *
                  C152362 +
              (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 +
                 C6225 * C8967 + C8978 + C8978 + C152179 * C8973) *
                    C6220 +
                (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 +
                 C6225 * C8968 + C8980 + C8980 + C152179 * C8974) *
                    C6221 +
                (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 +
                 C6225 * C8969 + C8982 + C8982 + C152179 * C8975) *
                    C6222) *
                   C152193 * C152070 -
               ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
                (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 +
                 C6223 * C1442 + C7994 + C7994 + C152299 * C1458) *
                    C6220) *
                   C152193 * C4241) *
                  C152337) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152379 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152376 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152365 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C3235 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152376 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152379 -
           ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152365 +
           ((C6223 * C3089 + C10293 + C10293 + C152299 * C3097 +
             C6225 * C10283 + C10294 + C10294 + C152179 * C10289) *
                C6220 +
            (C6223 * C3090 + C10295 + C10295 + C152299 * C3098 +
             C6225 * C10284 + C10296 + C10296 + C152179 * C10290) *
                C6221 +
            (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
             C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                C6222) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152368 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C152353 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C4241 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C152378 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C4241) *
              C152374 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C4241 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C152362 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152379 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152376 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152365 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C3235 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152376 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152379 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152365 +
           (C31752 * C3089 + C34314 + C34314 + C31747 * C3097 +
            C31754 * C10283 + C34315 + C34315 + C31748 * C10289 +
            C31756 * C27225 + C34316 + C34316 + C31749 * C27229 +
            C31758 * C34310 + C34317 + C34317 + C31750 * C34312) *
               C151907 * C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C4241 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C3235 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C4241) *
               C152028) *
              C152368 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C4241) *
               C3235 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C4241 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152028) *
              C152353 +
          (((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
             C54428 * C45712) *
                C4241 -
            ((C10086 + C10087) * C151907 * C45712 +
             (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
                C152070) *
               C3235 +
           ((C7639 * C151907 * C45710 + (C9871 + C9870) * C151907 * C45711 +
             (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
              C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                 C151907 * C45712) *
                C152070 -
            ((C9870 + C9871) * C151907 * C45712 +
             (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C4241 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C152378 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
               C152070 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C4241) *
              C152374 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C4241 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C152070) *
              C152362 +
          (((C56472 + C56473) * C151907 * C45710 +
            (C56474 + C56475) * C151907 * C45711 +
            (C6223 * C27225 + C56462 + C56462 + C152299 * C27229 +
             C6225 * C34310 + C56463 + C56463 + C152179 * C34312) *
                C151907 * C45712) *
               C152070 -
           ((C56475 + C56474) * C151907 * C45712 +
            (C56473 + C56472) * C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152379 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152376 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            C57064 * C45712) *
               C152365 -
           ((C57061 + C57062) * C151907 * C45712 +
            (C57060 + C57059) * C151907 * C45711 + C57050 * C45710) *
               C152343) *
              C3235 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
               C152376 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C152379 -
           ((C57783 + C57784) * C151907 * C45712 +
            (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
               C152365 +
           (C57778 * C45710 + (C57784 + C57783) * C151907 * C45711 +
            (C6223 * C40425 + C57776 + C57776 + C152299 * C40429 +
             C6225 * C40426 + C57777 + C57777 + C152179 * C40430) *
                C151907 * C45712) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152066 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152073 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C4913) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152073 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152066 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C4913) *
               C152028) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152073 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152066 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C4913) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152066 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152073 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152066 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152073 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C4913) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152073 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152066 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C4913) *
               C152028) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152073 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152066 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C4913) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152066 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152073 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152066 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152073 +
            (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
             C57064 * C45712) *
                C4913) *
               C3235 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152073 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152066 -
            ((C57783 + C57784) * C151907 * C45712 +
             (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
                C4913) *
               C152028) *
              C152271 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152073 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152066 -
            ((C57575 + C57576) * C151907 * C45712 +
             (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
                C4913) *
               C3235 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C152066 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152073 +
            (C57362 * C45710 + (C57368 + C57367) * C151907 * C45711 +
             (C6223 * C9541 + C57360 + C57360 + C152299 * C9547 +
              C6225 * C26494 + C57361 + C57361 + C152179 * C26498) *
                 C151907 * C45712) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C4241 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C152378 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152070 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C4241) *
              C152374 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C4241 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152070) *
              C152362 +
          (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 + C6225 * C8967 +
             C8978 + C8978 + C152179 * C8973) *
                C6220 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C6221 +
            (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
             C8982 + C8982 + C152179 * C8975) *
                C6222) *
               C152193 * C152070 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C4241 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C3235 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152368 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C152353 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C4241 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C152378 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C4241) *
              C152374 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C4241 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C152362 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C4241 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C3235 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C4241) *
               C152028) *
              C152368 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C4241) *
               C3235 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C4241 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152028) *
              C152353 +
          (((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
             C54428 * C45712) *
                C4241 -
            ((C10086 + C10087) * C151907 * C45712 +
             (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
                C152070) *
               C3235 +
           ((C7639 * C151907 * C45710 + (C9871 + C9870) * C151907 * C45711 +
             (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
              C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                 C151907 * C45712) *
                C152070 -
            ((C9870 + C9871) * C151907 * C45712 +
             (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C4241 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C152378 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
               C152070 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C4241) *
              C152374 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C4241 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C152070) *
              C152362 +
          (((C56472 + C56473) * C151907 * C45710 +
            (C56474 + C56475) * C151907 * C45711 +
            (C6223 * C27225 + C56462 + C56462 + C152299 * C27229 +
             C6225 * C34310 + C56463 + C56463 + C152179 * C34312) *
                C151907 * C45712) *
               C152070 -
           ((C56475 + C56474) * C151907 * C45712 +
            (C56473 + C56472) * C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C152285 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C152028) *
                  C807 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                C7089 * C6222) *
                   C152193 * C151983 * C152028 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C152285) *
                  C808 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C151983 * C152285 -
               ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
                C6593 * C6220) *
                   C152193 * C151983 * C152028) *
                  C809 +
              ((C7089 * C6220 + (C7101 + C7100) * C6221 +
                (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
                 C7095 + C7095 + C152179 * C385) *
                    C6222) *
                   C152193 * C151983 * C152028 -
               ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 +
                C6293 * C6220) *
                   C152193 * C151983 * C152285) *
                  C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C1795 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C1796 +
               ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C151983 * C1797 -
               ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
                (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 +
                 C6223 * C1442 + C7994 + C7994 + C152299 * C1458) *
                    C6220) *
                   C152193 * C151983 * C152337) *
                  C152271 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                C7089 * C6222) *
                   C152193 * C151983 * C1796 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C1795 -
               ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                (C6586 + C6585) * C6220) *
                   C152193 * C151983 * C1797 +
               ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
                (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 +
                 C6225 * C1446 + C8449 + C8449 + C152179 * C1462) *
                    C6222) *
                   C152193 * C151983 * C152337) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C2325 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C2326 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C152330) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C2326 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C2325 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C152330) *
               C152028) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C2326 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C2325 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C152330) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C2325 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C2326 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C807 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152285) *
              C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C809 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1796 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C1797 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C152271 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1796 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C1797 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C2325 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C2326 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C152330) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C2326 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C2325 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C152330) *
               C152028) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C2326 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C2325 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C152330) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C2325 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C2326 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C152285 -
           ((C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C151907 * C45712 +
            (C6225 * C1624 + C7600 + C7600 + C152179 * C1648 + C6223 * C1155 +
             C7599 + C7599 + C152299 * C1167) *
                C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152028) *
              C807 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C152028 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152285) *
              C808 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C152285 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152028) *
              C809 +
          ((C7089 * C151907 * C45710 + (C7638 + C7637) * C151907 * C45711 +
            (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
             C9861 + C9861 + C152179 * C1652) *
                C151907 * C45712) *
               C151983 * C152028 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C1795 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C1796 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C151983 * C1797 -
           ((C6225 * C25185 + C55488 + C55488 + C152179 * C25189 +
             C6223 * C8218 + C55489 + C55489 + C152299 * C8224) *
                C151907 * C45712 +
            (C6225 * C8967 + C8978 + C8978 + C152179 * C8973 + C6223 * C2163 +
             C8977 + C8977 + C152299 * C2171) *
                C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C151983 * C152337) *
              C152271 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C1796 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C1795 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C1797 +
           ((C8461 + C8460) * C151907 * C45710 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C151907 * C45711 +
            (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
             C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                C151907 * C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C2325 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C2326 +
            (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
             C57064 * C45712) *
                C152330) *
               C152285 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 +
             (C55752 + C55753) * C151907 * C45712) *
                C2326 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C2325 -
            ((C6225 * C26493 + C55717 + C55717 + C152179 * C26497 +
              C6223 * C9540 + C55718 + C55718 + C152299 * C9546) *
                 C151907 * C45712 +
             (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
                C152330) *
               C152028) *
              C152271 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 +
             (C10089 + C10088) * C151907 * C45712) *
                C2326 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C2325 -
            ((C6225 * C9541 + C9559 + C9559 + C152179 * C9547 + C6223 * C2566 +
              C9558 + C9558 + C152299 * C2582) *
                 C151907 * C45712 +
             (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
                C152330) *
               C152285 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C2325 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C2326 +
            (C57362 * C45710 + (C57368 + C57367) * C151907 * C45711 +
             (C6223 * C9541 + C57360 + C57360 + C152299 * C9547 +
              C6225 * C26494 + C57361 + C57361 + C152179 * C26498) *
                 C151907 * C45712) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                  C6229 + C6229 + C152179 * C377) *
                     C6220 +
                 (C6282 + C6283) * C6221 + C6292 * C6222) *
                    C152193 * C152286 -
                (C6893 * C6222 + (C6883 + C6884) * C6221 +
                 (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                  C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                     C6220) *
                    C152193 * C152070) *
                   C152285 +
               (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                  C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                     C6220 +
                 (C7633 + C7634) * C6221 + C7639 * C6222) *
                    C152193 * C152070 -
                (C6593 * C6222 + (C6583 + C6584) * C6221 +
                 (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                  C6526 + C6526 + C152299 * C377) *
                     C6220) *
                    C152193 * C152286) *
                   C152028) *
                  C347 +
              ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                 C7296 * C6222) *
                    C152193 * C152070 -
                (C6293 * C6222 + (C6285 + C6284) * C6221 +
                 (C6283 + C6282) * C6220) *
                    C152193 * C152286) *
                   C152285 +
               (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                 C7089 * C6222) *
                    C152193 * C152286 -
                ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
                 (C7634 + C7633) * C6220) *
                    C152193 * C152070) *
                   C152028) *
                  C348 +
              (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                    C152193 * C152286 -
                ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
                 C6893 * C6220) *
                    C152193 * C152070) *
                   C152285 +
               ((C7639 * C6220 + (C7638 + C7637) * C6221 +
                 (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 +
                  C6225 * C2014 + C7620 + C7620 + C152179 * C2016) *
                     C6222) *
                    C152193 * C152070 -
                ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
                 C6593 * C6220) *
                    C152193 * C152286) *
                   C152028) *
                  C152321) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C152286 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C152070) *
                  C1795 +
              (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                 C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                    C6220 +
                (C7633 + C7634) * C6221 + C7639 * C6222) *
                   C152193 * C152070 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C152286) *
                  C1796 +
              (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C152286 -
               ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
                (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 +
                 C6223 * C1624 + C8239 + C8239 + C152299 * C1648) *
                    C6220) *
                   C152193 * C152070) *
                  C1797 +
              (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 +
                 C6225 * C8967 + C8978 + C8978 + C152179 * C8973) *
                    C6220 +
                (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 +
                 C6225 * C8968 + C8980 + C8980 + C152179 * C8974) *
                    C6221 +
                (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 +
                 C6225 * C8969 + C8982 + C8982 + C152179 * C8975) *
                    C6222) *
                   C152193 * C152070 -
               ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
                (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 +
                 C6223 * C1442 + C7994 + C7994 + C152299 * C1458) *
                    C6220) *
                   C152193 * C152286) *
                  C152337) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2936 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2937 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C2938 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C152285 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C2937 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C2936 -
           ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C2938 +
           ((C6223 * C3089 + C10293 + C10293 + C152299 * C3097 +
             C6225 * C10283 + C10294 + C10294 + C152179 * C10289) *
                C6220 +
            (C6223 * C3090 + C10295 + C10295 + C152299 * C3098 +
             C6225 * C10284 + C10296 + C10296 + C152179 * C10290) *
                C6221 +
            (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
             C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                C6222) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152028) *
              C347 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C348 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C152286 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C1795 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152286) *
              C1796 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152286 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C1797 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2936 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2937 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C2938 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C152285 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C2937 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C2936 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C2938 +
           (C31752 * C3089 + C34314 + C34314 + C31747 * C3097 +
            C31754 * C10283 + C34315 + C34315 + C31748 * C10289 +
            C31756 * C27225 + C34316 + C34316 + C31749 * C27229 +
            C31758 * C34310 + C34317 + C34317 + C31750 * C34312) *
               C151907 * C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152286 -
            ((C54446 + C54447) * C151907 * C45712 +
             (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C152285 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 +
             (C6223 * C3089 + C10293 + C10293 + C152299 * C3097 +
              C6225 * C10283 + C10294 + C10294 + C152179 * C10289) *
                 C151907 * C45712) *
                C152070 -
            ((C55147 + C55146) * C151907 * C45712 +
             (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152286) *
               C152028) *
              C347 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 +
             (C10089 + C10088) * C151907 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152286) *
               C152285 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 +
             (C9873 + C9872) * C151907 * C45712) *
                C152286 -
            ((C6225 * C10284 + C10296 + C10296 + C152179 * C10290 +
              C6223 * C3090 + C10295 + C10295 + C152299 * C3098) *
                 C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152028) *
              C348 +
          (((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
             C54428 * C45712) *
                C152286 -
            ((C10086 + C10087) * C151907 * C45712 +
             (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
                C152070) *
               C152285 +
           ((C7639 * C151907 * C45710 + (C9871 + C9870) * C151907 * C45711 +
             (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
              C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                 C151907 * C45712) *
                C152070 -
            ((C9870 + C9871) * C151907 * C45712 +
             (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152286 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C1795 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 +
            (C55752 + C55753) * C151907 * C45712) *
               C152070 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C152286) *
              C1796 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C152286 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C152070) *
              C1797 +
          (((C56472 + C56473) * C151907 * C45710 +
            (C56474 + C56475) * C151907 * C45711 +
            (C6223 * C27225 + C56462 + C56462 + C152299 * C27229 +
             C6225 * C34310 + C56463 + C56463 + C152179 * C34312) *
                C151907 * C45712) *
               C152070 -
           ((C56475 + C56474) * C151907 * C45712 +
            (C56473 + C56472) * C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C2936 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C2937 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            C57064 * C45712) *
               C2938 -
           ((C57061 + C57062) * C151907 * C45712 +
            (C57060 + C57059) * C151907 * C45711 + C57050 * C45710) *
               C152343) *
              C152285 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
               C2937 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C2936 -
           ((C57783 + C57784) * C151907 * C45712 +
            (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
               C2938 +
           (C57778 * C45710 + (C57784 + C57783) * C151907 * C45711 +
            (C6223 * C40425 + C57776 + C57776 + C152299 * C40429 +
             C6225 * C40426 + C57777 + C57777 + C152179 * C40430) *
                C151907 * C45712) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                C6229 + C6229 + C152179 * C377) *
                   C6220 +
               (C6282 + C6283) * C6221 + C6292 * C6222) *
                  C152193 * C151983 * C151965 * C129 -
              (C6293 * C6222 + (C6285 + C6284) * C6221 +
               (C6283 + C6282) * C6220) *
                  C152193 * C151983 * C151965 * C130 +
              (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                  C152193 * C151983 * C151965 * C131 -
              ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 +
               C6293 * C6220) *
                  C152193 * C151983 * C151965 * C132 +
              (C6294 * C6220 + (C6291 + C6290) * C6221 +
               (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
                C6261 + C6261 + C152179 * C813) *
                   C6222) *
                  C152193 * C151983 * C151965 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C152371 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C152357 +
               ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C151983 * C152327) *
                  C347 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                (C6589 + C6590) * C6222) *
                   C152193 * C151983 * C152357 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C152371 -
               ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                (C6586 + C6585) * C6220) *
                   C152193 * C151983 * C152327) *
                  C348 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C151983 * C152371 -
               ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
                 C6554 + C6554 + C152299 * C382) *
                    C6222 +
                (C6590 + C6589) * C6221 + C6593 * C6220) *
                   C152193 * C151983 * C152357 +
               (C6594 * C6220 + (C6592 + C6591) * C6221 +
                (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
                 C6556 + C6556 + C152179 * C1803) *
                    C6222) *
                   C152193 * C151983 * C152327) *
                  C152321) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C152372 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C152359 +
               ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
                 C6828 + C6828 + C152179 * C1644) *
                    C6220 +
                (C6885 + C6886) * C6221 + C6894 * C6222) *
                   C152193 * C152330) *
                  C151965 * C347 +
              (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                (C6889 + C6890) * C6222) *
                   C152193 * C152359 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C152372 -
               ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
                (C6886 + C6885) * C6220) *
                   C152193 * C152330) *
                  C151965 * C348 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C152372 -
               ((C6225 * C1159 + C6853 + C6853 + C152179 * C1171 +
                 C6223 * C595 + C6854 + C6854 + C152299 * C619) *
                    C6222 +
                (C6890 + C6889) * C6221 + C6893 * C6220) *
                   C152193 * C152359 +
               (C6894 * C6220 + (C6892 + C6891) * C6221 +
                (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
                 C6856 + C6856 + C152179 * C2789) *
                    C6222) *
                   C152193 * C152330) *
                  C151965 * C152321) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C1345 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C1346 +
               ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C151983 * C152327) *
                  C152368 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                C7089 * C6222) *
                   C152193 * C151983 * C1346 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C1345 -
               ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                (C6586 + C6585) * C6220) *
                   C152193 * C151983 * C152327) *
                  C152353 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C151983 * C1345 -
               ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
                C6593 * C6220) *
                   C152193 * C151983 * C1346 +
               (C6594 * C6220 + (C6592 + C6591) * C6221 +
                (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
                 C6556 + C6556 + C152179 * C1803) *
                    C6222) *
                   C152193 * C151983 * C152327) *
                  C152321) -
         0.25 * std::pow(Pi, 2.5) *
             (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                C6229 + C6229 + C152179 * C377) *
                   C6220 +
               (C6282 + C6283) * C6221 + C6292 * C6222) *
                  C152193 * C151983 * C1433 -
              (C6593 * C6222 + (C6583 + C6584) * C6221 +
               (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                C6526 + C6526 + C152299 * C377) *
                   C6220) *
                  C152193 * C151983 * C1434 +
              ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                C6528 + C6528 + C152179 * C1458) *
                   C6220 +
               (C6585 + C6586) * C6221 + C6594 * C6222) *
                  C152193 * C151983 * C1435 -
              ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 +
                C6223 * C1440 + C7990 + C7990 + C152299 * C1456) *
                   C6222 +
               (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 +
                C6223 * C1441 + C7992 + C7992 + C152299 * C1457) *
                   C6221 +
               (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 +
                C6223 * C1442 + C7994 + C7994 + C152299 * C1458) *
                   C6220) *
                  C152193 * C151983 * C1436 +
              ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 +
                C6225 * C7979 + C7996 + C7996 + C152179 * C7985) *
                   C6220 +
               (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 +
                C6225 * C7980 + C7998 + C7998 + C152179 * C7986) *
                   C6221 +
               (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 +
                C6225 * C7981 + C8000 + C8000 + C152179 * C7987) *
                   C6222) *
                  C152193 * C151983 * C1437) *
             C151937 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C152372 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C152359 +
               ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
                 C6828 + C6828 + C152179 * C1644) *
                    C6220 +
                (C6885 + C6886) * C6221 + C6894 * C6222) *
                   C152193 * C152330) *
                  C1345 +
              (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                 C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                    C6220 +
                (C7633 + C7634) * C6221 + C7639 * C6222) *
                   C152193 * C152359 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C152372 -
               ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 +
                 C6223 * C1618 + C8229 + C8229 + C152299 * C1642) *
                    C6222 +
                (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 +
                 C6223 * C1619 + C8231 + C8231 + C152299 * C1643) *
                    C6221 +
                (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 +
                 C6223 * C1620 + C8233 + C8233 + C152299 * C1644) *
                    C6220) *
                   C152193 * C152330) *
                  C1346 +
              (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C152372 -
               ((C6225 * C2165 + C8234 + C8234 + C152179 * C2173 +
                 C6223 * C1622 + C8235 + C8235 + C152299 * C1646) *
                    C6222 +
                (C6225 * C2164 + C8236 + C8236 + C152179 * C2172 +
                 C6223 * C1623 + C8237 + C8237 + C152299 * C1647) *
                    C6221 +
                (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 +
                 C6223 * C1624 + C8239 + C8239 + C152299 * C1648) *
                    C6220) *
                   C152193 * C152359 +
               ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 +
                 C6225 * C8218 + C8241 + C8241 + C152179 * C8224) *
                    C6220 +
                (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 +
                 C6225 * C8219 + C8243 + C8243 + C152179 * C8225) *
                    C6221 +
                (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 +
                 C6225 * C8220 + C8245 + C8245 + C152179 * C8226) *
                    C6222) *
                   C152193 * C152330) *
                  C152327) *
             C151937 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C2325 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C2326 +
               ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
                 C6828 + C6828 + C152179 * C1644) *
                    C6220 +
                (C6885 + C6886) * C6221 + C6894 * C6222) *
                   C152193 * C152330) *
                  C151965 * C152368 +
              (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                C7296 * C6222) *
                   C152193 * C2326 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C2325 -
               ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
                (C6886 + C6885) * C6220) *
                   C152193 * C152330) *
                  C151965 * C152353 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C2325 -
               ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
                C6893 * C6220) *
                   C152193 * C2326 +
               (C6894 * C6220 + (C6892 + C6891) * C6221 +
                (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
                 C6856 + C6856 + C152179 * C2789) *
                    C6222) *
                   C152193 * C152330) *
                  C151965 * C152321) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C2325 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C2326 +
               ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
                 C6828 + C6828 + C152179 * C1644) *
                    C6220 +
                (C6885 + C6886) * C6221 + C6894 * C6222) *
                   C152193 * C152330) *
                  C152371 +
              (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                 C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                    C6220 +
                (C7633 + C7634) * C6221 + C7639 * C6222) *
                   C152193 * C2326 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C2325 -
               ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 +
                 C6223 * C1618 + C8229 + C8229 + C152299 * C1642) *
                    C6222 +
                (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 +
                 C6223 * C1619 + C8231 + C8231 + C152299 * C1643) *
                    C6221 +
                (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 +
                 C6223 * C1620 + C8233 + C8233 + C152299 * C1644) *
                    C6220) *
                   C152193 * C152330) *
                  C152357 +
              (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C2325 -
               ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
                (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 +
                 C6223 * C1624 + C8239 + C8239 + C152299 * C1648) *
                    C6220) *
                   C152193 * C2326 +
               ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 +
                 C6225 * C8218 + C8241 + C8241 + C152179 * C8224) *
                    C6220 +
                (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 +
                 C6225 * C8219 + C8243 + C8243 + C152179 * C8225) *
                    C6221 +
                (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 +
                 C6225 * C8220 + C8245 + C8245 + C152179 * C8226) *
                    C6222) *
                   C152193 * C152330) *
                  C152327) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C2556 -
          (C6893 * C6222 + (C6883 + C6884) * C6221 +
           (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
            C6826 + C6826 + C152299 * C614) *
               C6220) *
              C152193 * C2557 +
          ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
            C6828 + C6828 + C152179 * C1644) *
               C6220 +
           (C6885 + C6886) * C6221 + C6894 * C6222) *
              C152193 * C2558 -
          ((C6225 * C3091 + C9550 + C9550 + C152179 * C3099 + C6223 * C2562 +
            C9551 + C9551 + C152299 * C2578) *
               C6222 +
           (C6225 * C3090 + C9552 + C9552 + C152179 * C3098 + C6223 * C2563 +
            C9553 + C9553 + C152299 * C2579) *
               C6221 +
           (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
            C9555 + C9555 + C152299 * C2580) *
               C6220) *
              C152193 * C2559 +
          ((C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
            C9557 + C9557 + C152179 * C9546) *
               C6220 +
           (C6223 * C2566 + C9558 + C9558 + C152299 * C2582 + C6225 * C9541 +
            C9559 + C9559 + C152179 * C9547) *
               C6221 +
           (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
            C9561 + C9561 + C152179 * C9548) *
               C6222) *
              C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C347 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152359 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152372 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152372 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152359 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C1345 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152359 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152372 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C1346 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152372 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152359 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C152368 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C2326 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C2325 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C2325 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C2326 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C152371 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C2326 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C2325 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C152357 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C2325 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C2326 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C2556 -
          (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
           C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 + C32099 +
           C31748 * C1167 + C31752 * C590 + C32100 + C32100 + C31747 * C614) *
              C151907 * C152193 * C2557 +
          (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
           C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 + C32103 +
           C31749 * C1649 + C31758 * C8218 + C32104 + C32104 + C31750 * C8224) *
              C151907 * C152193 * C2558 -
          (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
           C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
           C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
           C33844 + C33844 + C31747 * C2580) *
              C151907 * C152193 * C2559 +
          (C31752 * C2565 + C33845 + C33845 + C31747 * C2581 + C31754 * C9540 +
           C33846 + C33846 + C31748 * C9546 + C31756 * C26493 + C33847 +
           C33847 + C31749 * C26497 + C31758 * C33837 + C33848 + C33848 +
           C31750 * C33839) *
              C151907 * C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
            C6825 + C6825 + C152179 * C1167) *
               C151907 * C45711 +
           (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
            C6828 + C6828 + C152179 * C1644) *
               C151907 * C45712) *
              C151983 * C151965 * C129 -
          ((C6886 + C6885) * C151907 * C45712 +
           (C6883 + C6884) * C151907 * C45711 +
           (C6283 + C6282) * C151907 * C45710) *
              C151983 * C151965 * C130 +
          (C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
           C6894 * C151907 * C45712) *
              C151983 * C151965 * C131 -
          ((C6891 + C6892) * C151907 * C45712 +
           (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
              C151983 * C151965 * C132 +
          (C6294 * C151907 * C45710 + (C7308 + C7307) * C151907 * C45711 +
           (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
            C6856 + C6856 + C152179 * C2789) *
               C151907 * C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
             C6825 + C6825 + C152179 * C1167) *
                C151907 * C45711 +
            (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C151907 * C45712) *
               C151983 * C152371 -
           ((C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C151907 * C45712 +
            (C6225 * C1624 + C7600 + C7600 + C152179 * C1648 + C6223 * C1155 +
             C7599 + C7599 + C152299 * C1167) *
                C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C152357 -
           ((C6886 + C6885) * C151907 * C45712 +
            (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152371 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C348 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C6894 * C151907 * C45712) *
               C151983 * C152371 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152357 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152372 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152359 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C151965 * C347 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 +
            (C10089 + C10088) * C151907 * C45712) *
               C152359 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C152372 -
           ((C6225 * C9541 + C9559 + C9559 + C152179 * C9547 + C6223 * C2566 +
             C9558 + C9558 + C152299 * C2582) *
                C151907 * C45712 +
            (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
               C152330) *
              C151965 * C348 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C152372 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C152359 +
           (C54428 * C45710 + (C10087 + C10086) * C151907 * C45711 +
            (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
             C9561 + C9561 + C152179 * C9548) *
                C151907 * C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C1345 -
           ((C55147 + C55146) * C151907 * C45712 +
            (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C1346 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C1345 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C152353 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C1345 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C1346 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
              C151983 * C1433 -
          ((C55147 + C55146) * C151907 * C45712 +
           (C55145 + C55144) * C151907 * C45711 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C151907 * C45710) *
              C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C151907 * C45710 +
           (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
            C8238 + C8238 + C152179 * C2171) *
               C151907 * C45711 +
           (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
            C8241 + C8241 + C152179 * C8224) *
               C151907 * C45712) *
              C151983 * C1435 -
          ((C6225 * C25185 + C55488 + C55488 + C152179 * C25189 +
            C6223 * C8218 + C55489 + C55489 + C152299 * C8224) *
               C151907 * C45712 +
           (C6225 * C8967 + C8978 + C8978 + C152179 * C8973 + C6223 * C2163 +
            C8977 + C8977 + C152299 * C2171) *
               C151907 * C45711 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C151907 * C45710) *
              C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C151907 * C45710 +
           (C6223 * C8967 + C55490 + C55490 + C152299 * C8973 + C6225 * C25923 +
            C55491 + C55491 + C152179 * C25927) *
               C151907 * C45711 +
           (C6223 * C25185 + C55492 + C55492 + C152299 * C25189 +
            C6225 * C32979 + C55493 + C55493 + C152179 * C32981) *
               C151907 * C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152372 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152359 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C1345 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 +
            (C55752 + C55753) * C151907 * C45712) *
               C152359 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C152372 -
           ((C6225 * C26493 + C55717 + C55717 + C152179 * C26497 +
             C6223 * C9540 + C55718 + C55718 + C152299 * C9546) *
                C151907 * C45712 +
            (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
               C152330) *
              C1346 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C152372 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C152359 +
           (C55761 * C45710 + (C55759 + C55758) * C151907 * C45711 +
            (C6223 * C26493 + C55733 + C55733 + C152299 * C26497 +
             C6225 * C33837 + C55734 + C55734 + C152179 * C33839) *
                C151907 * C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C2325 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C2326 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C151965 * C152368 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 +
            (C10089 + C10088) * C151907 * C45712) *
               C2326 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C2325 -
           ((C6225 * C9541 + C9559 + C9559 + C152179 * C9547 + C6223 * C2566 +
             C9558 + C9558 + C152299 * C2582) *
                C151907 * C45712 +
            (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
               C152330) *
              C151965 * C152353 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C2325 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C2326 +
           (C54428 * C45710 + (C10087 + C10086) * C151907 * C45711 +
            (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
             C9561 + C9561 + C152179 * C9548) *
                C151907 * C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C2325 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C2326 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C152371 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 +
            (C55752 + C55753) * C151907 * C45712) *
               C2326 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C2325 -
           ((C6225 * C26493 + C55717 + C55717 + C152179 * C26497 +
             C6223 * C9540 + C55718 + C55718 + C152299 * C9546) *
                C151907 * C45712 +
            (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
               C152330) *
              C152357 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C2325 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C2326 +
           (C55761 * C45710 + (C55759 + C55758) * C151907 * C45711 +
            (C6223 * C26493 + C55733 + C55733 + C152299 * C26497 +
             C6225 * C33837 + C55734 + C55734 + C152179 * C33839) *
                C151907 * C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
              C2556 -
          (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
           (C54443 + C54442) * C151907 * C45710) *
              C2557 +
          (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
           C57064 * C45712) *
              C2558 -
          ((C57061 + C57062) * C151907 * C45712 +
           (C57060 + C57059) * C151907 * C45711 + C57050 * C45710) *
              C2559 +
          (C57064 * C45710 + (C57062 + C57061) * C151907 * C45711 +
           (C6223 * C48702 + C57048 + C57048 + C152299 * C48706 +
            C6225 * C57033 + C57049 + C57049 + C152179 * C57035) *
               C151907 * C45712) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C152286 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C152070) *
                  C151965 * C807 +
              (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                C7296 * C6222) *
                   C152193 * C152070 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C152286) *
                  C151965 * C808 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C152286 -
               ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
                C6893 * C6220) *
                   C152193 * C152070) *
                  C151965 * C809 +
              ((C7296 * C6220 + (C7308 + C7307) * C6221 +
                (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
                 C7302 + C7302 + C152179 * C1172) *
                    C6222) *
                   C152193 * C152070 -
               ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 +
                C6293 * C6220) *
                   C152193 * C152286) *
                  C151965 * C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                  C6229 + C6229 + C152179 * C377) *
                     C6220 +
                 (C6282 + C6283) * C6221 + C6292 * C6222) *
                    C152193 * C152286 -
                (C6893 * C6222 + (C6883 + C6884) * C6221 +
                 (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                  C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                     C6220) *
                    C152193 * C152070) *
                   C1345 +
               (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                  C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                     C6220 +
                 (C7633 + C7634) * C6221 + C7639 * C6222) *
                    C152193 * C152070 -
                (C6593 * C6222 + (C6583 + C6584) * C6221 +
                 (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                  C6526 + C6526 + C152299 * C377) *
                     C6220) *
                    C152193 * C152286) *
                   C1346 +
               (((C6223 * C354 + C6527 + C6527 + C152299 * C378 +
                  C6225 * C1442 + C6528 + C6528 + C152179 * C1458) *
                     C6220 +
                 (C6585 + C6586) * C6221 + C6594 * C6222) *
                    C152193 * C152286 -
                ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
                 (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 +
                  C6223 * C1624 + C8239 + C8239 + C152299 * C1648) *
                     C6220) *
                    C152193 * C152070) *
                   C152327) *
                  C152271 +
              ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                 C7296 * C6222) *
                    C152193 * C152070 -
                (C6293 * C6222 + (C6285 + C6284) * C6221 +
                 (C6283 + C6282) * C6220) *
                    C152193 * C152286) *
                   C1345 +
               (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                 C7089 * C6222) *
                    C152193 * C152286 -
                ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
                 (C7634 + C7633) * C6220) *
                    C152193 * C152070) *
                   C1346 +
               (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
                 (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 +
                  C6225 * C2166 + C8761 + C8761 + C152179 * C2174) *
                     C6222) *
                    C152193 * C152070 -
                ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                 (C6586 + C6585) * C6220) *
                    C152193 * C152286) *
                   C152327) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2936 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2937 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C2938 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C151965 * C152271 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C2937 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C2936 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C2938 +
           ((C10089 + C10088) * C6220 + (C10087 + C10086) * C6221 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C6222) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C807 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152286) *
              C151965 * C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152286 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C809 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C1345 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C1346 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C152286 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C1345 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C1346 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2936 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2937 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C2938 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C151965 * C152271 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C2937 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C2936 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C2938 +
           (C31752 * C2563 + C34177 + C34177 + C31747 * C2579 + C31754 * C3090 +
            C34178 + C34178 + C31748 * C3098 + C31756 * C10284 + C34179 +
            C34179 + C31749 * C10290 + C31758 * C27226 + C34180 + C34180 +
            C31750 * C27230) *
               C151907 * C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152286 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C151965 * C807 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 +
            (C10089 + C10088) * C151907 * C45712) *
               C152070 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C152286) *
              C151965 * C808 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C152286 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C152070) *
              C151965 * C809 +
          ((C7296 * C151907 * C45710 + (C6892 + C6891) * C151907 * C45711 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C151907 * C45712) *
               C152070 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152286 -
            ((C54446 + C54447) * C151907 * C45712 +
             (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C1345 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 +
             (C55752 + C55753) * C151907 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152286) *
               C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C151907 * C45710 +
             (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
                C152286 -
            ((C55758 + C55759) * C151907 * C45712 +
             (C55757 + C55756) * C151907 * C45711 +
             (C55755 + C55754) * C151907 * C45710) *
                C152070) *
               C152327) *
              C152271 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 +
             (C10089 + C10088) * C151907 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152286) *
               C1345 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 +
             (C9873 + C9872) * C151907 * C45712) *
                C152286 -
            ((C6225 * C10284 + C10296 + C10296 + C152179 * C10290 +
              C6223 * C3090 + C10295 + C10295 + C152299 * C3098) *
                 C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C1346 +
           (((C8773 + C8772) * C151907 * C45710 +
             (C56258 + C56259) * C151907 * C45711 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151907 * C45712) *
                C152070 -
            ((C56259 + C56258) * C151907 * C45712 +
             (C8772 + C8773) * C151907 * C45711 +
             (C6586 + C6585) * C151907 * C45710) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C2936 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C2937 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            C57064 * C45712) *
               C2938 -
           ((C57061 + C57062) * C151907 * C45712 +
            (C57060 + C57059) * C151907 * C45711 + C57050 * C45710) *
               C152343) *
              C151965 * C152271 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
               C2937 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C2936 -
           ((C57575 + C57576) * C151907 * C45712 +
            (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
               C2938 +
           (C57570 * C45710 + (C57576 + C57575) * C151907 * C45711 +
            (C6223 * C17868 + C57568 + C57568 + C152299 * C17874 +
             C6225 * C49415 + C57569 + C57569 + C152179 * C49417) *
                C151907 * C45712) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C151965 * C129 -
          (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
              C152193 * C151983 * C151965 * C130 +
          (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
              C151983 * C151965 * C131 -
          ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
              C152193 * C151983 * C151965 * C132 +
          (C6294 * C6220 + (C6291 + C6290) * C6221 +
           (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
            C6261 + C6261 + C152179 * C813) *
               C6222) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152371 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
            (C6589 + C6590) * C6222) *
               C152193 * C151983 * C152357 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152371 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152371 -
           ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
             C6554 + C6554 + C152299 * C382) *
                C6222 +
            (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152357 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1345 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1346 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1345 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C1345 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C1346 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C1433 -
          (C6593 * C6222 + (C6583 + C6584) * C6221 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C6220) *
              C152193 * C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C6220 +
           (C6585 + C6586) * C6221 + C6594 * C6222) *
              C152193 * C151983 * C1435 -
          ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 + C6223 * C1440 +
            C7990 + C7990 + C152299 * C1456) *
               C6222 +
           (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 + C6223 * C1441 +
            C7992 + C7992 + C152299 * C1457) *
               C6221 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C6220) *
              C152193 * C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C6220 +
           (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
            C7998 + C7998 + C152179 * C7986) *
               C6221 +
           (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 + C6225 * C7981 +
            C8000 + C8000 + C152179 * C7987) *
               C6222) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2325 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C2326 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C2325 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152330) *
              C151965 * C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C2325 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C2326 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2325 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C152371 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C2326 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C2325 -
           ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 + C6223 * C1618 +
             C8229 + C8229 + C152299 * C1642) *
                C6222 +
            (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 + C6223 * C1619 +
             C8231 + C8231 + C152299 * C1643) *
                C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152330) *
              C152357 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C2325 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C152368 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C2326 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C2325 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C2325 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C2326 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C152371 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C2326 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C2325 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C152357 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C2325 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C2326 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
            C6825 + C6825 + C152179 * C1167) *
               C151907 * C45711 +
           (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
            C6828 + C6828 + C152179 * C1644) *
               C151907 * C45712) *
              C151983 * C151965 * C129 -
          ((C6886 + C6885) * C151907 * C45712 +
           (C6883 + C6884) * C151907 * C45711 +
           (C6283 + C6282) * C151907 * C45710) *
              C151983 * C151965 * C130 +
          (C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
           C6894 * C151907 * C45712) *
              C151983 * C151965 * C131 -
          ((C6891 + C6892) * C151907 * C45712 +
           (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
              C151983 * C151965 * C132 +
          (C6294 * C151907 * C45710 + (C7308 + C7307) * C151907 * C45711 +
           (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
            C6856 + C6856 + C152179 * C2789) *
               C151907 * C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
             C6825 + C6825 + C152179 * C1167) *
                C151907 * C45711 +
            (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C151907 * C45712) *
               C151983 * C152371 -
           ((C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C151907 * C45712 +
            (C6225 * C1624 + C7600 + C7600 + C152179 * C1648 + C6223 * C1155 +
             C7599 + C7599 + C152299 * C1167) *
                C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C152357 -
           ((C6886 + C6885) * C151907 * C45712 +
            (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152371 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C348 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C6894 * C151907 * C45712) *
               C151983 * C152371 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152357 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C1345 -
           ((C55147 + C55146) * C151907 * C45712 +
            (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C1346 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C1345 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C152353 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C1345 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C1346 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
              C151983 * C1433 -
          ((C55147 + C55146) * C151907 * C45712 +
           (C55145 + C55144) * C151907 * C45711 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C151907 * C45710) *
              C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C151907 * C45710 +
           (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
            C8238 + C8238 + C152179 * C2171) *
               C151907 * C45711 +
           (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
            C8241 + C8241 + C152179 * C8224) *
               C151907 * C45712) *
              C151983 * C1435 -
          ((C6225 * C25185 + C55488 + C55488 + C152179 * C25189 +
            C6223 * C8218 + C55489 + C55489 + C152299 * C8224) *
               C151907 * C45712 +
           (C6225 * C8967 + C8978 + C8978 + C152179 * C8973 + C6223 * C2163 +
            C8977 + C8977 + C152299 * C2171) *
               C151907 * C45711 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C151907 * C45710) *
              C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C151907 * C45710 +
           (C6223 * C8967 + C55490 + C55490 + C152299 * C8973 + C6225 * C25923 +
            C55491 + C55491 + C152179 * C25927) *
               C151907 * C45711 +
           (C6223 * C25185 + C55492 + C55492 + C152299 * C25189 +
            C6225 * C32979 + C55493 + C55493 + C152179 * C32981) *
               C151907 * C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C2325 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C2326 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C151965 * C152368 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 +
            (C10089 + C10088) * C151907 * C45712) *
               C2326 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C2325 -
           ((C6225 * C9541 + C9559 + C9559 + C152179 * C9547 + C6223 * C2566 +
             C9558 + C9558 + C152299 * C2582) *
                C151907 * C45712 +
            (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
               C152330) *
              C151965 * C152353 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C2325 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C2326 +
           (C54428 * C45710 + (C10087 + C10086) * C151907 * C45711 +
            (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
             C9561 + C9561 + C152179 * C9548) *
                C151907 * C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C2325 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C2326 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C152371 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 +
            (C55752 + C55753) * C151907 * C45712) *
               C2326 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C2325 -
           ((C6225 * C26493 + C55717 + C55717 + C152179 * C26497 +
             C6223 * C9540 + C55718 + C55718 + C152299 * C9546) *
                C151907 * C45712 +
            (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
               C152330) *
              C152357 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C2325 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C2326 +
           (C55761 * C45710 + (C55759 + C55758) * C151907 * C45711 +
            (C6223 * C26493 + C55733 + C55733 + C152299 * C26497 +
             C6225 * C33837 + C55734 + C55734 + C152179 * C33839) *
                C151907 * C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152028) *
              C151942 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C151951 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C4241 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152028) *
              C151942 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C4241 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C152285 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C4241 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C152285 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C4241) *
               C152028) *
              C151942 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C4241) *
               C152285 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C4241 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152028) *
              C151951 +
          (((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
             C54428 * C45712) *
                C4241 -
            ((C10086 + C10087) * C151907 * C45712 +
             (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
                C152070) *
               C152285 +
           ((C7639 * C151907 * C45710 + (C9871 + C9870) * C151907 * C45711 +
             (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
              C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                 C151907 * C45712) *
                C152070 -
            ((C9870 + C9871) * C151907 * C45712 +
             (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152066 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152073 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C4913) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152073 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152066 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C4913) *
               C152028) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152073 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152066 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C4913) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152066 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152073 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152066 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152073 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C4913) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152073 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152066 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C4913) *
               C152028) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152073 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152066 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C4913) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152066 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152073 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152066 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152073 +
            (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
             C57064 * C45712) *
                C4913) *
               C152285 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152073 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152066 -
            ((C57783 + C57784) * C151907 * C45712 +
             (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
                C4913) *
               C152028) *
              C3375 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152073 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152066 -
            ((C57575 + C57576) * C151907 * C45712 +
             (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
                C4913) *
               C152285 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C152066 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152073 +
            (C57362 * C45710 + (C57368 + C57367) * C151907 * C45711 +
             (C6223 * C9541 + C57360 + C57360 + C152299 * C9547 +
              C6225 * C26494 + C57361 + C57361 + C152179 * C26498) *
                 C151907 * C45712) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C4241 -
               (C6893 * C6222 + (C6883 + C6884) * C6221 +
                (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                 C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                    C6220) *
                   C152193 * C152070) *
                  C151965 * C152377 +
              (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                C7296 * C6222) *
                   C152193 * C152070 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C4241) *
                  C151965 * C152370 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C4241 -
               ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
                C6893 * C6220) *
                   C152193 * C152070) *
                  C151965 * C152355 +
              ((C7296 * C6220 + (C7308 + C7307) * C6221 +
                (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
                 C7302 + C7302 + C152179 * C1172) *
                    C6222) *
                   C152193 * C152070 -
               ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 +
                C6293 * C6220) *
                   C152193 * C4241) *
                  C151965 * C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                  C6229 + C6229 + C152179 * C377) *
                     C6220 +
                 (C6282 + C6283) * C6221 + C6292 * C6222) *
                    C152193 * C4241 -
                (C6893 * C6222 + (C6883 + C6884) * C6221 +
                 (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 +
                  C6223 * C590 + C6826 + C6826 + C152299 * C614) *
                     C6220) *
                    C152193 * C152070) *
                   C152371 +
               (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 +
                  C6225 * C1624 + C7600 + C7600 + C152179 * C1648) *
                     C6220 +
                 (C7633 + C7634) * C6221 + C7639 * C6222) *
                    C152193 * C152070 -
                (C6593 * C6222 + (C6583 + C6584) * C6221 +
                 (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                  C6526 + C6526 + C152299 * C377) *
                     C6220) *
                    C152193 * C4241) *
                   C152357 +
               (((C6223 * C354 + C6527 + C6527 + C152299 * C378 +
                  C6225 * C1442 + C6528 + C6528 + C152179 * C1458) *
                     C6220 +
                 (C6585 + C6586) * C6221 + C6594 * C6222) *
                    C152193 * C4241 -
                ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
                 (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 +
                  C6223 * C1624 + C8239 + C8239 + C152299 * C1648) *
                     C6220) *
                    C152193 * C152070) *
                   C152327) *
                  C3375 +
              ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
                 C7296 * C6222) *
                    C152193 * C152070 -
                (C6293 * C6222 + (C6285 + C6284) * C6221 +
                 (C6283 + C6282) * C6220) *
                    C152193 * C4241) *
                   C152371 +
               (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                 C7089 * C6222) *
                    C152193 * C4241 -
                ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
                 (C7634 + C7633) * C6220) *
                    C152193 * C152070) *
                   C152357 +
               (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
                 (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 +
                  C6225 * C2166 + C8761 + C8761 + C152179 * C2174) *
                     C6222) *
                    C152193 * C152070 -
                ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                 (C6586 + C6585) * C6220) *
                    C152193 * C4241) *
                   C152327) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152379 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152376 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152365 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C151965 * C3375 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152376 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152379 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152365 +
           ((C10089 + C10088) * C6220 + (C10087 + C10086) * C6221 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C6222) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C152377 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C4241) *
              C151965 * C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C4241 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C152355 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152371 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152357 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C4241 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152371 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152357 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152379 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152376 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152365 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C151965 * C3375 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152376 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152379 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152365 +
           (C31752 * C2563 + C34177 + C34177 + C31747 * C2579 + C31754 * C3090 +
            C34178 + C34178 + C31748 * C3098 + C31756 * C10284 + C34179 +
            C34179 + C31749 * C10290 + C31758 * C27226 + C34180 + C34180 +
            C31750 * C27230) *
               C151907 * C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C4241 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C151965 * C152377 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
               C152070 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C4241) *
              C151965 * C152370 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C4241 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C152070) *
              C151965 * C152355 +
          ((C7296 * C151907 * C45710 + (C6892 + C6891) * C151907 * C45711 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C151907 * C45712) *
               C152070 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C4241 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C152371 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C4241) *
               C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C151907 * C45710 +
             (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
                C4241 -
            ((C55758 + C55759) * C151907 * C45712 +
             (C55757 + C55756) * C151907 * C45711 +
             (C55755 + C55754) * C151907 * C45710) *
                C152070) *
               C152327) *
              C3375 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C4241) *
               C152371 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C4241 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152357 +
           (((C8773 + C8772) * C151907 * C45710 +
             (C56258 + C56259) * C151907 * C45711 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151907 * C45712) *
                C152070 -
            ((C56259 + C56258) * C151907 * C45712 +
             (C8772 + C8773) * C151907 * C45711 +
             (C6586 + C6585) * C151907 * C45710) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152379 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152376 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            C57064 * C45712) *
               C152365 -
           ((C57061 + C57062) * C151907 * C45712 +
            (C57060 + C57059) * C151907 * C45711 + C57050 * C45710) *
               C152343) *
              C151965 * C3375 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
               C152376 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C152379 -
           ((C57575 + C57576) * C151907 * C45712 +
            (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
               C152365 +
           (C57570 * C45710 + (C57576 + C57575) * C151907 * C45711 +
            (C6223 * C17868 + C57568 + C57568 + C152299 * C17874 +
             C6225 * C49415 + C57569 + C57569 + C152179 * C49417) *
                C151907 * C45712) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152066 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152073 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C4913) *
              C151965 * C151942 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152073 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152066 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C4913) *
              C151965 * C151951 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152066 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152073 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152066 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152073 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C4913) *
              C151965 * C151942 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152073 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152066 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C4913) *
              C151965 * C151951 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152066 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152073 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152066 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152073 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            C57064 * C45712) *
               C4913) *
              C151965 * C151942 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
               C152073 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C152066 -
           ((C57575 + C57576) * C151907 * C45712 +
            (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
               C4913) *
              C151965 * C151951 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C152066 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C152073 +
           (C54428 * C45710 + (C10087 + C10086) * C151907 * C45711 +
            (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
             C9561 + C9561 + C152179 * C9548) *
                C151907 * C45712) *
               C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152371 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C4241 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C152371 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152357 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C4241 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152070 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C4241) *
              C151965 * C152370 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C4241 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152070) *
              C151965 * C152355 +
          ((C7296 * C6220 + (C7308 + C7307) * C6221 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C6222) *
               C152193 * C152070 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C152377 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C4241) *
              C151965 * C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C4241 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C152355 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152371 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152357 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C4241 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152371 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152357 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C4241 -
           (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C151965 * C152377 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
               C152070 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C4241) *
              C151965 * C152370 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C4241 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C152070) *
              C151965 * C152355 +
          ((C7296 * C151907 * C45710 + (C6892 + C6891) * C151907 * C45711 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C151907 * C45712) *
               C152070 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C4241 -
            (C57050 * C45712 + (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C152371 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 + C57778 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C4241) *
               C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C151907 * C45710 +
             (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
                C4241 -
            ((C55758 + C55759) * C151907 * C45712 +
             (C55757 + C55756) * C151907 * C45711 +
             (C55755 + C55754) * C151907 * C45710) *
                C152070) *
               C152327) *
              C3375 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 + C57570 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C4241) *
               C152371 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 + C57362 * C45712) *
                C4241 -
            ((C57367 + C57368) * C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152357 +
           (((C8773 + C8772) * C151907 * C45710 +
             (C56258 + C56259) * C151907 * C45711 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151907 * C45712) *
                C152070 -
            ((C56259 + C56258) * C151907 * C45712 +
             (C8772 + C8773) * C151907 * C45711 +
             (C6586 + C6585) * C151907 * C45710) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1795 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1796 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C1797 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1796 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1795 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C1797 +
           ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
            (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 + C6225 * C1446 +
             C8449 + C8449 + C152179 * C1462) *
                C6222) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152285 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152028 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152285) *
              C808 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152285 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152028) *
              C809 +
          ((C7089 * C6220 + (C7101 + C7100) * C6221 +
            (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
             C7095 + C7095 + C152179 * C385) *
                C6222) *
               C152193 * C151983 * C152028 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C807 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152285) *
              C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C809 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1796 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C1797 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C152271 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1796 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C1797 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C152285 -
           ((C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C151907 * C45712 +
            (C6225 * C1624 + C7600 + C7600 + C152179 * C1648 + C6223 * C1155 +
             C7599 + C7599 + C152299 * C1167) *
                C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152028) *
              C807 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C152028 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152285) *
              C808 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C152285 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152028) *
              C809 +
          ((C7089 * C151907 * C45710 + (C7638 + C7637) * C151907 * C45711 +
            (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
             C9861 + C9861 + C152179 * C1652) *
                C151907 * C45712) *
               C151983 * C152028 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C1795 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C1796 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C151983 * C1797 -
           ((C6225 * C25185 + C55488 + C55488 + C152179 * C25189 +
             C6223 * C8218 + C55489 + C55489 + C152299 * C8224) *
                C151907 * C45712 +
            (C6225 * C8967 + C8978 + C8978 + C152179 * C8973 + C6223 * C2163 +
             C8977 + C8977 + C152299 * C2171) *
                C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C151983 * C152337) *
              C152271 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C1796 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C1795 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C1797 +
           ((C8461 + C8460) * C151907 * C45710 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C151907 * C45711 +
            (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
             C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                C151907 * C45712) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152286 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C1795 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152070 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152286) *
              C1796 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152286 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152070) *
              C1797 +
          (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 + C6225 * C8967 +
             C8978 + C8978 + C152179 * C8973) *
                C6220 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C6221 +
            (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
             C8982 + C8982 + C152179 * C8975) *
                C6222) *
               C152193 * C152070 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C152286 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C152285 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152028) *
              C347 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C348 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C152286 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C1795 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152286) *
              C1796 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152286 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C1797 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152286 -
            ((C54446 + C54447) * C151907 * C45712 +
             (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C152285 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 +
             (C6223 * C3089 + C10293 + C10293 + C152299 * C3097 +
              C6225 * C10283 + C10294 + C10294 + C152179 * C10289) *
                 C151907 * C45712) *
                C152070 -
            ((C55147 + C55146) * C151907 * C45712 +
             (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152286) *
               C152028) *
              C347 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 +
             (C10089 + C10088) * C151907 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152286) *
               C152285 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 +
             (C9873 + C9872) * C151907 * C45712) *
                C152286 -
            ((C6225 * C10284 + C10296 + C10296 + C152179 * C10290 +
              C6223 * C3090 + C10295 + C10295 + C152299 * C3098) *
                 C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C152028) *
              C348 +
          (((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
             C54428 * C45712) *
                C152286 -
            ((C10086 + C10087) * C151907 * C45712 +
             (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
                C152070) *
               C152285 +
           ((C7639 * C151907 * C45710 + (C9871 + C9870) * C151907 * C45711 +
             (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
              C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                 C151907 * C45712) *
                C152070 -
            ((C9870 + C9871) * C151907 * C45712 +
             (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152286 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C1795 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 +
            (C55752 + C55753) * C151907 * C45712) *
               C152070 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C152286) *
              C1796 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C152286 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C152070) *
              C1797 +
          (((C56472 + C56473) * C151907 * C45710 +
            (C56474 + C56475) * C151907 * C45711 +
            (C6223 * C27225 + C56462 + C56462 + C152299 * C27229 +
             C6225 * C34310 + C56463 + C56463 + C152179 * C34312) *
                C151907 * C45712) *
               C152070 -
           ((C56475 + C56474) * C151907 * C45712 +
            (C56473 + C56472) * C151907 * C45711 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C151907 * C45710) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                C6229 + C6229 + C152179 * C377) *
                   C6220 +
               (C6282 + C6283) * C6221 + C6292 * C6222) *
                  C152193 * C151983 * C151965 * C129 -
              (C6293 * C6222 + (C6285 + C6284) * C6221 +
               (C6283 + C6282) * C6220) *
                  C152193 * C151983 * C151965 * C130 +
              (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                  C152193 * C151983 * C151965 * C131 -
              ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 +
               C6293 * C6220) *
                  C152193 * C151983 * C151965 * C132 +
              (C6294 * C6220 + (C6291 + C6290) * C6221 +
               (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
                C6261 + C6261 + C152179 * C813) *
                   C6222) *
                  C152193 * C151983 * C151965 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C152371 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C152357 +
               ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C151983 * C152327) *
                  C347 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                (C6589 + C6590) * C6222) *
                   C152193 * C151983 * C152357 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C152371 -
               ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                (C6586 + C6585) * C6220) *
                   C152193 * C151983 * C152327) *
                  C348 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C151983 * C152371 -
               ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
                 C6554 + C6554 + C152299 * C382) *
                    C6222 +
                (C6590 + C6589) * C6221 + C6593 * C6220) *
                   C152193 * C151983 * C152357 +
               (C6594 * C6220 + (C6592 + C6591) * C6221 +
                (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
                 C6556 + C6556 + C152179 * C1803) *
                    C6222) *
                   C152193 * C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152372 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
            (C6889 + C6890) * C6222) *
               C152193 * C152359 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152372 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152330) *
              C151965 * C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152372 -
           ((C6225 * C1159 + C6853 + C6853 + C152179 * C1171 + C6223 * C595 +
             C6854 + C6854 + C152299 * C619) *
                C6222 +
            (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152359 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1345 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1346 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1345 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C1345 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C1346 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C1433 -
          (C6593 * C6222 + (C6583 + C6584) * C6221 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C6220) *
              C152193 * C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C6220 +
           (C6585 + C6586) * C6221 + C6594 * C6222) *
              C152193 * C151983 * C1435 -
          ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 + C6223 * C1440 +
            C7990 + C7990 + C152299 * C1456) *
               C6222 +
           (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 + C6223 * C1441 +
            C7992 + C7992 + C152299 * C1457) *
               C6221 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C6220) *
              C152193 * C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C6220 +
           (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
            C7998 + C7998 + C152179 * C7986) *
               C6221 +
           (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 + C6225 * C7981 +
            C8000 + C8000 + C152179 * C7987) *
               C6222) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152372 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C1345 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152359 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152372 -
           ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 + C6223 * C1618 +
             C8229 + C8229 + C152299 * C1642) *
                C6222 +
            (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 + C6223 * C1619 +
             C8231 + C8231 + C152299 * C1643) *
                C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152330) *
              C1346 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152372 -
           ((C6225 * C2165 + C8234 + C8234 + C152179 * C2173 + C6223 * C1622 +
             C8235 + C8235 + C152299 * C1646) *
                C6222 +
            (C6225 * C2164 + C8236 + C8236 + C152179 * C2172 + C6223 * C1623 +
             C8237 + C8237 + C152299 * C1647) *
                C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C347 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152359 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152372 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152372 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152359 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C1345 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152359 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152372 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C1346 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152372 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152359 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
            C6825 + C6825 + C152179 * C1167) *
               C151907 * C45711 +
           (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
            C6828 + C6828 + C152179 * C1644) *
               C151907 * C45712) *
              C151983 * C151965 * C129 -
          ((C6886 + C6885) * C151907 * C45712 +
           (C6883 + C6884) * C151907 * C45711 +
           (C6283 + C6282) * C151907 * C45710) *
              C151983 * C151965 * C130 +
          (C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
           C6894 * C151907 * C45712) *
              C151983 * C151965 * C131 -
          ((C6891 + C6892) * C151907 * C45712 +
           (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
              C151983 * C151965 * C132 +
          (C6294 * C151907 * C45710 + (C7308 + C7307) * C151907 * C45711 +
           (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
            C6856 + C6856 + C152179 * C2789) *
               C151907 * C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
             C6825 + C6825 + C152179 * C1167) *
                C151907 * C45711 +
            (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C151907 * C45712) *
               C151983 * C152371 -
           ((C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C151907 * C45712 +
            (C6225 * C1624 + C7600 + C7600 + C152179 * C1648 + C6223 * C1155 +
             C7599 + C7599 + C152299 * C1167) *
                C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C152357 -
           ((C6886 + C6885) * C151907 * C45712 +
            (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152371 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C348 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C6894 * C151907 * C45712) *
               C151983 * C152371 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152357 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152372 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152359 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C151965 * C347 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 +
            (C10089 + C10088) * C151907 * C45712) *
               C152359 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C152372 -
           ((C6225 * C9541 + C9559 + C9559 + C152179 * C9547 + C6223 * C2566 +
             C9558 + C9558 + C152299 * C2582) *
                C151907 * C45712 +
            (C10088 + C10089) * C151907 * C45711 + C54435 * C45710) *
               C152330) *
              C151965 * C348 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C152372 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C152359 +
           (C54428 * C45710 + (C10087 + C10086) * C151907 * C45711 +
            (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
             C9561 + C9561 + C152179 * C9548) *
                C151907 * C45712) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C1345 -
           ((C55147 + C55146) * C151907 * C45712 +
            (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C1346 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C1345 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C152353 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C1345 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C1346 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
              C151983 * C1433 -
          ((C55147 + C55146) * C151907 * C45712 +
           (C55145 + C55144) * C151907 * C45711 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C151907 * C45710) *
              C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C151907 * C45710 +
           (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
            C8238 + C8238 + C152179 * C2171) *
               C151907 * C45711 +
           (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
            C8241 + C8241 + C152179 * C8224) *
               C151907 * C45712) *
              C151983 * C1435 -
          ((C6225 * C25185 + C55488 + C55488 + C152179 * C25189 +
            C6223 * C8218 + C55489 + C55489 + C152299 * C8224) *
               C151907 * C45712 +
           (C6225 * C8967 + C8978 + C8978 + C152179 * C8973 + C6223 * C2163 +
            C8977 + C8977 + C152299 * C2171) *
               C151907 * C45711 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C151907 * C45710) *
              C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C151907 * C45710 +
           (C6223 * C8967 + C55490 + C55490 + C152299 * C8973 + C6225 * C25923 +
            C55491 + C55491 + C152179 * C25927) *
               C151907 * C45711 +
           (C6223 * C25185 + C55492 + C55492 + C152299 * C25189 +
            C6225 * C32979 + C55493 + C55493 + C152179 * C32981) *
               C151907 * C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152372 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152359 +
           (C54449 * C45710 + (C54447 + C54446) * C151907 * C45711 +
            (C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
             C9557 + C9557 + C152179 * C9546) *
                C151907 * C45712) *
               C152330) *
              C1345 +
          (((C55144 + C55145) * C151907 * C45710 +
            (C55146 + C55147) * C151907 * C45711 +
            (C55752 + C55753) * C151907 * C45712) *
               C152359 -
           (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C152372 -
           ((C6225 * C26493 + C55717 + C55717 + C152179 * C26497 +
             C6223 * C9540 + C55718 + C55718 + C152299 * C9546) *
                C151907 * C45712 +
            (C55753 + C55752) * C151907 * C45711 + C55737 * C45710) *
               C152330) *
              C1346 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
               C152372 -
           ((C55758 + C55759) * C151907 * C45712 +
            (C55757 + C55756) * C151907 * C45711 +
            (C55755 + C55754) * C151907 * C45710) *
               C152359 +
           (C55761 * C45710 + (C55759 + C55758) * C151907 * C45711 +
            (C6223 * C26493 + C55733 + C55733 + C152299 * C26497 +
             C6225 * C33837 + C55734 + C55734 + C152179 * C33839) *
                C151907 * C45712) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C1345 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C152286 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C1345 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C1346 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152286 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152070 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152286) *
              C151965 * C808 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152286 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152070) *
              C151965 * C809 +
          ((C7296 * C6220 + (C7308 + C7307) * C6221 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C6222) *
               C152193 * C152070 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C807 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152286) *
              C151965 * C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152286 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C809 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C1345 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C1346 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C152286 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C1345 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C1346 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C152286 -
           ((C54446 + C54447) * C151907 * C45712 +
            (C54445 + C54444) * C151907 * C45711 +
            (C54443 + C54442) * C151907 * C45710) *
               C152070) *
              C151965 * C807 +
          (((C6884 + C6883) * C151907 * C45710 +
            (C6885 + C6886) * C151907 * C45711 +
            (C10089 + C10088) * C151907 * C45712) *
               C152070 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C152286) *
              C151965 * C808 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C152286 -
           ((C10086 + C10087) * C151907 * C45712 +
            (C6888 + C6887) * C151907 * C45711 + C6893 * C151907 * C45710) *
               C152070) *
              C151965 * C809 +
          ((C7296 * C151907 * C45710 + (C6892 + C6891) * C151907 * C45711 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C151907 * C45712) *
               C152070 -
           ((C6891 + C6892) * C151907 * C45712 +
            (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C151907 * C45710 +
             (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
                C152286 -
            ((C54446 + C54447) * C151907 * C45712 +
             (C54445 + C54444) * C151907 * C45711 +
             (C54443 + C54442) * C151907 * C45710) *
                C152070) *
               C1345 +
           (((C55144 + C55145) * C151907 * C45710 +
             (C55146 + C55147) * C151907 * C45711 +
             (C55752 + C55753) * C151907 * C45712) *
                C152070 -
            (C55737 * C45712 + (C55145 + C55144) * C151907 * C45711 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C151907 * C45710) *
                C152286) *
               C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C151907 * C45710 +
             (C55754 + C55755) * C151907 * C45711 + C55761 * C45712) *
                C152286 -
            ((C55758 + C55759) * C151907 * C45712 +
             (C55757 + C55756) * C151907 * C45711 +
             (C55755 + C55754) * C151907 * C45710) *
                C152070) *
               C152327) *
              C152271 +
          ((((C6884 + C6883) * C151907 * C45710 +
             (C6885 + C6886) * C151907 * C45711 +
             (C10089 + C10088) * C151907 * C45712) *
                C152070 -
            (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
             (C6283 + C6282) * C151907 * C45710) *
                C152286) *
               C1345 +
           (((C6584 + C6583) * C151907 * C45710 +
             (C7633 + C7634) * C151907 * C45711 +
             (C9873 + C9872) * C151907 * C45712) *
                C152286 -
            ((C6225 * C10284 + C10296 + C10296 + C152179 * C10290 +
              C6223 * C3090 + C10295 + C10295 + C152299 * C3098) *
                 C151907 * C45712 +
             (C9872 + C9873) * C151907 * C45711 +
             (C7634 + C7633) * C151907 * C45710) *
                C152070) *
               C1346 +
           (((C8773 + C8772) * C151907 * C45710 +
             (C56258 + C56259) * C151907 * C45711 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151907 * C45712) *
                C152070 -
            ((C56259 + C56258) * C151907 * C45712 +
             (C8772 + C8773) * C151907 * C45711 +
             (C6586 + C6585) * C151907 * C45710) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152371 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
            (C6589 + C6590) * C6222) *
               C152193 * C151983 * C152357 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152371 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152371 -
           ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
             C6554 + C6554 + C152299 * C382) *
                C6222 +
            (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152357 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C151965 * C129 -
          (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
              C152193 * C151983 * C151965 * C130 +
          (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
              C151983 * C151965 * C131 -
          ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
              C152193 * C151983 * C151965 * C132 +
          (C6294 * C6220 + (C6291 + C6290) * C6221 +
           (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
            C6261 + C6261 + C152179 * C813) *
               C6222) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1345 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1346 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1345 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C1345 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C1346 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C1433 -
          (C6593 * C6222 + (C6583 + C6584) * C6221 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C6220) *
              C152193 * C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C6220 +
           (C6585 + C6586) * C6221 + C6594 * C6222) *
              C152193 * C151983 * C1435 -
          ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 + C6223 * C1440 +
            C7990 + C7990 + C152299 * C1456) *
               C6222 +
           (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 + C6223 * C1441 +
            C7992 + C7992 + C152299 * C1457) *
               C6221 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C6220) *
              C152193 * C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C6220 +
           (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
            C7998 + C7998 + C152179 * C7986) *
               C6221 +
           (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 + C6225 * C7981 +
            C8000 + C8000 + C152179 * C7987) *
               C6222) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
            C6825 + C6825 + C152179 * C1167) *
               C151907 * C45711 +
           (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
            C6828 + C6828 + C152179 * C1644) *
               C151907 * C45712) *
              C151983 * C151965 * C129 -
          ((C6886 + C6885) * C151907 * C45712 +
           (C6883 + C6884) * C151907 * C45711 +
           (C6283 + C6282) * C151907 * C45710) *
              C151983 * C151965 * C130 +
          (C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
           C6894 * C151907 * C45712) *
              C151983 * C151965 * C131 -
          ((C6891 + C6892) * C151907 * C45712 +
           (C6890 + C6889) * C151907 * C45711 + C6293 * C151907 * C45710) *
              C151983 * C151965 * C132 +
          (C6294 * C151907 * C45710 + (C7308 + C7307) * C151907 * C45711 +
           (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
            C6856 + C6856 + C152179 * C2789) *
               C151907 * C45712) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C6223 * C590 + C6826 + C6826 + C152299 * C614 + C6225 * C1155 +
             C6825 + C6825 + C152179 * C1167) *
                C151907 * C45711 +
            (C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C151907 * C45712) *
               C151983 * C152371 -
           ((C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C151907 * C45712 +
            (C6225 * C1624 + C7600 + C7600 + C152179 * C1648 + C6223 * C1155 +
             C7599 + C7599 + C152299 * C1167) *
                C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C152357 -
           ((C6886 + C6885) * C151907 * C45712 +
            (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C152371 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C348 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C6894 * C151907 * C45712) *
               C151983 * C152371 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C152357 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C151907 * C45710 +
            (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
               C151983 * C1345 -
           ((C55147 + C55146) * C151907 * C45712 +
            (C55145 + C55144) * C151907 * C45711 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C151907 * C45710) *
               C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C151907 * C45710 +
            (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
             C8238 + C8238 + C152179 * C2171) *
                C151907 * C45711 +
            (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C151907 * C45710 +
            (C7633 + C7634) * C151907 * C45711 +
            (C9873 + C9872) * C151907 * C45712) *
               C151983 * C1346 -
           (C54435 * C45712 + (C6883 + C6884) * C151907 * C45711 +
            (C6283 + C6282) * C151907 * C45710) *
               C151983 * C1345 -
           ((C6225 * C8219 + C8243 + C8243 + C152179 * C8225 + C6223 * C1626 +
             C8242 + C8242 + C152299 * C1650) *
                C151907 * C45712 +
            (C8772 + C8773) * C151907 * C45711 +
            (C6586 + C6585) * C151907 * C45710) *
               C151983 * C152327) *
              C152353 +
          ((C6292 * C151907 * C45710 + (C6882 + C6881) * C151907 * C45711 +
            C54428 * C45712) *
               C151983 * C1345 -
           ((C9870 + C9871) * C151907 * C45712 +
            (C7636 + C7635) * C151907 * C45711 + C6593 * C151907 * C45710) *
               C151983 * C1346 +
           (C6594 * C151907 * C45710 + (C8771 + C8770) * C151907 * C45711 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C151907 * C45712) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C151907 * C45710 +
           (C54442 + C54443) * C151907 * C45711 + C54449 * C45712) *
              C151983 * C1433 -
          ((C55147 + C55146) * C151907 * C45712 +
           (C55145 + C55144) * C151907 * C45711 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C151907 * C45710) *
              C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C151907 * C45710 +
           (C6223 * C1624 + C8239 + C8239 + C152299 * C1648 + C6225 * C2163 +
            C8238 + C8238 + C152179 * C2171) *
               C151907 * C45711 +
           (C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
            C8241 + C8241 + C152179 * C8224) *
               C151907 * C45712) *
              C151983 * C1435 -
          ((C6225 * C25185 + C55488 + C55488 + C152179 * C25189 +
            C6223 * C8218 + C55489 + C55489 + C152299 * C8224) *
               C151907 * C45712 +
           (C6225 * C8967 + C8978 + C8978 + C152179 * C8973 + C6223 * C2163 +
            C8977 + C8977 + C152299 * C2171) *
               C151907 * C45711 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C151907 * C45710) *
              C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C151907 * C45710 +
           (C6223 * C8967 + C55490 + C55490 + C152299 * C8973 + C6225 * C25923 +
            C55491 + C55491 + C152179 * C25927) *
               C151907 * C45711 +
           (C6223 * C25185 + C55492 + C55492 + C152299 * C25189 +
            C6225 * C32979 + C55493 + C55493 + C152179 * C32981) *
               C151907 * C45712) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152024 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152031 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C3719) *
              C151942 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152031 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152024 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C3719) *
              C151951 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152024 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152031 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152024 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C3719) *
              C151942 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152031 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152024 -
           ((C17104 + C17103 + C17102) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C3719) *
              C151951 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C152024 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152031 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C152024 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152031 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C151983 * C3719) *
              C151942 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C152031 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C152024 -
           (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
            C434 * C151907 * C62294) *
               C151983 * C3719) *
              C151951 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C152024 -
           (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
            C432 * C151907 * C62294) *
               C151983 * C152031 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152024 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C152286 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C3719) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C152024 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152024 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C152286 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C3719) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C152024 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152031 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152286 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C152024 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152286) *
               C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
             C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
                C152286 -
            (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
             C63445 * C62294) *
                C152070) *
               C3719) *
              C3375 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152286) *
               C152024 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152286 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152031 +
           ((C63779 * C62294 + C63780 * C62295 + C63781 * C62296 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151907 *
                 C62297) *
                C152070 -
            (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
             C434 * C151907 * C62294) *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C151983 * C3235 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C152028) *
                  C152377 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C16000 + C16001 + C16002) * C152205) *
                   C151983 * C152028 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C3235) *
                  C152370 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C15301 + C15302 + C15303) * C152205) *
                   C151983 * C3235 -
               ((C16005 + C16004 + C16003) * C152205 +
                (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                   C151983 * C152028) *
                  C152355 +
              (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
                (C1198 * C6220 + C1199 * C6221 +
                 (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                    C152205) *
                   C151983 * C152028 -
               ((C15705 + C15704 + C15703) * C152205 +
                (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
                   C151983 * C3235) *
                  C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C151983 * C152378 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C152374 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                (C16604 + C16577 + C16578) * C152205) *
                   C151983 * C152362 -
               ((C17302 + C17301 + C17309) * C152205 +
                (C1819 * C6222 + C1820 * C6221 +
                 (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                    C152301) *
                   C151983 * C152337) *
                  C3375 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C16000 + C16001 + C16002) * C152205) *
                   C151983 * C152374 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C152378 -
               ((C17104 + C17103 + C17102) * C152205 +
                (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                   C151983 * C152362 +
               ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
                (C16811 * C6220 + C16810 * C6221 +
                 (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                    C152205) *
                   C151983 * C152337) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152372 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152359 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C152330) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152359 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152372 -
            ((C18600 + C18601 + C18610) * C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C152330) *
               C152028) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152359 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152372 -
            ((C18403 + C18404 + C18405) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C152330) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152372 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152359 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C3235 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C152377 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C3235) *
              C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C3235 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152378 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152374 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C152362 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C3375 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152374 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152378 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152362 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152372 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152359 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C152330) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152359 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152372 -
            ((C41158 + C41159 + C41160) * C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C152330) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152359 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152372 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C152330) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152372 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152359 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C3235 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152028) *
              C152377 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C152028 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C3235) *
              C152370 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C3235 -
           (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
            C432 * C151907 * C62294) *
               C151983 * C152028) *
              C152355 +
          ((C431 * C151907 * C62294 + C1198 * C151907 * C62295 +
            C2804 * C151907 * C62296 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151907 *
                C62297) *
               C151983 * C152028 -
           (C62865 * C62297 + C62864 * C62296 + C62863 * C62295 +
            C195 * C151907 * C62294) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C152378 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152374 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C151983 * C152362 -
           (C63920 * C62297 + C63913 * C62296 + C63912 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C151983 * C152337) *
              C3375 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C152374 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C152378 -
           (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
            C434 * C151907 * C62294) *
               C151983 * C152362 +
           (C1820 * C151907 * C62294 + C16811 * C151907 * C62295 +
            C47645 * C151907 * C62296 +
            (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151907 *
                C62297) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152372 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152359 +
            (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
             C64298 * C62297) *
                C152330) *
               C3235 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152359 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152372 -
            (C64768 * C62297 + C63444 * C62296 + C63062 * C62295 +
             C63061 * C62294) *
                C152330) *
               C152028) *
              C3375 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152359 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152372 -
            (C64631 * C62297 + C62598 * C62296 + C62597 * C62295 +
             C62596 * C62294) *
                C152330) *
               C3235 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152372 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152359 +
            (C63064 * C62294 + C63065 * C62295 + C64500 * C62296 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151907 *
                 C62297) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C152286 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C152028) *
              C151942 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C152286 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C3235 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152286 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C3235 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152286) *
               C152028) *
              C151942 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152286) *
               C3235 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152286 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152028) *
              C151951 +
          (((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
             C62601 * C62297) *
                C152286 -
            (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
             C62599 * C62294) *
                C152070) *
               C3235 +
           ((C63066 * C62294 + C63067 * C62295 + C63068 * C62296 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151907 *
                 C62297) *
                C152070 -
            (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
             C432 * C151907 * C62294) *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152378 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C152362 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152374 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152378 -
           ((C17104 + C17103 + C17102) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152362 +
           ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
            (C16811 * C6220 + C16810 * C6221 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C3235 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152028 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C3235 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
            (C1198 * C6220 + C1199 * C6221 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                C152205) *
               C151983 * C152028 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C3235 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C152377 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C3235) *
              C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C3235 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152378 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152374 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C152362 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C3375 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152374 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152378 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152362 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C3235 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152028) *
              C152377 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C152028 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C3235) *
              C152370 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C3235 -
           (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
            C432 * C151907 * C62294) *
               C151983 * C152028) *
              C152355 +
          ((C431 * C151907 * C62294 + C1198 * C151907 * C62295 +
            C2804 * C151907 * C62296 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151907 *
                C62297) *
               C151983 * C152028 -
           (C62865 * C62297 + C62864 * C62296 + C62863 * C62295 +
            C195 * C151907 * C62294) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C152378 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152374 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C151983 * C152362 -
           (C63920 * C62297 + C63913 * C62296 + C63912 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C151983 * C152337) *
              C3375 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C152374 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C152378 -
           (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
            C434 * C151907 * C62294) *
               C151983 * C152362 +
           (C1820 * C151907 * C62294 + C16811 * C151907 * C62295 +
            C47645 * C151907 * C62296 +
            (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151907 *
                C62297) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152024 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C4241 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C3719) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152024 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152024 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C4241 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C3719) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C152024 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152031 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C4241 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C152024 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C4241) *
               C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
             C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
                C4241 -
            (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
             C63445 * C62294) *
                C152070) *
               C3719) *
              C152271 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C4241) *
               C152024 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C4241 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152031 +
           ((C63779 * C62294 + C63780 * C62295 + C63781 * C62296 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151907 *
                 C62297) *
                C152070 -
            (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
             C434 * C151907 * C62294) *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152066 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152073 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C4913) *
              C152024 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152073 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152066 -
           ((C41158 + C41159 + C41160) * C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C4913) *
              C152031 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152066 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152073 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152066 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152073 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C4913) *
              C152024 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152073 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152066 -
           ((C18600 + C18601 + C18610) * C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C4913) *
              C152031 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152066 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152073 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152066 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152073 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C64298 * C62297) *
               C4913) *
              C152024 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152073 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C152066 -
           (C64768 * C62297 + C63444 * C62296 + C63062 * C62295 +
            C63061 * C62294) *
               C4913) *
              C152031 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C152066 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C152073 +
           (C63446 * C62294 + C63447 * C62295 + C63454 * C62296 +
            (C134 * C40426 + C63450 + C63450 + C152163 * C40430) * C151907 *
                C62297) *
               C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                  C193 * C6221 + C194 * C6222) *
                     C152301 +
                 (C15313 + C15289 + C15290) * C152205) *
                    C4241 -
                ((C15291 + C15292 + C15314) * C152205 +
                 (C15290 + C15289 + C15313) * C152301) *
                    C152070) *
                   C3235 +
               (((C16009 + C15998 + C15999) * C152301 +
                 (C16603 + C16573 + C16574) * C152205) *
                    C152070 -
                ((C15999 + C15998 + C16009) * C152205 +
                 (C432 * C6222 + C433 * C6221 +
                  (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                     C152301) *
                    C4241) *
                   C152028) *
                  C152368 +
              ((((C15295 + C15296 + C15297) * C152301 +
                 (C15298 + C15299 + C15300) * C152205) *
                    C152070 -
                ((C15297 + C15296 + C15295) * C152205 +
                 (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                    C4241) *
                   C3235 +
               (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                 (C16000 + C16001 + C16002) * C152205) *
                    C4241 -
                ((C18200 + C18201 + C18202) * C152205 +
                 (C16002 + C16001 + C16000) * C152301) *
                    C152070) *
                   C152028) *
                  C152353 +
              ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                 (C15301 + C15302 + C15303) * C152205) *
                    C4241 -
                ((C15304 + C15305 + C15306) * C152205 +
                 (C15303 + C15302 + C15301) * C152301) *
                    C152070) *
                   C3235 +
               (((C16003 + C16004 + C16005) * C152301 +
                 (C2805 * C6220 + C2804 * C6221 +
                  (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                     C152205) *
                    C152070 -
                ((C16005 + C16004 + C16003) * C152205 +
                 (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                    C4241) *
                   C152028) *
                  C152321) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C4241 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C152070) *
                  C152378 +
              (((C16009 + C15998 + C15999) * C152301 +
                (C16603 + C16573 + C16574) * C152205) *
                   C152070 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C4241) *
                  C152374 +
              ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                (C16604 + C16577 + C16578) * C152205) *
                   C4241 -
               ((C16605 + C16606 + C16607) * C152205 +
                (C16578 + C16577 + C16604) * C152301) *
                   C152070) *
                  C152362 +
              (((C17309 + C17301 + C17302) * C152301 +
                ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
                 (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
                 (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                    C152205) *
                   C152070 -
               ((C17302 + C17301 + C17309) * C152205 +
                (C1819 * C6222 + C1820 * C6221 +
                 (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                    C152301) *
                   C4241) *
                  C152337) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152379 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152376 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C152365 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C3235 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152376 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152379 -
           ((C18600 + C18601 + C18610) * C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152365 +
           ((C18610 + C18601 + C18600) * C152301 +
            ((C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C6220 +
             (C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C6221 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C6222) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C4241 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C152378 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C4241 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C152362 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152379 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152376 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C152365 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C3235 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152376 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152379 -
           ((C41158 + C41159 + C41160) * C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152365 +
           ((C41160 + C41159 + C41158) * C151907 * C152301 +
            (C23165 * C9540 + C41149 + C41149 + C23160 * C9546 +
             C23167 * C26493 + C41150 + C41150 + C23161 * C26497 +
             C23169 * C33837 + C41151 + C41151 + C23162 * C33839) *
                C151907 * C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C4241 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C3235 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C4241) *
               C152028) *
              C152368 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C4241) *
               C3235 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C4241 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152028) *
              C152353 +
          (((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
             C62601 * C62297) *
                C4241 -
            (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
             C62599 * C62294) *
                C152070) *
               C3235 +
           ((C63066 * C62294 + C63067 * C62295 + C63068 * C62296 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151907 *
                 C62297) *
                C152070 -
            (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
             C432 * C151907 * C62294) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C4241 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C152378 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152070 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C4241) *
              C152374 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C4241 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C152070) *
              C152362 +
          ((C63912 * C62294 + C63913 * C62295 + C63920 * C62296 +
            (C134 * C33837 + C63916 + C63916 + C152163 * C33839) * C151907 *
                C62297) *
               C152070 -
           (C63920 * C62297 + C63913 * C62296 + C63912 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152379 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152376 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C64298 * C62297) *
               C152365 -
           (C64305 * C62297 + C64298 * C62296 + C62594 * C62295 +
            C62593 * C62294) *
               C152343) *
              C3235 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152376 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C152379 -
           (C64768 * C62297 + C63444 * C62296 + C63062 * C62295 +
            C63061 * C62294) *
               C152365 +
           (C63062 * C62294 + C63444 * C62295 + C64768 * C62296 +
            (C134 * C57033 + C64764 + C64764 + C152163 * C57035) * C151907 *
                C62297) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152066 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152073 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C4913) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152073 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152066 -
            ((C41158 + C41159 + C41160) * C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C4913) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152073 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152066 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C4913) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152066 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152073 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152066 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152073 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C4913) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152073 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152066 -
            ((C18600 + C18601 + C18610) * C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C4913) *
               C152028) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152073 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152066 -
            ((C18403 + C18404 + C18405) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C4913) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152066 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152073 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152066 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152073 +
            (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
             C64298 * C62297) *
                C4913) *
               C3235 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152073 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152066 -
            (C64768 * C62297 + C63444 * C62296 + C63062 * C62295 +
             C63061 * C62294) *
                C4913) *
               C152028) *
              C152271 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152073 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152066 -
            (C64631 * C62297 + C62598 * C62296 + C62597 * C62295 +
             C62596 * C62294) *
                C4913) *
               C3235 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152066 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152073 +
            (C63064 * C62294 + C63065 * C62295 + C64500 * C62296 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151907 *
                 C62297) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C4241 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C152378 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152070 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C4241 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152070) *
              C152362 +
          (((C17309 + C17301 + C17302) * C152301 +
            ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
             (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                C152205) *
               C152070 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C4241 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C3235 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C4241 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C152378 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C4241 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C152362 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C4241 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C3235 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C4241) *
               C152028) *
              C152368 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C4241) *
               C3235 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C4241 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152028) *
              C152353 +
          (((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
             C62601 * C62297) *
                C4241 -
            (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
             C62599 * C62294) *
                C152070) *
               C3235 +
           ((C63066 * C62294 + C63067 * C62295 + C63068 * C62296 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151907 *
                 C62297) *
                C152070 -
            (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
             C432 * C151907 * C62294) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C4241 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C152378 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152070 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C4241) *
              C152374 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C4241 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C152070) *
              C152362 +
          ((C63912 * C62294 + C63913 * C62295 + C63920 * C62296 +
            (C134 * C33837 + C63916 + C63916 + C152163 * C33839) * C151907 *
                C62297) *
               C152070 -
           (C63920 * C62297 + C63913 * C62296 + C63912 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C151983 * C152285 -
               ((C1197 * C6222 + C1196 * C6221 +
                 (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                    C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C152028) *
                  C807 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
                   C151983 * C152028 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C152285) *
                  C808 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C15301 + C15302 + C15303) * C152205) *
                   C151983 * C152285 -
               ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
                (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                   C151983 * C152028) *
                  C809 +
              (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
                (C1198 * C6220 + C1199 * C6221 +
                 (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                    C152205) *
                   C151983 * C152028 -
               ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
                (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
                   C151983 * C152285) *
                  C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C151983 * C1795 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C1796 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                (C16604 + C16577 + C16578) * C152205) *
                   C151983 * C1797 -
               ((C16810 * C6222 + C16811 * C6221 +
                 (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
                    C152205 +
                (C1819 * C6222 + C1820 * C6221 +
                 (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                    C152301) *
                   C151983 * C152337) *
                  C152271 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C16000 + C16001 + C16002) * C152205) *
                   C151983 * C1796 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C1795 -
               ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
                (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                   C151983 * C1797 +
               ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
                (C16811 * C6220 + C16810 * C6221 +
                 (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                    C152205) *
                   C151983 * C152337) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C2325 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C2326 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C152330) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C2326 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C2325 -
            ((C18207 * C6222 + C18208 * C6221 +
              (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                 C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C152330) *
               C152028) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C2326 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C2325 -
            ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C152330) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C2325 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C2326 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152285 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C807 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152285) *
              C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152285 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C809 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1795 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1796 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C1797 -
           ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23165 * C2163 + C25930 + C25930 + C23160 * C2171) *
                C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C152271 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1796 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1795 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C1797 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C2325 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C2326 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C152330) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C2326 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C2325 -
            ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
              C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
              C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                 C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C152330) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C2326 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C2325 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C152330) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C2325 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C2326 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C152285 -
           (C18609 * C151907 * C62297 + C16598 * C151907 * C62296 +
            C16008 * C151907 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152028) *
              C807 +
          ((C433 * C151907 * C62294 + C1196 * C151907 * C62295 +
            C2806 * C151907 * C62296 + C18208 * C151907 * C62297) *
               C151983 * C152028 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C152285) *
              C808 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C152285 -
           (C18207 * C151907 * C62297 + C2805 * C151907 * C62296 +
            C1197 * C151907 * C62295 + C432 * C151907 * C62294) *
               C151983 * C152028) *
              C809 +
          ((C431 * C151907 * C62294 + C1198 * C151907 * C62295 +
            C2804 * C151907 * C62296 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151907 *
                C62297) *
               C151983 * C152028 -
           (C2957 * C151907 * C62297 + C673 * C151907 * C62296 +
            C668 * C151907 * C62295 + C195 * C151907 * C62294) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C1795 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C1796 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C151983 * C1797 -
           ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C151907 *
                C62297 +
            C48143 * C151907 * C62296 + C17308 * C151907 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C151983 * C152337) *
              C152271 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C1796 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C1795 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C1797 +
           (C1820 * C151907 * C62294 + C16811 * C151907 * C62295 +
            C47645 * C151907 * C62296 +
            (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151907 *
                C62297) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C2325 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C2326 +
            (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
             C64298 * C62297) *
                C152330) *
               C152285 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C2326 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C2325 -
            ((C134 * C40425 + C49423 + C49423 + C152163 * C40429) * C151907 *
                 C62297 +
             C63444 * C62296 + C63062 * C62295 + C63061 * C62294) *
                C152330) *
               C152028) *
              C152271 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C2326 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C2325 -
            (C48723 * C151907 * C62297 + C62598 * C62296 + C62597 * C62295 +
             C62596 * C62294) *
                C152330) *
               C152285 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C2325 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C2326 +
            (C63064 * C62294 + C63065 * C62295 + C64500 * C62296 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151907 *
                 C62297) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                  C193 * C6221 + C194 * C6222) *
                     C152301 +
                 (C15313 + C15289 + C15290) * C152205) *
                    C152286 -
                ((C15291 + C15292 + C15314) * C152205 +
                 (C15290 + C15289 + C15313) * C152301) *
                    C152070) *
                   C152285 +
               (((C16009 + C15998 + C15999) * C152301 +
                 ((C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C6220 +
                  C2806 * C6221 + C2805 * C6222) *
                     C152205) *
                    C152070 -
                ((C15999 + C15998 + C16009) * C152205 +
                 (C432 * C6222 + C433 * C6221 +
                  (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                     C152301) *
                    C152286) *
                   C152028) *
                  C347 +
              ((((C15295 + C15296 + C15297) * C152301 +
                 (C15298 + C15299 + C15300) * C152205) *
                    C152070 -
                ((C15297 + C15296 + C15295) * C152205 +
                 (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                    C152286) *
                   C152285 +
               (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                 (C16000 + C16001 + C16002) * C152205) *
                    C152286 -
                ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
                 (C16002 + C16001 + C16000) * C152301) *
                    C152070) *
                   C152028) *
                  C348 +
              ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                 (C15301 + C15302 + C15303) * C152205) *
                    C152286 -
                ((C15304 + C15305 + C15306) * C152205 +
                 (C15303 + C15302 + C15301) * C152301) *
                    C152070) *
                   C152285 +
               (((C16003 + C16004 + C16005) * C152301 +
                 (C2805 * C6220 + C2804 * C6221 +
                  (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                     C152205) *
                    C152070 -
                ((C16005 + C16004 + C16003) * C152205 +
                 (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                    C152286) *
                   C152028) *
                  C152321) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C152286 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C152070) *
                  C1795 +
              (((C16009 + C15998 + C15999) * C152301 +
                (C16603 + C16573 + C16574) * C152205) *
                   C152070 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C152286) *
                  C1796 +
              ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                (C16604 + C16577 + C16578) * C152205) *
                   C152286 -
               ((C16605 + C16606 + C16607) * C152205 +
                (C16578 + C16577 + C16604) * C152301) *
                   C152070) *
                  C1797 +
              (((C17309 + C17301 + C17302) * C152301 +
                ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
                 (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
                 (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                    C152205) *
                   C152070 -
               ((C17302 + C17301 + C17309) * C152205 +
                (C1819 * C6222 + C1820 * C6221 +
                 (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                    C152301) *
                   C152286) *
                  C152337) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2936 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2937 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C2938 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C152285 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C2937 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C2936 -
           ((C18600 + C18601 + C18610) * C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C2938 +
           ((C18610 + C18601 + C18600) * C152301 +
            ((C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C6220 +
             (C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C6221 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C6222) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C23165 * C1620 + C25197 + C25197 + C23160 * C1644 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23169 * C8218 + C25195 + C25195 + C23162 * C8224) *
                 C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C152286 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C1795 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152286 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C1797 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2936 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2937 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C2938 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C152285 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C2937 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C2936 -
           ((C41158 + C41159 + C41160) * C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C2938 +
           ((C41160 + C41159 + C41158) * C151907 * C152301 +
            (C23165 * C9540 + C41149 + C41149 + C23160 * C9546 +
             C23167 * C26493 + C41150 + C41150 + C23161 * C26497 +
             C23169 * C33837 + C41151 + C41151 + C23162 * C33839) *
                C151907 * C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152286 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C152285 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C49427 * C151907 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152286) *
               C152028) *
              C347 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152286) *
               C152285 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152286 -
            (C49024 * C151907 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152028) *
              C348 +
          (((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
             C62601 * C62297) *
                C152286 -
            (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
             C62599 * C62294) *
                C152070) *
               C152285 +
           ((C63066 * C62294 + C63067 * C62295 + C63068 * C62296 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151907 *
                 C62297) *
                C152070 -
            (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
             C432 * C151907 * C62294) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152286 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C1795 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152070 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C152286) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C152286 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C152070) *
              C1797 +
          ((C63912 * C62294 + C63913 * C62295 + C63920 * C62296 +
            (C134 * C33837 + C63916 + C63916 + C152163 * C33839) * C151907 *
                C62297) *
               C152070 -
           (C63920 * C62297 + C63913 * C62296 + C63912 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C2936 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C2937 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C64298 * C62297) *
               C2938 -
           (C64305 * C62297 + C64298 * C62296 + C62594 * C62295 +
            C62593 * C62294) *
               C152343) *
              C152285 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C2937 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C2936 -
           (C64768 * C62297 + C63444 * C62296 + C63062 * C62295 +
            C63061 * C62294) *
               C2938 +
           (C63062 * C62294 + C63444 * C62295 + C64768 * C62296 +
            (C134 * C57033 + C64764 + C64764 + C152163 * C57035) * C151907 *
                C62297) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                C193 * C6221 + C194 * C6222) *
                   C152301 +
               ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
                C670 * C6221 + C669 * C6222) *
                   C152205) *
                  C151983 * C151965 * C129 -
              ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
               (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                  C151983 * C151965 * C130 +
              ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
               (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
                  C151983 * C151965 * C131 -
              ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
               (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
                  C151983 * C151965 * C132 +
              ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
               (C674 * C6220 + C961 * C6221 +
                (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
                   C152205) *
                  C151983 * C151965 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
                 C670 * C6221 + C669 * C6222) *
                    C152205) *
                   C151983 * C152371 -
               ((C1197 * C6222 + C1196 * C6221 +
                 (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                    C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C152357 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
                 C2033 * C6221 + C2032 * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C347 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
                   C151983 * C152357 -
               ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C152371 -
               ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
                (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                   C151983 * C152327) *
                  C348 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
                   C151983 * C152371 -
               ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
                (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                   C151983 * C152357 +
               ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
                (C2032 * C6220 + C2031 * C6221 +
                 (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C152321) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C152372 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C152359 +
               ((C15314 + C15292 + C15291) * C152301 +
                ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
                 C2959 * C6221 + C2958 * C6222) *
                    C152205) *
                   C152330) *
                  C151965 * C347 +
              (((C15295 + C15296 + C15297) * C152301 +
                (C15298 + C15299 + C15300) * C152205) *
                   C152359 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C152372 -
               ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
                (C15300 + C15299 + C15298) * C152301) *
                   C152330) *
                  C151965 * C348 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C15301 + C15302 + C15303) * C152205) *
                   C152372 -
               ((C15304 + C15305 + C15306) * C152205 +
                (C15303 + C15302 + C15301) * C152301) *
                   C152359 +
               ((C15306 + C15305 + C15304) * C152301 +
                (C2958 * C6220 + C2957 * C6221 +
                 (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                    C152205) *
                   C152330) *
                  C151965 * C152321) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C151983 * C1345 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C1346 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
                 C2033 * C6221 + C2032 * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C152368 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C16000 + C16001 + C16002) * C152205) *
                   C151983 * C1346 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C1345 -
               ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
                (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                   C151983 * C152327) *
                  C152353 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C15301 + C15302 + C15303) * C152205) *
                   C151983 * C1345 -
               ((C16005 + C16004 + C16003) * C152205 +
                (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                   C151983 * C1346 +
               ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
                (C2032 * C6220 + C2031 * C6221 +
                 (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C152321) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                C193 * C6221 + C194 * C6222) *
                   C152301 +
               (C15313 + C15289 + C15290) * C152205) *
                  C151983 * C1433 -
              ((C15999 + C15998 + C16009) * C152205 +
               (C432 * C6222 + C433 * C6221 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                   C152301) *
                  C151983 * C1434 +
              (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                C434 * C6221 + C435 * C6222) *
                   C152301 +
               ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
                C2033 * C6221 + C2032 * C6222) *
                   C152205) *
                  C151983 * C1435 -
              (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
                (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
                (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
                   C152205 +
               (C1819 * C6222 + C1820 * C6221 +
                (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                   C152301) *
                  C151983 * C1436 +
              (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
                (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
                (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
                   C152301 +
               ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
                (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
                (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
                   C152205) *
                  C151983 * C1437) *
             C151937 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C152372 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C152359 +
               ((C15314 + C15292 + C15291) * C152301 +
                ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
                 C2959 * C6221 + C2958 * C6222) *
                    C152205) *
                   C152330) *
                  C1345 +
              (((C16009 + C15998 + C15999) * C152301 +
                (C16603 + C16573 + C16574) * C152205) *
                   C152359 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C152372 -
               (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
                 (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
                 (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                    C152205 +
                (C16574 + C16573 + C16603) * C152301) *
                   C152330) *
                  C1346 +
              ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                (C16604 + C16577 + C16578) * C152205) *
                   C152372 -
               ((C16605 + C16606 + C16607) * C152205 +
                (C16578 + C16577 + C16604) * C152301) *
                   C152359 +
               ((C16607 + C16606 + C16605) * C152301 +
                ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
                 (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
                 (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                    C152205) *
                   C152330) *
                  C152327) *
             C151937 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C2325 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C2326 +
               ((C15314 + C15292 + C15291) * C152301 +
                ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
                 C2959 * C6221 + C2958 * C6222) *
                    C152205) *
                   C152330) *
                  C151965 * C152368 +
              (((C15295 + C15296 + C15297) * C152301 +
                (C15298 + C15299 + C15300) * C152205) *
                   C2326 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C2325 -
               ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
                (C15300 + C15299 + C15298) * C152301) *
                   C152330) *
                  C151965 * C152353 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C15301 + C15302 + C15303) * C152205) *
                   C2325 -
               ((C15304 + C15305 + C15306) * C152205 +
                (C15303 + C15302 + C15301) * C152301) *
                   C2326 +
               ((C15306 + C15305 + C15304) * C152301 +
                (C2958 * C6220 + C2957 * C6221 +
                 (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                    C152205) *
                   C152330) *
                  C151965 * C152321) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C2325 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C2326 +
               ((C15314 + C15292 + C15291) * C152301 +
                ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
                 C2959 * C6221 + C2958 * C6222) *
                    C152205) *
                   C152330) *
                  C152371 +
              (((C16009 + C15998 + C15999) * C152301 +
                (C16603 + C16573 + C16574) * C152205) *
                   C2326 -
               ((C15999 + C15998 + C16009) * C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C2325 -
               (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
                 (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
                 (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                    C152205 +
                (C16574 + C16573 + C16603) * C152301) *
                   C152330) *
                  C152357 +
              ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                (C16604 + C16577 + C16578) * C152205) *
                   C2325 -
               ((C16605 + C16606 + C16607) * C152205 +
                (C16578 + C16577 + C16604) * C152301) *
                   C2326 +
               ((C16607 + C16606 + C16605) * C152301 +
                ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
                 (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
                 (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                    C152205) *
                   C152330) *
                  C152327) *
             C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C2556 -
          ((C15291 + C15292 + C15314) * C152205 +
           (C15290 + C15289 + C15313) * C152301) *
              C2557 +
          ((C15314 + C15292 + C15291) * C152301 +
           (C17902 + C17879 + C17880) * C152205) *
              C2558 -
          ((C17903 + C17904 + C17905) * C152205 +
           (C17880 + C17879 + C17902) * C152301) *
              C2559 +
          ((C17905 + C17904 + C17903) * C152301 +
           ((C134 * C17867 + C17887 + C17887 + C152163 * C17873) * C6220 +
            (C134 * C17868 + C17888 + C17888 + C152163 * C17874) * C6221 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C6222) *
               C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C347 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152359 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152372 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152372 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152359 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C1345 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152359 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152372 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C1346 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152372 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152359 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C2326 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C2325 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C2325 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C2326 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C152371 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C2326 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C2325 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C152357 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C2325 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C2326 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C2556 -
          ((C37867 + C37868 + C37869) * C151907 * C152205 +
           (C37866 + C37865 + C37864) * C151907 * C152301) *
              C2557 +
          ((C37869 + C37868 + C37867) * C151907 * C152301 +
           (C40459 + C40460 + C40461) * C151907 * C152205) *
              C2558 -
          ((C40462 + C40463 + C40464) * C151907 * C152205 +
           (C40461 + C40460 + C40459) * C151907 * C152301) *
              C2559 +
          ((C40464 + C40463 + C40462) * C151907 * C152301 +
           (C23165 * C17867 + C40444 + C40444 + C23160 * C17873 +
            C23167 * C40425 + C40445 + C40445 + C23161 * C40429 +
            C23169 * C40426 + C40446 + C40446 + C23162 * C40430) *
               C151907 * C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
           C17898 * C151907 * C62297) *
              C151983 * C151965 * C129 -
          (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
           C670 * C151907 * C62295 + C193 * C151907 * C62294) *
              C151983 * C151965 * C130 +
          (C194 * C151907 * C62294 + C669 * C151907 * C62295 +
           C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
              C151983 * C151965 * C131 -
          (C2957 * C151907 * C62297 + C673 * C151907 * C62296 +
           C668 * C151907 * C62295 + C195 * C151907 * C62294) *
              C151983 * C151965 * C132 +
          (C196 * C151907 * C62294 + C674 * C151907 * C62295 +
           C675 * C151907 * C62296 +
           (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151907 *
               C62297) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
            C17898 * C151907 * C62297) *
               C151983 * C152371 -
           (C18609 * C151907 * C62297 + C16598 * C151907 * C62296 +
            C16008 * C151907 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152357 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C347 +
          ((C433 * C151907 * C62294 + C1196 * C151907 * C62295 +
            C2806 * C151907 * C62296 + C18208 * C151907 * C62297) *
               C151983 * C152357 -
           (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
            C670 * C151907 * C62295 + C193 * C151907 * C62294) *
               C151983 * C152371 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C348 +
          ((C194 * C151907 * C62294 + C669 * C151907 * C62295 +
            C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
               C151983 * C152371 -
           (C18207 * C151907 * C62297 + C2805 * C151907 * C62296 +
            C1197 * C151907 * C62295 + C432 * C151907 * C62294) *
               C151983 * C152357 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152372 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152359 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C151965 * C347 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152359 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C152372 -
           (C48723 * C151907 * C62297 + C62598 * C62296 + C62597 * C62295 +
            C62596 * C62294) *
               C152330) *
              C151965 * C348 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C152372 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C152359 +
           (C62600 * C62294 + C62601 * C62295 + C62602 * C62296 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151907 *
                C62297) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C1345 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C152368 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C1346 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C1345 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C152353 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C1345 -
           (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
            C432 * C151907 * C62294) *
               C151983 * C1346 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
              C151983 * C1433 -
          (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
              C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
           C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
           C47444 * C151907 * C62297) *
              C151983 * C1435 -
          ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C151907 *
               C62297 +
           C48143 * C151907 * C62296 + C17308 * C151907 * C62295 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
               C62294) *
              C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C151907 * C62294 +
           (C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C151907 *
               C62295 +
           (C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C151907 *
               C62296 +
           (C134 * C34310 + C63297 + C63297 + C152163 * C34312) * C151907 *
               C62297) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152372 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152359 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C1345 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152359 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C152372 -
           ((C134 * C40425 + C49423 + C49423 + C152163 * C40429) * C151907 *
                C62297 +
            C63444 * C62296 + C63062 * C62295 + C63061 * C62294) *
               C152330) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C152372 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C152359 +
           (C63446 * C62294 + C63447 * C62295 + C63454 * C62296 +
            (C134 * C40426 + C63450 + C63450 + C152163 * C40430) * C151907 *
                C62297) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C2325 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C2326 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C151965 * C152368 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C2326 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C2325 -
           (C48723 * C151907 * C62297 + C62598 * C62296 + C62597 * C62295 +
            C62596 * C62294) *
               C152330) *
              C151965 * C152353 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C2325 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C2326 +
           (C62600 * C62294 + C62601 * C62295 + C62602 * C62296 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151907 *
                C62297) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C2325 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C2326 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C152371 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C2326 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C2325 -
           ((C134 * C40425 + C49423 + C49423 + C152163 * C40429) * C151907 *
                C62297 +
            C63444 * C62296 + C63062 * C62295 + C63061 * C62294) *
               C152330) *
              C152357 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C2325 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C2326 +
           (C63446 * C62294 + C63447 * C62295 + C63454 * C62296 +
            (C134 * C40426 + C63450 + C63450 + C152163 * C40430) * C151907 *
                C62297) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
              C2556 -
          (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
           C62591 * C62294) *
              C2557 +
          (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
           C64298 * C62297) *
              C2558 -
          (C64305 * C62297 + C64298 * C62296 + C62594 * C62295 +
           C62593 * C62294) *
              C2559 +
          (C62594 * C62294 + C64298 * C62295 + C64305 * C62296 +
           (C134 * C64294 + C64301 + C64301 + C152163 * C64296) * C151907 *
               C62297) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C152286 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C152070) *
                  C151965 * C807 +
              (((C15295 + C15296 + C15297) * C152301 +
                (C15298 + C15299 + C15300) * C152205) *
                   C152070 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C152286) *
                  C151965 * C808 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C15301 + C15302 + C15303) * C152205) *
                   C152286 -
               ((C15304 + C15305 + C15306) * C152205 +
                (C15303 + C15302 + C15301) * C152301) *
                   C152070) *
                  C151965 * C809 +
              (((C15703 + C15704 + C15705) * C152301 +
                (C673 * C6220 + C675 * C6221 +
                 (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                    C152205) *
                   C152070 -
               ((C15705 + C15704 + C15703) * C152205 +
                (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
                   C152286) *
                  C151965 * C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                  C193 * C6221 + C194 * C6222) *
                     C152301 +
                 (C15313 + C15289 + C15290) * C152205) *
                    C152286 -
                ((C15291 + C15292 + C15314) * C152205 +
                 (C15290 + C15289 + C15313) * C152301) *
                    C152070) *
                   C1345 +
               (((C16009 + C15998 + C15999) * C152301 +
                 (C16603 + C16573 + C16574) * C152205) *
                    C152070 -
                ((C15999 + C15998 + C16009) * C152205 +
                 (C432 * C6222 + C433 * C6221 +
                  (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                     C152301) *
                    C152286) *
                   C1346 +
               ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                  C434 * C6221 + C435 * C6222) *
                     C152301 +
                 (C16604 + C16577 + C16578) * C152205) *
                    C152286 -
                ((C16605 + C16606 + C16607) * C152205 +
                 (C16578 + C16577 + C16604) * C152301) *
                    C152070) *
                   C152327) *
                  C152271 +
              ((((C15295 + C15296 + C15297) * C152301 +
                 (C15298 + C15299 + C15300) * C152205) *
                    C152070 -
                ((C15297 + C15296 + C15295) * C152205 +
                 (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                    C152286) *
                   C1345 +
               (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                 (C16000 + C16001 + C16002) * C152205) *
                    C152286 -
                ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
                 (C16002 + C16001 + C16000) * C152301) *
                    C152070) *
                   C1346 +
               (((C17102 + C17103 + C17104) * C152301 +
                 (C16601 * C6220 + C16600 * C6221 +
                  (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                     C152205) *
                    C152070 -
                ((C17104 + C17103 + C17102) * C152205 +
                 (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                    C152286) *
                   C152327) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2936 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2937 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C2938 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C151965 * C152271 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C2937 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C2936 -
           ((C18403 + C18404 + C18405) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C2938 +
           ((C18405 + C18404 + C18403) * C152301 +
            (C17900 * C6220 + C17899 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C6222) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152286 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C1345 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C152286 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2936 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2937 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C2938 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C151965 * C152271 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C2937 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C2936 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C2938 +
           ((C27031 + C27030 + C27029) * C151907 * C152301 +
            (C23165 * C2566 + C26509 + C26509 + C23160 * C2582 +
             C23167 * C9541 + C26510 + C26510 + C23161 * C9547 +
             C23169 * C26494 + C26511 + C26511 + C23162 * C26498) *
                C151907 * C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152286 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C151965 * C807 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152070 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C152286) *
              C151965 * C808 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C152286 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C152070) *
              C151965 * C809 +
          ((C62863 * C62294 + C62864 * C62295 + C62865 * C62296 +
            (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151907 *
                C62297) *
               C152070 -
           (C62865 * C62297 + C62864 * C62296 + C62863 * C62295 +
            C195 * C151907 * C62294) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152286 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C1345 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152286) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
             C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
                C152286 -
            (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
             C63445 * C62294) *
                C152070) *
               C152327) *
              C152271 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152286) *
               C1345 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152286 -
            (C49024 * C151907 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C1346 +
           ((C63779 * C62294 + C63780 * C62295 + C63781 * C62296 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151907 *
                 C62297) *
                C152070 -
            (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
             C434 * C151907 * C62294) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C2936 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C2937 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C64298 * C62297) *
               C2938 -
           (C64305 * C62297 + C64298 * C62296 + C62594 * C62295 +
            C62593 * C62294) *
               C152343) *
              C151965 * C152271 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C2937 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C2936 -
           (C64631 * C62297 + C62598 * C62296 + C62597 * C62295 +
            C62596 * C62294) *
               C2938 +
           (C62597 * C62294 + C62598 * C62295 + C64631 * C62296 +
            (C134 * C48703 + C48717 + C48717 + C152163 * C48707) * C151907 *
                C62297) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
            C670 * C6221 + C669 * C6222) *
               C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
           (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
              C151983 * C151965 * C130 +
          ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
           (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
           (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
              C151983 * C151965 * C132 +
          ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
           (C674 * C6220 + C961 * C6221 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
             C670 * C6221 + C669 * C6222) *
                C152205) *
               C151983 * C152371 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152357 -
           ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152371 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
               C151983 * C152371 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152357 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1345 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1346 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1345 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C1345 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C1346 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C151983 * C1433 -
          ((C15999 + C15998 + C16009) * C152205 +
           (C432 * C6222 + C433 * C6221 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
               C152301) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
            C434 * C6221 + C435 * C6222) *
               C152301 +
           ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
            C2033 * C6221 + C2032 * C6222) *
               C152205) *
              C151983 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
            (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
               C152205 +
           (C1819 * C6222 + C1820 * C6221 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
               C152301) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
               C152301 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2325 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2326 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C151965 * C152368 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C2326 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C2325 -
           ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C2325 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C2326 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2325 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2326 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C152371 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C2326 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C2325 -
           (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
             (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
             (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C2325 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C2326 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C2326 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C2325 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C2325 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C2326 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C152371 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C2326 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C2325 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C152357 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C2325 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C2326 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
           C17898 * C151907 * C62297) *
              C151983 * C151965 * C129 -
          (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
           C670 * C151907 * C62295 + C193 * C151907 * C62294) *
              C151983 * C151965 * C130 +
          (C194 * C151907 * C62294 + C669 * C151907 * C62295 +
           C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
              C151983 * C151965 * C131 -
          (C2957 * C151907 * C62297 + C673 * C151907 * C62296 +
           C668 * C151907 * C62295 + C195 * C151907 * C62294) *
              C151983 * C151965 * C132 +
          (C196 * C151907 * C62294 + C674 * C151907 * C62295 +
           C675 * C151907 * C62296 +
           (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151907 *
               C62297) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
            C17898 * C151907 * C62297) *
               C151983 * C152371 -
           (C18609 * C151907 * C62297 + C16598 * C151907 * C62296 +
            C16008 * C151907 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152357 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C347 +
          ((C433 * C151907 * C62294 + C1196 * C151907 * C62295 +
            C2806 * C151907 * C62296 + C18208 * C151907 * C62297) *
               C151983 * C152357 -
           (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
            C670 * C151907 * C62295 + C193 * C151907 * C62294) *
               C151983 * C152371 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C348 +
          ((C194 * C151907 * C62294 + C669 * C151907 * C62295 +
            C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
               C151983 * C152371 -
           (C18207 * C151907 * C62297 + C2805 * C151907 * C62296 +
            C1197 * C151907 * C62295 + C432 * C151907 * C62294) *
               C151983 * C152357 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C1345 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C152368 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C1346 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C1345 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C152353 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C1345 -
           (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
            C432 * C151907 * C62294) *
               C151983 * C1346 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
              C151983 * C1433 -
          (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
              C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
           C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
           C47444 * C151907 * C62297) *
              C151983 * C1435 -
          ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C151907 *
               C62297 +
           C48143 * C151907 * C62296 + C17308 * C151907 * C62295 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
               C62294) *
              C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C151907 * C62294 +
           (C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C151907 *
               C62295 +
           (C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C151907 *
               C62296 +
           (C134 * C34310 + C63297 + C63297 + C152163 * C34312) * C151907 *
               C62297) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C2325 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C2326 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C151965 * C152368 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C2326 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C2325 -
           (C48723 * C151907 * C62297 + C62598 * C62296 + C62597 * C62295 +
            C62596 * C62294) *
               C152330) *
              C151965 * C152353 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C2325 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C2326 +
           (C62600 * C62294 + C62601 * C62295 + C62602 * C62296 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151907 *
                C62297) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C2325 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C2326 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C152371 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C2326 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C2325 -
           ((C134 * C40425 + C49423 + C49423 + C152163 * C40429) * C151907 *
                C62297 +
            C63444 * C62296 + C63062 * C62295 + C63061 * C62294) *
               C152330) *
              C152357 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C2325 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C2326 +
           (C63446 * C62294 + C63447 * C62295 + C63454 * C62296 +
            (C134 * C40426 + C63450 + C63450 + C152163 * C40430) * C151907 *
                C62297) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C4241 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152028) *
              C151942 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C4241 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C152285 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C4241 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C152285 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C4241) *
               C152028) *
              C151942 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C4241) *
               C152285 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C4241 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152028) *
              C151951 +
          (((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
             C62601 * C62297) *
                C4241 -
            (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
             C62599 * C62294) *
                C152070) *
               C152285 +
           ((C63066 * C62294 + C63067 * C62295 + C63068 * C62296 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151907 *
                 C62297) *
                C152070 -
            (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
             C432 * C151907 * C62294) *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152066 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152073 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C4913) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152073 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152066 -
            ((C41158 + C41159 + C41160) * C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C4913) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152073 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152066 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C4913) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152066 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152073 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152066 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152073 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C4913) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152073 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152066 -
            ((C18600 + C18601 + C18610) * C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C4913) *
               C152028) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152073 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152066 -
            ((C18403 + C18404 + C18405) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C4913) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152066 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152073 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152066 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152073 +
            (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
             C64298 * C62297) *
                C4913) *
               C152285 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152073 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152066 -
            (C64768 * C62297 + C63444 * C62296 + C63062 * C62295 +
             C63061 * C62294) *
                C4913) *
               C152028) *
              C3375 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152073 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152066 -
            (C64631 * C62297 + C62598 * C62296 + C62597 * C62295 +
             C62596 * C62294) *
                C4913) *
               C152285 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152066 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152073 +
            (C63064 * C62294 + C63065 * C62295 + C64500 * C62296 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151907 *
                 C62297) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                (C15313 + C15289 + C15290) * C152205) *
                   C4241 -
               ((C15291 + C15292 + C15314) * C152205 +
                (C15290 + C15289 + C15313) * C152301) *
                   C152070) *
                  C151965 * C152377 +
              (((C15295 + C15296 + C15297) * C152301 +
                (C15298 + C15299 + C15300) * C152205) *
                   C152070 -
               ((C15297 + C15296 + C15295) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C4241) *
                  C151965 * C152370 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C15301 + C15302 + C15303) * C152205) *
                   C4241 -
               ((C15304 + C15305 + C15306) * C152205 +
                (C15303 + C15302 + C15301) * C152301) *
                   C152070) *
                  C151965 * C152355 +
              (((C15703 + C15704 + C15705) * C152301 +
                (C673 * C6220 + C675 * C6221 +
                 (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                    C152205) *
                   C152070 -
               ((C15705 + C15704 + C15703) * C152205 +
                (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
                   C4241) *
                  C151965 * C152331) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                  C193 * C6221 + C194 * C6222) *
                     C152301 +
                 (C15313 + C15289 + C15290) * C152205) *
                    C4241 -
                ((C15291 + C15292 + C15314) * C152205 +
                 (C15290 + C15289 + C15313) * C152301) *
                    C152070) *
                   C152371 +
               (((C16009 + C15998 + C15999) * C152301 +
                 (C16603 + C16573 + C16574) * C152205) *
                    C152070 -
                ((C15999 + C15998 + C16009) * C152205 +
                 (C432 * C6222 + C433 * C6221 +
                  (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                     C152301) *
                    C4241) *
                   C152357 +
               ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                  C434 * C6221 + C435 * C6222) *
                     C152301 +
                 (C16604 + C16577 + C16578) * C152205) *
                    C4241 -
                ((C16605 + C16606 + C16607) * C152205 +
                 (C16578 + C16577 + C16604) * C152301) *
                    C152070) *
                   C152327) *
                  C3375 +
              ((((C15295 + C15296 + C15297) * C152301 +
                 (C15298 + C15299 + C15300) * C152205) *
                    C152070 -
                ((C15297 + C15296 + C15295) * C152205 +
                 (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                    C4241) *
                   C152371 +
               (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                 (C16000 + C16001 + C16002) * C152205) *
                    C4241 -
                ((C18200 + C18201 + C18202) * C152205 +
                 (C16002 + C16001 + C16000) * C152301) *
                    C152070) *
                   C152357 +
               (((C17102 + C17103 + C17104) * C152301 +
                 (C16601 * C6220 + C16600 * C6221 +
                  (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                     C152205) *
                    C152070 -
                ((C17104 + C17103 + C17102) * C152205 +
                 (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                    C4241) *
                   C152327) *
                  C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152379 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152376 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C152365 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C151965 * C3375 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152376 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152379 -
           ((C18403 + C18404 + C18405) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152365 +
           ((C18405 + C18404 + C18403) * C152301 +
            (C17900 * C6220 + C17899 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C6222) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C4241 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152371 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C4241 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152379 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152376 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C152365 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C151965 * C3375 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152376 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152379 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152365 +
           ((C27031 + C27030 + C27029) * C151907 * C152301 +
            (C23165 * C2566 + C26509 + C26509 + C23160 * C2582 +
             C23167 * C9541 + C26510 + C26510 + C23161 * C9547 +
             C23169 * C26494 + C26511 + C26511 + C23162 * C26498) *
                C151907 * C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C4241 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C151965 * C152377 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152070 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C4241) *
              C151965 * C152370 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C4241 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C152070) *
              C151965 * C152355 +
          ((C62863 * C62294 + C62864 * C62295 + C62865 * C62296 +
            (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151907 *
                C62297) *
               C152070 -
           (C62865 * C62297 + C62864 * C62296 + C62863 * C62295 +
            C195 * C151907 * C62294) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C4241 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C152371 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C4241) *
               C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
             C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
                C4241 -
            (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
             C63445 * C62294) *
                C152070) *
               C152327) *
              C3375 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C4241) *
               C152371 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C4241 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152357 +
           ((C63779 * C62294 + C63780 * C62295 + C63781 * C62296 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151907 *
                 C62297) *
                C152070 -
            (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
             C434 * C151907 * C62294) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152379 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152376 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C64298 * C62297) *
               C152365 -
           (C64305 * C62297 + C64298 * C62296 + C62594 * C62295 +
            C62593 * C62294) *
               C152343) *
              C151965 * C3375 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152376 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C152379 -
           (C64631 * C62297 + C62598 * C62296 + C62597 * C62295 +
            C62596 * C62294) *
               C152365 +
           (C62597 * C62294 + C62598 * C62295 + C64631 * C62296 +
            (C134 * C48703 + C48717 + C48717 + C152163 * C48707) * C151907 *
                C62297) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152066 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152073 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C4913) *
              C151965 * C151942 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152073 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152066 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C4913) *
              C151965 * C151951 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152066 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152073 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152066 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152073 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C4913) *
              C151965 * C151942 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152073 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152066 -
           ((C18403 + C18404 + C18405) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C4913) *
              C151965 * C151951 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152066 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152073 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152066 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152073 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C64298 * C62297) *
               C4913) *
              C151965 * C151942 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152073 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C152066 -
           (C64631 * C62297 + C62598 * C62296 + C62597 * C62295 +
            C62596 * C62294) *
               C4913) *
              C151965 * C151951 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C152066 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C152073 +
           (C62600 * C62294 + C62601 * C62295 + C62602 * C62296 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151907 *
                C62297) *
               C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152371 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C4241 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C152371 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152357 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C4241 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152070 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C4241 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C15703 + C15704 + C15705) * C152301 +
            (C673 * C6220 + C675 * C6221 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                C152205) *
               C152070 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C4241 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152371 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C4241 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C4241 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C151965 * C152377 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152070 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C4241) *
              C151965 * C152370 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C4241 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C152070) *
              C151965 * C152355 +
          ((C62863 * C62294 + C62864 * C62295 + C62865 * C62296 +
            (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151907 *
                C62297) *
               C152070 -
           (C62865 * C62297 + C62864 * C62296 + C62863 * C62295 +
            C195 * C151907 * C62294) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C4241 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C152371 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C4241) *
               C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
             C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
                C4241 -
            (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
             C63445 * C62294) *
                C152070) *
               C152327) *
              C3375 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C4241) *
               C152371 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C4241 -
            (C64500 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152357 +
           ((C63779 * C62294 + C63780 * C62295 + C63781 * C62296 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151907 *
                 C62297) *
                C152070 -
            (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
             C434 * C151907 * C62294) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1795 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C1797 -
           ((C16810 * C6222 + C16811 * C6221 +
             (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
                C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1796 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1795 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C1797 +
           ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
            (C16811 * C6220 + C16810 * C6221 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152285 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152028) *
              C807 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152028 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152285) *
              C808 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C152285 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152028) *
              C809 +
          (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
            (C1198 * C6220 + C1199 * C6221 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                C152205) *
               C151983 * C152028 -
           ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152285 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C807 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152285) *
              C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152285 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C809 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1795 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1796 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C1797 -
           ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23165 * C2163 + C25930 + C25930 + C23160 * C2171) *
                C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C152271 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1796 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1795 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C1797 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C152285 -
           (C18609 * C151907 * C62297 + C16598 * C151907 * C62296 +
            C16008 * C151907 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152028) *
              C807 +
          ((C433 * C151907 * C62294 + C1196 * C151907 * C62295 +
            C2806 * C151907 * C62296 + C18208 * C151907 * C62297) *
               C151983 * C152028 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C152285) *
              C808 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C152285 -
           (C18207 * C151907 * C62297 + C2805 * C151907 * C62296 +
            C1197 * C151907 * C62295 + C432 * C151907 * C62294) *
               C151983 * C152028) *
              C809 +
          ((C431 * C151907 * C62294 + C1198 * C151907 * C62295 +
            C2804 * C151907 * C62296 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151907 *
                C62297) *
               C151983 * C152028 -
           (C2957 * C151907 * C62297 + C673 * C151907 * C62296 +
            C668 * C151907 * C62295 + C195 * C151907 * C62294) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C1795 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C1796 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C151983 * C1797 -
           ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C151907 *
                C62297 +
            C48143 * C151907 * C62296 + C17308 * C151907 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C151983 * C152337) *
              C152271 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C1796 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C1795 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C1797 +
           (C1820 * C151907 * C62294 + C16811 * C151907 * C62295 +
            C47645 * C151907 * C62296 +
            (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151907 *
                C62297) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152286 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C1795 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152070 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152286 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152070) *
              C1797 +
          (((C17309 + C17301 + C17302) * C152301 +
            ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
             (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                C152205) *
               C152070 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             ((C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C6220 +
              C2806 * C6221 + C2805 * C6222) *
                 C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C152286 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C152285 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C23165 * C1620 + C25197 + C25197 + C23160 * C1644 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23169 * C8218 + C25195 + C25195 + C23162 * C8224) *
                 C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C152286 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C1795 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152286 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C1797 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152286 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C152285 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C49427 * C151907 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152286) *
               C152028) *
              C347 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152286) *
               C152285 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152286 -
            (C49024 * C151907 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C152028) *
              C348 +
          (((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
             C62601 * C62297) *
                C152286 -
            (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
             C62599 * C62294) *
                C152070) *
               C152285 +
           ((C63066 * C62294 + C63067 * C62295 + C63068 * C62296 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151907 *
                 C62297) *
                C152070 -
            (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
             C432 * C151907 * C62294) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152286 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C1795 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152070 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C152286) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C152286 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C152070) *
              C1797 +
          ((C63912 * C62294 + C63913 * C62295 + C63920 * C62296 +
            (C134 * C33837 + C63916 + C63916 + C152163 * C33839) * C151907 *
                C62297) *
               C152070 -
           (C63920 * C62297 + C63913 * C62296 + C63912 * C62295 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
                C62294) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                C193 * C6221 + C194 * C6222) *
                   C152301 +
               ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
                C670 * C6221 + C669 * C6222) *
                   C152205) *
                  C151983 * C151965 * C129 -
              ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
               (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                  C151983 * C151965 * C130 +
              ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
               (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
                  C151983 * C151965 * C131 -
              ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
               (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
                  C151983 * C151965 * C132 +
              ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
               (C674 * C6220 + C961 * C6221 +
                (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
                   C152205) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
                 C670 * C6221 + C669 * C6222) *
                    C152205) *
                   C151983 * C152371 -
               ((C1197 * C6222 + C1196 * C6221 +
                 (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                    C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C152357 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
                 C2033 * C6221 + C2032 * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C347 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
                   C151983 * C152357 -
               ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C152371 -
               ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
                (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                   C151983 * C152327) *
                  C348 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
                   C151983 * C152371 -
               ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
                (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                   C151983 * C152357 +
               ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
                (C2032 * C6220 + C2031 * C6221 +
                 (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152372 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152359 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C151965 * C347 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152359 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152372 -
           ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152330) *
              C151965 * C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152372 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152359 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1345 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1346 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1345 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C1345 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C1346 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C151983 * C1433 -
          ((C15999 + C15998 + C16009) * C152205 +
           (C432 * C6222 + C433 * C6221 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
               C152301) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
            C434 * C6221 + C435 * C6222) *
               C152301 +
           ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
            C2033 * C6221 + C2032 * C6222) *
               C152205) *
              C151983 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
            (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
               C152205 +
           (C1819 * C6222 + C1820 * C6221 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
               C152301) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
               C152301 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152372 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152359 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C1345 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152359 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152372 -
           (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
             (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
             (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152372 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152359 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C347 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152359 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152372 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152372 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152359 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C1345 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152359 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152372 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C1346 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152372 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152359 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
           C17898 * C151907 * C62297) *
              C151983 * C151965 * C129 -
          (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
           C670 * C151907 * C62295 + C193 * C151907 * C62294) *
              C151983 * C151965 * C130 +
          (C194 * C151907 * C62294 + C669 * C151907 * C62295 +
           C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
              C151983 * C151965 * C131 -
          (C2957 * C151907 * C62297 + C673 * C151907 * C62296 +
           C668 * C151907 * C62295 + C195 * C151907 * C62294) *
              C151983 * C151965 * C132 +
          (C196 * C151907 * C62294 + C674 * C151907 * C62295 +
           C675 * C151907 * C62296 +
           (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151907 *
               C62297) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
            C17898 * C151907 * C62297) *
               C151983 * C152371 -
           (C18609 * C151907 * C62297 + C16598 * C151907 * C62296 +
            C16008 * C151907 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152357 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C347 +
          ((C433 * C151907 * C62294 + C1196 * C151907 * C62295 +
            C2806 * C151907 * C62296 + C18208 * C151907 * C62297) *
               C151983 * C152357 -
           (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
            C670 * C151907 * C62295 + C193 * C151907 * C62294) *
               C151983 * C152371 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C348 +
          ((C194 * C151907 * C62294 + C669 * C151907 * C62295 +
            C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
               C151983 * C152371 -
           (C18207 * C151907 * C62297 + C2805 * C151907 * C62296 +
            C1197 * C151907 * C62295 + C432 * C151907 * C62294) *
               C151983 * C152357 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152372 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152359 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C151965 * C347 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152359 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C152372 -
           (C48723 * C151907 * C62297 + C62598 * C62296 + C62597 * C62295 +
            C62596 * C62294) *
               C152330) *
              C151965 * C348 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C152372 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C152359 +
           (C62600 * C62294 + C62601 * C62295 + C62602 * C62296 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151907 *
                C62297) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C1345 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C152368 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C1346 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C1345 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C152353 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C1345 -
           (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
            C432 * C151907 * C62294) *
               C151983 * C1346 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
              C151983 * C1433 -
          (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
              C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
           C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
           C47444 * C151907 * C62297) *
              C151983 * C1435 -
          ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C151907 *
               C62297 +
           C48143 * C151907 * C62296 + C17308 * C151907 * C62295 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
               C62294) *
              C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C151907 * C62294 +
           (C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C151907 *
               C62295 +
           (C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C151907 *
               C62296 +
           (C134 * C34310 + C63297 + C63297 + C152163 * C34312) * C151907 *
               C62297) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152372 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152359 +
           (C62592 * C62294 + C62593 * C62295 + C62594 * C62296 +
            C48724 * C151907 * C62297) *
               C152330) *
              C1345 +
          ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
            C63444 * C62297) *
               C152359 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C152372 -
           ((C134 * C40425 + C49423 + C49423 + C152163 * C40429) * C151907 *
                C62297 +
            C63444 * C62296 + C63062 * C62295 + C63061 * C62294) *
               C152330) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
               C152372 -
           (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
            C63445 * C62294) *
               C152359 +
           (C63446 * C62294 + C63447 * C62295 + C63454 * C62296 +
            (C134 * C40426 + C63450 + C63450 + C152163 * C40430) * C151907 *
                C62297) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C1345 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C152286 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C1345 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C1346 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152286 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C151965 * C807 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152070 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152286) *
              C151965 * C808 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152286 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152070) *
              C151965 * C809 +
          (((C15703 + C15704 + C15705) * C152301 +
            (C673 * C6220 + C675 * C6221 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                C152205) *
               C152070 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152286 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C1345 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C152286 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C152286 -
           (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
            C62591 * C62294) *
               C152070) *
              C151965 * C807 +
          ((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
            C62598 * C62297) *
               C152070 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C152286) *
              C151965 * C808 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C152286 -
           (C62602 * C62297 + C62601 * C62296 + C62600 * C62295 +
            C62599 * C62294) *
               C152070) *
              C151965 * C809 +
          ((C62863 * C62294 + C62864 * C62295 + C62865 * C62296 +
            (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151907 *
                C62297) *
               C152070 -
           (C62865 * C62297 + C62864 * C62296 + C62863 * C62295 +
            C195 * C151907 * C62294) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
             C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
                C152286 -
            (C62594 * C62297 + C62593 * C62296 + C62592 * C62295 +
             C62591 * C62294) *
                C152070) *
               C1345 +
           ((C63060 * C62294 + C63061 * C62295 + C63062 * C62296 +
             C63444 * C62297) *
                C152070 -
            (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
                C152286) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
             C63445 * C62295 + C63446 * C62296 + C63447 * C62297) *
                C152286 -
            (C63454 * C62297 + C63447 * C62296 + C63446 * C62295 +
             C63445 * C62294) *
                C152070) *
               C152327) *
              C152271 +
          (((C62595 * C62294 + C62596 * C62295 + C62597 * C62296 +
             C62598 * C62297) *
                C152070 -
            (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
             C193 * C151907 * C62294) *
                C152286) *
               C1345 +
           ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
             C63065 * C62297) *
                C152286 -
            (C49024 * C151907 * C62297 + C63065 * C62296 + C63064 * C62295 +
             C63063 * C62294) *
                C152070) *
               C1346 +
           ((C63779 * C62294 + C63780 * C62295 + C63781 * C62296 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151907 *
                 C62297) *
                C152070 -
            (C63781 * C62297 + C63780 * C62296 + C63779 * C62295 +
             C434 * C151907 * C62294) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
             C670 * C6221 + C669 * C6222) *
                C152205) *
               C151983 * C152371 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152357 -
           ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152371 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
               C151983 * C152371 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152357 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
            C670 * C6221 + C669 * C6222) *
               C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
           (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
              C151983 * C151965 * C130 +
          ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
           (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
           (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
              C151983 * C151965 * C132 +
          ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
           (C674 * C6220 + C961 * C6221 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1345 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1346 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1345 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C1345 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C1346 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C151983 * C1433 -
          ((C15999 + C15998 + C16009) * C152205 +
           (C432 * C6222 + C433 * C6221 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
               C152301) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
            C434 * C6221 + C435 * C6222) *
               C152301 +
           ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
            C2033 * C6221 + C2032 * C6222) *
               C152205) *
              C151983 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
            (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
               C152205 +
           (C1819 * C6222 + C1820 * C6221 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
               C152301) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
               C152301 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
           C17898 * C151907 * C62297) *
              C151983 * C151965 * C129 -
          (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
           C670 * C151907 * C62295 + C193 * C151907 * C62294) *
              C151983 * C151965 * C130 +
          (C194 * C151907 * C62294 + C669 * C151907 * C62295 +
           C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
              C151983 * C151965 * C131 -
          (C2957 * C151907 * C62297 + C673 * C151907 * C62296 +
           C668 * C151907 * C62295 + C195 * C151907 * C62294) *
              C151983 * C151965 * C132 +
          (C196 * C151907 * C62294 + C674 * C151907 * C62295 +
           C675 * C151907 * C62296 +
           (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151907 *
               C62297) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C15311 * C151907 * C62295 + C15312 * C151907 * C62296 +
            C17898 * C151907 * C62297) *
               C151983 * C152371 -
           (C18609 * C151907 * C62297 + C16598 * C151907 * C62296 +
            C16008 * C151907 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C152357 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C347 +
          ((C433 * C151907 * C62294 + C1196 * C151907 * C62295 +
            C2806 * C151907 * C62296 + C18208 * C151907 * C62297) *
               C151983 * C152357 -
           (C2959 * C151907 * C62297 + C671 * C151907 * C62296 +
            C670 * C151907 * C62295 + C193 * C151907 * C62294) *
               C151983 * C152371 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C348 +
          ((C194 * C151907 * C62294 + C669 * C151907 * C62295 +
            C672 * C151907 * C62296 + C2958 * C151907 * C62297) *
               C151983 * C152371 -
           (C18207 * C151907 * C62297 + C2805 * C151907 * C62296 +
            C1197 * C151907 * C62295 + C432 * C151907 * C62294) *
               C151983 * C152357 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
            C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
               C151983 * C1345 -
           (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
               C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
            C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
            C47444 * C151907 * C62297) *
               C151983 * C152327) *
              C152368 +
          ((C433 * C151907 * C62294 + C63063 * C62295 + C63064 * C62296 +
            C63065 * C62297) *
               C151983 * C1346 -
           (C62597 * C62297 + C62596 * C62296 + C62595 * C62295 +
            C193 * C151907 * C62294) *
               C151983 * C1345 -
           (C47443 * C151907 * C62297 + C16601 * C151907 * C62296 +
            C2033 * C151907 * C62295 + C434 * C151907 * C62294) *
               C151983 * C152327) *
              C152353 +
          ((C194 * C151907 * C62294 + C62599 * C62295 + C62600 * C62296 +
            C62601 * C62297) *
               C151983 * C1345 -
           (C63068 * C62297 + C63067 * C62296 + C63066 * C62295 +
            C432 * C151907 * C62294) *
               C151983 * C1346 +
           (C435 * C151907 * C62294 + C2032 * C151907 * C62295 +
            C16600 * C151907 * C62296 +
            (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151907 *
                C62297) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C151907 * C62294 +
           C62591 * C62295 + C62592 * C62296 + C62593 * C62297) *
              C151983 * C1433 -
          (C63062 * C62297 + C63061 * C62296 + C63060 * C62295 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C151907 * C62294) *
              C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C151907 * C62294 +
           C16599 * C151907 * C62295 + C16602 * C151907 * C62296 +
           C47444 * C151907 * C62297) *
              C151983 * C1435 -
          ((C134 * C27225 + C48139 + C48139 + C152163 * C27229) * C151907 *
               C62297 +
           C48143 * C151907 * C62296 + C17308 * C151907 * C62295 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C151907 *
               C62294) *
              C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C151907 * C62294 +
           (C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C151907 *
               C62295 +
           (C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C151907 *
               C62296 +
           (C134 * C34310 + C63297 + C63297 + C152163 * C34312) * C151907 *
               C62297) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[225] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C152024 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C151983 * C3719) *
              C151942 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C152031 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152024 -
           ((C98236 + C98235 + C98234) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C3719) *
              C151951 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C152024 -
           ((C97182 + C97181 + C97180) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152031 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[226] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152286 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C152024 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152286) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
              C434 * C152314 + C435 * C67858) *
                 C96036 +
             (C97744 + C97745 + C97746) * C152205) *
                C152286 -
            ((C97747 + C97748 + C97749) * C152205 +
             (C97746 + C97745 + C97744) * C96036) *
                C152070) *
               C3719) *
              C3375 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152286) *
               C152024 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152286 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152031 +
           (((C98234 + C98235 + C98236) * C96036 +
             (C16601 * C152350 + C16600 * C152314 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C67858) *
                 C152205) *
                C152070 -
            ((C98236 + C98235 + C98234) * C152205 +
             (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
                C152286) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[227] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C152378 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C151983 * C152362 -
           ((C98433 + C98432 + C98431) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C152374 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152378 -
           ((C98236 + C98235 + C98234) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152362 +
           ((C1820 * C152350 + C1819 * C152314 + C1818 * C67858) * C96036 +
            (C16811 * C152350 + C16810 * C152314 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C67858) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C3235 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C152028 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C3235 -
           ((C97182 + C97181 + C97180) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C152350 + C437 * C152314 + C820 * C67858) * C96036 +
            (C1198 * C152350 + C1199 * C152314 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C67858) *
                C152205) *
               C151983 * C152028 -
           ((C96883 + C96882 + C96881) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152372 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152359 +
            ((C96480 + C96479 + C96478) * C96036 +
             (C98992 + C98993 + C98994) * C152205) *
                C152330) *
               C3235 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152359 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152372 -
            ((C99682 + C99683 + C99684) * C152205 +
             (C97743 + C97742 + C97741) * C96036) *
                C152330) *
               C152028) *
              C3375 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152359 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152372 -
            ((C99485 + C99486 + C99487) * C152205 +
             (C96486 + C96485 + C96484) * C96036) *
                C152330) *
               C3235 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152372 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152359 +
            ((C99290 + C99289 + C99288) * C96036 +
             (C18208 * C152350 + C18207 * C152314 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C67858) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152286 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C3235 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152286) *
               C152028) *
              C151942 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152286) *
               C3235 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152286 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
             (C96487 + C96488 + C96489) * C152205) *
                C152286 -
            ((C96490 + C96491 + C96492) * C152205 +
             (C96489 + C96488 + C96487) * C96036) *
                C152070) *
               C3235 +
           (((C97180 + C97181 + C97182) * C96036 +
             (C2805 * C152350 + C2804 * C152314 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C67858) *
                 C152205) *
                C152070 -
            ((C97182 + C97181 + C97180) * C152205 +
             (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
                C152286) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C3235 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C152028 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C3235 -
           ((C97182 + C97181 + C97180) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C152350 + C437 * C152314 + C820 * C67858) * C96036 +
            (C1198 * C152350 + C1199 * C152314 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C67858) *
                C152205) *
               C151983 * C152028 -
           ((C96883 + C96882 + C96881) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C152378 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C151983 * C152362 -
           ((C98433 + C98432 + C98431) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C152374 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152378 -
           ((C98236 + C98235 + C98234) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152362 +
           ((C1820 * C152350 + C1819 * C152314 + C1818 * C67858) * C96036 +
            (C16811 * C152350 + C16810 * C152314 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C67858) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[230] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C4241 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C152024 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C4241) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
              C434 * C152314 + C435 * C67858) *
                 C96036 +
             (C97744 + C97745 + C97746) * C152205) *
                C4241 -
            ((C97747 + C97748 + C97749) * C152205 +
             (C97746 + C97745 + C97744) * C96036) *
                C152070) *
               C3719) *
              C152271 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C4241) *
               C152024 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C4241 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152031 +
           (((C98234 + C98235 + C98236) * C96036 +
             (C16601 * C152350 + C16600 * C152314 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C67858) *
                 C152205) *
                C152070 -
            ((C98236 + C98235 + C98234) * C152205 +
             (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
                C4241) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[231] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152066 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152073 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C98992 + C98993 + C98994) * C152205) *
               C4913) *
              C152024 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152073 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C152066 -
           ((C99682 + C99683 + C99684) * C152205 +
            (C97743 + C97742 + C97741) * C96036) *
               C4913) *
              C152031 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C152066 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C152073 +
           ((C97749 + C97748 + C97747) * C96036 +
            (C47444 * C152350 + C47443 * C152314 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C67858) *
                C152205) *
               C4913) *
              C3719) *
         C151937) /
        (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C4241 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C152378 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152070 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C4241 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C152070) *
              C152362 +
          (((C98431 + C98432 + C98433) * C96036 +
            (C48143 * C152350 + C47645 * C152314 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C67858) *
                C152205) *
               C152070 -
           ((C98433 + C98432 + C98431) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C4241 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C3235 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C4241) *
               C152028) *
              C152368 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C4241) *
               C3235 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C4241 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
             (C96487 + C96488 + C96489) * C152205) *
                C4241 -
            ((C96490 + C96491 + C96492) * C152205 +
             (C96489 + C96488 + C96487) * C96036) *
                C152070) *
               C3235 +
           (((C97180 + C97181 + C97182) * C96036 +
             (C2805 * C152350 + C2804 * C152314 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C67858) *
                 C152205) *
                C152070 -
            ((C97182 + C97181 + C97180) * C152205 +
             (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152379 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152376 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C98992 + C98993 + C98994) * C152205) *
               C152365 -
           ((C98995 + C98996 + C98997) * C152205 +
            (C98994 + C98993 + C98992) * C96036) *
               C152343) *
              C3235 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152376 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C152379 -
           ((C99682 + C99683 + C99684) * C152205 +
            (C97743 + C97742 + C97741) * C96036) *
               C152365 +
           ((C99684 + C99683 + C99682) * C96036 +
            (C49427 * C152350 + C49024 * C152314 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C67858) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[233] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152066 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152073 +
            ((C96480 + C96479 + C96478) * C96036 +
             (C98992 + C98993 + C98994) * C152205) *
                C4913) *
               C3235 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152073 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152066 -
            ((C99682 + C99683 + C99684) * C152205 +
             (C97743 + C97742 + C97741) * C96036) *
                C4913) *
               C152028) *
              C152271 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152073 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152066 -
            ((C99485 + C99486 + C99487) * C152205 +
             (C96486 + C96485 + C96484) * C96036) *
                C4913) *
               C3235 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152066 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152073 +
            ((C99290 + C99289 + C99288) * C96036 +
             (C18208 * C152350 + C18207 * C152314 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C67858) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C4241 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C3235 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C4241) *
               C152028) *
              C152368 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C4241) *
               C3235 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C4241 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
             (C96487 + C96488 + C96489) * C152205) *
                C4241 -
            ((C96490 + C96491 + C96492) * C152205 +
             (C96489 + C96488 + C96487) * C96036) *
                C152070) *
               C3235 +
           (((C97180 + C97181 + C97182) * C96036 +
             (C2805 * C152350 + C2804 * C152314 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C67858) *
                 C152205) *
                C152070 -
            ((C97182 + C97181 + C97180) * C152205 +
             (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C4241 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C152378 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152070 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C4241 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C152070) *
              C152362 +
          (((C98431 + C98432 + C98433) * C96036 +
            (C48143 * C152350 + C47645 * C152314 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C67858) *
                C152205) *
               C152070 -
           ((C98433 + C98432 + C98431) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[235] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C1795 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C151983 * C1797 -
           ((C16810 * C67858 + C16811 * C152314 + C17308 * C152350) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C1796 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C1795 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C1797 +
           ((C1820 * C152350 + C1819 * C152314 + C1818 * C67858) * C96036 +
            (C16811 * C152350 + C16810 * C152314 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C67858) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C152285 -
           ((C1197 * C67858 + C1196 * C152314 + C16008 * C152350) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152028) *
              C807 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C1196 * C152350 + C1197 * C152314 + C1198 * C67858) * C152205) *
               C151983 * C152028 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152285) *
              C808 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C152285 -
           ((C1199 * C67858 + C1198 * C152314 + C1197 * C152350) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152028) *
              C809 +
          (((C431 * C152350 + C437 * C152314 + C820 * C67858) * C96036 +
            (C1198 * C152350 + C1199 * C152314 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C67858) *
                C152205) *
               C151983 * C152028 -
           ((C961 * C67858 + C674 * C152314 + C668 * C152350) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C2325 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C2326 +
            ((C96480 + C96479 + C96478) * C96036 +
             (C98992 + C98993 + C98994) * C152205) *
                C152330) *
               C152285 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C2326 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C2325 -
            ((C18207 * C67858 + C18208 * C152314 + C18609 * C152350) * C152205 +
             (C97743 + C97742 + C97741) * C96036) *
                C152330) *
               C152028) *
              C152271 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C2326 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C2325 -
            ((C2957 * C67858 + C2958 * C152314 + C2959 * C152350) * C152205 +
             (C96486 + C96485 + C96484) * C96036) *
                C152330) *
               C152285 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C2325 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C2326 +
            ((C99290 + C99289 + C99288) * C96036 +
             (C18208 * C152350 + C18207 * C152314 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C67858) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152286 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C1795 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152070 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C152286 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C152070) *
              C1797 +
          (((C98431 + C98432 + C98433) * C96036 +
            (C48143 * C152350 + C47645 * C152314 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C67858) *
                C152205) *
               C152070 -
           ((C98433 + C98432 + C98431) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152286 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C152285 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C16598 * C152350 + C2806 * C152314 + C2805 * C67858) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152286) *
               C152028) *
              C347 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152286) *
               C152285 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152286 -
            ((C2804 * C67858 + C2805 * C152314 + C2806 * C152350) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
             (C96487 + C96488 + C96489) * C152205) *
                C152286 -
            ((C96490 + C96491 + C96492) * C152205 +
             (C96489 + C96488 + C96487) * C96036) *
                C152070) *
               C152285 +
           (((C97180 + C97181 + C97182) * C96036 +
             (C2805 * C152350 + C2804 * C152314 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C67858) *
                 C152205) *
                C152070 -
            ((C97182 + C97181 + C97180) * C152205 +
             (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C2936 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C2937 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C98992 + C98993 + C98994) * C152205) *
               C2938 -
           ((C98995 + C98996 + C98997) * C152205 +
            (C98994 + C98993 + C98992) * C96036) *
               C152343) *
              C152285 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C2937 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C2936 -
           ((C99682 + C99683 + C99684) * C152205 +
            (C97743 + C97742 + C97741) * C96036) *
               C2938 +
           ((C99684 + C99683 + C99682) * C96036 +
            (C49427 * C152350 + C49024 * C152314 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C67858) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
                C193 * C152314 + C194 * C67858) *
                   C96036 +
               (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
                  C151983 * C151965 * C129 -
              ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
               (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                  C151983 * C151965 * C130 +
              ((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
               (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
                  C151983 * C151965 * C131 -
              ((C961 * C67858 + C674 * C152314 + C668 * C152350) * C152205 +
               (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
                  C151983 * C151965 * C132 +
              ((C196 * C152350 + C197 * C152314 + C198 * C67858) * C96036 +
               (C674 * C152350 + C961 * C152314 +
                (C134 * C952 + C958 + C958 + C152163 * C954) * C67858) *
                   C152205) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
                 C193 * C152314 + C194 * C67858) *
                    C96036 +
                (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
                   C151983 * C152371 -
               ((C1197 * C67858 + C1196 * C152314 + C16008 * C152350) *
                    C152205 +
                (C432 * C67858 + C433 * C152314 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                    C96036) *
                   C151983 * C152357 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
                 C434 * C152314 + C435 * C67858) *
                    C96036 +
                (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) *
                    C152205) *
                   C151983 * C152327) *
                  C347 +
              (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
                (C1196 * C152350 + C1197 * C152314 + C1198 * C67858) *
                    C152205) *
                   C151983 * C152357 -
               ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
                (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                   C151983 * C152371 -
               ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
                (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
                   C151983 * C152327) *
                  C348 +
              (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
                (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
                   C151983 * C152371 -
               ((C1199 * C67858 + C1198 * C152314 + C1197 * C152350) * C152205 +
                (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
                   C151983 * C152357 +
               ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
                (C2032 * C152350 + C2031 * C152314 +
                 (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                    C152205) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152372 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152359 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C151965 * C347 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152359 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C152372 -
           ((C2957 * C67858 + C2958 * C152314 + C2959 * C152350) * C152205 +
            (C96486 + C96485 + C96484) * C96036) *
               C152330) *
              C151965 * C348 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C152372 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C152359 +
           ((C96492 + C96491 + C96490) * C96036 +
            (C2958 * C152350 + C2957 * C152314 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C67858) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C1345 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C1346 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C1345 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C1345 -
           ((C97182 + C97181 + C97180) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C1346 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C96475 + C96476 + C96477) * C152205) *
              C151983 * C1433 -
          ((C97176 + C97175 + C97174) * C152205 +
           (C432 * C67858 + C433 * C152314 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
               C96036) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
            C434 * C152314 + C435 * C67858) *
               C96036 +
           (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
              C151983 * C1435 -
          ((C16810 * C67858 + C16811 * C152314 + C17308 * C152350) * C152205 +
           (C1819 * C67858 + C1820 * C152314 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
               C96036) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152350 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C152314 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C67858) *
               C96036 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152350 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C152314 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C67858) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152372 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152359 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C1345 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152359 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C152372 -
           ((C18207 * C67858 + C18208 * C152314 + C18609 * C152350) * C152205 +
            (C97743 + C97742 + C97741) * C96036) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C152372 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C152359 +
           ((C97749 + C97748 + C97747) * C96036 +
            (C47444 * C152350 + C47443 * C152314 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C67858) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C2325 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C2326 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C2326 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C2325 -
           ((C2957 * C67858 + C2958 * C152314 + C2959 * C152350) * C152205 +
            (C96486 + C96485 + C96484) * C96036) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C2325 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C2326 +
           ((C96492 + C96491 + C96490) * C96036 +
            (C2958 * C152350 + C2957 * C152314 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C67858) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C2325 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C2326 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C152371 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C2326 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C2325 -
           ((C18207 * C67858 + C18208 * C152314 + C18609 * C152350) * C152205 +
            (C97743 + C97742 + C97741) * C96036) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C2325 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C2326 +
           ((C97749 + C97748 + C97747) * C96036 +
            (C47444 * C152350 + C47443 * C152314 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C67858) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C96475 + C96476 + C96477) * C152205) *
              C2556 -
          ((C96478 + C96479 + C96480) * C152205 +
           (C96477 + C96476 + C96475) * C96036) *
              C2557 +
          ((C96480 + C96479 + C96478) * C96036 +
           (C98992 + C98993 + C98994) * C152205) *
              C2558 -
          ((C98995 + C98996 + C98997) * C152205 +
           (C98994 + C98993 + C98992) * C96036) *
              C2559 +
          ((C98997 + C98996 + C98995) * C96036 +
           (C48724 * C152350 + C48723 * C152314 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C67858) *
               C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[238] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152286 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C1345 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
              C434 * C152314 + C435 * C67858) *
                 C96036 +
             (C97744 + C97745 + C97746) * C152205) *
                C152286 -
            ((C97747 + C97748 + C97749) * C152205 +
             (C97746 + C97745 + C97744) * C96036) *
                C152070) *
               C152327) *
              C152271 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152286) *
               C1345 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152286 -
            ((C2804 * C67858 + C2805 * C152314 + C2806 * C152350) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C1346 +
           (((C98234 + C98235 + C98236) * C96036 +
             (C16601 * C152350 + C16600 * C152314 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C67858) *
                 C152205) *
                C152070 -
            ((C98236 + C98235 + C98234) * C152205 +
             (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152286 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C151965 * C807 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152070 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C152286) *
              C151965 * C808 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C152286 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C152070) *
              C151965 * C809 +
          (((C96881 + C96882 + C96883) * C96036 +
            (C673 * C152350 + C675 * C152314 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C67858) *
                C152205) *
               C152070 -
           ((C96883 + C96882 + C96881) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C2936 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C2937 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C98992 + C98993 + C98994) * C152205) *
               C2938 -
           ((C98995 + C98996 + C98997) * C152205 +
            (C98994 + C98993 + C98992) * C96036) *
               C152343) *
              C151965 * C152271 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C2937 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C2936 -
           ((C99485 + C99486 + C99487) * C152205 +
            (C96486 + C96485 + C96484) * C96036) *
               C2938 +
           ((C99487 + C99486 + C99485) * C96036 +
            (C17900 * C152350 + C17899 * C152314 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C67858) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[239] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
               C151983 * C152371 -
           ((C1197 * C67858 + C1196 * C152314 + C16008 * C152350) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C1196 * C152350 + C1197 * C152314 + C1198 * C67858) * C152205) *
               C151983 * C152357 -
           ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152371 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152327) *
              C348 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
               C151983 * C152371 -
           ((C1199 * C67858 + C1198 * C152314 + C1197 * C152350) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152357 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
           (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
              C151983 * C151965 * C130 +
          ((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
           (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C67858 + C674 * C152314 + C668 * C152350) * C152205 +
           (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
              C151983 * C151965 * C132 +
          ((C196 * C152350 + C197 * C152314 + C198 * C67858) * C96036 +
           (C674 * C152350 + C961 * C152314 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C67858) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C1345 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C1346 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C1345 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C1345 -
           ((C97182 + C97181 + C97180) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C1346 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C96475 + C96476 + C96477) * C152205) *
              C151983 * C1433 -
          ((C97176 + C97175 + C97174) * C152205 +
           (C432 * C67858 + C433 * C152314 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
               C96036) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
            C434 * C152314 + C435 * C67858) *
               C96036 +
           (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
              C151983 * C1435 -
          ((C16810 * C67858 + C16811 * C152314 + C17308 * C152350) * C152205 +
           (C1819 * C67858 + C1820 * C152314 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
               C96036) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152350 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C152314 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C67858) *
               C96036 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152350 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C152314 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C67858) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C2325 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C2326 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C2326 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C2325 -
           ((C2957 * C67858 + C2958 * C152314 + C2959 * C152350) * C152205 +
            (C96486 + C96485 + C96484) * C96036) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C2325 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C2326 +
           ((C96492 + C96491 + C96490) * C96036 +
            (C2958 * C152350 + C2957 * C152314 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C67858) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C2325 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C2326 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C152371 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C2326 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C2325 -
           ((C18207 * C67858 + C18208 * C152314 + C18609 * C152350) * C152205 +
            (C97743 + C97742 + C97741) * C96036) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C2325 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C2326 +
           ((C97749 + C97748 + C97747) * C96036 +
            (C47444 * C152350 + C47443 * C152314 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C67858) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C4241 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C152285 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C4241) *
               C152028) *
              C151942 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C4241) *
               C152285 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C4241 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
             (C96487 + C96488 + C96489) * C152205) *
                C4241 -
            ((C96490 + C96491 + C96492) * C152205 +
             (C96489 + C96488 + C96487) * C96036) *
                C152070) *
               C152285 +
           (((C97180 + C97181 + C97182) * C96036 +
             (C2805 * C152350 + C2804 * C152314 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C67858) *
                 C152205) *
                C152070 -
            ((C97182 + C97181 + C97180) * C152205 +
             (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
                C4241) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152066 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152073 +
            ((C96480 + C96479 + C96478) * C96036 +
             (C98992 + C98993 + C98994) * C152205) *
                C4913) *
               C152285 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152073 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152066 -
            ((C99682 + C99683 + C99684) * C152205 +
             (C97743 + C97742 + C97741) * C96036) *
                C4913) *
               C152028) *
              C3375 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152073 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152066 -
            ((C99485 + C99486 + C99487) * C152205 +
             (C96486 + C96485 + C96484) * C96036) *
                C4913) *
               C152285 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152066 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152073 +
            ((C99290 + C99289 + C99288) * C96036 +
             (C18208 * C152350 + C18207 * C152314 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C67858) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[242] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C4241 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C152371 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
              C434 * C152314 + C435 * C67858) *
                 C96036 +
             (C97744 + C97745 + C97746) * C152205) *
                C4241 -
            ((C97747 + C97748 + C97749) * C152205 +
             (C97746 + C97745 + C97744) * C96036) *
                C152070) *
               C152327) *
              C3375 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C4241) *
               C152371 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C4241 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152357 +
           (((C98234 + C98235 + C98236) * C96036 +
             (C16601 * C152350 + C16600 * C152314 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C67858) *
                 C152205) *
                C152070 -
            ((C98236 + C98235 + C98234) * C152205 +
             (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C4241 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C151965 * C152377 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152070 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C4241 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C152070) *
              C151965 * C152355 +
          (((C96881 + C96882 + C96883) * C96036 +
            (C673 * C152350 + C675 * C152314 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C67858) *
                C152205) *
               C152070 -
           ((C96883 + C96882 + C96881) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152379 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152376 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C98992 + C98993 + C98994) * C152205) *
               C152365 -
           ((C98995 + C98996 + C98997) * C152205 +
            (C98994 + C98993 + C98992) * C96036) *
               C152343) *
              C151965 * C3375 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152376 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C152379 -
           ((C99485 + C99486 + C99487) * C152205 +
            (C96486 + C96485 + C96484) * C96036) *
               C152365 +
           ((C99487 + C99486 + C99485) * C96036 +
            (C17900 * C152350 + C17899 * C152314 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C67858) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[243] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152066 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152073 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C98992 + C98993 + C98994) * C152205) *
               C4913) *
              C151965 * C151942 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152073 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C152066 -
           ((C99485 + C99486 + C99487) * C152205 +
            (C96486 + C96485 + C96484) * C96036) *
               C4913) *
              C151965 * C151951 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C152066 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C152073 +
           ((C96492 + C96491 + C96490) * C96036 +
            (C2958 * C152350 + C2957 * C152314 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C67858) *
                C152205) *
               C4913) *
              C151965 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[244] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C4241 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C151965 * C152377 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152070 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C4241 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C152070) *
              C151965 * C152355 +
          (((C96881 + C96882 + C96883) * C96036 +
            (C673 * C152350 + C675 * C152314 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C67858) *
                C152205) *
               C152070 -
           ((C96883 + C96882 + C96881) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C4241 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C152371 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
              C434 * C152314 + C435 * C67858) *
                 C96036 +
             (C97744 + C97745 + C97746) * C152205) *
                C4241 -
            ((C97747 + C97748 + C97749) * C152205 +
             (C97746 + C97745 + C97744) * C96036) *
                C152070) *
               C152327) *
              C3375 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C4241) *
               C152371 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C4241 -
            ((C99288 + C99289 + C99290) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152357 +
           (((C98234 + C98235 + C98236) * C96036 +
             (C16601 * C152350 + C16600 * C152314 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C67858) *
                 C152205) *
                C152070 -
            ((C98236 + C98235 + C98234) * C152205 +
             (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[245] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C152285 -
           ((C1197 * C67858 + C1196 * C152314 + C16008 * C152350) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152028) *
              C807 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C1196 * C152350 + C1197 * C152314 + C1198 * C67858) * C152205) *
               C151983 * C152028 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152285) *
              C808 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C152285 -
           ((C1199 * C67858 + C1198 * C152314 + C1197 * C152350) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152028) *
              C809 +
          (((C431 * C152350 + C437 * C152314 + C820 * C67858) * C96036 +
            (C1198 * C152350 + C1199 * C152314 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C67858) *
                C152205) *
               C151983 * C152028 -
           ((C961 * C67858 + C674 * C152314 + C668 * C152350) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C1795 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C151983 * C1797 -
           ((C16810 * C67858 + C16811 * C152314 + C17308 * C152350) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C1796 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C1795 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C1797 +
           ((C1820 * C152350 + C1819 * C152314 + C1818 * C67858) * C96036 +
            (C16811 * C152350 + C16810 * C152314 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C67858) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152286 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C152285 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C16598 * C152350 + C2806 * C152314 + C2805 * C67858) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152286) *
               C152028) *
              C347 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152286) *
               C152285 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152286 -
            ((C2804 * C67858 + C2805 * C152314 + C2806 * C152350) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
             (C96487 + C96488 + C96489) * C152205) *
                C152286 -
            ((C96490 + C96491 + C96492) * C152205 +
             (C96489 + C96488 + C96487) * C96036) *
                C152070) *
               C152285 +
           (((C97180 + C97181 + C97182) * C96036 +
             (C2805 * C152350 + C2804 * C152314 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C67858) *
                 C152205) *
                C152070 -
            ((C97182 + C97181 + C97180) * C152205 +
             (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152286 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C1795 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152070 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C152286 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C152070) *
              C1797 +
          (((C98431 + C98432 + C98433) * C96036 +
            (C48143 * C152350 + C47645 * C152314 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C67858) *
                C152205) *
               C152070 -
           ((C98433 + C98432 + C98431) * C152205 +
            (C1819 * C67858 + C1820 * C152314 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
                C96036) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[247] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
               C151983 * C152371 -
           ((C1197 * C67858 + C1196 * C152314 + C16008 * C152350) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C1196 * C152350 + C1197 * C152314 + C1198 * C67858) * C152205) *
               C151983 * C152357 -
           ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152371 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152327) *
              C348 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
               C151983 * C152371 -
           ((C1199 * C67858 + C1198 * C152314 + C1197 * C152350) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152357 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
           (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
              C151983 * C151965 * C130 +
          ((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
           (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C67858 + C674 * C152314 + C668 * C152350) * C152205 +
           (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
              C151983 * C151965 * C132 +
          ((C196 * C152350 + C197 * C152314 + C198 * C67858) * C96036 +
           (C674 * C152350 + C961 * C152314 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C67858) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152372 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152359 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C151965 * C347 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152359 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C152372 -
           ((C2957 * C67858 + C2958 * C152314 + C2959 * C152350) * C152205 +
            (C96486 + C96485 + C96484) * C96036) *
               C152330) *
              C151965 * C348 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C152372 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C152359 +
           ((C96492 + C96491 + C96490) * C96036 +
            (C2958 * C152350 + C2957 * C152314 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C67858) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C1345 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C1346 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C1345 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C1345 -
           ((C97182 + C97181 + C97180) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C1346 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C96475 + C96476 + C96477) * C152205) *
              C151983 * C1433 -
          ((C97176 + C97175 + C97174) * C152205 +
           (C432 * C67858 + C433 * C152314 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
               C96036) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
            C434 * C152314 + C435 * C67858) *
               C96036 +
           (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
              C151983 * C1435 -
          ((C16810 * C67858 + C16811 * C152314 + C17308 * C152350) * C152205 +
           (C1819 * C67858 + C1820 * C152314 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
               C96036) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152350 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C152314 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C67858) *
               C96036 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152350 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C152314 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C67858) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152372 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152359 +
           ((C96480 + C96479 + C96478) * C96036 +
            (C17898 * C152350 + C2959 * C152314 + C2958 * C67858) * C152205) *
               C152330) *
              C1345 +
          (((C97174 + C97175 + C97176) * C96036 +
            (C97741 + C97742 + C97743) * C152205) *
               C152359 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C152372 -
           ((C18207 * C67858 + C18208 * C152314 + C18609 * C152350) * C152205 +
            (C97743 + C97742 + C97741) * C96036) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C97744 + C97745 + C97746) * C152205) *
               C152372 -
           ((C97747 + C97748 + C97749) * C152205 +
            (C97746 + C97745 + C97744) * C96036) *
               C152359 +
           ((C97749 + C97748 + C97747) * C96036 +
            (C47444 * C152350 + C47443 * C152314 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C67858) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[248] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C152286 -
           ((C96478 + C96479 + C96480) * C152205 +
            (C96477 + C96476 + C96475) * C96036) *
               C152070) *
              C151965 * C807 +
          (((C96481 + C96482 + C96483) * C96036 +
            (C96484 + C96485 + C96486) * C152205) *
               C152070 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C152286) *
              C151965 * C808 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C152286 -
           ((C96490 + C96491 + C96492) * C152205 +
            (C96489 + C96488 + C96487) * C96036) *
               C152070) *
              C151965 * C809 +
          (((C96881 + C96882 + C96883) * C96036 +
            (C673 * C152350 + C675 * C152314 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C67858) *
                C152205) *
               C152070 -
           ((C96883 + C96882 + C96881) * C152205 +
            (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
              C193 * C152314 + C194 * C67858) *
                 C96036 +
             (C96475 + C96476 + C96477) * C152205) *
                C152286 -
            ((C96478 + C96479 + C96480) * C152205 +
             (C96477 + C96476 + C96475) * C96036) *
                C152070) *
               C1345 +
           (((C97174 + C97175 + C97176) * C96036 +
             (C97741 + C97742 + C97743) * C152205) *
                C152070 -
            ((C97176 + C97175 + C97174) * C152205 +
             (C432 * C67858 + C433 * C152314 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                 C96036) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
              C434 * C152314 + C435 * C67858) *
                 C96036 +
             (C97744 + C97745 + C97746) * C152205) *
                C152286 -
            ((C97747 + C97748 + C97749) * C152205 +
             (C97746 + C97745 + C97744) * C96036) *
                C152070) *
               C152327) *
              C152271 +
          ((((C96481 + C96482 + C96483) * C96036 +
             (C96484 + C96485 + C96486) * C152205) *
                C152070 -
            ((C96483 + C96482 + C96481) * C152205 +
             (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
                C152286) *
               C1345 +
           (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
             (C97177 + C97178 + C97179) * C152205) *
                C152286 -
            ((C2804 * C67858 + C2805 * C152314 + C2806 * C152350) * C152205 +
             (C97179 + C97178 + C97177) * C96036) *
                C152070) *
               C1346 +
           (((C98234 + C98235 + C98236) * C96036 +
             (C16601 * C152350 + C16600 * C152314 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C67858) *
                 C152205) *
                C152070 -
            ((C98236 + C98235 + C98234) * C152205 +
             (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[249] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
           (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
              C151983 * C151965 * C130 +
          ((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
           (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C67858 + C674 * C152314 + C668 * C152350) * C152205 +
           (C197 * C67858 + C196 * C152314 + C195 * C152350) * C96036) *
              C151983 * C151965 * C132 +
          ((C196 * C152350 + C197 * C152314 + C198 * C67858) * C96036 +
           (C674 * C152350 + C961 * C152314 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C67858) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C15311 * C152350 + C670 * C152314 + C669 * C67858) * C152205) *
               C151983 * C152371 -
           ((C1197 * C67858 + C1196 * C152314 + C16008 * C152350) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C1196 * C152350 + C1197 * C152314 + C1198 * C67858) * C152205) *
               C151983 * C152357 -
           ((C668 * C67858 + C669 * C152314 + C670 * C152350) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C152371 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152327) *
              C348 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C669 * C152350 + C668 * C152314 + C674 * C67858) * C152205) *
               C151983 * C152371 -
           ((C1199 * C67858 + C1198 * C152314 + C1197 * C152350) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C152357 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
             C193 * C152314 + C194 * C67858) *
                C96036 +
            (C96475 + C96476 + C96477) * C152205) *
               C151983 * C1345 -
           ((C97176 + C97175 + C97174) * C152205 +
            (C432 * C67858 + C433 * C152314 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
                C96036) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
             C434 * C152314 + C435 * C67858) *
                C96036 +
            (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C152350 + C432 * C152314 + C431 * C67858) * C96036 +
            (C97177 + C97178 + C97179) * C152205) *
               C151983 * C1346 -
           ((C96483 + C96482 + C96481) * C152205 +
            (C195 * C67858 + C194 * C152314 + C193 * C152350) * C96036) *
               C151983 * C1345 -
           ((C2031 * C67858 + C2032 * C152314 + C2033 * C152350) * C152205 +
            (C436 * C67858 + C435 * C152314 + C434 * C152350) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C152350 + C195 * C152314 + C196 * C67858) * C96036 +
            (C96487 + C96488 + C96489) * C152205) *
               C151983 * C1345 -
           ((C97182 + C97181 + C97180) * C152205 +
            (C437 * C67858 + C431 * C152314 + C432 * C152350) * C96036) *
               C151983 * C1346 +
           ((C435 * C152350 + C436 * C152314 + C438 * C67858) * C96036 +
            (C2032 * C152350 + C2031 * C152314 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C67858) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C152350 +
            C193 * C152314 + C194 * C67858) *
               C96036 +
           (C96475 + C96476 + C96477) * C152205) *
              C151983 * C1433 -
          ((C97176 + C97175 + C97174) * C152205 +
           (C432 * C67858 + C433 * C152314 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C152350) *
               C96036) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C152350 +
            C434 * C152314 + C435 * C67858) *
               C96036 +
           (C16599 * C152350 + C2033 * C152314 + C2032 * C67858) * C152205) *
              C151983 * C1435 -
          ((C16810 * C67858 + C16811 * C152314 + C17308 * C152350) * C152205 +
           (C1819 * C67858 + C1820 * C152314 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C152350) *
               C96036) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C152350 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C152314 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C67858) *
               C96036 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C152350 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C152314 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C67858) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C152024 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152031 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C151983 * C3719) *
              C151942 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152031 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152024 -
           (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C3719) *
              C151951 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C152024 -
           (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152031 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152286 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C152024 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152286) *
               C152031 +
           ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
               C6528 + C6528 + C152179 * C1458) *
                  C76442 +
              (C6585 + C6586) * C151912) *
                 C96036 +
             ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
                C152286 -
            (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                 C152205 +
             (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
                C152070) *
               C3719) *
              C3375 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152286) *
               C152024 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152286 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152031 +
           (((C107164 * C76442 + (C8771 + C8770) * C151912) * C96036 +
             ((C56258 + C56259) * C76442 +
              (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
               C8245 + C8245 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
             ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
                C152286) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C152378 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152374 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C151983 * C152362 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C151983 * C152337) *
              C3375 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152374 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152378 -
           (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152362 +
           (((C8461 + C8460) * C76442 + (C8459 + C8458) * C151912) * C96036 +
            ((C106777 + C106776) * C76442 +
             (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
              C8982 + C8982 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C3235 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152028) *
              C152377 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152028 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C3235) *
              C152370 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C3235 -
           (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152028) *
              C152355 +
          (((C7089 * C76442 + (C7101 + C7100) * C151912) * C96036 +
            ((C7638 + C7637) * C76442 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C7307 + C7308) * C151912 + C105376 * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152372 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152359 +
            ((C54448 * C76442 + C104857 * C151912) * C96036 +
             ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
                C152330) *
               C3235 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152359 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152372 -
            (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                 C152205 +
             (C108552 * C151912 + C55716 * C76442) * C96036) *
                C152330) *
               C152028) *
              C3375 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152359 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152372 -
            (((C10086 + C10087) * C151912 + C108811 * C76442) * C152205 +
             (C104859 * C151912 + C54427 * C76442) * C96036) *
                C152330) *
               C3235 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152372 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152359 +
            ((C57355 * C76442 + (C9871 + C9870) * C151912) * C96036 +
             ((C57368 + C57367) * C76442 +
              (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
               C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152286 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C3235 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152286) *
               C152028) *
              C151942 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152286) *
               C3235 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152286 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152028) *
              C151951 +
          ((((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
             (C104858 * C76442 + C7296 * C151912) * C152205) *
                C152286 -
            (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
             (C105376 * C151912 + C6893 * C76442) * C96036) *
                C152070) *
               C3235 +
           (((C7639 * C76442 + (C7638 + C7637) * C151912) * C96036 +
             ((C9871 + C9870) * C76442 +
              (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
               C9861 + C9861 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
             ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
                C152286) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C3235 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152028) *
              C152377 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152028 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C3235) *
              C152370 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C3235 -
           (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152028) *
              C152355 +
          (((C7089 * C76442 + (C7101 + C7100) * C151912) * C96036 +
            ((C7638 + C7637) * C76442 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C7307 + C7308) * C151912 + C105376 * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C152378 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152374 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C151983 * C152362 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C151983 * C152337) *
              C3375 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152374 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152378 -
           (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152362 +
           (((C8461 + C8460) * C76442 + (C8459 + C8458) * C151912) * C96036 +
            ((C106777 + C106776) * C76442 +
             (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
              C8982 + C8982 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C4241 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C152024 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C4241) *
               C152031 +
           ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
               C6528 + C6528 + C152179 * C1458) *
                  C76442 +
              (C6585 + C6586) * C151912) *
                 C96036 +
             ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
                C4241 -
            (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                 C152205 +
             (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
                C152070) *
               C3719) *
              C152271 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C4241) *
               C152024 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C4241 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152031 +
           (((C107164 * C76442 + (C8771 + C8770) * C151912) * C96036 +
             ((C56258 + C56259) * C76442 +
              (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
               C8245 + C8245 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
             ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
                C4241) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152066 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152073 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C4913) *
              C152024 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152073 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C152066 -
           (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                C152205 +
            (C108552 * C151912 + C55716 * C76442) * C96036) *
               C4913) *
              C152031 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C152066 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C152073 +
           ((C55760 * C76442 + (C56258 + C56259) * C151912) * C96036 +
            ((C55759 + C55758) * C76442 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C4913) *
              C3719) *
         C151937) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C4241 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C152378 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152070 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C4241) *
              C152374 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C4241 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C152070) *
              C152362 +
          ((((C56472 + C56473) * C76442 + (C106777 + C106776) * C151912) *
                C96036 +
            ((C56474 + C56475) * C76442 +
             (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
              C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C4241 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C3235 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C4241) *
               C152028) *
              C152368 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C4241) *
               C3235 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C4241 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152028) *
              C152353 +
          ((((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
             (C104858 * C76442 + C7296 * C151912) * C152205) *
                C4241 -
            (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
             (C105376 * C151912 + C6893 * C76442) * C96036) *
                C152070) *
               C3235 +
           (((C7639 * C76442 + (C7638 + C7637) * C151912) * C96036 +
             ((C9871 + C9870) * C76442 +
              (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
               C9861 + C9861 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
             ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152379 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152376 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152365 -
           (((C57575 + C57576) * C151912 + (C57060 + C57059) * C76442) *
                C152205 +
            (C108811 * C151912 + C57037 * C76442) * C96036) *
               C152343) *
              C3235 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152376 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C152379 -
           (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                C152205 +
            (C108552 * C151912 + C55716 * C76442) * C96036) *
               C152365 +
           ((C57771 * C76442 + (C57368 + C57367) * C151912) * C96036 +
            ((C57784 + C57783) * C76442 +
             (C6223 * C9541 + C57360 + C57360 + C152299 * C9547 +
              C6225 * C26494 + C57361 + C57361 + C152179 * C26498) *
                 C151912) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152066 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152073 +
            ((C54448 * C76442 + C104857 * C151912) * C96036 +
             ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
                C4913) *
               C3235 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152073 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152066 -
            (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                 C152205 +
             (C108552 * C151912 + C55716 * C76442) * C96036) *
                C4913) *
               C152028) *
              C152271 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152073 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152066 -
            (((C10086 + C10087) * C151912 + C108811 * C76442) * C152205 +
             (C104859 * C151912 + C54427 * C76442) * C96036) *
                C4913) *
               C3235 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152066 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152073 +
            ((C57355 * C76442 + (C9871 + C9870) * C151912) * C96036 +
             ((C57368 + C57367) * C76442 +
              (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
               C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C4241 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C3235 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C4241) *
               C152028) *
              C152368 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C4241) *
               C3235 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C4241 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152028) *
              C152353 +
          ((((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
             (C104858 * C76442 + C7296 * C151912) * C152205) *
                C4241 -
            (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
             (C105376 * C151912 + C6893 * C76442) * C96036) *
                C152070) *
               C3235 +
           (((C7639 * C76442 + (C7638 + C7637) * C151912) * C96036 +
             ((C9871 + C9870) * C76442 +
              (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
               C9861 + C9861 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
             ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C4241 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C152378 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152070 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C4241) *
              C152374 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C4241 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C152070) *
              C152362 +
          ((((C56472 + C56473) * C76442 + (C106777 + C106776) * C151912) *
                C96036 +
            ((C56474 + C56475) * C76442 +
             (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
              C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C1795 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C1796 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C1797 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C151983 * C152337) *
              C152271 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C1796 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C1795 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C1797 +
           (((C8461 + C8460) * C76442 + (C8459 + C8458) * C151912) * C96036 +
            ((C106777 + C106776) * C76442 +
             (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
              C8982 + C8982 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C152285 -
           (((C7634 + C7633) * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152028) *
              C807 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            ((C7633 + C7634) * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152028 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152285) *
              C808 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C152285 -
           (((C7637 + C7638) * C151912 + (C7636 + C7635) * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152028) *
              C809 +
          (((C7089 * C76442 + (C7101 + C7100) * C151912) * C96036 +
            ((C7638 + C7637) * C76442 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C7307 + C7308) * C151912 + (C6890 + C6889) * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C2325 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C2326 +
            ((C54448 * C76442 + C104857 * C151912) * C96036 +
             ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
                C152330) *
               C152285 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C2326 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C2325 -
            (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                 C152205 +
             (C108552 * C151912 + C55716 * C76442) * C96036) *
                C152330) *
               C152028) *
              C152271 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C2326 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C2325 -
            (((C10086 + C10087) * C151912 + (C10088 + C10089) * C76442) *
                 C152205 +
             (C104859 * C151912 + C54427 * C76442) * C96036) *
                C152330) *
               C152285 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C2325 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C2326 +
            ((C57355 * C76442 + (C9871 + C9870) * C151912) * C96036 +
             ((C57368 + C57367) * C76442 +
              (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
               C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152286 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C1795 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152070 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C152286) *
              C1796 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C152286 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C152070) *
              C1797 +
          ((((C56472 + C56473) * C76442 + (C106777 + C106776) * C151912) *
                C96036 +
            ((C56474 + C56475) * C76442 +
             (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
              C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152286 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C152285 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152286) *
               C152028) *
              C347 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152286) *
               C152285 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152286 -
            (((C9870 + C9871) * C151912 + (C9872 + C9873) * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152028) *
              C348 +
          ((((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
             (C104858 * C76442 + C7296 * C151912) * C152205) *
                C152286 -
            (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
             (C105376 * C151912 + C6893 * C76442) * C96036) *
                C152070) *
               C152285 +
           (((C7639 * C76442 + (C7638 + C7637) * C151912) * C96036 +
             ((C9871 + C9870) * C76442 +
              (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
               C9861 + C9861 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
             ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C2936 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C2937 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C2938 -
           (((C57575 + C57576) * C151912 + (C57060 + C57059) * C76442) *
                C152205 +
            (C108811 * C151912 + C57037 * C76442) * C96036) *
               C152343) *
              C152285 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C2937 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C2936 -
           (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                C152205 +
            (C108552 * C151912 + C55716 * C76442) * C96036) *
               C2938 +
           ((C57771 * C76442 + (C57368 + C57367) * C151912) * C96036 +
            ((C57784 + C57783) * C76442 +
             (C6223 * C9541 + C57360 + C57360 + C152299 * C9547 +
              C6225 * C26494 + C57361 + C57361 + C152179 * C26498) *
                 C151912) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C76442 +
                (C6282 + C6283) * C151912) *
                   C96036 +
               ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) *
                   C152205) *
                  C151983 * C151965 * C129 -
              ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
               ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) *
                   C96036) *
                  C151983 * C151965 * C130 +
              ((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
               ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
                  C151983 * C151965 * C131 -
              (((C7307 + C7308) * C151912 + (C6890 + C6889) * C76442) *
                   C152205 +
               ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
                  C151983 * C151965 * C132 +
              ((C6294 * C76442 + (C6291 + C6290) * C151912) * C96036 +
               ((C7308 + C7307) * C76442 +
                (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
                 C7302 + C7302 + C152179 * C1172) *
                    C151912) *
                   C152205) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                  C6229 + C6229 + C152179 * C377) *
                     C76442 +
                 (C6282 + C6283) * C151912) *
                    C96036 +
                ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) *
                    C152205) *
                   C151983 * C152371 -
               (((C7634 + C7633) * C151912 + (C55145 + C55144) * C76442) *
                    C152205 +
                ((C6583 + C6584) * C151912 +
                 (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                  C6526 + C6526 + C152299 * C377) *
                     C76442) *
                    C96036) *
                   C151983 * C152357 +
               (((C6223 * C354 + C6527 + C6527 + C152299 * C378 +
                  C6225 * C1442 + C6528 + C6528 + C152179 * C1458) *
                     C76442 +
                 (C6585 + C6586) * C151912) *
                    C96036 +
                ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                    C152205) *
                   C151983 * C152327) *
                  C347 +
              ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) *
                    C96036 +
                ((C7633 + C7634) * C76442 + C7639 * C151912) * C152205) *
                   C151983 * C152357 -
               ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
                ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) *
                    C96036) *
                   C151983 * C152371 -
               (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) *
                    C152205 +
                ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) *
                    C96036) *
                   C151983 * C152327) *
                  C348 +
              (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
                ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
                   C151983 * C152371 -
               (((C7637 + C7638) * C151912 + (C7636 + C7635) * C76442) *
                    C152205 +
                ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
                   C151983 * C152357 +
               ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
                ((C8771 + C8770) * C76442 +
                 (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 +
                  C6225 * C2166 + C8761 + C8761 + C152179 * C2174) *
                     C151912) *
                    C152205) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152372 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152359 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C151965 * C347 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152359 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C152372 -
           (((C10086 + C10087) * C151912 + (C10088 + C10089) * C76442) *
                C152205 +
            (C104859 * C151912 + C54427 * C76442) * C96036) *
               C152330) *
              C151965 * C348 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C152372 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            ((C6890 + C6889) * C151912 + C6893 * C76442) * C96036) *
               C152359 +
           ((C6894 * C76442 + (C6892 + C6891) * C151912) * C96036 +
            ((C10087 + C10086) * C76442 +
             (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 +
              C6225 * C3092 + C10077 + C10077 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C1345 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C1346 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C1345 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C1345 -
           (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C1346 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
              C151983 * C1433 -
          ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
           ((C6583 + C6584) * C151912 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C76442) *
               C96036) *
              C151983 * C1434 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C76442 +
            (C6585 + C6586) * C151912) *
               C96036 +
           ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) * C152205) *
              C151983 * C1435 -
          (((C6225 * C8968 + C8980 + C8980 + C152179 * C8974 + C6223 * C2164 +
             C8979 + C8979 + C152299 * C2172) *
                C151912 +
            (C56473 + C56472) * C76442) *
               C152205 +
           ((C8460 + C8461) * C151912 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C76442) *
               C96036) *
              C151983 * C1436 +
          (((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
             C7996 + C7996 + C152179 * C7985) *
                C76442 +
            (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
             C7998 + C7998 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C6223 * C8967 + C55490 + C55490 + C152299 * C8973 +
             C6225 * C25923 + C55491 + C55491 + C152179 * C25927) *
                C76442 +
            (C6223 * C8968 + C106218 + C106218 + C152299 * C8974 +
             C6225 * C25924 + C106219 + C106219 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152372 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152359 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C1345 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152359 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C152372 -
           (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                C152205 +
            ((C9872 + C9873) * C151912 + C55716 * C76442) * C96036) *
               C152330) *
              C1346 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C152372 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            ((C8772 + C8773) * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C152359 +
           ((C55760 * C76442 + (C56258 + C56259) * C151912) * C96036 +
            ((C55759 + C55758) * C76442 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C2325 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C2326 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C2326 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C2325 -
           (((C10086 + C10087) * C151912 + (C10088 + C10089) * C76442) *
                C152205 +
            (C104859 * C151912 + C54427 * C76442) * C96036) *
               C152330) *
              C151965 * C152353 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C2325 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            (C105376 * C151912 + C6893 * C76442) * C96036) *
               C2326 +
           ((C6894 * C76442 + (C6892 + C6891) * C151912) * C96036 +
            ((C10087 + C10086) * C76442 +
             (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 +
              C6225 * C3092 + C10077 + C10077 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C2325 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C2326 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C152371 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C2326 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C2325 -
           (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                C152205 +
            ((C9872 + C9873) * C151912 + C55716 * C76442) * C96036) *
               C152330) *
              C152357 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C2325 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C2326 +
           ((C55760 * C76442 + (C56258 + C56259) * C151912) * C96036 +
            ((C55759 + C55758) * C76442 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
              C2556 -
          ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
           (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
              C2557 +
          ((C54448 * C76442 + C104857 * C151912) * C96036 +
           ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
              C2558 -
          (((C57575 + C57576) * C151912 + (C57060 + C57059) * C76442) *
               C152205 +
           ((C10088 + C10089) * C151912 + C57037 * C76442) * C96036) *
              C2559 +
          ((C57063 * C76442 + (C57576 + C57575) * C151912) * C96036 +
           ((C57062 + C57061) * C76442 +
            (C6223 * C17868 + C57568 + C57568 + C152299 * C17874 +
             C6225 * C49415 + C57569 + C57569 + C152179 * C49417) *
                C151912) *
               C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152286 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C1345 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152286) *
               C1346 +
           ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
               C6528 + C6528 + C152179 * C1458) *
                  C76442 +
              (C6585 + C6586) * C151912) *
                 C96036 +
             ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
                C152286 -
            (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                 C152205 +
             (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
                C152070) *
               C152327) *
              C152271 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152286) *
               C1345 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152286 -
            (((C9870 + C9871) * C151912 + (C9872 + C9873) * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C1346 +
           (((C107164 * C76442 + (C8771 + C8770) * C151912) * C96036 +
             ((C56258 + C56259) * C76442 +
              (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
               C8245 + C8245 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
             ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152286 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C151965 * C807 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152070 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C152286) *
              C151965 * C808 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C152286 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            (C105376 * C151912 + C6893 * C76442) * C96036) *
               C152070) *
              C151965 * C809 +
          (((C7296 * C76442 + (C7308 + C7307) * C151912) * C96036 +
            ((C6892 + C6891) * C76442 +
             (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
              C6856 + C6856 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C7307 + C7308) * C151912 + C105376 * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C2936 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C2937 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C2938 -
           (((C57575 + C57576) * C151912 + (C57060 + C57059) * C76442) *
                C152205 +
            (C108811 * C151912 + C57037 * C76442) * C96036) *
               C152343) *
              C151965 * C152271 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C2937 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C2936 -
           (((C10086 + C10087) * C151912 + C108811 * C76442) * C152205 +
            (C104859 * C151912 + C54427 * C76442) * C96036) *
               C2938 +
           ((C57563 * C76442 + (C10087 + C10086) * C151912) * C96036 +
            ((C57576 + C57575) * C76442 +
             (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
              C9561 + C9561 + C152179 * C9548) *
                 C151912) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) *
                C152205) *
               C151983 * C152371 -
           (((C7634 + C7633) * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C152327) *
              C347 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            ((C7633 + C7634) * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152357 -
           ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152371 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152327) *
              C348 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
               C151983 * C152371 -
           (((C7637 + C7638) * C151912 + (C7636 + C7635) * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152357 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) * C152205) *
              C151983 * C151965 * C129 -
          ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
           ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
              C151983 * C151965 * C130 +
          ((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
           ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
              C151983 * C151965 * C131 -
          (((C7307 + C7308) * C151912 + (C6890 + C6889) * C76442) * C152205 +
           ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
              C151983 * C151965 * C132 +
          ((C6294 * C76442 + (C6291 + C6290) * C151912) * C96036 +
           ((C7308 + C7307) * C76442 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C151912) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C1345 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C1346 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C1345 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C1345 -
           (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C1346 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
              C151983 * C1433 -
          ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
           ((C6583 + C6584) * C151912 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C76442) *
               C96036) *
              C151983 * C1434 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C76442 +
            (C6585 + C6586) * C151912) *
               C96036 +
           ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) * C152205) *
              C151983 * C1435 -
          (((C6225 * C8968 + C8980 + C8980 + C152179 * C8974 + C6223 * C2164 +
             C8979 + C8979 + C152299 * C2172) *
                C151912 +
            (C56473 + C56472) * C76442) *
               C152205 +
           ((C8460 + C8461) * C151912 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C76442) *
               C96036) *
              C151983 * C1436 +
          (((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
             C7996 + C7996 + C152179 * C7985) *
                C76442 +
            (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
             C7998 + C7998 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C6223 * C8967 + C55490 + C55490 + C152299 * C8973 +
             C6225 * C25923 + C55491 + C55491 + C152179 * C25927) *
                C76442 +
            (C6223 * C8968 + C106218 + C106218 + C152299 * C8974 +
             C6225 * C25924 + C106219 + C106219 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C2325 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C2326 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C2326 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C2325 -
           (((C10086 + C10087) * C151912 + (C10088 + C10089) * C76442) *
                C152205 +
            (C104859 * C151912 + C54427 * C76442) * C96036) *
               C152330) *
              C151965 * C152353 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C2325 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            (C105376 * C151912 + C6893 * C76442) * C96036) *
               C2326 +
           ((C6894 * C76442 + (C6892 + C6891) * C151912) * C96036 +
            ((C10087 + C10086) * C76442 +
             (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 +
              C6225 * C3092 + C10077 + C10077 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C2325 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C2326 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C152371 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C2326 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C2325 -
           (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                C152205 +
            ((C9872 + C9873) * C151912 + C55716 * C76442) * C96036) *
               C152330) *
              C152357 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C2325 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C2326 +
           ((C55760 * C76442 + (C56258 + C56259) * C151912) * C96036 +
            ((C55759 + C55758) * C76442 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C4241 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C152285 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C4241) *
               C152028) *
              C151942 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C4241) *
               C152285 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C4241 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152028) *
              C151951 +
          ((((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
             (C104858 * C76442 + C7296 * C151912) * C152205) *
                C4241 -
            (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
             (C105376 * C151912 + C6893 * C76442) * C96036) *
                C152070) *
               C152285 +
           (((C7639 * C76442 + (C7638 + C7637) * C151912) * C96036 +
             ((C9871 + C9870) * C76442 +
              (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
               C9861 + C9861 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
             ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
                C4241) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152066 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152073 +
            ((C54448 * C76442 + C104857 * C151912) * C96036 +
             ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
                C4913) *
               C152285 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152073 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152066 -
            (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                 C152205 +
             (C108552 * C151912 + C55716 * C76442) * C96036) *
                C4913) *
               C152028) *
              C3375 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152073 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152066 -
            (((C10086 + C10087) * C151912 + C108811 * C76442) * C152205 +
             (C104859 * C151912 + C54427 * C76442) * C96036) *
                C4913) *
               C152285 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152066 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152073 +
            ((C57355 * C76442 + (C9871 + C9870) * C151912) * C96036 +
             ((C57368 + C57367) * C76442 +
              (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
               C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                  C151912) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C4241 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C152371 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C4241) *
               C152357 +
           ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
               C6528 + C6528 + C152179 * C1458) *
                  C76442 +
              (C6585 + C6586) * C151912) *
                 C96036 +
             ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
                C4241 -
            (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                 C152205 +
             (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
                C152070) *
               C152327) *
              C3375 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C4241) *
               C152371 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C4241 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152357 +
           (((C107164 * C76442 + (C8771 + C8770) * C151912) * C96036 +
             ((C56258 + C56259) * C76442 +
              (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
               C8245 + C8245 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
             ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C4241 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C151965 * C152377 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152070 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C4241) *
              C151965 * C152370 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C4241 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            (C105376 * C151912 + C6893 * C76442) * C96036) *
               C152070) *
              C151965 * C152355 +
          (((C7296 * C76442 + (C7308 + C7307) * C151912) * C96036 +
            ((C6892 + C6891) * C76442 +
             (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
              C6856 + C6856 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C7307 + C7308) * C151912 + C105376 * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152379 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152376 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152365 -
           (((C57575 + C57576) * C151912 + (C57060 + C57059) * C76442) *
                C152205 +
            (C108811 * C151912 + C57037 * C76442) * C96036) *
               C152343) *
              C151965 * C3375 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152376 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C152379 -
           (((C10086 + C10087) * C151912 + C108811 * C76442) * C152205 +
            (C104859 * C151912 + C54427 * C76442) * C96036) *
               C152365 +
           ((C57563 * C76442 + (C10087 + C10086) * C151912) * C96036 +
            ((C57576 + C57575) * C76442 +
             (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
              C9561 + C9561 + C152179 * C9548) *
                 C151912) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152066 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152073 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C4913) *
              C151965 * C151942 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152073 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C152066 -
           (((C10086 + C10087) * C151912 + C108811 * C76442) * C152205 +
            (C104859 * C151912 + C54427 * C76442) * C96036) *
               C4913) *
              C151965 * C151951 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C152066 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            (C105376 * C151912 + C6893 * C76442) * C96036) *
               C152073 +
           ((C6894 * C76442 + (C6892 + C6891) * C151912) * C96036 +
            ((C10087 + C10086) * C76442 +
             (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 +
              C6225 * C3092 + C10077 + C10077 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C4913) *
              C151965 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C4241 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C151965 * C152377 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152070 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C4241) *
              C151965 * C152370 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C4241 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            (C105376 * C151912 + C6893 * C76442) * C96036) *
               C152070) *
              C151965 * C152355 +
          (((C7296 * C76442 + (C7308 + C7307) * C151912) * C96036 +
            ((C6892 + C6891) * C76442 +
             (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
              C6856 + C6856 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C7307 + C7308) * C151912 + C105376 * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C4241 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C152371 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C4241) *
               C152357 +
           ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
               C6528 + C6528 + C152179 * C1458) *
                  C76442 +
              (C6585 + C6586) * C151912) *
                 C96036 +
             ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
                C4241 -
            (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                 C152205 +
             (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
                C152070) *
               C152327) *
              C3375 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C4241) *
               C152371 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C4241 -
            (((C9870 + C9871) * C151912 + C108552 * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152357 +
           (((C107164 * C76442 + (C8771 + C8770) * C151912) * C96036 +
             ((C56258 + C56259) * C76442 +
              (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
               C8245 + C8245 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
             ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C152285 -
           (((C7634 + C7633) * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152028) *
              C807 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            ((C7633 + C7634) * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152028 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152285) *
              C808 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C152285 -
           (((C7637 + C7638) * C151912 + (C7636 + C7635) * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152028) *
              C809 +
          (((C7089 * C76442 + (C7101 + C7100) * C151912) * C96036 +
            ((C7638 + C7637) * C76442 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C151912) *
                C152205) *
               C151983 * C152028 -
           (((C7307 + C7308) * C151912 + (C6890 + C6889) * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C1795 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C1796 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C1797 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C151983 * C152337) *
              C152271 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C1796 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C1795 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C1797 +
           (((C8461 + C8460) * C76442 + (C8459 + C8458) * C151912) * C96036 +
            ((C106777 + C106776) * C76442 +
             (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
              C8982 + C8982 + C152179 * C8975) *
                 C151912) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152286 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C152285 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152286) *
               C152028) *
              C347 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152286) *
               C152285 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152286 -
            (((C9870 + C9871) * C151912 + (C9872 + C9873) * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C152028) *
              C348 +
          ((((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
             (C104858 * C76442 + C7296 * C151912) * C152205) *
                C152286 -
            (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
             (C105376 * C151912 + C6893 * C76442) * C96036) *
                C152070) *
               C152285 +
           (((C7639 * C76442 + (C7638 + C7637) * C151912) * C96036 +
             ((C9871 + C9870) * C76442 +
              (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
               C9861 + C9861 + C152179 * C1652) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
             ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152286 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C1795 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152070 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C152286) *
              C1796 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
               C152286 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C152070) *
              C1797 +
          ((((C56472 + C56473) * C76442 + (C106777 + C106776) * C151912) *
                C96036 +
            ((C56474 + C56475) * C76442 +
             (C6223 * C8219 + C55956 + C55956 + C152299 * C8225 +
              C6225 * C25186 + C55957 + C55957 + C152179 * C25190) *
                 C151912) *
                C152205) *
               C152070 -
           (((C106776 + C106777) * C151912 + (C56473 + C56472) * C76442) *
                C152205 +
            ((C8460 + C8461) * C151912 +
             (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
              C7994 + C7994 + C152299 * C1458) *
                 C76442) *
                C96036) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) *
                C152205) *
               C151983 * C152371 -
           (((C7634 + C7633) * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C152327) *
              C347 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            ((C7633 + C7634) * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152357 -
           ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152371 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152327) *
              C348 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
               C151983 * C152371 -
           (((C7637 + C7638) * C151912 + (C7636 + C7635) * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152357 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) * C152205) *
              C151983 * C151965 * C129 -
          ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
           ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
              C151983 * C151965 * C130 +
          ((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
           ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
              C151983 * C151965 * C131 -
          (((C7307 + C7308) * C151912 + (C6890 + C6889) * C76442) * C152205 +
           ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
              C151983 * C151965 * C132 +
          ((C6294 * C76442 + (C6291 + C6290) * C151912) * C96036 +
           ((C7308 + C7307) * C76442 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C151912) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152372 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152359 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C151965 * C347 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152359 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C152372 -
           (((C10086 + C10087) * C151912 + (C10088 + C10089) * C76442) *
                C152205 +
            (C104859 * C151912 + C54427 * C76442) * C96036) *
               C152330) *
              C151965 * C348 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C152372 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            ((C6890 + C6889) * C151912 + C6893 * C76442) * C96036) *
               C152359 +
           ((C6894 * C76442 + (C6892 + C6891) * C151912) * C96036 +
            ((C10087 + C10086) * C76442 +
             (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 +
              C6225 * C3092 + C10077 + C10077 + C152179 * C3100) *
                 C151912) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C1345 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C1346 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C1345 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C1345 -
           (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C1346 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
              C151983 * C1433 -
          ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
           ((C6583 + C6584) * C151912 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C76442) *
               C96036) *
              C151983 * C1434 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C76442 +
            (C6585 + C6586) * C151912) *
               C96036 +
           ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) * C152205) *
              C151983 * C1435 -
          (((C6225 * C8968 + C8980 + C8980 + C152179 * C8974 + C6223 * C2164 +
             C8979 + C8979 + C152299 * C2172) *
                C151912 +
            (C56473 + C56472) * C76442) *
               C152205 +
           ((C8460 + C8461) * C151912 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C76442) *
               C96036) *
              C151983 * C1436 +
          (((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
             C7996 + C7996 + C152179 * C7985) *
                C76442 +
            (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
             C7998 + C7998 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C6223 * C8967 + C55490 + C55490 + C152299 * C8973 +
             C6225 * C25923 + C55491 + C55491 + C152179 * C25927) *
                C76442 +
            (C6223 * C8968 + C106218 + C106218 + C152299 * C8974 +
             C6225 * C25924 + C106219 + C106219 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152372 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152359 +
           ((C54448 * C76442 + C104857 * C151912) * C96036 +
            ((C54447 + C54446) * C76442 + C57563 * C151912) * C152205) *
               C152330) *
              C1345 +
          ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
            ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
               C152359 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C152372 -
           (((C57367 + C57368) * C151912 + (C55753 + C55752) * C76442) *
                C152205 +
            ((C9872 + C9873) * C151912 + C55716 * C76442) * C96036) *
               C152330) *
              C1346 +
          ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C152372 -
           (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                C152205 +
            ((C8772 + C8773) * C151912 + (C55755 + C55754) * C76442) * C96036) *
               C152359 +
           ((C55760 * C76442 + (C56258 + C56259) * C151912) * C96036 +
            ((C55759 + C55758) * C76442 +
             (C6223 * C10284 + C56252 + C56252 + C152299 * C10290 +
              C6225 * C27226 + C56253 + C56253 + C152179 * C27230) *
                 C151912) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C152286 -
           ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
            (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
               C152070) *
              C151965 * C807 +
          (((C104855 * C76442 + C104858 * C151912) * C96036 +
            (C104857 * C76442 + C6894 * C151912) * C152205) *
               C152070 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C152286) *
              C151965 * C808 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C152286 -
           (((C6891 + C6892) * C151912 + C104859 * C76442) * C152205 +
            (C105376 * C151912 + C6893 * C76442) * C96036) *
               C152070) *
              C151965 * C809 +
          (((C7296 * C76442 + (C7308 + C7307) * C151912) * C96036 +
            ((C6892 + C6891) * C76442 +
             (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
              C6856 + C6856 + C152179 * C2789) *
                 C151912) *
                C152205) *
               C152070 -
           (((C7307 + C7308) * C151912 + C105376 * C76442) * C152205 +
            ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
               C6229 + C6229 + C152179 * C377) *
                  C76442 +
              (C6282 + C6283) * C151912) *
                 C96036 +
             ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
                C152286 -
            ((C54427 * C151912 + (C54445 + C54444) * C76442) * C152205 +
             (C104856 * C151912 + (C54443 + C54442) * C76442) * C96036) *
                C152070) *
               C1345 +
           ((((C55144 + C55145) * C76442 + C105763 * C151912) * C96036 +
             ((C55146 + C55147) * C76442 + C57355 * C151912) * C152205) *
                C152070 -
            ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
             ((C6583 + C6584) * C151912 +
              (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
               C6526 + C6526 + C152299 * C377) *
                  C76442) *
                 C96036) *
                C152286) *
               C1346 +
           ((((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
               C6528 + C6528 + C152179 * C1458) *
                  C76442 +
              (C6585 + C6586) * C151912) *
                 C96036 +
             ((C55754 + C55755) * C76442 + C107164 * C151912) * C152205) *
                C152286 -
            (((C56259 + C56258) * C151912 + (C55757 + C55756) * C76442) *
                 C152205 +
             (C107165 * C151912 + (C55755 + C55754) * C76442) * C96036) *
                C152070) *
               C152327) *
              C152271 +
          ((((C104855 * C76442 + C104858 * C151912) * C96036 +
             (C104857 * C76442 + C6894 * C151912) * C152205) *
                C152070 -
            ((C6893 * C151912 + C104856 * C76442) * C152205 +
             ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
                C152286) *
               C1345 +
           ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
             (C105763 * C76442 + C7639 * C151912) * C152205) *
                C152286 -
            (((C9870 + C9871) * C151912 + (C9872 + C9873) * C76442) * C152205 +
             (C105765 * C151912 + C105764 * C76442) * C96036) *
                C152070) *
               C1346 +
           (((C107164 * C76442 + (C8771 + C8770) * C151912) * C96036 +
             ((C56258 + C56259) * C76442 +
              (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
               C8245 + C8245 + C152179 * C8226) *
                  C151912) *
                 C152205) *
                C152070 -
            (((C8770 + C8771) * C151912 + C107165 * C76442) * C152205 +
             ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) * C152205) *
              C151983 * C151965 * C129 -
          ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
           ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
              C151983 * C151965 * C130 +
          ((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
           ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
              C151983 * C151965 * C131 -
          (((C7307 + C7308) * C151912 + (C6890 + C6889) * C76442) * C152205 +
           ((C6289 + C6288) * C151912 + C6293 * C76442) * C96036) *
              C151983 * C151965 * C132 +
          ((C6294 * C76442 + (C6291 + C6290) * C151912) * C96036 +
           ((C7308 + C7307) * C76442 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C151912) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + (C6884 + C6883) * C151912) *
                C152205) *
               C151983 * C152371 -
           (((C7634 + C7633) * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C152327) *
              C347 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            ((C7633 + C7634) * C76442 + C7639 * C151912) * C152205) *
               C151983 * C152357 -
           ((C6893 * C151912 + (C6883 + C6884) * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C152371 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152327) *
              C348 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            ((C6882 + C6881) * C76442 + C7296 * C151912) * C152205) *
               C151983 * C152371 -
           (((C7637 + C7638) * C151912 + (C7636 + C7635) * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C152357 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C76442 +
             (C6282 + C6283) * C151912) *
                C96036 +
            ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
               C151983 * C1345 -
           ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
            ((C6583 + C6584) * C151912 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C76442) *
                C96036) *
               C151983 * C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C76442 +
             (C6585 + C6586) * C151912) *
                C96036 +
            ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          ((((C6584 + C6583) * C76442 + (C6582 + C6581) * C151912) * C96036 +
            (C105763 * C76442 + C7639 * C151912) * C152205) *
               C151983 * C1346 -
           ((C6893 * C151912 + C104856 * C76442) * C152205 +
            ((C6285 + C6284) * C151912 + (C6283 + C6282) * C76442) * C96036) *
               C151983 * C1345 -
           (((C8770 + C8771) * C151912 + (C8772 + C8773) * C76442) * C152205 +
            ((C6588 + C6587) * C151912 + (C6586 + C6585) * C76442) * C96036) *
               C151983 * C152327) *
              C152353 +
          (((C6292 * C76442 + (C6287 + C6286) * C151912) * C96036 +
            (C104858 * C76442 + C7296 * C151912) * C152205) *
               C151983 * C1345 -
           (((C7637 + C7638) * C151912 + C105765 * C76442) * C152205 +
            ((C6590 + C6589) * C151912 + C6593 * C76442) * C96036) *
               C151983 * C1346 +
           ((C6594 * C76442 + (C6592 + C6591) * C151912) * C96036 +
            ((C8771 + C8770) * C76442 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C151912) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C76442 +
            (C6282 + C6283) * C151912) *
               C96036 +
           ((C54442 + C54443) * C76442 + C104855 * C151912) * C152205) *
              C151983 * C1433 -
          ((C105764 * C151912 + (C55145 + C55144) * C76442) * C152205 +
           ((C6583 + C6584) * C151912 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C76442) *
               C96036) *
              C151983 * C1434 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C76442 +
            (C6585 + C6586) * C151912) *
               C96036 +
           ((C55754 + C55755) * C76442 + (C8773 + C8772) * C151912) * C152205) *
              C151983 * C1435 -
          (((C6225 * C8968 + C8980 + C8980 + C152179 * C8974 + C6223 * C2164 +
             C8979 + C8979 + C152299 * C2172) *
                C151912 +
            (C56473 + C56472) * C76442) *
               C152205 +
           ((C8460 + C8461) * C151912 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C76442) *
               C96036) *
              C151983 * C1436 +
          (((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
             C7996 + C7996 + C152179 * C7985) *
                C76442 +
            (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
             C7998 + C7998 + C152179 * C7986) *
                C151912) *
               C96036 +
           ((C6223 * C8967 + C55490 + C55490 + C152299 * C8973 +
             C6225 * C25923 + C55491 + C55491 + C152179 * C25927) *
                C76442 +
            (C6223 * C8968 + C106218 + C106218 + C152299 * C8974 +
             C6225 * C25924 + C106219 + C106219 + C152179 * C25928) *
                C151912) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C152024 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C151983 * C3719) *
              C151942 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + C118346 * C115085) *
               C151983 * C152031 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152024 -
           ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C3719) *
              C151951 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C152024 -
           ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152031 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C3719) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152286 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C152024 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152286) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
              C434 * C151912) *
                 C152367 +
             (C116799 + C116800) * C152349 + C116805 * C115085) *
                C152286 -
            ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
             (C116800 + C116799) * C152367) *
                C152070) *
               C3719) *
              C3375 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152286) *
               C152024 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C152286 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152031 +
           (((C117290 + C117291) * C152367 + (C117292 + C117293) * C152349 +
             (C47443 * C76442 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C115085) *
                C152070 -
            ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
             (C435 * C151912 + C434 * C76442) * C152367) *
                C152286) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C152378 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C151983 * C152362 -
           ((C117491 + C117490) * C115085 + (C117489 + C117488) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + C118346 * C115085) *
               C151983 * C152374 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152378 -
           ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152362 +
           ((C1820 * C76442 + C1819 * C151912) * C152367 +
            (C16811 * C76442 + C16810 * C151912) * C152349 +
            (C47645 * C76442 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C3235 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + C118346 * C115085) *
               C151983 * C152028 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C3235 -
           ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C76442 + C437 * C151912) * C152367 +
            (C1198 * C76442 + C1199 * C151912) * C152349 +
            (C2804 * C76442 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C115085) *
               C151983 * C152028 -
           ((C115935 + C115934) * C115085 + (C115933 + C115932) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152372 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152359 +
            (C115541 * C152367 + (C115528 + C115527) * C152349 +
             C118055 * C115085) *
                C152330) *
               C3235 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152359 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152372 -
            ((C118741 + C118742) * C115085 + (C116797 + C116796) * C152349 +
             C116798 * C152367) *
                C152330) *
               C152028) *
              C3375 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152359 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152372 -
            ((C118544 + C118545) * C115085 + (C115534 + C115533) * C152349 +
             C115542 * C152367) *
                C152330) *
               C3235 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C152372 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152359 +
            (C118346 * C152367 + (C118348 + C118347) * C152349 +
             (C49024 * C76442 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C115085) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152286 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C3235 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152286) *
               C152028) *
              C151942 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152286) *
               C3235 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C152286 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C76442 + C195 * C151912) * C152367 +
             (C115535 + C115536) * C152349 + C115543 * C115085) *
                C152286 -
            ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
             (C115536 + C115535) * C152367) *
                C152070) *
               C3235 +
           (((C116234 + C116235) * C152367 + (C116236 + C116237) * C152349 +
             (C18207 * C76442 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C115085) *
                C152070 -
            ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
             (C431 * C151912 + C432 * C76442) * C152367) *
                C152286) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C3235 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + C118346 * C115085) *
               C151983 * C152028 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C3235 -
           ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C76442 + C437 * C151912) * C152367 +
            (C1198 * C76442 + C1199 * C151912) * C152349 +
            (C2804 * C76442 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C115085) *
               C151983 * C152028 -
           ((C115935 + C115934) * C115085 + (C115933 + C115932) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C152378 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C151983 * C152362 -
           ((C117491 + C117490) * C115085 + (C117489 + C117488) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + C118346 * C115085) *
               C151983 * C152374 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152378 -
           ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152362 +
           ((C1820 * C76442 + C1819 * C151912) * C152367 +
            (C16811 * C76442 + C16810 * C151912) * C152349 +
            (C47645 * C76442 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C4241 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C152024 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C4241) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
              C434 * C151912) *
                 C152367 +
             (C116799 + C116800) * C152349 + C116805 * C115085) *
                C4241 -
            ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
             (C116800 + C116799) * C152367) *
                C152070) *
               C3719) *
              C152271 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C4241) *
               C152024 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C4241 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152031 +
           (((C117290 + C117291) * C152367 + (C117292 + C117293) * C152349 +
             (C47443 * C76442 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C115085) *
                C152070 -
            ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
             (C435 * C151912 + C434 * C76442) * C152367) *
                C4241) *
               C3719) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152066 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152073 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            C118055 * C115085) *
               C4913) *
              C152024 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            C118740 * C115085) *
               C152073 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C152066 -
           ((C118741 + C118742) * C115085 + (C116797 + C116796) * C152349 +
            C116798 * C152367) *
               C4913) *
              C152031 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C152066 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C152073 +
           (C116805 * C152367 + (C116804 + C116803) * C152349 +
            (C63453 * C76442 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C115085) *
               C4913) *
              C3719) *
         C151937) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C4241 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C152378 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            C118740 * C115085) *
               C152070 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C4241 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C152070) *
              C152362 +
          (((C117488 + C117489) * C152367 + (C117490 + C117491) * C152349 +
            (C63919 * C76442 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C115085) *
               C152070 -
           ((C117491 + C117490) * C115085 + (C117489 + C117488) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C4241 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C3235 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C4241) *
               C152028) *
              C152368 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C4241) *
               C3235 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C4241 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C76442 + C195 * C151912) * C152367 +
             (C115535 + C115536) * C152349 + C115543 * C115085) *
                C4241 -
            ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
             (C115536 + C115535) * C152367) *
                C152070) *
               C3235 +
           (((C116234 + C116235) * C152367 + (C116236 + C116237) * C152349 +
             (C18207 * C76442 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C115085) *
                C152070 -
            ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
             (C431 * C151912 + C432 * C76442) * C152367) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152379 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152376 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            C118055 * C115085) *
               C152365 -
           ((C118053 + C118054) * C115085 + (C118052 + C118051) * C152349 +
            C118050 * C152367) *
               C152343) *
              C3235 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            C118740 * C115085) *
               C152376 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C152379 -
           ((C118741 + C118742) * C115085 + (C116797 + C116796) * C152349 +
            C116798 * C152367) *
               C152365 +
           (C118740 * C152367 + (C118742 + C118741) * C152349 +
            (C64767 * C76442 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151912) *
                C115085) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[283] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152066 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152073 +
            (C115541 * C152367 + (C115528 + C115527) * C152349 +
             C118055 * C115085) *
                C4913) *
               C3235 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152073 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152066 -
            ((C118741 + C118742) * C115085 + (C116797 + C116796) * C152349 +
             C116798 * C152367) *
                C4913) *
               C152028) *
              C152271 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152073 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152066 -
            ((C118544 + C118545) * C115085 + (C115534 + C115533) * C152349 +
             C115542 * C152367) *
                C4913) *
               C3235 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C152066 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152073 +
            (C118346 * C152367 + (C118348 + C118347) * C152349 +
             (C49024 * C76442 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C115085) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C4241 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C3235 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C4241) *
               C152028) *
              C152368 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C4241) *
               C3235 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C4241 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C76442 + C195 * C151912) * C152367 +
             (C115535 + C115536) * C152349 + C115543 * C115085) *
                C4241 -
            ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
             (C115536 + C115535) * C152367) *
                C152070) *
               C3235 +
           (((C116234 + C116235) * C152367 + (C116236 + C116237) * C152349 +
             (C18207 * C76442 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C115085) *
                C152070 -
            ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
             (C431 * C151912 + C432 * C76442) * C152367) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C4241 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C152378 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            C118740 * C115085) *
               C152070 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C4241 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C152070) *
              C152362 +
          (((C117488 + C117489) * C152367 + (C117490 + C117491) * C152349 +
            (C63919 * C76442 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C115085) *
               C152070 -
           ((C117491 + C117490) * C115085 + (C117489 + C117488) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C1795 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C151983 * C1797 -
           ((C47645 * C151912 + C48143 * C76442) * C115085 +
            (C16811 * C151912 + C17308 * C76442) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
               C151983 * C1796 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C1795 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C1797 +
           ((C1820 * C76442 + C1819 * C151912) * C152367 +
            (C16811 * C76442 + C16810 * C151912) * C152349 +
            (C47645 * C76442 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C152285 -
           ((C2806 * C151912 + C16598 * C76442) * C115085 +
            (C1196 * C151912 + C16008 * C76442) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152028) *
              C807 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C1196 * C76442 + C1197 * C151912) * C152349 +
            (C2806 * C76442 + C2805 * C151912) * C115085) *
               C151983 * C152028 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152285) *
              C808 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C152285 -
           ((C2804 * C151912 + C2805 * C76442) * C115085 +
            (C1198 * C151912 + C1197 * C76442) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152028) *
              C809 +
          (((C431 * C76442 + C437 * C151912) * C152367 +
            (C1198 * C76442 + C1199 * C151912) * C152349 +
            (C2804 * C76442 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C115085) *
               C151983 * C152028 -
           ((C675 * C151912 + C673 * C76442) * C115085 +
            (C674 * C151912 + C668 * C76442) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C2325 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C2326 +
            (C115541 * C152367 + (C115528 + C115527) * C152349 +
             C118055 * C115085) *
                C152330) *
               C152285 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             (C116796 + C116797) * C115085) *
                C2326 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C2325 -
            ((C49024 * C151912 + C49427 * C76442) * C115085 +
             (C116797 + C116796) * C152349 + C116798 * C152367) *
                C152330) *
               C152028) *
              C152271 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             (C115533 + C115534) * C115085) *
                C2326 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C2325 -
            ((C17899 * C151912 + C17900 * C76442) * C115085 +
             (C115534 + C115533) * C152349 + C115542 * C152367) *
                C152330) *
               C152285 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C2325 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C2326 +
            (C118346 * C152367 + (C118348 + C118347) * C152349 +
             (C49024 * C76442 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C115085) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152286 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C1795 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            (C116796 + C116797) * C115085) *
               C152070 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C152286 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C152070) *
              C1797 +
          (((C117488 + C117489) * C152367 + (C117490 + C117491) * C152349 +
            (C63919 * C76442 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C115085) *
               C152070 -
           ((C117491 + C117490) * C115085 + (C117489 + C117488) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152286 -
            ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C152285 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             (C18609 * C76442 + C18208 * C151912) * C115085) *
                C152070 -
            ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152286) *
               C152028) *
              C347 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             (C115533 + C115534) * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152286) *
               C152285 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
                C152286 -
            ((C18207 * C151912 + C18208 * C76442) * C115085 +
             (C116233 + C116232) * C152349 + (C116231 + C116230) * C152367) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C76442 + C195 * C151912) * C152367 +
             (C115535 + C115536) * C152349 + C115543 * C115085) *
                C152286 -
            ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
             (C115536 + C115535) * C152367) *
                C152070) *
               C152285 +
           (((C116234 + C116235) * C152367 + (C116236 + C116237) * C152349 +
             (C18207 * C76442 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C115085) *
                C152070 -
            ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
             (C431 * C151912 + C432 * C76442) * C152367) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C2936 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C2937 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            C118055 * C115085) *
               C2938 -
           ((C118053 + C118054) * C115085 + (C118052 + C118051) * C152349 +
            C118050 * C152367) *
               C152343) *
              C152285 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            C118740 * C115085) *
               C2937 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C2936 -
           ((C118741 + C118742) * C115085 + (C116797 + C116796) * C152349 +
            C116798 * C152367) *
               C2938 +
           (C118740 * C152367 + (C118742 + C118741) * C152349 +
            (C64767 * C76442 +
             (C134 * C49415 + C49424 + C49424 + C152163 * C49417) * C151912) *
                C115085) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
                C193 * C151912) *
                   C152367 +
               (C15311 * C76442 + C670 * C151912) * C152349 +
               (C15312 * C76442 + C671 * C151912) * C115085) *
                  C151983 * C151965 * C129 -
              ((C672 * C151912 + C671 * C76442) * C115085 +
               (C669 * C151912 + C670 * C76442) * C152349 +
               (C194 * C151912 + C193 * C76442) * C152367) *
                  C151983 * C151965 * C130 +
              ((C194 * C76442 + C195 * C151912) * C152367 +
               (C669 * C76442 + C668 * C151912) * C152349 +
               (C672 * C76442 + C673 * C151912) * C115085) *
                  C151983 * C151965 * C131 -
              ((C675 * C151912 + C673 * C76442) * C115085 +
               (C674 * C151912 + C668 * C76442) * C152349 +
               (C196 * C151912 + C195 * C76442) * C152367) *
                  C151983 * C151965 * C132 +
              ((C196 * C76442 + C197 * C151912) * C152367 +
               (C674 * C76442 + C961 * C151912) * C152349 +
               (C675 * C76442 +
                (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
                   C115085) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
                 C193 * C151912) *
                    C152367 +
                (C15311 * C76442 + C670 * C151912) * C152349 +
                (C15312 * C76442 + C671 * C151912) * C115085) *
                   C151983 * C152371 -
               ((C2806 * C151912 + C16598 * C76442) * C115085 +
                (C1196 * C151912 + C16008 * C76442) * C152349 +
                (C433 * C151912 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                    C152367) *
                   C151983 * C152357 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
                 C434 * C151912) *
                    C152367 +
                (C16599 * C76442 + C2033 * C151912) * C152349 +
                (C16602 * C76442 + C16601 * C151912) * C115085) *
                   C151983 * C152327) *
                  C347 +
              (((C433 * C76442 + C432 * C151912) * C152367 +
                (C1196 * C76442 + C1197 * C151912) * C152349 +
                (C2806 * C76442 + C2805 * C151912) * C115085) *
                   C151983 * C152357 -
               ((C672 * C151912 + C671 * C76442) * C115085 +
                (C669 * C151912 + C670 * C76442) * C152349 +
                (C194 * C151912 + C193 * C76442) * C152367) *
                   C151983 * C152371 -
               ((C16600 * C151912 + C16601 * C76442) * C115085 +
                (C2032 * C151912 + C2033 * C76442) * C152349 +
                (C435 * C151912 + C434 * C76442) * C152367) *
                   C151983 * C152327) *
                  C348 +
              (((C194 * C76442 + C195 * C151912) * C152367 +
                (C669 * C76442 + C668 * C151912) * C152349 +
                (C672 * C76442 + C673 * C151912) * C115085) *
                   C151983 * C152371 -
               ((C2804 * C151912 + C2805 * C76442) * C115085 +
                (C1198 * C151912 + C1197 * C76442) * C152349 +
                (C431 * C151912 + C432 * C76442) * C152367) *
                   C151983 * C152357 +
               ((C435 * C76442 + C436 * C151912) * C152367 +
                (C2032 * C76442 + C2031 * C151912) * C152349 +
                (C16600 * C76442 +
                 (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                    C115085) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152372 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152359 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C151965 * C347 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            (C115533 + C115534) * C115085) *
               C152359 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C152372 -
           ((C17899 * C151912 + C17900 * C76442) * C115085 +
            (C115534 + C115533) * C152349 + C115542 * C152367) *
               C152330) *
              C151965 * C348 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C152372 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C152359 +
           (C115543 * C152367 + (C115540 + C115539) * C152349 +
            (C17899 * C76442 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C1345 -
           ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C16599 * C76442 + C2033 * C151912) * C152349 +
            (C16602 * C76442 + C16601 * C151912) * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
               C151983 * C1346 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C1345 -
           ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C1346 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C115523 + C115524) * C152349 + C115541 * C115085) *
              C151983 * C1433 -
          ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
               C152367) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
            C434 * C151912) *
               C152367 +
           (C16599 * C76442 + C2033 * C151912) * C152349 +
           (C16602 * C76442 + C16601 * C151912) * C115085) *
              C151983 * C1435 -
          ((C47645 * C151912 + C48143 * C76442) * C115085 +
           (C16811 * C151912 + C17308 * C76442) * C152349 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
               C152367) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C76442 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C152367 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C76442 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C152349 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C76442 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152372 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152359 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C1345 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            (C116796 + C116797) * C115085) *
               C152359 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C152372 -
           ((C49024 * C151912 + C49427 * C76442) * C115085 +
            (C116797 + C116796) * C152349 + C116798 * C152367) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C152372 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C152359 +
           (C116805 * C152367 + (C116804 + C116803) * C152349 +
            (C63453 * C76442 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C2325 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C2326 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C151965 * C152368 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            (C115533 + C115534) * C115085) *
               C2326 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C2325 -
           ((C17899 * C151912 + C17900 * C76442) * C115085 +
            (C115534 + C115533) * C152349 + C115542 * C152367) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C2325 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C2326 +
           (C115543 * C152367 + (C115540 + C115539) * C152349 +
            (C17899 * C76442 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C2325 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C2326 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C152371 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            (C116796 + C116797) * C115085) *
               C2326 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C2325 -
           ((C49024 * C151912 + C49427 * C76442) * C115085 +
            (C116797 + C116796) * C152349 + C116798 * C152367) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C2325 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C2326 +
           (C116805 * C152367 + (C116804 + C116803) * C152349 +
            (C63453 * C76442 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C115523 + C115524) * C152349 + C115541 * C115085) *
              C2556 -
          (C118050 * C115085 + (C115526 + C115525) * C152349 +
           (C115524 + C115523) * C152367) *
              C2557 +
          (C115541 * C152367 + (C115528 + C115527) * C152349 +
           C118055 * C115085) *
              C2558 -
          ((C118053 + C118054) * C115085 + (C118052 + C118051) * C152349 +
           C118050 * C152367) *
              C2559 +
          (C118055 * C152367 + (C118054 + C118053) * C152349 +
           (C64304 * C76442 +
            (C134 * C48703 + C48717 + C48717 + C152163 * C48707) * C151912) *
               C115085) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152286 -
            ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C1345 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             (C116796 + C116797) * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
              C434 * C151912) *
                 C152367 +
             (C116799 + C116800) * C152349 + C116805 * C115085) *
                C152286 -
            ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
             (C116800 + C116799) * C152367) *
                C152070) *
               C152327) *
              C152271 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             (C115533 + C115534) * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152286) *
               C1345 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
                C152286 -
            ((C18207 * C151912 + C18208 * C76442) * C115085 +
             (C116233 + C116232) * C152349 + (C116231 + C116230) * C152367) *
                C152070) *
               C1346 +
           (((C117290 + C117291) * C152367 + (C117292 + C117293) * C152349 +
             (C47443 * C76442 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C115085) *
                C152070 -
            ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
             (C435 * C151912 + C434 * C76442) * C152367) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152286 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C151965 * C807 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            (C115533 + C115534) * C115085) *
               C152070 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C152286) *
              C151965 * C808 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C152286 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C152070) *
              C151965 * C809 +
          (((C115932 + C115933) * C152367 + (C115934 + C115935) * C152349 +
            (C2957 * C76442 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C115085) *
               C152070 -
           ((C115935 + C115934) * C115085 + (C115933 + C115932) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C2936 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C2937 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            C118055 * C115085) *
               C2938 -
           ((C118053 + C118054) * C115085 + (C118052 + C118051) * C152349 +
            C118050 * C152367) *
               C152343) *
              C151965 * C152271 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            C118543 * C115085) *
               C2937 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C2936 -
           ((C118544 + C118545) * C115085 + (C115534 + C115533) * C152349 +
            C115542 * C152367) *
               C2938 +
           (C118543 * C152367 + (C118545 + C118544) * C152349 +
            (C48723 * C76442 +
             (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151912) *
                C115085) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C15311 * C76442 + C670 * C151912) * C152349 +
            (C15312 * C76442 + C671 * C151912) * C115085) *
               C151983 * C152371 -
           ((C2806 * C151912 + C16598 * C76442) * C115085 +
            (C1196 * C151912 + C16008 * C76442) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C16599 * C76442 + C2033 * C151912) * C152349 +
            (C16602 * C76442 + C16601 * C151912) * C115085) *
               C151983 * C152327) *
              C347 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C1196 * C76442 + C1197 * C151912) * C152349 +
            (C2806 * C76442 + C2805 * C151912) * C115085) *
               C151983 * C152357 -
           ((C672 * C151912 + C671 * C76442) * C115085 +
            (C669 * C151912 + C670 * C76442) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152371 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152327) *
              C348 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C669 * C76442 + C668 * C151912) * C152349 +
            (C672 * C76442 + C673 * C151912) * C115085) *
               C151983 * C152371 -
           ((C2804 * C151912 + C2805 * C76442) * C115085 +
            (C1198 * C151912 + C1197 * C76442) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152357 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C15311 * C76442 + C670 * C151912) * C152349 +
           (C15312 * C76442 + C671 * C151912) * C115085) *
              C151983 * C151965 * C129 -
          ((C672 * C151912 + C671 * C76442) * C115085 +
           (C669 * C151912 + C670 * C76442) * C152349 +
           (C194 * C151912 + C193 * C76442) * C152367) *
              C151983 * C151965 * C130 +
          ((C194 * C76442 + C195 * C151912) * C152367 +
           (C669 * C76442 + C668 * C151912) * C152349 +
           (C672 * C76442 + C673 * C151912) * C115085) *
              C151983 * C151965 * C131 -
          ((C675 * C151912 + C673 * C76442) * C115085 +
           (C674 * C151912 + C668 * C76442) * C152349 +
           (C196 * C151912 + C195 * C76442) * C152367) *
              C151983 * C151965 * C132 +
          ((C196 * C76442 + C197 * C151912) * C152367 +
           (C674 * C76442 + C961 * C151912) * C152349 +
           (C675 * C76442 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
               C115085) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C1345 -
           ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C16599 * C76442 + C2033 * C151912) * C152349 +
            (C16602 * C76442 + C16601 * C151912) * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
               C151983 * C1346 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C1345 -
           ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C1346 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C115523 + C115524) * C152349 + C115541 * C115085) *
              C151983 * C1433 -
          ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
               C152367) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
            C434 * C151912) *
               C152367 +
           (C16599 * C76442 + C2033 * C151912) * C152349 +
           (C16602 * C76442 + C16601 * C151912) * C115085) *
              C151983 * C1435 -
          ((C47645 * C151912 + C48143 * C76442) * C115085 +
           (C16811 * C151912 + C17308 * C76442) * C152349 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
               C152367) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C76442 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C152367 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C76442 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C152349 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C76442 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C2325 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C2326 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C151965 * C152368 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            (C115533 + C115534) * C115085) *
               C2326 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C2325 -
           ((C17899 * C151912 + C17900 * C76442) * C115085 +
            (C115534 + C115533) * C152349 + C115542 * C152367) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C2325 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C2326 +
           (C115543 * C152367 + (C115540 + C115539) * C152349 +
            (C17899 * C76442 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C2325 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C2326 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C152371 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            (C116796 + C116797) * C115085) *
               C2326 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C2325 -
           ((C49024 * C151912 + C49427 * C76442) * C115085 +
            (C116797 + C116796) * C152349 + C116798 * C152367) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C2325 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C2326 +
           (C116805 * C152367 + (C116804 + C116803) * C152349 +
            (C63453 * C76442 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C4241 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C152285 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C4241) *
               C152028) *
              C151942 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C4241) *
               C152285 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C4241 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C76442 + C195 * C151912) * C152367 +
             (C115535 + C115536) * C152349 + C115543 * C115085) *
                C4241 -
            ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
             (C115536 + C115535) * C152367) *
                C152070) *
               C152285 +
           (((C116234 + C116235) * C152367 + (C116236 + C116237) * C152349 +
             (C18207 * C76442 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C115085) *
                C152070 -
            ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
             (C431 * C151912 + C432 * C76442) * C152367) *
                C4241) *
               C152028) *
              C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[291] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152066 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152073 +
            (C115541 * C152367 + (C115528 + C115527) * C152349 +
             C118055 * C115085) *
                C4913) *
               C152285 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152073 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152066 -
            ((C118741 + C118742) * C115085 + (C116797 + C116796) * C152349 +
             C116798 * C152367) *
                C4913) *
               C152028) *
              C3375 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152073 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152066 -
            ((C118544 + C118545) * C115085 + (C115534 + C115533) * C152349 +
             C115542 * C152367) *
                C4913) *
               C152285 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C152066 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152073 +
            (C118346 * C152367 + (C118348 + C118347) * C152349 +
             (C49024 * C76442 +
              (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C151912) *
                 C115085) *
                C4913) *
               C152028) *
              C151948)) /
        (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C4241 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C152371 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
              C434 * C151912) *
                 C152367 +
             (C116799 + C116800) * C152349 + C116805 * C115085) *
                C4241 -
            ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
             (C116800 + C116799) * C152367) *
                C152070) *
               C152327) *
              C3375 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C4241) *
               C152371 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C4241 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152357 +
           (((C117290 + C117291) * C152367 + (C117292 + C117293) * C152349 +
             (C47443 * C76442 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C115085) *
                C152070 -
            ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
             (C435 * C151912 + C434 * C76442) * C152367) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C4241 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C151965 * C152377 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            C118543 * C115085) *
               C152070 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C4241 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C152070) *
              C151965 * C152355 +
          (((C115932 + C115933) * C152367 + (C115934 + C115935) * C152349 +
            (C2957 * C76442 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C115085) *
               C152070 -
           ((C115935 + C115934) * C115085 + (C115933 + C115932) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152379 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152376 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            C118055 * C115085) *
               C152365 -
           ((C118053 + C118054) * C115085 + (C118052 + C118051) * C152349 +
            C118050 * C152367) *
               C152343) *
              C151965 * C3375 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            C118543 * C115085) *
               C152376 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C152379 -
           ((C118544 + C118545) * C115085 + (C115534 + C115533) * C152349 +
            C115542 * C152367) *
               C152365 +
           (C118543 * C152367 + (C118545 + C118544) * C152349 +
            (C48723 * C76442 +
             (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C151912) *
                C115085) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152066 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152073 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            C118055 * C115085) *
               C4913) *
              C151965 * C151942 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            C118543 * C115085) *
               C152073 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C152066 -
           ((C118544 + C118545) * C115085 + (C115534 + C115533) * C152349 +
            C115542 * C152367) *
               C4913) *
              C151965 * C151951 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C152066 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C152073 +
           (C115543 * C152367 + (C115540 + C115539) * C152349 +
            (C17899 * C76442 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C115085) *
               C4913) *
              C151965 * C3722)) /
        (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C4241 -
           (C118050 * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C151965 * C152377 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            C118543 * C115085) *
               C152070 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C4241 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C152070) *
              C151965 * C152355 +
          (((C115932 + C115933) * C152367 + (C115934 + C115935) * C152349 +
            (C2957 * C76442 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C115085) *
               C152070 -
           ((C115935 + C115934) * C115085 + (C115933 + C115932) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C4241 -
            (C118050 * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C152371 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             C118740 * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
              C434 * C151912) *
                 C152367 +
             (C116799 + C116800) * C152349 + C116805 * C115085) *
                C4241 -
            ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
             (C116800 + C116799) * C152367) *
                C152070) *
               C152327) *
              C3375 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             C118543 * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C4241) *
               C152371 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + C118346 * C115085) *
                C4241 -
            ((C118347 + C118348) * C115085 + (C116233 + C116232) * C152349 +
             (C116231 + C116230) * C152367) *
                C152070) *
               C152357 +
           (((C117290 + C117291) * C152367 + (C117292 + C117293) * C152349 +
             (C47443 * C76442 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C115085) *
                C152070 -
            ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
             (C435 * C151912 + C434 * C76442) * C152367) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C152285 -
           ((C2806 * C151912 + C16598 * C76442) * C115085 +
            (C1196 * C151912 + C16008 * C76442) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152028) *
              C807 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C1196 * C76442 + C1197 * C151912) * C152349 +
            (C2806 * C76442 + C2805 * C151912) * C115085) *
               C151983 * C152028 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152285) *
              C808 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C152285 -
           ((C2804 * C151912 + C2805 * C76442) * C115085 +
            (C1198 * C151912 + C1197 * C76442) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152028) *
              C809 +
          (((C431 * C76442 + C437 * C151912) * C152367 +
            (C1198 * C76442 + C1199 * C151912) * C152349 +
            (C2804 * C76442 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C151912) *
                C115085) *
               C151983 * C152028 -
           ((C675 * C151912 + C673 * C76442) * C115085 +
            (C674 * C151912 + C668 * C76442) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C1795 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C151983 * C1797 -
           ((C47645 * C151912 + C48143 * C76442) * C115085 +
            (C16811 * C151912 + C17308 * C76442) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
               C151983 * C1796 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C1795 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C1797 +
           ((C1820 * C76442 + C1819 * C151912) * C152367 +
            (C16811 * C76442 + C16810 * C151912) * C152349 +
            (C47645 * C76442 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C151912) *
                C115085) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152286 -
            ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C152285 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             (C18609 * C76442 + C18208 * C151912) * C115085) *
                C152070 -
            ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152286) *
               C152028) *
              C347 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             (C115533 + C115534) * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152286) *
               C152285 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
                C152286 -
            ((C18207 * C151912 + C18208 * C76442) * C115085 +
             (C116233 + C116232) * C152349 + (C116231 + C116230) * C152367) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C76442 + C195 * C151912) * C152367 +
             (C115535 + C115536) * C152349 + C115543 * C115085) *
                C152286 -
            ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
             (C115536 + C115535) * C152367) *
                C152070) *
               C152285 +
           (((C116234 + C116235) * C152367 + (C116236 + C116237) * C152349 +
             (C18207 * C76442 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C151912) *
                 C115085) *
                C152070 -
            ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
             (C431 * C151912 + C432 * C76442) * C152367) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152286 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C1795 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            (C116796 + C116797) * C115085) *
               C152070 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C152286 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C152070) *
              C1797 +
          (((C117488 + C117489) * C152367 + (C117490 + C117491) * C152349 +
            (C63919 * C76442 +
             (C134 * C27226 + C48140 + C48140 + C152163 * C27230) * C151912) *
                C115085) *
               C152070 -
           ((C117491 + C117490) * C115085 + (C117489 + C117488) * C152349 +
            (C1820 * C151912 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
                C152367) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C15311 * C76442 + C670 * C151912) * C152349 +
            (C15312 * C76442 + C671 * C151912) * C115085) *
               C151983 * C152371 -
           ((C2806 * C151912 + C16598 * C76442) * C115085 +
            (C1196 * C151912 + C16008 * C76442) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C16599 * C76442 + C2033 * C151912) * C152349 +
            (C16602 * C76442 + C16601 * C151912) * C115085) *
               C151983 * C152327) *
              C347 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C1196 * C76442 + C1197 * C151912) * C152349 +
            (C2806 * C76442 + C2805 * C151912) * C115085) *
               C151983 * C152357 -
           ((C672 * C151912 + C671 * C76442) * C115085 +
            (C669 * C151912 + C670 * C76442) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152371 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152327) *
              C348 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C669 * C76442 + C668 * C151912) * C152349 +
            (C672 * C76442 + C673 * C151912) * C115085) *
               C151983 * C152371 -
           ((C2804 * C151912 + C2805 * C76442) * C115085 +
            (C1198 * C151912 + C1197 * C76442) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152357 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C15311 * C76442 + C670 * C151912) * C152349 +
           (C15312 * C76442 + C671 * C151912) * C115085) *
              C151983 * C151965 * C129 -
          ((C672 * C151912 + C671 * C76442) * C115085 +
           (C669 * C151912 + C670 * C76442) * C152349 +
           (C194 * C151912 + C193 * C76442) * C152367) *
              C151983 * C151965 * C130 +
          ((C194 * C76442 + C195 * C151912) * C152367 +
           (C669 * C76442 + C668 * C151912) * C152349 +
           (C672 * C76442 + C673 * C151912) * C115085) *
              C151983 * C151965 * C131 -
          ((C675 * C151912 + C673 * C76442) * C115085 +
           (C674 * C151912 + C668 * C76442) * C152349 +
           (C196 * C151912 + C195 * C76442) * C152367) *
              C151983 * C151965 * C132 +
          ((C196 * C76442 + C197 * C151912) * C152367 +
           (C674 * C76442 + C961 * C151912) * C152349 +
           (C675 * C76442 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
               C115085) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152372 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152359 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C151965 * C347 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            (C115533 + C115534) * C115085) *
               C152359 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C152372 -
           ((C17899 * C151912 + C17900 * C76442) * C115085 +
            (C115534 + C115533) * C152349 + C115542 * C152367) *
               C152330) *
              C151965 * C348 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C152372 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C152359 +
           (C115543 * C152367 + (C115540 + C115539) * C152349 +
            (C17899 * C76442 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C151912) *
                C115085) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C1345 -
           ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C16599 * C76442 + C2033 * C151912) * C152349 +
            (C16602 * C76442 + C16601 * C151912) * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
               C151983 * C1346 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C1345 -
           ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C1346 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C115523 + C115524) * C152349 + C115541 * C115085) *
              C151983 * C1433 -
          ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
               C152367) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
            C434 * C151912) *
               C152367 +
           (C16599 * C76442 + C2033 * C151912) * C152349 +
           (C16602 * C76442 + C16601 * C151912) * C115085) *
              C151983 * C1435 -
          ((C47645 * C151912 + C48143 * C76442) * C115085 +
           (C16811 * C151912 + C17308 * C76442) * C152349 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
               C152367) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C76442 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C152367 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C76442 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C152349 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C76442 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152372 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152359 +
           (C115541 * C152367 + (C115528 + C115527) * C152349 +
            (C17901 * C76442 + C17900 * C151912) * C115085) *
               C152330) *
              C1345 +
          (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
            (C116796 + C116797) * C115085) *
               C152359 -
           (C116798 * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C152372 -
           ((C49024 * C151912 + C49427 * C76442) * C115085 +
            (C116797 + C116796) * C152349 + C116798 * C152367) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C116799 + C116800) * C152349 + C116805 * C115085) *
               C152372 -
           ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
            (C116800 + C116799) * C152367) *
               C152359 +
           (C116805 * C152367 + (C116804 + C116803) * C152349 +
            (C63453 * C76442 +
             (C134 * C26494 + C47437 + C47437 + C152163 * C26498) * C151912) *
                C115085) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C152286 -
           ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
            (C115524 + C115523) * C152367) *
               C152070) *
              C151965 * C807 +
          (((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
            (C115533 + C115534) * C115085) *
               C152070 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C152286) *
              C151965 * C808 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C152286 -
           ((C115539 + C115540) * C115085 + (C115538 + C115537) * C152349 +
            (C115536 + C115535) * C152367) *
               C152070) *
              C151965 * C809 +
          (((C115932 + C115933) * C152367 + (C115934 + C115935) * C152349 +
            (C2957 * C76442 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C151912) *
                C115085) *
               C152070 -
           ((C115935 + C115934) * C115085 + (C115933 + C115932) * C152349 +
            (C196 * C151912 + C195 * C76442) * C152367) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
              C193 * C151912) *
                 C152367 +
             (C115523 + C115524) * C152349 + C115541 * C115085) *
                C152286 -
            ((C115527 + C115528) * C115085 + (C115526 + C115525) * C152349 +
             (C115524 + C115523) * C152367) *
                C152070) *
               C1345 +
           (((C116226 + C116227) * C152367 + (C116228 + C116229) * C152349 +
             (C116796 + C116797) * C115085) *
                C152070 -
            (C116798 * C115085 + (C116227 + C116226) * C152349 +
             (C433 * C151912 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                 C152367) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
              C434 * C151912) *
                 C152367 +
             (C116799 + C116800) * C152349 + C116805 * C115085) *
                C152286 -
            ((C116803 + C116804) * C115085 + (C116802 + C116801) * C152349 +
             (C116800 + C116799) * C152367) *
                C152070) *
               C152327) *
              C152271 +
          ((((C115529 + C115530) * C152367 + (C115531 + C115532) * C152349 +
             (C115533 + C115534) * C115085) *
                C152070 -
            (C115542 * C115085 + (C115530 + C115529) * C152349 +
             (C194 * C151912 + C193 * C76442) * C152367) *
                C152286) *
               C1345 +
           (((C433 * C76442 + C432 * C151912) * C152367 +
             (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
                C152286 -
            ((C18207 * C151912 + C18208 * C76442) * C115085 +
             (C116233 + C116232) * C152349 + (C116231 + C116230) * C152367) *
                C152070) *
               C1346 +
           (((C117290 + C117291) * C152367 + (C117292 + C117293) * C152349 +
             (C47443 * C76442 +
              (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C151912) *
                 C115085) *
                C152070 -
            ((C117293 + C117292) * C115085 + (C117291 + C117290) * C152349 +
             (C435 * C151912 + C434 * C76442) * C152367) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C15311 * C76442 + C670 * C151912) * C152349 +
           (C15312 * C76442 + C671 * C151912) * C115085) *
              C151983 * C151965 * C129 -
          ((C672 * C151912 + C671 * C76442) * C115085 +
           (C669 * C151912 + C670 * C76442) * C152349 +
           (C194 * C151912 + C193 * C76442) * C152367) *
              C151983 * C151965 * C130 +
          ((C194 * C76442 + C195 * C151912) * C152367 +
           (C669 * C76442 + C668 * C151912) * C152349 +
           (C672 * C76442 + C673 * C151912) * C115085) *
              C151983 * C151965 * C131 -
          ((C675 * C151912 + C673 * C76442) * C115085 +
           (C674 * C151912 + C668 * C76442) * C152349 +
           (C196 * C151912 + C195 * C76442) * C152367) *
              C151983 * C151965 * C132 +
          ((C196 * C76442 + C197 * C151912) * C152367 +
           (C674 * C76442 + C961 * C151912) * C152349 +
           (C675 * C76442 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C151912) *
               C115085) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C15311 * C76442 + C670 * C151912) * C152349 +
            (C15312 * C76442 + C671 * C151912) * C115085) *
               C151983 * C152371 -
           ((C2806 * C151912 + C16598 * C76442) * C115085 +
            (C1196 * C151912 + C16008 * C76442) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C16599 * C76442 + C2033 * C151912) * C152349 +
            (C16602 * C76442 + C16601 * C151912) * C115085) *
               C151983 * C152327) *
              C347 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C1196 * C76442 + C1197 * C151912) * C152349 +
            (C2806 * C76442 + C2805 * C151912) * C115085) *
               C151983 * C152357 -
           ((C672 * C151912 + C671 * C76442) * C115085 +
            (C669 * C151912 + C670 * C76442) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C152371 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152327) *
              C348 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C669 * C76442 + C668 * C151912) * C152349 +
            (C672 * C76442 + C673 * C151912) * C115085) *
               C151983 * C152371 -
           ((C2804 * C151912 + C2805 * C76442) * C115085 +
            (C1198 * C151912 + C1197 * C76442) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C152357 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
             C193 * C151912) *
                C152367 +
            (C115523 + C115524) * C152349 + C115541 * C115085) *
               C151983 * C1345 -
           ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
            (C433 * C151912 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
                C152367) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
             C434 * C151912) *
                C152367 +
            (C16599 * C76442 + C2033 * C151912) * C152349 +
            (C16602 * C76442 + C16601 * C151912) * C115085) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C76442 + C432 * C151912) * C152367 +
            (C116230 + C116231) * C152349 + (C116232 + C116233) * C115085) *
               C151983 * C1346 -
           (C115542 * C115085 + (C115530 + C115529) * C152349 +
            (C194 * C151912 + C193 * C76442) * C152367) *
               C151983 * C1345 -
           ((C16600 * C151912 + C16601 * C76442) * C115085 +
            (C2032 * C151912 + C2033 * C76442) * C152349 +
            (C435 * C151912 + C434 * C76442) * C152367) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C76442 + C195 * C151912) * C152367 +
            (C115535 + C115536) * C152349 + C115543 * C115085) *
               C151983 * C1345 -
           ((C116237 + C116236) * C115085 + (C116235 + C116234) * C152349 +
            (C431 * C151912 + C432 * C76442) * C152367) *
               C151983 * C1346 +
           ((C435 * C76442 + C436 * C151912) * C152367 +
            (C2032 * C76442 + C2031 * C151912) * C152349 +
            (C16600 * C76442 +
             (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C151912) *
                C115085) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C76442 +
            C193 * C151912) *
               C152367 +
           (C115523 + C115524) * C152349 + C115541 * C115085) *
              C151983 * C1433 -
          ((C116229 + C116228) * C115085 + (C116227 + C116226) * C152349 +
           (C433 * C151912 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C76442) *
               C152367) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C76442 +
            C434 * C151912) *
               C152367 +
           (C16599 * C76442 + C2033 * C151912) * C152349 +
           (C16602 * C76442 + C16601 * C151912) * C115085) *
              C151983 * C1435 -
          ((C47645 * C151912 + C48143 * C76442) * C115085 +
           (C16811 * C151912 + C17308 * C76442) * C152349 +
           (C1820 * C151912 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C76442) *
               C152367) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C76442 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C151912) *
               C152367 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C76442 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C151912) *
               C152349 +
           ((C134 * C25185 + C47205 + C47205 + C152163 * C25189) * C76442 +
            (C134 * C25186 + C47206 + C47206 + C152163 * C25190) * C151912) *
               C115085) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[300] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C152024 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C152031 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C3719) *
                       C151942 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C152031 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C152024 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C3719) *
                       C151951 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C152024 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C152031 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                        C152193 * C151983 * C3719) *
                       C3722)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C152024 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C152031 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C3719) *
                       C151942 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C152031 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C152024 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C3719) *
                       C151951 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C152024 -
                    ((C24063 + C24064 + C24065) * C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C152031 +
                    ((C23551 + C23550 + C23549) * C152262 +
                     (C23165 * C357 + C23513 + C23513 + C23160 * C381 +
                      C23167 * C1439 + C23514 + C23514 + C23161 * C1455 +
                      C23169 * C1446 + C23515 + C23515 + C23162 * C1462) *
                         C151912) *
                        C152193 * C151983 * C3719) *
                       C3722)) /
                     (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152024 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C152286 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C3719) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C152024 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152031 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152024 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C152286 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C3719) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C152024 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C152378 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152374 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152362 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C151983 * C152337) *
              C3375 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152374 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C152378 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152362 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C3235 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152028) *
              C152377 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152028 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C3235) *
              C152370 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C3235 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C152028) *
              C152355 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
               C152193 * C151983 * C152028 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152372 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152359 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C152330) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152359 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152372 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C152330) *
               C152028) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152359 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152372 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C152330) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152372 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152359 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C3235 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152028 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C3235) *
              C152370 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C3235 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152028) *
              C152355 +
          (((C24065 + C24064 + C24063) * C152262 +
            (C23165 * C358 + C24054 + C24054 + C23160 * C382 + C23167 * C359 +
             C24055 + C24055 + C23161 * C383 + C23169 * C1801 + C24056 +
             C24056 + C23162 * C1803) *
                C151912) *
               C152193 * C151983 * C152028 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152378 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152374 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152362 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152374 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152378 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152362 +
           ((C25421 + C25420 + C25419) * C152262 +
            (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
             C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
             C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                C151912) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152372 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152359 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C152330) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152359 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152372 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C152330) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152359 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152372 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C152330) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152372 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152359 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C152028) *
              C151942 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C152286 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C152286 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C3235 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C152028) *
                       C152377 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C152028 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C3235) *
                       C152370 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C3235 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C152028) *
                       C152355 +
                   ((C431 * C122 + C437 * C123 + C820 * C124 +
                     (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
                        C152193 * C151983 * C152028 -
                    (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                        C152193 * C151983 * C3235) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C152378 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C152374 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C152362 -
                    (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                     (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                        C152193 * C151983 * C152337) *
                       C3375 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C152374 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C152378 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C152362 +
                    (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                     (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
                        C152193 * C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C3235 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C152028) *
                       C152377 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C152028 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C3235) *
                       C152370 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C3235 -
                    ((C24063 + C24064 + C24065) * C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C152028) *
                       C152355 +
                   (((C24065 + C24064 + C24063) * C152262 +
                     (C23165 * C358 + C24054 + C24054 + C23160 * C382 +
                      C23167 * C359 + C24055 + C24055 + C23161 * C383 +
                      C23169 * C1801 + C24056 + C24056 + C23162 * C1803) *
                         C151912) *
                        C152193 * C151983 * C152028 -
                    ((C23247 + C23248 + C23249) * C151912 +
                     (C23246 + C23245 + C23244) * C152262) *
                        C152193 * C151983 * C3235) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C152378 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C152374 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C152362 -
                    ((C25419 + C25420 + C25421) * C151912 +
                     (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
                      C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
                      C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                         C152262) *
                        C152193 * C151983 * C152337) *
                       C3375 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C152374 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C152378 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C152362 +
                    ((C25421 + C25420 + C25419) * C152262 +
                     (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
                      C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
                      C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                         C151912) *
                        C152193 * C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152024 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C3719) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C152024 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152031 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152024 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C4241 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C3719) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152024 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C152066 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                        C152193 * C152073 +
                    ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152193 * C4913) *
                       C152024 +
                   (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                     C1196 * C123 + C1197 * C124 + C1198 * C125) *
                        C152193 * C152073 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C152066 -
                    (C2804 * C125 + C2805 * C124 + C2806 * C123 +
                     (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                        C152193 * C4913) *
                       C152031 +
                   (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C152066 -
                    (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                     (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                        C152193 * C152073 +
                    ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
                     (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
                     (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
                     (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
                        C152193 * C4913) *
                       C3719) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C152066 -
                    ((C23842 + C23843 + C23844) * C151912 +
                     (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
                      C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
                      C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                         C152262) *
                        C152193 * C152073 +
                    ((C23165 * C591 + C23782 + C23782 + C23160 * C615 +
                      C23167 * C1620 + C23783 + C23783 + C23161 * C1644 +
                      C23169 * C1625 + C23784 + C23784 + C23162 * C1649) *
                         C152262 +
                     (C23845 + C23846 + C23847) * C151912) *
                        C152193 * C4913) *
                       C152024 +
                   (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
                      C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
                      C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                         C152262 +
                     (C24604 + C24605 + C24606) * C151912) *
                        C152193 * C152073 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C152066 -
                    ((C26817 + C26818 + C26819) * C151912 +
                     (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
                      C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
                      C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                         C152262) *
                        C152193 * C4913) *
                       C152031 +
                   (((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C152066 -
                    ((C25727 + C25728 + C25729) * C151912 +
                     (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
                      C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
                      C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                         C152262) *
                        C152193 * C152073 +
                    ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
                      C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
                      C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                         C152262 +
                     (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
                      C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
                      C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                         C151912) *
                        C152193 * C4913) *
                       C3719) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C152378 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152070 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C4241) *
              C152374 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C4241 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152070) *
              C152362 +
          (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
               C152193 * C152070 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152379 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152376 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152365 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C3235 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152376 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152379 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C152365 +
           ((C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C125) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C4241 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C152378 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C4241 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C152362 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152379 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152376 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152365 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C3235 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152376 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152379 -
           ((C26817 + C26818 + C26819) * C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152365 +
           ((C23165 * C3089 + C27232 + C27232 + C23160 * C3097 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23169 * C27225 + C27234 + C27234 + C23162 * C27229) *
                C152262 +
            (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
             C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
             C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                C151912) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152066 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152073 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C4913) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152073 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152066 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C4913) *
               C152028) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152073 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152066 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C4913) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152066 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152073 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152066 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152073 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C4913) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152073 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152066 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C4913) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152073 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152066 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C4913) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152066 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152073 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C3235 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C3235 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C3235 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C152378 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152070 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C4241) *
              C152374 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C4241 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152070) *
              C152362 +
          (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
               C152193 * C152070 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C3235 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C4241 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C152378 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C4241 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C152362 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C1795 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C1796 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C1797 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C151983 * C152337) *
              C152271 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C1796 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C1795 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C1797 +
           (C1820 * C122 + C1819 * C123 + C1818 * C124 +
            (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C152285 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C152028) *
              C807 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C152028 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C152285) *
              C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C152285 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C152028) *
              C809 +
          ((C431 * C122 + C437 * C123 + C820 * C124 +
            (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
               C152193 * C151983 * C152028 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C2325 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C2326 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C152330) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C2326 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C2325 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C152330) *
               C152028) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C2326 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C2325 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C152330) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C2325 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C2326 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152285 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152028 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152285) *
              C808 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152285 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152028) *
              C809 +
          (((C24065 + C24064 + C24063) * C152262 +
            (C23165 * C358 + C24054 + C24054 + C23160 * C382 + C23167 * C359 +
             C24055 + C24055 + C23161 * C383 + C23169 * C1801 + C24056 +
             C24056 + C23162 * C1803) *
                C151912) *
               C152193 * C151983 * C152028 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1795 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1796 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C1797 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1796 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1795 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C1797 +
           ((C25421 + C25420 + C25419) * C152262 +
            (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
             C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
             C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                C151912) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C2325 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C2326 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C152330) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C2326 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C2325 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C152330) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C2326 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C2325 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C152330) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C2325 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C2326 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152286 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C1795 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152070 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152286) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C152286 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152070) *
              C1797 +
          (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
               C152193 * C152070 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C152028) *
              C347 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C152286 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C152285 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2937 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C152285 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C2937 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C2936 -
           (C2804 * C125 + C2805 * C124 + C2806 * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C2938 +
           ((C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C122 +
            (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C123 +
            (C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C124 +
            (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C125) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C152286 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C1795 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152286 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C1797 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2936 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2937 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C2938 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C152285 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C2937 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C2936 -
           ((C26817 + C26818 + C26819) * C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C2938 +
           ((C23165 * C3089 + C27232 + C27232 + C23160 * C3097 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23169 * C27225 + C27234 + C27234 + C23162 * C27229) *
                C152262 +
            (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
             C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
             C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                C151912) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
               C193 * C123 + C194 * C124 + C195 * C125) *
                  C152193 * C151983 * C151965 * C129 -
              (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                  C152193 * C151983 * C151965 * C130 +
              (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                  C152193 * C151983 * C151965 * C131 -
              (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                  C152193 * C151983 * C151965 * C132 +
              (C196 * C122 + C197 * C123 + C198 * C124 +
               (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
                  C152193 * C151983 * C151965 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                C193 * C123 + C194 * C124 + C195 * C125) *
                   C152193 * C151983 * C152371 -
               (C431 * C125 + C432 * C124 + C433 * C123 +
                (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                   C152193 * C151983 * C152357 +
               ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                C434 * C123 + C435 * C124 + C436 * C125) *
                   C152193 * C151983 * C152327) *
                  C347 +
              ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                   C152193 * C151983 * C152357 -
               (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                   C152193 * C151983 * C152371 -
               (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                   C152193 * C151983 * C152327) *
                  C348 +
              ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                   C152193 * C151983 * C152371 -
               ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 +
                C437 * C124 + C431 * C123 + C432 * C122) *
                   C152193 * C151983 * C152357 +
               (C435 * C122 + C436 * C123 + C438 * C124 +
                (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                   C152193 * C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152372 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152359 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C151965 * C347 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152359 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152372 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C152330) *
              C151965 * C348 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C152372 -
           ((C134 * C597 + C650 + C650 + C152163 * C621) * C125 + C674 * C124 +
            C668 * C123 + C669 * C122) *
               C152193 * C152359 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C151983 * C1345 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C151983 * C1346 +
           ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C151983 * C152327) *
              C152368 +
          ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
               C151983 * C1346 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C151983 * C1345 -
           (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
               C151983 * C152327) *
              C152353 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C151983 * C1345 -
           (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
               C151983 * C1346 +
           (C435 * C122 + C436 * C123 + C438 * C124 +
            (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C151983 * C1433 -
          (C431 * C125 + C432 * C124 + C433 * C123 +
           (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
              C152193 * C151983 * C1434 +
          ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
           C435 * C124 + C436 * C125) *
              C152193 * C151983 * C1435 -
          ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
           (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
           (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
           (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
              C152193 * C151983 * C1436 +
          ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
           (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
           (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
           (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152372 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152359 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C1345 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152359 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152372 -
           ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C152330) *
              C1346 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C152372 -
           ((C134 * C1621 + C1658 + C1658 + C152163 * C1645) * C125 +
            (C134 * C1622 + C1659 + C1659 + C152163 * C1646) * C124 +
            (C134 * C1623 + C1660 + C1660 + C152163 * C1647) * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152359 +
           ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2326 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C151965 * C152368 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C2326 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C2325 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C152330) *
              C151965 * C152353 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C2325 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C2326 +
           (C672 * C122 + C673 * C123 + C675 * C124 +
            (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2325 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2326 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152330) *
              C152371 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C2326 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C2325 -
           ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
            (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
            (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
            (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
               C152193 * C152330) *
              C152357 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C2325 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C2326 +
           ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
            (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
            (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
            (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
           C194 * C124 + C195 * C125) *
              C152193 * C2556 -
          (C668 * C125 + C669 * C124 + C670 * C123 +
           (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
              C152193 * C2557 +
          ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
           C672 * C124 + C673 * C125) *
              C152193 * C2558 -
          ((C134 * C2561 + C2586 + C2586 + C152163 * C2577) * C125 +
           (C134 * C2562 + C2587 + C2587 + C152163 * C2578) * C124 +
           (C134 * C2563 + C2588 + C2588 + C152163 * C2579) * C123 +
           (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
              C152193 * C2559 +
          ((C134 * C2565 + C2590 + C2590 + C152163 * C2581) * C122 +
           (C134 * C2566 + C2591 + C2591 + C152163 * C2582) * C123 +
           (C134 * C2567 + C2592 + C2592 + C152163 * C2583) * C124 +
           (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C125) *
              C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C151965 * C129 -
          ((C23241 + C23242 + C23243) * C151912 +
           (C23240 + C23239 + C23238) * C152262) *
              C152193 * C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C152262 +
           (C23244 + C23245 + C23246) * C151912) *
              C152193 * C151983 * C151965 * C131 -
          ((C23247 + C23248 + C23249) * C151912 +
           (C23246 + C23245 + C23244) * C152262) *
              C152193 * C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C152262 +
           (C23165 * C141 + C23211 + C23211 + C23160 * C157 + C23167 * C360 +
            C23212 + C23212 + C23161 * C384 + C23169 * C361 + C23213 + C23213 +
            C23162 * C385) *
               C151912) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C152357 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C152371 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C152371 -
           ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 + C23167 * C357 +
             C23511 + C23511 + C23161 * C381 + C23165 * C350 + C23512 + C23512 +
             C23160 * C374) *
                C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152372 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152359 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152372 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152330) *
              C151965 * C348 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152372 -
           ((C23169 * C1621 + C23812 + C23812 + C23162 * C1645 +
             C23167 * C1158 + C23813 + C23813 + C23161 * C1170 + C23165 * C587 +
             C23814 + C23814 + C23160 * C611) *
                C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152359 +
           ((C23853 + C23852 + C23851) * C152262 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151912) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C151983 * C1345 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C152262 +
            (C23546 + C23547 + C23548) * C151912) *
               C152193 * C151983 * C1346 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C151983 * C1345 -
           ((C23549 + C23550 + C23551) * C151912 +
            (C23545 + C23544 + C23543) * C152262) *
               C152193 * C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C151983 * C1345 -
           ((C24063 + C24064 + C24065) * C151912 +
            (C23548 + C23547 + C23546) * C152262) *
               C152193 * C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C152262 +
            (C23165 * C357 + C23513 + C23513 + C23160 * C381 + C23167 * C1439 +
             C23514 + C23514 + C23161 * C1455 + C23169 * C1446 + C23515 +
             C23515 + C23162 * C1462) *
                C151912) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C151983 * C1433 -
          ((C23540 + C23541 + C23542) * C151912 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C152262) *
              C152193 * C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C152262 +
           (C23543 + C23544 + C23545) * C151912) *
              C152193 * C151983 * C1435 -
          ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 + C23167 * C1444 +
            C24957 + C24957 + C23161 * C1460 + C23165 * C1441 + C24958 +
            C24958 + C23160 * C1457) *
               C151912 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C152262) *
              C152193 * C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C152262 +
           (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 + C23167 * C7980 +
            C24966 + C24966 + C23161 * C7986 + C23169 * C24950 + C24967 +
            C24967 + C23162 * C24954) *
               C151912) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152372 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C1345 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152359 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152372 -
           ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
             C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
             C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152330) *
              C1346 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152372 -
           ((C23169 * C8968 + C25198 + C25198 + C23162 * C8974 +
             C23167 * C2164 + C25199 + C25199 + C23161 * C2172 +
             C23165 * C1623 + C25200 + C25200 + C23160 * C1647) *
                C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152359 +
           ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
             C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
             C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                C152262 +
            (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
             C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
             C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                C151912) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2325 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C2326 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C2325 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152330) *
              C151965 * C152353 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C2325 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C2326 +
           ((C23853 + C23852 + C23851) * C152262 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151912) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2325 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152330) *
              C152371 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C2326 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C2325 -
           ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
             C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
             C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                C151912 +
            (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
             C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
             C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                C152262) *
               C152193 * C152330) *
              C152357 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C2325 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C2326 +
           ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
             C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
             C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                C152262 +
            (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
             C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
             C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                C151912) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C152262 +
           (C23238 + C23239 + C23240) * C151912) *
              C152193 * C2556 -
          ((C23842 + C23843 + C23844) * C151912 +
           (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23165 * C590 + C23781 + C23781 +
            C23160 * C614) *
               C152262) *
              C152193 * C2557 +
          ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
            C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
            C23784 + C23162 * C1649) *
               C152262 +
           (C23845 + C23846 + C23847) * C151912) *
              C152193 * C2558 -
          ((C23169 * C10284 + C26500 + C26500 + C23162 * C10290 +
            C23167 * C3090 + C26501 + C26501 + C23161 * C3098 + C23165 * C2563 +
            C26502 + C26502 + C23160 * C2579) *
               C151912 +
           (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
            C23167 * C3089 + C26504 + C26504 + C23161 * C3097 + C23165 * C2564 +
            C26505 + C26505 + C23160 * C2580) *
               C152262) *
              C152193 * C2559 +
          ((C23165 * C2565 + C26506 + C26506 + C23160 * C2581 + C23167 * C9540 +
            C26507 + C26507 + C23161 * C9546 + C23169 * C26493 + C26508 +
            C26508 + C23162 * C26497) *
               C152262 +
           (C23165 * C2566 + C26509 + C26509 + C23160 * C2582 + C23167 * C9541 +
            C26510 + C26510 + C23161 * C9547 + C23169 * C26494 + C26511 +
            C26511 + C23162 * C26498) *
               C151912) *
              C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C1345 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C152286 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C1345 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C1346 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152286 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C151965 * C807 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152070 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152286) *
              C151965 * C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C152286 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C152070) *
              C151965 * C809 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
               C152193 * C152070 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C2936 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C2937 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C2938 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C151965 * C152271 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C2937 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C2936 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C2938 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C125) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152286 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C1345 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C152286 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C2936 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C2937 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C2938 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C151965 * C152271 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C2937 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C2936 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C2938 +
           ((C27031 + C27030 + C27029) * C152262 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151912) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] += (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C152371 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C152357 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C152327) *
                       C347 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C152357 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C152371 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C152327) *
                       C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C152371 -
                    ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 +
                     C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C152357 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152193 * C151983 * C151965 * C129 -
                   (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                       C152193 * C151983 * C151965 * C130 +
                   (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                       C152193 * C151983 * C151965 * C131 -
                   (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                       C152193 * C151983 * C151965 * C132 +
                   (C196 * C122 + C197 * C123 + C198 * C124 +
                    (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
                       C152193 * C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C1345 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C1346 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C152327) *
                       C152368 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C1346 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C1345 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C152327) *
                       C152353 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C1345 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C1346 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152193 * C151983 * C1433 -
                   (C431 * C125 + C432 * C124 + C433 * C123 +
                    (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                       C152193 * C151983 * C1434 +
                   ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                    C434 * C123 + C435 * C124 + C436 * C125) *
                       C152193 * C151983 * C1435 -
                   ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
                    (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
                    (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
                    (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                       C152193 * C151983 * C1436 +
                   ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
                    (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
                    (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
                    (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
                       C152193 * C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C2325 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                        C152193 * C2326 +
                    ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152193 * C152330) *
                       C151965 * C152368 +
                   ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                        C152193 * C2326 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C2325 -
                    (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                        C152193 * C152330) *
                       C151965 * C152353 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C2325 -
                    (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                        C152193 * C2326 +
                    (C672 * C122 + C673 * C123 + C675 * C124 +
                     (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
                        C152193 * C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C2325 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                        C152193 * C2326 +
                    ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152193 * C152330) *
                       C152371 +
                   (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                     C1196 * C123 + C1197 * C124 + C1198 * C125) *
                        C152193 * C2326 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C2325 -
                    ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
                     (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
                     (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
                     (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                        C152193 * C152330) *
                       C152357 +
                   (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C2325 -
                    (C2031 * C125 + C2032 * C124 + C2033 * C123 +
                     (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                        C152193 * C2326 +
                    ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
                     (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
                     (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
                     (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
                        C152193 * C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                     C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                     C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                        C152262 +
                    (C23238 + C23239 + C23240) * C151912) *
                       C152193 * C151983 * C151965 * C129 -
                   ((C23241 + C23242 + C23243) * C151912 +
                    (C23240 + C23239 + C23238) * C152262) *
                       C152193 * C151983 * C151965 * C130 +
                   ((C23243 + C23242 + C23241) * C152262 +
                    (C23244 + C23245 + C23246) * C151912) *
                       C152193 * C151983 * C151965 * C131 -
                   ((C23247 + C23248 + C23249) * C151912 +
                    (C23246 + C23245 + C23244) * C152262) *
                       C152193 * C151983 * C151965 * C132 +
                   ((C23249 + C23248 + C23247) * C152262 +
                    (C23165 * C141 + C23211 + C23211 + C23160 * C157 +
                     C23167 * C360 + C23212 + C23212 + C23161 * C384 +
                     C23169 * C361 + C23213 + C23213 + C23162 * C385) *
                        C151912) *
                       C152193 * C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C152371 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C152357 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C152327) *
                       C347 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C152357 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C152371 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C152327) *
                       C348 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C152371 -
                    ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 +
                      C23167 * C357 + C23511 + C23511 + C23161 * C381 +
                      C23165 * C350 + C23512 + C23512 + C23160 * C374) *
                         C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C152357 +
                    ((C23551 + C23550 + C23549) * C152262 +
                     (C23165 * C357 + C23513 + C23513 + C23160 * C381 +
                      C23167 * C1439 + C23514 + C23514 + C23161 * C1455 +
                      C23169 * C1446 + C23515 + C23515 + C23162 * C1462) *
                         C151912) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C1345 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C1346 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C152327) *
                       C152368 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C1346 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C1345 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C152327) *
                       C152353 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C1345 -
                    ((C24063 + C24064 + C24065) * C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C1346 +
                    ((C23551 + C23550 + C23549) * C152262 +
                     (C23165 * C357 + C23513 + C23513 + C23160 * C381 +
                      C23167 * C1439 + C23514 + C23514 + C23161 * C1455 +
                      C23169 * C1446 + C23515 + C23515 + C23162 * C1462) *
                         C151912) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                     C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                     C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                        C152262 +
                    (C23238 + C23239 + C23240) * C151912) *
                       C152193 * C151983 * C1433 -
                   ((C23540 + C23541 + C23542) * C151912 +
                    (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                     C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                     C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                        C152262) *
                       C152193 * C151983 * C1434 +
                   ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                     C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                     C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                        C152262 +
                    (C23543 + C23544 + C23545) * C151912) *
                       C152193 * C151983 * C1435 -
                   ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 +
                     C23167 * C1444 + C24957 + C24957 + C23161 * C1460 +
                     C23165 * C1441 + C24958 + C24958 + C23160 * C1457) *
                        C151912 +
                    (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
                     C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
                     C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                        C152262) *
                       C152193 * C151983 * C1436 +
                   ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 +
                     C23167 * C7979 + C24963 + C24963 + C23161 * C7985 +
                     C23169 * C24949 + C24964 + C24964 + C23162 * C24953) *
                        C152262 +
                    (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 +
                     C23167 * C7980 + C24966 + C24966 + C23161 * C7986 +
                     C23169 * C24950 + C24967 + C24967 + C23162 * C24954) *
                        C151912) *
                       C152193 * C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C2325 -
                    ((C23842 + C23843 + C23844) * C151912 +
                     (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
                      C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
                      C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                         C152262) *
                        C152193 * C2326 +
                    ((C23165 * C591 + C23782 + C23782 + C23160 * C615 +
                      C23167 * C1620 + C23783 + C23783 + C23161 * C1644 +
                      C23169 * C1625 + C23784 + C23784 + C23162 * C1649) *
                         C152262 +
                     (C23845 + C23846 + C23847) * C151912) *
                        C152193 * C152330) *
                       C151965 * C152368 +
                   (((C23844 + C23843 + C23842) * C152262 +
                     (C23848 + C23849 + C23850) * C151912) *
                        C152193 * C2326 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C2325 -
                    ((C23851 + C23852 + C23853) * C151912 +
                     (C23847 + C23846 + C23845) * C152262) *
                        C152193 * C152330) *
                       C151965 * C152353 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C2325 -
                    ((C24275 + C24276 + C24277) * C151912 +
                     (C23850 + C23849 + C23848) * C152262) *
                        C152193 * C2326 +
                    ((C23853 + C23852 + C23851) * C152262 +
                     (C23165 * C594 + C23815 + C23815 + C23160 * C618 +
                      C23167 * C1617 + C23816 + C23816 + C23161 * C1641 +
                      C23169 * C1628 + C23817 + C23817 + C23162 * C1652) *
                         C151912) *
                        C152193 * C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C2325 -
                    ((C23842 + C23843 + C23844) * C151912 +
                     (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
                      C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
                      C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                         C152262) *
                        C152193 * C2326 +
                    ((C23165 * C591 + C23782 + C23782 + C23160 * C615 +
                      C23167 * C1620 + C23783 + C23783 + C23161 * C1644 +
                      C23169 * C1625 + C23784 + C23784 + C23162 * C1649) *
                         C152262 +
                     (C23845 + C23846 + C23847) * C151912) *
                        C152193 * C152330) *
                       C152371 +
                   (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
                      C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
                      C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                         C152262 +
                     (C24604 + C24605 + C24606) * C151912) *
                        C152193 * C2326 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C2325 -
                    ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
                      C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
                      C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                         C151912 +
                     (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
                      C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
                      C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                         C152262) *
                        C152193 * C152330) *
                       C152357 +
                   (((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C2325 -
                    ((C25727 + C25728 + C25729) * C151912 +
                     (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
                      C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
                      C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                         C152262) *
                        C152193 * C2326 +
                    ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
                      C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
                      C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                         C152262 +
                     (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
                      C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
                      C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                         C151912) *
                        C152193 * C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152028) *
              C151942 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C4241 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C152285 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C4241 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152066 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152073 +
            ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
             C672 * C124 + C673 * C125) *
                C152193 * C4913) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152073 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152066 -
            (C2804 * C125 + C2805 * C124 + C2806 * C123 +
             (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                C152193 * C4913) *
               C152028) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152073 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152066 -
            (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
                C4913) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152066 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152073 +
            (C2806 * C122 + C2805 * C123 + C2804 * C124 +
             (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C125) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152066 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152073 +
            ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
              C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
              C23784 + C23162 * C1649) *
                 C152262 +
             (C23845 + C23846 + C23847) * C151912) *
                C152193 * C4913) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152073 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152066 -
            ((C26817 + C26818 + C26819) * C151912 +
             (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                 C152262) *
                C152193 * C4913) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152073 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152066 -
            ((C23851 + C23852 + C23853) * C151912 +
             (C23847 + C23846 + C23845) * C152262) *
                C152193 * C4913) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152066 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152073 +
            ((C26819 + C26818 + C26817) * C152262 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151912) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152371 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C152371 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152357 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C151965 * C152377 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152070 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C4241) *
              C151965 * C152370 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C4241 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C152070) *
              C151965 * C152355 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
               C152193 * C152070 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152379 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152376 +
           ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 + C671 * C123 +
            C672 * C124 + C673 * C125) *
               C152193 * C152365 -
           (C2957 * C125 + C2958 * C124 + C2959 * C123 +
            (C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C122) *
               C152193 * C152343) *
              C151965 * C3375 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152376 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152379 -
           (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) * C152193 *
               C152365 +
           (C2959 * C122 + C2958 * C123 + C2957 * C124 +
            (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C125) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C4241 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152371 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C4241 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152379 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152376 +
           ((C23165 * C591 + C23782 + C23782 + C23160 * C615 + C23167 * C1620 +
             C23783 + C23783 + C23161 * C1644 + C23169 * C1625 + C23784 +
             C23784 + C23162 * C1649) *
                C152262 +
            (C23845 + C23846 + C23847) * C151912) *
               C152193 * C152365 -
           ((C27029 + C27030 + C27031) * C151912 +
            (C23169 * C10283 + C26503 + C26503 + C23162 * C10289 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23165 * C2564 + C26505 + C26505 + C23160 * C2580) *
                C152262) *
               C152193 * C152343) *
              C151965 * C3375 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152376 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152379 -
           ((C23851 + C23852 + C23853) * C151912 +
            (C23847 + C23846 + C23845) * C152262) *
               C152193 * C152365 +
           ((C27031 + C27030 + C27029) * C152262 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151912) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C152066 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                        C152193 * C152073 +
                    ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152193 * C4913) *
                       C151965 * C151942 +
                   ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                        C152193 * C152073 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C152066 -
                    (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                        C152193 * C4913) *
                       C151965 * C151951 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C152066 -
                    (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) *
                        C152193 * C152073 +
                    (C672 * C122 + C673 * C123 + C675 * C124 +
                     (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
                        C152193 * C4913) *
                       C151965 * C3722)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C152066 -
                    ((C23842 + C23843 + C23844) * C151912 +
                     (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
                      C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
                      C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                         C152262) *
                        C152193 * C152073 +
                    ((C23165 * C591 + C23782 + C23782 + C23160 * C615 +
                      C23167 * C1620 + C23783 + C23783 + C23161 * C1644 +
                      C23169 * C1625 + C23784 + C23784 + C23162 * C1649) *
                         C152262 +
                     (C23845 + C23846 + C23847) * C151912) *
                        C152193 * C4913) *
                       C151965 * C151942 +
                   (((C23844 + C23843 + C23842) * C152262 +
                     (C23848 + C23849 + C23850) * C151912) *
                        C152193 * C152073 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C152066 -
                    ((C23851 + C23852 + C23853) * C151912 +
                     (C23847 + C23846 + C23845) * C152262) *
                        C152193 * C4913) *
                       C151965 * C151951 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C152066 -
                    ((C24275 + C24276 + C24277) * C151912 +
                     (C23850 + C23849 + C23848) * C152262) *
                        C152193 * C152073 +
                    ((C23853 + C23852 + C23851) * C152262 +
                     (C23165 * C594 + C23815 + C23815 + C23160 * C618 +
                      C23167 * C1617 + C23816 + C23816 + C23161 * C1641 +
                      C23169 * C1628 + C23817 + C23817 + C23162 * C1652) *
                         C151912) *
                        C152193 * C4913) *
                       C151965 * C3722)) /
                     (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C4241 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C151965 * C152377 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152070 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C4241) *
              C151965 * C152370 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C4241 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C152070) *
              C151965 * C152355 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
               C152193 * C152070 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C4241 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152371 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C4241) *
               C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C4241 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C4241) *
               C152371 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C4241 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152357 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C4241 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C4241 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C4241 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152371 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C4241 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C4241 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C152285 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C152028) *
                       C807 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C152028 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C152285) *
                       C808 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C152285 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C152028) *
                       C809 +
                   ((C431 * C122 + C437 * C123 + C820 * C124 +
                     (C134 * C811 + C817 + C817 + C152163 * C813) * C125) *
                        C152193 * C151983 * C152028 -
                    (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                        C152193 * C151983 * C152285) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C1795 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C1796 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C1797 -
                    (C1818 * C125 + C1819 * C124 + C1820 * C123 +
                     (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                        C152193 * C151983 * C152337) *
                       C152271 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C1796 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C1795 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C1797 +
                    (C1820 * C122 + C1819 * C123 + C1818 * C124 +
                     (C134 * C1801 + C1811 + C1811 + C152163 * C1803) * C125) *
                        C152193 * C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C152285 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C152028) *
                       C807 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C152028 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C152285) *
                       C808 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C152285 -
                    ((C24063 + C24064 + C24065) * C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C152028) *
                       C809 +
                   (((C24065 + C24064 + C24063) * C152262 +
                     (C23165 * C358 + C24054 + C24054 + C23160 * C382 +
                      C23167 * C359 + C24055 + C24055 + C23161 * C383 +
                      C23169 * C1801 + C24056 + C24056 + C23162 * C1803) *
                         C151912) *
                        C152193 * C151983 * C152028 -
                    ((C23247 + C23248 + C23249) * C151912 +
                     (C23246 + C23245 + C23244) * C152262) *
                        C152193 * C151983 * C152285) *
                       C152331)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C1795 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C1796 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C1797 -
                    ((C25419 + C25420 + C25421) * C151912 +
                     (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
                      C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
                      C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                         C152262) *
                        C152193 * C151983 * C152337) *
                       C152271 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C1796 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C1795 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C1797 +
                    ((C25421 + C25420 + C25419) * C152262 +
                     (C23165 * C1440 + C25410 + C25410 + C23160 * C1456 +
                      C23167 * C1445 + C25411 + C25411 + C23161 * C1461 +
                      C23169 * C7981 + C25412 + C25412 + C23162 * C7987) *
                         C151912) *
                        C152193 * C151983 * C152337) *
                       C151948)) /
                     (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C152285 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C152028) *
              C347 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C152285 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
                C152286 -
            (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
                C152070) *
               C152285 +
           ((C1197 * C122 + C1198 * C123 + C1199 * C124 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C125) *
                C152193 * C152070 -
            (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) * C152193 *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152286 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C1795 +
          (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
            C1196 * C123 + C1197 * C124 + C1198 * C125) *
               C152193 * C152070 -
           (C431 * C125 + C432 * C124 + C433 * C123 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
               C152193 * C152286) *
              C1796 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
            C435 * C124 + C436 * C125) *
               C152193 * C152286 -
           (C2031 * C125 + C2032 * C124 + C2033 * C123 +
            (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
               C152193 * C152070) *
              C1797 +
          (((C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C122 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C123 +
            (C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C124 +
            (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C125) *
               C152193 * C152070 -
           (C1818 * C125 + C1819 * C124 + C1820 * C123 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C152285 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C152262 +
             (C23244 + C23245 + C23246) * C151912) *
                C152193 * C152286 -
            ((C24275 + C24276 + C24277) * C151912 +
             (C23850 + C23849 + C23848) * C152262) *
                C152193 * C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C152262 +
             (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
              C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
              C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                 C151912) *
                C152193 * C152070 -
            ((C24063 + C24064 + C24065) * C151912 +
             (C23548 + C23547 + C23546) * C152262) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C1795 +
          (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                C152262 +
            (C24604 + C24605 + C24606) * C151912) *
               C152193 * C152070 -
           ((C23540 + C23541 + C23542) * C151912 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C152262) *
               C152193 * C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C152262 +
            (C23543 + C23544 + C23545) * C151912) *
               C152193 * C152286 -
           ((C25727 + C25728 + C25729) * C151912 +
            (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                C152262) *
               C152193 * C152070) *
              C1797 +
          (((C23165 * C2163 + C25930 + C25930 + C23160 * C2171 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23169 * C25923 + C25932 + C25932 + C23162 * C25927) *
                C152262 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151912) *
               C152193 * C152070 -
           ((C25419 + C25420 + C25421) * C151912 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C152262) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[322] += (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C152371 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C152357 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C152327) *
                       C347 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C152357 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C152371 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C152327) *
                       C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C152371 -
                    ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 +
                     C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C152357 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152193 * C151983 * C151965 * C129 -
                   (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                       C152193 * C151983 * C151965 * C130 +
                   (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                       C152193 * C151983 * C151965 * C131 -
                   (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                       C152193 * C151983 * C151965 * C132 +
                   (C196 * C122 + C197 * C123 + C198 * C124 +
                    (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
                       C152193 * C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C152372 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                        C152193 * C152359 +
                    ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152193 * C152330) *
                       C151965 * C347 +
                   ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) *
                        C152193 * C152359 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C152372 -
                    (C675 * C125 + C673 * C124 + C672 * C123 + C671 * C122) *
                        C152193 * C152330) *
                       C151965 * C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C152372 -
                    ((C134 * C597 + C650 + C650 + C152163 * C621) * C125 +
                     C674 * C124 + C668 * C123 + C669 * C122) *
                        C152193 * C152359 +
                    (C672 * C122 + C673 * C123 + C675 * C124 +
                     (C134 * C598 + C651 + C651 + C152163 * C622) * C125) *
                        C152193 * C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C1345 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C1346 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C152327) *
                       C152368 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C1346 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C1345 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C152327) *
                       C152353 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C1345 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C1346 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152193 * C151983 * C1433 -
                   (C431 * C125 + C432 * C124 + C433 * C123 +
                    (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                       C152193 * C151983 * C1434 +
                   ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                    C434 * C123 + C435 * C124 + C436 * C125) *
                       C152193 * C151983 * C1435 -
                   ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
                    (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
                    (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
                    (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                       C152193 * C151983 * C1436 +
                   ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
                    (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
                    (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
                    (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
                       C152193 * C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C152372 -
                    (C668 * C125 + C669 * C124 + C670 * C123 +
                     (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                        C152193 * C152359 +
                    ((C134 * C591 + C634 + C634 + C152163 * C615) * C122 +
                     C671 * C123 + C672 * C124 + C673 * C125) *
                        C152193 * C152330) *
                       C1345 +
                   (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
                     C1196 * C123 + C1197 * C124 + C1198 * C125) *
                        C152193 * C152359 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C152372 -
                    ((C134 * C1617 + C1654 + C1654 + C152163 * C1641) * C125 +
                     (C134 * C1618 + C1655 + C1655 + C152163 * C1642) * C124 +
                     (C134 * C1619 + C1656 + C1656 + C152163 * C1643) * C123 +
                     (C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C122) *
                        C152193 * C152330) *
                       C1346 +
                   (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C152372 -
                    ((C134 * C1621 + C1658 + C1658 + C152163 * C1645) * C125 +
                     (C134 * C1622 + C1659 + C1659 + C152163 * C1646) * C124 +
                     (C134 * C1623 + C1660 + C1660 + C152163 * C1647) * C123 +
                     (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                        C152193 * C152359 +
                    ((C134 * C1625 + C1662 + C1662 + C152163 * C1649) * C122 +
                     (C134 * C1626 + C1663 + C1663 + C152163 * C1650) * C123 +
                     (C134 * C1627 + C1664 + C1664 + C152163 * C1651) * C124 +
                     (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C125) *
                        C152193 * C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                     C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                     C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                        C152262 +
                    (C23238 + C23239 + C23240) * C151912) *
                       C152193 * C151983 * C151965 * C129 -
                   ((C23241 + C23242 + C23243) * C151912 +
                    (C23240 + C23239 + C23238) * C152262) *
                       C152193 * C151983 * C151965 * C130 +
                   ((C23243 + C23242 + C23241) * C152262 +
                    (C23244 + C23245 + C23246) * C151912) *
                       C152193 * C151983 * C151965 * C131 -
                   ((C23247 + C23248 + C23249) * C151912 +
                    (C23246 + C23245 + C23244) * C152262) *
                       C152193 * C151983 * C151965 * C132 +
                   ((C23249 + C23248 + C23247) * C152262 +
                    (C23165 * C141 + C23211 + C23211 + C23160 * C157 +
                     C23167 * C360 + C23212 + C23212 + C23161 * C384 +
                     C23169 * C361 + C23213 + C23213 + C23162 * C385) *
                        C151912) *
                       C152193 * C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C152371 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C152357 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C152327) *
                       C347 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C152357 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C152371 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C152327) *
                       C348 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C152371 -
                    ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 +
                      C23167 * C357 + C23511 + C23511 + C23161 * C381 +
                      C23165 * C350 + C23512 + C23512 + C23160 * C374) *
                         C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C152357 +
                    ((C23551 + C23550 + C23549) * C152262 +
                     (C23165 * C357 + C23513 + C23513 + C23160 * C381 +
                      C23167 * C1439 + C23514 + C23514 + C23161 * C1455 +
                      C23169 * C1446 + C23515 + C23515 + C23162 * C1462) *
                         C151912) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C152372 -
                    ((C23842 + C23843 + C23844) * C151912 +
                     (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
                      C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
                      C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                         C152262) *
                        C152193 * C152359 +
                    ((C23165 * C591 + C23782 + C23782 + C23160 * C615 +
                      C23167 * C1620 + C23783 + C23783 + C23161 * C1644 +
                      C23169 * C1625 + C23784 + C23784 + C23162 * C1649) *
                         C152262 +
                     (C23845 + C23846 + C23847) * C151912) *
                        C152193 * C152330) *
                       C151965 * C347 +
                   (((C23844 + C23843 + C23842) * C152262 +
                     (C23848 + C23849 + C23850) * C151912) *
                        C152193 * C152359 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C152372 -
                    ((C23851 + C23852 + C23853) * C151912 +
                     (C23847 + C23846 + C23845) * C152262) *
                        C152193 * C152330) *
                       C151965 * C348 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C152372 -
                    ((C23169 * C1621 + C23812 + C23812 + C23162 * C1645 +
                      C23167 * C1158 + C23813 + C23813 + C23161 * C1170 +
                      C23165 * C587 + C23814 + C23814 + C23160 * C611) *
                         C151912 +
                     (C23850 + C23849 + C23848) * C152262) *
                        C152193 * C152359 +
                    ((C23853 + C23852 + C23851) * C152262 +
                     (C23165 * C594 + C23815 + C23815 + C23160 * C618 +
                      C23167 * C1617 + C23816 + C23816 + C23161 * C1641 +
                      C23169 * C1628 + C23817 + C23817 + C23162 * C1652) *
                         C151912) *
                        C152193 * C152330) *
                       C151965 * C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C1345 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C1346 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C152327) *
                       C152368 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C1346 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C1345 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C152327) *
                       C152353 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C1345 -
                    ((C24063 + C24064 + C24065) * C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C1346 +
                    ((C23551 + C23550 + C23549) * C152262 +
                     (C23165 * C357 + C23513 + C23513 + C23160 * C381 +
                      C23167 * C1439 + C23514 + C23514 + C23161 * C1455 +
                      C23169 * C1446 + C23515 + C23515 + C23162 * C1462) *
                         C151912) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                     C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                     C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                        C152262 +
                    (C23238 + C23239 + C23240) * C151912) *
                       C152193 * C151983 * C1433 -
                   ((C23540 + C23541 + C23542) * C151912 +
                    (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                     C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                     C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                        C152262) *
                       C152193 * C151983 * C1434 +
                   ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                     C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                     C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                        C152262 +
                    (C23543 + C23544 + C23545) * C151912) *
                       C152193 * C151983 * C1435 -
                   ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 +
                     C23167 * C1444 + C24957 + C24957 + C23161 * C1460 +
                     C23165 * C1441 + C24958 + C24958 + C23160 * C1457) *
                        C151912 +
                    (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
                     C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
                     C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                        C152262) *
                       C152193 * C151983 * C1436 +
                   ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 +
                     C23167 * C7979 + C24963 + C24963 + C23161 * C7985 +
                     C23169 * C24949 + C24964 + C24964 + C23162 * C24953) *
                        C152262 +
                    (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 +
                     C23167 * C7980 + C24966 + C24966 + C23161 * C7986 +
                     C23169 * C24950 + C24967 + C24967 + C23162 * C24954) *
                        C151912) *
                       C152193 * C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C152372 -
                    ((C23842 + C23843 + C23844) * C151912 +
                     (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
                      C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
                      C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                         C152262) *
                        C152193 * C152359 +
                    ((C23165 * C591 + C23782 + C23782 + C23160 * C615 +
                      C23167 * C1620 + C23783 + C23783 + C23161 * C1644 +
                      C23169 * C1625 + C23784 + C23784 + C23162 * C1649) *
                         C152262 +
                     (C23845 + C23846 + C23847) * C151912) *
                        C152193 * C152330) *
                       C1345 +
                   (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
                      C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
                      C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                         C152262 +
                     (C24604 + C24605 + C24606) * C151912) *
                        C152193 * C152359 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C152372 -
                    ((C23169 * C8219 + C25192 + C25192 + C23162 * C8225 +
                      C23167 * C1626 + C25193 + C25193 + C23161 * C1650 +
                      C23165 * C1619 + C25194 + C25194 + C23160 * C1643) *
                         C151912 +
                     (C23169 * C8218 + C25195 + C25195 + C23162 * C8224 +
                      C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
                      C23165 * C1620 + C25197 + C25197 + C23160 * C1644) *
                         C152262) *
                        C152193 * C152330) *
                       C1346 +
                   (((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C152372 -
                    ((C23169 * C8968 + C25198 + C25198 + C23162 * C8974 +
                      C23167 * C2164 + C25199 + C25199 + C23161 * C2172 +
                      C23165 * C1623 + C25200 + C25200 + C23160 * C1647) *
                         C151912 +
                     (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
                      C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
                      C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                         C152262) *
                        C152193 * C152359 +
                    ((C23165 * C1625 + C25204 + C25204 + C23160 * C1649 +
                      C23167 * C8218 + C25205 + C25205 + C23161 * C8224 +
                      C23169 * C25185 + C25206 + C25206 + C23162 * C25189) *
                         C152262 +
                     (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
                      C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
                      C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                         C151912) *
                        C152193 * C152330) *
                       C152327) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
            C194 * C124 + C195 * C125) *
               C152193 * C152286 -
           (C668 * C125 + C669 * C124 + C670 * C123 +
            (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
               C152193 * C152070) *
              C151965 * C807 +
          ((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
               C152070 -
           (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
               C152286) *
              C151965 * C808 +
          ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) * C152193 *
               C152286 -
           (C961 * C125 + C674 * C124 + C668 * C123 + C669 * C122) * C152193 *
               C152070) *
              C151965 * C809 +
          ((C668 * C122 + C674 * C123 + C961 * C124 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C125) *
               C152193 * C152070 -
           (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) * C152193 *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 + C193 * C123 +
             C194 * C124 + C195 * C125) *
                C152193 * C152286 -
            (C668 * C125 + C669 * C124 + C670 * C123 +
             (C134 * C590 + C633 + C633 + C152163 * C614) * C122) *
                C152193 * C152070) *
               C1345 +
           (((C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C122 +
             C1196 * C123 + C1197 * C124 + C1198 * C125) *
                C152193 * C152070 -
            (C431 * C125 + C432 * C124 + C433 * C123 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                C152193 * C152286) *
               C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C122 + C434 * C123 +
             C435 * C124 + C436 * C125) *
                C152193 * C152286 -
            (C2031 * C125 + C2032 * C124 + C2033 * C123 +
             (C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C122) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          (((C670 * C122 + C669 * C123 + C668 * C124 + C674 * C125) * C152193 *
                C152070 -
            (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) * C152193 *
                C152286) *
               C1345 +
           ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) * C152193 *
                C152286 -
            (C1199 * C125 + C1198 * C124 + C1197 * C123 + C1196 * C122) *
                C152193 * C152070) *
               C1346 +
           ((C2033 * C122 + C2032 * C123 + C2031 * C124 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C125) *
                C152193 * C152070 -
            (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) * C152193 *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C152262 +
            (C23238 + C23239 + C23240) * C151912) *
               C152193 * C152286 -
           ((C23842 + C23843 + C23844) * C151912 +
            (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
             C23167 * C1155 + C23780 + C23780 + C23161 * C1167 + C23165 * C590 +
             C23781 + C23781 + C23160 * C614) *
                C152262) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C152262 +
            (C23848 + C23849 + C23850) * C151912) *
               C152193 * C152070 -
           ((C23241 + C23242 + C23243) * C151912 +
            (C23240 + C23239 + C23238) * C152262) *
               C152193 * C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C152262 +
            (C23244 + C23245 + C23246) * C151912) *
               C152193 * C152286 -
           ((C24275 + C24276 + C24277) * C151912 +
            (C23850 + C23849 + C23848) * C152262) *
               C152193 * C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C152262 +
            (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
             C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
             C24268 + C23162 * C2016) *
                C151912) *
               C152193 * C152070 -
           ((C23247 + C23248 + C23249) * C151912 +
            (C23246 + C23245 + C23244) * C152262) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C152262 +
             (C23238 + C23239 + C23240) * C151912) *
                C152193 * C152286 -
            ((C23842 + C23843 + C23844) * C151912 +
             (C23169 * C1624 + C23779 + C23779 + C23162 * C1648 +
              C23167 * C1155 + C23780 + C23780 + C23161 * C1167 +
              C23165 * C590 + C23781 + C23781 + C23160 * C614) *
                 C152262) *
                C152193 * C152070) *
               C1345 +
           (((C23165 * C1155 + C24568 + C24568 + C23160 * C1167 +
              C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
              C23169 * C2163 + C24570 + C24570 + C23162 * C2171) *
                 C152262 +
             (C24604 + C24605 + C24606) * C151912) *
                C152193 * C152070 -
            ((C23540 + C23541 + C23542) * C151912 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C152262) *
                C152193 * C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C152262 +
             (C23543 + C23544 + C23545) * C151912) *
                C152193 * C152286 -
            ((C25727 + C25728 + C25729) * C151912 +
             (C23169 * C8967 + C25201 + C25201 + C23162 * C8973 +
              C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
              C23165 * C1624 + C25203 + C25203 + C23160 * C1648) *
                 C152262) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C152262 +
             (C23848 + C23849 + C23850) * C151912) *
                C152193 * C152070 -
            ((C23241 + C23242 + C23243) * C151912 +
             (C23240 + C23239 + C23238) * C152262) *
                C152193 * C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C152262 +
             (C23546 + C23547 + C23548) * C151912) *
                C152193 * C152286 -
            ((C24607 + C24608 + C24609) * C151912 +
             (C24606 + C24605 + C24604) * C152262) *
                C152193 * C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C152262 +
             (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
              C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
              C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                 C151912) *
                C152193 * C152070 -
            ((C23549 + C23550 + C23551) * C151912 +
             (C23545 + C23544 + C23543) * C152262) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] += (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152193 * C151983 * C151965 * C129 -
                   (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                       C152193 * C151983 * C151965 * C130 +
                   (C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                       C152193 * C151983 * C151965 * C131 -
                   (C198 * C125 + C197 * C124 + C196 * C123 + C195 * C122) *
                       C152193 * C151983 * C151965 * C132 +
                   (C196 * C122 + C197 * C123 + C198 * C124 +
                    (C134 * C143 + C180 + C180 + C152163 * C159) * C125) *
                       C152193 * C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C152371 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C152357 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C152327) *
                       C347 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C152357 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C152371 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C152327) *
                       C348 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C152371 -
                    ((C134 * C360 + C413 + C413 + C152163 * C384) * C125 +
                     C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C152357 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                     C193 * C123 + C194 * C124 + C195 * C125) *
                        C152193 * C151983 * C1345 -
                    (C431 * C125 + C432 * C124 + C433 * C123 +
                     (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                        C152193 * C151983 * C1346 +
                    ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                     C434 * C123 + C435 * C124 + C436 * C125) *
                        C152193 * C151983 * C152327) *
                       C152368 +
                   ((C433 * C122 + C432 * C123 + C431 * C124 + C437 * C125) *
                        C152193 * C151983 * C1346 -
                    (C196 * C125 + C195 * C124 + C194 * C123 + C193 * C122) *
                        C152193 * C151983 * C1345 -
                    (C438 * C125 + C436 * C124 + C435 * C123 + C434 * C122) *
                        C152193 * C151983 * C152327) *
                       C152353 +
                   ((C194 * C122 + C195 * C123 + C196 * C124 + C197 * C125) *
                        C152193 * C151983 * C1345 -
                    (C820 * C125 + C437 * C124 + C431 * C123 + C432 * C122) *
                        C152193 * C151983 * C1346 +
                    (C435 * C122 + C436 * C123 + C438 * C124 +
                     (C134 * C361 + C414 + C414 + C152163 * C385) * C125) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C136 + C161 + C161 + C152163 * C152) * C122 +
                    C193 * C123 + C194 * C124 + C195 * C125) *
                       C152193 * C151983 * C1433 -
                   (C431 * C125 + C432 * C124 + C433 * C123 +
                    (C134 * C353 + C396 + C396 + C152163 * C377) * C122) *
                       C152193 * C151983 * C1434 +
                   ((C134 * C354 + C397 + C397 + C152163 * C378) * C122 +
                    C434 * C123 + C435 * C124 + C436 * C125) *
                       C152193 * C151983 * C1435 -
                   ((C134 * C1439 + C1464 + C1464 + C152163 * C1455) * C125 +
                    (C134 * C1440 + C1465 + C1465 + C152163 * C1456) * C124 +
                    (C134 * C1441 + C1466 + C1466 + C152163 * C1457) * C123 +
                    (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C122) *
                       C152193 * C151983 * C1436 +
                   ((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C122 +
                    (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C123 +
                    (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C124 +
                    (C134 * C1446 + C1471 + C1471 + C152163 * C1462) * C125) *
                       C152193 * C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                     C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                     C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                        C152262 +
                    (C23238 + C23239 + C23240) * C151912) *
                       C152193 * C151983 * C151965 * C129 -
                   ((C23241 + C23242 + C23243) * C151912 +
                    (C23240 + C23239 + C23238) * C152262) *
                       C152193 * C151983 * C151965 * C130 +
                   ((C23243 + C23242 + C23241) * C152262 +
                    (C23244 + C23245 + C23246) * C151912) *
                       C152193 * C151983 * C151965 * C131 -
                   ((C23247 + C23248 + C23249) * C151912 +
                    (C23246 + C23245 + C23244) * C152262) *
                       C152193 * C151983 * C151965 * C132 +
                   ((C23249 + C23248 + C23247) * C152262 +
                    (C23165 * C141 + C23211 + C23211 + C23160 * C157 +
                     C23167 * C360 + C23212 + C23212 + C23161 * C384 +
                     C23169 * C361 + C23213 + C23213 + C23162 * C385) *
                        C151912) *
                       C152193 * C151983 * C151965 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C152371 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C152357 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C152327) *
                       C347 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C152357 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C152371 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C152327) *
                       C348 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C152371 -
                    ((C23169 * C1439 + C23510 + C23510 + C23162 * C1455 +
                      C23167 * C357 + C23511 + C23511 + C23161 * C381 +
                      C23165 * C350 + C23512 + C23512 + C23160 * C374) *
                         C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C152357 +
                    ((C23551 + C23550 + C23549) * C152262 +
                     (C23165 * C357 + C23513 + C23513 + C23160 * C381 +
                      C23167 * C1439 + C23514 + C23514 + C23161 * C1455 +
                      C23169 * C1446 + C23515 + C23515 + C23162 * C1462) *
                         C151912) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                      C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                      C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                         C152262 +
                     (C23238 + C23239 + C23240) * C151912) *
                        C152193 * C151983 * C1345 -
                    ((C23540 + C23541 + C23542) * C151912 +
                     (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                      C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                      C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                         C152262) *
                        C152193 * C151983 * C1346 +
                    ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                      C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                      C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                         C152262 +
                     (C23543 + C23544 + C23545) * C151912) *
                        C152193 * C151983 * C152327) *
                       C152368 +
                   (((C23542 + C23541 + C23540) * C152262 +
                     (C23546 + C23547 + C23548) * C151912) *
                        C152193 * C151983 * C1346 -
                    ((C23241 + C23242 + C23243) * C151912 +
                     (C23240 + C23239 + C23238) * C152262) *
                        C152193 * C151983 * C1345 -
                    ((C23549 + C23550 + C23551) * C151912 +
                     (C23545 + C23544 + C23543) * C152262) *
                        C152193 * C151983 * C152327) *
                       C152353 +
                   (((C23243 + C23242 + C23241) * C152262 +
                     (C23244 + C23245 + C23246) * C151912) *
                        C152193 * C151983 * C1345 -
                    ((C24063 + C24064 + C24065) * C151912 +
                     (C23548 + C23547 + C23546) * C152262) *
                        C152193 * C151983 * C1346 +
                    ((C23551 + C23550 + C23549) * C152262 +
                     (C23165 * C357 + C23513 + C23513 + C23160 * C381 +
                      C23167 * C1439 + C23514 + C23514 + C23161 * C1455 +
                      C23169 * C1446 + C23515 + C23515 + C23162 * C1462) *
                         C151912) *
                        C152193 * C151983 * C152327) *
                       C152321)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C23165 * C136 + C23172 + C23172 + C23160 * C152 +
                     C23167 * C353 + C23173 + C23173 + C23161 * C377 +
                     C23169 * C354 + C23174 + C23174 + C23162 * C378) *
                        C152262 +
                    (C23238 + C23239 + C23240) * C151912) *
                       C152193 * C151983 * C1433 -
                   ((C23540 + C23541 + C23542) * C151912 +
                    (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
                     C23167 * C354 + C23478 + C23478 + C23161 * C378 +
                     C23165 * C353 + C23479 + C23479 + C23160 * C377) *
                        C152262) *
                       C152193 * C151983 * C1434 +
                   ((C23165 * C354 + C23480 + C23480 + C23160 * C378 +
                     C23167 * C1442 + C23481 + C23481 + C23161 * C1458 +
                     C23169 * C1443 + C23482 + C23482 + C23162 * C1459) *
                        C152262 +
                    (C23543 + C23544 + C23545) * C151912) *
                       C152193 * C151983 * C1435 -
                   ((C23169 * C7980 + C24956 + C24956 + C23162 * C7986 +
                     C23167 * C1444 + C24957 + C24957 + C23161 * C1460 +
                     C23165 * C1441 + C24958 + C24958 + C23160 * C1457) *
                        C151912 +
                    (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
                     C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
                     C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                        C152262) *
                       C152193 * C151983 * C1436 +
                   ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 +
                     C23167 * C7979 + C24963 + C24963 + C23161 * C7985 +
                     C23169 * C24949 + C24964 + C24964 + C23162 * C24953) *
                        C152262 +
                    (C23165 * C1444 + C24965 + C24965 + C23160 * C1460 +
                     C23167 * C7980 + C24966 + C24966 + C23161 * C7986 +
                     C23169 * C24950 + C24967 + C24967 + C23162 * C24954) *
                        C151912) *
                       C152193 * C151983 * C1437) *
                  C151937) /
                     (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152024 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152031 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C3719) *
              C151942 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152031 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152024 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C3719) *
              C151951 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152024 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152031 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152024 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152031 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C3719) *
              C151942 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152031 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152024 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C3719) *
              C151951 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152024 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152031 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152024 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C152031 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C152286 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C3719) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C152024 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152031 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152024 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152031 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C152286 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C3719) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C152024 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152031 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152378 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152374 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152362 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152374 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152378 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152362 +
           ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
            (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 + C6225 * C1446 +
             C8449 + C8449 + C152179 * C1462) *
                C6222) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C3235 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152028 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C3235) *
              C152370 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C3235 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152028) *
              C152355 +
          ((C7089 * C6220 + (C7101 + C7100) * C6221 +
            (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
             C7095 + C7095 + C152179 * C385) *
                C6222) *
               C152193 * C151983 * C152028 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152372 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152359 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C152330) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152359 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152372 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C152330) *
               C152028) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152359 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152372 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C152330) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152372 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152359 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C152377 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C3235) *
              C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C152355 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152374 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152362 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C3375 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152374 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152362 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152372 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152359 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C152330) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152359 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152372 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C152330) *
               C152028) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152359 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152372 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C152330) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152372 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152359 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C152028) *
              C151942 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C152286 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C3235 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152028) *
              C151942 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C151951 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C152286 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C3235 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152028) *
              C152377 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152028 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C3235) *
              C152370 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C3235 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152028) *
              C152355 +
          ((C7089 * C6220 + (C7101 + C7100) * C6221 +
            (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
             C7095 + C7095 + C152179 * C385) *
                C6222) *
               C152193 * C151983 * C152028 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152378 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152374 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152362 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C151983 * C152337) *
              C3375 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152374 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152378 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152362 +
           ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
            (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 + C6225 * C1446 +
             C8449 + C8449 + C152179 * C1462) *
                C6222) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C152377 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C3235) *
              C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C3235 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C152355 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152374 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152362 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C3375 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152374 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152378 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152362 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152024 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152031 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C4241 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C3719) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C152024 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152031 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152024 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152031 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C4241 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C3719) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152024 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152031 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152066 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152073 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C4913) *
              C152024 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152073 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152066 -
           ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C4913) *
              C152031 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152066 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152073 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152066 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152073 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C4913) *
              C152024 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152073 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152066 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C4913) *
              C152031 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152066 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152073 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C4241 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C152378 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152070 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C4241) *
              C152374 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C4241 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152070) *
              C152362 +
          (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 + C6225 * C8967 +
             C8978 + C8978 + C152179 * C8973) *
                C6220 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C6221 +
            (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
             C8982 + C8982 + C152179 * C8975) *
                C6222) *
               C152193 * C152070 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C4241 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C3235 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152379 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152376 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152365 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C3235 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152376 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152379 -
           ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152365 +
           ((C6223 * C3089 + C10293 + C10293 + C152299 * C3097 +
             C6225 * C10283 + C10294 + C10294 + C152179 * C10289) *
                C6220 +
            (C6223 * C3090 + C10295 + C10295 + C152299 * C3098 +
             C6225 * C10284 + C10296 + C10296 + C152179 * C10290) *
                C6221 +
            (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
             C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                C6222) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152368 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C152353 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C4241 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C152378 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C4241) *
              C152374 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C4241 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C152362 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152379 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152376 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152365 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C3235 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152376 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152379 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152365 +
           (C31752 * C3089 + C34314 + C34314 + C31747 * C3097 +
            C31754 * C10283 + C34315 + C34315 + C31748 * C10289 +
            C31756 * C27225 + C34316 + C34316 + C31749 * C27229 +
            C31758 * C34310 + C34317 + C34317 + C31750 * C34312) *
               C151907 * C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152066 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152073 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C4913) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152073 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152066 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C4913) *
               C152028) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152073 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152066 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C4913) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152066 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152073 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152066 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152073 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C4913) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152073 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152066 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C4913) *
               C152028) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152073 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152066 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C4913) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152066 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152073 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C3235 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152028) *
              C152368 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C3235 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C152353 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C4241 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C3235 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C4241 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C152378 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152070 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C4241) *
              C152374 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C4241 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152070) *
              C152362 +
          (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 + C6225 * C8967 +
             C8978 + C8978 + C152179 * C8973) *
                C6220 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C6221 +
            (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
             C8982 + C8982 + C152179 * C8975) *
                C6222) *
               C152193 * C152070 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152368 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C3235 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C152353 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C4241 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C3235 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C152378 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C4241) *
              C152374 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C4241 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C152362 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1795 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1796 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C1797 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1796 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1795 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C1797 +
           ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
            (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 + C6225 * C1446 +
             C8449 + C8449 + C152179 * C1462) *
                C6222) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152285 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152028 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152285) *
              C808 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152285 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152028) *
              C809 +
          ((C7089 * C6220 + (C7101 + C7100) * C6221 +
            (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
             C7095 + C7095 + C152179 * C385) *
                C6222) *
               C152193 * C151983 * C152028 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C2325 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C2326 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C152330) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C2326 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C2325 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C152330) *
               C152028) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C2326 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C2325 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C152330) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C2325 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C2326 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C807 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152285) *
              C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C809 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1796 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C1797 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C152271 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1796 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C1797 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C2325 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C2326 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C152330) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C2326 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C2325 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C152330) *
               C152028) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C2326 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C2325 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C152330) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C2325 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C2326 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152286 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C1795 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152070 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152286) *
              C1796 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152286 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152070) *
              C1797 +
          (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 + C6225 * C8967 +
             C8978 + C8978 + C152179 * C8973) *
                C6220 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C6221 +
            (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
             C8982 + C8982 + C152179 * C8975) *
                C6222) *
               C152193 * C152070 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C152286 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C152285 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2936 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2937 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C2938 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C152285 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C2937 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C2936 -
           ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C2938 +
           ((C6223 * C3089 + C10293 + C10293 + C152299 * C3097 +
             C6225 * C10283 + C10294 + C10294 + C152179 * C10289) *
                C6220 +
            (C6223 * C3090 + C10295 + C10295 + C152299 * C3098 +
             C6225 * C10284 + C10296 + C10296 + C152179 * C10290) *
                C6221 +
            (C6223 * C3091 + C10297 + C10297 + C152299 * C3099 +
             C6225 * C10285 + C10298 + C10298 + C152179 * C10291) *
                C6222) *
               C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152028) *
              C347 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C348 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C152286 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C1795 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152286) *
              C1796 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152286 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C1797 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2936 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2937 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C2938 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C152285 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C2937 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C2936 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C2938 +
           (C31752 * C3089 + C34314 + C34314 + C31747 * C3097 +
            C31754 * C10283 + C34315 + C34315 + C31748 * C10289 +
            C31756 * C27225 + C34316 + C34316 + C31749 * C27229 +
            C31758 * C34310 + C34317 + C34317 + C31750 * C34312) *
               C151907 * C152193 * C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                C6229 + C6229 + C152179 * C377) *
                   C6220 +
               (C6282 + C6283) * C6221 + C6292 * C6222) *
                  C152193 * C151983 * C151965 * C129 -
              (C6293 * C6222 + (C6285 + C6284) * C6221 +
               (C6283 + C6282) * C6220) *
                  C152193 * C151983 * C151965 * C130 +
              (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                  C152193 * C151983 * C151965 * C131 -
              ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 +
               C6293 * C6220) *
                  C152193 * C151983 * C151965 * C132 +
              (C6294 * C6220 + (C6291 + C6290) * C6221 +
               (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
                C6261 + C6261 + C152179 * C813) *
                   C6222) *
                  C152193 * C151983 * C151965 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
                 C6229 + C6229 + C152179 * C377) *
                    C6220 +
                (C6282 + C6283) * C6221 + C6292 * C6222) *
                   C152193 * C151983 * C152371 -
               (C6593 * C6222 + (C6583 + C6584) * C6221 +
                (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
                 C6526 + C6526 + C152299 * C377) *
                    C6220) *
                   C152193 * C151983 * C152357 +
               ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
                 C6528 + C6528 + C152179 * C1458) *
                    C6220 +
                (C6585 + C6586) * C6221 + C6594 * C6222) *
                   C152193 * C151983 * C152327) *
                  C347 +
              (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
                (C6589 + C6590) * C6222) *
                   C152193 * C151983 * C152357 -
               (C6293 * C6222 + (C6285 + C6284) * C6221 +
                (C6283 + C6282) * C6220) *
                   C152193 * C151983 * C152371 -
               ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
                (C6586 + C6585) * C6220) *
                   C152193 * C151983 * C152327) *
                  C348 +
              ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                   C152193 * C151983 * C152371 -
               ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
                 C6554 + C6554 + C152299 * C382) *
                    C6222 +
                (C6590 + C6589) * C6221 + C6593 * C6220) *
                   C152193 * C151983 * C152357 +
               (C6594 * C6220 + (C6592 + C6591) * C6221 +
                (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
                 C6556 + C6556 + C152179 * C1803) *
                    C6222) *
                   C152193 * C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152372 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
            (C6889 + C6890) * C6222) *
               C152193 * C152359 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152372 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152330) *
              C151965 * C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152372 -
           ((C6225 * C1159 + C6853 + C6853 + C152179 * C1171 + C6223 * C595 +
             C6854 + C6854 + C152299 * C619) *
                C6222 +
            (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152359 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1345 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1346 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1345 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C1345 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C1346 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C1433 -
          (C6593 * C6222 + (C6583 + C6584) * C6221 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C6220) *
              C152193 * C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C6220 +
           (C6585 + C6586) * C6221 + C6594 * C6222) *
              C152193 * C151983 * C1435 -
          ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 + C6223 * C1440 +
            C7990 + C7990 + C152299 * C1456) *
               C6222 +
           (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 + C6223 * C1441 +
            C7992 + C7992 + C152299 * C1457) *
               C6221 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C6220) *
              C152193 * C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C6220 +
           (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
            C7998 + C7998 + C152179 * C7986) *
               C6221 +
           (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 + C6225 * C7981 +
            C8000 + C8000 + C152179 * C7987) *
               C6222) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152372 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C1345 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152359 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152372 -
           ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 + C6223 * C1618 +
             C8229 + C8229 + C152299 * C1642) *
                C6222 +
            (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 + C6223 * C1619 +
             C8231 + C8231 + C152299 * C1643) *
                C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152330) *
              C1346 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152372 -
           ((C6225 * C2165 + C8234 + C8234 + C152179 * C2173 + C6223 * C1622 +
             C8235 + C8235 + C152299 * C1646) *
                C6222 +
            (C6225 * C2164 + C8236 + C8236 + C152179 * C2172 + C6223 * C1623 +
             C8237 + C8237 + C152299 * C1647) *
                C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2325 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C2326 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C2325 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152330) *
              C151965 * C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C2325 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C2326 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2325 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C152371 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C2326 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C2325 -
           ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 + C6223 * C1618 +
             C8229 + C8229 + C152299 * C1642) *
                C6222 +
            (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 + C6223 * C1619 +
             C8231 + C8231 + C152299 * C1643) *
                C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152330) *
              C152357 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C2325 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C2556 -
          (C6893 * C6222 + (C6883 + C6884) * C6221 +
           (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
            C6826 + C6826 + C152299 * C614) *
               C6220) *
              C152193 * C2557 +
          ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
            C6828 + C6828 + C152179 * C1644) *
               C6220 +
           (C6885 + C6886) * C6221 + C6894 * C6222) *
              C152193 * C2558 -
          ((C6225 * C3091 + C9550 + C9550 + C152179 * C3099 + C6223 * C2562 +
            C9551 + C9551 + C152299 * C2578) *
               C6222 +
           (C6225 * C3090 + C9552 + C9552 + C152179 * C3098 + C6223 * C2563 +
            C9553 + C9553 + C152299 * C2579) *
               C6221 +
           (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
            C9555 + C9555 + C152299 * C2580) *
               C6220) *
              C152193 * C2559 +
          ((C6223 * C2565 + C9556 + C9556 + C152299 * C2581 + C6225 * C9540 +
            C9557 + C9557 + C152179 * C9546) *
               C6220 +
           (C6223 * C2566 + C9558 + C9558 + C152299 * C2582 + C6225 * C9541 +
            C9559 + C9559 + C152179 * C9547) *
               C6221 +
           (C6223 * C2567 + C9560 + C9560 + C152299 * C2583 + C6225 * C9542 +
            C9561 + C9561 + C152179 * C9548) *
               C6222) *
              C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C347 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152359 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152372 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152372 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152359 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C1345 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152359 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152372 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C1346 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152372 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152359 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C152368 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C2326 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C2325 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C2325 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C2326 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C152371 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C2326 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C2325 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C152357 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C2325 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C2326 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C2556 -
          (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
           C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 + C32099 +
           C31748 * C1167 + C31752 * C590 + C32100 + C32100 + C31747 * C614) *
              C151907 * C152193 * C2557 +
          (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
           C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 + C32103 +
           C31749 * C1649 + C31758 * C8218 + C32104 + C32104 + C31750 * C8224) *
              C151907 * C152193 * C2558 -
          (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
           C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
           C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
           C33844 + C33844 + C31747 * C2580) *
              C151907 * C152193 * C2559 +
          (C31752 * C2565 + C33845 + C33845 + C31747 * C2581 + C31754 * C9540 +
           C33846 + C33846 + C31748 * C9546 + C31756 * C26493 + C33847 +
           C33847 + C31749 * C26497 + C31758 * C33837 + C33848 + C33848 +
           C31750 * C33839) *
              C151907 * C152193 * C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C1345 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C152286 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C1345 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C1346 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152286 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152070 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152286) *
              C151965 * C808 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152286 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152070) *
              C151965 * C809 +
          ((C7296 * C6220 + (C7308 + C7307) * C6221 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C6222) *
               C152193 * C152070 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2936 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2937 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C2938 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C151965 * C152271 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C2937 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C2936 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C2938 +
           ((C10089 + C10088) * C6220 + (C10087 + C10086) * C6221 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C6222) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C807 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152286) *
              C151965 * C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152286 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C809 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C1345 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C1346 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C152286 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C1345 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C1346 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2936 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2937 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C2938 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C151965 * C152271 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C2937 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C2936 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C2938 +
           (C31752 * C2563 + C34177 + C34177 + C31747 * C2579 + C31754 * C3090 +
            C34178 + C34178 + C31748 * C3098 + C31756 * C10284 + C34179 +
            C34179 + C31749 * C10290 + C31758 * C27226 + C34180 + C34180 +
            C31750 * C27230) *
               C151907 * C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152371 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
            (C6589 + C6590) * C6222) *
               C152193 * C151983 * C152357 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152371 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152371 -
           ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
             C6554 + C6554 + C152299 * C382) *
                C6222 +
            (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152357 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C151965 * C129 -
          (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
              C152193 * C151983 * C151965 * C130 +
          (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
              C151983 * C151965 * C131 -
          ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
              C152193 * C151983 * C151965 * C132 +
          (C6294 * C6220 + (C6291 + C6290) * C6221 +
           (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
            C6261 + C6261 + C152179 * C813) *
               C6222) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1345 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1346 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1345 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C1345 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C1346 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C1433 -
          (C6593 * C6222 + (C6583 + C6584) * C6221 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C6220) *
              C152193 * C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C6220 +
           (C6585 + C6586) * C6221 + C6594 * C6222) *
              C152193 * C151983 * C1435 -
          ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 + C6223 * C1440 +
            C7990 + C7990 + C152299 * C1456) *
               C6222 +
           (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 + C6223 * C1441 +
            C7992 + C7992 + C152299 * C1457) *
               C6221 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C6220) *
              C152193 * C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C6220 +
           (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
            C7998 + C7998 + C152179 * C7986) *
               C6221 +
           (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 + C6225 * C7981 +
            C8000 + C8000 + C152179 * C7987) *
               C6222) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2325 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C151965 * C152368 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C2326 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C2325 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152330) *
              C151965 * C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C2325 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C2326 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C2325 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C152371 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C2326 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C2325 -
           ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 + C6223 * C1618 +
             C8229 + C8229 + C152299 * C1642) *
                C6222 +
            (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 + C6223 * C1619 +
             C8231 + C8231 + C152299 * C1643) *
                C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152330) *
              C152357 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C2325 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C2326 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C152368 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C2326 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C2325 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C2325 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C2326 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C2325 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C2326 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C152371 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C2326 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C2325 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C152357 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C2325 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C2326 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152028) *
              C151942 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C151951 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C4241 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C152285 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152028) *
              C151942 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C151951 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C4241 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152066 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152073 +
            ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
              C6828 + C6828 + C152179 * C1644) *
                 C6220 +
             (C6885 + C6886) * C6221 + C6894 * C6222) *
                C152193 * C4913) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152073 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152066 -
            ((C9870 + C9871) * C6222 + (C9872 + C9873) * C6221 +
             (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
              C8233 + C8233 + C152299 * C1644) *
                 C6220) *
                C152193 * C4913) *
               C152028) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152073 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152066 -
            ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
             (C6886 + C6885) * C6220) *
                C152193 * C4913) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152066 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152073 +
            ((C9873 + C9872) * C6220 + (C9871 + C9870) * C6221 +
             (C6223 * C1617 + C9860 + C9860 + C152299 * C1641 + C6225 * C1628 +
              C9861 + C9861 + C152179 * C1652) *
                 C6222) *
                C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152066 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152073 +
            (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
             C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
             C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
             C31750 * C8224) *
                C151907 * C152193 * C4913) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152073 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152066 -
            (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
             C31756 * C8218 + C32984 + C32984 + C31749 * C8224 +
             C31754 * C1625 + C32985 + C32985 + C31748 * C1649 +
             C31752 * C1620 + C32986 + C32986 + C31747 * C1644) *
                C151907 * C152193 * C4913) *
               C152028) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152073 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152066 -
            (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 +
             C31756 * C1626 + C32110 + C32110 + C31749 * C1650 +
             C31754 * C1619 + C32111 + C32111 + C31748 * C1643 + C31752 * C592 +
             C32112 + C32112 + C31747 * C616) *
                C151907 * C152193 * C4913) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152066 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152073 +
            (C31752 * C1619 + C34043 + C34043 + C31747 * C1643 +
             C31754 * C1626 + C34044 + C34044 + C31748 * C1650 +
             C31756 * C8219 + C34045 + C34045 + C31749 * C8225 +
             C31758 * C25186 + C34046 + C34046 + C31750 * C25190) *
                C151907 * C152193 * C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152371 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C4241 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C152371 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152357 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C4241 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152070 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C4241) *
              C151965 * C152370 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C4241 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152070) *
              C151965 * C152355 +
          ((C7296 * C6220 + (C7308 + C7307) * C6221 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C6222) *
               C152193 * C152070 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152379 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152376 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152365 -
           ((C10086 + C10087) * C6222 + (C10088 + C10089) * C6221 +
            (C6225 * C3089 + C9554 + C9554 + C152179 * C3097 + C6223 * C2564 +
             C9555 + C9555 + C152299 * C2580) *
                C6220) *
               C152193 * C152343) *
              C151965 * C3375 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152376 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152379 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152365 +
           ((C10089 + C10088) * C6220 + (C10087 + C10086) * C6221 +
            (C6223 * C2561 + C10076 + C10076 + C152299 * C2577 + C6225 * C3092 +
             C10077 + C10077 + C152179 * C3100) *
                C6222) *
               C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C152377 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C4241) *
              C151965 * C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C4241 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C152355 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152371 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152357 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C4241 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152371 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152357 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152379 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152376 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152365 -
           (C31758 * C27225 + C33841 + C33841 + C31750 * C27229 +
            C31756 * C10283 + C33842 + C33842 + C31749 * C10289 +
            C31754 * C3089 + C33843 + C33843 + C31748 * C3097 + C31752 * C2564 +
            C33844 + C33844 + C31747 * C2580) *
               C151907 * C152193 * C152343) *
              C151965 * C3375 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152376 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152379 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152365 +
           (C31752 * C2563 + C34177 + C34177 + C31747 * C2579 + C31754 * C3090 +
            C34178 + C34178 + C31748 * C3098 + C31756 * C10284 + C34179 +
            C34179 + C31749 * C10290 + C31758 * C27226 + C34180 + C34180 +
            C31750 * C27230) *
               C151907 * C152193 * C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152066 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152073 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C4913) *
              C151965 * C151942 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152073 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152066 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C4913) *
              C151965 * C151951 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152066 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152073 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152066 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152073 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C4913) *
              C151965 * C151942 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152073 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152066 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C4913) *
              C151965 * C151951 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152066 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152073 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C4241 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C151965 * C152377 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152070 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C4241) *
              C151965 * C152370 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C4241 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152070) *
              C151965 * C152355 +
          ((C7296 * C6220 + (C7308 + C7307) * C6221 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C6222) *
               C152193 * C152070 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C4241 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152371 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C4241) *
               C152357 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C4241 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C152327) *
              C3375 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C4241) *
               C152371 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C4241 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152357 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C4241 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C152377 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C4241) *
              C151965 * C152370 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C4241 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C152355 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C4241 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152371 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C4241) *
               C152357 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C4241 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C3375 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C4241) *
               C152371 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C4241 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152357 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152285 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152028) *
              C807 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C152028 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152285) *
              C808 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152285 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152028) *
              C809 +
          ((C7089 * C6220 + (C7101 + C7100) * C6221 +
            (C6223 * C360 + C7094 + C7094 + C152299 * C384 + C6225 * C361 +
             C7095 + C7095 + C152179 * C385) *
                C6222) *
               C152193 * C151983 * C152028 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1795 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1796 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C1797 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C151983 * C152337) *
              C152271 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1796 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1795 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C1797 +
           ((C8461 + C8460) * C6220 + (C8459 + C8458) * C6221 +
            (C6223 * C1439 + C8448 + C8448 + C152299 * C1455 + C6225 * C1446 +
             C8449 + C8449 + C152179 * C1462) *
                C6222) *
               C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152028) *
              C807 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152285) *
              C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152285 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152028) *
              C809 +
          ((C31752 * C350 + C32251 + C32251 + C31747 * C374 + C31754 * C357 +
            C32252 + C32252 + C31748 * C381 + C31756 * C1439 + C32253 + C32253 +
            C31749 * C1455 + C31758 * C1446 + C32254 + C32254 +
            C31750 * C1462) *
               C151907 * C152193 * C151983 * C152028 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1796 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C1797 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C151983 * C152337) *
              C152271 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1796 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1795 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C1797 +
           (C31752 * C1441 + C33125 + C33125 + C31747 * C1457 + C31754 * C1444 +
            C33126 + C33126 + C31748 * C1460 + C31756 * C7980 + C33127 +
            C33127 + C31749 * C7986 + C31758 * C24950 + C33128 + C33128 +
            C31750 * C24954) *
               C151907 * C152193 * C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C152285 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C152028) *
              C347 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C152285 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C152028) *
              C348 +
          (((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) *
                C152193 * C152286 -
            ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 +
             C6893 * C6220) *
                C152193 * C152070) *
               C152285 +
           ((C7639 * C6220 + (C7638 + C7637) * C6221 +
             (C6223 * C1159 + C7619 + C7619 + C152299 * C1171 + C6225 * C2014 +
              C7620 + C7620 + C152179 * C2016) *
                 C6222) *
                C152193 * C152070 -
            ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 +
             C6593 * C6220) *
                C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152286 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C1795 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152070 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152286) *
              C1796 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152286 -
           ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152070) *
              C1797 +
          (((C6223 * C2163 + C8977 + C8977 + C152299 * C2171 + C6225 * C8967 +
             C8978 + C8978 + C152179 * C8973) *
                C6220 +
            (C6223 * C2164 + C8979 + C8979 + C152299 * C2172 + C6225 * C8968 +
             C8980 + C8980 + C152179 * C8974) *
                C6221 +
            (C6223 * C2165 + C8981 + C8981 + C152299 * C2173 + C6225 * C8969 +
             C8982 + C8982 + C152179 * C8975) *
                C6222) *
               C152193 * C152070 -
           ((C8458 + C8459) * C6222 + (C8460 + C8461) * C6221 +
            (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
             C7994 + C7994 + C152299 * C1458) *
                C6220) *
               C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C152028) *
              C347 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C152285 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C152028) *
              C348 +
          (((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
             C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
             C31749 * C380 + C31758 * C1440 + C31772 + C31772 +
             C31750 * C1456) *
                C151907 * C152193 * C152286 -
            (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 +
             C31756 * C1622 + C32114 + C32114 + C31749 * C1646 +
             C31754 * C1157 + C32115 + C32115 + C31748 * C1169 + C31752 * C588 +
             C32116 + C32116 + C31747 * C612) *
                C151907 * C152193 * C152070) *
               C152285 +
           ((C31752 * C1157 + C32591 + C32591 + C31747 * C1169 +
             C31754 * C1622 + C32592 + C32592 + C31748 * C1646 +
             C31756 * C2165 + C32593 + C32593 + C31749 * C2173 +
             C31758 * C8969 + C32594 + C32594 + C31750 * C8975) *
                C151907 * C152193 * C152070 -
            (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 +
             C31756 * C1440 + C31944 + C31944 + C31749 * C1456 + C31754 * C356 +
             C31945 + C31945 + C31748 * C380 + C31752 * C351 + C31946 + C31946 +
             C31747 * C375) *
                C151907 * C152193 * C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C1795 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152070 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152286) *
              C1796 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152286 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152070) *
              C1797 +
          ((C31752 * C2163 + C33460 + C33460 + C31747 * C2171 + C31754 * C8967 +
            C33461 + C33461 + C31748 * C8973 + C31756 * C25923 + C33462 +
            C33462 + C31749 * C25927 + C31758 * C33456 + C33463 + C33463 +
            C31750 * C33458) *
               C151907 * C152193 * C152070 -
           (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
            C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
            C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 +
            C32829 + C31747 * C1458) *
               C151907 * C152193 * C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152371 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
            (C6589 + C6590) * C6222) *
               C152193 * C151983 * C152357 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152371 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152371 -
           ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
             C6554 + C6554 + C152299 * C382) *
                C6222 +
            (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152357 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C151965 * C129 -
          (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
              C152193 * C151983 * C151965 * C130 +
          (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
              C151983 * C151965 * C131 -
          ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
              C152193 * C151983 * C151965 * C132 +
          (C6294 * C6220 + (C6291 + C6290) * C6221 +
           (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
            C6261 + C6261 + C152179 * C813) *
               C6222) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152372 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C151965 * C347 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
            (C6889 + C6890) * C6222) *
               C152193 * C152359 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152372 -
           ((C6891 + C6892) * C6222 + (C6888 + C6887) * C6221 +
            (C6886 + C6885) * C6220) *
               C152193 * C152330) *
              C151965 * C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152372 -
           ((C6225 * C1159 + C6853 + C6853 + C152179 * C1171 + C6223 * C595 +
             C6854 + C6854 + C152299 * C619) *
                C6222 +
            (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152359 +
           (C6894 * C6220 + (C6892 + C6891) * C6221 +
            (C6223 * C596 + C6855 + C6855 + C152299 * C620 + C6225 * C2787 +
             C6856 + C6856 + C152179 * C2789) *
                C6222) *
               C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1345 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1346 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1345 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C1345 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C1346 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C1433 -
          (C6593 * C6222 + (C6583 + C6584) * C6221 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C6220) *
              C152193 * C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C6220 +
           (C6585 + C6586) * C6221 + C6594 * C6222) *
              C152193 * C151983 * C1435 -
          ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 + C6223 * C1440 +
            C7990 + C7990 + C152299 * C1456) *
               C6222 +
           (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 + C6223 * C1441 +
            C7992 + C7992 + C152299 * C1457) *
               C6221 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C6220) *
              C152193 * C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C6220 +
           (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
            C7998 + C7998 + C152179 * C7986) *
               C6221 +
           (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 + C6225 * C7981 +
            C8000 + C8000 + C152179 * C7987) *
               C6222) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152372 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C591 + C6827 + C6827 + C152299 * C615 + C6225 * C1620 +
             C6828 + C6828 + C152179 * C1644) *
                C6220 +
            (C6885 + C6886) * C6221 + C6894 * C6222) *
               C152193 * C152330) *
              C1345 +
          (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
             C7600 + C7600 + C152179 * C1648) *
                C6220 +
            (C7633 + C7634) * C6221 + C7639 * C6222) *
               C152193 * C152359 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C152372 -
           ((C6225 * C1627 + C8228 + C8228 + C152179 * C1651 + C6223 * C1618 +
             C8229 + C8229 + C152299 * C1642) *
                C6222 +
            (C6225 * C1626 + C8230 + C8230 + C152179 * C1650 + C6223 * C1619 +
             C8231 + C8231 + C152299 * C1643) *
                C6221 +
            (C6225 * C1625 + C8232 + C8232 + C152179 * C1649 + C6223 * C1620 +
             C8233 + C8233 + C152299 * C1644) *
                C6220) *
               C152193 * C152330) *
              C1346 +
          (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C152372 -
           ((C6225 * C2165 + C8234 + C8234 + C152179 * C2173 + C6223 * C1622 +
             C8235 + C8235 + C152299 * C1646) *
                C6222 +
            (C6225 * C2164 + C8236 + C8236 + C152179 * C2172 + C6223 * C1623 +
             C8237 + C8237 + C152299 * C1647) *
                C6221 +
            (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
             C8239 + C8239 + C152299 * C1648) *
                C6220) *
               C152193 * C152359 +
           ((C6223 * C1625 + C8240 + C8240 + C152299 * C1649 + C6225 * C8218 +
             C8241 + C8241 + C152179 * C8224) *
                C6220 +
            (C6223 * C1626 + C8242 + C8242 + C152299 * C1650 + C6225 * C8219 +
             C8243 + C8243 + C152179 * C8225) *
                C6221 +
            (C6223 * C1627 + C8244 + C8244 + C152299 * C1651 + C6225 * C8220 +
             C8245 + C8245 + C152179 * C8226) *
                C6222) *
               C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C151965 * C347 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152359 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152372 -
           (C31758 * C8219 + C32109 + C32109 + C31750 * C8225 + C31756 * C1626 +
            C32110 + C32110 + C31749 * C1650 + C31754 * C1619 + C32111 +
            C32111 + C31748 * C1643 + C31752 * C592 + C32112 + C32112 +
            C31747 * C616) *
               C151907 * C152193 * C152330) *
              C151965 * C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152372 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152359 +
           (C31752 * C593 + C32117 + C32117 + C31747 * C617 + C31754 * C1618 +
            C32118 + C32118 + C31748 * C1642 + C31756 * C1627 + C32119 +
            C32119 + C31749 * C1651 + C31758 * C8220 + C32120 + C32120 +
            C31750 * C8226) *
               C151907 * C152193 * C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152372 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152359 +
           (C31752 * C591 + C32101 + C32101 + C31747 * C615 + C31754 * C1620 +
            C32102 + C32102 + C31748 * C1644 + C31756 * C1625 + C32103 +
            C32103 + C31749 * C1649 + C31758 * C8218 + C32104 + C32104 +
            C31750 * C8224) *
               C151907 * C152193 * C152330) *
              C1345 +
          ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 + C31754 * C1624 +
            C32584 + C32584 + C31748 * C1648 + C31756 * C2163 + C32585 +
            C32585 + C31749 * C2171 + C31758 * C8967 + C32586 + C32586 +
            C31750 * C8973) *
               C151907 * C152193 * C152359 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C152372 -
           (C31758 * C25185 + C32983 + C32983 + C31750 * C25189 +
            C31756 * C8218 + C32984 + C32984 + C31749 * C8224 + C31754 * C1625 +
            C32985 + C32985 + C31748 * C1649 + C31752 * C1620 + C32986 +
            C32986 + C31747 * C1644) *
               C151907 * C152193 * C152330) *
              C1346 +
          ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C152372 -
           (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
            C31756 * C8967 + C32988 + C32988 + C31749 * C8973 + C31754 * C2163 +
            C32989 + C32989 + C31748 * C2171 + C31752 * C1624 + C32990 +
            C32990 + C31747 * C1648) *
               C151907 * C152193 * C152359 +
           (C31752 * C1625 + C32991 + C32991 + C31747 * C1649 + C31754 * C8218 +
            C32992 + C32992 + C31748 * C8224 + C31756 * C25185 + C32993 +
            C32993 + C31749 * C25189 + C31758 * C32979 + C32994 + C32994 +
            C31750 * C32981) *
               C151907 * C152193 * C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C152286 -
           (C6893 * C6222 + (C6883 + C6884) * C6221 +
            (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
             C6826 + C6826 + C152299 * C614) *
                C6220) *
               C152193 * C152070) *
              C151965 * C807 +
          (((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 + C7296 * C6222) *
               C152193 * C152070 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C152286) *
              C151965 * C808 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C152286 -
           ((C7307 + C7308) * C6222 + (C6890 + C6889) * C6221 + C6893 * C6220) *
               C152193 * C152070) *
              C151965 * C809 +
          ((C7296 * C6220 + (C7308 + C7307) * C6221 +
            (C6223 * C597 + C7301 + C7301 + C152299 * C621 + C6225 * C1160 +
             C7302 + C7302 + C152179 * C1172) *
                C6222) *
               C152193 * C152070 -
           ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
               C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
              C6229 + C6229 + C152179 * C377) *
                 C6220 +
             (C6282 + C6283) * C6221 + C6292 * C6222) *
                C152193 * C152286 -
            (C6893 * C6222 + (C6883 + C6884) * C6221 +
             (C6225 * C1155 + C6825 + C6825 + C152179 * C1167 + C6223 * C590 +
              C6826 + C6826 + C152299 * C614) *
                 C6220) *
                C152193 * C152070) *
               C1345 +
           (((C6223 * C1155 + C7599 + C7599 + C152299 * C1167 + C6225 * C1624 +
              C7600 + C7600 + C152179 * C1648) *
                 C6220 +
             (C7633 + C7634) * C6221 + C7639 * C6222) *
                C152193 * C152070 -
            (C6593 * C6222 + (C6583 + C6584) * C6221 +
             (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
              C6526 + C6526 + C152299 * C377) *
                 C6220) *
                C152193 * C152286) *
               C1346 +
           (((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
              C6528 + C6528 + C152179 * C1458) *
                 C6220 +
             (C6585 + C6586) * C6221 + C6594 * C6222) *
                C152193 * C152286 -
            ((C8770 + C8771) * C6222 + (C8772 + C8773) * C6221 +
             (C6225 * C2163 + C8238 + C8238 + C152179 * C2171 + C6223 * C1624 +
              C8239 + C8239 + C152299 * C1648) *
                 C6220) *
                C152193 * C152070) *
               C152327) *
              C152271 +
          ((((C6884 + C6883) * C6220 + (C6882 + C6881) * C6221 +
             C7296 * C6222) *
                C152193 * C152070 -
            (C6293 * C6222 + (C6285 + C6284) * C6221 +
             (C6283 + C6282) * C6220) *
                C152193 * C152286) *
               C1345 +
           (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
             C7089 * C6222) *
                C152193 * C152286 -
            ((C7637 + C7638) * C6222 + (C7636 + C7635) * C6221 +
             (C7634 + C7633) * C6220) *
                C152193 * C152070) *
               C1346 +
           (((C8773 + C8772) * C6220 + (C8771 + C8770) * C6221 +
             (C6223 * C1621 + C8760 + C8760 + C152299 * C1645 + C6225 * C2166 +
              C8761 + C8761 + C152179 * C2174) *
                 C6222) *
                C152193 * C152070 -
            ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
             (C6586 + C6585) * C6220) *
                C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C152286 -
           (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 + C31756 * C1624 +
            C32098 + C32098 + C31749 * C1648 + C31754 * C1155 + C32099 +
            C32099 + C31748 * C1167 + C31752 * C590 + C32100 + C32100 +
            C31747 * C614) *
               C151907 * C152193 * C152070) *
              C151965 * C807 +
          ((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
            C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
            C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
            C31750 * C2172) *
               C151907 * C152193 * C152070 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C152286) *
              C151965 * C808 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C152286 -
           (C31758 * C2165 + C32113 + C32113 + C31750 * C2173 + C31756 * C1622 +
            C32114 + C32114 + C31749 * C1646 + C31754 * C1157 + C32115 +
            C32115 + C31748 * C1169 + C31752 * C588 + C32116 + C32116 +
            C31747 * C612) *
               C151907 * C152193 * C152070) *
              C151965 * C809 +
          ((C31752 * C587 + C32385 + C32385 + C31747 * C611 + C31754 * C1158 +
            C32386 + C32386 + C31748 * C1170 + C31756 * C1621 + C32387 +
            C32387 + C31749 * C1645 + C31758 * C2166 + C32388 + C32388 +
            C31750 * C2174) *
               C151907 * C152193 * C152070 -
           (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
            C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
            C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
               C151907 * C152193 * C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
             C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
             C31749 * C378 + C31758 * C1442 + C31764 + C31764 +
             C31750 * C1458) *
                C151907 * C152193 * C152286 -
            (C31758 * C2163 + C32097 + C32097 + C31750 * C2171 +
             C31756 * C1624 + C32098 + C32098 + C31749 * C1648 +
             C31754 * C1155 + C32099 + C32099 + C31748 * C1167 + C31752 * C590 +
             C32100 + C32100 + C31747 * C614) *
                C151907 * C152193 * C152070) *
               C1345 +
           ((C31752 * C1155 + C32583 + C32583 + C31747 * C1167 +
             C31754 * C1624 + C32584 + C32584 + C31748 * C1648 +
             C31756 * C2163 + C32585 + C32585 + C31749 * C2171 +
             C31758 * C8967 + C32586 + C32586 + C31750 * C8973) *
                C151907 * C152193 * C152070 -
            (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 +
             C31756 * C1442 + C31928 + C31928 + C31749 * C1458 + C31754 * C354 +
             C31929 + C31929 + C31748 * C378 + C31752 * C353 + C31930 + C31930 +
             C31747 * C377) *
                C151907 * C152193 * C152286) *
               C1346 +
           ((C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
             C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
             C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
             C31750 * C7985) *
                C151907 * C152193 * C152286 -
            (C31758 * C25923 + C32987 + C32987 + C31750 * C25927 +
             C31756 * C8967 + C32988 + C32988 + C31749 * C8973 +
             C31754 * C2163 + C32989 + C32989 + C31748 * C2171 +
             C31752 * C1624 + C32990 + C32990 + C31747 * C1648) *
                C151907 * C152193 * C152070) *
               C152327) *
              C152271 +
          (((C31752 * C589 + C32105 + C32105 + C31747 * C613 + C31754 * C1156 +
             C32106 + C32106 + C31748 * C1168 + C31756 * C1623 + C32107 +
             C32107 + C31749 * C1647 + C31758 * C2164 + C32108 + C32108 +
             C31750 * C2172) *
                C151907 * C152193 * C152070 -
            (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
             C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
             C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
                C151907 * C152193 * C152286) *
               C1345 +
           ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
             C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 +
             C31937 + C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
             C31750 * C1460) *
                C151907 * C152193 * C152286 -
            (C31758 * C8968 + C32587 + C32587 + C31750 * C8974 +
             C31756 * C2164 + C32588 + C32588 + C31749 * C2172 +
             C31754 * C1623 + C32589 + C32589 + C31748 * C1647 +
             C31752 * C1156 + C32590 + C32590 + C31747 * C1168) *
                C151907 * C152193 * C152070) *
               C1346 +
           ((C31752 * C1623 + C33323 + C33323 + C31747 * C1647 +
             C31754 * C2164 + C33324 + C33324 + C31748 * C2172 +
             C31756 * C8968 + C33325 + C33325 + C31749 * C8974 +
             C31758 * C25924 + C33326 + C33326 + C31750 * C25928) *
                C151907 * C152193 * C152070 -
            (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 +
             C31756 * C1444 + C31940 + C31940 + C31749 * C1460 +
             C31754 * C1441 + C31941 + C31941 + C31748 * C1457 + C31752 * C355 +
             C31942 + C31942 + C31747 * C379) *
                C151907 * C152193 * C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C151965 * C129 -
          (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
              C152193 * C151983 * C151965 * C130 +
          (C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
              C151983 * C151965 * C131 -
          ((C6290 + C6291) * C6222 + (C6289 + C6288) * C6221 + C6293 * C6220) *
              C152193 * C151983 * C151965 * C132 +
          (C6294 * C6220 + (C6291 + C6290) * C6221 +
           (C6223 * C142 + C6260 + C6260 + C152299 * C158 + C6225 * C811 +
            C6261 + C6261 + C152179 * C813) *
               C6222) *
              C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C152371 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C152357 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C347 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 +
            (C6589 + C6590) * C6222) *
               C152193 * C151983 * C152357 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C152371 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C348 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C152371 -
           ((C6225 * C359 + C6553 + C6553 + C152179 * C383 + C6223 * C358 +
             C6554 + C6554 + C152299 * C382) *
                C6222 +
            (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C152357 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
             C6229 + C6229 + C152179 * C377) *
                C6220 +
            (C6282 + C6283) * C6221 + C6292 * C6222) *
               C152193 * C151983 * C1345 -
           (C6593 * C6222 + (C6583 + C6584) * C6221 +
            (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
             C6526 + C6526 + C152299 * C377) *
                C6220) *
               C152193 * C151983 * C1346 +
           ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
             C6528 + C6528 + C152179 * C1458) *
                C6220 +
            (C6585 + C6586) * C6221 + C6594 * C6222) *
               C152193 * C151983 * C152327) *
              C152368 +
          (((C6584 + C6583) * C6220 + (C6582 + C6581) * C6221 + C7089 * C6222) *
               C152193 * C151983 * C1346 -
           (C6293 * C6222 + (C6285 + C6284) * C6221 + (C6283 + C6282) * C6220) *
               C152193 * C151983 * C1345 -
           ((C6591 + C6592) * C6222 + (C6588 + C6587) * C6221 +
            (C6586 + C6585) * C6220) *
               C152193 * C151983 * C152327) *
              C152353 +
          ((C6292 * C6220 + (C6287 + C6286) * C6221 + C6294 * C6222) * C152193 *
               C151983 * C1345 -
           ((C7100 + C7101) * C6222 + (C6590 + C6589) * C6221 + C6593 * C6220) *
               C152193 * C151983 * C1346 +
           (C6594 * C6220 + (C6592 + C6591) * C6221 +
            (C6223 * C359 + C6555 + C6555 + C152299 * C383 + C6225 * C1801 +
             C6556 + C6556 + C152179 * C1803) *
                C6222) *
               C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6223 * C136 + C6228 + C6228 + C152299 * C152 + C6225 * C353 +
            C6229 + C6229 + C152179 * C377) *
               C6220 +
           (C6282 + C6283) * C6221 + C6292 * C6222) *
              C152193 * C151983 * C1433 -
          (C6593 * C6222 + (C6583 + C6584) * C6221 +
           (C6225 * C354 + C6525 + C6525 + C152179 * C378 + C6223 * C353 +
            C6526 + C6526 + C152299 * C377) *
               C6220) *
              C152193 * C151983 * C1434 +
          ((C6223 * C354 + C6527 + C6527 + C152299 * C378 + C6225 * C1442 +
            C6528 + C6528 + C152179 * C1458) *
               C6220 +
           (C6585 + C6586) * C6221 + C6594 * C6222) *
              C152193 * C151983 * C1435 -
          ((C6225 * C1445 + C7989 + C7989 + C152179 * C1461 + C6223 * C1440 +
            C7990 + C7990 + C152299 * C1456) *
               C6222 +
           (C6225 * C1444 + C7991 + C7991 + C152179 * C1460 + C6223 * C1441 +
            C7992 + C7992 + C152299 * C1457) *
               C6221 +
           (C6225 * C1443 + C7993 + C7993 + C152179 * C1459 + C6223 * C1442 +
            C7994 + C7994 + C152299 * C1458) *
               C6220) *
              C152193 * C151983 * C1436 +
          ((C6223 * C1443 + C7995 + C7995 + C152299 * C1459 + C6225 * C7979 +
            C7996 + C7996 + C152179 * C7985) *
               C6220 +
           (C6223 * C1444 + C7997 + C7997 + C152299 * C1460 + C6225 * C7980 +
            C7998 + C7998 + C152179 * C7986) *
               C6221 +
           (C6223 * C1445 + C7999 + C7999 + C152299 * C1461 + C6225 * C7981 +
            C8000 + C8000 + C152179 * C7987) *
               C6222) *
              C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C151965 * C129 -
          (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
           C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
           C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
              C151907 * C152193 * C151983 * C151965 * C130 +
          (C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
           C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
           C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
              C151907 * C152193 * C151983 * C151965 * C131 -
          (C31758 * C1439 + C31773 + C31773 + C31750 * C1455 + C31756 * C357 +
           C31774 + C31774 + C31749 * C381 + C31754 * C350 + C31775 + C31775 +
           C31748 * C374 + C31752 * C139 + C31776 + C31776 + C31747 * C155) *
              C151907 * C152193 * C151983 * C151965 * C132 +
          (C31752 * C140 + C31777 + C31777 + C31747 * C156 + C31754 * C358 +
           C31778 + C31778 + C31748 * C382 + C31756 * C359 + C31779 + C31779 +
           C31749 * C383 + C31758 * C1801 + C31780 + C31780 + C31750 * C1803) *
              C151907 * C152193 * C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C347 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C152357 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C348 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C152371 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C152357 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
            C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
            C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
            C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
            C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
            C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 +
            C31933 + C31749 * C1459 + C31758 * C7979 + C31934 + C31934 +
            C31750 * C7985) *
               C151907 * C152193 * C151983 * C152327) *
              C152368 +
          ((C31752 * C352 + C31935 + C31935 + C31747 * C376 + C31754 * C355 +
            C31936 + C31936 + C31748 * C379 + C31756 * C1441 + C31937 + C31937 +
            C31749 * C1457 + C31758 * C1444 + C31938 + C31938 +
            C31750 * C1460) *
               C151907 * C152193 * C151983 * C1346 -
           (C31758 * C1441 + C31765 + C31765 + C31750 * C1457 + C31756 * C355 +
            C31766 + C31766 + C31749 * C379 + C31754 * C352 + C31767 + C31767 +
            C31748 * C376 + C31752 * C137 + C31768 + C31768 + C31747 * C153) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C7980 + C31939 + C31939 + C31750 * C7986 + C31756 * C1444 +
            C31940 + C31940 + C31749 * C1460 + C31754 * C1441 + C31941 +
            C31941 + C31748 * C1457 + C31752 * C355 + C31942 + C31942 +
            C31747 * C379) *
               C151907 * C152193 * C151983 * C152327) *
              C152353 +
          ((C31752 * C138 + C31769 + C31769 + C31747 * C154 + C31754 * C351 +
            C31770 + C31770 + C31748 * C375 + C31756 * C356 + C31771 + C31771 +
            C31749 * C380 + C31758 * C1440 + C31772 + C31772 + C31750 * C1456) *
               C151907 * C152193 * C151983 * C1345 -
           (C31758 * C1445 + C31943 + C31943 + C31750 * C1461 + C31756 * C1440 +
            C31944 + C31944 + C31749 * C1456 + C31754 * C356 + C31945 + C31945 +
            C31748 * C380 + C31752 * C351 + C31946 + C31946 + C31747 * C375) *
               C151907 * C152193 * C151983 * C1346 +
           (C31752 * C356 + C31947 + C31947 + C31747 * C380 + C31754 * C1440 +
            C31948 + C31948 + C31748 * C1456 + C31756 * C1445 + C31949 +
            C31949 + C31749 * C1461 + C31758 * C7981 + C31950 + C31950 +
            C31750 * C7987) *
               C151907 * C152193 * C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C31752 * C136 + C31761 + C31761 + C31747 * C152 + C31754 * C353 +
           C31762 + C31762 + C31748 * C377 + C31756 * C354 + C31763 + C31763 +
           C31749 * C378 + C31758 * C1442 + C31764 + C31764 + C31750 * C1458) *
              C151907 * C152193 * C151983 * C1433 -
          (C31758 * C1443 + C31927 + C31927 + C31750 * C1459 + C31756 * C1442 +
           C31928 + C31928 + C31749 * C1458 + C31754 * C354 + C31929 + C31929 +
           C31748 * C378 + C31752 * C353 + C31930 + C31930 + C31747 * C377) *
              C151907 * C152193 * C151983 * C1434 +
          (C31752 * C354 + C31931 + C31931 + C31747 * C378 + C31754 * C1442 +
           C31932 + C31932 + C31748 * C1458 + C31756 * C1443 + C31933 + C31933 +
           C31749 * C1459 + C31758 * C7979 + C31934 + C31934 + C31750 * C7985) *
              C151907 * C152193 * C151983 * C1435 -
          (C31758 * C24949 + C32826 + C32826 + C31750 * C24953 +
           C31756 * C7979 + C32827 + C32827 + C31749 * C7985 + C31754 * C1443 +
           C32828 + C32828 + C31748 * C1459 + C31752 * C1442 + C32829 + C32829 +
           C31747 * C1458) *
              C151907 * C152193 * C151983 * C1436 +
          (C31752 * C1443 + C32830 + C32830 + C31747 * C1459 + C31754 * C7979 +
           C32831 + C32831 + C31748 * C7985 + C31756 * C24949 + C32832 +
           C32832 + C31749 * C24953 + C31758 * C32822 + C32833 + C32833 +
           C31750 * C32824) *
              C151907 * C152193 * C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152024 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152031 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C3719) *
              C151942 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152031 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152024 -
           ((C17104 + C17103 + C17102) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C3719) *
              C151951 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C152024 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152031 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152024 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152031 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C3719) *
              C151942 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152031 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152024 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C3719) *
              C151951 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152024 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152031 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C3719) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152024 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C152286 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C3719) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C152024 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152031 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152024 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C152286 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C3719) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C152024 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C152286) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152378 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C152362 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152374 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152378 -
           ((C17104 + C17103 + C17102) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152362 +
           ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
            (C16811 * C6220 + C16810 * C6221 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C3235 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152028 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C3235 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
            (C1198 * C6220 + C1199 * C6221 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                C152205) *
               C151983 * C152028 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152372 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152359 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C152330) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152359 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152372 -
            ((C18600 + C18601 + C18610) * C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C152330) *
               C152028) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152359 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152372 -
            ((C18403 + C18404 + C18405) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C152330) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152372 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152359 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C3235 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C152377 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C3235) *
              C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C3235 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152378 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152374 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C152362 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C3375 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152374 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152378 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152362 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152372 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152359 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C152330) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152359 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152372 -
            ((C41158 + C41159 + C41160) * C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C152330) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152359 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152372 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C152330) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152372 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152359 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C152028) *
              C151942 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C152286 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C3235 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C152286 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C152286) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C3235 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152028) *
              C152377 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152028 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C3235) *
              C152370 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C3235 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
            (C1198 * C6220 + C1199 * C6221 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                C152205) *
               C151983 * C152028 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152378 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152374 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C152362 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C151983 * C152337) *
              C3375 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C152374 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152378 -
           ((C17104 + C17103 + C17102) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152362 +
           ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
            (C16811 * C6220 + C16810 * C6221 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C3235 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C152377 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C3235) *
              C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C3235 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C152355 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C3235) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152378 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152374 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C152362 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C3375 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152374 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152378 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152362 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152024 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152031 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C4241 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C3719) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C152024 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152031 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152024 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152031 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C4241 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C3719) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152024 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152031 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C4241) *
               C3719) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152066 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152073 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C4913) *
              C152024 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152073 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152066 -
           ((C18600 + C18601 + C18610) * C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C4913) *
              C152031 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152066 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152073 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152066 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152073 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C4913) *
              C152024 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152073 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152066 -
           ((C41158 + C41159 + C41160) * C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C4913) *
              C152031 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152066 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152073 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C4913) *
              C3719) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C4241 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C152378 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152070 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C4241 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152070) *
              C152362 +
          (((C17309 + C17301 + C17302) * C152301 +
            ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
             (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                C152205) *
               C152070 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C4241 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C3235 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152379 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152376 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C152365 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C3235 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152376 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152379 -
           ((C18600 + C18601 + C18610) * C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152365 +
           ((C18610 + C18601 + C18600) * C152301 +
            ((C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C6220 +
             (C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C6221 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C6222) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C4241 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C152378 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C4241 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C152362 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152379 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152376 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C152365 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C3235 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152376 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152379 -
           ((C41158 + C41159 + C41160) * C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152365 +
           ((C41160 + C41159 + C41158) * C151907 * C152301 +
            (C23165 * C9540 + C41149 + C41149 + C23160 * C9546 +
             C23167 * C26493 + C41150 + C41150 + C23161 * C26497 +
             C23169 * C33837 + C41151 + C41151 + C23162 * C33839) *
                C151907 * C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152066 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152073 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C4913) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152073 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152066 -
            ((C18600 + C18601 + C18610) * C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C4913) *
               C152028) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152073 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152066 -
            ((C18403 + C18404 + C18405) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C4913) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152066 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152073 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152066 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152073 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C4913) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152073 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152066 -
            ((C41158 + C41159 + C41160) * C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C4913) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152073 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152066 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C4913) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152066 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152073 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C3235 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C3235 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C4241 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C3235 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C4241 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C152378 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152070 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C4241) *
              C152374 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C4241 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152070) *
              C152362 +
          (((C17309 + C17301 + C17302) * C152301 +
            ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
             (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                C152205) *
               C152070 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152028) *
              C152368 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C3235 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C152353 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C4241 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C3235 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C4241) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C152378 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C4241) *
              C152374 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C4241 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C152362 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C4241) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1795 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C1797 -
           ((C16810 * C6222 + C16811 * C6221 +
             (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
                C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1796 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1795 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C1797 +
           ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
            (C16811 * C6220 + C16810 * C6221 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152285 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152028) *
              C807 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152028 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152285) *
              C808 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C152285 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152028) *
              C809 +
          (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
            (C1198 * C6220 + C1199 * C6221 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                C152205) *
               C151983 * C152028 -
           ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C2325 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C2326 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C152330) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C2326 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C2325 -
            ((C18207 * C6222 + C18208 * C6221 +
              (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                 C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C152330) *
               C152028) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C2326 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C2325 -
            ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C152330) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C2325 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C2326 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152285 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C807 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152285) *
              C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152285 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C809 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1795 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1796 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C1797 -
           ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23165 * C2163 + C25930 + C25930 + C23160 * C2171) *
                C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C152271 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1796 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1795 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C1797 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C2325 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C2326 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C152330) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C2326 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C2325 -
            ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
              C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
              C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                 C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C152330) *
               C152028) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C2326 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C2325 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C152330) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C2325 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C2326 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C152330) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152286 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C1795 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152070 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152286 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152070) *
              C1797 +
          (((C17309 + C17301 + C17302) * C152301 +
            ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
             (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                C152205) *
               C152070 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             ((C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C6220 +
              C2806 * C6221 + C2805 * C6222) *
                 C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C152286 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C152285 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2936 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2937 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C2938 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C152285 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C2937 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C2936 -
           ((C18600 + C18601 + C18610) * C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C2938 +
           ((C18610 + C18601 + C18600) * C152301 +
            ((C134 * C9540 + C18604 + C18604 + C152163 * C9546) * C6220 +
             (C134 * C9541 + C18605 + C18605 + C152163 * C9547) * C6221 +
             (C134 * C9542 + C18606 + C18606 + C152163 * C9548) * C6222) *
                C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C23165 * C1620 + C25197 + C25197 + C23160 * C1644 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23169 * C8218 + C25195 + C25195 + C23162 * C8224) *
                 C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C152286 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C1795 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152286 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C1797 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2936 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2937 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C2938 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C152285 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C2937 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C2936 -
           ((C41158 + C41159 + C41160) * C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C2938 +
           ((C41160 + C41159 + C41158) * C151907 * C152301 +
            (C23165 * C9540 + C41149 + C41149 + C23160 * C9546 +
             C23167 * C26493 + C41150 + C41150 + C23161 * C26497 +
             C23169 * C33837 + C41151 + C41151 + C23162 * C33839) *
                C151907 * C152205) *
               C152343) *
              C152028) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                C193 * C6221 + C194 * C6222) *
                   C152301 +
               ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
                C670 * C6221 + C669 * C6222) *
                   C152205) *
                  C151983 * C151965 * C129 -
              ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
               (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                  C151983 * C151965 * C130 +
              ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
               (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
                  C151983 * C151965 * C131 -
              ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
               (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
                  C151983 * C151965 * C132 +
              ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
               (C674 * C6220 + C961 * C6221 +
                (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
                   C152205) *
                  C151983 * C151965 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
                 C193 * C6221 + C194 * C6222) *
                    C152301 +
                ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
                 C670 * C6221 + C669 * C6222) *
                    C152205) *
                   C151983 * C152371 -
               ((C1197 * C6222 + C1196 * C6221 +
                 (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                    C152205 +
                (C432 * C6222 + C433 * C6221 +
                 (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                    C152301) *
                   C151983 * C152357 +
               (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
                 C434 * C6221 + C435 * C6222) *
                    C152301 +
                ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
                 C2033 * C6221 + C2032 * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C347 +
              (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
                (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
                   C151983 * C152357 -
               ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
                (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                   C151983 * C152371 -
               ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
                (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                   C151983 * C152327) *
                  C348 +
              (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
                (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
                   C151983 * C152371 -
               ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
                (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                   C151983 * C152357 +
               ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
                (C2032 * C6220 + C2031 * C6221 +
                 (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                    C152205) *
                   C151983 * C152327) *
                  C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152372 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152359 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C151965 * C347 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152359 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152372 -
           ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152330) *
              C151965 * C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152372 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152359 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1345 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1346 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1345 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C1345 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C1346 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C151983 * C1433 -
          ((C15999 + C15998 + C16009) * C152205 +
           (C432 * C6222 + C433 * C6221 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
               C152301) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
            C434 * C6221 + C435 * C6222) *
               C152301 +
           ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
            C2033 * C6221 + C2032 * C6222) *
               C152205) *
              C151983 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
            (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
               C152205 +
           (C1819 * C6222 + C1820 * C6221 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
               C152301) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
               C152301 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152372 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152359 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C1345 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152359 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152372 -
           (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
             (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
             (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152372 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152359 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2325 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2326 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C151965 * C152368 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C2326 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C2325 -
           ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C2325 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C2326 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2325 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2326 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C152371 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C2326 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C2325 -
           (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
             (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
             (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C2325 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C2326 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C2556 -
          ((C15291 + C15292 + C15314) * C152205 +
           (C15290 + C15289 + C15313) * C152301) *
              C2557 +
          ((C15314 + C15292 + C15291) * C152301 +
           (C17902 + C17879 + C17880) * C152205) *
              C2558 -
          ((C17903 + C17904 + C17905) * C152205 +
           (C17880 + C17879 + C17902) * C152301) *
              C2559 +
          ((C17905 + C17904 + C17903) * C152301 +
           ((C134 * C17867 + C17887 + C17887 + C152163 * C17873) * C6220 +
            (C134 * C17868 + C17888 + C17888 + C152163 * C17874) * C6221 +
            (C134 * C17869 + C17889 + C17889 + C152163 * C17875) * C6222) *
               C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C347 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152359 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152372 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152372 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152359 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C1345 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152359 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152372 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C1346 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152372 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152359 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C2326 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C2325 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C2325 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C2326 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C152371 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C2326 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C2325 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C152357 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C2325 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C2326 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C2556 -
          ((C37867 + C37868 + C37869) * C151907 * C152205 +
           (C37866 + C37865 + C37864) * C151907 * C152301) *
              C2557 +
          ((C37869 + C37868 + C37867) * C151907 * C152301 +
           (C40459 + C40460 + C40461) * C151907 * C152205) *
              C2558 -
          ((C40462 + C40463 + C40464) * C151907 * C152205 +
           (C40461 + C40460 + C40459) * C151907 * C152301) *
              C2559 +
          ((C40464 + C40463 + C40462) * C151907 * C152301 +
           (C23165 * C17867 + C40444 + C40444 + C23160 * C17873 +
            C23167 * C40425 + C40445 + C40445 + C23161 * C40429 +
            C23169 * C40426 + C40446 + C40446 + C23162 * C40430) *
               C151907 * C152205) *
              C2560) *
         C151965 * C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C1345 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C152286 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C1345 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C1346 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152286 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C151965 * C807 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152070 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152286) *
              C151965 * C808 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152286 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152070) *
              C151965 * C809 +
          (((C15703 + C15704 + C15705) * C152301 +
            (C673 * C6220 + C675 * C6221 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                C152205) *
               C152070 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2936 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2937 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C2938 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C151965 * C152271 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C2937 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C2936 -
           ((C18403 + C18404 + C18405) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C2938 +
           ((C18405 + C18404 + C18403) * C152301 +
            (C17900 * C6220 + C17899 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C6222) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152286 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C1345 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C152286 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2936 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2937 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C2938 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C151965 * C152271 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C2937 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C2936 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C2938 +
           ((C27031 + C27030 + C27029) * C151907 * C152301 +
            (C23165 * C2566 + C26509 + C26509 + C23160 * C2582 +
             C23167 * C9541 + C26510 + C26510 + C23161 * C9547 +
             C23169 * C26494 + C26511 + C26511 + C23162 * C26498) *
                C151907 * C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
             C670 * C6221 + C669 * C6222) *
                C152205) *
               C151983 * C152371 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152357 -
           ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152371 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
               C151983 * C152371 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152357 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
            C670 * C6221 + C669 * C6222) *
               C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
           (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
              C151983 * C151965 * C130 +
          ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
           (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
           (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
              C151983 * C151965 * C132 +
          ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
           (C674 * C6220 + C961 * C6221 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1345 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1346 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1345 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C1345 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C1346 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C151983 * C1433 -
          ((C15999 + C15998 + C16009) * C152205 +
           (C432 * C6222 + C433 * C6221 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
               C152301) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
            C434 * C6221 + C435 * C6222) *
               C152301 +
           ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
            C2033 * C6221 + C2032 * C6222) *
               C152205) *
              C151983 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
            (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
               C152205 +
           (C1819 * C6222 + C1820 * C6221 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
               C152301) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
               C152301 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2325 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2326 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C151965 * C152368 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C2326 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C2325 -
           ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C2325 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C2326 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C2325 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C2326 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C152371 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C2326 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C2325 -
           (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
             (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
             (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152330) *
              C152357 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C2325 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C2326 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152368 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C2326 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C2325 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C2325 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C2326 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C2325 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C2326 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C152371 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C2326 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C2325 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C152357 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C2325 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C2326 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152028) *
              C151942 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C4241 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C152285 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152028) *
              C151942 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C151951 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C4241 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C4241) *
               C152028) *
              C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152066 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152073 +
            ((C15314 + C15292 + C15291) * C152301 +
             (C17902 + C17879 + C17880) * C152205) *
                C4913) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152073 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152066 -
            ((C18600 + C18601 + C18610) * C152205 +
             (C16574 + C16573 + C16603) * C152301) *
                C4913) *
               C152028) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152073 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152066 -
            ((C18403 + C18404 + C18405) * C152205 +
             (C15300 + C15299 + C15298) * C152301) *
                C4913) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152066 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152073 +
            ((C18202 + C18201 + C18200) * C152301 +
             (C18208 * C6220 + C18207 * C6221 +
              (C134 * C3092 + C3105 + C3105 + C152163 * C3100) * C6222) *
                 C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152066 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152073 +
            ((C37869 + C37868 + C37867) * C151907 * C152301 +
             (C40459 + C40460 + C40461) * C151907 * C152205) *
                C4913) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152073 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152066 -
            ((C41158 + C41159 + C41160) * C151907 * C152205 +
             (C39165 + C39164 + C39163) * C151907 * C152301) *
                C4913) *
               C152028) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152073 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152066 -
            ((C27029 + C27030 + C27031) * C151907 * C152205 +
             (C23847 + C23846 + C23845) * C151907 * C152301) *
                C4913) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152066 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152073 +
            ((C26819 + C26818 + C26817) * C151907 * C152301 +
             (C23165 * C3090 + C27235 + C27235 + C23160 * C3098 +
              C23167 * C10284 + C27236 + C27236 + C23161 * C10290 +
              C23169 * C27226 + C27237 + C27237 + C23162 * C27230) *
                 C151907 * C152205) *
                C4913) *
               C152028) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152371 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C4241 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C152371 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152357 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C4241 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152070 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C4241 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C15703 + C15704 + C15705) * C152301 +
            (C673 * C6220 + C675 * C6221 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                C152205) *
               C152070 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152379 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152376 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C152365 -
           ((C17903 + C17904 + C17905) * C152205 +
            (C17880 + C17879 + C17902) * C152301) *
               C152343) *
              C151965 * C3375 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152376 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152379 -
           ((C18403 + C18404 + C18405) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152365 +
           ((C18405 + C18404 + C18403) * C152301 +
            (C17900 * C6220 + C17899 * C6221 +
             (C134 * C2568 + C2593 + C2593 + C152163 * C2584) * C6222) *
                C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C4241 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152371 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C4241 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152379 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152376 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C152365 -
           ((C40462 + C40463 + C40464) * C151907 * C152205 +
            (C40461 + C40460 + C40459) * C151907 * C152301) *
               C152343) *
              C151965 * C3375 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152376 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152379 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152365 +
           ((C27031 + C27030 + C27029) * C151907 * C152301 +
            (C23165 * C2566 + C26509 + C26509 + C23160 * C2582 +
             C23167 * C9541 + C26510 + C26510 + C23161 * C9547 +
             C23169 * C26494 + C26511 + C26511 + C23162 * C26498) *
                C151907 * C152205) *
               C152343) *
              C151965 * C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152066 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152073 +
           ((C15314 + C15292 + C15291) * C152301 +
            (C17902 + C17879 + C17880) * C152205) *
               C4913) *
              C151965 * C151942 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152073 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152066 -
           ((C18403 + C18404 + C18405) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C4913) *
              C151965 * C151951 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152066 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152073 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152066 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152073 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C40459 + C40460 + C40461) * C151907 * C152205) *
               C4913) *
              C151965 * C151942 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152073 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152066 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C4913) *
              C151965 * C151951 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152066 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152073 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C4913) *
              C151965 * C3722)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C4241 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152070 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C4241) *
              C151965 * C152370 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C4241 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C15703 + C15704 + C15705) * C152301 +
            (C673 * C6220 + C675 * C6221 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                C152205) *
               C152070 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C4241 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152371 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C4241) *
               C152357 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C4241 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C4241) *
               C152371 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C4241 -
            ((C18200 + C18201 + C18202) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152357 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C4241 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C152377 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C4241) *
              C151965 * C152370 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C4241 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C152355 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C4241) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C4241 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152371 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C4241) *
               C152357 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C4241 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C3375 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C4241) *
               C152371 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C4241 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152357 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C4241) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C152285 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152028) *
              C807 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152028 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152285) *
              C808 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C152285 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152028) *
              C809 +
          (((C431 * C6220 + C437 * C6221 + C820 * C6222) * C152301 +
            (C1198 * C6220 + C1199 * C6221 +
             (C134 * C1160 + C1187 + C1187 + C152163 * C1172) * C6222) *
                C152205) *
               C151983 * C152028 -
           ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1795 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1796 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C151983 * C1797 -
           ((C16810 * C6222 + C16811 * C6221 +
             (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
                C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C151983 * C152337) *
              C152271 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1796 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1795 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C1797 +
           ((C1820 * C6220 + C1819 * C6221 + C1818 * C6222) * C152301 +
            (C16811 * C6220 + C16810 * C6221 +
             (C134 * C2166 + C2179 + C2179 + C152163 * C2174) * C6222) *
                C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C152285 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152028) *
              C807 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152028 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152285) *
              C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152285 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152028) *
              C809 +
          (((C24065 + C24064 + C24063) * C151907 * C152301 +
            (C23165 * C1158 + C24589 + C24589 + C23160 * C1170 +
             C23167 * C1621 + C24590 + C24590 + C23161 * C1645 +
             C23169 * C2166 + C24591 + C24591 + C23162 * C2174) *
                C151907 * C152205) *
               C151983 * C152028 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C151983 * C152285) *
              C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1795 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1796 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C151983 * C1797 -
           ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
             C23167 * C8967 + C25931 + C25931 + C23161 * C8973 +
             C23165 * C2163 + C25930 + C25930 + C23160 * C2171) *
                C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C151983 * C152337) *
              C152271 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1796 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1795 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C1797 +
           ((C25421 + C25420 + C25419) * C151907 * C152301 +
            (C23165 * C2164 + C25933 + C25933 + C23160 * C2172 +
             C23167 * C8968 + C25934 + C25934 + C23161 * C8974 +
             C23169 * C25924 + C25935 + C25935 + C23162 * C25928) *
                C151907 * C152205) *
               C151983 * C152337) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C152285 +
           (((C16009 + C15998 + C15999) * C152301 +
             ((C134 * C1620 + C1657 + C1657 + C152163 * C1644) * C6220 +
              C2806 * C6221 + C2805 * C6222) *
                 C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C152285 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
             (C15301 + C15302 + C15303) * C152205) *
                C152286 -
            ((C15304 + C15305 + C15306) * C152205 +
             (C15303 + C15302 + C15301) * C152301) *
                C152070) *
               C152285 +
           (((C16003 + C16004 + C16005) * C152301 +
             (C2805 * C6220 + C2804 * C6221 +
              (C134 * C2787 + C2797 + C2797 + C152163 * C2789) * C6222) *
                 C152205) *
                C152070 -
            ((C16005 + C16004 + C16003) * C152205 +
             (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152286 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C1795 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152070 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152286) *
              C1796 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152286 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152070) *
              C1797 +
          (((C17309 + C17301 + C17302) * C152301 +
            ((C134 * C8218 + C17303 + C17303 + C152163 * C8224) * C6220 +
             (C134 * C8219 + C17304 + C17304 + C152163 * C8225) * C6221 +
             (C134 * C8220 + C17305 + C17305 + C152163 * C8226) * C6222) *
                C152205) *
               C152070 -
           ((C17302 + C17301 + C17309) * C152205 +
            (C1819 * C6222 + C1820 * C6221 +
             (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
                C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C23165 * C1620 + C25197 + C25197 + C23160 * C1644 +
              C23167 * C1625 + C25196 + C25196 + C23161 * C1649 +
              C23169 * C8218 + C25195 + C25195 + C23162 * C8224) *
                 C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C152028) *
              C347 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C152285 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C152028) *
              C348 +
          ((((C23243 + C23242 + C23241) * C151907 * C152301 +
             (C23848 + C23849 + C23850) * C151907 * C152205) *
                C152286 -
            ((C23851 + C23852 + C23853) * C151907 * C152205 +
             (C23850 + C23849 + C23848) * C151907 * C152301) *
                C152070) *
               C152285 +
           (((C24609 + C24608 + C24607) * C151907 * C152301 +
             (C23165 * C1618 + C26808 + C26808 + C23160 * C1642 +
              C23167 * C1627 + C26809 + C26809 + C23161 * C1651 +
              C23169 * C8220 + C26810 + C26810 + C23162 * C8226) *
                 C151907 * C152205) *
                C152070 -
            ((C24607 + C24608 + C24609) * C151907 * C152205 +
             (C23548 + C23547 + C23546) * C151907 * C152301) *
                C152286) *
               C152028) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C1795 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152070 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152286) *
              C1796 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152286 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152070) *
              C1797 +
          (((C39865 + C39866 + C39867) * C151907 * C152301 +
            (C23165 * C8218 + C39856 + C39856 + C23160 * C8224 +
             C23167 * C25185 + C39857 + C39857 + C23161 * C25189 +
             C23169 * C32979 + C39858 + C39858 + C23162 * C32981) *
                C151907 * C152205) *
               C152070 -
           ((C39867 + C39866 + C39865) * C151907 * C152205 +
            (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 +
             C23167 * C1443 + C24960 + C24960 + C23161 * C1459 +
             C23165 * C1442 + C24961 + C24961 + C23160 * C1458) *
                C151907 * C152301) *
               C152286) *
              C152337) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
             C670 * C6221 + C669 * C6222) *
                C152205) *
               C151983 * C152371 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152357 -
           ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152371 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
               C151983 * C152371 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152357 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
            C670 * C6221 + C669 * C6222) *
               C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
           (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
              C151983 * C151965 * C130 +
          ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
           (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
           (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
              C151983 * C151965 * C132 +
          ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
           (C674 * C6220 + C961 * C6221 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152372 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152359 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C151965 * C347 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152359 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152372 -
           ((C2957 * C6222 + C2958 * C6221 + C2959 * C6220) * C152205 +
            (C15300 + C15299 + C15298) * C152301) *
               C152330) *
              C151965 * C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152372 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152359 +
           ((C15306 + C15305 + C15304) * C152301 +
            (C2958 * C6220 + C2957 * C6221 +
             (C134 * C2940 + C2950 + C2950 + C152163 * C2942) * C6222) *
                C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1345 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1346 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1345 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C1345 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C1346 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C151983 * C1433 -
          ((C15999 + C15998 + C16009) * C152205 +
           (C432 * C6222 + C433 * C6221 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
               C152301) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
            C434 * C6221 + C435 * C6222) *
               C152301 +
           ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
            C2033 * C6221 + C2032 * C6222) *
               C152205) *
              C151983 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
            (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
               C152205 +
           (C1819 * C6222 + C1820 * C6221 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
               C152301) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
               C152301 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152372 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152359 +
           ((C15314 + C15292 + C15291) * C152301 +
            ((C134 * C2564 + C2589 + C2589 + C152163 * C2580) * C6220 +
             C2959 * C6221 + C2958 * C6222) *
                C152205) *
               C152330) *
              C1345 +
          (((C16009 + C15998 + C15999) * C152301 +
            (C16603 + C16573 + C16574) * C152205) *
               C152359 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C152372 -
           (((C134 * C3091 + C3104 + C3104 + C152163 * C3099) * C6222 +
             (C134 * C3090 + C3103 + C3103 + C152163 * C3098) * C6221 +
             (C134 * C3089 + C3102 + C3102 + C152163 * C3097) * C6220) *
                C152205 +
            (C16574 + C16573 + C16603) * C152301) *
               C152330) *
              C1346 +
          ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            (C16604 + C16577 + C16578) * C152205) *
               C152372 -
           ((C16605 + C16606 + C16607) * C152205 +
            (C16578 + C16577 + C16604) * C152301) *
               C152359 +
           ((C16607 + C16606 + C16605) * C152301 +
            ((C134 * C10283 + C16585 + C16585 + C152163 * C10289) * C6220 +
             (C134 * C10284 + C16586 + C16586 + C152163 * C10290) * C6221 +
             (C134 * C10285 + C16587 + C16587 + C152163 * C10291) * C6222) *
                C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C151965 * C347 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152359 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152372 -
           ((C27029 + C27030 + C27031) * C151907 * C152205 +
            (C23847 + C23846 + C23845) * C151907 * C152301) *
               C152330) *
              C151965 * C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152372 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152359 +
           ((C23853 + C23852 + C23851) * C151907 * C152301 +
            (C23165 * C2562 + C27020 + C27020 + C23160 * C2578 +
             C23167 * C3091 + C27021 + C27021 + C23161 * C3099 +
             C23169 * C10285 + C27022 + C27022 + C23162 * C10291) *
                C151907 * C152205) *
               C152330) *
              C151965 * C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152372 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152359 +
           ((C37869 + C37868 + C37867) * C151907 * C152301 +
            (C23165 * C2564 + C26505 + C26505 + C23160 * C2580 +
             C23167 * C3089 + C26504 + C26504 + C23161 * C3097 +
             C23169 * C10283 + C26503 + C26503 + C23162 * C10289) *
                C151907 * C152205) *
               C152330) *
              C1345 +
          (((C38560 + C38561 + C38562) * C151907 * C152301 +
            (C39163 + C39164 + C39165) * C151907 * C152205) *
               C152359 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C152372 -
           ((C23169 * C27225 + C27234 + C27234 + C23162 * C27229 +
             C23167 * C10283 + C27233 + C27233 + C23161 * C10289 +
             C23165 * C3089 + C27232 + C27232 + C23160 * C3097) *
                C151907 * C152205 +
            (C39165 + C39164 + C39163) * C151907 * C152301) *
               C152330) *
              C1346 +
          (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C39166 + C39167 + C39168) * C151907 * C152205) *
               C152372 -
           ((C39169 + C39170 + C39171) * C151907 * C152205 +
            (C39168 + C39167 + C39166) * C151907 * C152301) *
               C152359 +
           ((C39171 + C39170 + C39169) * C151907 * C152301 +
            (C23165 * C10283 + C39142 + C39142 + C23160 * C10289 +
             C23167 * C27225 + C39143 + C39143 + C23161 * C27229 +
             C23169 * C34310 + C39144 + C39144 + C23162 * C34312) *
                C151907 * C152205) *
               C152330) *
              C152327) *
         C151937) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C152286 -
           ((C15291 + C15292 + C15314) * C152205 +
            (C15290 + C15289 + C15313) * C152301) *
               C152070) *
              C151965 * C807 +
          (((C15295 + C15296 + C15297) * C152301 +
            (C15298 + C15299 + C15300) * C152205) *
               C152070 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C152286) *
              C151965 * C808 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C152286 -
           ((C15304 + C15305 + C15306) * C152205 +
            (C15303 + C15302 + C15301) * C152301) *
               C152070) *
              C151965 * C809 +
          (((C15703 + C15704 + C15705) * C152301 +
            (C673 * C6220 + C675 * C6221 +
             (C134 * C598 + C651 + C651 + C152163 * C622) * C6222) *
                C152205) *
               C152070 -
           ((C15705 + C15704 + C15703) * C152205 +
            (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
              C193 * C6221 + C194 * C6222) *
                 C152301 +
             (C15313 + C15289 + C15290) * C152205) *
                C152286 -
            ((C15291 + C15292 + C15314) * C152205 +
             (C15290 + C15289 + C15313) * C152301) *
                C152070) *
               C1345 +
           (((C16009 + C15998 + C15999) * C152301 +
             (C16603 + C16573 + C16574) * C152205) *
                C152070 -
            ((C15999 + C15998 + C16009) * C152205 +
             (C432 * C6222 + C433 * C6221 +
              (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                 C152301) *
                C152286) *
               C1346 +
           ((((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
              C434 * C6221 + C435 * C6222) *
                 C152301 +
             (C16604 + C16577 + C16578) * C152205) *
                C152286 -
            ((C16605 + C16606 + C16607) * C152205 +
             (C16578 + C16577 + C16604) * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C15295 + C15296 + C15297) * C152301 +
             (C15298 + C15299 + C15300) * C152205) *
                C152070 -
            ((C15297 + C15296 + C15295) * C152205 +
             (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
                C152286) *
               C1345 +
           (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
             (C16000 + C16001 + C16002) * C152205) *
                C152286 -
            ((C2804 * C6222 + C2805 * C6221 + C2806 * C6220) * C152205 +
             (C16002 + C16001 + C16000) * C152301) *
                C152070) *
               C1346 +
           (((C17102 + C17103 + C17104) * C152301 +
             (C16601 * C6220 + C16600 * C6221 +
              (C134 * C1628 + C1665 + C1665 + C152163 * C1652) * C6222) *
                 C152205) *
                C152070 -
            ((C17104 + C17103 + C17102) * C152205 +
             (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C152286 -
           ((C37867 + C37868 + C37869) * C151907 * C152205 +
            (C37866 + C37865 + C37864) * C151907 * C152301) *
               C152070) *
              C151965 * C807 +
          (((C23844 + C23843 + C23842) * C151907 * C152301 +
            (C23845 + C23846 + C23847) * C151907 * C152205) *
               C152070 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C152286) *
              C151965 * C808 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C152286 -
           ((C23851 + C23852 + C23853) * C151907 * C152205 +
            (C23850 + C23849 + C23848) * C151907 * C152301) *
               C152070) *
              C151965 * C809 +
          (((C24277 + C24276 + C24275) * C151907 * C152301 +
            (C23165 * C594 + C23815 + C23815 + C23160 * C618 + C23167 * C1617 +
             C23816 + C23816 + C23161 * C1641 + C23169 * C1628 + C23817 +
             C23817 + C23162 * C1652) *
                C151907 * C152205) *
               C152070 -
           ((C24275 + C24276 + C24277) * C151907 * C152205 +
            (C23246 + C23245 + C23244) * C151907 * C152301) *
               C152286) *
              C151965 * C152331)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
              C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 +
              C23174 + C23162 * C378) *
                 C151907 * C152301 +
             (C37864 + C37865 + C37866) * C151907 * C152205) *
                C152286 -
            ((C37867 + C37868 + C37869) * C151907 * C152205 +
             (C37866 + C37865 + C37864) * C151907 * C152301) *
                C152070) *
               C1345 +
           (((C38560 + C38561 + C38562) * C151907 * C152301 +
             (C39163 + C39164 + C39165) * C151907 * C152205) *
                C152070 -
            ((C38562 + C38561 + C38560) * C151907 * C152205 +
             (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 +
              C23167 * C354 + C23478 + C23478 + C23161 * C378 + C23165 * C353 +
              C23479 + C23479 + C23160 * C377) *
                 C151907 * C152301) *
                C152286) *
               C1346 +
           (((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
              C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
              C23482 + C23162 * C1459) *
                 C151907 * C152301 +
             (C39166 + C39167 + C39168) * C151907 * C152205) *
                C152286 -
            ((C39169 + C39170 + C39171) * C151907 * C152205 +
             (C39168 + C39167 + C39166) * C151907 * C152301) *
                C152070) *
               C152327) *
              C152271 +
          ((((C23844 + C23843 + C23842) * C151907 * C152301 +
             (C23845 + C23846 + C23847) * C151907 * C152205) *
                C152070 -
            ((C23842 + C23843 + C23844) * C151907 * C152205 +
             (C23240 + C23239 + C23238) * C151907 * C152301) *
                C152286) *
               C1345 +
           (((C23542 + C23541 + C23540) * C151907 * C152301 +
             (C24604 + C24605 + C24606) * C151907 * C152205) *
                C152286 -
            ((C26817 + C26818 + C26819) * C151907 * C152205 +
             (C24606 + C24605 + C24604) * C151907 * C152301) *
                C152070) *
               C1346 +
           (((C25729 + C25728 + C25727) * C151907 * C152301 +
             (C23165 * C1626 + C25207 + C25207 + C23160 * C1650 +
              C23167 * C8219 + C25208 + C25208 + C23161 * C8225 +
              C23169 * C25186 + C25209 + C25209 + C23162 * C25190) *
                 C151907 * C152205) *
                C152070 -
            ((C25727 + C25728 + C25729) * C151907 * C152205 +
             (C23545 + C23544 + C23543) * C151907 * C152301) *
                C152286) *
               C152327) *
              C151948)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
            C670 * C6221 + C669 * C6222) *
               C152205) *
              C151983 * C151965 * C129 -
          ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
           (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
              C151983 * C151965 * C130 +
          ((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
           (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
              C151983 * C151965 * C131 -
          ((C961 * C6222 + C674 * C6221 + C668 * C6220) * C152205 +
           (C197 * C6222 + C196 * C6221 + C195 * C6220) * C152301) *
              C151983 * C151965 * C132 +
          ((C196 * C6220 + C197 * C6221 + C198 * C6222) * C152301 +
           (C674 * C6220 + C961 * C6221 +
            (C134 * C952 + C958 + C958 + C152163 * C954) * C6222) *
               C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            ((C134 * C590 + C633 + C633 + C152163 * C614) * C6220 +
             C670 * C6221 + C669 * C6222) *
                C152205) *
               C151983 * C152371 -
           ((C1197 * C6222 + C1196 * C6221 +
             (C134 * C1155 + C1174 + C1174 + C152163 * C1167) * C6220) *
                C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C152357 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C347 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C1196 * C6220 + C1197 * C6221 + C1198 * C6222) * C152205) *
               C151983 * C152357 -
           ((C668 * C6222 + C669 * C6221 + C670 * C6220) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C152371 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C348 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C669 * C6220 + C668 * C6221 + C674 * C6222) * C152205) *
               C151983 * C152371 -
           ((C1199 * C6222 + C1198 * C6221 + C1197 * C6220) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C152357 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
             C193 * C6221 + C194 * C6222) *
                C152301 +
            (C15313 + C15289 + C15290) * C152205) *
               C151983 * C1345 -
           ((C15999 + C15998 + C16009) * C152205 +
            (C432 * C6222 + C433 * C6221 +
             (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
                C152301) *
               C151983 * C1346 +
           (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
             C434 * C6221 + C435 * C6222) *
                C152301 +
            ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
             C2033 * C6221 + C2032 * C6222) *
                C152205) *
               C151983 * C152327) *
              C152368 +
          (((C433 * C6220 + C432 * C6221 + C431 * C6222) * C152301 +
            (C16000 + C16001 + C16002) * C152205) *
               C151983 * C1346 -
           ((C15297 + C15296 + C15295) * C152205 +
            (C195 * C6222 + C194 * C6221 + C193 * C6220) * C152301) *
               C151983 * C1345 -
           ((C2031 * C6222 + C2032 * C6221 + C2033 * C6220) * C152205 +
            (C436 * C6222 + C435 * C6221 + C434 * C6220) * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C194 * C6220 + C195 * C6221 + C196 * C6222) * C152301 +
            (C15301 + C15302 + C15303) * C152205) *
               C151983 * C1345 -
           ((C16005 + C16004 + C16003) * C152205 +
            (C437 * C6222 + C431 * C6221 + C432 * C6220) * C152301) *
               C151983 * C1346 +
           ((C435 * C6220 + C436 * C6221 + C438 * C6222) * C152301 +
            (C2032 * C6220 + C2031 * C6221 +
             (C134 * C2014 + C2024 + C2024 + C152163 * C2016) * C6222) *
                C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152163 * C152) * C6220 +
            C193 * C6221 + C194 * C6222) *
               C152301 +
           (C15313 + C15289 + C15290) * C152205) *
              C151983 * C1433 -
          ((C15999 + C15998 + C16009) * C152205 +
           (C432 * C6222 + C433 * C6221 +
            (C134 * C353 + C396 + C396 + C152163 * C377) * C6220) *
               C152301) *
              C151983 * C1434 +
          (((C134 * C354 + C397 + C397 + C152163 * C378) * C6220 +
            C434 * C6221 + C435 * C6222) *
               C152301 +
           ((C134 * C1624 + C1661 + C1661 + C152163 * C1648) * C6220 +
            C2033 * C6221 + C2032 * C6222) *
               C152205) *
              C151983 * C1435 -
          (((C134 * C2165 + C2178 + C2178 + C152163 * C2173) * C6222 +
            (C134 * C2164 + C2177 + C2177 + C152163 * C2172) * C6221 +
            (C134 * C2163 + C2176 + C2176 + C152163 * C2171) * C6220) *
               C152205 +
           (C1819 * C6222 + C1820 * C6221 +
            (C134 * C1442 + C1467 + C1467 + C152163 * C1458) * C6220) *
               C152301) *
              C151983 * C1436 +
          (((C134 * C1443 + C1468 + C1468 + C152163 * C1459) * C6220 +
            (C134 * C1444 + C1469 + C1469 + C152163 * C1460) * C6221 +
            (C134 * C1445 + C1470 + C1470 + C152163 * C1461) * C6222) *
               C152301 +
           ((C134 * C8967 + C16350 + C16350 + C152163 * C8973) * C6220 +
            (C134 * C8968 + C16351 + C16351 + C152163 * C8974) * C6221 +
            (C134 * C8969 + C16352 + C16352 + C152163 * C8975) * C6222) *
               C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
            C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
            C23779 + C23162 * C1648) *
               C151907 * C152205) *
              C151983 * C151965 * C129 -
          ((C23842 + C23843 + C23844) * C151907 * C152205 +
           (C23240 + C23239 + C23238) * C151907 * C152301) *
              C151983 * C151965 * C130 +
          ((C23243 + C23242 + C23241) * C151907 * C152301 +
           (C23848 + C23849 + C23850) * C151907 * C152205) *
              C151983 * C151965 * C131 -
          ((C24275 + C24276 + C24277) * C151907 * C152205 +
           (C23246 + C23245 + C23244) * C151907 * C152301) *
              C151983 * C151965 * C132 +
          ((C23249 + C23248 + C23247) * C151907 * C152301 +
           (C23165 * C595 + C24266 + C24266 + C23160 * C619 + C23167 * C1159 +
            C24267 + C24267 + C23161 * C1171 + C23169 * C2014 + C24268 +
            C24268 + C23162 * C2016) *
               C151907 * C152205) *
              C151983 * C151965 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C23165 * C590 + C23781 + C23781 + C23160 * C614 + C23167 * C1155 +
             C23780 + C23780 + C23161 * C1167 + C23169 * C1624 + C23779 +
             C23779 + C23162 * C1648) *
                C151907 * C152205) *
               C151983 * C152371 -
           ((C23169 * C2163 + C24570 + C24570 + C23162 * C2171 +
             C23167 * C1624 + C24569 + C24569 + C23161 * C1648 +
             C23165 * C1155 + C24568 + C24568 + C23160 * C1167) *
                C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C152357 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C347 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C152357 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C152371 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C348 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C152371 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C152357 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
             C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
             C23162 * C378) *
                C151907 * C152301 +
            (C37864 + C37865 + C37866) * C151907 * C152205) *
               C151983 * C1345 -
           ((C38562 + C38561 + C38560) * C151907 * C152205 +
            (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
             C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
             C23160 * C377) *
                C151907 * C152301) *
               C151983 * C1346 +
           ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
             C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
             C23482 + C23162 * C1459) *
                C151907 * C152301 +
            (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 +
             C23167 * C2163 + C25202 + C25202 + C23161 * C2171 +
             C23169 * C8967 + C25201 + C25201 + C23162 * C8973) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152368 +
          (((C23542 + C23541 + C23540) * C151907 * C152301 +
            (C24604 + C24605 + C24606) * C151907 * C152205) *
               C151983 * C1346 -
           ((C23842 + C23843 + C23844) * C151907 * C152205 +
            (C23240 + C23239 + C23238) * C151907 * C152301) *
               C151983 * C1345 -
           ((C25727 + C25728 + C25729) * C151907 * C152205 +
            (C23545 + C23544 + C23543) * C151907 * C152301) *
               C151983 * C152327) *
              C152353 +
          (((C23243 + C23242 + C23241) * C151907 * C152301 +
            (C23848 + C23849 + C23850) * C151907 * C152205) *
               C151983 * C1345 -
           ((C24607 + C24608 + C24609) * C151907 * C152205 +
            (C23548 + C23547 + C23546) * C151907 * C152301) *
               C151983 * C1346 +
           ((C23551 + C23550 + C23549) * C151907 * C152301 +
            (C23165 * C1622 + C25718 + C25718 + C23160 * C1646 +
             C23167 * C2165 + C25719 + C25719 + C23161 * C2173 +
             C23169 * C8969 + C25720 + C25720 + C23162 * C8975) *
                C151907 * C152205) *
               C151983 * C152327) *
              C152321)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23165 * C136 + C23172 + C23172 + C23160 * C152 + C23167 * C353 +
            C23173 + C23173 + C23161 * C377 + C23169 * C354 + C23174 + C23174 +
            C23162 * C378) *
               C151907 * C152301 +
           (C37864 + C37865 + C37866) * C151907 * C152205) *
              C151983 * C1433 -
          ((C38562 + C38561 + C38560) * C151907 * C152205 +
           (C23169 * C1442 + C23477 + C23477 + C23162 * C1458 + C23167 * C354 +
            C23478 + C23478 + C23161 * C378 + C23165 * C353 + C23479 + C23479 +
            C23160 * C377) *
               C151907 * C152301) *
              C151983 * C1434 +
          ((C23165 * C354 + C23480 + C23480 + C23160 * C378 + C23167 * C1442 +
            C23481 + C23481 + C23161 * C1458 + C23169 * C1443 + C23482 +
            C23482 + C23162 * C1459) *
               C151907 * C152301 +
           (C23165 * C1624 + C25203 + C25203 + C23160 * C1648 + C23167 * C2163 +
            C25202 + C25202 + C23161 * C2171 + C23169 * C8967 + C25201 +
            C25201 + C23162 * C8973) *
               C151907 * C152205) *
              C151983 * C1435 -
          ((C23169 * C25923 + C25932 + C25932 + C23162 * C25927 +
            C23167 * C8967 + C25931 + C25931 + C23161 * C8973 + C23165 * C2163 +
            C25930 + C25930 + C23160 * C2171) *
               C151907 * C152205 +
           (C23169 * C7979 + C24959 + C24959 + C23162 * C7985 + C23167 * C1443 +
            C24960 + C24960 + C23161 * C1459 + C23165 * C1442 + C24961 +
            C24961 + C23160 * C1458) *
               C151907 * C152301) *
              C151983 * C1436 +
          ((C23165 * C1443 + C24962 + C24962 + C23160 * C1459 + C23167 * C7979 +
            C24963 + C24963 + C23161 * C7985 + C23169 * C24949 + C24964 +
            C24964 + C23162 * C24953) *
               C151907 * C152301 +
           (C23165 * C8967 + C38903 + C38903 + C23160 * C8973 +
            C23167 * C25923 + C38904 + C38904 + C23161 * C25927 +
            C23169 * C33456 + C38905 + C38905 + C23162 * C33458) *
               C151907 * C152205) *
              C151983 * C1437) *
         C151937) /
            (p * q * std::sqrt(p + q));
}
