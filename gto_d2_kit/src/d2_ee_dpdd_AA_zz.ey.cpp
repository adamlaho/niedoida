/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdd_AA_zz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2122_11_33(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150502 = ae + be;
    const double C150501 = ae * be;
    const double C150500 = zA - zB;
    const double C150519 = 0 * be;
    const double C150552 = 0 * ae;
    const double C150544 = 0 * be;
    const double C150610 = p + q;
    const double C150609 = p * q;
    const double C150618 = std::pow(ae, 2);
    const double C150616 = bs[3];
    const double C150615 = zP - zQ;
    const double C150624 = bs[4];
    const double C150622 = xP - xQ;
    const double C150632 = bs[5];
    const double C150641 = bs[6];
    const double C150652 = bs[7];
    const double C150667 = bs[8];
    const double C150700 = bs[2];
    const double C150807 = yP - yQ;
    const double C136 = bs[0];
    const double C152158 = xA - xB;
    const double C152184 = ce + de;
    const double C152183 = ce * de;
    const double C152182 = xC - xD;
    const double C152216 = yC - yD;
    const double C152234 = zC - zD;
    const double C152400 = yA - yB;
    const double C150521 = 2 * C150502;
    const double C150520 = std::pow(C150502, 2);
    const double C150523 = 2 * C150501;
    const double C150507 = C150501 * C150500;
    const double C152445 = std::pow(C150500, 2);
    const double C152457 = C150500 * be;
    const double C152456 = C150500 * ae;
    const double C150547 = C150500 * C150519;
    const double C150546 = -2 * C150519;
    const double C150560 = C150552 / C150502;
    const double C150611 = 2 * C150609;
    const double C150619 = std::pow(C150615, 2);
    const double C150693 = C150615 * ae;
    const double C150634 = std::pow(C150622, 2);
    const double C150819 = std::pow(C150807, 2);
    const double C152161 = C152158 * be;
    const double C152160 = C152158 * ae;
    const double C152159 = std::pow(C152158, 2);
    const double C152188 = 2 * C152184;
    const double C152187 = std::pow(C152184, 2);
    const double C152189 = C152182 * de;
    const double C152186 = C152182 * ce;
    const double C152185 = std::pow(C152182, 2);
    const double C152217 = std::pow(C152216, 2);
    const double C152276 = C152216 * de;
    const double C152274 = C152216 * ce;
    const double C152235 = std::pow(C152234, 2);
    const double C152318 = C152234 * de;
    const double C152316 = C152234 * ce;
    const double C152415 = std::pow(C152400, 2);
    const double C152431 = C152400 * be;
    const double C152430 = C152400 * ae;
    const double C152169 = std::pow(C150521, -1);
    const double C152556 = std::pow(C150521, -2);
    const double C150548 = 2 * C150520;
    const double C150545 = C150520 * C150521;
    const double C152524 = 4 * C150520;
    const double C152446 = C152445 * C150501;
    const double C150555 = C150547 / C150502;
    const double C150554 = ae * C150546;
    const double C150613 = C150611 / C150610;
    const double C152 =
        ((std::pow(zP - zQ, 2) * bs[2] * std::pow(C150611 / C150610, 2) -
          (bs[1] * C150611) / C150610) *
         std::pow(ae, 2)) /
        C150520;
    const double C137 = -(C150622 * bs[1] * C150611) / C150610;
    const double C359 = -(C150807 * bs[1] * C150611) / C150610;
    const double C604 = -(C150615 * bs[1] * C150611) / C150610;
    const double C150626 = C150619 * C150624;
    const double C150635 = C150619 * C150632;
    const double C150643 = C150619 * C150641;
    const double C150655 = C150619 * C150652;
    const double C150670 = C150619 * C150667;
    const double C150694 = C150624 * C150693;
    const double C150703 = C150616 * C150693;
    const double C150717 = C150632 * C150693;
    const double C150729 = C150641 * C150693;
    const double C150750 = C150652 * C150693;
    const double C150777 = C150667 * C150693;
    const double C144 = (-(bs[1] * C150693 * C150611) / C150610) / C150502;
    const double C152162 = C152159 * C150501;
    const double C152201 = std::pow(C152188, -1);
    const double C152532 = std::pow(C152188, -2);
    const double C152202 = 2 * C152187;
    const double C152536 = C152187 * C152188;
    const double C152535 = 4 * C152187;
    const double C152525 = std::pow(C152186, 2);
    const double C152190 = C152185 * C152183;
    const double C152218 = C152217 * C152183;
    const double C152537 = std::pow(C152274, 2);
    const double C152236 = C152235 * C152183;
    const double C152539 = std::pow(C152316, 2);
    const double C152416 = C152415 * C150501;
    const double C150559 = C150519 / C150548;
    const double C150556 = C150544 / C150548;
    const double C152447 = C152446 / C150502;
    const double C150561 = 0 - C150555;
    const double C150617 = -C150613;
    const double C150625 = std::pow(C150613, 4);
    const double C150642 = std::pow(C150613, 6);
    const double C150668 = std::pow(C150613, 8);
    const double C150699 = std::pow(C150613, 2);
    const double C153 =
        ((xP - xQ) *
         (bs[2] * std::pow(C150613, 2) +
          std::pow(zP - zQ, 2) * bs[3] * std::pow(-C150613, 3)) *
         std::pow(ae, 2)) /
        C150520;
    const double C152163 = C152162 / C150502;
    const double C152580 = 4 * C152536;
    const double C152579 = C152184 * C152535;
    const double C152191 = C152190 / C152184;
    const double C152219 = C152218 / C152184;
    const double C152237 = C152236 / C152184;
    const double C152417 = C152416 / C150502;
    const double C152448 = -C152447;
    const double C150565 = C150561 * ae;
    const double C150620 = std::pow(C150617, 3);
    const double C150633 = std::pow(C150617, 5);
    const double C150653 = std::pow(C150617, 7);
    const double C150627 = C150626 * C150625;
    const double C150631 = C150624 * C150625;
    const double C150695 = C150625 * C150694;
    const double C150644 = C150643 * C150642;
    const double C150651 = C150641 * C150642;
    const double C150733 = C150642 * C150729;
    const double C150671 = C150670 * C150668;
    const double C150783 = C150668 * C150777;
    const double C150702 = C150700 * C150699;
    const double C145 = (C150622 * C150699 * C150700 * C150693) / C150502;
    const double C371 = (C150807 * C150699 * C150700 * C150693) / C150502;
    const double C616 = (C150615 * C150699 * C150700 * C150693) / C150502 -
                        (ae * bs[1] * C150611) / (C150610 * C150502);
    const double C152164 = -C152163;
    const double C152192 = -C152191;
    const double C152220 = -C152219;
    const double C152238 = -C152237;
    const double C152418 = -C152417;
    const double C152449 = std::exp(C152448);
    const double C150567 = C150565 / C150502;
    const double C150623 = C150616 * C150620;
    const double C150704 = C150620 * C150703;
    const double C154 =
        ((bs[2] * std::pow(C150613, 2) + C150619 * C150616 * C150620) *
             C150618 +
         (C150616 * C150620 + C150619 * bs[4] * std::pow(C150613, 4)) *
             C150618 * std::pow(xP - xQ, 2)) /
        C150520;
    const double C383 =
        ((yP - yQ) *
         (bs[2] * std::pow(C150613, 2) + C150619 * C150616 * C150620) *
         C150618) /
        C150520;
    const double C628 =
        (2 * ae * C150699 * C150700 * C150693 +
         C150615 * (C150700 * C150699 + C150619 * C150616 * C150620) *
             C150618) /
        C150520;
    const double C150636 = C150635 * C150633;
    const double C150640 = C150632 * C150633;
    const double C150719 = C150633 * C150717;
    const double C150656 = C150655 * C150653;
    const double C150666 = C150652 * C150653;
    const double C150755 = C150653 * C150750;
    const double C150718 = C150631 * C150634;
    const double C150730 = C150622 * C150631;
    const double C150857 = C150631 * C150819;
    const double C150948 = C150631 * C150619;
    const double C150947 = C150615 * C150631;
    const double C150946 = C150631 * ae;
    const double C151054 = C150807 * C150631;
    const double C150710 = C150622 * C150695;
    const double C150845 = C150807 * C150695;
    const double C150931 = C150615 * C150695;
    const double C150942 = ae * C150695;
    const double C150753 = C150651 * C150634;
    const double C150780 = C150622 * C150651;
    const double C151402 = C150651 * C150819;
    const double C151527 = C150807 * C150651;
    const double C151667 = C150651 * C150619;
    const double C151666 = C150615 * C150651;
    const double C151665 = C150651 * ae;
    const double C150736 = C150733 * C150634;
    const double C150749 = C150622 * C150733;
    const double C151118 = C150733 * C150819;
    const double C151168 = C150807 * C150733;
    const double C151281 = C150615 * C150733;
    const double C151659 = ae * C150733;
    const double C150786 = C150783 * C150634;
    const double C151420 = C150622 * C150783;
    const double C151524 = C150783 * C150819;
    const double C151803 = C150807 * C150783;
    const double C151858 = C150615 * C150783;
    const double C150705 = C150702 * ae;
    const double C138 = C150702 * C150634 - (bs[1] * C150611) / C150610;
    const double C358 = C150807 * C150622 * C150702;
    const double C360 = C150702 * C150819 - (bs[1] * C150611) / C150610;
    const double C603 = C150615 * C150622 * C150702;
    const double C605 = C150702 * C150619 - (bs[1] * C150611) / C150610;
    const double C1179 = C150615 * C150807 * C150702;
    const double C152165 = std::exp(C152164);
    const double C152193 = std::exp(C152192);
    const double C152221 = std::exp(C152220);
    const double C152239 = std::exp(C152238);
    const double C152419 = std::exp(C152418);
    const double C164 = C152449 * C153;
    const double C150508 = C150507 * C152449;
    const double C134 =
        -((C152449 - (C150500 * 2 * C150501 * C150500 * C152449) / C150502) *
          2 * C150501) /
        C150502;
    const double C135 = -(2 * C150501 * C150500 * C152449) / C150502;
    const double C152458 = C152449 * C152456;
    const double C152461 = C152169 * C152449;
    const double C152564 = C152449 * C152457;
    const double C152563 = C152449 / C150521;
    const double C45345 = C152556 * C152449;
    const double C150568 = C150567 - C150556;
    const double C150628 = C150623 + C150627;
    const double C150711 = C150622 * C150623;
    const double C150846 = C150807 * C150623;
    const double C150933 = C150615 * C150623;
    const double C150932 = C150623 * ae;
    const double C139 =
        2 * C150622 * C150702 + C150622 * (C150702 + C150623 * C150634);
    const double C357 = C150807 * (C150702 + C150623 * C150634);
    const double C602 = C150615 * (C150702 + C150623 * C150634);
    const double C1470 =
        2 * C150807 * C150702 + C150807 * (C150702 + C150623 * C150819);
    const double C1652 = C150615 * (C150702 + C150623 * C150819);
    const double C2598 =
        2 * C150615 * C150702 + C150615 * (C150702 + C150623 * C150619);
    const double C150706 = C150615 * C150704;
    const double C146 =
        (C150699 * C150700 * C150693 + C150704 * C150634) / C150502;
    const double C147 =
        (2 * C150622 * C150704 + C150622 * (C150704 + C150695 * C150634)) /
        C150502;
    const double C369 = (C150807 * (C150704 + C150695 * C150634)) / C150502;
    const double C370 = (C150807 * C150622 * C150704) / C150502;
    const double C372 =
        (C150699 * C150700 * C150693 + C150704 * C150819) / C150502;
    const double C614 = (C150615 * (C150704 + C150695 * C150634) +
                         (C150702 + C150623 * C150634) * ae) /
                        C150502;
    const double C615 =
        (C150615 * C150622 * C150704 + C150622 * C150702 * ae) / C150502;
    const double C1185 =
        (C150615 * C150807 * C150704 + C150807 * C150702 * ae) / C150502;
    const double C1478 =
        (2 * C150807 * C150704 + C150807 * (C150704 + C150695 * C150819)) /
        C150502;
    const double C1664 = (C150615 * (C150704 + C150695 * C150819) +
                          (C150702 + C150623 * C150819) * ae) /
                         C150502;
    const double C167 = C152449 * C154;
    const double C6496 = C152449 * C383;
    const double C150637 = C150631 + C150636;
    const double C150645 = C150640 + C150644;
    const double C150731 = C150640 * C150634;
    const double C150752 = C150622 * C150640;
    const double C151120 = C150640 * C150819;
    const double C151169 = C150807 * C150640;
    const double C151284 = C150640 * C150619;
    const double C151283 = C150615 * C150640;
    const double C151282 = C150640 * ae;
    const double C150721 = C150719 * C150634;
    const double C150728 = C150622 * C150719;
    const double C150856 = C150719 * C150819;
    const double C150945 = C150615 * C150719;
    const double C151053 = C150807 * C150719;
    const double C151277 = ae * C150719;
    const double C150657 = C150651 + C150656;
    const double C150672 = C150666 + C150671;
    const double C150781 = C150666 * C150634;
    const double C151423 = C150622 * C150666;
    const double C151528 = C150666 * C150819;
    const double C151804 = C150807 * C150666;
    const double C151861 = C150666 * C150619;
    const double C151860 = C150615 * C150666;
    const double C151859 = C150666 * ae;
    const double C150758 = C150755 * C150634;
    const double C150776 = C150622 * C150755;
    const double C151399 = C150755 * C150819;
    const double C151523 = C150807 * C150755;
    const double C151664 = C150615 * C150755;
    const double C151852 = ae * C150755;
    const double C150720 = C150623 + C150718;
    const double C150734 = 2 * C150730;
    const double C150839 = C150807 * C150730;
    const double C150922 = C150615 * C150730;
    const double C150921 = C150730 * ae;
    const double C150859 = C150623 + C150857;
    const double C150952 = C150623 + C150948;
    const double C150951 = C150947 * ae;
    const double C151285 = 2 * C150947;
    const double C151057 = C150615 * C151054;
    const double C151056 = C151054 * ae;
    const double C151119 = 2 * C151054;
    const double C150712 = C150615 * C150710;
    const double C373 = (C150622 * C150704 + C150710 * C150819) / C150502;
    const double C150847 = C150615 * C150845;
    const double C150949 = 2 * C150942;
    const double C150757 = C150640 + C150753;
    const double C150784 = 2 * C150780;
    const double C151135 = C150780 * C150819;
    const double C151195 = C150807 * C150780;
    const double C151320 = C150780 * C150619;
    const double C151319 = C150615 * C150780;
    const double C151318 = C150780 * ae;
    const double C151404 = C150640 + C151402;
    const double C151531 = 2 * C151527;
    const double C151593 = C151527 * C150619;
    const double C151592 = C150615 * C151527;
    const double C151591 = C151527 * ae;
    const double C151675 = C150640 + C151667;
    const double C151674 = C151666 * ae;
    const double C151862 = 2 * C151666;
    const double C150738 = C150719 + C150736;
    const double C150754 = 2 * C150749;
    const double C150865 = C150749 * C150819;
    const double C150968 = C150615 * C150749;
    const double C151067 = C150807 * C150749;
    const double C151313 = ae * C150749;
    const double C151121 = C150719 + C151118;
    const double C151172 = C150615 * C151168;
    const double C151398 = 2 * C151168;
    const double C151586 = ae * C151168;
    const double C151672 = 2 * C151659;
    const double C150788 = C150755 + C150786;
    const double C151424 = C151420 * C150819;
    const double C151714 = C150615 * C151420;
    const double C151762 = C150807 * C151420;
    const double C151530 = C150755 + C151524;
    const double C151811 = C150615 * C151803;
    const double C152166 = C152165 * C152160;
    const double C152170 = C152169 * C152165;
    const double C152520 = C152165 / C150521;
    const double C152519 = C152165 * C152161;
    const double C6262 = C152556 * C152165;
    const double C152195 = C152193 * C152186;
    const double C152194 = C152193 / C152188;
    const double C152204 = C152201 * C152193;
    const double C152528 = C152193 * C152189;
    const double C152577 = C152532 * C152193;
    const double C152571 = C152193 * C152525;
    const double C152275 = C152221 / C152188;
    const double C152277 = C152221 * C152274;
    const double C152284 = C152201 * C152221;
    const double C152543 = C152221 * C152276;
    const double C152583 = C152532 * C152221;
    const double C152581 = C152221 * C152537;
    const double C152317 = C152239 / C152188;
    const double C152319 = C152239 * C152316;
    const double C152326 = C152201 * C152239;
    const double C152549 = C152239 * C152318;
    const double C152586 = C152532 * C152239;
    const double C152584 = C152239 * C152539;
    const double C152432 = C152419 * C152430;
    const double C152435 = C152169 * C152419;
    const double C152559 = C152419 * C152431;
    const double C152558 = C152419 / C150521;
    const double C23222 = C152556 * C152419;
    const double C150522 = 2 * C150508;
    const double C150553 = C150508 / C150520;
    const double C150549 = -4 * C150508;
    const double C14621 =
        (((-4 * C150508) / C150502 -
          (C150500 * (C152449 - (C150500 * 2 * C150508) / C150502) * 2 *
           C150501) /
              C150502) *
         ae) /
        C150502;
    const double C14622 =
        ((C152449 - (C150500 * 2 * C150508) / C150502) * ae) / C150502 -
        (0 * be) / (2 * std::pow(C150502, 2));
    const double C14623 =
        (-((C152449 - (C150500 * 2 * C150508) / C150502) * 2 * C150501) /
         C150502) /
        (2 * C150502);
    const double C14624 = (0 * ae) / C150502 - C150508 / std::pow(C150502, 2);
    const double C165 = C134 * C138;
    const double C162 = C134 * C137;
    const double C399 = C134 * C358;
    const double C644 = C134 * C603;
    const double C6501 = C134 * C360;
    const double C6495 = C134 * C359;
    const double C7435 = C134 * C1179;
    const double C163 = C135 * C145;
    const double C161 = C135 * C144;
    const double C402 = C135 * C371;
    const double C647 = C135 * C616;
    const double C152566 = C152458 / C150548;
    const double C152565 = C152458 * C152457;
    const double C152557 = C152458 / C150502;
    const double C152464 = C152461 * C152457;
    const double C62214 = C152461 / C152524;
    const double C114709 = C152461 / C150521;
    const double C152603 = C152564 / C150502;
    const double C45344 = (-2 * C152169 * C152564) / C150502;
    const double C45343 = (C152449 * std::pow(C152457, 2)) / C150520 + C152563;
    const double C150629 = C150628 * C150618;
    const double C150713 = C150711 * ae;
    const double C1186 =
        (C150615 * C150807 * C150710 + C150807 * C150711 * ae) / C150502;
    const double C361 = C150622 * C150702 + C150711 * C150819;
    const double C606 = C150622 * C150702 + C150711 * C150619;
    const double C1180 = C150615 * C150807 * C150711;
    const double C1469 =
        2 * C150807 * C150711 + C150807 * (C150711 + C150730 * C150819);
    const double C1651 = C150615 * (C150711 + C150730 * C150819);
    const double C2597 =
        2 * C150615 * C150711 + C150615 * (C150711 + C150730 * C150619);
    const double C150848 = C150846 * ae;
    const double C1648 = C150807 * C150702 + C150846 * C150619;
    const double C3129 =
        2 * C150615 * C150846 + C150615 * (C150846 + C151054 * C150619);
    const double C150935 = C150933 * ae;
    const double C150934 = C150931 + C150932;
    const double C168 = C134 * C139;
    const double C396 = C134 * C357;
    const double C641 = C134 * C602;
    const double C7796 = C134 * C1470;
    const double C8048 = C134 * C1652;
    const double C150707 = C150706 + C150705;
    const double C166 = C135 * C146;
    const double C169 = C135 * C147;
    const double C397 = C135 * C369;
    const double C400 = C135 * C370;
    const double C403 = C135 * C372;
    const double C642 = C135 * C614;
    const double C645 = C135 * C615;
    const double C1198 = C135 * C1185;
    const double C1495 = C135 * C1478;
    const double C1689 = C135 * C1664;
    const double C150638 = C150637 * C150618;
    const double C150646 = C150645 * C150618;
    const double C150735 = C150631 + C150731;
    const double C150756 = 2 * C150752;
    const double C150866 = C150752 * C150819;
    const double C150971 = C150752 * C150619;
    const double C150970 = C150615 * C150752;
    const double C150969 = C150752 * ae;
    const double C151068 = C150807 * C150752;
    const double C151122 = C150631 + C151120;
    const double C151175 = C151169 * C150619;
    const double C151174 = C150615 * C151169;
    const double C151173 = C151169 * ae;
    const double C151401 = 2 * C151169;
    const double C151290 = C150631 + C151284;
    const double C151289 = C151283 * ae;
    const double C151668 = 2 * C151283;
    const double C151288 = C151281 + C151282;
    const double C150723 = C150695 + C150721;
    const double C150732 = 2 * C150728;
    const double C150838 = C150807 * C150728;
    const double C150920 = C150615 * C150728;
    const double C150965 = ae * C150728;
    const double C1477 =
        (2 * C150807 * C150710 + C150807 * (C150710 + C150728 * C150819)) /
        C150502;
    const double C1663 = (C150615 * (C150710 + C150728 * C150819) +
                          (C150711 + C150730 * C150819) * ae) /
                         C150502;
    const double C150858 = C150695 + C150856;
    const double C150950 = C150945 + C150946;
    const double C151055 = C150615 * C151053;
    const double C151117 = 2 * C151053;
    const double C151165 = ae * C151053;
    const double C151287 = 2 * C151277;
    const double C150658 = C150657 * C150618;
    const double C150673 = C150672 * C150618;
    const double C150785 = C150651 + C150781;
    const double C151425 = C151423 * C150819;
    const double C151717 = C151423 * C150619;
    const double C151716 = C150615 * C151423;
    const double C151715 = C151423 * ae;
    const double C151763 = C150807 * C151423;
    const double C151532 = C150651 + C151528;
    const double C151814 = C151804 * C150619;
    const double C151813 = C150615 * C151804;
    const double C151812 = C151804 * ae;
    const double C151871 = C150651 + C151861;
    const double C151870 = C151860 * ae;
    const double C151869 = C151858 + C151859;
    const double C150760 = C150733 + C150758;
    const double C150782 = 2 * C150776;
    const double C151133 = C150776 * C150819;
    const double C151194 = C150807 * C150776;
    const double C151317 = C150615 * C150776;
    const double C151709 = ae * C150776;
    const double C151403 = C150733 + C151399;
    const double C151529 = 2 * C151523;
    const double C151590 = C150615 * C151523;
    const double C151798 = ae * C151523;
    const double C151673 = C151664 + C151665;
    const double C151868 = 2 * C151852;
    const double C150722 = C150720 * ae;
    const double C140 = 3 * (C150702 + C150623 * C150634) +
                        C150622 * (2 * C150711 + C150622 * C150720);
    const double C356 = C150807 * (2 * C150711 + C150622 * C150720);
    const double C362 = C150702 + C150623 * C150634 + C150720 * C150819;
    const double C601 = C150615 * (2 * C150711 + C150622 * C150720);
    const double C607 = C150702 + C150623 * C150634 + C150720 * C150619;
    const double C1181 = C150615 * C150807 * C150720;
    const double C150841 = C150839 * ae;
    const double C1647 = C150807 * C150711 + C150839 * C150619;
    const double C150924 = C150922 * ae;
    const double C150861 = C150859 * ae;
    const double C1471 = 3 * (C150702 + C150623 * C150819) +
                         C150807 * (2 * C150846 + C150807 * C150859);
    const double C1653 = C150702 + C150623 * C150819 + C150859 * C150619;
    const double C2197 = C150615 * (2 * C150846 + C150807 * C150859);
    const double C150955 = C150952 * ae;
    const double C2599 = 3 * (C150702 + C150623 * C150619) +
                         C150615 * (2 * C150933 + C150615 * C150952);
    const double C151059 = C151057 * ae;
    const double C405 = C135 * C373;
    const double C150759 = C150622 * C150757;
    const double C150779 = 3 * C150757;
    const double C150875 = C150757 * C150819;
    const double C150994 = C150757 * C150619;
    const double C150993 = C150615 * C150757;
    const double C150992 = C150757 * ae;
    const double C151082 = C150807 * C150757;
    const double C151137 = C150752 + C151135;
    const double C151201 = C151195 * C150619;
    const double C151200 = C150615 * C151195;
    const double C151199 = C151195 * ae;
    const double C151422 = 2 * C151195;
    const double C151326 = C150752 + C151320;
    const double C151325 = C151319 * ae;
    const double C151718 = 2 * C151319;
    const double C151406 = C150807 * C151404;
    const double C151449 = C151404 * C150619;
    const double C151448 = C150615 * C151404;
    const double C151447 = C151404 * ae;
    const double C151526 = 3 * C151404;
    const double C151599 = C151169 + C151593;
    const double C151598 = C151592 * ae;
    const double C151805 = 2 * C151592;
    const double C151680 = C150615 * C151675;
    const double C151679 = C151675 * ae;
    const double C151863 = 3 * C151675;
    const double C150740 = C150622 * C150738;
    const double C150748 = 3 * C150738;
    const double C150831 = C150807 * C150738;
    const double C150909 = C150615 * C150738;
    const double C150988 = ae * C150738;
    const double C150867 = C150728 + C150865;
    const double C151069 = C150615 * C151067;
    const double C151132 = 2 * C151067;
    const double C151191 = ae * C151067;
    const double C151323 = 2 * C151313;
    const double C151123 = C150807 * C151121;
    const double C151243 = C150615 * C151121;
    const double C151397 = 3 * C151121;
    const double C151443 = ae * C151121;
    const double C151596 = 2 * C151586;
    const double C150790 = C150622 * C150788;
    const double C151148 = C150788 * C150819;
    const double C151220 = C150807 * C150788;
    const double C151353 = C150615 * C150788;
    const double C151426 = C150776 + C151424;
    const double C151768 = C150615 * C151762;
    const double C151533 = C150807 * C151530;
    const double C151626 = C150615 * C151530;
    const double C152522 = C152166 / C150548;
    const double C152521 = C152166 * C152161;
    const double C152518 = C152166 / C150502;
    const double C152173 = C152170 * C152161;
    const double C126 = C152170 / C152524;
    const double C67858 = C152170 / C150521;
    const double C6260 = (C152165 * std::pow(C152161, 2)) / C150520 + C152520;
    const double C152568 = C152519 / C150502;
    const double C6261 = (-2 * C152169 * C152519) / C150502;
    const double C152196 = C152195 * C152189;
    const double C152203 = C152195 / C152202;
    const double C152529 = C152201 * C152195;
    const double C152527 = C152195 / C152184;
    const double C353 = (C152193 * std::pow(C152189, 2)) / C152187 + C152194;
    const double C152205 = C152204 * C152189;
    const double C152533 = C152186 * C152204;
    const double C152531 = 2 * C152204;
    const double C152587 = C152204 / C152535;
    const double C133 = C152204 / C152580;
    const double C3762 = C152204 / C152188;
    const double C152573 = C152528 / C152184;
    const double C354 = (-2 * C152201 * C152528) / C152184;
    const double C152607 = C152571 / C152187;
    const double C1373 = (C152221 * std::pow(C152276, 2)) / C152187 + C152275;
    const double C152278 = C152277 * C152276;
    const double C152283 = C152277 / C152202;
    const double C152541 = C152277 / C152184;
    const double C152538 = C152201 * C152277;
    const double C152285 = C152284 * C152276;
    const double C152547 = C152274 * C152284;
    const double C152546 = 2 * C152284;
    const double C152593 = C152284 / C152535;
    const double C1465 = C152284 / C152580;
    const double C3759 = C152284 / C152188;
    const double C152589 = C152543 / C152184;
    const double C1374 = (-2 * C152201 * C152543) / C152184;
    const double C152612 = C152581 / C152187;
    const double C2359 = (C152239 * std::pow(C152318, 2)) / C152187 + C152317;
    const double C152320 = C152319 * C152318;
    const double C152325 = C152319 / C152202;
    const double C152542 = C152319 / C152184;
    const double C152540 = C152201 * C152319;
    const double C152327 = C152326 * C152318;
    const double C152553 = C152316 * C152326;
    const double C152552 = 2 * C152326;
    const double C152599 = C152326 / C152535;
    const double C2594 = C152326 / C152580;
    const double C4953 = C152326 / C152188;
    const double C152595 = C152549 / C152184;
    const double C2360 = (-2 * C152201 * C152549) / C152184;
    const double C152614 = C152584 / C152187;
    const double C152561 = C152432 / C150548;
    const double C152560 = C152432 * C152431;
    const double C152555 = C152432 / C150502;
    const double C152438 = C152435 * C152431;
    const double C31464 = C152435 / C152524;
    const double C76067 = C152435 / C150521;
    const double C152600 = C152559 / C150502;
    const double C23221 = (-2 * C152169 * C152559) / C150502;
    const double C23220 = (C152419 * std::pow(C152431, 2)) / C150520 + C152558;
    const double C150524 = C150500 * C150522;
    const double C45351 =
        ((-C150522 / C150502) / C150521 - (0 * be) / C150502) / C150521 -
        (0 * be) / C150502;
    const double C95120 = (-C150522 / C150502) / C150521 - (0 * be) / C150502;
    const double C150564 = C150560 - C150553;
    const double C150557 = C150549 / C150502;
    const double C14643 = C14621 * C139;
    const double C14634 = C14621 * C138;
    const double C14628 = C14621 * C137;
    const double C14923 = C14621 * C358;
    const double C14917 = C14621 * C357;
    const double C15225 = C14621 * C603;
    const double C15219 = C14621 * C602;
    const double C37223 = C14621 * C1470;
    const double C37217 = C14621 * C360;
    const double C37213 = C14621 * C359;
    const double C38147 = C14621 * C1179;
    const double C38143 = C14621 * C1652;
    const double C14644 = C14622 * C147;
    const double C14635 = C14622 * C146;
    const double C14629 = C14622 * C145;
    const double C14626 = C14622 * C144;
    const double C14931 = C14622 * C373;
    const double C14928 = C14622 * C372;
    const double C14927 = C14622 * C371;
    const double C14924 = C14622 * C370;
    const double C14918 = C14622 * C369;
    const double C15229 = C14622 * C616;
    const double C15226 = C14622 * C615;
    const double C15220 = C14622 * C614;
    const double C16006 = C14622 * C1185;
    const double C16393 = C14622 * C1478;
    const double C16629 = C14622 * C1664;
    const double C14637 = C14623 * C602;
    const double C14631 = C14623 * C603;
    const double C37219 = C14623 * C1652;
    const double C37215 = C14623 * C1179;
    const double C14638 = C14624 * C614;
    const double C14632 = C14624 * C615;
    const double C14627 = C14624 * C616;
    const double C14929 = C14624 * C1664;
    const double C14926 = C14624 * C1185;
    const double C181 = C162 + C163;
    const double C6511 = C6495 + C402;
    const double C152604 = C152565 / C150520;
    const double C14636 = C152557 * C154;
    const double C14630 = C152557 * C153;
    const double C37214 = C152557 * C383;
    const double C152567 = C152464 / C150502;
    const double C95115 = -C152603;
    const double C45373 = C45343 * C154;
    const double C45358 = C45343 * C153;
    const double C54167 = C45343 * C383;
    const double C155 =
        (2 * C150622 * C150629 +
         C150622 * (C150629 + (C150624 * C150625 +
                               C150619 * bs[5] * std::pow(C150617, 5)) *
                                  C150618 * std::pow(C150622, 2))) /
        C150520;
    const double C382 = ((yP - yQ) * C150622 * C150629) / C150520;
    const double C384 =
        ((bs[2] * std::pow(C150613, 2) + C150619 * C150616 * C150620) *
             C150618 +
         C150629 * std::pow(yP - yQ, 2)) /
        C150520;
    const double C627 = (2 * ae * C150622 * C150620 * C150616 * C150693 +
                         C150615 * C150622 * C150629) /
                        C150520;
    const double C1191 =
        (2 * ae * C150807 * C150704 + C150615 * C150807 * C150629) / C150520;
    const double C150714 = C150712 + C150713;
    const double C1200 = C135 * C1186;
    const double C14921 = C14624 * C1186;
    const double C16009 = C14622 * C1186;
    const double C404 = C134 * C361;
    const double C14930 = C14621 * C361;
    const double C649 = C134 * C606;
    const double C15232 = C14621 * C606;
    const double C15222 = C14623 * C606;
    const double C1199 = C134 * C1180;
    const double C14920 = C14623 * C1180;
    const double C16008 = C14621 * C1180;
    const double C1837 = C134 * C1469;
    const double C16836 = C14621 * C1469;
    const double C2053 = C134 * C1651;
    const double C14933 = C14623 * C1651;
    const double C17148 = C14621 * C1651;
    const double C2985 = C134 * C2597;
    const double C15235 = C14623 * C2597;
    const double C18455 = C14621 * C2597;
    const double C150849 = C150847 + C150848;
    const double C8046 = C134 * C1648;
    const double C38145 = C14623 * C1648;
    const double C38746 = C14621 * C1648;
    const double C10062 = C134 * C3129;
    const double C38748 = C14623 * C3129;
    const double C40778 = C14621 * C3129;
    const double C150937 = ae * C150934;
    const double C150936 = C150615 * C150934;
    const double C150944 = 2 * C150934;
    const double C150708 = ae * C150707;
    const double C617 = (C150699 * C150700 * C150693 + C150615 * C150707 +
                         C150615 * C150702 * ae) /
                        C150502;
    const double C182 = C165 + C166;
    const double C183 = C168 + C169;
    const double C422 = C396 + C397;
    const double C423 = C399 + C400;
    const double C6513 = C6501 + C403;
    const double C667 = C641 + C642;
    const double C668 = C644 + C645;
    const double C7443 = C7435 + C1198;
    const double C7807 = C7796 + C1495;
    const double C8060 = C8048 + C1689;
    const double C150816 = C150622 * C150638;
    const double C150943 = C150615 * C150638;
    const double C151052 = C150807 * C150638;
    const double C156 =
        (3 * (C150629 + C150638 * C150634) +
         C150622 *
             (2 * C150622 * C150638 +
              C150622 * (C150638 + (C150632 * C150633 +
                                    C150619 * bs[6] * std::pow(C150613, 6)) *
                                       C150618 * C150634))) /
        C150520;
    const double C381 = ((yP - yQ) * (C150629 + C150638 * C150634)) / C150520;
    const double C385 =
        (C150622 * C150629 + C150622 * C150638 * std::pow(yP - yQ, 2)) /
        C150520;
    const double C626 =
        (2 * ae * (C150620 * C150616 * C150693 + C150695 * C150634) +
         C150615 * (C150629 + C150638 * C150634)) /
        C150520;
    const double C1192 =
        (2 * ae * C150807 * C150710 + C150615 * C150807 * C150622 * C150638) /
        C150520;
    const double C1486 =
        (2 * C150807 * C150629 +
         C150807 * (C150629 + C150638 * std::pow(C150807, 2))) /
        C150520;
    const double C1676 = (2 * ae * (C150704 + C150695 * C150819) +
                          C150615 * (C150629 + C150638 * C150819)) /
                         C150520;
    const double C150647 = C150646 * C150634;
    const double C150650 = C150622 * C150646;
    const double C151108 = C150646 * C150819;
    const double C151166 = C150807 * C150646;
    const double C151278 = C150615 * C150646;
    const double C1487 = (3 * (C150629 + C150638 * C150819) +
                          C150807 * (2 * C150807 * C150638 +
                                     C150807 * (C150638 + C150646 * C150819))) /
                         C150520;
    const double C150737 = C150622 * C150735;
    const double C150751 = 3 * C150735;
    const double C150832 = C150807 * C150735;
    const double C150911 = C150615 * C150735;
    const double C150910 = C150735 * ae;
    const double C1468 =
        2 * C150807 * C150720 + C150807 * (C150720 + C150735 * C150819);
    const double C1650 = C150615 * (C150720 + C150735 * C150819);
    const double C2596 =
        2 * C150615 * C150720 + C150615 * (C150720 + C150735 * C150619);
    const double C150868 = C150730 + C150866;
    const double C150975 = C150730 + C150971;
    const double C150974 = C150970 * ae;
    const double C151321 = 2 * C150970;
    const double C150973 = C150968 + C150969;
    const double C151071 = C150615 * C151068;
    const double C151070 = C151068 * ae;
    const double C151134 = 2 * C151068;
    const double C3130 =
        2 * C150615 * C150839 + C150615 * (C150839 + C151068 * C150619);
    const double C151124 = C150807 * C151122;
    const double C151245 = C150615 * C151122;
    const double C151244 = C151122 * ae;
    const double C151400 = 3 * C151122;
    const double C10052 =
        2 * C150615 * C150859 + C150615 * (C150859 + C151122 * C150619);
    const double C151179 = C151054 + C151175;
    const double C151178 = C151174 * ae;
    const double C151594 = 2 * C151174;
    const double C151177 = C151172 + C151173;
    const double C151294 = C150615 * C151290;
    const double C151293 = C151290 * ae;
    const double C151669 = 3 * C151290;
    const double C151295 = ae * C151288;
    const double C151292 = C150615 * C151288;
    const double C151663 = 2 * C151288;
    const double C150724 = C150615 * C150723;
    const double C148 = (3 * (C150704 + C150695 * C150634) +
                         C150622 * (2 * C150710 + C150622 * C150723)) /
                        C150502;
    const double C368 = (C150807 * (2 * C150710 + C150622 * C150723)) / C150502;
    const double C374 =
        (C150704 + C150695 * C150634 + C150723 * C150819) / C150502;
    const double C613 = (C150615 * (2 * C150710 + C150622 * C150723) +
                         (2 * C150711 + C150622 * C150720) * ae) /
                        C150502;
    const double C1187 =
        (C150615 * C150807 * C150723 + C150807 * C150720 * ae) / C150502;
    const double C1476 =
        (2 * C150807 * C150723 + C150807 * (C150723 + C150738 * C150819)) /
        C150502;
    const double C1662 = (C150615 * (C150723 + C150738 * C150819) +
                          (C150720 + C150735 * C150819) * ae) /
                         C150502;
    const double C150840 = C150615 * C150838;
    const double C150923 = C150920 + C150921;
    const double C150972 = 2 * C150965;
    const double C1494 = C135 * C1477;
    const double C16391 = C14622 * C1477;
    const double C1688 = C135 * C1663;
    const double C14934 = C14624 * C1663;
    const double C16627 = C14622 * C1663;
    const double C150860 = C150615 * C150858;
    const double C2205 = (2 * ae * (2 * C150845 + C150807 * C150858) +
                          C150615 * (2 * C150807 * C150638 +
                                     C150807 * (C150638 + C150646 * C150819))) /
                         C150520;
    const double C1479 = (3 * (C150704 + C150695 * C150819) +
                          C150807 * (2 * C150845 + C150807 * C150858)) /
                         C150502;
    const double C2201 = (C150615 * (2 * C150845 + C150807 * C150858) +
                          (2 * C150846 + C150807 * C150859) * ae) /
                         C150502;
    const double C150956 = ae * C150950;
    const double C150954 = C150615 * C150950;
    const double C151280 = 2 * C150950;
    const double C151058 = C151055 + C151056;
    const double C151170 = 2 * C151165;
    const double C150659 = C150658 * C150634;
    const double C150665 = C150622 * C150658;
    const double C151385 = C150658 * C150819;
    const double C151512 = C150807 * C150658;
    const double C151660 = C150615 * C150658;
    const double C150674 = C150673 * C150634;
    const double C151391 = C150622 * C150673;
    const double C151513 = C150673 * C150819;
    const double C151799 = C150807 * C150673;
    const double C151853 = C150615 * C150673;
    const double C150787 = C150622 * C150785;
    const double C151150 = C150785 * C150819;
    const double C151221 = C150807 * C150785;
    const double C151356 = C150785 * C150619;
    const double C151355 = C150615 * C150785;
    const double C151354 = C150785 * ae;
    const double C151427 = C150780 + C151425;
    const double C151725 = C150780 + C151717;
    const double C151724 = C151716 * ae;
    const double C151723 = C151714 + C151715;
    const double C151771 = C151763 * C150619;
    const double C151770 = C150615 * C151763;
    const double C151769 = C151763 * ae;
    const double C151534 = C150807 * C151532;
    const double C151629 = C151532 * C150619;
    const double C151628 = C150615 * C151532;
    const double C151627 = C151532 * ae;
    const double C151819 = C151527 + C151814;
    const double C151818 = C151813 * ae;
    const double C151817 = C151811 + C151812;
    const double C151877 = C150615 * C151871;
    const double C151876 = C151871 * ae;
    const double C151878 = ae * C151869;
    const double C151875 = C150615 * C151869;
    const double C150762 = C150622 * C150760;
    const double C150775 = 3 * C150760;
    const double C150874 = C150760 * C150819;
    const double C150991 = C150615 * C150760;
    const double C151081 = C150807 * C150760;
    const double C151349 = ae * C150760;
    const double C151136 = C150749 + C151133;
    const double C151198 = C150615 * C151194;
    const double C151419 = 2 * C151194;
    const double C151758 = ae * C151194;
    const double C151324 = C151317 + C151318;
    const double C151722 = 2 * C151709;
    const double C151405 = C150807 * C151403;
    const double C151446 = C150615 * C151403;
    const double C151522 = 3 * C151403;
    const double C151622 = ae * C151403;
    const double C151597 = C151590 + C151591;
    const double C151809 = 2 * C151798;
    const double C151681 = ae * C151673;
    const double C151678 = C150615 * C151673;
    const double C151857 = 2 * C151673;
    const double C171 = C134 * C140;
    const double C14646 = C14621 * C140;
    const double C393 = C134 * C356;
    const double C14942 = C14621 * C356;
    const double C407 = C134 * C362;
    const double C14936 = C14621 * C362;
    const double C638 = C134 * C601;
    const double C14640 = C14623 * C601;
    const double C15244 = C14621 * C601;
    const double C652 = C134 * C607;
    const double C15238 = C14621 * C607;
    const double C15216 = C14623 * C607;
    const double C1202 = C134 * C1181;
    const double C14914 = C14623 * C1181;
    const double C16014 = C14621 * C1181;
    const double C2829 = C134 * C1647;
    const double C16011 = C14623 * C1647;
    const double C18239 = C14621 * C1647;
    const double C7802 = C134 * C1471;
    const double C38502 = C14621 * C1471;
    const double C8054 = C134 * C1653;
    const double C38141 = C14623 * C1653;
    const double C38750 = C14621 * C1653;
    const double C8779 = C134 * C2197;
    const double C37221 = C14623 * C2197;
    const double C38754 = C14621 * C2197;
    const double C150761 = C150756 + C150759;
    const double C150877 = C150735 + C150875;
    const double C150998 = C150735 + C150994;
    const double C150997 = C150993 * ae;
    const double C151357 = 2 * C150993;
    const double C151085 = C150615 * C151082;
    const double C151084 = C151082 * ae;
    const double C151149 = 2 * C151082;
    const double C151139 = C150807 * C151137;
    const double C151256 = C150615 * C151137;
    const double C151255 = C151137 * ae;
    const double C151421 = 3 * C151137;
    const double C151205 = C151068 + C151201;
    const double C151204 = C151200 * ae;
    const double C151764 = 2 * C151200;
    const double C151330 = C150615 * C151326;
    const double C151329 = C151326 * ae;
    const double C151719 = 3 * C151326;
    const double C151408 = C151401 + C151406;
    const double C151453 = C151122 + C151449;
    const double C151452 = C151448 * ae;
    const double C151630 = 2 * C151448;
    const double C151603 = C150615 * C151599;
    const double C151602 = C151599 * ae;
    const double C151806 = 3 * C151599;
    const double C151684 = C151668 + C151680;
    const double C150742 = C150732 + C150740;
    const double C150833 = C150615 * C150831;
    const double C150995 = 2 * C150988;
    const double C150869 = C150615 * C150867;
    const double C1480 = (3 * (C150710 + C150728 * C150819) +
                          C150807 * (2 * C150838 + C150807 * C150867)) /
                         C150502;
    const double C151196 = 2 * C151191;
    const double C151125 = C151117 + C151123;
    const double C151450 = 2 * C151443;
    const double C150792 = C150782 + C150790;
    const double C151151 = C150760 + C151148;
    const double C151224 = C150615 * C151220;
    const double C151428 = C150807 * C151426;
    const double C151469 = C150615 * C151426;
    const double C151535 = C151529 + C151533;
    const double C152569 = C152521 / C150520;
    const double C152523 = C152173 / C150502;
    const double C76068 = -C152568;
    const double C152197 = C152196 / C152187;
    const double C152574 = 2 * C152529;
    const double C152206 = C152205 / C152184;
    const double C152578 = C152533 / C152202;
    const double C152608 = C152527 - C152573;
    const double C3415 = -C152573;
    const double C152624 = C152607 + C152194;
    const double C152279 = C152278 / C152187;
    const double C152582 = 2 * C152538;
    const double C152286 = C152285 / C152184;
    const double C152592 = C152547 / C152202;
    const double C152616 = C152541 - C152589;
    const double C3275 = -C152589;
    const double C152627 = C152612 + C152275;
    const double C152321 = C152320 / C152187;
    const double C152585 = 2 * C152540;
    const double C152328 = C152327 / C152184;
    const double C152598 = C152553 / C152202;
    const double C152619 = C152542 - C152595;
    const double C4281 = -C152595;
    const double C152628 = C152614 + C152317;
    const double C152601 = C152560 / C150520;
    const double C152562 = C152438 / C150502;
    const double C67854 = -C152600;
    const double C150525 = C150524 / C150502;
    const double C95134 = C95120 * C614;
    const double C95128 = C95120 * C615;
    const double C95123 = C95120 * C616;
    const double C95430 = C95120 * C1663;
    const double C95425 = C95120 * C1664;
    const double C95422 = C95120 * C1185;
    const double C95417 = C95120 * C1186;
    const double C62222 =
        (C150564 / C150521 - (0 * be) / C150502) / C150521 - (0 * be) / C150502;
    const double C114715 = C150564 / C150521 - (0 * be) / C150502;
    const double C14665 = C14643 + C14644;
    const double C14662 = C14634 + C14635;
    const double C14660 = C14628 + C14629;
    const double C37228 = C37217 + C14928;
    const double C37226 = C37213 + C14927;
    const double C14961 = C14923 + C14924;
    const double C14959 = C14917 + C14918;
    const double C15263 = C15225 + C15226;
    const double C15261 = C15219 + C15220;
    const double C38152 = C38147 + C16006;
    const double C37231 = C37223 + C16393;
    const double C38150 = C38143 + C16629;
    const double C14663 = C14637 + C14638;
    const double C14661 = C14631 + C14632;
    const double C37229 = C37219 + C14929;
    const double C37227 = C37215 + C14926;
    const double C187 = C181 + C163;
    const double C6515 = C6511 + C402;
    const double C152623 = C152563 - C152604;
    const double C152605 = C152566 - C152567;
    const double C95132 = C95115 * C154;
    const double C95126 = C95115 * C153;
    const double C104039 = C95115 * C383;
    const double C170 = C152449 * C155;
    const double C14645 = C152557 * C155;
    const double C45376 = C45343 * C155;
    const double C95141 = C95115 * C155;
    const double C401 = C152449 * C382;
    const double C14925 = C152557 * C382;
    const double C45657 = C45343 * C382;
    const double C95421 = C95115 * C382;
    const double C6502 = C152449 * C384;
    const double C37218 = C152557 * C384;
    const double C54177 = C45343 * C384;
    const double C104048 = C95115 * C384;
    const double C646 = C152449 * C627;
    const double C14633 = C152461 * C627;
    const double C15227 = C152557 * C627;
    const double C45361 = C45344 * C627;
    const double C45959 = C45343 * C627;
    const double C95129 = C152461 * C627;
    const double C95723 = C95115 * C627;
    const double C7436 = C152449 * C1191;
    const double C37216 = C152461 * C1191;
    const double C38148 = C152557 * C1191;
    const double C54169 = C45344 * C1191;
    const double C55097 = C45343 * C1191;
    const double C104041 = C152461 * C1191;
    const double C105261 = C95115 * C1191;
    const double C150715 = ae * C150714;
    const double C618 =
        (C150622 * C150704 + C150615 * C150714 + C150615 * C150711 * ae) /
        C150502;
    const double C424 = C404 + C405;
    const double C14962 = C14930 + C14931;
    const double C1212 = C1199 + C1200;
    const double C14960 = C14920 + C14921;
    const double C16028 = C16008 + C16009;
    const double C150850 = ae * C150849;
    const double C1660 =
        (C150807 * C150704 + C150615 * C150849 + C150615 * C150846 * ae) /
        C150502;
    const double C150938 = C150704 + C150936;
    const double C629 =
        ((C150702 + C150619 * C150616 * C150620) * C150618 + C150708 + C150708 +
         C150615 * (2 * ae * C150704 + C150615 * C150629)) /
        C150520;
    const double C648 = C135 * C617;
    const double C15230 = C14622 * C617;
    const double C15228 = C14624 * C617;
    const double C45355 = C45351 * C617;
    const double C95724 = C95120 * C617;
    const double C188 = C182 + C166;
    const double C189 = C183 + C169;
    const double C430 = C422 + C397;
    const double C431 = C423 + C400;
    const double C6516 = C6513 + C403;
    const double C675 = C667 + C642;
    const double C676 = C668 + C645;
    const double C7445 = C7443 + C1198;
    const double C7811 = C7807 + C1495;
    const double C8065 = C8060 + C1689;
    const double C150953 = C150949 + C150943;
    const double C173 = C152449 * C156;
    const double C14648 = C152557 * C156;
    const double C45391 = C45343 * C156;
    const double C95144 = C95115 * C156;
    const double C398 = C152449 * C381;
    const double C14919 = C152557 * C381;
    const double C45675 = C45343 * C381;
    const double C95415 = C95115 * C381;
    const double C406 = C152449 * C385;
    const double C14932 = C152557 * C385;
    const double C45666 = C45343 * C385;
    const double C95428 = C95115 * C385;
    const double C643 = C152449 * C626;
    const double C14639 = C152461 * C626;
    const double C15221 = C152557 * C626;
    const double C45370 = C45344 * C626;
    const double C45977 = C45343 * C626;
    const double C95135 = C152461 * C626;
    const double C95717 = C95115 * C626;
    const double C1201 = C152449 * C1192;
    const double C14922 = C152461 * C1192;
    const double C16010 = C152557 * C1192;
    const double C45654 = C45344 * C1192;
    const double C46754 = C45343 * C1192;
    const double C95418 = C152461 * C1192;
    const double C96506 = C95115 * C1192;
    const double C7797 = C152449 * C1486;
    const double C37224 = C152557 * C1486;
    const double C55448 = C45343 * C1486;
    const double C105723 = C95115 * C1486;
    const double C8049 = C152449 * C1676;
    const double C37220 = C152461 * C1676;
    const double C38144 = C152557 * C1676;
    const double C54175 = C45344 * C1676;
    const double C55705 = C45343 * C1676;
    const double C104046 = C152461 * C1676;
    const double C106051 = C95115 * C1676;
    const double C150648 = C150638 + C150647;
    const double C150654 = 2 * C150650;
    const double C150966 = C150615 * C150650;
    const double C151066 = C150807 * C150650;
    const double C1485 =
        (2 * C150807 * C150816 +
         C150807 * (C150816 + C150650 * std::pow(C150807, 2))) /
        C150520;
    const double C1675 = (2 * ae * (C150710 + C150728 * C150819) +
                          C150615 * (C150816 + C150650 * C150819)) /
                         C150520;
    const double C151109 = C150638 + C151108;
    const double C151171 = C150615 * C151166;
    const double C151384 = 2 * C151166;
    const double C151291 = C151287 + C151278;
    const double C7803 = C152449 * C1487;
    const double C38503 = C152557 * C1487;
    const double C55458 = C45343 * C1487;
    const double C105733 = C95115 * C1487;
    const double C150739 = C150734 + C150737;
    const double C150834 = C150832 * ae;
    const double C1646 = C150807 * C150720 + C150832 * C150619;
    const double C3131 =
        2 * C150615 * C150832 + C150615 * (C150832 + C151082 * C150619);
    const double C150913 = C150911 * ae;
    const double C150912 = C150909 + C150910;
    const double C1835 = C134 * C1468;
    const double C16832 = C14621 * C1468;
    const double C2051 = C134 * C1650;
    const double C14939 = C14623 * C1650;
    const double C17144 = C14621 * C1650;
    const double C2983 = C134 * C2596;
    const double C15241 = C14623 * C2596;
    const double C18451 = C14621 * C2596;
    const double C150870 = C150868 * ae;
    const double C2202 = (C150615 * (2 * C150838 + C150807 * C150867) +
                          (2 * C150839 + C150807 * C150868) * ae) /
                         C150502;
    const double C1472 = 3 * (C150711 + C150730 * C150819) +
                         C150807 * (2 * C150839 + C150807 * C150868);
    const double C1654 = C150711 + C150730 * C150819 + C150868 * C150619;
    const double C2198 = C150615 * (2 * C150839 + C150807 * C150868);
    const double C10053 =
        2 * C150615 * C150868 + C150615 * (C150868 + C151137 * C150619);
    const double C150978 = C150975 * ae;
    const double C2600 = 3 * (C150711 + C150730 * C150619) +
                         C150615 * (2 * C150922 + C150615 * C150975);
    const double C150979 = ae * C150973;
    const double C150977 = C150615 * C150973;
    const double C151316 = 2 * C150973;
    const double C151073 = C151071 * ae;
    const double C151072 = C151069 + C151070;
    const double C9848 = C134 * C3130;
    const double C18237 = C14623 * C3130;
    const double C88836 = C14621 * C3130;
    const double C151126 = C151119 + C151124;
    const double C151247 = C151245 * ae;
    const double C151246 = C151243 + C151244;
    const double C26945 = C134 * C10052;
    const double C38752 = C14623 * C10052;
    const double C40774 = C14621 * C10052;
    const double C151181 = C151179 * ae;
    const double C9344 = 3 * (C150846 + C151054 * C150619) +
                         C150615 * (2 * C151057 + C150615 * C151179);
    const double C151182 = ae * C151177;
    const double C151180 = C150615 * C151177;
    const double C151589 = 2 * C151177;
    const double C151298 = C151285 + C151294;
    const double C151658 = C150646 + C151295;
    const double C151297 = C150719 + C151292;
    const double C150725 = C150724 + C150722;
    const double C172 = C135 * C148;
    const double C14647 = C14622 * C148;
    const double C394 = C135 * C368;
    const double C14943 = C14622 * C368;
    const double C408 = C135 * C374;
    const double C14937 = C14622 * C374;
    const double C639 = C135 * C613;
    const double C14641 = C14624 * C613;
    const double C15245 = C14622 * C613;
    const double C95137 = C95120 * C613;
    const double C1203 = C135 * C1187;
    const double C14915 = C14624 * C1187;
    const double C16015 = C14622 * C1187;
    const double C95411 = C95120 * C1187;
    const double C1493 = C135 * C1476;
    const double C16389 = C14622 * C1476;
    const double C1687 = C135 * C1662;
    const double C14940 = C14624 * C1662;
    const double C16625 = C14622 * C1662;
    const double C95436 = C95120 * C1662;
    const double C150842 = C150840 + C150841;
    const double C150926 = ae * C150923;
    const double C150925 = C150615 * C150923;
    const double C150967 = 2 * C150923;
    const double C1842 = C1837 + C1494;
    const double C16843 = C16836 + C16391;
    const double C2058 = C2053 + C1688;
    const double C14963 = C14933 + C14934;
    const double C17155 = C17148 + C16627;
    const double C150862 = C150860 + C150861;
    const double C8780 = C152449 * C2205;
    const double C37222 = C152461 * C2205;
    const double C38755 = C152557 * C2205;
    const double C55450 = C45344 * C2205;
    const double C56429 = C45343 * C2205;
    const double C105725 = C152461 * C2205;
    const double C107009 = C95115 * C2205;
    const double C1496 = C135 * C1479;
    const double C16394 = C14622 * C1479;
    const double C2210 = C135 * C2201;
    const double C16392 = C14624 * C2201;
    const double C17358 = C14622 * C2201;
    const double C96888 = C95120 * C2201;
    const double C151276 = C150638 + C150956;
    const double C150957 = C150695 + C150954;
    const double C151061 = ae * C151058;
    const double C151060 = C150615 * C151058;
    const double C151167 = 2 * C151058;
    const double C150660 = C150646 + C150659;
    const double C150669 = 2 * C150665;
    const double C151111 = C150665 * C150819;
    const double C151192 = C150807 * C150665;
    const double C151314 = C150615 * C150665;
    const double C1488 = (3 * (C150816 + C150650 * C150819) +
                          C150807 * (2 * C150807 * C150650 +
                                     C150807 * (C150650 + C150665 * C150819))) /
                         C150520;
    const double C2206 = (2 * ae * (2 * C150838 + C150807 * C150867) +
                          C150615 * (2 * C150807 * C150650 +
                                     C150807 * (C150650 + C150665 * C150819))) /
                         C150520;
    const double C151386 = C150646 + C151385;
    const double C151514 = 2 * C151512;
    const double C151587 = C150615 * C151512;
    const double C151677 = C151672 + C151660;
    const double C150675 = C150658 + C150674;
    const double C151392 = C151391 * C150819;
    const double C151710 = C150615 * C151391;
    const double C151759 = C150807 * C151391;
    const double C151515 = C150658 + C151513;
    const double C151810 = C150615 * C151799;
    const double C151874 = C151868 + C151853;
    const double C150789 = C150784 + C150787;
    const double C151152 = C150757 + C151150;
    const double C151227 = C151221 * C150619;
    const double C151226 = C150615 * C151221;
    const double C151225 = C151221 * ae;
    const double C151362 = C150757 + C151356;
    const double C151361 = C151355 * ae;
    const double C151360 = C151353 + C151354;
    const double C151429 = C150807 * C151427;
    const double C151472 = C151427 * C150619;
    const double C151471 = C150615 * C151427;
    const double C151470 = C151427 * ae;
    const double C151730 = C150615 * C151725;
    const double C151729 = C151725 * ae;
    const double C151731 = ae * C151723;
    const double C151728 = C150615 * C151723;
    const double C151775 = C151195 + C151771;
    const double C151774 = C151770 * ae;
    const double C151773 = C151768 + C151769;
    const double C151536 = C151531 + C151534;
    const double C151635 = C151404 + C151629;
    const double C151634 = C151628 * ae;
    const double C151633 = C151626 + C151627;
    const double C151823 = C150615 * C151819;
    const double C151822 = C151819 * ae;
    const double C151824 = ae * C151817;
    const double C151821 = C150615 * C151817;
    const double C151881 = C151862 + C151877;
    const double C151880 = C150755 + C151875;
    const double C150764 = C150754 + C150762;
    const double C150876 = C150738 + C150874;
    const double C150996 = C150991 + C150992;
    const double C151083 = C150615 * C151081;
    const double C151147 = 2 * C151081;
    const double C151217 = ae * C151081;
    const double C151359 = 2 * C151349;
    const double C151138 = C150807 * C151136;
    const double C151254 = C150615 * C151136;
    const double C151418 = 3 * C151136;
    const double C151466 = ae * C151136;
    const double C151203 = C151198 + C151199;
    const double C151766 = 2 * C151758;
    const double C151331 = ae * C151324;
    const double C151328 = C150615 * C151324;
    const double C151713 = 2 * C151324;
    const double C151407 = C151398 + C151405;
    const double C151451 = C151446 + C151447;
    const double C151632 = 2 * C151622;
    const double C151604 = ae * C151597;
    const double C151601 = C150615 * C151597;
    const double C151802 = 2 * C151597;
    const double C151851 = C150658 + C151681;
    const double C151683 = C150733 + C151678;
    const double C150763 = C150622 * C150761;
    const double C150778 = 4 * C150761;
    const double C150825 = C150807 * C150761;
    const double C150900 = C150615 * C150761;
    const double C150899 = C150761 * ae;
    const double C150879 = C150877 * ae;
    const double C1473 = 3 * (C150720 + C150735 * C150819) +
                         C150807 * (2 * C150832 + C150807 * C150877);
    const double C1655 = C150720 + C150735 * C150819 + C150877 * C150619;
    const double C2199 = C150615 * (2 * C150832 + C150807 * C150877);
    const double C151001 = C150998 * ae;
    const double C2601 = 3 * (C150720 + C150735 * C150619) +
                         C150615 * (2 * C150911 + C150615 * C150998);
    const double C151087 = C151085 * ae;
    const double C151141 = C151134 + C151139;
    const double C151258 = C151256 * ae;
    const double C151207 = C151205 * ae;
    const double C9345 = 3 * (C150839 + C151068 * C150619) +
                         C150615 * (2 * C151071 + C150615 * C151205);
    const double C151334 = C151321 + C151330;
    const double C151410 = C150807 * C151408;
    const double C151491 = C150615 * C151408;
    const double C151490 = C151408 * ae;
    const double C151525 = 4 * C151408;
    const double C151456 = C151453 * ae;
    const double C26241 = 3 * (C150859 + C151122 * C150619) +
                          C150615 * (2 * C151245 + C150615 * C151453);
    const double C151607 = C151594 + C151603;
    const double C151688 = C150615 * C151684;
    const double C151687 = C151684 * ae;
    const double C151864 = 4 * C151684;
    const double C150743 = C150615 * C150742;
    const double C149 = (4 * (2 * C150710 + C150622 * C150723) +
                         C150622 * (3 * C150723 + C150622 * C150742)) /
                        C150502;
    const double C375 =
        (2 * C150710 + C150622 * C150723 + C150742 * C150819) / C150502;
    const double C376 = (C150807 * (3 * C150723 + C150622 * C150742)) / C150502;
    const double C1497 = C135 * C1480;
    const double C16396 = C14622 * C1480;
    const double C151127 = C150615 * C151125;
    const double C7789 = (4 * (2 * C150845 + C150807 * C150858) +
                          C150807 * (3 * C150858 + C150807 * C151125)) /
                         C150502;
    const double C150794 = C150622 * C150792;
    const double C150883 = C150792 * C150819;
    const double C151014 = C150615 * C150792;
    const double C151095 = C150807 * C150792;
    const double C151153 = C150807 * C151151;
    const double C151265 = C150615 * C151151;
    const double C151430 = C151419 + C151428;
    const double C151537 = C150807 * C151535;
    const double C151554 = C150615 * C151535;
    const double C152606 = C152520 - C152569;
    const double C152570 = C152522 - C152523;
    const double C152198 = C152194 - C152197;
    const double C152609 = C152574 / C152184;
    const double C152207 = C152203 - C152206;
    const double C152625 = C152608 / C152188;
    const double C152280 = C152275 - C152279;
    const double C152613 = C152582 / C152184;
    const double C152287 = C152283 - C152286;
    const double C152629 = C152616 / C152188;
    const double C152322 = C152317 - C152321;
    const double C152615 = C152585 / C152184;
    const double C152329 = C152325 - C152328;
    const double C152631 = C152619 / C152188;
    const double C152622 = C152558 - C152601;
    const double C152602 = C152561 - C152562;
    const double C150526 = C152449 - C150525;
    const double C114719 = C114715 * C617;
    const double C14675 = C14665 + C14644;
    const double C14672 = C14662 + C14635;
    const double C14670 = C14660 + C14629;
    const double C37234 = C37228 + C14928;
    const double C37232 = C37226 + C14927;
    const double C14973 = C14961 + C14924;
    const double C14971 = C14959 + C14918;
    const double C15275 = C15263 + C15226;
    const double C15273 = C15261 + C15220;
    const double C38156 = C38152 + C16006;
    const double C37237 = C37231 + C16393;
    const double C38154 = C38150 + C16629;
    const double C14673 = C14663 + C14638;
    const double C14671 = C14661 + C14632;
    const double C37235 = C37229 + C14929;
    const double C37233 = C37227 + C14926;
    const double C193 = C187 + C164;
    const double C6517 = C6515 + C6496;
    const double C114755 = C152623 * C156;
    const double C114740 = C152623 * C155;
    const double C114737 = C152623 * C154;
    const double C114722 = C152623 * C153;
    const double C115039 = C152623 * C381;
    const double C115030 = C152623 * C385;
    const double C115021 = C152623 * C382;
    const double C115341 = C152623 * C626;
    const double C115323 = C152623 * C627;
    const double C116118 = C152623 * C1192;
    const double C142548 = C152623 * C384;
    const double C142538 = C152623 * C383;
    const double C143468 = C152623 * C1191;
    const double C143829 = C152623 * C1487;
    const double C143819 = C152623 * C1486;
    const double C144076 = C152623 * C1676;
    const double C144800 = C152623 * C2205;
    const double C62211 =
        (C152557 - C152603) / C150521 - (C152623 * C152457) / C150502;
    const double C114734 = C152605 * C626;
    const double C114725 = C152605 * C627;
    const double C115018 = C152605 * C1192;
    const double C142546 = C152605 * C1676;
    const double C142540 = C152605 * C1191;
    const double C143821 = C152605 * C2205;
    const double C62212 =
        (2 * C152461 + C152623) / C150521 - (C152605 * C152457) / C150502;
    const double C62213 = C152605 / C150521 - C152464 / C150548;
    const double C630 =
        (C150622 * C150629 + C150715 + C150715 +
         C150615 * (2 * ae * C150710 + C150615 * C150622 * C150638)) /
        C150520;
    const double C650 = C135 * C618;
    const double C15233 = C14622 * C618;
    const double C15223 = C14624 * C618;
    const double C45363 = C45351 * C618;
    const double C95719 = C95120 * C618;
    const double C114727 = C114715 * C618;
    const double C432 = C424 + C405;
    const double C14974 = C14962 + C14931;
    const double C1216 = C1212 + C1200;
    const double C14972 = C14960 + C14921;
    const double C16034 = C16028 + C16009;
    const double C1672 =
        (C150807 * C150629 + C150850 + C150850 +
         C150615 * (2 * ae * C150845 + C150615 * C150807 * C150638)) /
        C150520;
    const double C1685 = C135 * C1660;
    const double C16007 = C14624 * C1660;
    const double C16623 = C14622 * C1660;
    const double C45658 = C45351 * C1660;
    const double C96503 = C95120 * C1660;
    const double C115022 = C114715 * C1660;
    const double C150939 = C150938 + C150935;
    const double C194 = C188 + C167;
    const double C195 = C189 + C170;
    const double C439 = C431 + C401;
    const double C6518 = C6516 + C6502;
    const double C684 = C676 + C646;
    const double C7446 = C7445 + C7436;
    const double C438 = C430 + C398;
    const double C683 = C675 + C643;
    const double C7815 = C7811 + C7797;
    const double C8070 = C8065 + C8049;
    const double C157 =
        (4 * (2 * C150622 * C150638 + C150622 * C150648) +
         C150622 * (3 * C150648 +
                    C150622 * (2 * C150622 * C150646 +
                               C150622 * (C150646 + (C150641 * C150642 +
                                                     C150619 * bs[7] *
                                                         std::pow(C150617, 7)) *
                                                        C150618 * C150634)))) /
        C150520;
    const double C380 =
        ((yP - yQ) * (2 * C150622 * C150638 + C150622 * C150648)) / C150520;
    const double C386 =
        (C150629 + C150638 * C150634 + C150648 * std::pow(yP - yQ, 2)) /
        C150520;
    const double C625 =
        (2 * ae *
             (2 * C150622 * C150695 +
              C150622 * (C150695 + C150633 * C150632 * C150693 * C150634)) +
         C150615 * (2 * C150622 * C150638 + C150622 * C150648)) /
        C150520;
    const double C1193 =
        (2 * ae * C150807 * C150723 + C150615 * C150807 * C150648) / C150520;
    const double C150976 = C150972 + C150966;
    const double C1838 = C152449 * C1485;
    const double C16837 = C152557 * C1485;
    const double C47578 = C45343 * C1485;
    const double C97333 = C95115 * C1485;
    const double C116942 = C152623 * C1485;
    const double C2054 = C152449 * C1675;
    const double C14935 = C152461 * C1675;
    const double C17149 = C152557 * C1675;
    const double C45669 = C45344 * C1675;
    const double C47886 = C45343 * C1675;
    const double C95431 = C152461 * C1675;
    const double C97645 = C95115 * C1675;
    const double C115033 = C152605 * C1675;
    const double C117250 = C152623 * C1675;
    const double C7792 =
        (4 * (2 * C151052 + C150807 * C151109) +
         C150807 * (3 * C151109 +
                    C150807 * (2 * C150807 * C150646 +
                               C150807 * (C150646 + C150658 * C150819)))) /
        C150520;
    const double C8775 =
        (2 * ae * (3 * C150858 + C150807 * C151125) +
         C150615 * (3 * C151109 +
                    C150807 * (2 * C150807 * C150646 +
                               C150807 * (C150646 + C150658 * C150819)))) /
        C150520;
    const double C151176 = C151170 + C151171;
    const double C151296 = C150615 * C151291;
    const double C151657 = 2 * C151291;
    const double C150741 = C150739 * ae;
    const double C621 = (C150615 * (3 * C150723 + C150622 * C150742) +
                         (3 * C150720 + C150622 * C150739) * ae) /
                        C150502;
    const double C1188 =
        (C150615 * C150807 * C150742 + C150807 * C150739 * ae) / C150502;
    const double C141 = 4 * (2 * C150711 + C150622 * C150720) +
                        C150622 * (3 * C150720 + C150622 * C150739);
    const double C363 = 2 * C150711 + C150622 * C150720 + C150739 * C150819;
    const double C364 = C150807 * (3 * C150720 + C150622 * C150739);
    const double C608 = 2 * C150711 + C150622 * C150720 + C150739 * C150619;
    const double C609 = C150615 * (3 * C150720 + C150622 * C150739);
    const double C1182 = C150615 * C150807 * C150739;
    const double C1467 =
        2 * C150807 * C150739 + C150807 * (C150739 + C150761 * C150819);
    const double C1649 = C150615 * (C150739 + C150761 * C150819);
    const double C2595 =
        2 * C150615 * C150739 + C150615 * (C150739 + C150761 * C150619);
    const double C150835 = C150833 + C150834;
    const double C2827 = C134 * C1646;
    const double C16017 = C14623 * C1646;
    const double C18235 = C14621 * C1646;
    const double C9845 = C134 * C3131;
    const double C18233 = C14623 * C3131;
    const double C150915 = ae * C150912;
    const double C150914 = C150615 * C150912;
    const double C150990 = 2 * C150912;
    const double C150871 = C150869 + C150870;
    const double C2211 = C135 * C2202;
    const double C16390 = C14624 * C2202;
    const double C17360 = C14622 * C2202;
    const double C96886 = C95120 * C2202;
    const double C7800 = C134 * C1472;
    const double C38990 = C14621 * C1472;
    const double C8052 = C134 * C1654;
    const double C17146 = C14623 * C1654;
    const double C40372 = C14621 * C1654;
    const double C8565 = C134 * C2198;
    const double C16834 = C14623 * C2198;
    const double C39293 = C14621 * C2198;
    const double C26737 = C134 * C10053;
    const double C40370 = C14623 * C10053;
    const double C18453 = C14623 * C2600;
    const double C151312 = C150650 + C150979;
    const double C150980 = C150728 + C150977;
    const double C151075 = ae * C151072;
    const double C151074 = C150615 * C151072;
    const double C151193 = 2 * C151072;
    const double C151128 = C151126 * ae;
    const double C8772 = (C150615 * (3 * C150858 + C150807 * C151125) +
                          (3 * C150859 + C150807 * C151126) * ae) /
                         C150502;
    const double C7786 = 4 * (2 * C150846 + C150807 * C150859) +
                         C150807 * (3 * C150859 + C150807 * C151126);
    const double C8036 = 2 * C150846 + C150807 * C150859 + C151126 * C150619;
    const double C8769 = C150615 * (3 * C150859 + C150807 * C151126);
    const double C26938 =
        2 * C150615 * C151126 + C150615 * (C151126 + C151408 * C150619);
    const double C151249 = ae * C151246;
    const double C151248 = C150615 * C151246;
    const double C151445 = 2 * C151246;
    const double C40776 = C14623 * C9344;
    const double C151585 = C151166 + C151182;
    const double C151183 = C151053 + C151180;
    const double C151301 = C151298 * ae;
    const double C17921 = 4 * (2 * C150933 + C150615 * C150952) +
                          C150615 * (3 * C150952 + C150615 * C151298);
    const double C151671 = C151658 + C151295;
    const double C151300 = C151297 + C151289;
    const double C150726 = ae * C150725;
    const double C619 = (C150704 + C150695 * C150634 + C150615 * C150725 +
                         C150615 * C150720 * ae) /
                        C150502;
    const double C184 = C171 + C172;
    const double C14666 = C14646 + C14647;
    const double C421 = C393 + C394;
    const double C14966 = C14942 + C14943;
    const double C425 = C407 + C408;
    const double C14964 = C14936 + C14937;
    const double C666 = C638 + C639;
    const double C14664 = C14640 + C14641;
    const double C15268 = C15244 + C15245;
    const double C1213 = C1202 + C1203;
    const double C14958 = C14914 + C14915;
    const double C16030 = C16014 + C16015;
    const double C1841 = C1835 + C1493;
    const double C16841 = C16832 + C16389;
    const double C2057 = C2051 + C1687;
    const double C14965 = C14939 + C14940;
    const double C17153 = C17144 + C16625;
    const double C150843 = ae * C150842;
    const double C1659 =
        (C150807 * C150710 + C150615 * C150842 + C150615 * C150839 * ae) /
        C150502;
    const double C150927 = C150710 + C150925;
    const double C1845 = C1842 + C1494;
    const double C16847 = C16843 + C16391;
    const double C2061 = C2058 + C1688;
    const double C14975 = C14963 + C14934;
    const double C17159 = C17155 + C16627;
    const double C150863 = ae * C150862;
    const double C1665 = (C150704 + C150695 * C150819 + C150615 * C150862 +
                          C150615 * C150859 * ae) /
                         C150502;
    const double C7810 = C7802 + C1496;
    const double C38514 = C38502 + C16394;
    const double C8784 = C8779 + C2210;
    const double C37230 = C37221 + C16392;
    const double C38772 = C38754 + C17358;
    const double C151286 = C151276 + C150956;
    const double C150958 = C150957 + C150951;
    const double C151062 = C150845 + C151060;
    const double C150661 = C150622 * C150660;
    const double C150664 = 3 * C150660;
    const double C150989 = C150615 * C150660;
    const double C151080 = C150807 * C150660;
    const double C1484 =
        (2 * C150807 * C150648 +
         C150807 * (C150648 + C150660 * std::pow(C150807, 2))) /
        C150520;
    const double C1674 = (2 * ae * (C150723 + C150738 * C150819) +
                          C150615 * (C150648 + C150660 * C150819)) /
                         C150520;
    const double C151112 = C150650 + C151111;
    const double C151197 = C150615 * C151192;
    const double C151390 = 2 * C151192;
    const double C151327 = C151323 + C151314;
    const double C7801 = C152449 * C1488;
    const double C38991 = C152557 * C1488;
    const double C105729 = C95115 * C1488;
    const double C8566 = C152449 * C2206;
    const double C16835 = C152461 * C2206;
    const double C39294 = C152557 * C2206;
    const double C47576 = C45344 * C2206;
    const double C97331 = C152461 * C2206;
    const double C106740 = C95115 * C2206;
    const double C116940 = C152605 * C2206;
    const double C151387 = C150807 * C151386;
    const double C151444 = C150615 * C151386;
    const double C151511 = 3 * C151386;
    const double C151600 = C151596 + C151587;
    const double C151682 = C150615 * C151677;
    const double C151850 = 2 * C151677;
    const double C150676 = C150622 * C150675;
    const double C151114 = C150675 * C150819;
    const double C151218 = C150807 * C150675;
    const double C151350 = C150615 * C150675;
    const double C1489 = (3 * (C150648 + C150660 * C150819) +
                          C150807 * (2 * C150807 * C150660 +
                                     C150807 * (C150660 + C150675 * C150819))) /
                         C150520;
    const double C151393 = C150665 + C151392;
    const double C151727 = C151722 + C151710;
    const double C151767 = C150615 * C151759;
    const double C151516 = C150807 * C151515;
    const double C151623 = C150615 * C151515;
    const double C151816 = C151809 + C151810;
    const double C151879 = C150615 * C151874;
    const double C150791 = C150622 * C150789;
    const double C150884 = C150789 * C150819;
    const double C151017 = C150789 * C150619;
    const double C151016 = C150615 * C150789;
    const double C151015 = C150789 * ae;
    const double C151096 = C150807 * C150789;
    const double C151154 = C150807 * C151152;
    const double C151267 = C150615 * C151152;
    const double C151266 = C151152 * ae;
    const double C10054 =
        2 * C150615 * C150877 + C150615 * (C150877 + C151152 * C150619);
    const double C151231 = C151082 + C151227;
    const double C151230 = C151226 * ae;
    const double C151229 = C151224 + C151225;
    const double C151366 = C150615 * C151362;
    const double C151365 = C151362 * ae;
    const double C151367 = ae * C151360;
    const double C151364 = C150615 * C151360;
    const double C151431 = C151422 + C151429;
    const double C151476 = C151137 + C151472;
    const double C151475 = C151471 * ae;
    const double C151474 = C151469 + C151470;
    const double C151734 = C151718 + C151730;
    const double C151733 = C150776 + C151728;
    const double C151779 = C150615 * C151775;
    const double C151778 = C151775 * ae;
    const double C151780 = ae * C151773;
    const double C151777 = C150615 * C151773;
    const double C151538 = C150807 * C151536;
    const double C151557 = C151536 * C150619;
    const double C151556 = C150615 * C151536;
    const double C151555 = C151536 * ae;
    const double C151639 = C150615 * C151635;
    const double C151638 = C151635 * ae;
    const double C151640 = ae * C151633;
    const double C151637 = C150615 * C151633;
    const double C151827 = C151805 + C151823;
    const double C151826 = C151523 + C151821;
    const double C151885 = C150615 * C151881;
    const double C151884 = C151881 * ae;
    const double C151883 = C151880 + C151870;
    const double C150766 = C150622 * C150764;
    const double C150774 = 4 * C150764;
    const double C150824 = C150807 * C150764;
    const double C150898 = C150615 * C150764;
    const double C151011 = ae * C150764;
    const double C1475 =
        (2 * C150807 * C150742 + C150807 * (C150742 + C150764 * C150819)) /
        C150502;
    const double C1661 = (C150615 * (C150742 + C150764 * C150819) +
                          (C150739 + C150761 * C150819) * ae) /
                         C150502;
    const double C150878 = C150615 * C150876;
    const double C2207 = (2 * ae * (2 * C150831 + C150807 * C150876) +
                          C150615 * (2 * C150807 * C150660 +
                                     C150807 * (C150660 + C150675 * C150819))) /
                         C150520;
    const double C1481 = (3 * (C150723 + C150738 * C150819) +
                          C150807 * (2 * C150831 + C150807 * C150876)) /
                         C150502;
    const double C2203 = (C150615 * (2 * C150831 + C150807 * C150876) +
                          (2 * C150832 + C150807 * C150877) * ae) /
                         C150502;
    const double C151002 = ae * C150996;
    const double C151000 = C150615 * C150996;
    const double C151352 = 2 * C150996;
    const double C151086 = C151083 + C151084;
    const double C151222 = 2 * C151217;
    const double C151140 = C151132 + C151138;
    const double C151257 = C151254 + C151255;
    const double C151473 = 2 * C151466;
    const double C151208 = ae * C151203;
    const double C151206 = C150615 * C151203;
    const double C151761 = 2 * C151203;
    const double C151708 = C150665 + C151331;
    const double C151333 = C150749 + C151328;
    const double C151409 = C150807 * C151407;
    const double C151489 = C150615 * C151407;
    const double C151521 = 4 * C151407;
    const double C151551 = ae * C151407;
    const double C151457 = ae * C151451;
    const double C151455 = C150615 * C151451;
    const double C151625 = 2 * C151451;
    const double C151797 = C151512 + C151604;
    const double C151606 = C151168 + C151601;
    const double C151867 = C151851 + C151681;
    const double C151686 = C151683 + C151674;
    const double C150765 = C150751 + C150763;
    const double C150827 = C150825 * ae;
    const double C1645 = C150807 * C150739 + C150825 * C150619;
    const double C150902 = C150900 * ae;
    const double C7798 = C134 * C1473;
    const double C8050 = C134 * C1655;
    const double C17142 = C14623 * C1655;
    const double C8562 = C134 * C2199;
    const double C16830 = C14623 * C2199;
    const double C18449 = C14623 * C2601;
    const double C151143 = C151141 * ae;
    const double C7787 = 4 * (2 * C150839 + C150807 * C150868) +
                         C150807 * (3 * C150868 + C150807 * C151141);
    const double C8037 = 2 * C150839 + C150807 * C150868 + C151141 * C150619;
    const double C8770 = C150615 * (3 * C150868 + C150807 * C151141);
    const double C88834 = C14623 * C9345;
    const double C151337 = C151334 * ae;
    const double C17922 = 4 * (2 * C150922 + C150615 * C150975) +
                          C150615 * (3 * C150975 + C150615 * C151334);
    const double C151412 = C151400 + C151410;
    const double C151493 = C151491 * ae;
    const double C40772 = C14623 * C26241;
    const double C151610 = C151607 * ae;
    const double C40067 = 4 * (2 * C151057 + C150615 * C151179) +
                          C150615 * (3 * C151179 + C150615 * C151607);
    const double C151691 = C151669 + C151688;
    const double C175 = C135 * C149;
    const double C14656 = C14622 * C149;
    const double C411 = C135 * C375;
    const double C14952 = C14622 * C375;
    const double C414 = C135 * C376;
    const double C14955 = C14622 * C376;
    const double C7804 = C135 * C7789;
    const double C38510 = C14622 * C7789;
    const double C150796 = C150775 + C150794;
    const double C150885 = C150764 + C150883;
    const double C151097 = C150615 * C151095;
    const double C151155 = C151147 + C151153;
    const double C151432 = C150807 * C151430;
    const double C151500 = C150615 * C151430;
    const double C151539 = C151522 + C151537;
    const double C123 =
        (C152518 - C152568) / C150521 - (C152606 * C152161) / C150502;
    const double C124 =
        (2 * C152170 + C152606) / C150521 - (C152570 * C152161) / C150502;
    const double C125 = C152570 / C150521 - C152173 / C150548;
    const double C152526 = C152198 * C152186;
    const double C152576 = C152531 + C152198;
    const double C152534 = C152207 / C152188;
    const double C152530 = C152207 * C152186;
    const double C829 = C152625 - (C152198 * C152189) / C152184;
    const double C152544 = C152280 * C152274;
    const double C152591 = C152546 + C152280;
    const double C152548 = C152287 / C152188;
    const double C152545 = C152287 * C152274;
    const double C1823 = C152629 - (C152280 * C152276) / C152184;
    const double C152550 = C152322 * C152316;
    const double C152597 = C152552 + C152322;
    const double C152554 = C152329 / C152188;
    const double C152551 = C152329 * C152316;
    const double C2973 = C152631 - (C152322 * C152318) / C152184;
    const double C31461 =
        (C152555 - C152600) / C150521 - (C152622 * C152431) / C150502;
    const double C31462 =
        (2 * C152435 + C152622) / C150521 - (C152602 * C152431) / C150502;
    const double C31463 = C152602 / C150521 - C152438 / C150548;
    const double C150527 = C150526 * C150523;
    const double C150551 = C150526 * ae;
    const double C45347 =
        ((-(0 * be) / C150502) / C150521 -
         ((0 - (C150500 * C150519) / C150502) * be) / C150502) /
            C150521 -
        ((C150500 *
              ((-C150519 / C150502) / C150521 - (C150526 * be) / C150502) +
          C95115) *
         be) /
            C150502 +
        (-C150522 / C150502) / C150521 - (0 * be) / C150502;
    const double C45349 =
        ((-C150519 / C150502) / C150521 - (C150526 * be) / C150502) / C150521 -
        ((C150500 * ((-C150522 / C150502) / C150521 - (0 * be) / C150502) +
          C152461) *
         be) /
            C150502;
    const double C95118 =
        (-C150519 / C150502) / C150521 - (C150526 * be) / C150502;
    const double C14685 = C14675 + C14645;
    const double C14682 = C14672 + C14636;
    const double C14680 = C14670 + C14630;
    const double C37240 = C37234 + C37218;
    const double C37238 = C37232 + C37214;
    const double C14985 = C14973 + C14925;
    const double C14983 = C14971 + C14919;
    const double C15287 = C15275 + C15227;
    const double C15285 = C15273 + C15221;
    const double C38160 = C38156 + C38148;
    const double C37243 = C37237 + C37224;
    const double C38158 = C38154 + C38144;
    const double C14683 = C14673 + C14639;
    const double C14681 = C14671 + C14633;
    const double C37241 = C37235 + C37220;
    const double C37239 = C37233 + C37216;
    const double C199 = C193 * C152419;
    const double C6264 = C193 * C152555;
    const double C23226 = C193 * C23220;
    const double C67860 = C193 * C67854;
    const double C76071 = C193 * C152622;
    const double C651 = C152449 * C630;
    const double C15234 = C152557 * C630;
    const double C15224 = C152461 * C630;
    const double C45364 = C45345 * C630;
    const double C45968 = C45343 * C630;
    const double C45956 = C45344 * C630;
    const double C95730 = C95115 * C630;
    const double C95720 = C152461 * C630;
    const double C114728 = C114709 * C630;
    const double C115332 = C152623 * C630;
    const double C115320 = C152605 * C630;
    const double C669 = C649 + C650;
    const double C15264 = C15232 + C15233;
    const double C15262 = C15222 + C15223;
    const double C440 = C432 + C406;
    const double C14986 = C14974 + C14932;
    const double C1220 = C1216 + C1201;
    const double C14984 = C14972 + C14922;
    const double C16040 = C16034 + C16010;
    const double C8047 = C152449 * C1672;
    const double C38146 = C152461 * C1672;
    const double C38747 = C152557 * C1672;
    const double C54171 = C45345 * C1672;
    const double C55095 = C45344 * C1672;
    const double C55699 = C45343 * C1672;
    const double C105259 = C152461 * C1672;
    const double C106047 = C95115 * C1672;
    const double C142542 = C114709 * C1672;
    const double C143466 = C152605 * C1672;
    const double C144070 = C152623 * C1672;
    const double C8059 = C8046 + C1685;
    const double C38151 = C38145 + C16007;
    const double C38768 = C38746 + C16623;
    const double C150940 = ae * C150939;
    const double C2606 =
        (2 * C150707 + C150615 * C150939 + (C150702 + C150623 * C150619) * ae) /
        C150502;
    const double C200 = C194 * C152419;
    const double C6266 = C194 * C152555;
    const double C23231 = C194 * C23220;
    const double C67862 = C194 * C67854;
    const double C76076 = C194 * C152622;
    const double C201 = C195 * C152419;
    const double C6269 = C195 * C152555;
    const double C23232 = C195 * C23220;
    const double C67865 = C195 * C67854;
    const double C76077 = C195 * C152622;
    const double C447 = C439 * C152419;
    const double C6265 = C439 * C152435;
    const double C6500 = C439 * C152555;
    const double C23227 = C439 * C23221;
    const double C23458 = C439 * C23220;
    const double C67861 = C439 * C152435;
    const double C68094 = C439 * C67854;
    const double C76072 = C439 * C152602;
    const double C76303 = C439 * C152622;
    const double C692 = C684 * C152419;
    const double C6740 = C684 * C152555;
    const double C23688 = C684 * C23220;
    const double C68326 = C684 * C67854;
    const double C76533 = C684 * C152622;
    const double C446 = C438 * C152419;
    const double C6267 = C438 * C152435;
    const double C6498 = C438 * C152555;
    const double C23230 = C438 * C23221;
    const double C23462 = C438 * C23220;
    const double C67863 = C438 * C152435;
    const double C68092 = C438 * C67854;
    const double C76075 = C438 * C152602;
    const double C76307 = C438 * C152622;
    const double C691 = C683 * C152419;
    const double C6738 = C683 * C152555;
    const double C23692 = C683 * C23220;
    const double C68324 = C683 * C67854;
    const double C76537 = C683 * C152622;
    const double C176 = C152449 * C157;
    const double C14657 = C152557 * C157;
    const double C95153 = C95115 * C157;
    const double C395 = C152449 * C380;
    const double C14944 = C152557 * C380;
    const double C46234 = C45343 * C380;
    const double C95440 = C95115 * C380;
    const double C115598 = C152623 * C380;
    const double C409 = C152449 * C386;
    const double C14938 = C152557 * C386;
    const double C45690 = C45343 * C386;
    const double C95434 = C95115 * C386;
    const double C115054 = C152623 * C386;
    const double C640 = C152449 * C625;
    const double C14642 = C152461 * C625;
    const double C15246 = C152557 * C625;
    const double C45379 = C45344 * C625;
    const double C46446 = C45343 * C625;
    const double C95138 = C152461 * C625;
    const double C95742 = C95115 * C625;
    const double C114743 = C152605 * C625;
    const double C115810 = C152623 * C625;
    const double C1204 = C152449 * C1193;
    const double C14916 = C152461 * C1193;
    const double C16016 = C152557 * C1193;
    const double C45678 = C45344 * C1193;
    const double C46769 = C45343 * C1193;
    const double C95412 = C152461 * C1193;
    const double C96512 = C95115 * C1193;
    const double C115042 = C152605 * C1193;
    const double C116133 = C152623 * C1193;
    const double C24737 = C152449 * C7792;
    const double C38511 = C152557 * C7792;
    const double C135587 = C95115 * C7792;
    const double C25678 = C152449 * C8775;
    const double C38505 = C152461 * C8775;
    const double C39501 = C152557 * C8775;
    const double C55456 = C45344 * C8775;
    const double C105731 = C152461 * C8775;
    const double C136510 = C95115 * C8775;
    const double C143827 = C152605 * C8775;
    const double C150744 = C150743 + C150741;
    const double C659 = C135 * C621;
    const double C14650 = C14624 * C621;
    const double C15257 = C14622 * C621;
    const double C95146 = C95120 * C621;
    const double C1206 = C135 * C1188;
    const double C14946 = C14624 * C1188;
    const double C16024 = C14622 * C1188;
    const double C95442 = C95120 * C1188;
    const double C174 = C134 * C141;
    const double C14655 = C14621 * C141;
    const double C410 = C134 * C363;
    const double C14951 = C14621 * C363;
    const double C413 = C134 * C364;
    const double C15497 = C14621 * C364;
    const double C655 = C134 * C608;
    const double C15253 = C14621 * C608;
    const double C15247 = C14623 * C608;
    const double C658 = C134 * C609;
    const double C14649 = C14623 * C609;
    const double C15705 = C14621 * C609;
    const double C1205 = C134 * C1182;
    const double C14945 = C14623 * C1182;
    const double C16023 = C14621 * C1182;
    const double C1833 = C134 * C1467;
    const double C2049 = C134 * C1649;
    const double C14948 = C14623 * C1649;
    const double C2981 = C134 * C2595;
    const double C15250 = C14623 * C2595;
    const double C150836 = ae * C150835;
    const double C1658 =
        (C150807 * C150723 + C150615 * C150835 + C150615 * C150832 * ae) /
        C150502;
    const double C150916 = C150723 + C150914;
    const double C150872 = ae * C150871;
    const double C1666 = (C150710 + C150728 * C150819 + C150615 * C150871 +
                          C150615 * C150868 * ae) /
                         C150502;
    const double C7809 = C7800 + C1497;
    const double C38995 = C38990 + C16396;
    const double C8569 = C8565 + C2211;
    const double C16842 = C16834 + C16390;
    const double C39298 = C39293 + C17360;
    const double C151322 = C151312 + C150979;
    const double C150981 = C150980 + C150974;
    const double C151076 = C150838 + C151074;
    const double C151129 = C151127 + C151128;
    const double C8781 = C135 * C8772;
    const double C16395 = C14624 * C8772;
    const double C38765 = C14622 * C8772;
    const double C96891 = C95120 * C8772;
    const double C24736 = C134 * C7786;
    const double C38509 = C14621 * C7786;
    const double C24972 = C134 * C8036;
    const double C38761 = C14621 * C8036;
    const double C38756 = C14623 * C8036;
    const double C25677 = C134 * C8769;
    const double C38504 = C14623 * C8769;
    const double C39500 = C14621 * C8769;
    const double C33903 = C134 * C26938;
    const double C38758 = C14623 * C26938;
    const double C151250 = C150858 + C151248;
    const double C151595 = C151585 + C151182;
    const double C151184 = C151183 + C151178;
    const double C151303 = ae * C151300;
    const double C151302 = C150615 * C151300;
    const double C151662 = 3 * C151300;
    const double C631 = (C150629 + C150638 * C150634 + C150726 + C150726 +
                         C150615 * (2 * ae * C150723 + C150615 * C150648)) /
                        C150520;
    const double C653 = C135 * C619;
    const double C15239 = C14622 * C619;
    const double C15217 = C14624 * C619;
    const double C45366 = C45351 * C619;
    const double C95713 = C95120 * C619;
    const double C114730 = C114715 * C619;
    const double C190 = C184 + C172;
    const double C14676 = C14666 + C14647;
    const double C429 = C421 + C394;
    const double C14978 = C14966 + C14943;
    const double C433 = C425 + C408;
    const double C14976 = C14964 + C14937;
    const double C674 = C666 + C639;
    const double C14674 = C14664 + C14641;
    const double C15280 = C15268 + C15245;
    const double C1217 = C1213 + C1203;
    const double C14970 = C14958 + C14915;
    const double C16036 = C16030 + C16015;
    const double C1844 = C1841 + C1493;
    const double C16845 = C16841 + C16389;
    const double C2060 = C2057 + C1687;
    const double C14977 = C14965 + C14940;
    const double C17157 = C17153 + C16625;
    const double C1671 =
        (C150807 * C150816 + C150843 + C150843 +
         C150615 * (2 * ae * C150838 + C150615 * C150807 * C150650)) /
        C150520;
    const double C1684 = C135 * C1659;
    const double C16012 = C14624 * C1659;
    const double C16621 = C14622 * C1659;
    const double C45650 = C45351 * C1659;
    const double C96508 = C95120 * C1659;
    const double C115014 = C114715 * C1659;
    const double C150928 = C150927 + C150924;
    const double C1848 = C1845 + C1838;
    const double C16851 = C16847 + C16837;
    const double C2064 = C2061 + C2054;
    const double C14987 = C14975 + C14935;
    const double C17163 = C17159 + C17149;
    const double C1677 = (C150629 + C150638 * C150819 + C150863 + C150863 +
                          C150615 * (2 * ae * C150858 +
                                     C150615 * (C150638 + C150646 * C150819))) /
                         C150520;
    const double C1690 = C135 * C1665;
    const double C16630 = C14622 * C1665;
    const double C16628 = C14624 * C1665;
    const double C45663 = C45351 * C1665;
    const double C97124 = C95120 * C1665;
    const double C115027 = C114715 * C1665;
    const double C7814 = C7810 + C1496;
    const double C38518 = C38514 + C16394;
    const double C8785 = C8784 + C2210;
    const double C37236 = C37230 + C16392;
    const double C38780 = C38772 + C17358;
    const double C151299 = C151286 + C151296;
    const double C150960 = ae * C150958;
    const double C150959 = C150615 * C150958;
    const double C151279 = 3 * C150958;
    const double C151063 = C151062 + C151059;
    const double C150662 = C150654 + C150661;
    const double C150999 = C150995 + C150989;
    const double C1836 = C152449 * C1484;
    const double C16833 = C152557 * C1484;
    const double C97329 = C95115 * C1484;
    const double C2052 = C152449 * C1674;
    const double C14941 = C152461 * C1674;
    const double C17145 = C152557 * C1674;
    const double C45687 = C45344 * C1674;
    const double C95437 = C152461 * C1674;
    const double C97641 = C95115 * C1674;
    const double C115051 = C152605 * C1674;
    const double C7793 =
        (4 * (2 * C151066 + C150807 * C151112) +
         C150807 *
             (3 * C151112 +
              C150807 * (2 * C150807 * C150665 +
                         C150807 * (C150665 + C150622 * C150673 * C150819)))) /
        C150520;
    const double C151202 = C151196 + C151197;
    const double C151332 = C150615 * C151327;
    const double C151707 = 2 * C151327;
    const double C151388 = C151384 + C151387;
    const double C151454 = C151450 + C151444;
    const double C151605 = C150615 * C151600;
    const double C151796 = 2 * C151600;
    const double C151685 = C151671 + C151682;
    const double C150677 = C150669 + C150676;
    const double C151115 = C150660 + C151114;
    const double C151223 = C150615 * C151218;
    const double C151363 = C151359 + C151350;
    const double C7799 = C152449 * C1489;
    const double C151394 = C150807 * C151393;
    const double C151467 = C150615 * C151393;
    const double C151732 = C150615 * C151727;
    const double C151772 = C151766 + C151767;
    const double C151517 = C151514 + C151516;
    const double C151636 = C151632 + C151623;
    const double C151820 = C150615 * C151816;
    const double C150793 = C150779 + C150791;
    const double C150886 = C150761 + C150884;
    const double C151021 = C150761 + C151017;
    const double C151020 = C151016 * ae;
    const double C151019 = C151014 + C151015;
    const double C151099 = C150615 * C151096;
    const double C151098 = C151096 * ae;
    const double C3132 =
        2 * C150615 * C150825 + C150615 * (C150825 + C151096 * C150619);
    const double C151156 = C151149 + C151154;
    const double C151269 = C151267 * ae;
    const double C151268 = C151265 + C151266;
    const double C151233 = C151231 * ae;
    const double C9346 = 3 * (C150832 + C151082 * C150619) +
                         C150615 * (2 * C151085 + C150615 * C151231);
    const double C151234 = ae * C151229;
    const double C151232 = C150615 * C151229;
    const double C151370 = C151357 + C151366;
    const double C151369 = C150760 + C151364;
    const double C151433 = C150807 * C151431;
    const double C151502 = C150615 * C151431;
    const double C151501 = C151431 * ae;
    const double C26939 =
        2 * C150615 * C151141 + C150615 * (C151141 + C151431 * C150619);
    const double C151479 = C151476 * ae;
    const double C26242 = 3 * (C150868 + C151137 * C150619) +
                          C150615 * (2 * C151256 + C150615 * C151476);
    const double C151480 = ae * C151474;
    const double C151478 = C150615 * C151474;
    const double C151738 = C150615 * C151734;
    const double C151737 = C151734 * ae;
    const double C151736 = C151733 + C151724;
    const double C151783 = C151764 + C151779;
    const double C151782 = C151194 + C151777;
    const double C151540 = C151526 + C151538;
    const double C151561 = C151408 + C151557;
    const double C151560 = C151556 * ae;
    const double C151559 = C151554 + C151555;
    const double C151643 = C151630 + C151639;
    const double C151642 = C151403 + C151637;
    const double C151831 = C150615 * C151827;
    const double C151830 = C151827 * ae;
    const double C151829 = C151826 + C151818;
    const double C151888 = C151863 + C151885;
    const double C151889 = ae * C151883;
    const double C151887 = C150615 * C151883;
    const double C150768 = C150748 + C150766;
    const double C150826 = C150615 * C150824;
    const double C150901 = C150898 + C150899;
    const double C151018 = 2 * C151011;
    const double C1492 = C135 * C1475;
    const double C16838 = C14622 * C1475;
    const double C1686 = C135 * C1661;
    const double C14949 = C14624 * C1661;
    const double C17150 = C14622 * C1661;
    const double C95445 = C95120 * C1661;
    const double C150880 = C150878 + C150879;
    const double C8563 = C152449 * C2207;
    const double C16831 = C152461 * C2207;
    const double C97327 = C152461 * C2207;
    const double C1498 = C135 * C1481;
    const double C16398 = C14622 * C1481;
    const double C2212 = C135 * C2203;
    const double C16388 = C14624 * C2203;
    const double C17362 = C14622 * C2203;
    const double C96884 = C95120 * C2203;
    const double C151348 = C150660 + C151002;
    const double C151003 = C150738 + C151000;
    const double C151089 = ae * C151086;
    const double C151088 = C150615 * C151086;
    const double C151219 = 2 * C151086;
    const double C151142 = C150615 * C151140;
    const double C8776 =
        (2 * ae * (3 * C150867 + C150807 * C151140) +
         C150615 *
             (3 * C151112 +
              C150807 * (2 * C150807 * C150665 +
                         C150807 * (C150665 + C150622 * C150673 * C150819)))) /
        C150520;
    const double C7790 = (4 * (2 * C150838 + C150807 * C150867) +
                          C150807 * (3 * C150867 + C150807 * C151140)) /
                         C150502;
    const double C8773 = (C150615 * (3 * C150867 + C150807 * C151140) +
                          (3 * C150868 + C150807 * C151141) * ae) /
                         C150502;
    const double C151260 = ae * C151257;
    const double C151259 = C150615 * C151257;
    const double C151468 = 2 * C151257;
    const double C151757 = C151192 + C151208;
    const double C151209 = C151067 + C151206;
    const double C151721 = C151708 + C151331;
    const double C151336 = C151333 + C151325;
    const double C151411 = C151397 + C151409;
    const double C151492 = C151489 + C151490;
    const double C151558 = 2 * C151551;
    const double C151621 = C151386 + C151457;
    const double C151458 = C151121 + C151455;
    const double C151808 = C151797 + C151604;
    const double C151609 = C151606 + C151598;
    const double C151882 = C151867 + C151879;
    const double C151692 = ae * C151686;
    const double C151690 = C150615 * C151686;
    const double C151856 = 3 * C151686;
    const double C150767 = C150765 * ae;
    const double C142 = 5 * (3 * C150720 + C150622 * C150739) +
                        C150622 * (4 * C150739 + C150622 * C150765);
    const double C365 = 3 * C150720 + C150622 * C150739 + C150765 * C150819;
    const double C366 = C150807 * (4 * C150739 + C150622 * C150765);
    const double C610 = 3 * C150720 + C150622 * C150739 + C150765 * C150619;
    const double C611 = C150615 * (4 * C150739 + C150622 * C150765);
    const double C1183 = C150615 * C150807 * C150765;
    const double C2825 = C134 * C1645;
    const double C16020 = C14623 * C1645;
    const double C24734 = C134 * C7787;
    const double C24970 = C134 * C8037;
    const double C39291 = C14623 * C8037;
    const double C25469 = C134 * C8770;
    const double C38988 = C14623 * C8770;
    const double C151414 = C151412 * ae;
    const double C24727 = 5 * (3 * C150859 + C150807 * C151126) +
                          C150807 * (4 * C151126 + C150807 * C151412);
    const double C24963 = 3 * C150859 + C150807 * C151126 + C151412 * C150619;
    const double C25670 = C150615 * (4 * C151126 + C150807 * C151412);
    const double C151695 = C151691 * ae;
    const double C48656 = 5 * (3 * C150952 + C150615 * C151298) +
                          C150615 * (4 * C151298 + C150615 * C151691);
    const double C150798 = C150622 * C150796;
    const double C151034 = C150807 * C150796;
    const double C151041 = C150615 * C150796;
    const double C150887 = C150615 * C150885;
    const double C1482 = (3 * (C150742 + C150764 * C150819) +
                          C150807 * (2 * C150824 + C150807 * C150885)) /
                         C150502;
    const double C151157 = C150615 * C151155;
    const double C7791 = (4 * (2 * C150831 + C150807 * C150876) +
                          C150807 * (3 * C150876 + C150807 * C151155)) /
                         C150502;
    const double C151434 = C151418 + C151432;
    const double C151541 = C150807 * C151539;
    const double C151574 = C150615 * C151539;
    const double C152572 = C152526 / C152184;
    const double C152610 = C152576 / C152188;
    const double C152611 = C152578 + C152534;
    const double C831 = C152534 - C152205 / C152202;
    const double C152575 = C152530 / C152184;
    const double C152588 = C152544 / C152184;
    const double C152617 = C152591 / C152188;
    const double C152618 = C152592 + C152548;
    const double C1825 = C152548 - C152285 / C152202;
    const double C152590 = C152545 / C152184;
    const double C152594 = C152550 / C152184;
    const double C152620 = C152597 / C152188;
    const double C152621 = C152598 + C152554;
    const double C2975 = C152554 - C152327 / C152202;
    const double C152596 = C152551 / C152184;
    const double C150534 = C150500 * C150527;
    const double C45346 =
        (-(be * -2 * C150519) / C150520) / C150521 -
        ((2 * ((-C150519 / C150502) / C150521 - (C150526 * be) / C150502) -
          (C150500 *
           ((-4 * C150508) / C150502 - (C150500 * C150527) / C150502) * be) /
              C150502) *
         be) /
            C150502 -
        C150527 / (2 * C150520);
    const double C45350 = (-C150527 / C150502) / (4 * C150520);
    const double C62221 = (-C150527 / C150502) / (4 * C150545);
    const double C95119 = (-C150527 / C150502) / C150521;
    const double C114714 = (-C150527 / C150502) / (4 * C150520);
    const double C150558 = C150551 / C150502;
    const double C45392 = C45347 * C149;
    const double C45390 = C45347 * C148;
    const double C45375 = C45347 * C147;
    const double C45372 = C45347 * C146;
    const double C45357 = C45347 * C145;
    const double C45353 = C45347 * C144;
    const double C45694 = C45347 * C375;
    const double C45693 = C45347 * C368;
    const double C45689 = C45347 * C374;
    const double C45674 = C45347 * C369;
    const double C45665 = C45347 * C373;
    const double C45661 = C45347 * C372;
    const double C45660 = C45347 * C371;
    const double C45656 = C45347 * C370;
    const double C45995 = C45347 * C613;
    const double C45991 = C45347 * C619;
    const double C45976 = C45347 * C614;
    const double C45967 = C45347 * C618;
    const double C45963 = C45347 * C617;
    const double C45962 = C45347 * C616;
    const double C45958 = C45347 * C615;
    const double C46235 = C45347 * C376;
    const double C46447 = C45347 * C621;
    const double C46770 = C45347 * C1188;
    const double C46768 = C45347 * C1187;
    const double C46753 = C45347 * C1186;
    const double C46749 = C45347 * C1185;
    const double C47140 = C45347 * C1480;
    const double C47137 = C45347 * C1479;
    const double C47136 = C45347 * C1478;
    const double C47133 = C45347 * C1477;
    const double C47373 = C45347 * C1665;
    const double C47372 = C45347 * C1664;
    const double C47369 = C45347 * C1663;
    const double C47366 = C45347 * C1660;
    const double C47363 = C45347 * C1659;
    const double C47579 = C45347 * C1476;
    const double C47887 = C45347 * C1662;
    const double C48096 = C45347 * C2202;
    const double C48093 = C45347 * C2201;
    const double C55459 = C45347 * C7789;
    const double C56430 = C45347 * C8772;
    const double C45387 = C45349 * C621;
    const double C45378 = C45349 * C613;
    const double C45369 = C45349 * C614;
    const double C45360 = C45349 * C615;
    const double C45354 = C45349 * C616;
    const double C45695 = C45349 * C1661;
    const double C45692 = C45349 * C1188;
    const double C45686 = C45349 * C1662;
    const double C45677 = C45349 * C1187;
    const double C45668 = C45349 * C1663;
    const double C45662 = C45349 * C1664;
    const double C45659 = C45349 * C1185;
    const double C45653 = C45349 * C1186;
    const double C45979 = C45349 * C619;
    const double C45961 = C45349 * C617;
    const double C45955 = C45349 * C618;
    const double C46756 = C45349 * C1659;
    const double C46750 = C45349 * C1660;
    const double C47138 = C45349 * C8772;
    const double C47135 = C45349 * C2201;
    const double C47132 = C45349 * C2202;
    const double C47371 = C45349 * C1665;
    const double C47580 = C45349 * C2203;
    const double C95152 = C95118 * C149;
    const double C95143 = C95118 * C148;
    const double C95140 = C95118 * C147;
    const double C95131 = C95118 * C146;
    const double C95125 = C95118 * C145;
    const double C95122 = C95118 * C144;
    const double C95451 = C95118 * C376;
    const double C95448 = C95118 * C375;
    const double C95439 = C95118 * C368;
    const double C95433 = C95118 * C374;
    const double C95427 = C95118 * C373;
    const double C95424 = C95118 * C372;
    const double C95423 = C95118 * C371;
    const double C95420 = C95118 * C370;
    const double C95414 = C95118 * C369;
    const double C95753 = C95118 * C621;
    const double C95741 = C95118 * C613;
    const double C95735 = C95118 * C619;
    const double C95729 = C95118 * C618;
    const double C95726 = C95118 * C617;
    const double C95725 = C95118 * C616;
    const double C95722 = C95118 * C615;
    const double C95716 = C95118 * C614;
    const double C96520 = C95118 * C1188;
    const double C96511 = C95118 * C1187;
    const double C96505 = C95118 * C1186;
    const double C96502 = C95118 * C1185;
    const double C96894 = C95118 * C1481;
    const double C96892 = C95118 * C1480;
    const double C96890 = C95118 * C1479;
    const double C96889 = C95118 * C1478;
    const double C96887 = C95118 * C1477;
    const double C96885 = C95118 * C1476;
    const double C97126 = C95118 * C1665;
    const double C97125 = C95118 * C1664;
    const double C97123 = C95118 * C1663;
    const double C97121 = C95118 * C1662;
    const double C97119 = C95118 * C1660;
    const double C97117 = C95118 * C1659;
    const double C97334 = C95118 * C1475;
    const double C97646 = C95118 * C1661;
    const double C97858 = C95118 * C2203;
    const double C97856 = C95118 * C2202;
    const double C97854 = C95118 * C2201;
    const double C105734 = C95118 * C7789;
    const double C107010 = C95118 * C8772;
    const double C14690 = C14682 + C14683;
    const double C37244 = C37240 + C37241;
    const double C677 = C669 + C650;
    const double C15276 = C15264 + C15233;
    const double C15274 = C15262 + C15223;
    const double C448 = C440 * C152419;
    const double C6503 = C440 * C152555;
    const double C6499 = C440 * C152435;
    const double C23228 = C440 * C23222;
    const double C23459 = C440 * C23220;
    const double C23457 = C440 * C23221;
    const double C68095 = C440 * C67854;
    const double C68093 = C440 * C152435;
    const double C76073 = C440 * C76067;
    const double C76304 = C440 * C152622;
    const double C76302 = C440 * C152602;
    const double C1224 = C1220 * C152419;
    const double C6739 = C1220 * C152435;
    const double C7437 = C1220 * C152555;
    const double C23687 = C1220 * C23221;
    const double C24382 = C1220 * C23220;
    const double C68325 = C1220 * C152435;
    const double C69021 = C1220 * C67854;
    const double C76532 = C1220 * C152602;
    const double C77227 = C1220 * C152622;
    const double C84598 = C14984 + C14985;
    const double C84597 = C14985 + C14984;
    const double C8064 = C8059 + C1685;
    const double C38155 = C38151 + C16007;
    const double C38776 = C38768 + C16623;
    const double C2614 =
        (2 * (2 * ae * C150704 + C150615 * C150629) + C150940 + C150940 +
         C150615 * (C150629 + C150937 + C150937 +
                    C150615 * (2 * ae * C150695 + C150615 * C150638))) /
        C150520;
    const double C2623 = C135 * C2606;
    const double C15231 = C14624 * C2606;
    const double C17936 = C14622 * C2606;
    const double C45964 = C45349 * C2606;
    const double C45960 = C45351 * C2606;
    const double C48668 = C45347 * C2606;
    const double C62227 = C62222 * C2606;
    const double C95727 = C95120 * C2606;
    const double C98423 = C95118 * C2606;
    const double C115324 = C114715 * C2606;
    const double C6274 = C6266 + C6267;
    const double C67870 = C67862 + C67863;
    const double C150745 = ae * C150744;
    const double C620 = (2 * C150710 + C150622 * C150723 + C150615 * C150744 +
                         C150615 * C150739 * ae) /
                        C150502;
    const double C185 = C174 + C175;
    const double C14669 = C14655 + C14656;
    const double C426 = C410 + C411;
    const double C14969 = C14951 + C14952;
    const double C427 = C413 + C414;
    const double C15503 = C15497 + C14955;
    const double C672 = C658 + C659;
    const double C14667 = C14649 + C14650;
    const double C15711 = C15705 + C15257;
    const double C1214 = C1205 + C1206;
    const double C14967 = C14945 + C14946;
    const double C16033 = C16023 + C16024;
    const double C1670 =
        (C150807 * C150648 + C150836 + C150836 +
         C150615 * (2 * ae * C150831 + C150615 * C150807 * C150660)) /
        C150520;
    const double C1683 = C135 * C1658;
    const double C16018 = C14624 * C1658;
    const double C16619 = C14622 * C1658;
    const double C45680 = C45351 * C1658;
    const double C46765 = C45349 * C1658;
    const double C48971 = C45347 * C1658;
    const double C96514 = C95120 * C1658;
    const double C97115 = C95118 * C1658;
    const double C115044 = C114715 * C1658;
    const double C150917 = C150916 + C150913;
    const double C1678 = (C150816 + C150650 * C150819 + C150872 + C150872 +
                          C150615 * (2 * ae * C150867 +
                                     C150615 * (C150650 + C150665 * C150819))) /
                         C150520;
    const double C1691 = C135 * C1666;
    const double C16632 = C14622 * C1666;
    const double C16626 = C14624 * C1666;
    const double C45671 = C45351 * C1666;
    const double C47376 = C45347 * C1666;
    const double C47368 = C45349 * C1666;
    const double C97128 = C95118 * C1666;
    const double C97122 = C95120 * C1666;
    const double C115035 = C114715 * C1666;
    const double C7813 = C7809 + C1497;
    const double C38997 = C38995 + C16396;
    const double C8571 = C8569 + C2211;
    const double C16846 = C16842 + C16390;
    const double C39300 = C39298 + C17360;
    const double C150983 = ae * C150981;
    const double C150982 = C150615 * C150981;
    const double C151315 = 3 * C150981;
    const double C151077 = C151076 + C151073;
    const double C151130 = ae * C151129;
    const double C8039 = (2 * C150845 + C150807 * C150858 + C150615 * C151129 +
                          C150615 * C151126 * ae) /
                         C150502;
    const double C24741 = C24736 + C7804;
    const double C38517 = C38509 + C38510;
    const double C25681 = C25677 + C8781;
    const double C38515 = C38504 + C16395;
    const double C39505 = C39500 + C38765;
    const double C151251 = C151250 + C151247;
    const double C151186 = ae * C151184;
    const double C151185 = C150615 * C151184;
    const double C151588 = 3 * C151184;
    const double C151670 = C151657 + C151303;
    const double C151304 = C151280 + C151302;
    const double C654 = C152449 * C631;
    const double C15240 = C152557 * C631;
    const double C15218 = C152461 * C631;
    const double C45367 = C45345 * C631;
    const double C45992 = C45343 * C631;
    const double C45980 = C45344 * C631;
    const double C95736 = C95115 * C631;
    const double C95714 = C152461 * C631;
    const double C114731 = C114709 * C631;
    const double C115356 = C152623 * C631;
    const double C115344 = C152605 * C631;
    const double C670 = C652 + C653;
    const double C15266 = C15238 + C15239;
    const double C15260 = C15216 + C15217;
    const double C196 = C190 + C173;
    const double C14686 = C14676 + C14648;
    const double C437 = C429 + C395;
    const double C14990 = C14978 + C14944;
    const double C441 = C433 + C409;
    const double C14988 = C14976 + C14938;
    const double C682 = C674 + C640;
    const double C14684 = C14674 + C14642;
    const double C15292 = C15280 + C15246;
    const double C1221 = C1217 + C1204;
    const double C14982 = C14970 + C14916;
    const double C16042 = C16036 + C16016;
    const double C2830 = C152449 * C1671;
    const double C16013 = C152461 * C1671;
    const double C18240 = C152557 * C1671;
    const double C45651 = C45345 * C1671;
    const double C46757 = C45344 * C1671;
    const double C48970 = C45343 * C1671;
    const double C96509 = C152461 * C1671;
    const double C98727 = C95115 * C1671;
    const double C115015 = C114709 * C1671;
    const double C116121 = C152605 * C1671;
    const double C118328 = C152623 * C1671;
    const double C2834 = C2829 + C1684;
    const double C16029 = C16011 + C16012;
    const double C18246 = C18239 + C16621;
    const double C150929 = ae * C150928;
    const double C2605 =
        (2 * C150714 + C150615 * C150928 + (C150711 + C150730 * C150619) * ae) /
        C150502;
    const double C1851 = C1848 * C152419;
    const double C6504 = C1848 * C152435;
    const double C8271 = C1848 * C152555;
    const double C23460 = C1848 * C23221;
    const double C23456 = C1848 * C23222;
    const double C25178 = C1848 * C23220;
    const double C68096 = C1848 * C152435;
    const double C69783 = C1848 * C67854;
    const double C76305 = C1848 * C152602;
    const double C76301 = C1848 * C76067;
    const double C77987 = C1848 * C152622;
    const double C2067 = C2064 * C152419;
    const double C7438 = C2064 * C152435;
    const double C8567 = C2064 * C152555;
    const double C23686 = C2064 * C23222;
    const double C24383 = C2064 * C23221;
    const double C25472 = C2064 * C23220;
    const double C69022 = C2064 * C152435;
    const double C70077 = C2064 * C67854;
    const double C76531 = C2064 * C76067;
    const double C77228 = C2064 * C152602;
    const double C78280 = C2064 * C152622;
    const double C37225 = C14987 + C14986;
    const double C84599 = C14986 + C14987;
    const double C8055 = C152449 * C1677;
    const double C38142 = C152461 * C1677;
    const double C38751 = C152557 * C1677;
    const double C54173 = C45345 * C1677;
    const double C55715 = C45343 * C1677;
    const double C55707 = C45344 * C1677;
    const double C106061 = C95115 * C1677;
    const double C106053 = C152461 * C1677;
    const double C142544 = C114709 * C1677;
    const double C144086 = C152623 * C1677;
    const double C144078 = C152605 * C1677;
    const double C8063 = C8054 + C1690;
    const double C38770 = C38750 + C16630;
    const double C38149 = C38141 + C16628;
    const double C7818 = C7814 + C7803;
    const double C38522 = C38518 + C38503;
    const double C8786 = C8785 + C8780;
    const double C37242 = C37236 + C37222;
    const double C38788 = C38780 + C38755;
    const double C150961 = C150944 + C150959;
    const double C151064 = ae * C151063;
    const double C3133 =
        (2 * C150849 + C150615 * C151063 + (C150846 + C151054 * C150619) * ae) /
        C150502;
    const double C158 =
        (5 * (3 * C150648 + C150622 * C150662) +
         C150622 *
             (4 * C150662 +
              C150622 *
                  (3 * C150660 +
                   C150622 * (2 * C150622 * C150658 +
                              C150622 * (C150658 + (C150652 * C150653 +
                                                    C150619 * bs[8] *
                                                        std::pow(C150613, 8)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C387 = (2 * C150622 * C150638 + C150622 * C150648 +
                         C150662 * std::pow(yP - yQ, 2)) /
                        C150520;
    const double C388 =
        ((yP - yQ) * (3 * C150648 + C150622 * C150662)) / C150520;
    const double C633 = (2 * ae * (3 * C150723 + C150622 * C150742) +
                         C150615 * (3 * C150648 + C150622 * C150662)) /
                        C150520;
    const double C1194 =
        (2 * ae * C150807 * C150742 + C150615 * C150807 * C150662) / C150520;
    const double C1847 = C1844 + C1836;
    const double C16849 = C16845 + C16833;
    const double C2063 = C2060 + C2052;
    const double C14989 = C14977 + C14941;
    const double C17161 = C17157 + C17145;
    const double C24735 = C152449 * C7793;
    const double C151335 = C151322 + C151332;
    const double C24731 =
        (5 * (3 * C151109 + C150807 * C151388) +
         C150807 * (4 * C151388 +
                    C150807 * (3 * C151386 +
                               C150807 * (2 * C150807 * C150658 +
                                          C150807 * (C150658 +
                                                     C150673 * C150819))))) /
        C150520;
    const double C151608 = C151595 + C151605;
    const double C151689 = C150615 * C151685;
    const double C151849 = 3 * C151685;
    const double C150678 = C150622 * C150677;
    const double C151012 = C150615 * C150677;
    const double C151094 = C150807 * C150677;
    const double C1483 =
        (2 * C150807 * C150662 +
         C150807 * (C150662 + C150677 * std::pow(C150807, 2))) /
        C150520;
    const double C1490 =
        (3 * (C150662 + C150677 * C150819) +
         C150807 *
             (2 * C150807 * C150677 +
              C150807 * (C150677 +
                         (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)) *
                             C150819))) /
        C150520;
    const double C1673 = (2 * ae * (C150742 + C150764 * C150819) +
                          C150615 * (C150662 + C150677 * C150819)) /
                         C150520;
    const double C2208 =
        (2 * ae * (2 * C150824 + C150807 * C150885) +
         C150615 *
             (2 * C150807 * C150677 +
              C150807 * (C150677 +
                         (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)) *
                             C150819))) /
        C150520;
    const double C7794 =
        (4 * (2 * C151080 + C150807 * C151115) +
         C150807 *
             (3 * C151115 +
              C150807 *
                  (2 * C150807 * C150675 +
                   C150807 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150819)))) /
        C150520;
    const double C8777 =
        (2 * ae * (3 * C150876 + C150807 * C151155) +
         C150615 *
             (3 * C151115 +
              C150807 *
                  (2 * C150807 * C150675 +
                   C150807 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150819)))) /
        C150520;
    const double C151228 = C151222 + C151223;
    const double C151368 = C150615 * C151363;
    const double C151395 = C151390 + C151394;
    const double C151477 = C151473 + C151467;
    const double C151776 = C150615 * C151772;
    const double C151518 = C150807 * C151517;
    const double C151552 = C150615 * C151517;
    const double C151641 = C150615 * C151636;
    const double C150795 = C150622 * C150793;
    const double C151035 = C150807 * C150793;
    const double C151043 = C150615 * C150793;
    const double C151042 = C150793 * ae;
    const double C1829 =
        2 * C150807 * C150765 + C150807 * (C150765 + C150793 * C150819);
    const double C2045 = C150615 * (C150765 + C150793 * C150819);
    const double C2977 =
        2 * C150615 * C150765 + C150615 * (C150765 + C150793 * C150619);
    const double C150888 = C150886 * ae;
    const double C2204 = (C150615 * (2 * C150824 + C150807 * C150885) +
                          (2 * C150825 + C150807 * C150886) * ae) /
                         C150502;
    const double C1474 = 3 * (C150739 + C150761 * C150819) +
                         C150807 * (2 * C150825 + C150807 * C150886);
    const double C1656 = C150739 + C150761 * C150819 + C150886 * C150619;
    const double C2200 = C150615 * (2 * C150825 + C150807 * C150886);
    const double C151024 = C151021 * ae;
    const double C2602 = 3 * (C150739 + C150761 * C150619) +
                         C150615 * (2 * C150900 + C150615 * C151021);
    const double C151025 = ae * C151019;
    const double C151023 = C150615 * C151019;
    const double C151101 = C151099 * ae;
    const double C151100 = C151097 + C151098;
    const double C151158 = C151156 * ae;
    const double C8774 = (C150615 * (3 * C150876 + C150807 * C151155) +
                          (3 * C150877 + C150807 * C151156) * ae) /
                         C150502;
    const double C7788 = 4 * (2 * C150832 + C150807 * C150877) +
                         C150807 * (3 * C150877 + C150807 * C151156);
    const double C8038 = 2 * C150832 + C150807 * C150877 + C151156 * C150619;
    const double C8771 = C150615 * (3 * C150877 + C150807 * C151156);
    const double C151271 = ae * C151268;
    const double C151270 = C150615 * C151268;
    const double C151235 = C151081 + C151232;
    const double C151373 = C151370 * ae;
    const double C17923 = 4 * (2 * C150911 + C150615 * C150998) +
                          C150615 * (3 * C150998 + C150615 * C151370);
    const double C151372 = C151369 + C151361;
    const double C151435 = C151421 + C151433;
    const double C151504 = C151502 * ae;
    const double C151503 = C151500 + C151501;
    const double C151481 = C151136 + C151478;
    const double C151741 = C151719 + C151738;
    const double C151742 = ae * C151736;
    const double C151740 = C150615 * C151736;
    const double C151785 = C151783 * ae;
    const double C49388 = 4 * (2 * C151071 + C150615 * C151205) +
                          C150615 * (3 * C151205 + C150615 * C151783);
    const double C151784 = C151782 + C151774;
    const double C151542 = C150807 * C151540;
    const double C151576 = C150615 * C151540;
    const double C151575 = C151540 * ae;
    const double C33899 =
        2 * C150615 * C151412 + C150615 * (C151412 + C151540 * C150619);
    const double C151564 = C151561 * ae;
    const double C33441 = 3 * (C151126 + C151408 * C150619) +
                          C150615 * (2 * C151491 + C150615 * C151561);
    const double C151565 = ae * C151559;
    const double C151563 = C150615 * C151559;
    const double C151646 = C151643 * ae;
    const double C40068 = 4 * (2 * C151245 + C150615 * C151453) +
                          C150615 * (3 * C151453 + C150615 * C151643);
    const double C151645 = C151642 + C151634;
    const double C151834 = C151806 + C151831;
    const double C151835 = ae * C151829;
    const double C151833 = C150615 * C151829;
    const double C151893 = C150615 * C151888;
    const double C151892 = C151888 * ae;
    const double C151891 = C151857 + C151887;
    const double C150769 = C150615 * C150768;
    const double C150 = (5 * (3 * C150723 + C150622 * C150742) +
                         C150622 * (4 * C150742 + C150622 * C150768)) /
                        C150502;
    const double C377 =
        (3 * C150723 + C150622 * C150742 + C150768 * C150819) / C150502;
    const double C378 = (C150807 * (4 * C150742 + C150622 * C150768)) / C150502;
    const double C623 = (C150615 * (4 * C150742 + C150622 * C150768) +
                         (4 * C150739 + C150622 * C150765) * ae) /
                        C150502;
    const double C1189 =
        (C150615 * C150807 * C150768 + C150807 * C150765 * ae) / C150502;
    const double C1830 =
        (2 * C150807 * C150768 + C150807 * (C150768 + C150796 * C150819)) /
        C150502;
    const double C2046 = (C150615 * (C150768 + C150796 * C150819) +
                          (C150765 + C150793 * C150819) * ae) /
                         C150502;
    const double C150828 = C150826 + C150827;
    const double C150904 = ae * C150901;
    const double C150903 = C150615 * C150901;
    const double C151013 = 2 * C150901;
    const double C1840 = C1833 + C1492;
    const double C2056 = C2049 + C1686;
    const double C14968 = C14948 + C14949;
    const double C150881 = ae * C150880;
    const double C1667 = (C150723 + C150738 * C150819 + C150615 * C150880 +
                          C150615 * C150877 * ae) /
                         C150502;
    const double C7808 = C7798 + C1498;
    const double C8568 = C8562 + C2212;
    const double C16840 = C16830 + C16388;
    const double C151358 = C151348 + C151002;
    const double C151004 = C151003 + C150997;
    const double C151090 = C150831 + C151088;
    const double C151144 = C151142 + C151143;
    const double C25470 = C152449 * C8776;
    const double C38989 = C152461 * C8776;
    const double C105727 = C152461 * C8776;
    const double C7805 = C135 * C7790;
    const double C38992 = C14622 * C7790;
    const double C105736 = C95118 * C7790;
    const double C8782 = C135 * C8773;
    const double C16397 = C14624 * C8773;
    const double C39295 = C14622 * C8773;
    const double C47141 = C45349 * C8773;
    const double C96893 = C95120 * C8773;
    const double C107012 = C95118 * C8773;
    const double C151261 = C150867 + C151259;
    const double C151765 = C151757 + C151208;
    const double C151210 = C151209 + C151204;
    const double C151735 = C151721 + C151732;
    const double C151339 = ae * C151336;
    const double C151338 = C150615 * C151336;
    const double C151712 = 3 * C151336;
    const double C151413 = C150615 * C151411;
    const double C25674 =
        (2 * ae * (4 * C151125 + C150807 * C151411) +
         C150615 * (4 * C151388 +
                    C150807 * (3 * C151386 +
                               C150807 * (2 * C150807 * C150658 +
                                          C150807 * (C150658 +
                                                     C150673 * C150819))))) /
        C150520;
    const double C24729 = (5 * (3 * C150858 + C150807 * C151125) +
                           C150807 * (4 * C151125 + C150807 * C151411)) /
                          C150502;
    const double C25672 = (C150615 * (4 * C151125 + C150807 * C151411) +
                           (4 * C151126 + C150807 * C151412) * ae) /
                          C150502;
    const double C151495 = ae * C151492;
    const double C151494 = C150615 * C151492;
    const double C151553 = 2 * C151492;
    const double C151631 = C151621 + C151457;
    const double C151459 = C151458 + C151452;
    const double C151825 = C151808 + C151820;
    const double C151612 = ae * C151609;
    const double C151611 = C150615 * C151609;
    const double C151801 = 3 * C151609;
    const double C151886 = C150615 * C151882;
    const double C151866 = C151850 + C151692;
    const double C151694 = C151663 + C151690;
    const double C177 = C134 * C142;
    const double C416 = C134 * C365;
    const double C837 = C134 * C366;
    const double C661 = C134 * C610;
    const double C15703 = C14623 * C610;
    const double C979 = C134 * C611;
    const double C14652 = C14623 * C611;
    const double C1208 = C134 * C1183;
    const double C15495 = C14623 * C1183;
    const double C32444 = C134 * C24727;
    const double C32599 = C134 * C24963;
    const double C39498 = C14623 * C24963;
    const double C33062 = C134 * C25670;
    const double C38506 = C14623 * C25670;
    const double C150800 = C150774 + C150798;
    const double C151036 = C150615 * C151034;
    const double C1499 = C135 * C1482;
    const double C7806 = C135 * C7791;
    const double C151436 = C150615 * C151434;
    const double C24730 = (5 * (3 * C150867 + C150807 * C151140) +
                           C150807 * (4 * C151140 + C150807 * C151434)) /
                          C150502;
    const double C151543 = C151521 + C151541;
    const double C152633 = C152572 + C152625;
    const double C830 = C152610 - (C152207 * C152189) / C152184;
    const double C132 = C152611 / C152188 - C152205 / C152579;
    const double C152626 = C152575 + C152610;
    const double C152634 = C152588 + C152629;
    const double C1824 = C152617 - (C152287 * C152276) / C152184;
    const double C1464 = C152618 / C152188 - C152285 / C152579;
    const double C152630 = C152590 + C152617;
    const double C152635 = C152594 + C152631;
    const double C2974 = C152620 - (C152329 * C152318) / C152184;
    const double C2593 = C152621 / C152188 - C152327 / C152579;
    const double C152632 = C152596 + C152620;
    const double C150550 = C150534 / C150502;
    const double C45348 =
        (-(((-4 * C150508) / C150502 - C150534 / C150502) * be) / C150502) /
            C150521 -
        ((2 * ((-C150522 / C150502) / C150521 - (0 * be) / C150502) -
          C150534 / (2 * C150520)) *
         be) /
            C150502;
    const double C45389 = C45346 * C140;
    const double C45374 = C45346 * C139;
    const double C45371 = C45346 * C138;
    const double C45356 = C45346 * C137;
    const double C45688 = C45346 * C362;
    const double C45673 = C45346 * C357;
    const double C45664 = C45346 * C361;
    const double C45655 = C45346 * C358;
    const double C45990 = C45346 * C607;
    const double C45975 = C45346 * C602;
    const double C45966 = C45346 * C606;
    const double C45957 = C45346 * C603;
    const double C46233 = C45346 * C356;
    const double C46445 = C45346 * C601;
    const double C46767 = C45346 * C1181;
    const double C46752 = C45346 * C1180;
    const double C47577 = C45346 * C1469;
    const double C47885 = C45346 * C1651;
    const double C48969 = C45346 * C1647;
    const double C49181 = C45346 * C2597;
    const double C54176 = C45346 * C360;
    const double C54166 = C45346 * C359;
    const double C55096 = C45346 * C1179;
    const double C55457 = C45346 * C1471;
    const double C55447 = C45346 * C1470;
    const double C55714 = C45346 * C1653;
    const double C55704 = C45346 * C1652;
    const double C55698 = C45346 * C1648;
    const double C56428 = C45346 * C2197;
    const double C57688 = C45346 * C3129;
    const double C45383 = C45350 * C610;
    const double C45380 = C45350 * C608;
    const double C45365 = C45350 * C607;
    const double C45362 = C45350 * C606;
    const double C45682 = C45350 * C1655;
    const double C45679 = C45350 * C1646;
    const double C45670 = C45350 * C1654;
    const double C45649 = C45350 * C1647;
    const double C45984 = C45350 * C2601;
    const double C45981 = C45350 * C2596;
    const double C45972 = C45350 * C2600;
    const double C45951 = C45350 * C2597;
    const double C46229 = C45350 * C1645;
    const double C46441 = C45350 * C2595;
    const double C46761 = C45350 * C3131;
    const double C46758 = C45350 * C3130;
    const double C47573 = C45350 * C8037;
    const double C47881 = C45350 * C10053;
    const double C48965 = C45350 * C9345;
    const double C49177 = C45350 * C17922;
    const double C54172 = C45350 * C1653;
    const double C54170 = C45350 * C1648;
    const double C55092 = C45350 * C3129;
    const double C55453 = C45350 * C24963;
    const double C55451 = C45350 * C8036;
    const double C55710 = C45350 * C26241;
    const double C55708 = C45350 * C10052;
    const double C55702 = C45350 * C9344;
    const double C56424 = C45350 * C26938;
    const double C57684 = C45350 * C40067;
    const double C95148 = C95119 * C611;
    const double C95145 = C95119 * C609;
    const double C95136 = C95119 * C601;
    const double C95133 = C95119 * C602;
    const double C95127 = C95119 * C603;
    const double C95444 = C95119 * C1649;
    const double C95441 = C95119 * C1182;
    const double C95435 = C95119 * C1650;
    const double C95429 = C95119 * C1651;
    const double C95416 = C95119 * C1180;
    const double C95410 = C95119 * C1181;
    const double C95746 = C95119 * C2595;
    const double C95743 = C95119 * C608;
    const double C95737 = C95119 * C2596;
    const double C95731 = C95119 * C2597;
    const double C95718 = C95119 * C606;
    const double C95712 = C95119 * C607;
    const double C95991 = C95119 * C1183;
    const double C96199 = C95119 * C610;
    const double C96516 = C95119 * C1645;
    const double C96513 = C95119 * C1646;
    const double C96507 = C95119 * C1647;
    const double C97330 = C95119 * C2198;
    const double C97326 = C95119 * C2199;
    const double C97642 = C95119 * C1654;
    const double C97638 = C95119 * C1655;
    const double C98724 = C95119 * C3130;
    const double C98720 = C95119 * C3131;
    const double C98940 = C95119 * C2600;
    const double C98936 = C95119 * C2601;
    const double C104045 = C95119 * C1652;
    const double C104040 = C95119 * C1179;
    const double C105258 = C95119 * C1648;
    const double C105730 = C95119 * C8769;
    const double C105726 = C95119 * C8770;
    const double C105724 = C95119 * C2197;
    const double C106058 = C95119 * C10052;
    const double C106054 = C95119 * C10053;
    const double C106052 = C95119 * C1653;
    const double C106048 = C95119 * C3129;
    const double C106737 = C95119 * C8037;
    const double C107006 = C95119 * C8036;
    const double C108412 = C95119 * C9345;
    const double C108680 = C95119 * C9344;
    const double C135584 = C95119 * C25670;
    const double C135816 = C95119 * C26938;
    const double C136507 = C95119 * C24963;
    const double C137757 = C95119 * C26241;
    const double C114747 = C114714 * C610;
    const double C114744 = C114714 * C608;
    const double C114729 = C114714 * C607;
    const double C114726 = C114714 * C606;
    const double C115046 = C114714 * C1655;
    const double C115043 = C114714 * C1646;
    const double C115034 = C114714 * C1654;
    const double C115013 = C114714 * C1647;
    const double C115348 = C114714 * C2601;
    const double C115345 = C114714 * C2596;
    const double C115336 = C114714 * C2600;
    const double C115315 = C114714 * C2597;
    const double C115593 = C114714 * C1645;
    const double C115805 = C114714 * C2595;
    const double C116125 = C114714 * C3131;
    const double C116122 = C114714 * C3130;
    const double C116937 = C114714 * C8037;
    const double C117245 = C114714 * C10053;
    const double C118323 = C114714 * C9345;
    const double C118535 = C114714 * C17922;
    const double C142543 = C114714 * C1653;
    const double C142541 = C114714 * C1648;
    const double C143463 = C114714 * C3129;
    const double C143824 = C114714 * C24963;
    const double C143822 = C114714 * C8036;
    const double C144081 = C114714 * C26241;
    const double C144079 = C114714 * C10052;
    const double C144073 = C114714 * C9344;
    const double C144795 = C114714 * C26938;
    const double C146052 = C114714 * C40067;
    const double C150563 = C150558 - C150559;
    const double C14693 = C14690 * C152419;
    const double C685 = C677 + C651;
    const double C15288 = C15276 + C15234;
    const double C15286 = C15274 + C15224;
    const double C8069 = C8064 + C8047;
    const double C38159 = C38155 + C38146;
    const double C38784 = C38776 + C38747;
    const double C632 =
        (2 * C150622 * C150638 + C150622 * C150648 + C150745 + C150745 +
         C150615 * (2 * ae * C150742 + C150615 * C150662)) /
        C150520;
    const double C656 = C135 * C620;
    const double C15254 = C14622 * C620;
    const double C15248 = C14624 * C620;
    const double C45381 = C45351 * C620;
    const double C45996 = C45347 * C620;
    const double C45994 = C45349 * C620;
    const double C95750 = C95118 * C620;
    const double C95744 = C95120 * C620;
    const double C114745 = C114715 * C620;
    const double C191 = C185 + C175;
    const double C14679 = C14669 + C14656;
    const double C434 = C426 + C411;
    const double C14981 = C14969 + C14952;
    const double C435 = C427 + C414;
    const double C15505 = C15503 + C14955;
    const double C680 = C672 + C659;
    const double C14677 = C14667 + C14650;
    const double C15713 = C15711 + C15257;
    const double C1218 = C1214 + C1206;
    const double C14979 = C14967 + C14946;
    const double C16039 = C16033 + C16024;
    const double C2828 = C152449 * C1670;
    const double C16019 = C152461 * C1670;
    const double C18236 = C152557 * C1670;
    const double C45681 = C45345 * C1670;
    const double C46766 = C45344 * C1670;
    const double C96515 = C152461 * C1670;
    const double C98723 = C95115 * C1670;
    const double C115045 = C114709 * C1670;
    const double C116130 = C152605 * C1670;
    const double C2833 = C2827 + C1683;
    const double C16031 = C16017 + C16018;
    const double C18244 = C18235 + C16619;
    const double C150918 = ae * C150917;
    const double C2604 =
        (2 * C150725 + C150615 * C150917 + (C150720 + C150735 * C150619) * ae) /
        C150502;
    const double C8053 = C152449 * C1678;
    const double C17147 = C152461 * C1678;
    const double C40373 = C152557 * C1678;
    const double C45672 = C45345 * C1678;
    const double C47884 = C45344 * C1678;
    const double C97643 = C152461 * C1678;
    const double C106057 = C95115 * C1678;
    const double C115036 = C114709 * C1678;
    const double C117248 = C152605 * C1678;
    const double C8062 = C8052 + C1691;
    const double C40377 = C40372 + C16632;
    const double C17154 = C17146 + C16626;
    const double C7817 = C7813 + C7801;
    const double C38999 = C38997 + C38991;
    const double C8573 = C8571 + C8566;
    const double C16850 = C16846 + C16835;
    const double C39302 = C39300 + C39294;
    const double C150984 = C150967 + C150982;
    const double C151078 = ae * C151077;
    const double C3134 =
        (2 * C150842 + C150615 * C151077 + (C150839 + C151068 * C150619) * ae) /
        C150502;
    const double C8042 =
        (2 * C151052 + C150807 * C151109 + C151130 + C151130 +
         C150615 * (2 * ae * C151125 +
                    C150615 * (2 * C150807 * C150646 +
                               C150807 * (C150646 + C150658 * C150819)))) /
        C150520;
    const double C8056 = C135 * C8039;
    const double C17359 = C14624 * C8039;
    const double C38762 = C14622 * C8039;
    const double C47134 = C45351 * C8039;
    const double C48094 = C45349 * C8039;
    const double C55716 = C45347 * C8039;
    const double C97855 = C95120 * C8039;
    const double C106062 = C95118 * C8039;
    const double C116498 = C114715 * C8039;
    const double C24743 = C24741 + C7804;
    const double C38521 = C38517 + C38510;
    const double C25682 = C25681 + C8781;
    const double C38519 = C38515 + C16395;
    const double C39507 = C39505 + C38765;
    const double C151252 = ae * C151251;
    const double C10055 =
        (2 * C150862 + C150615 * C151251 + (C150859 + C151122 * C150619) * ae) /
        C150502;
    const double C151187 = C151167 + C151185;
    const double C151676 = C151670 + C151303;
    const double C151305 = C151304 + C151293;
    const double C678 = C670 + C653;
    const double C15278 = C15266 + C15239;
    const double C15272 = C15260 + C15217;
    const double C202 = C196 * C152419;
    const double C6270 = C196 * C152555;
    const double C23237 = C196 * C23220;
    const double C67866 = C196 * C67854;
    const double C76082 = C196 * C152622;
    const double C445 = C437 * C152419;
    const double C6268 = C437 * C152435;
    const double C6507 = C437 * C152555;
    const double C23233 = C437 * C23221;
    const double C23894 = C437 * C23220;
    const double C67864 = C437 * C152435;
    const double C68099 = C437 * C67854;
    const double C76078 = C437 * C152602;
    const double C76739 = C437 * C152622;
    const double C449 = C441 * C152419;
    const double C6505 = C441 * C152555;
    const double C6497 = C441 * C152435;
    const double C23229 = C441 * C23222;
    const double C23467 = C441 * C23220;
    const double C23463 = C441 * C23221;
    const double C68097 = C441 * C67854;
    const double C68091 = C441 * C152435;
    const double C76074 = C441 * C76067;
    const double C76312 = C441 * C152622;
    const double C76308 = C441 * C152602;
    const double C690 = C682 * C152419;
    const double C6745 = C682 * C152555;
    const double C24091 = C682 * C23220;
    const double C68331 = C682 * C67854;
    const double C76936 = C682 * C152622;
    const double C14691 = C14684 + C14685;
    const double C1225 = C1221 * C152419;
    const double C6737 = C1221 * C152435;
    const double C7439 = C1221 * C152555;
    const double C23693 = C1221 * C23221;
    const double C24387 = C1221 * C23220;
    const double C68323 = C1221 * C152435;
    const double C69023 = C1221 * C67854;
    const double C76538 = C1221 * C152602;
    const double C77232 = C1221 * C152622;
    const double C14994 = C14982 + C14983;
    const double C84600 = C14983 + C14982;
    const double C2837 = C2834 + C1684;
    const double C16035 = C16029 + C16012;
    const double C18250 = C18246 + C16621;
    const double C2613 =
        (2 * (2 * ae * C150710 + C150615 * C150816) + C150929 + C150929 +
         C150615 * (C150816 + C150926 + C150926 +
                    C150615 * (2 * ae * C150728 + C150615 * C150650))) /
        C150520;
    const double C2622 = C135 * C2605;
    const double C15236 = C14624 * C2605;
    const double C17934 = C14622 * C2605;
    const double C45970 = C45349 * C2605;
    const double C45952 = C45351 * C2605;
    const double C48665 = C45347 * C2605;
    const double C62228 = C62222 * C2605;
    const double C95732 = C95120 * C2605;
    const double C98421 = C95118 * C2605;
    const double C115316 = C114715 * C2605;
    const double C8068 = C8063 + C1690;
    const double C38778 = C38770 + C16630;
    const double C38153 = C38149 + C16628;
    const double C38501 = C37242 + C37243;
    const double C150962 = C150961 + C150955;
    const double C3137 =
        (2 * (2 * ae * C150845 + C150615 * C151052) + C151064 + C151064 +
         C150615 *
             (C151052 + C151061 + C151061 +
              C150615 * (2 * ae * C151053 + C150615 * C150807 * C150646))) /
        C150520;
    const double C3142 = C135 * C3133;
    const double C16622 = C14624 * C3133;
    const double C18665 = C14622 * C3133;
    const double C46751 = C45351 * C3133;
    const double C47365 = C45349 * C3133;
    const double C49392 = C45347 * C3133;
    const double C62390 = C62222 * C3133;
    const double C97118 = C95120 * C3133;
    const double C99152 = C95118 * C3133;
    const double C116115 = C114715 * C3133;
    const double C179 = C152449 * C158;
    const double C412 = C152449 * C387;
    const double C14953 = C152557 * C387;
    const double C95449 = C95115 * C387;
    const double C415 = C152449 * C388;
    const double C15498 = C152557 * C388;
    const double C95994 = C95115 * C388;
    const double C660 = C152449 * C633;
    const double C14651 = C152461 * C633;
    const double C15706 = C152557 * C633;
    const double C45388 = C45344 * C633;
    const double C95147 = C152461 * C633;
    const double C96202 = C95115 * C633;
    const double C114752 = C152605 * C633;
    const double C1207 = C152449 * C1194;
    const double C14947 = C152461 * C1194;
    const double C16025 = C152557 * C1194;
    const double C46232 = C45344 * C1194;
    const double C95443 = C152461 * C1194;
    const double C96521 = C95115 * C1194;
    const double C115596 = C152605 * C1194;
    const double C1850 = C1847 * C152419;
    const double C6506 = C1847 * C152435;
    const double C8269 = C1847 * C152555;
    const double C23466 = C1847 * C23221;
    const double C23464 = C1847 * C23222;
    const double C68098 = C1847 * C152435;
    const double C69781 = C1847 * C67854;
    const double C76311 = C1847 * C152602;
    const double C76309 = C1847 * C76067;
    const double C2066 = C2063 * C152419;
    const double C7440 = C2063 * C152435;
    const double C8564 = C2063 * C152555;
    const double C23694 = C2063 * C23222;
    const double C24386 = C2063 * C23221;
    const double C69024 = C2063 * C152435;
    const double C70075 = C2063 * C67854;
    const double C76539 = C2063 * C76067;
    const double C77231 = C2063 * C152602;
    const double C14995 = C14988 + C14989;
    const double C84601 = C14989 + C14988;
    const double C32445 = C152449 * C24731;
    const double C150679 = C150664 + C150678;
    const double C151022 = C151018 + C151012;
    const double C1834 = C152449 * C1483;
    const double C2050 = C152449 * C1673;
    const double C14950 = C152461 * C1673;
    const double C95446 = C152461 * C1673;
    const double C24732 =
        (5 * (3 * C151112 + C150807 * C151395) +
         C150807 *
             (4 * C151395 +
              C150807 * (3 * C151393 +
                         C150807 * (2 * C150807 * C151391 +
                                    C150807 * (C151391 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150819))))) /
        C150520;
    const double C25675 =
        (2 * ae * (4 * C151140 + C150807 * C151434) +
         C150615 *
             (4 * C151395 +
              C150807 * (3 * C151393 +
                         C150807 * (2 * C150807 * C151391 +
                                    C150807 * (C151391 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150819))))) /
        C150520;
    const double C151519 = C151511 + C151518;
    const double C151562 = C151558 + C151552;
    const double C150797 = C150778 + C150795;
    const double C151037 = C151035 * ae;
    const double C2821 = C150807 * C150765 + C151035 * C150619;
    const double C151045 = C151043 * ae;
    const double C151044 = C151041 + C151042;
    const double C150889 = C150887 + C150888;
    const double C2213 = C135 * C2204;
    const double C16839 = C14624 * C2204;
    const double C97335 = C95120 * C2204;
    const double C151026 = C150764 + C151023;
    const double C151103 = ae * C151100;
    const double C151102 = C150615 * C151100;
    const double C151159 = C151157 + C151158;
    const double C8783 = C135 * C8774;
    const double C16399 = C14624 * C8774;
    const double C96895 = C95120 * C8774;
    const double C151272 = C150876 + C151270;
    const double C151236 = C151235 + C151230;
    const double C151375 = ae * C151372;
    const double C151374 = C150615 * C151372;
    const double C151437 = C151435 * ae;
    const double C25673 = (C150615 * (4 * C151140 + C150807 * C151434) +
                           (4 * C151141 + C150807 * C151435) * ae) /
                          C150502;
    const double C24728 = 5 * (3 * C150868 + C150807 * C151141) +
                          C150807 * (4 * C151141 + C150807 * C151435);
    const double C24964 = 3 * C150868 + C150807 * C151141 + C151435 * C150619;
    const double C25671 = C150615 * (4 * C151141 + C150807 * C151435);
    const double C151506 = ae * C151503;
    const double C151505 = C150615 * C151503;
    const double C151482 = C151481 + C151475;
    const double C151745 = C151741 * ae;
    const double C48657 = 5 * (3 * C150975 + C150615 * C151334) +
                          C150615 * (4 * C151334 + C150615 * C151741);
    const double C151744 = C151713 + C151740;
    const double C151787 = ae * C151784;
    const double C151786 = C150615 * C151784;
    const double C151544 = C151525 + C151542;
    const double C151578 = C151576 * ae;
    const double C151577 = C151574 + C151575;
    const double C151566 = C151407 + C151563;
    const double C151648 = ae * C151645;
    const double C151647 = C150615 * C151645;
    const double C151837 = C151834 * ae;
    const double C56999 = 5 * (3 * C151179 + C150615 * C151607) +
                          C150615 * (4 * C151607 + C150615 * C151834);
    const double C151836 = C151802 + C151833;
    const double C151896 = C151864 + C151893;
    const double C151895 = C151891 + C151876;
    const double C150770 = C150769 + C150767;
    const double C178 = C135 * C150;
    const double C14658 = C14622 * C150;
    const double C95154 = C95118 * C150;
    const double C417 = C135 * C377;
    const double C14956 = C14622 * C377;
    const double C95452 = C95118 * C377;
    const double C419 = C135 * C378;
    const double C15499 = C14622 * C378;
    const double C95995 = C95118 * C378;
    const double C664 = C135 * C623;
    const double C14653 = C14624 * C623;
    const double C15707 = C14622 * C623;
    const double C45393 = C45349 * C623;
    const double C95149 = C95120 * C623;
    const double C96203 = C95118 * C623;
    const double C1209 = C135 * C1189;
    const double C14954 = C14624 * C1189;
    const double C16026 = C14622 * C1189;
    const double C46236 = C45349 * C1189;
    const double C95450 = C95120 * C1189;
    const double C96522 = C95118 * C1189;
    const double C1839 = C135 * C1830;
    const double C2055 = C135 * C2046;
    const double C14957 = C14624 * C2046;
    const double C95453 = C95120 * C2046;
    const double C150829 = ae * C150828;
    const double C1657 =
        (C150807 * C150742 + C150615 * C150828 + C150615 * C150825 * ae) /
        C150502;
    const double C150905 = C150742 + C150903;
    const double C1843 = C1840 + C1492;
    const double C2059 = C2056 + C1686;
    const double C14980 = C14968 + C14949;
    const double C1679 = (C150648 + C150660 * C150819 + C150881 + C150881 +
                          C150615 * (2 * ae * C150876 +
                                     C150615 * (C150660 + C150675 * C150819))) /
                         C150520;
    const double C1692 = C135 * C1667;
    const double C16634 = C14622 * C1667;
    const double C16624 = C14624 * C1667;
    const double C45683 = C45351 * C1667;
    const double C47888 = C45349 * C1667;
    const double C97130 = C95118 * C1667;
    const double C97120 = C95120 * C1667;
    const double C115047 = C114715 * C1667;
    const double C7812 = C7808 + C1498;
    const double C8570 = C8568 + C2212;
    const double C16844 = C16840 + C16388;
    const double C151371 = C151358 + C151368;
    const double C151006 = ae * C151004;
    const double C151005 = C150615 * C151004;
    const double C151351 = 3 * C151004;
    const double C151091 = C151090 + C151087;
    const double C151145 = ae * C151144;
    const double C8040 = (2 * C150838 + C150807 * C150867 + C150615 * C151144 +
                          C150615 * C151141 * ae) /
                         C150502;
    const double C24740 = C24734 + C7805;
    const double C25473 = C25469 + C8782;
    const double C38994 = C38988 + C16397;
    const double C151262 = C151261 + C151258;
    const double C151781 = C151765 + C151776;
    const double C151212 = ae * C151210;
    const double C151211 = C150615 * C151210;
    const double C151760 = 3 * C151210;
    const double C151739 = C150615 * C151735;
    const double C151720 = C151707 + C151339;
    const double C151340 = C151316 + C151338;
    const double C151415 = C151413 + C151414;
    const double C33063 = C152449 * C25674;
    const double C38508 = C152461 * C25674;
    const double C135585 = C152461 * C25674;
    const double C24738 = C135 * C24729;
    const double C38512 = C14622 * C24729;
    const double C135588 = C95118 * C24729;
    const double C25679 = C135 * C25672;
    const double C38507 = C14624 * C25672;
    const double C39502 = C14622 * C25672;
    const double C55460 = C45349 * C25672;
    const double C105735 = C95120 * C25672;
    const double C136511 = C95118 * C25672;
    const double C151496 = C151125 + C151494;
    const double C151644 = C151631 + C151641;
    const double C151461 = ae * C151459;
    const double C151460 = C150615 * C151459;
    const double C151624 = 3 * C151459;
    const double C151828 = C150615 * C151825;
    const double C151807 = C151796 + C151612;
    const double C151613 = C151589 + C151611;
    const double C151873 = C151866 + C151692;
    const double C151696 = C151694 + C151679;
    const double C150801 = C150615 * C150800;
    const double C1196 =
        (2 * ae * C150807 * C150800 +
         C150615 * C150807 *
             (4 * C150677 +
              C150622 *
                  (3 * C150675 +
                   C150622 * (2 * C150622 * C150673 +
                              C150622 * (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C151 = (6 * (4 * C150742 + C150622 * C150768) +
                         C150622 * (5 * C150768 + C150622 * C150800)) /
                        C150502;
    const double C379 =
        (4 * C150742 + C150622 * C150768 + C150800 * C150819) / C150502;
    const double C834 = (C150807 * (5 * C150768 + C150622 * C150800)) / C150502;
    const double C24739 = C135 * C24730;
    const double C151545 = C150615 * C151543;
    const double C32441 = (6 * (4 * C151125 + C150807 * C151411) +
                           C150807 * (5 * C151411 + C150807 * C151543)) /
                          C150502;
    const double C129 =
        (C152624 + 2 * C152198) / C152188 - (C152633 * C152189) / C152184;
    const double C130 = (C152609 + 2 * C152207 + C152633) / C152188 -
                        (C152626 * C152189) / C152184;
    const double C131 = (C152577 + C152204 / C152184 + C152626) / C152188 -
                        (C152611 * C152189) / C152184;
    const double C1461 =
        (C152627 + 2 * C152280) / C152188 - (C152634 * C152276) / C152184;
    const double C1462 = (C152613 + 2 * C152287 + C152634) / C152188 -
                         (C152630 * C152276) / C152184;
    const double C1463 = (C152583 + C152284 / C152184 + C152630) / C152188 -
                         (C152618 * C152276) / C152184;
    const double C2590 =
        (C152628 + 2 * C152322) / C152188 - (C152635 * C152318) / C152184;
    const double C2591 = (C152615 + 2 * C152329 + C152635) / C152188 -
                         (C152632 * C152318) / C152184;
    const double C2592 = (C152586 + C152326 / C152184 + C152632) / C152188 -
                         (C152621 * C152318) / C152184;
    const double C150562 = C150557 - C150550;
    const double C45386 = C45348 * C609;
    const double C45377 = C45348 * C601;
    const double C45368 = C45348 * C602;
    const double C45359 = C45348 * C603;
    const double C45685 = C45348 * C1650;
    const double C45676 = C45348 * C1181;
    const double C45667 = C45348 * C1651;
    const double C45652 = C45348 * C1180;
    const double C45987 = C45348 * C2596;
    const double C45978 = C45348 * C607;
    const double C45969 = C45348 * C2597;
    const double C45954 = C45348 * C606;
    const double C46231 = C45348 * C1182;
    const double C46443 = C45348 * C608;
    const double C46764 = C45348 * C1646;
    const double C46755 = C45348 * C1647;
    const double C47575 = C45348 * C2198;
    const double C47883 = C45348 * C1654;
    const double C48967 = C45348 * C3130;
    const double C49179 = C45348 * C2600;
    const double C54174 = C45348 * C1652;
    const double C54168 = C45348 * C1179;
    const double C55094 = C45348 * C1648;
    const double C55455 = C45348 * C8769;
    const double C55449 = C45348 * C2197;
    const double C55712 = C45348 * C10052;
    const double C55706 = C45348 * C1653;
    const double C55700 = C45348 * C3129;
    const double C56426 = C45348 * C8036;
    const double C57686 = C45348 * C9344;
    const double C45406 = C45389 + C45390;
    const double C45401 = C45374 + C45375;
    const double C45400 = C45371 + C45372;
    const double C45395 = C45356 + C45357;
    const double C45708 = C45688 + C45689;
    const double C45703 = C45673 + C45674;
    const double C45700 = C45664 + C45665;
    const double C45699 = C45655 + C45656;
    const double C46010 = C45990 + C45991;
    const double C46005 = C45975 + C45976;
    const double C46002 = C45966 + C45967;
    const double C46001 = C45957 + C45958;
    const double C46240 = C46233 + C45693;
    const double C46452 = C46445 + C45995;
    const double C46778 = C46767 + C46768;
    const double C46773 = C46752 + C46753;
    const double C47584 = C47577 + C47133;
    const double C47892 = C47885 + C47369;
    const double C48976 = C48969 + C47363;
    const double C54183 = C54176 + C45661;
    const double C54178 = C54166 + C45660;
    const double C55100 = C55096 + C46749;
    const double C55467 = C55457 + C47137;
    const double C55462 = C55447 + C47136;
    const double C55727 = C55714 + C47373;
    const double C55722 = C55704 + C47372;
    const double C55719 = C55698 + C47366;
    const double C56435 = C56428 + C48093;
    const double C45398 = C45365 + C45366;
    const double C45397 = C45362 + C45363;
    const double C45705 = C45679 + C45680;
    const double C45702 = C45670 + C45671;
    const double C45697 = C45649 + C45650;
    const double C54181 = C54172 + C45663;
    const double C54180 = C54170 + C45658;
    const double C95163 = C95145 + C95146;
    const double C95160 = C95136 + C95137;
    const double C95159 = C95133 + C95134;
    const double C95157 = C95127 + C95128;
    const double C95464 = C95444 + C95445;
    const double C95463 = C95441 + C95442;
    const double C95461 = C95435 + C95436;
    const double C95459 = C95429 + C95430;
    const double C95456 = C95416 + C95417;
    const double C95454 = C95410 + C95411;
    const double C95758 = C95718 + C95719;
    const double C95756 = C95712 + C95713;
    const double C96527 = C96513 + C96514;
    const double C96525 = C96507 + C96508;
    const double C97338 = C97330 + C96886;
    const double C97336 = C97326 + C96884;
    const double C97650 = C97642 + C97122;
    const double C104054 = C104045 + C95425;
    const double C104053 = C104040 + C95422;
    const double C105264 = C105258 + C96503;
    const double C105742 = C105730 + C96891;
    const double C105740 = C105726 + C96893;
    const double C105739 = C105724 + C96888;
    const double C106069 = C106052 + C97124;
    const double C114762 = C114729 + C114730;
    const double C114761 = C114726 + C114727;
    const double C115069 = C115043 + C115044;
    const double C115066 = C115034 + C115035;
    const double C115061 = C115013 + C115014;
    const double C142552 = C142543 + C115027;
    const double C142551 = C142541 + C115022;
    const double C62216 =
        ((((0 - (C150500 * C150544) / C150502) * ae) / C150502 -
          (0 * be) / C150548 + C150519 / C150502) /
             C150521 -
         ((C150500 * C150568 + 0) * be) / C150502) /
            C150521 -
        ((C150500 * (C150568 / C150521 -
                     ((C150500 * C150563 + C152557) * be) / C150502 + C150564) +
          C152623) *
         be) /
            C150502 +
        C150563 / C150521 - ((C150500 * C150564 + C152461) * be) / C150502;
    const double C62218 =
        (C150568 / C150521 - ((C150500 * C150563 + C152557) * be) / C150502 +
         C150564) /
            C150521 -
        ((C150500 * (C150563 / C150521 -
                     ((C150500 * C150564 + C152461) * be) / C150502) +
          C152605) *
         be) /
            C150502 +
        2 * (C150564 / C150521 - (0 * be) / C150502);
    const double C62220 =
        (C150563 / C150521 - ((C150500 * C150564 + C152461) * be) / C150502) /
            C150521 -
        ((C150500 * (C150564 / C150521 - (0 * be) / C150502) + C114709) * be) /
            C150502;
    const double C114711 = C150568 / C150521 -
                           ((C150500 * C150563 + C152557) * be) / C150502 +
                           C150564;
    const double C114713 =
        C150563 / C150521 - ((C150500 * C150564 + C152461) * be) / C150502;
    const double C693 = C685 * C152419;
    const double C6741 = C685 * C152555;
    const double C23689 = C685 * C23220;
    const double C68327 = C685 * C67854;
    const double C76534 = C685 * C152622;
    const double C657 = C152449 * C632;
    const double C15255 = C152557 * C632;
    const double C15249 = C152461 * C632;
    const double C45382 = C45345 * C632;
    const double C46444 = C45344 * C632;
    const double C95751 = C95115 * C632;
    const double C95745 = C152461 * C632;
    const double C114746 = C114709 * C632;
    const double C115808 = C152605 * C632;
    const double C671 = C655 + C656;
    const double C15271 = C15253 + C15254;
    const double C15269 = C15247 + C15248;
    const double C45403 = C45380 + C45381;
    const double C95765 = C95743 + C95744;
    const double C114767 = C114744 + C114745;
    const double C197 = C191 + C176;
    const double C14689 = C14679 + C14657;
    const double C2836 = C2833 + C1683;
    const double C16037 = C16031 + C16018;
    const double C18248 = C18244 + C16619;
    const double C2612 =
        (2 * (2 * ae * C150723 + C150615 * C150648) + C150918 + C150918 +
         C150615 * (C150648 + C150915 + C150915 +
                    C150615 * (2 * ae * C150738 + C150615 * C150660))) /
        C150520;
    const double C2621 = C135 * C2604;
    const double C15242 = C14624 * C2604;
    const double C17932 = C14622 * C2604;
    const double C45988 = C45349 * C2604;
    const double C45982 = C45351 * C2604;
    const double C49183 = C45347 * C2604;
    const double C62235 = C62222 * C2604;
    const double C95738 = C95120 * C2604;
    const double C98419 = C95118 * C2604;
    const double C115346 = C114715 * C2604;
    const double C8067 = C8062 + C1691;
    const double C40379 = C40377 + C16632;
    const double C17158 = C17154 + C16626;
    const double C8270 = C7817 * C152435;
    const double C23461 = C7817 * C23222;
    const double C25177 = C7817 * C23221;
    const double C69782 = C7817 * C152435;
    const double C76306 = C7817 * C76067;
    const double C77986 = C7817 * C152602;
    const double C8575 = C8573 * C152435;
    const double C24384 = C8573 * C23222;
    const double C25471 = C8573 * C23221;
    const double C70076 = C8573 * C152435;
    const double C77229 = C8573 * C76067;
    const double C78279 = C8573 * C152602;
    const double C38987 = C16851 + C16850;
    const double C86798 = C16850 + C16851;
    const double C150985 = C150984 + C150978;
    const double C3138 =
        (2 * (2 * ae * C150838 + C150615 * C151066) + C151078 + C151078 +
         C150615 *
             (C151066 + C151075 + C151075 +
              C150615 * (2 * ae * C151067 + C150615 * C150807 * C150665))) /
        C150520;
    const double C3143 = C135 * C3134;
    const double C16620 = C14624 * C3134;
    const double C18667 = C14622 * C3134;
    const double C46759 = C45351 * C3134;
    const double C47362 = C45349 * C3134;
    const double C49395 = C45347 * C3134;
    const double C62401 = C62222 * C3134;
    const double C97116 = C95120 * C3134;
    const double C99154 = C95118 * C3134;
    const double C116123 = C114715 * C3134;
    const double C24973 = C152449 * C8042;
    const double C38763 = C152557 * C8042;
    const double C38757 = C152461 * C8042;
    const double C55452 = C45345 * C8042;
    const double C56427 = C45344 * C8042;
    const double C107007 = C152461 * C8042;
    const double C135819 = C95115 * C8042;
    const double C143823 = C114709 * C8042;
    const double C144798 = C152605 * C8042;
    const double C24977 = C24972 + C8056;
    const double C38773 = C38756 + C17359;
    const double C38775 = C38761 + C38762;
    const double C55464 = C55451 + C47134;
    const double C107014 = C107006 + C97855;
    const double C143835 = C143822 + C116498;
    const double C24745 = C24743 + C24737;
    const double C38525 = C38521 + C38511;
    const double C25683 = C25682 + C25678;
    const double C38523 = C38519 + C38505;
    const double C39509 = C39507 + C39501;
    const double C10058 =
        (2 * (2 * ae * C150858 + C150615 * C151109) + C151252 + C151252 +
         C150615 * (C151109 + C151249 + C151249 +
                    C150615 * (2 * ae * C151121 +
                               C150615 * (C150646 + C150658 * C150819)))) /
        C150520;
    const double C10064 = C135 * C10055;
    const double C16631 = C14624 * C10055;
    const double C40075 = C14622 * C10055;
    const double C47374 = C45349 * C10055;
    const double C47370 = C45351 * C10055;
    const double C57690 = C45347 * C10055;
    const double C62397 = C62222 * C10055;
    const double C97127 = C95120 * C10055;
    const double C108684 = C95118 * C10055;
    const double C116734 = C114715 * C10055;
    const double C151188 = C151187 + C151181;
    const double C151693 = C151676 + C151689;
    const double C151307 = ae * C151305;
    const double C151306 = C150615 * C151305;
    const double C151661 = 4 * C151305;
    const double C686 = C678 + C654;
    const double C15290 = C15278 + C15240;
    const double C15284 = C15272 + C15218;
    const double C6275 = C6268 + C6269;
    const double C67871 = C67864 + C67865;
    const double C6512 = C6497 + C6498;
    const double C68103 = C68091 + C68092;
    const double C14694 = C14691 * C152419;
    const double C6749 = C6737 + C6738;
    const double C68335 = C68323 + C68324;
    const double C14996 = C14994 * C152419;
    const double C2840 = C2837 + C2830;
    const double C16041 = C16035 + C16013;
    const double C18254 = C18250 + C18240;
    const double C2986 = C152449 * C2613;
    const double C15237 = C152461 * C2613;
    const double C18456 = C152557 * C2613;
    const double C45971 = C45344 * C2613;
    const double C45953 = C45345 * C2613;
    const double C49182 = C45343 * C2613;
    const double C95733 = C152461 * C2613;
    const double C98943 = C95115 * C2613;
    const double C115335 = C152605 * C2613;
    const double C115317 = C114709 * C2613;
    const double C118540 = C152623 * C2613;
    const double C2990 = C2985 + C2622;
    const double C15265 = C15235 + C15236;
    const double C18462 = C18455 + C17934;
    const double C45999 = C45951 + C45952;
    const double C49188 = C49181 + C48665;
    const double C95761 = C95731 + C95732;
    const double C115363 = C115315 + C115316;
    const double C8073 = C8068 + C8055;
    const double C38786 = C38778 + C38751;
    const double C38157 = C38153 + C38142;
    const double C150963 = ae * C150962;
    const double C2607 = (3 * C150939 + C150615 * C150962 +
                          (2 * C150933 + C150615 * C150952) * ae) /
                         C150502;
    const double C10063 = C152449 * C3137;
    const double C38749 = C152461 * C3137;
    const double C40779 = C152557 * C3137;
    const double C55093 = C45345 * C3137;
    const double C55701 = C45344 * C3137;
    const double C57689 = C45343 * C3137;
    const double C106049 = C152461 * C3137;
    const double C108683 = C95115 * C3137;
    const double C143464 = C114709 * C3137;
    const double C144072 = C152605 * C3137;
    const double C146057 = C152623 * C3137;
    const double C10067 = C10062 + C3142;
    const double C38769 = C38748 + C16622;
    const double C40785 = C40778 + C18665;
    const double C55098 = C55092 + C46751;
    const double C57695 = C57688 + C49392;
    const double C106067 = C106048 + C97118;
    const double C143469 = C143463 + C116115;
    const double C442 = C434 + C412;
    const double C14993 = C14981 + C14953;
    const double C443 = C435 + C415;
    const double C15507 = C15505 + C15498;
    const double C688 = C680 + C660;
    const double C14687 = C14677 + C14651;
    const double C15715 = C15713 + C15706;
    const double C1222 = C1218 + C1207;
    const double C14991 = C14979 + C14947;
    const double C16045 = C16039 + C16025;
    const double C6514 = C6505 + C6506;
    const double C68104 = C68097 + C68098;
    const double C7444 = C7439 + C7440;
    const double C69027 = C69023 + C69024;
    const double C14997 = C14995 * C152419;
    const double C159 =
        (6 * (4 * C150662 + C150622 * C150679) +
         C150622 *
             (5 * C150679 +
              C150622 *
                  (4 * C150677 +
                   C150622 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C389 =
        (3 * C150648 + C150622 * C150662 + C150679 * std::pow(yP - yQ, 2)) /
        C150520;
    const double C390 =
        ((yP - yQ) * (4 * C150662 + C150622 * C150679)) / C150520;
    const double C391 =
        (4 * C150662 + C150622 * C150679 +
         (4 * C150677 +
          C150622 *
              (3 * C150675 +
               C150622 * (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)))) *
             std::pow(yP - yQ, 2)) /
        C150520;
    const double C635 = (2 * ae * (4 * C150742 + C150622 * C150768) +
                         C150615 * (4 * C150662 + C150622 * C150679)) /
                        C150520;
    const double C835 =
        ((yP - yQ) *
         (5 * C150679 +
          C150622 *
              (4 * C150677 +
               C150622 * (3 * C150675 +
                          C150622 * (2 * C150622 * C150673 +
                                     C150622 * (C150673 +
                                                (C150667 * C150668 +
                                                 C150619 * bs[9] *
                                                     std::pow(C150617, 9)) *
                                                    C150618 * C150634)))))) /
        C150520;
    const double C977 =
        (2 * ae * (5 * C150768 + C150622 * C150800) +
         C150615 *
             (5 * C150679 +
              C150622 *
                  (4 * C150677 +
                   C150622 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C1195 =
        (2 * ae * C150807 * C150768 + C150615 * C150807 * C150679) / C150520;
    const double C1831 =
        (2 * C150807 * C150679 +
         C150807 *
             (C150679 +
              (3 * C150675 +
               C150622 * (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634))) *
                  C150819)) /
        C150520;
    const double C2047 =
        (2 * ae * (C150768 + C150796 * C150819) +
         C150615 *
             (C150679 +
              (3 * C150675 +
               C150622 * (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634))) *
                  C150819)) /
        C150520;
    const double C32442 =
        (6 * (4 * C151388 + C150807 * C151519) +
         C150807 *
             (5 * C151519 +
              C150807 *
                  (4 * C151517 +
                   C150807 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C150807 * C150673 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150819)))))) /
        C150520;
    const double C33060 =
        (2 * ae * (5 * C151411 + C150807 * C151543) +
         C150615 *
             (5 * C151519 +
              C150807 *
                  (4 * C151517 +
                   C150807 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C150807 * C150673 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150819)))))) /
        C150520;
    const double C150799 = C150797 * ae;
    const double C976 = (C150615 * (5 * C150768 + C150622 * C150800) +
                         (5 * C150765 + C150622 * C150797) * ae) /
                        C150502;
    const double C1190 =
        (C150615 * C150807 * C150800 + C150807 * C150797 * ae) / C150502;
    const double C143 = 6 * (4 * C150739 + C150622 * C150765) +
                        C150622 * (5 * C150765 + C150622 * C150797);
    const double C367 = 4 * C150739 + C150622 * C150765 + C150797 * C150819;
    const double C612 = 4 * C150739 + C150622 * C150765 + C150797 * C150619;
    const double C833 = C150807 * (5 * C150765 + C150622 * C150797);
    const double C975 = C150615 * (5 * C150765 + C150622 * C150797);
    const double C1184 = C150615 * C150807 * C150797;
    const double C151038 = C151036 + C151037;
    const double C151047 = ae * C151044;
    const double C151046 = C150615 * C151044;
    const double C150890 = ae * C150889;
    const double C1668 = (C150742 + C150764 * C150819 + C150615 * C150889 +
                          C150615 * C150886 * ae) /
                         C150502;
    const double C151027 = C151026 + C151020;
    const double C151104 = C150824 + C151102;
    const double C151160 = ae * C151159;
    const double C8041 = (2 * C150831 + C150807 * C150876 + C150615 * C151159 +
                          C150615 * C151156 * ae) /
                         C150502;
    const double C151273 = C151272 + C151269;
    const double C151238 = ae * C151236;
    const double C151237 = C150615 * C151236;
    const double C151376 = C151352 + C151374;
    const double C151438 = C151436 + C151437;
    const double C25680 = C135 * C25673;
    const double C38993 = C14624 * C25673;
    const double C105737 = C95120 * C25673;
    const double C151507 = C151140 + C151505;
    const double C151484 = ae * C151482;
    const double C151483 = C150615 * C151482;
    const double C151746 = C151744 + C151729;
    const double C151788 = C151761 + C151786;
    const double C151546 = C151544 * ae;
    const double C33059 = (C150615 * (5 * C151411 + C150807 * C151543) +
                           (5 * C151412 + C150807 * C151544) * ae) /
                          C150502;
    const double C32440 = 6 * (4 * C151126 + C150807 * C151412) +
                          C150807 * (5 * C151412 + C150807 * C151544);
    const double C32595 = 4 * C151126 + C150807 * C151412 + C151544 * C150619;
    const double C33058 = C150615 * (5 * C151412 + C150807 * C151544);
    const double C151580 = ae * C151577;
    const double C151579 = C150615 * C151577;
    const double C151567 = C151566 + C151560;
    const double C151649 = C151625 + C151647;
    const double C151838 = C151836 + C151822;
    const double C151899 = C151896 * ae;
    const double C64291 = 6 * (4 * C151298 + C150615 * C151691) +
                          C150615 * (5 * C151691 + C150615 * C151896);
    const double C151900 = ae * C151895;
    const double C151898 = C150615 * C151895;
    const double C150771 = ae * C150770;
    const double C622 = (3 * C150723 + C150622 * C150742 + C150615 * C150770 +
                         C150615 * C150765 * ae) /
                        C150502;
    const double C186 = C177 + C178;
    const double C428 = C416 + C417;
    const double C840 = C837 + C419;
    const double C982 = C979 + C664;
    const double C14668 = C14652 + C14653;
    const double C95164 = C95148 + C95149;
    const double C1215 = C1208 + C1209;
    const double C15502 = C15495 + C14954;
    const double C95998 = C95991 + C95450;
    const double C1669 =
        (C150807 * C150662 + C150829 + C150829 +
         C150615 * (2 * ae * C150824 + C150615 * C150807 * C150677)) /
        C150520;
    const double C1682 = C135 * C1657;
    const double C16021 = C14624 * C1657;
    const double C18241 = C14622 * C1657;
    const double C45691 = C45351 * C1657;
    const double C46771 = C45349 * C1657;
    const double C96517 = C95120 * C1657;
    const double C98728 = C95118 * C1657;
    const double C115055 = C114715 * C1657;
    const double C150906 = C150905 + C150902;
    const double C1846 = C1843 + C1834;
    const double C2062 = C2059 + C2050;
    const double C14992 = C14980 + C14950;
    const double C8051 = C152449 * C1679;
    const double C17143 = C152461 * C1679;
    const double C45684 = C45345 * C1679;
    const double C97639 = C152461 * C1679;
    const double C115048 = C114709 * C1679;
    const double C8061 = C8050 + C1692;
    const double C17152 = C17142 + C16624;
    const double C45706 = C45682 + C45683;
    const double C97648 = C97638 + C97120;
    const double C115070 = C115046 + C115047;
    const double C7816 = C7812 + C7799;
    const double C8572 = C8570 + C8563;
    const double C16848 = C16844 + C16831;
    const double C151007 = C150990 + C151005;
    const double C151092 = ae * C151091;
    const double C3135 =
        (2 * C150835 + C150615 * C151091 + (C150832 + C151082 * C150619) * ae) /
        C150502;
    const double C8043 =
        (2 * C151066 + C150807 * C151112 + C151145 + C151145 +
         C150615 *
             (2 * ae * C151140 +
              C150615 * (2 * C150807 * C150665 +
                         C150807 * (C150665 + C150622 * C150673 * C150819)))) /
        C150520;
    const double C8057 = C135 * C8040;
    const double C17361 = C14624 * C8040;
    const double C40374 = C14622 * C8040;
    const double C47131 = C45351 * C8040;
    const double C48097 = C45349 * C8040;
    const double C97857 = C95120 * C8040;
    const double C106064 = C95118 * C8040;
    const double C116495 = C114715 * C8040;
    const double C24742 = C24740 + C7805;
    const double C25474 = C25473 + C8782;
    const double C38996 = C38994 + C16397;
    const double C151263 = ae * C151262;
    const double C10056 =
        (2 * C150871 + C150615 * C151262 + (C150868 + C151137 * C150619) * ae) /
        C150502;
    const double C151213 = C151193 + C151211;
    const double C151726 = C151720 + C151339;
    const double C151341 = C151340 + C151329;
    const double C151416 = ae * C151415;
    const double C24965 = (3 * C150858 + C150807 * C151125 + C150615 * C151415 +
                           C150615 * C151412 * ae) /
                          C150502;
    const double C32447 = C32444 + C24738;
    const double C33065 = C33062 + C25679;
    const double C38516 = C38506 + C38507;
    const double C135590 = C135584 + C105735;
    const double C151497 = C151496 + C151493;
    const double C151462 = C151445 + C151460;
    const double C151815 = C151807 + C151612;
    const double C151614 = C151613 + C151602;
    const double C151890 = C151873 + C151886;
    const double C151698 = ae * C151696;
    const double C151697 = C150615 * C151696;
    const double C151855 = 4 * C151696;
    const double C180 = C135 * C151;
    const double C420 = C135 * C379;
    const double C839 = C135 * C834;
    const double C32446 = C135 * C32441;
    const double C150566 = C150562 * ae;
    const double C95117 = -(C150562 * be) / C150502;
    const double C45405 = C45386 + C45387;
    const double C45402 = C45377 + C45378;
    const double C45399 = C45368 + C45369;
    const double C45396 = C45359 + C45360;
    const double C45707 = C45685 + C45686;
    const double C45704 = C45676 + C45677;
    const double C45701 = C45667 + C45668;
    const double C45698 = C45652 + C45653;
    const double C46006 = C45978 + C45979;
    const double C46003 = C45969 + C45970;
    const double C46000 = C45954 + C45955;
    const double C46239 = C46231 + C45692;
    const double C46451 = C46443 + C45994;
    const double C46777 = C46764 + C46765;
    const double C46774 = C46755 + C46756;
    const double C47583 = C47575 + C47132;
    const double C47891 = C47883 + C47368;
    const double C54182 = C54174 + C45662;
    const double C54179 = C54168 + C45659;
    const double C55099 = C55094 + C46750;
    const double C55466 = C55455 + C47138;
    const double C55463 = C55449 + C47135;
    const double C55723 = C55706 + C47371;
    const double C55720 = C55700 + C47365;
    const double C56434 = C56426 + C48094;
    const double C45418 = C45406 + C45390;
    const double C45413 = C45401 + C45375;
    const double C45412 = C45400 + C45372;
    const double C45407 = C45395 + C45357;
    const double C45720 = C45708 + C45689;
    const double C45715 = C45703 + C45674;
    const double C45712 = C45700 + C45665;
    const double C45711 = C45699 + C45656;
    const double C46022 = C46010 + C45991;
    const double C46017 = C46005 + C45976;
    const double C46014 = C46002 + C45967;
    const double C46013 = C46001 + C45958;
    const double C46243 = C46240 + C45693;
    const double C46455 = C46452 + C45995;
    const double C46784 = C46778 + C46768;
    const double C46779 = C46773 + C46753;
    const double C47587 = C47584 + C47133;
    const double C47895 = C47892 + C47369;
    const double C48979 = C48976 + C47363;
    const double C54189 = C54183 + C45661;
    const double C54184 = C54178 + C45660;
    const double C55103 = C55100 + C46749;
    const double C55473 = C55467 + C47137;
    const double C55468 = C55462 + C47136;
    const double C55736 = C55727 + C47373;
    const double C55731 = C55722 + C47372;
    const double C55728 = C55719 + C47366;
    const double C56438 = C56435 + C48093;
    const double C45410 = C45398 + C45366;
    const double C45409 = C45397 + C45363;
    const double C45717 = C45705 + C45680;
    const double C45714 = C45702 + C45671;
    const double C45709 = C45697 + C45650;
    const double C54187 = C54181 + C45663;
    const double C54186 = C54180 + C45658;
    const double C95173 = C95163 + C95146;
    const double C95170 = C95160 + C95137;
    const double C95169 = C95159 + C95134;
    const double C95167 = C95157 + C95128;
    const double C95476 = C95464 + C95445;
    const double C95475 = C95463 + C95442;
    const double C95473 = C95461 + C95436;
    const double C95471 = C95459 + C95430;
    const double C95468 = C95456 + C95417;
    const double C95466 = C95454 + C95411;
    const double C95770 = C95758 + C95719;
    const double C95768 = C95756 + C95713;
    const double C96533 = C96527 + C96514;
    const double C96531 = C96525 + C96508;
    const double C97342 = C97338 + C96886;
    const double C97340 = C97336 + C96884;
    const double C97654 = C97650 + C97122;
    const double C104058 = C104054 + C95425;
    const double C104057 = C104053 + C95422;
    const double C105266 = C105264 + C96503;
    const double C105748 = C105742 + C96891;
    const double C105746 = C105740 + C96893;
    const double C105745 = C105739 + C96888;
    const double C106077 = C106069 + C97124;
    const double C114774 = C114762 + C114730;
    const double C114773 = C114761 + C114727;
    const double C115081 = C115069 + C115044;
    const double C115078 = C115066 + C115035;
    const double C115073 = C115061 + C115014;
    const double C142558 = C142552 + C115027;
    const double C142557 = C142551 + C115022;
    const double C62240 = C62216 * C148;
    const double C62239 = C62216 * C147;
    const double C62232 = C62216 * C146;
    const double C62231 = C62216 * C145;
    const double C62224 = C62216 * C144;
    const double C62410 = C62216 * C374;
    const double C62409 = C62216 * C369;
    const double C62405 = C62216 * C373;
    const double C62398 = C62216 * C370;
    const double C62394 = C62216 * C372;
    const double C62393 = C62216 * C371;
    const double C62580 = C62216 * C619;
    const double C62579 = C62216 * C614;
    const double C62575 = C62216 * C618;
    const double C62568 = C62216 * C615;
    const double C62564 = C62216 * C617;
    const double C62563 = C62216 * C616;
    const double C62714 = C62216 * C368;
    const double C62848 = C62216 * C613;
    const double C63054 = C62216 * C1187;
    const double C63053 = C62216 * C1186;
    const double C63046 = C62216 * C1185;
    const double C63290 = C62216 * C1479;
    const double C63289 = C62216 * C1478;
    const double C63448 = C62216 * C1665;
    const double C63447 = C62216 * C1664;
    const double C63443 = C62216 * C1660;
    const double C63582 = C62216 * C1477;
    const double C63780 = C62216 * C1663;
    const double C63914 = C62216 * C2201;
    const double C64298 = C62216 * C2606;
    const double C64497 = C62216 * C1659;
    const double C64631 = C62216 * C2605;
    const double C64765 = C62216 * C3133;
    const double C62241 = C62218 * C621;
    const double C62238 = C62218 * C613;
    const double C62233 = C62218 * C614;
    const double C62230 = C62218 * C615;
    const double C62225 = C62218 * C616;
    const double C62411 = C62218 * C1662;
    const double C62408 = C62218 * C1187;
    const double C62404 = C62218 * C1663;
    const double C62399 = C62218 * C1186;
    const double C62395 = C62218 * C1664;
    const double C62392 = C62218 * C1185;
    const double C62581 = C62218 * C2604;
    const double C62578 = C62218 * C619;
    const double C62574 = C62218 * C2605;
    const double C62569 = C62218 * C618;
    const double C62565 = C62218 * C2606;
    const double C62562 = C62218 * C617;
    const double C62715 = C62218 * C1188;
    const double C62849 = C62218 * C620;
    const double C63055 = C62218 * C1658;
    const double C63052 = C62218 * C1659;
    const double C63047 = C62218 * C1660;
    const double C63291 = C62218 * C8772;
    const double C63288 = C62218 * C2201;
    const double C63449 = C62218 * C10055;
    const double C63446 = C62218 * C1665;
    const double C63442 = C62218 * C3133;
    const double C63583 = C62218 * C2202;
    const double C63781 = C62218 * C1666;
    const double C63915 = C62218 * C8039;
    const double C64498 = C62218 * C3134;
    const double C62237 = C62220 * C620;
    const double C62234 = C62220 * C619;
    const double C62229 = C62220 * C618;
    const double C62226 = C62220 * C617;
    const double C62412 = C62220 * C1667;
    const double C62407 = C62220 * C1658;
    const double C62403 = C62220 * C1666;
    const double C62400 = C62220 * C1659;
    const double C62396 = C62220 * C1665;
    const double C62391 = C62220 * C1660;
    const double C62577 = C62220 * C2604;
    const double C62570 = C62220 * C2605;
    const double C62561 = C62220 * C2606;
    const double C62716 = C62220 * C1657;
    const double C63051 = C62220 * C3134;
    const double C63048 = C62220 * C3133;
    const double C63287 = C62220 * C8039;
    const double C63445 = C62220 * C10055;
    const double C63584 = C62220 * C8040;
    const double C114756 = C114711 * C149;
    const double C114754 = C114711 * C148;
    const double C114739 = C114711 * C147;
    const double C114736 = C114711 * C146;
    const double C114721 = C114711 * C145;
    const double C114717 = C114711 * C144;
    const double C115058 = C114711 * C375;
    const double C115057 = C114711 * C368;
    const double C115053 = C114711 * C374;
    const double C115038 = C114711 * C369;
    const double C115029 = C114711 * C373;
    const double C115025 = C114711 * C372;
    const double C115024 = C114711 * C371;
    const double C115020 = C114711 * C370;
    const double C115360 = C114711 * C620;
    const double C115359 = C114711 * C613;
    const double C115355 = C114711 * C619;
    const double C115340 = C114711 * C614;
    const double C115331 = C114711 * C618;
    const double C115327 = C114711 * C617;
    const double C115326 = C114711 * C616;
    const double C115322 = C114711 * C615;
    const double C115599 = C114711 * C376;
    const double C115811 = C114711 * C621;
    const double C116134 = C114711 * C1188;
    const double C116132 = C114711 * C1187;
    const double C116117 = C114711 * C1186;
    const double C116113 = C114711 * C1185;
    const double C116504 = C114711 * C1480;
    const double C116501 = C114711 * C1479;
    const double C116500 = C114711 * C1478;
    const double C116497 = C114711 * C1477;
    const double C116740 = C114711 * C1666;
    const double C116737 = C114711 * C1665;
    const double C116736 = C114711 * C1664;
    const double C116733 = C114711 * C1663;
    const double C116730 = C114711 * C1660;
    const double C116727 = C114711 * C1659;
    const double C116943 = C114711 * C1476;
    const double C117251 = C114711 * C1662;
    const double C117460 = C114711 * C2202;
    const double C117457 = C114711 * C2201;
    const double C118026 = C114711 * C2606;
    const double C118023 = C114711 * C2605;
    const double C118329 = C114711 * C1658;
    const double C118541 = C114711 * C2604;
    const double C118750 = C114711 * C3134;
    const double C118747 = C114711 * C3133;
    const double C143830 = C114711 * C7789;
    const double C144087 = C114711 * C8039;
    const double C144801 = C114711 * C8772;
    const double C146058 = C114711 * C10055;
    const double C114757 = C114713 * C623;
    const double C114751 = C114713 * C621;
    const double C114742 = C114713 * C613;
    const double C114733 = C114713 * C614;
    const double C114724 = C114713 * C615;
    const double C114718 = C114713 * C616;
    const double C115059 = C114713 * C1661;
    const double C115056 = C114713 * C1188;
    const double C115050 = C114713 * C1662;
    const double C115041 = C114713 * C1187;
    const double C115032 = C114713 * C1663;
    const double C115026 = C114713 * C1664;
    const double C115023 = C114713 * C1185;
    const double C115017 = C114713 * C1186;
    const double C115358 = C114713 * C620;
    const double C115352 = C114713 * C2604;
    const double C115343 = C114713 * C619;
    const double C115334 = C114713 * C2605;
    const double C115328 = C114713 * C2606;
    const double C115325 = C114713 * C617;
    const double C115319 = C114713 * C618;
    const double C115600 = C114713 * C1189;
    const double C116135 = C114713 * C1657;
    const double C116129 = C114713 * C1658;
    const double C116120 = C114713 * C1659;
    const double C116114 = C114713 * C1660;
    const double C116505 = C114713 * C8773;
    const double C116502 = C114713 * C8772;
    const double C116499 = C114713 * C2201;
    const double C116496 = C114713 * C2202;
    const double C116738 = C114713 * C10055;
    const double C116735 = C114713 * C1665;
    const double C116732 = C114713 * C1666;
    const double C116729 = C114713 * C3133;
    const double C116726 = C114713 * C3134;
    const double C116944 = C114713 * C2203;
    const double C117252 = C114713 * C1667;
    const double C117461 = C114713 * C8040;
    const double C117458 = C114713 * C8039;
    const double C143831 = C114713 * C25672;
    const double C679 = C671 + C656;
    const double C15283 = C15271 + C15254;
    const double C15281 = C15269 + C15248;
    const double C45415 = C45403 + C45381;
    const double C95777 = C95765 + C95744;
    const double C114779 = C114767 + C114745;
    const double C203 = C197 * C152419;
    const double C6273 = C197 * C152555;
    const double C67869 = C197 * C67854;
    const double C2839 = C2836 + C2828;
    const double C16043 = C16037 + C16019;
    const double C18252 = C18248 + C18236;
    const double C2984 = C152449 * C2612;
    const double C15243 = C152461 * C2612;
    const double C18452 = C152557 * C2612;
    const double C45989 = C45344 * C2612;
    const double C45983 = C45345 * C2612;
    const double C95739 = C152461 * C2612;
    const double C98939 = C95115 * C2612;
    const double C115353 = C152605 * C2612;
    const double C115347 = C114709 * C2612;
    const double C2989 = C2983 + C2621;
    const double C15267 = C15241 + C15242;
    const double C18460 = C18451 + C17932;
    const double C46009 = C45987 + C45988;
    const double C46007 = C45981 + C45982;
    const double C95763 = C95737 + C95738;
    const double C115371 = C115345 + C115346;
    const double C8072 = C8067 + C8053;
    const double C40381 = C40379 + C40373;
    const double C17162 = C17158 + C17147;
    const double C150986 = ae * C150985;
    const double C2608 = (3 * C150928 + C150615 * C150985 +
                          (2 * C150922 + C150615 * C150975) * ae) /
                         C150502;
    const double C9849 = C152449 * C3138;
    const double C18238 = C152461 * C3138;
    const double C46760 = C45345 * C3138;
    const double C48968 = C45344 * C3138;
    const double C88837 = C152557 * C3138;
    const double C98725 = C152461 * C3138;
    const double C108415 = C95115 * C3138;
    const double C116124 = C114709 * C3138;
    const double C118326 = C152605 * C3138;
    const double C9852 = C9848 + C3143;
    const double C18245 = C18237 + C16620;
    const double C88839 = C88836 + C18667;
    const double C46775 = C46758 + C46759;
    const double C48975 = C48967 + C47362;
    const double C98732 = C98724 + C97116;
    const double C116139 = C116122 + C116123;
    const double C24979 = C24977 + C8056;
    const double C38781 = C38773 + C17359;
    const double C38783 = C38775 + C38762;
    const double C55470 = C55464 + C47134;
    const double C107016 = C107014 + C97855;
    const double C143841 = C143835 + C116498;
    const double C38526 = C38522 + C38523;
    const double C26946 = C152449 * C10058;
    const double C38753 = C152461 * C10058;
    const double C40775 = C152557 * C10058;
    const double C55713 = C45344 * C10058;
    const double C55709 = C45345 * C10058;
    const double C106059 = C152461 * C10058;
    const double C137760 = C95115 * C10058;
    const double C144084 = C152605 * C10058;
    const double C144080 = C114709 * C10058;
    const double C26949 = C26945 + C10064;
    const double C38771 = C38752 + C16631;
    const double C40783 = C40774 + C40075;
    const double C55726 = C55712 + C47374;
    const double C55724 = C55708 + C47370;
    const double C106072 = C106058 + C97127;
    const double C144095 = C144079 + C116734;
    const double C151189 = ae * C151188;
    const double C9347 = (3 * C151063 + C150615 * C151188 +
                          (2 * C151057 + C150615 * C151179) * ae) /
                         C150502;
    const double C151308 = C151279 + C151306;
    const double C694 = C686 * C152419;
    const double C6743 = C686 * C152555;
    const double C23697 = C686 * C23220;
    const double C68329 = C686 * C67854;
    const double C76542 = C686 * C152622;
    const double C15296 = C15284 + C15285;
    const double C2843 = C2840 * C152419;
    const double C6742 = C2840 * C152435;
    const double C9650 = C2840 * C152555;
    const double C23690 = C2840 * C23221;
    const double C26542 = C2840 * C23220;
    const double C68328 = C2840 * C152435;
    const double C71123 = C2840 * C67854;
    const double C76535 = C2840 * C152602;
    const double C79325 = C2840 * C152622;
    const double C85796 = C16040 + C16041;
    const double C85795 = C16041 + C16040;
    const double C2993 = C2990 + C2622;
    const double C15277 = C15265 + C15236;
    const double C18466 = C18462 + C17934;
    const double C46011 = C45999 + C45952;
    const double C49191 = C49188 + C48665;
    const double C95773 = C95761 + C95732;
    const double C115375 = C115363 + C115316;
    const double C38745 = C38157 + C38158;
    const double C2615 =
        (3 * (C150629 + C150937 + C150937 + C150615 * C150953) + C150963 +
         C150963 +
         C150615 *
             (2 * C150953 + C150960 + C150960 +
              C150615 * (C150638 + C150956 + C150956 +
                         C150615 * (2 * ae * C150719 + C150615 * C150646)))) /
        C150520;
    const double C2624 = C135 * C2607;
    const double C17937 = C14622 * C2607;
    const double C17935 = C14624 * C2607;
    const double C45965 = C45351 * C2607;
    const double C48669 = C45347 * C2607;
    const double C48667 = C45349 * C2607;
    const double C62566 = C62220 * C2607;
    const double C62560 = C62222 * C2607;
    const double C64299 = C62216 * C2607;
    const double C64297 = C62218 * C2607;
    const double C98424 = C95118 * C2607;
    const double C98422 = C95120 * C2607;
    const double C115329 = C114715 * C2607;
    const double C118027 = C114711 * C2607;
    const double C118025 = C114713 * C2607;
    const double C10068 = C10067 + C3142;
    const double C38777 = C38769 + C16622;
    const double C40789 = C40785 + C18665;
    const double C55101 = C55098 + C46751;
    const double C57698 = C57695 + C49392;
    const double C106075 = C106067 + C97118;
    const double C143472 = C143469 + C116115;
    const double C450 = C442 * C152419;
    const double C6510 = C442 * C152555;
    const double C6508 = C442 * C152435;
    const double C23234 = C442 * C23222;
    const double C23893 = C442 * C23221;
    const double C68102 = C442 * C67854;
    const double C68100 = C442 * C152435;
    const double C76079 = C442 * C76067;
    const double C76738 = C442 * C152602;
    const double C451 = C443 * C152419;
    const double C6271 = C443 * C152435;
    const double C6947 = C443 * C152555;
    const double C23236 = C443 * C23221;
    const double C67867 = C443 * C152435;
    const double C68533 = C443 * C67854;
    const double C76081 = C443 * C152602;
    const double C696 = C688 * C152419;
    const double C7144 = C688 * C152555;
    const double C68730 = C688 * C67854;
    const double C14692 = C14686 + C14687;
    const double C1226 = C1222 * C152419;
    const double C6746 = C1222 * C152435;
    const double C7442 = C1222 * C152555;
    const double C24090 = C1222 * C23221;
    const double C68332 = C1222 * C152435;
    const double C69026 = C1222 * C67854;
    const double C76935 = C1222 * C152602;
    const double C15494 = C14990 + C14991;
    const double C85150 = C14991 + C14990;
    const double C418 = C152449 * C389;
    const double C838 = C152449 * C390;
    const double C980 = C152449 * C635;
    const double C14654 = C152461 * C635;
    const double C95150 = C152461 * C635;
    const double C1210 = C152449 * C1195;
    const double C15496 = C152461 * C1195;
    const double C95992 = C152461 * C1195;
    const double C150802 = C150801 + C150799;
    const double C981 = C135 * C976;
    const double C14659 = C14624 * C976;
    const double C95155 = C95120 * C976;
    const double C1211 = C135 * C1190;
    const double C15500 = C14624 * C1190;
    const double C95996 = C95120 * C1190;
    const double C151039 = ae * C151038;
    const double C2822 =
        (C150807 * C150768 + C150615 * C151038 + C150615 * C151035 * ae) /
        C150502;
    const double C151048 = C150768 + C151046;
    const double C1680 =
        (C150662 + C150677 * C150819 + C150890 + C150890 +
         C150615 *
             (2 * ae * C150885 +
              C150615 * (C150677 +
                         (2 * C150622 * C150673 +
                          C150622 * (C150673 +
                                     (C150667 * C150668 +
                                      C150619 * bs[9] * std::pow(C150617, 9)) *
                                         C150618 * C150634)) *
                             C150819))) /
        C150520;
    const double C1693 = C135 * C1668;
    const double C17151 = C14624 * C1668;
    const double C45696 = C45351 * C1668;
    const double C97647 = C95120 * C1668;
    const double C115060 = C114715 * C1668;
    const double C151029 = ae * C151027;
    const double C151028 = C150615 * C151027;
    const double C151105 = C151104 + C151101;
    const double C8044 =
        (2 * C151080 + C150807 * C151115 + C151160 + C151160 +
         C150615 *
             (2 * ae * C151155 +
              C150615 *
                  (2 * C150807 * C150675 +
                   C150807 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150819)))) /
        C150520;
    const double C8058 = C135 * C8041;
    const double C17363 = C14624 * C8041;
    const double C47581 = C45351 * C8041;
    const double C97859 = C95120 * C8041;
    const double C116945 = C114715 * C8041;
    const double C151274 = ae * C151273;
    const double C10057 =
        (2 * C150880 + C150615 * C151273 + (C150877 + C151152 * C150619) * ae) /
        C150502;
    const double C151239 = C151219 + C151237;
    const double C151377 = C151376 + C151365;
    const double C151439 = ae * C151438;
    const double C24966 = (3 * C150867 + C150807 * C151140 + C150615 * C151438 +
                           C150615 * C151435 * ae) /
                          C150502;
    const double C151508 = C151507 + C151504;
    const double C151485 = C151468 + C151483;
    const double C151748 = ae * C151746;
    const double C151747 = C150615 * C151746;
    const double C151789 = C151788 + C151778;
    const double C151547 = C151545 + C151546;
    const double C33064 = C135 * C33059;
    const double C38513 = C14624 * C33059;
    const double C135589 = C95120 * C33059;
    const double C151581 = C151411 + C151579;
    const double C151569 = ae * C151567;
    const double C151568 = C150615 * C151567;
    const double C151650 = C151649 + C151638;
    const double C151840 = ae * C151838;
    const double C151839 = C150615 * C151838;
    const double C151901 = C151856 + C151898;
    const double C634 = (3 * C150648 + C150622 * C150662 + C150771 + C150771 +
                         C150615 * (2 * ae * C150768 + C150615 * C150679)) /
                        C150520;
    const double C662 = C135 * C622;
    const double C15258 = C14622 * C622;
    const double C15256 = C14624 * C622;
    const double C45384 = C45351 * C622;
    const double C46448 = C45349 * C622;
    const double C62242 = C62220 * C622;
    const double C95754 = C95118 * C622;
    const double C95752 = C95120 * C622;
    const double C114748 = C114715 * C622;
    const double C115812 = C114713 * C622;
    const double C192 = C186 + C178;
    const double C436 = C428 + C417;
    const double C841 = C840 + C419;
    const double C983 = C982 + C664;
    const double C14678 = C14668 + C14653;
    const double C95174 = C95164 + C95149;
    const double C1219 = C1215 + C1209;
    const double C15504 = C15502 + C14954;
    const double C96000 = C95998 + C95450;
    const double C2826 = C152449 * C1669;
    const double C16022 = C152461 * C1669;
    const double C46230 = C45345 * C1669;
    const double C96518 = C152461 * C1669;
    const double C115594 = C114709 * C1669;
    const double C2832 = C2825 + C1682;
    const double C16032 = C16020 + C16021;
    const double C46238 = C46229 + C45691;
    const double C96528 = C96516 + C96517;
    const double C115602 = C115593 + C115055;
    const double C150907 = ae * C150906;
    const double C2603 =
        (2 * C150744 + C150615 * C150906 + (C150739 + C150761 * C150619) * ae) /
        C150502;
    const double C1849 = C1846 * C152419;
    const double C6509 = C1846 * C152435;
    const double C23892 = C1846 * C23222;
    const double C68101 = C1846 * C152435;
    const double C76737 = C1846 * C76067;
    const double C2065 = C2062 * C152419;
    const double C7441 = C2062 * C152435;
    const double C24089 = C2062 * C23222;
    const double C69025 = C2062 * C152435;
    const double C76934 = C2062 * C76067;
    const double C8066 = C8061 + C1692;
    const double C17156 = C17152 + C16624;
    const double C45718 = C45706 + C45683;
    const double C97652 = C97648 + C97120;
    const double C115082 = C115070 + C115047;
    const double C8268 = C7816 * C152435;
    const double C23465 = C7816 * C23222;
    const double C69780 = C7816 * C152435;
    const double C76310 = C7816 * C76067;
    const double C8574 = C8572 * C152435;
    const double C24385 = C8572 * C23222;
    const double C70074 = C8572 * C152435;
    const double C77230 = C8572 * C76067;
    const double C151008 = C151007 + C151001;
    const double C3139 =
        (2 * (2 * ae * C150831 + C150615 * C151080) + C151092 + C151092 +
         C150615 *
             (C151080 + C151089 + C151089 +
              C150615 * (2 * ae * C151081 + C150615 * C150807 * C150675))) /
        C150520;
    const double C3144 = C135 * C3135;
    const double C16618 = C14624 * C3135;
    const double C18669 = C14622 * C3135;
    const double C46762 = C45351 * C3135;
    const double C48972 = C45349 * C3135;
    const double C62406 = C62222 * C3135;
    const double C63056 = C62220 * C3135;
    const double C97114 = C95120 * C3135;
    const double C99156 = C95118 * C3135;
    const double C116126 = C114715 * C3135;
    const double C118330 = C114713 * C3135;
    const double C24971 = C152449 * C8043;
    const double C39292 = C152461 * C8043;
    const double C47574 = C45345 * C8043;
    const double C106738 = C152461 * C8043;
    const double C116938 = C114709 * C8043;
    const double C24976 = C24970 + C8057;
    const double C39297 = C39291 + C17361;
    const double C47582 = C47573 + C47131;
    const double C106742 = C106737 + C97857;
    const double C116946 = C116937 + C116495;
    const double C24744 = C24742 + C24735;
    const double C25475 = C25474 + C25470;
    const double C38998 = C38996 + C38989;
    const double C10059 =
        (2 * (2 * ae * C150867 + C150615 * C151112) + C151263 + C151263 +
         C150615 *
             (C151112 + C151260 + C151260 +
              C150615 * (2 * ae * C151136 +
                         C150615 * (C150665 + C150622 * C150673 * C150819)))) /
        C150520;
    const double C10065 = C135 * C10056;
    const double C16633 = C14624 * C10056;
    const double C40576 = C14622 * C10056;
    const double C47377 = C45349 * C10056;
    const double C47367 = C45351 * C10056;
    const double C62402 = C62222 * C10056;
    const double C63782 = C62220 * C10056;
    const double C97129 = C95120 * C10056;
    const double C108686 = C95118 * C10056;
    const double C116741 = C114713 * C10056;
    const double C116731 = C114715 * C10056;
    const double C151214 = C151213 + C151207;
    const double C151743 = C151726 + C151739;
    const double C151343 = ae * C151341;
    const double C151342 = C150615 * C151341;
    const double C151711 = 4 * C151341;
    const double C24967 =
        (3 * C151109 + C150807 * C151388 + C151416 + C151416 +
         C150615 * (2 * ae * C151411 +
                    C150615 * (3 * C151386 +
                               C150807 * (2 * C150807 * C150658 +
                                          C150807 * (C150658 +
                                                     C150673 * C150819))))) /
        C150520;
    const double C24974 = C135 * C24965;
    const double C38766 = C14622 * C24965;
    const double C38764 = C14624 * C24965;
    const double C47139 = C45351 * C24965;
    const double C56431 = C45349 * C24965;
    const double C63292 = C62220 * C24965;
    const double C107011 = C95120 * C24965;
    const double C116503 = C114715 * C24965;
    const double C135820 = C95118 * C24965;
    const double C144802 = C114713 * C24965;
    const double C32448 = C32447 + C24738;
    const double C33066 = C33065 + C25679;
    const double C38520 = C38516 + C38507;
    const double C135592 = C135590 + C105735;
    const double C151498 = ae * C151497;
    const double C26940 =
        (2 * C151129 + C150615 * C151497 + (C151126 + C151408 * C150619) * ae) /
        C150502;
    const double C151463 = C151462 + C151456;
    const double C151832 = C151815 + C151828;
    const double C151616 = ae * C151614;
    const double C151615 = C150615 * C151614;
    const double C151800 = 4 * C151614;
    const double C151894 = C150615 * C151890;
    const double C151865 = C151849 + C151698;
    const double C151699 = C151662 + C151697;
    const double C62215 =
        ((ae * -2 * C150544) / C150545 -
         (((C150500 * C150554) / C150520 + 2 * C150568) * be) / C150502) /
            C150521 -
        ((C150500 *
              (C150554 / C150545 -
               (((C150500 * C150566) / C150502 + 2 * C150563) * be) / C150502 -
               C150527 / C150548) +
          2 * (C150568 / C150521 -
               ((C150500 * C150563 + C152557) * be) / C150502 + C150564)) *
         be) /
            C150502 +
        C150566 / C150548 - ((2 * C150564 - C150534 / C150548) * be) / C150502;
    const double C62217 =
        (C150554 / C150545 -
         (((C150500 * C150566) / C150502 + 2 * C150563) * be) / C150502 -
         C150527 / C150548) /
            C150521 -
        ((C150500 * (C150566 / C150548 -
                     ((2 * C150564 - C150534 / C150548) * be) / C150502) +
          2 * (C150563 / C150521 -
               ((C150500 * C150564 + C152461) * be) / C150502)) *
         be) /
            C150502 +
        (-2 * C150527) / (C150502 * 4 * C150520);
    const double C62219 = (C150566 / C150548 -
                           ((2 * C150564 - C150534 / C150548) * be) / C150502) /
                              C150521 -
                          ((2 * (C150564 / C150521 - (0 * be) / C150502) -
                            C150534 / (C150502 * 4 * C150520)) *
                           be) /
                              C150502;
    const double C114710 =
        C150554 / C150545 -
        (((C150500 * C150566) / C150502 + 2 * C150563) * be) / C150502 -
        C150527 / C150548;
    const double C114712 =
        C150566 / C150548 - ((2 * C150564 - C150534 / C150548) * be) / C150502;
    const double C95151 = C95117 * C141;
    const double C95142 = C95117 * C140;
    const double C95139 = C95117 * C139;
    const double C95130 = C95117 * C138;
    const double C95124 = C95117 * C137;
    const double C95447 = C95117 * C363;
    const double C95438 = C95117 * C356;
    const double C95432 = C95117 * C362;
    const double C95426 = C95117 * C361;
    const double C95419 = C95117 * C358;
    const double C95413 = C95117 * C357;
    const double C95749 = C95117 * C608;
    const double C95740 = C95117 * C601;
    const double C95734 = C95117 * C607;
    const double C95728 = C95117 * C606;
    const double C95721 = C95117 * C603;
    const double C95715 = C95117 * C602;
    const double C95993 = C95117 * C364;
    const double C96201 = C95117 * C609;
    const double C96519 = C95117 * C1182;
    const double C96510 = C95117 * C1181;
    const double C96504 = C95117 * C1180;
    const double C97332 = C95117 * C1469;
    const double C97328 = C95117 * C1468;
    const double C97644 = C95117 * C1651;
    const double C97640 = C95117 * C1650;
    const double C98726 = C95117 * C1647;
    const double C98722 = C95117 * C1646;
    const double C98942 = C95117 * C2597;
    const double C98938 = C95117 * C2596;
    const double C104047 = C95117 * C360;
    const double C104038 = C95117 * C359;
    const double C105260 = C95117 * C1179;
    const double C105732 = C95117 * C1471;
    const double C105728 = C95117 * C1472;
    const double C105722 = C95117 * C1470;
    const double C106060 = C95117 * C1653;
    const double C106056 = C95117 * C1654;
    const double C106050 = C95117 * C1652;
    const double C106046 = C95117 * C1648;
    const double C106739 = C95117 * C2198;
    const double C107008 = C95117 * C2197;
    const double C108414 = C95117 * C3130;
    const double C108682 = C95117 * C3129;
    const double C135586 = C95117 * C7786;
    const double C135818 = C95117 * C8036;
    const double C136509 = C95117 * C8769;
    const double C137759 = C95117 * C10052;
    const double C45417 = C45405 + C45387;
    const double C45414 = C45402 + C45378;
    const double C45411 = C45399 + C45369;
    const double C45408 = C45396 + C45360;
    const double C45719 = C45707 + C45686;
    const double C45716 = C45704 + C45677;
    const double C45713 = C45701 + C45668;
    const double C45710 = C45698 + C45653;
    const double C46018 = C46006 + C45979;
    const double C46015 = C46003 + C45970;
    const double C46012 = C46000 + C45955;
    const double C46242 = C46239 + C45692;
    const double C46454 = C46451 + C45994;
    const double C46783 = C46777 + C46765;
    const double C46780 = C46774 + C46756;
    const double C47586 = C47583 + C47132;
    const double C47894 = C47891 + C47368;
    const double C54188 = C54182 + C45662;
    const double C54185 = C54179 + C45659;
    const double C55102 = C55099 + C46750;
    const double C55472 = C55466 + C47138;
    const double C55469 = C55463 + C47135;
    const double C55732 = C55723 + C47371;
    const double C55729 = C55720 + C47365;
    const double C56437 = C56434 + C48094;
    const double C45430 = C45418 + C45391;
    const double C45425 = C45413 + C45376;
    const double C45424 = C45412 + C45373;
    const double C45419 = C45407 + C45358;
    const double C45732 = C45720 + C45690;
    const double C45727 = C45715 + C45675;
    const double C45724 = C45712 + C45666;
    const double C45723 = C45711 + C45657;
    const double C46034 = C46022 + C45992;
    const double C46029 = C46017 + C45977;
    const double C46026 = C46014 + C45968;
    const double C46025 = C46013 + C45959;
    const double C46246 = C46243 + C46234;
    const double C46458 = C46455 + C46446;
    const double C46790 = C46784 + C46769;
    const double C46785 = C46779 + C46754;
    const double C47590 = C47587 + C47578;
    const double C47898 = C47895 + C47886;
    const double C48982 = C48979 + C48970;
    const double C54195 = C54189 + C54177;
    const double C54190 = C54184 + C54167;
    const double C55106 = C55103 + C55097;
    const double C55479 = C55473 + C55458;
    const double C55474 = C55468 + C55448;
    const double C55745 = C55736 + C55715;
    const double C55740 = C55731 + C55705;
    const double C55737 = C55728 + C55699;
    const double C56441 = C56438 + C56429;
    const double C45422 = C45410 + C45367;
    const double C45421 = C45409 + C45364;
    const double C45729 = C45717 + C45681;
    const double C45726 = C45714 + C45672;
    const double C45721 = C45709 + C45651;
    const double C54193 = C54187 + C54173;
    const double C54192 = C54186 + C54171;
    const double C95183 = C95173 + C95147;
    const double C95180 = C95170 + C95138;
    const double C95179 = C95169 + C95135;
    const double C95177 = C95167 + C95129;
    const double C95488 = C95476 + C95446;
    const double C95487 = C95475 + C95443;
    const double C95485 = C95473 + C95437;
    const double C95483 = C95471 + C95431;
    const double C95480 = C95468 + C95418;
    const double C95478 = C95466 + C95412;
    const double C95782 = C95770 + C95720;
    const double C95780 = C95768 + C95714;
    const double C96539 = C96533 + C96515;
    const double C96537 = C96531 + C96509;
    const double C97346 = C97342 + C97331;
    const double C97344 = C97340 + C97327;
    const double C97658 = C97654 + C97643;
    const double C104062 = C104058 + C104046;
    const double C104061 = C104057 + C104041;
    const double C105268 = C105266 + C105259;
    const double C105754 = C105748 + C105731;
    const double C105752 = C105746 + C105727;
    const double C105751 = C105745 + C105725;
    const double C106085 = C106077 + C106053;
    const double C114786 = C114774 + C114731;
    const double C114785 = C114773 + C114728;
    const double C115093 = C115081 + C115045;
    const double C115090 = C115078 + C115036;
    const double C115085 = C115073 + C115015;
    const double C142564 = C142558 + C142544;
    const double C142563 = C142557 + C142542;
    const double C687 = C679 + C657;
    const double C15295 = C15283 + C15255;
    const double C15293 = C15281 + C15249;
    const double C45427 = C45415 + C45382;
    const double C95789 = C95777 + C95745;
    const double C114791 = C114779 + C114746;
    const double C2842 = C2839 * C152419;
    const double C6744 = C2839 * C152435;
    const double C9648 = C2839 * C152555;
    const double C23696 = C2839 * C23221;
    const double C68330 = C2839 * C152435;
    const double C71121 = C2839 * C67854;
    const double C76541 = C2839 * C152602;
    const double C16046 = C16042 + C16043;
    const double C85797 = C16043 + C16042;
    const double C2992 = C2989 + C2621;
    const double C15279 = C15267 + C15242;
    const double C18464 = C18460 + C17932;
    const double C46021 = C46009 + C45988;
    const double C46019 = C46007 + C45982;
    const double C95775 = C95763 + C95738;
    const double C115383 = C115371 + C115346;
    const double C9649 = C8072 * C152435;
    const double C23691 = C8072 * C23222;
    const double C26541 = C8072 * C23221;
    const double C71122 = C8072 * C152435;
    const double C76536 = C8072 * C76067;
    const double C79324 = C8072 * C152602;
    const double C39290 = C17163 + C17162;
    const double C87185 = C17162 + C17163;
    const double C2616 =
        (3 * (C150816 + C150926 + C150926 + C150615 * C150976) + C150986 +
         C150986 +
         C150615 *
             (2 * C150976 + C150983 + C150983 +
              C150615 * (C150650 + C150979 + C150979 +
                         C150615 * (2 * ae * C150749 + C150615 * C150665)))) /
        C150520;
    const double C2625 = C135 * C2608;
    const double C17939 = C14622 * C2608;
    const double C17933 = C14624 * C2608;
    const double C45973 = C45351 * C2608;
    const double C48672 = C45347 * C2608;
    const double C48664 = C45349 * C2608;
    const double C62573 = C62220 * C2608;
    const double C62571 = C62222 * C2608;
    const double C64632 = C62218 * C2608;
    const double C98426 = C95118 * C2608;
    const double C98420 = C95120 * C2608;
    const double C115337 = C114715 * C2608;
    const double C118030 = C114711 * C2608;
    const double C118022 = C114713 * C2608;
    const double C9854 = C9852 + C3143;
    const double C18249 = C18245 + C16620;
    const double C88841 = C88839 + C18667;
    const double C46781 = C46775 + C46759;
    const double C48978 = C48975 + C47362;
    const double C98736 = C98732 + C97116;
    const double C116145 = C116139 + C116123;
    const double C24981 = C24979 + C24973;
    const double C38789 = C38781 + C38757;
    const double C38791 = C38783 + C38763;
    const double C55476 = C55470 + C55452;
    const double C107018 = C107016 + C107007;
    const double C143847 = C143841 + C143823;
    const double C26950 = C26949 + C10064;
    const double C38779 = C38771 + C16631;
    const double C40787 = C40783 + C40075;
    const double C55735 = C55726 + C47374;
    const double C55733 = C55724 + C47370;
    const double C106080 = C106072 + C97127;
    const double C144104 = C144095 + C116734;
    const double C9350 =
        (3 * (C151052 + C151061 + C151061 + C150615 * C151176) + C151189 +
         C151189 +
         C150615 * (2 * C151176 + C151186 + C151186 +
                    C150615 * (C151166 + C151182 + C151182 +
                               C150615 * (2 * ae * C151168 +
                                          C150615 * C150807 * C150658)))) /
        C150520;
    const double C9354 = C135 * C9347;
    const double C18666 = C14624 * C9347;
    const double C40076 = C14622 * C9347;
    const double C47364 = C45351 * C9347;
    const double C49393 = C45349 * C9347;
    const double C57003 = C45347 * C9347;
    const double C63049 = C62222 * C9347;
    const double C63441 = C62220 * C9347;
    const double C64766 = C62218 * C9347;
    const double C99153 = C95120 * C9347;
    const double C107762 = C95118 * C9347;
    const double C116728 = C114715 * C9347;
    const double C118748 = C114713 * C9347;
    const double C145371 = C114711 * C9347;
    const double C151309 = C151308 + C151301;
    const double C15298 = C15296 * C152419;
    const double C2996 = C2993 + C2986;
    const double C15289 = C15277 + C15237;
    const double C18470 = C18466 + C18456;
    const double C46023 = C46011 + C45953;
    const double C49194 = C49191 + C49182;
    const double C95785 = C95773 + C95733;
    const double C115387 = C115375 + C115317;
    const double C10069 = C10068 + C10063;
    const double C38785 = C38777 + C38749;
    const double C40793 = C40789 + C40779;
    const double C55104 = C55101 + C55093;
    const double C57701 = C57698 + C57689;
    const double C106083 = C106075 + C106049;
    const double C143475 = C143472 + C143464;
    const double C6945 = C6507 + C6508;
    const double C68531 = C68099 + C68100;
    const double C6276 = C6270 + C6271;
    const double C67872 = C67866 + C67867;
    const double C14695 = C14692 * C152419;
    const double C7142 = C6745 + C6746;
    const double C68728 = C68331 + C68332;
    const double C15501 = C15494 * C152419;
    const double C150803 = ae * C150802;
    const double C624 = (4 * C150742 + C150622 * C150768 + C150615 * C150802 +
                         C150615 * C150797 * ae) /
                        C150502;
    const double C2823 =
        (C150807 * C150679 + C151039 + C151039 +
         C150615 *
             (2 * ae * C151034 +
              C150615 * C150807 *
                  (3 * C150675 +
                   C150622 * (2 * C150622 * C150673 +
                              C150622 * (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C2831 = C135 * C2822;
    const double C16027 = C14624 * C2822;
    const double C46237 = C45351 * C2822;
    const double C96523 = C95120 * C2822;
    const double C115601 = C114715 * C2822;
    const double C151049 = C151048 + C151045;
    const double C151030 = C151013 + C151028;
    const double C151106 = ae * C151105;
    const double C3136 =
        (2 * C150828 + C150615 * C151105 + (C150825 + C151096 * C150619) * ae) /
        C150502;
    const double C10060 =
        (2 * (2 * ae * C150876 + C150615 * C151115) + C151274 + C151274 +
         C150615 *
             (C151115 + C151271 + C151271 +
              C150615 *
                  (2 * ae * C151151 +
                   C150615 * (C150675 + (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634) *
                                            C150819)))) /
        C150520;
    const double C10066 = C135 * C10057;
    const double C16635 = C14624 * C10057;
    const double C47889 = C45351 * C10057;
    const double C62413 = C62222 * C10057;
    const double C97131 = C95120 * C10057;
    const double C117253 = C114715 * C10057;
    const double C151240 = C151239 + C151233;
    const double C151379 = ae * C151377;
    const double C151378 = C150615 * C151377;
    const double C24968 =
        (3 * C151112 + C150807 * C151395 + C151439 + C151439 +
         C150615 *
             (2 * ae * C151434 +
              C150615 * (3 * C151393 +
                         C150807 * (2 * C150807 * C151391 +
                                    C150807 * (C151391 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150819))))) /
        C150520;
    const double C24975 = C135 * C24966;
    const double C39296 = C14624 * C24966;
    const double C47142 = C45351 * C24966;
    const double C107013 = C95120 * C24966;
    const double C116506 = C114715 * C24966;
    const double C151509 = ae * C151508;
    const double C26941 =
        (2 * C151144 + C150615 * C151508 + (C151141 + C151431 * C150619) * ae) /
        C150502;
    const double C151486 = C151485 + C151479;
    const double C151749 = C151712 + C151747;
    const double C151791 = ae * C151789;
    const double C151790 = C150615 * C151789;
    const double C151548 = ae * C151547;
    const double C32596 = (4 * C151125 + C150807 * C151411 + C150615 * C151547 +
                           C150615 * C151544 * ae) /
                          C150502;
    const double C151582 = C151581 + C151578;
    const double C151570 = C151553 + C151568;
    const double C151652 = ae * C151650;
    const double C151651 = C150615 * C151650;
    const double C151841 = C151801 + C151839;
    const double C151902 = C151901 + C151884;
    const double C663 = C152449 * C634;
    const double C15704 = C152461 * C634;
    const double C45385 = C45345 * C634;
    const double C96200 = C152461 * C634;
    const double C114749 = C114709 * C634;
    const double C673 = C661 + C662;
    const double C15710 = C15703 + C15256;
    const double C45404 = C45383 + C45384;
    const double C96206 = C96199 + C95752;
    const double C114768 = C114747 + C114748;
    const double C198 = C192 + C179;
    const double C444 = C436 + C418;
    const double C842 = C841 + C838;
    const double C984 = C983 + C980;
    const double C14688 = C14678 + C14654;
    const double C95184 = C95174 + C95150;
    const double C1223 = C1219 + C1210;
    const double C15506 = C15504 + C15496;
    const double C96002 = C96000 + C95992;
    const double C2835 = C2832 + C1682;
    const double C16038 = C16032 + C16021;
    const double C46241 = C46238 + C45691;
    const double C96534 = C96528 + C96517;
    const double C115605 = C115602 + C115055;
    const double C2611 =
        (2 * (2 * ae * C150742 + C150615 * C150662) + C150907 + C150907 +
         C150615 * (C150662 + C150904 + C150904 +
                    C150615 * (2 * ae * C150764 + C150615 * C150677))) /
        C150520;
    const double C2620 = C135 * C2603;
    const double C15251 = C14624 * C2603;
    const double C18457 = C14622 * C2603;
    const double C45997 = C45349 * C2603;
    const double C45993 = C45351 * C2603;
    const double C62236 = C62222 * C2603;
    const double C62850 = C62220 * C2603;
    const double C95747 = C95120 * C2603;
    const double C98944 = C95118 * C2603;
    const double C115361 = C114713 * C2603;
    const double C115357 = C114715 * C2603;
    const double C8071 = C8066 + C8051;
    const double C17160 = C17156 + C17143;
    const double C45730 = C45718 + C45684;
    const double C97656 = C97652 + C97639;
    const double C115094 = C115082 + C115048;
    const double C151009 = ae * C151008;
    const double C2609 = (3 * C150917 + C150615 * C151008 +
                          (2 * C150911 + C150615 * C150998) * ae) /
                         C150502;
    const double C9846 = C152449 * C3139;
    const double C18234 = C152461 * C3139;
    const double C46763 = C45345 * C3139;
    const double C98721 = C152461 * C3139;
    const double C116127 = C114709 * C3139;
    const double C9851 = C9845 + C3144;
    const double C18243 = C18233 + C16618;
    const double C46776 = C46761 + C46762;
    const double C98730 = C98720 + C97114;
    const double C116140 = C116125 + C116126;
    const double C24978 = C24976 + C8057;
    const double C39299 = C39297 + C17361;
    const double C47585 = C47582 + C47131;
    const double C106744 = C106742 + C97857;
    const double C116949 = C116946 + C116495;
    const double C25176 = C24744 * C23222;
    const double C77985 = C24744 * C76067;
    const double C25476 = C25475 * C23222;
    const double C78278 = C25475 * C76067;
    const double C26738 = C152449 * C10059;
    const double C40371 = C152461 * C10059;
    const double C47882 = C45345 * C10059;
    const double C106055 = C152461 * C10059;
    const double C117246 = C114709 * C10059;
    const double C26741 = C26737 + C10065;
    const double C40376 = C40370 + C16633;
    const double C47890 = C47881 + C47367;
    const double C106070 = C106054 + C97129;
    const double C117254 = C117245 + C116731;
    const double C151215 = ae * C151214;
    const double C9348 = (3 * C151077 + C150615 * C151214 +
                          (2 * C151071 + C150615 * C151205) * ae) /
                         C150502;
    const double C151344 = C151315 + C151342;
    const double C32600 = C152449 * C24967;
    const double C39499 = C152461 * C24967;
    const double C55454 = C45345 * C24967;
    const double C136508 = C152461 * C24967;
    const double C143825 = C114709 * C24967;
    const double C32602 = C32599 + C24974;
    const double C39504 = C39498 + C38764;
    const double C55465 = C55453 + C47139;
    const double C136513 = C136507 + C107011;
    const double C143836 = C143824 + C116503;
    const double C32449 = C32448 + C32445;
    const double C33067 = C33066 + C33063;
    const double C38524 = C38520 + C38508;
    const double C135594 = C135592 + C135585;
    const double C26942 =
        (2 * (2 * ae * C151125 + C150615 * C151388) + C151498 + C151498 +
         C150615 * (C151388 + C151495 + C151495 +
                    C150615 * (2 * ae * C151407 +
                               C150615 * (2 * C150807 * C150658 +
                                          C150807 * (C150658 +
                                                     C150673 * C150819))))) /
        C150520;
    const double C26947 = C135 * C26940;
    const double C38759 = C14624 * C26940;
    const double C40780 = C14622 * C26940;
    const double C48095 = C45351 * C26940;
    const double C55717 = C45349 * C26940;
    const double C63286 = C62222 * C26940;
    const double C63916 = C62220 * C26940;
    const double C106063 = C95120 * C26940;
    const double C117459 = C114715 * C26940;
    const double C137761 = C95118 * C26940;
    const double C144088 = C114713 * C26940;
    const double C151464 = ae * C151463;
    const double C26243 = (3 * C151251 + C150615 * C151463 +
                           (2 * C151245 + C150615 * C151453) * ae) /
                          C150502;
    const double C151617 = C151588 + C151615;
    const double C151872 = C151865 + C151698;
    const double C151700 = C151699 + C151687;
    const double C114753 = C114710 * C140;
    const double C114738 = C114710 * C139;
    const double C114735 = C114710 * C138;
    const double C114720 = C114710 * C137;
    const double C115052 = C114710 * C362;
    const double C115037 = C114710 * C357;
    const double C115028 = C114710 * C361;
    const double C115019 = C114710 * C358;
    const double C115354 = C114710 * C607;
    const double C115339 = C114710 * C602;
    const double C115330 = C114710 * C606;
    const double C115321 = C114710 * C603;
    const double C115597 = C114710 * C356;
    const double C115809 = C114710 * C601;
    const double C116131 = C114710 * C1181;
    const double C116116 = C114710 * C1180;
    const double C116941 = C114710 * C1469;
    const double C117249 = C114710 * C1651;
    const double C118327 = C114710 * C1647;
    const double C118539 = C114710 * C2597;
    const double C142547 = C114710 * C360;
    const double C142537 = C114710 * C359;
    const double C143467 = C114710 * C1179;
    const double C143828 = C114710 * C1471;
    const double C143818 = C114710 * C1470;
    const double C144085 = C114710 * C1653;
    const double C144075 = C114710 * C1652;
    const double C144069 = C114710 * C1648;
    const double C144799 = C114710 * C2197;
    const double C146056 = C114710 * C3129;
    const double C114750 = C114712 * C609;
    const double C114741 = C114712 * C601;
    const double C114732 = C114712 * C602;
    const double C114723 = C114712 * C603;
    const double C115049 = C114712 * C1650;
    const double C115040 = C114712 * C1181;
    const double C115031 = C114712 * C1651;
    const double C115016 = C114712 * C1180;
    const double C115351 = C114712 * C2596;
    const double C115342 = C114712 * C607;
    const double C115333 = C114712 * C2597;
    const double C115318 = C114712 * C606;
    const double C115595 = C114712 * C1182;
    const double C115807 = C114712 * C608;
    const double C116128 = C114712 * C1646;
    const double C116119 = C114712 * C1647;
    const double C116939 = C114712 * C2198;
    const double C117247 = C114712 * C1654;
    const double C118325 = C114712 * C3130;
    const double C118537 = C114712 * C2600;
    const double C142545 = C114712 * C1652;
    const double C142539 = C114712 * C1179;
    const double C143465 = C114712 * C1648;
    const double C143826 = C114712 * C8769;
    const double C143820 = C114712 * C2197;
    const double C144083 = C114712 * C10052;
    const double C144077 = C114712 * C1653;
    const double C144071 = C114712 * C3129;
    const double C144797 = C114712 * C8036;
    const double C146054 = C114712 * C9344;
    const double C95165 = C95151 + C95152;
    const double C95162 = C95142 + C95143;
    const double C95161 = C95139 + C95140;
    const double C95158 = C95130 + C95131;
    const double C95156 = C95124 + C95125;
    const double C95465 = C95447 + C95448;
    const double C95462 = C95438 + C95439;
    const double C95460 = C95432 + C95433;
    const double C95458 = C95426 + C95427;
    const double C95457 = C95419 + C95420;
    const double C95455 = C95413 + C95414;
    const double C95767 = C95749 + C95750;
    const double C95764 = C95740 + C95741;
    const double C95762 = C95734 + C95735;
    const double C95760 = C95728 + C95729;
    const double C95759 = C95721 + C95722;
    const double C95757 = C95715 + C95716;
    const double C95999 = C95993 + C95451;
    const double C96207 = C96201 + C95753;
    const double C96529 = C96519 + C96520;
    const double C96526 = C96510 + C96511;
    const double C96524 = C96504 + C96505;
    const double C97339 = C97332 + C96887;
    const double C97337 = C97328 + C96885;
    const double C97651 = C97644 + C97123;
    const double C97649 = C97640 + C97121;
    const double C98733 = C98726 + C97117;
    const double C98731 = C98722 + C97115;
    const double C98949 = C98942 + C98421;
    const double C98947 = C98938 + C98419;
    const double C104055 = C104047 + C95424;
    const double C104052 = C104038 + C95423;
    const double C105265 = C105260 + C96502;
    const double C105743 = C105732 + C96890;
    const double C105741 = C105728 + C96892;
    const double C105738 = C105722 + C96889;
    const double C106073 = C106060 + C97126;
    const double C106071 = C106056 + C97128;
    const double C106068 = C106050 + C97125;
    const double C106066 = C106046 + C97119;
    const double C106743 = C106739 + C97856;
    const double C107015 = C107008 + C97854;
    const double C108417 = C108414 + C99154;
    const double C108689 = C108682 + C99152;
    const double C135591 = C135586 + C105734;
    const double C135823 = C135818 + C106062;
    const double C136514 = C136509 + C107010;
    const double C137764 = C137759 + C108684;
    const double C45429 = C45417 + C45388;
    const double C45426 = C45414 + C45379;
    const double C45423 = C45411 + C45370;
    const double C45420 = C45408 + C45361;
    const double C45731 = C45719 + C45687;
    const double C45728 = C45716 + C45678;
    const double C45725 = C45713 + C45669;
    const double C45722 = C45710 + C45654;
    const double C46030 = C46018 + C45980;
    const double C46027 = C46015 + C45971;
    const double C46024 = C46012 + C45956;
    const double C46245 = C46242 + C46232;
    const double C46457 = C46454 + C46444;
    const double C46789 = C46783 + C46766;
    const double C46786 = C46780 + C46757;
    const double C47589 = C47586 + C47576;
    const double C47897 = C47894 + C47884;
    const double C54194 = C54188 + C54175;
    const double C54191 = C54185 + C54169;
    const double C55105 = C55102 + C55095;
    const double C55478 = C55472 + C55456;
    const double C55475 = C55469 + C55450;
    const double C55741 = C55732 + C55707;
    const double C55738 = C55729 + C55701;
    const double C56440 = C56437 + C56427;
    const double C695 = C687 * C152419;
    const double C6748 = C687 * C152555;
    const double C68334 = C687 * C67854;
    const double C15702 = C15292 + C15293;
    const double C6750 = C6743 + C6744;
    const double C68336 = C68329 + C68330;
    const double C16047 = C16046 * C152419;
    const double C2995 = C2992 + C2984;
    const double C15291 = C15279 + C15243;
    const double C18468 = C18464 + C18452;
    const double C46033 = C46021 + C45989;
    const double C46031 = C46019 + C45983;
    const double C95787 = C95775 + C95739;
    const double C115395 = C115383 + C115347;
    const double C18454 = C152461 * C2616;
    const double C45974 = C45345 * C2616;
    const double C49180 = C45344 * C2616;
    const double C98941 = C152461 * C2616;
    const double C115338 = C114709 * C2616;
    const double C118538 = C152605 * C2616;
    const double C18461 = C18453 + C17933;
    const double C46004 = C45972 + C45973;
    const double C49187 = C49179 + C48664;
    const double C98948 = C98940 + C98420;
    const double C115368 = C115336 + C115337;
    const double C9856 = C9854 + C9849;
    const double C18253 = C18249 + C18238;
    const double C88843 = C88841 + C88837;
    const double C46787 = C46781 + C46760;
    const double C48981 = C48978 + C48968;
    const double C98740 = C98736 + C98725;
    const double C116151 = C116145 + C116124;
    const double C39497 = C38788 + C38789;
    const double C26951 = C26950 + C26946;
    const double C38787 = C38779 + C38753;
    const double C40791 = C40787 + C40775;
    const double C55744 = C55735 + C55713;
    const double C55742 = C55733 + C55709;
    const double C106088 = C106080 + C106059;
    const double C144113 = C144104 + C144080;
    const double C40777 = C152461 * C9350;
    const double C55703 = C45345 * C9350;
    const double C57687 = C45344 * C9350;
    const double C108681 = C152461 * C9350;
    const double C144074 = C114709 * C9350;
    const double C146055 = C152605 * C9350;
    const double C40784 = C40776 + C18666;
    const double C55721 = C55702 + C47364;
    const double C57694 = C57686 + C49393;
    const double C108688 = C108680 + C99153;
    const double C144092 = C144073 + C116728;
    const double C151310 = ae * C151309;
    const double C17924 = (4 * C150962 + C150615 * C151309 +
                           (3 * C150952 + C150615 * C151298) * ae) /
                          C150502;
    const double C2999 = C2996 * C152419;
    const double C9850 = C2996 * C152555;
    const double C26740 = C2996 * C23220;
    const double C71321 = C2996 * C67854;
    const double C79522 = C2996 * C152622;
    const double C636 =
        (4 * C150662 + C150622 * C150679 + C150803 + C150803 +
         C150615 *
             (2 * ae * C150800 +
              C150615 *
                  (4 * C150677 +
                   C150622 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C665 = C135 * C624;
    const double C15708 = C14624 * C624;
    const double C45394 = C45351 * C624;
    const double C96204 = C95120 * C624;
    const double C114758 = C114715 * C624;
    const double C151050 = ae * C151049;
    const double C2978 =
        (2 * C150770 + C150615 * C151049 + (C150765 + C150793 * C150619) * ae) /
        C150502;
    const double C151031 = C151030 + C151024;
    const double C3140 =
        (2 * (2 * ae * C150824 + C150615 * C151094) + C151106 + C151106 +
         C150615 *
             (C151094 + C151103 + C151103 +
              C150615 * (2 * ae * C151095 +
                         C150615 * C150807 *
                             (2 * C150622 * C150673 +
                              C150622 * (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C3145 = C135 * C3136;
    const double C18242 = C14624 * C3136;
    const double C46772 = C45351 * C3136;
    const double C62717 = C62222 * C3136;
    const double C98729 = C95120 * C3136;
    const double C116136 = C114715 * C3136;
    const double C151241 = ae * C151240;
    const double C9349 = (3 * C151091 + C150615 * C151240 +
                          (2 * C151085 + C150615 * C151231) * ae) /
                         C150502;
    const double C151380 = C151351 + C151378;
    const double C26943 =
        (2 * (2 * ae * C151140 + C150615 * C151395) + C151509 + C151509 +
         C150615 *
             (C151395 + C151506 + C151506 +
              C150615 * (2 * ae * C151430 +
                         C150615 * (2 * C150807 * C151391 +
                                    C150807 * (C151391 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150819))))) /
        C150520;
    const double C26948 = C135 * C26941;
    const double C40375 = C14624 * C26941;
    const double C48098 = C45351 * C26941;
    const double C63585 = C62222 * C26941;
    const double C106065 = C95120 * C26941;
    const double C117462 = C114715 * C26941;
    const double C151487 = ae * C151486;
    const double C26244 = (3 * C151262 + C150615 * C151486 +
                           (2 * C151256 + C150615 * C151476) * ae) /
                          C150502;
    const double C151750 = C151749 + C151737;
    const double C151792 = C151760 + C151790;
    const double C32597 =
        (4 * C151388 + C150807 * C151519 + C151548 + C151548 +
         C150615 *
             (2 * ae * C151543 +
              C150615 *
                  (4 * C151517 +
                   C150807 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C150807 * C150673 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150819)))))) /
        C150520;
    const double C32601 = C135 * C32596;
    const double C39503 = C14624 * C32596;
    const double C55461 = C45351 * C32596;
    const double C136512 = C95120 * C32596;
    const double C143832 = C114715 * C32596;
    const double C151583 = ae * C151582;
    const double C33900 =
        (2 * C151415 + C150615 * C151582 + (C151412 + C151540 * C150619) * ae) /
        C150502;
    const double C151571 = C151570 + C151564;
    const double C151653 = C151624 + C151651;
    const double C151842 = C151841 + C151830;
    const double C151904 = ae * C151902;
    const double C151903 = C150615 * C151902;
    const double C681 = C673 + C662;
    const double C15712 = C15710 + C15256;
    const double C45416 = C45404 + C45384;
    const double C96208 = C96206 + C95752;
    const double C114780 = C114768 + C114748;
    const double C204 = C198 * C152419;
    const double C452 = C444 * C152419;
    const double C6946 = C444 * C152435;
    const double C23235 = C444 * C23222;
    const double C68532 = C444 * C152435;
    const double C76080 = C444 * C76067;
    const double C843 = C842 * C152419;
    const double C6272 = C842 * C152435;
    const double C67868 = C842 * C152435;
    const double C985 = C984 * C152419;
    const double C1227 = C1223 * C152419;
    const double C7143 = C1223 * C152435;
    const double C68729 = C1223 * C152435;
    const double C2838 = C2835 + C2826;
    const double C16044 = C16038 + C16022;
    const double C46244 = C46241 + C46230;
    const double C96540 = C96534 + C96518;
    const double C115608 = C115605 + C115594;
    const double C2982 = C152449 * C2611;
    const double C15252 = C152461 * C2611;
    const double C46442 = C45345 * C2611;
    const double C95748 = C152461 * C2611;
    const double C115806 = C114709 * C2611;
    const double C2988 = C2981 + C2620;
    const double C15270 = C15250 + C15251;
    const double C46450 = C46441 + C45993;
    const double C95766 = C95746 + C95747;
    const double C115814 = C115805 + C115357;
    const double C9647 = C8071 * C152435;
    const double C23695 = C8071 * C23222;
    const double C71120 = C8071 * C152435;
    const double C76540 = C8071 * C76067;
    const double C2617 =
        (3 * (C150648 + C150915 + C150915 + C150615 * C150999) + C151009 +
         C151009 +
         C150615 *
             (2 * C150999 + C151006 + C151006 +
              C150615 * (C150660 + C151002 + C151002 +
                         C150615 * (2 * ae * C150760 + C150615 * C150675)))) /
        C150520;
    const double C2626 = C135 * C2609;
    const double C17941 = C14622 * C2609;
    const double C17931 = C14624 * C2609;
    const double C45985 = C45351 * C2609;
    const double C49184 = C45349 * C2609;
    const double C62582 = C62220 * C2609;
    const double C62576 = C62222 * C2609;
    const double C98428 = C95118 * C2609;
    const double C98418 = C95120 * C2609;
    const double C115349 = C114715 * C2609;
    const double C118542 = C114713 * C2609;
    const double C9853 = C9851 + C3144;
    const double C18247 = C18243 + C16618;
    const double C46782 = C46776 + C46762;
    const double C98734 = C98730 + C97114;
    const double C116146 = C116140 + C116126;
    const double C24980 = C24978 + C24971;
    const double C39301 = C39299 + C39292;
    const double C47588 = C47585 + C47574;
    const double C106746 = C106744 + C106738;
    const double C116952 = C116949 + C116938;
    const double C26742 = C26741 + C10065;
    const double C40378 = C40376 + C16633;
    const double C47893 = C47890 + C47367;
    const double C106078 = C106070 + C97129;
    const double C117257 = C117254 + C116731;
    const double C9351 =
        (3 * (C151066 + C151075 + C151075 + C150615 * C151202) + C151215 +
         C151215 +
         C150615 *
             (2 * C151202 + C151212 + C151212 +
              C150615 * (C151192 + C151208 + C151208 +
                         C150615 * (2 * ae * C151194 +
                                    C150615 * C150807 * C150622 * C150673)))) /
        C150520;
    const double C9355 = C135 * C9348;
    const double C18668 = C14624 * C9348;
    const double C47361 = C45351 * C9348;
    const double C49396 = C45349 * C9348;
    const double C63050 = C62222 * C9348;
    const double C64499 = C62220 * C9348;
    const double C88186 = C14622 * C9348;
    const double C99155 = C95120 * C9348;
    const double C107764 = C95118 * C9348;
    const double C116725 = C114715 * C9348;
    const double C118751 = C114713 * C9348;
    const double C151345 = C151344 + C151337;
    const double C32603 = C32602 + C24974;
    const double C39506 = C39504 + C38764;
    const double C55471 = C55465 + C47139;
    const double C136515 = C136513 + C107011;
    const double C143842 = C143836 + C116503;
    const double C33904 = C152449 * C26942;
    const double C38760 = C152461 * C26942;
    const double C56425 = C45345 * C26942;
    const double C135817 = C152461 * C26942;
    const double C144796 = C114709 * C26942;
    const double C33906 = C33903 + C26947;
    const double C38774 = C38758 + C38759;
    const double C56433 = C56424 + C48095;
    const double C135822 = C135816 + C106063;
    const double C144804 = C144795 + C117459;
    const double C26245 =
        (3 * (C151109 + C151249 + C151249 + C150615 * C151454) + C151464 +
         C151464 +
         C150615 * (2 * C151454 + C151461 + C151461 +
                    C150615 * (C151386 + C151457 + C151457 +
                               C150615 * (2 * ae * C151403 +
                                          C150615 * (C150658 +
                                                     C150673 * C150819))))) /
        C150520;
    const double C26248 = C135 * C26243;
    const double C40078 = C14622 * C26243;
    const double C40074 = C14624 * C26243;
    const double C47375 = C45351 * C26243;
    const double C57691 = C45349 * C26243;
    const double C63450 = C62220 * C26243;
    const double C63444 = C62222 * C26243;
    const double C108685 = C95120 * C26243;
    const double C116739 = C114715 * C26243;
    const double C137077 = C95118 * C26243;
    const double C146059 = C114713 * C26243;
    const double C151618 = C151617 + C151610;
    const double C151897 = C151872 + C151894;
    const double C151702 = ae * C151700;
    const double C151701 = C150615 * C151700;
    const double C151854 = 5 * C151700;
    const double C114770 = C114753 + C114754;
    const double C114765 = C114738 + C114739;
    const double C114764 = C114735 + C114736;
    const double C114759 = C114720 + C114721;
    const double C115072 = C115052 + C115053;
    const double C115067 = C115037 + C115038;
    const double C115064 = C115028 + C115029;
    const double C115063 = C115019 + C115020;
    const double C115374 = C115354 + C115355;
    const double C115369 = C115339 + C115340;
    const double C115366 = C115330 + C115331;
    const double C115365 = C115321 + C115322;
    const double C115604 = C115597 + C115057;
    const double C115816 = C115809 + C115359;
    const double C116142 = C116131 + C116132;
    const double C116137 = C116116 + C116117;
    const double C116948 = C116941 + C116497;
    const double C117256 = C117249 + C116733;
    const double C118334 = C118327 + C116727;
    const double C118546 = C118539 + C118023;
    const double C142554 = C142547 + C115025;
    const double C142549 = C142537 + C115024;
    const double C143471 = C143467 + C116113;
    const double C143838 = C143828 + C116501;
    const double C143833 = C143818 + C116500;
    const double C144098 = C144085 + C116737;
    const double C144093 = C144075 + C116736;
    const double C144090 = C144069 + C116730;
    const double C144806 = C144799 + C117457;
    const double C146063 = C146056 + C118747;
    const double C114769 = C114750 + C114751;
    const double C114766 = C114741 + C114742;
    const double C114763 = C114732 + C114733;
    const double C114760 = C114723 + C114724;
    const double C115071 = C115049 + C115050;
    const double C115068 = C115040 + C115041;
    const double C115065 = C115031 + C115032;
    const double C115062 = C115016 + C115017;
    const double C115373 = C115351 + C115352;
    const double C115370 = C115342 + C115343;
    const double C115367 = C115333 + C115334;
    const double C115364 = C115318 + C115319;
    const double C115603 = C115595 + C115056;
    const double C115815 = C115807 + C115358;
    const double C116141 = C116128 + C116129;
    const double C116138 = C116119 + C116120;
    const double C116947 = C116939 + C116496;
    const double C117255 = C117247 + C116732;
    const double C118333 = C118325 + C116726;
    const double C118545 = C118537 + C118022;
    const double C142553 = C142545 + C115026;
    const double C142550 = C142539 + C115023;
    const double C143470 = C143465 + C116114;
    const double C143837 = C143826 + C116502;
    const double C143834 = C143820 + C116499;
    const double C144097 = C144083 + C116738;
    const double C144094 = C144077 + C116735;
    const double C144091 = C144071 + C116729;
    const double C144805 = C144797 + C117458;
    const double C146062 = C146054 + C118748;
    const double C95175 = C95165 + C95152;
    const double C95172 = C95162 + C95143;
    const double C95171 = C95161 + C95140;
    const double C95168 = C95158 + C95131;
    const double C95166 = C95156 + C95125;
    const double C95477 = C95465 + C95448;
    const double C95474 = C95462 + C95439;
    const double C95472 = C95460 + C95433;
    const double C95470 = C95458 + C95427;
    const double C95469 = C95457 + C95420;
    const double C95467 = C95455 + C95414;
    const double C95779 = C95767 + C95750;
    const double C95776 = C95764 + C95741;
    const double C95774 = C95762 + C95735;
    const double C95772 = C95760 + C95729;
    const double C95771 = C95759 + C95722;
    const double C95769 = C95757 + C95716;
    const double C96001 = C95999 + C95451;
    const double C96209 = C96207 + C95753;
    const double C96535 = C96529 + C96520;
    const double C96532 = C96526 + C96511;
    const double C96530 = C96524 + C96505;
    const double C97343 = C97339 + C96887;
    const double C97341 = C97337 + C96885;
    const double C97655 = C97651 + C97123;
    const double C97653 = C97649 + C97121;
    const double C98737 = C98733 + C97117;
    const double C98735 = C98731 + C97115;
    const double C98953 = C98949 + C98421;
    const double C98951 = C98947 + C98419;
    const double C104059 = C104055 + C95424;
    const double C104056 = C104052 + C95423;
    const double C105267 = C105265 + C96502;
    const double C105749 = C105743 + C96890;
    const double C105747 = C105741 + C96892;
    const double C105744 = C105738 + C96889;
    const double C106081 = C106073 + C97126;
    const double C106079 = C106071 + C97128;
    const double C106076 = C106068 + C97125;
    const double C106074 = C106066 + C97119;
    const double C106745 = C106743 + C97856;
    const double C107017 = C107015 + C97854;
    const double C108419 = C108417 + C99154;
    const double C108691 = C108689 + C99152;
    const double C135593 = C135591 + C105734;
    const double C135825 = C135823 + C106062;
    const double C136516 = C136514 + C107010;
    const double C137766 = C137764 + C108684;
    const double C15709 = C15702 * C152419;
    const double C2998 = C2995 * C152419;
    const double C9847 = C2995 * C152555;
    const double C71319 = C2995 * C67854;
    const double C15297 = C15290 + C15291;
    const double C18465 = C18461 + C17933;
    const double C46016 = C46004 + C45973;
    const double C49190 = C49187 + C48664;
    const double C98952 = C98948 + C98420;
    const double C115380 = C115368 + C115337;
    const double C9858 = C9856 * C152435;
    const double C26739 = C9856 * C23221;
    const double C71320 = C9856 * C152435;
    const double C79521 = C9856 * C152602;
    const double C88575 = C18253 + C18254;
    const double C88574 = C18254 + C18253;
    const double C38792 = C38786 + C38787;
    const double C40788 = C40784 + C18666;
    const double C55730 = C55721 + C47364;
    const double C57697 = C57694 + C49393;
    const double C108690 = C108688 + C99153;
    const double C144101 = C144092 + C116728;
    const double C17927 =
        (4 * (2 * C150953 + C150960 + C150960 + C150615 * C151299) + C151310 +
         C151310 +
         C150615 * (3 * C151299 + C151307 + C151307 +
                    C150615 * (2 * C151291 + C151303 + C151303 +
                               C150615 * (C150646 + C151295 + C151295 +
                                          C150615 * (2 * ae * C150733 +
                                                     C150615 * C150658))))) /
        C150520;
    const double C17938 = C14624 * C17924;
    const double C48670 = C45349 * C17924;
    const double C48666 = C45351 * C17924;
    const double C62567 = C62222 * C17924;
    const double C64300 = C62218 * C17924;
    const double C64296 = C62220 * C17924;
    const double C98425 = C95120 * C17924;
    const double C118028 = C114713 * C17924;
    const double C118024 = C114715 * C17924;
    const double C2979 =
        (2 * (2 * ae * C150768 + C150615 * C150679) + C151050 + C151050 +
         C150615 *
             (C150679 + C151047 + C151047 +
              C150615 *
                  (2 * ae * C150796 +
                   C150615 *
                       (3 * C150675 +
                        C150622 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C2987 = C135 * C2978;
    const double C15259 = C14624 * C2978;
    const double C46449 = C45351 * C2978;
    const double C62243 = C62222 * C2978;
    const double C95755 = C95120 * C2978;
    const double C115813 = C114715 * C2978;
    const double C151032 = ae * C151031;
    const double C2610 = (3 * C150906 + C150615 * C151031 +
                          (2 * C150900 + C150615 * C151021) * ae) /
                         C150502;
    const double C9352 =
        (3 * (C151080 + C151089 + C151089 + C150615 * C151228) + C151241 +
         C151241 +
         C150615 *
             (2 * C151228 + C151238 + C151238 +
              C150615 * (C151218 + C151234 + C151234 +
                         C150615 * (2 * ae * C151220 +
                                    C150615 * C150807 *
                                        (C150673 + (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                       C150618 * C150634))))) /
        C150520;
    const double C9356 = C135 * C9349;
    const double C18670 = C14624 * C9349;
    const double C48973 = C45351 * C9349;
    const double C63057 = C62222 * C9349;
    const double C99157 = C95120 * C9349;
    const double C118331 = C114715 * C9349;
    const double C151381 = C151380 + C151373;
    const double C26246 =
        (3 * (C151112 + C151260 + C151260 + C150615 * C151477) + C151487 +
         C151487 +
         C150615 *
             (2 * C151477 + C151484 + C151484 +
              C150615 * (C151393 + C151480 + C151480 +
                         C150615 * (2 * ae * C151426 +
                                    C150615 * (C151391 +
                                               C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618 * C150819))))) /
        C150520;
    const double C26249 = C135 * C26244;
    const double C40577 = C14624 * C26244;
    const double C47378 = C45351 * C26244;
    const double C63783 = C62222 * C26244;
    const double C108687 = C95120 * C26244;
    const double C116742 = C114715 * C26244;
    const double C151752 = ae * C151750;
    const double C151751 = C150615 * C151750;
    const double C151793 = C151792 + C151785;
    const double C33901 =
        (2 * (2 * ae * C151411 + C150615 * C151519) + C151583 + C151583 +
         C150615 *
             (C151519 + C151580 + C151580 +
              C150615 *
                  (2 * ae * C151539 +
                   C150615 *
                       (3 * C151515 +
                        C150807 *
                            (2 * C150807 * C150673 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150819)))))) /
        C150520;
    const double C33905 = C135 * C33900;
    const double C38767 = C14624 * C33900;
    const double C56432 = C45351 * C33900;
    const double C63293 = C62222 * C33900;
    const double C135821 = C95120 * C33900;
    const double C144803 = C114715 * C33900;
    const double C151572 = ae * C151571;
    const double C33442 = (3 * C151497 + C150615 * C151571 +
                           (2 * C151491 + C150615 * C151561) * ae) /
                          C150502;
    const double C151654 = C151653 + C151646;
    const double C151844 = ae * C151842;
    const double C151843 = C150615 * C151842;
    const double C151905 = C151855 + C151903;
    const double C689 = C681 + C663;
    const double C15714 = C15712 + C15704;
    const double C45428 = C45416 + C45385;
    const double C96210 = C96208 + C96200;
    const double C114792 = C114780 + C114749;
    const double C2841 = C2838 * C152419;
    const double C6747 = C2838 * C152435;
    const double C68333 = C2838 * C152435;
    const double C2991 = C2988 + C2620;
    const double C15282 = C15270 + C15251;
    const double C46453 = C46450 + C45993;
    const double C95778 = C95766 + C95747;
    const double C115817 = C115814 + C115357;
    const double C18450 = C152461 * C2617;
    const double C45986 = C45345 * C2617;
    const double C98937 = C152461 * C2617;
    const double C115350 = C114709 * C2617;
    const double C18459 = C18449 + C17931;
    const double C46008 = C45984 + C45985;
    const double C98946 = C98936 + C98418;
    const double C115372 = C115348 + C115349;
    const double C9855 = C9853 + C9846;
    const double C18251 = C18247 + C18234;
    const double C46788 = C46782 + C46763;
    const double C98738 = C98734 + C98721;
    const double C116152 = C116146 + C116127;
    const double C26540 = C24980 * C23222;
    const double C79323 = C24980 * C76067;
    const double C26743 = C26742 + C26738;
    const double C40380 = C40378 + C40371;
    const double C47896 = C47893 + C47882;
    const double C106086 = C106078 + C106055;
    const double C117260 = C117257 + C117246;
    const double C48966 = C45345 * C9351;
    const double C88835 = C152461 * C9351;
    const double C108413 = C152461 * C9351;
    const double C118324 = C114709 * C9351;
    const double C88838 = C88834 + C18668;
    const double C48974 = C48965 + C47361;
    const double C108416 = C108412 + C99155;
    const double C118332 = C118323 + C116725;
    const double C151346 = ae * C151345;
    const double C17925 = (4 * C150985 + C150615 * C151345 +
                           (3 * C150975 + C150615 * C151334) * ae) /
                          C150502;
    const double C32604 = C32603 + C32600;
    const double C39508 = C39506 + C39499;
    const double C55477 = C55471 + C55454;
    const double C136517 = C136515 + C136508;
    const double C143848 = C143842 + C143825;
    const double C33907 = C33906 + C26947;
    const double C38782 = C38774 + C38759;
    const double C56436 = C56433 + C48095;
    const double C135824 = C135822 + C106063;
    const double C144807 = C144804 + C117459;
    const double C40773 = C152461 * C26245;
    const double C55711 = C45345 * C26245;
    const double C137758 = C152461 * C26245;
    const double C144082 = C114709 * C26245;
    const double C40782 = C40772 + C40074;
    const double C55725 = C55710 + C47375;
    const double C137763 = C137757 + C108685;
    const double C144096 = C144081 + C116739;
    const double C151619 = ae * C151618;
    const double C40069 = (4 * C151188 + C150615 * C151618 +
                           (3 * C151179 + C150615 * C151607) * ae) /
                          C150502;
    const double C151703 = C151661 + C151701;
    const double C114782 = C114770 + C114754;
    const double C114777 = C114765 + C114739;
    const double C114776 = C114764 + C114736;
    const double C114771 = C114759 + C114721;
    const double C115084 = C115072 + C115053;
    const double C115079 = C115067 + C115038;
    const double C115076 = C115064 + C115029;
    const double C115075 = C115063 + C115020;
    const double C115386 = C115374 + C115355;
    const double C115381 = C115369 + C115340;
    const double C115378 = C115366 + C115331;
    const double C115377 = C115365 + C115322;
    const double C115607 = C115604 + C115057;
    const double C115819 = C115816 + C115359;
    const double C116148 = C116142 + C116132;
    const double C116143 = C116137 + C116117;
    const double C116951 = C116948 + C116497;
    const double C117259 = C117256 + C116733;
    const double C118337 = C118334 + C116727;
    const double C118549 = C118546 + C118023;
    const double C142560 = C142554 + C115025;
    const double C142555 = C142549 + C115024;
    const double C143474 = C143471 + C116113;
    const double C143844 = C143838 + C116501;
    const double C143839 = C143833 + C116500;
    const double C144107 = C144098 + C116737;
    const double C144102 = C144093 + C116736;
    const double C144099 = C144090 + C116730;
    const double C144809 = C144806 + C117457;
    const double C146066 = C146063 + C118747;
    const double C114781 = C114769 + C114751;
    const double C114778 = C114766 + C114742;
    const double C114775 = C114763 + C114733;
    const double C114772 = C114760 + C114724;
    const double C115083 = C115071 + C115050;
    const double C115080 = C115068 + C115041;
    const double C115077 = C115065 + C115032;
    const double C115074 = C115062 + C115017;
    const double C115385 = C115373 + C115352;
    const double C115382 = C115370 + C115343;
    const double C115379 = C115367 + C115334;
    const double C115376 = C115364 + C115319;
    const double C115606 = C115603 + C115056;
    const double C115818 = C115815 + C115358;
    const double C116147 = C116141 + C116129;
    const double C116144 = C116138 + C116120;
    const double C116950 = C116947 + C116496;
    const double C117258 = C117255 + C116732;
    const double C118336 = C118333 + C116726;
    const double C118548 = C118545 + C118022;
    const double C142559 = C142553 + C115026;
    const double C142556 = C142550 + C115023;
    const double C143473 = C143470 + C116114;
    const double C143843 = C143837 + C116502;
    const double C143840 = C143834 + C116499;
    const double C144106 = C144097 + C116738;
    const double C144103 = C144094 + C116735;
    const double C144100 = C144091 + C116729;
    const double C144808 = C144805 + C117458;
    const double C146065 = C146062 + C118748;
    const double C95185 = C95175 + C95153;
    const double C95182 = C95172 + C95144;
    const double C95181 = C95171 + C95141;
    const double C95178 = C95168 + C95132;
    const double C95176 = C95166 + C95126;
    const double C95489 = C95477 + C95449;
    const double C95486 = C95474 + C95440;
    const double C95484 = C95472 + C95434;
    const double C95482 = C95470 + C95428;
    const double C95481 = C95469 + C95421;
    const double C95479 = C95467 + C95415;
    const double C95791 = C95779 + C95751;
    const double C95788 = C95776 + C95742;
    const double C95786 = C95774 + C95736;
    const double C95784 = C95772 + C95730;
    const double C95783 = C95771 + C95723;
    const double C95781 = C95769 + C95717;
    const double C96003 = C96001 + C95994;
    const double C96211 = C96209 + C96202;
    const double C96541 = C96535 + C96521;
    const double C96538 = C96532 + C96512;
    const double C96536 = C96530 + C96506;
    const double C97347 = C97343 + C97333;
    const double C97345 = C97341 + C97329;
    const double C97659 = C97655 + C97645;
    const double C97657 = C97653 + C97641;
    const double C98741 = C98737 + C98727;
    const double C98739 = C98735 + C98723;
    const double C98957 = C98953 + C98943;
    const double C98955 = C98951 + C98939;
    const double C104063 = C104059 + C104048;
    const double C104060 = C104056 + C104039;
    const double C105269 = C105267 + C105261;
    const double C105755 = C105749 + C105733;
    const double C105753 = C105747 + C105729;
    const double C105750 = C105744 + C105723;
    const double C106089 = C106081 + C106061;
    const double C106087 = C106079 + C106057;
    const double C106084 = C106076 + C106051;
    const double C106082 = C106074 + C106047;
    const double C106747 = C106745 + C106740;
    const double C107019 = C107017 + C107009;
    const double C108421 = C108419 + C108415;
    const double C108693 = C108691 + C108683;
    const double C135595 = C135593 + C135587;
    const double C135827 = C135825 + C135819;
    const double C136518 = C136516 + C136510;
    const double C137768 = C137766 + C137760;
    const double C15299 = C15297 * C152419;
    const double C18469 = C18465 + C18454;
    const double C46028 = C46016 + C45974;
    const double C49193 = C49190 + C49180;
    const double C98956 = C98952 + C98941;
    const double C115392 = C115380 + C115338;
    const double C40792 = C40788 + C40777;
    const double C55739 = C55730 + C55703;
    const double C57700 = C57697 + C57687;
    const double C108692 = C108690 + C108681;
    const double C144110 = C144101 + C144074;
    const double C2618 =
        (3 * (C150662 + C150904 + C150904 + C150615 * C151022) + C151032 +
         C151032 +
         C150615 *
             (2 * C151022 + C151029 + C151029 +
              C150615 *
                  (C150677 + C151025 + C151025 +
                   C150615 *
                       (2 * ae * C150792 +
                        C150615 *
                            (2 * C150622 * C150673 +
                             C150622 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C2627 = C135 * C2610;
    const double C18458 = C14624 * C2610;
    const double C45998 = C45351 * C2610;
    const double C62851 = C62222 * C2610;
    const double C98945 = C95120 * C2610;
    const double C115362 = C114715 * C2610;
    const double C151382 = ae * C151381;
    const double C17926 = (4 * C151008 + C150615 * C151381 +
                           (3 * C150998 + C150615 * C151370) * ae) /
                          C150502;
    const double C151753 = C151711 + C151751;
    const double C151794 = ae * C151793;
    const double C49389 = (4 * C151214 + C150615 * C151793 +
                           (3 * C151205 + C150615 * C151783) * ae) /
                          C150502;
    const double C33443 =
        (3 * (C151388 + C151495 + C151495 + C150615 * C151562) + C151572 +
         C151572 +
         C150615 *
             (2 * C151562 + C151569 + C151569 +
              C150615 *
                  (C151517 + C151565 + C151565 +
                   C150615 *
                       (2 * ae * C151535 +
                        C150615 *
                            (2 * C150807 * C150673 +
                             C150807 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150819)))))) /
        C150520;
    const double C33445 = C135 * C33442;
    const double C40781 = C14624 * C33442;
    const double C55718 = C45351 * C33442;
    const double C63917 = C62222 * C33442;
    const double C137762 = C95120 * C33442;
    const double C144089 = C114715 * C33442;
    const double C151655 = ae * C151654;
    const double C40070 = (4 * C151463 + C150615 * C151654 +
                           (3 * C151453 + C150615 * C151643) * ae) /
                          C150502;
    const double C151845 = C151800 + C151843;
    const double C151906 = C151905 + C151892;
    const double C697 = C689 * C152419;
    const double C2994 = C2991 + C2982;
    const double C15294 = C15282 + C15252;
    const double C46456 = C46453 + C46442;
    const double C95790 = C95778 + C95748;
    const double C115820 = C115817 + C115806;
    const double C18463 = C18459 + C17931;
    const double C46020 = C46008 + C45985;
    const double C98950 = C98946 + C98418;
    const double C115384 = C115372 + C115349;
    const double C9857 = C9855 * C152435;
    const double C71318 = C9855 * C152435;
    const double C26744 = C26743 * C23222;
    const double C79520 = C26743 * C76067;
    const double C88840 = C88838 + C18668;
    const double C48977 = C48974 + C47361;
    const double C108418 = C108416 + C99155;
    const double C118335 = C118332 + C116725;
    const double C17928 =
        (4 * (2 * C150976 + C150983 + C150983 + C150615 * C151335) + C151346 +
         C151346 +
         C150615 * (3 * C151335 + C151343 + C151343 +
                    C150615 * (2 * C151327 + C151339 + C151339 +
                               C150615 * (C150665 + C151331 + C151331 +
                                          C150615 * (2 * ae * C150776 +
                                                     C150615 * C150622 *
                                                         C150673))))) /
        C150520;
    const double C17940 = C14624 * C17925;
    const double C48673 = C45349 * C17925;
    const double C48663 = C45351 * C17925;
    const double C62572 = C62222 * C17925;
    const double C64633 = C62220 * C17925;
    const double C98427 = C95120 * C17925;
    const double C118031 = C114713 * C17925;
    const double C118021 = C114715 * C17925;
    const double C33908 = C33907 + C33904;
    const double C38790 = C38782 + C38760;
    const double C56439 = C56436 + C56425;
    const double C135826 = C135824 + C135817;
    const double C144810 = C144807 + C144796;
    const double C40786 = C40782 + C40074;
    const double C55734 = C55725 + C47375;
    const double C137765 = C137763 + C108685;
    const double C144105 = C144096 + C116739;
    const double C40071 =
        (4 * (2 * C151176 + C151186 + C151186 + C150615 * C151608) + C151619 +
         C151619 +
         C150615 * (3 * C151608 + C151616 + C151616 +
                    C150615 * (2 * C151600 + C151612 + C151612 +
                               C150615 * (C151512 + C151604 + C151604 +
                                          C150615 * (2 * ae * C151523 +
                                                     C150615 * C150807 *
                                                         C150673))))) /
        C150520;
    const double C40077 = C14624 * C40069;
    const double C49394 = C45351 * C40069;
    const double C57004 = C45349 * C40069;
    const double C63440 = C62222 * C40069;
    const double C64767 = C62220 * C40069;
    const double C107763 = C95120 * C40069;
    const double C118749 = C114715 * C40069;
    const double C145372 = C114713 * C40069;
    const double C151704 = C151703 + C151695;
    const double C114794 = C114782 + C114755;
    const double C114789 = C114777 + C114740;
    const double C114788 = C114776 + C114737;
    const double C114783 = C114771 + C114722;
    const double C115096 = C115084 + C115054;
    const double C115091 = C115079 + C115039;
    const double C115088 = C115076 + C115030;
    const double C115087 = C115075 + C115021;
    const double C115398 = C115386 + C115356;
    const double C115393 = C115381 + C115341;
    const double C115390 = C115378 + C115332;
    const double C115389 = C115377 + C115323;
    const double C115610 = C115607 + C115598;
    const double C115822 = C115819 + C115810;
    const double C116154 = C116148 + C116133;
    const double C116149 = C116143 + C116118;
    const double C116954 = C116951 + C116942;
    const double C117262 = C117259 + C117250;
    const double C118340 = C118337 + C118328;
    const double C118552 = C118549 + C118540;
    const double C142566 = C142560 + C142548;
    const double C142561 = C142555 + C142538;
    const double C143477 = C143474 + C143468;
    const double C143850 = C143844 + C143829;
    const double C143845 = C143839 + C143819;
    const double C144116 = C144107 + C144086;
    const double C144111 = C144102 + C144076;
    const double C144108 = C144099 + C144070;
    const double C144812 = C144809 + C144800;
    const double C146069 = C146066 + C146057;
    const double C114793 = C114781 + C114752;
    const double C114790 = C114778 + C114743;
    const double C114787 = C114775 + C114734;
    const double C114784 = C114772 + C114725;
    const double C115095 = C115083 + C115051;
    const double C115092 = C115080 + C115042;
    const double C115089 = C115077 + C115033;
    const double C115086 = C115074 + C115018;
    const double C115397 = C115385 + C115353;
    const double C115394 = C115382 + C115344;
    const double C115391 = C115379 + C115335;
    const double C115388 = C115376 + C115320;
    const double C115609 = C115606 + C115596;
    const double C115821 = C115818 + C115808;
    const double C116153 = C116147 + C116130;
    const double C116150 = C116144 + C116121;
    const double C116953 = C116950 + C116940;
    const double C117261 = C117258 + C117248;
    const double C118339 = C118336 + C118326;
    const double C118551 = C118548 + C118538;
    const double C142565 = C142559 + C142546;
    const double C142562 = C142556 + C142540;
    const double C143476 = C143473 + C143466;
    const double C143849 = C143843 + C143827;
    const double C143846 = C143840 + C143821;
    const double C144115 = C144106 + C144084;
    const double C144112 = C144103 + C144078;
    const double C144109 = C144100 + C144072;
    const double C144811 = C144808 + C144798;
    const double C146068 = C146065 + C146055;
    const double C95188 = C95182 + C95183;
    const double C95187 = C95180 + C95181;
    const double C95186 = C95178 + C95179;
    const double C95990 = C95486 + C95487;
    const double C104612 = C95487 + C95486;
    const double C95491 = C95484 + C95485;
    const double C104051 = C95485 + C95484;
    const double C104049 = C95482 + C95483;
    const double C104043 = C95483 + C95482;
    const double C104044 = C95480 + C95481;
    const double C104042 = C95481 + C95480;
    const double C95490 = C95478 + C95479;
    const double C104050 = C95479 + C95478;
    const double C96198 = C95788 + C95789;
    const double C95793 = C95786 + C95787;
    const double C95792 = C95780 + C95781;
    const double C96542 = C96538 + C96539;
    const double C105263 = C96539 + C96538;
    const double C105262 = C96536 + C96537;
    const double C105257 = C96537 + C96536;
    const double C106349 = C97346 + C97347;
    const double C106348 = C97347 + C97346;
    const double C106741 = C97658 + C97659;
    const double C106736 = C97659 + C97658;
    const double C108153 = C98740 + C98741;
    const double C108152 = C98741 + C98740;
    const double C134345 = C104063 + C104062;
    const double C135583 = C105755 + C105754;
    const double C135582 = C105751 + C105750;
    const double C135815 = C106089 + C106088;
    const double C135814 = C106085 + C106084;
    const double C136506 = C107019 + C107018;
    const double C17929 =
        (4 * (2 * C150999 + C151006 + C151006 + C150615 * C151371) + C151382 +
         C151382 +
         C150615 *
             (3 * C151371 + C151379 + C151379 +
              C150615 *
                  (2 * C151363 + C151375 + C151375 +
                   C150615 *
                       (C150675 + C151367 + C151367 +
                        C150615 *
                            (2 * ae * C150788 +
                             C150615 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150634)))))) /
        C150520;
    const double C17942 = C14624 * C17926;
    const double C49185 = C45351 * C17926;
    const double C62583 = C62222 * C17926;
    const double C98429 = C95120 * C17926;
    const double C118543 = C114715 * C17926;
    const double C151754 = C151753 + C151745;
    const double C49390 =
        (4 * (2 * C151202 + C151212 + C151212 + C150615 * C151781) + C151794 +
         C151794 +
         C150615 *
             (3 * C151781 + C151791 + C151791 +
              C150615 * (2 * C151772 + C151787 + C151787 +
                         C150615 * (C151759 + C151780 + C151780 +
                                    C150615 * (2 * ae * C151762 +
                                               C150615 * C150807 * C150622 *
                                                   (C150667 * C150668 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150617, 9)) *
                                                   C150618))))) /
        C150520;
    const double C49397 = C45351 * C49389;
    const double C64500 = C62222 * C49389;
    const double C88187 = C14624 * C49389;
    const double C107765 = C95120 * C49389;
    const double C118752 = C114715 * C49389;
    const double C40072 =
        (4 * (2 * C151454 + C151461 + C151461 + C150615 * C151644) + C151655 +
         C151655 +
         C150615 *
             (3 * C151644 + C151652 + C151652 +
              C150615 *
                  (2 * C151636 + C151648 + C151648 +
                   C150615 *
                       (C151515 + C151640 + C151640 +
                        C150615 *
                            (2 * ae * C151530 +
                             C150615 * (C150673 + (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                      C150618 * C150819)))))) /
        C150520;
    const double C40079 = C14624 * C40070;
    const double C57692 = C45351 * C40070;
    const double C63451 = C62222 * C40070;
    const double C137078 = C95120 * C40070;
    const double C146060 = C114715 * C40070;
    const double C151846 = C151845 + C151837;
    const double C151908 = ae * C151906;
    const double C151907 = C150615 * C151906;
    const double C2997 = C2994 * C152419;
    const double C18467 = C18463 + C18450;
    const double C46032 = C46020 + C45986;
    const double C98954 = C98950 + C98937;
    const double C115396 = C115384 + C115350;
    const double C88842 = C88840 + C88835;
    const double C48980 = C48977 + C48966;
    const double C108420 = C108418 + C108413;
    const double C118338 = C118335 + C118324;
    const double C49178 = C45345 * C17928;
    const double C118536 = C114709 * C17928;
    const double C49186 = C49177 + C48663;
    const double C118544 = C118535 + C118021;
    const double C40790 = C40786 + C40773;
    const double C55743 = C55734 + C55711;
    const double C137767 = C137765 + C137758;
    const double C144114 = C144105 + C144082;
    const double C57685 = C45345 * C40071;
    const double C146053 = C114709 * C40071;
    const double C57693 = C57684 + C49394;
    const double C146061 = C146052 + C118749;
    const double C151705 = ae * C151704;
    const double C48658 = (5 * C151309 + C150615 * C151704 +
                           (4 * C151298 + C150615 * C151691) * ae) /
                          C150502;
    const double C95191 = C95188 * C152419;
    const double C95190 = C95187 * C152419;
    const double C95189 = C95186 * C152419;
    const double C95997 = C95990 * C152419;
    const double C95493 = C95491 * C152419;
    const double C95492 = C95490 * C152419;
    const double C96205 = C96198 * C152419;
    const double C95795 = C95793 * C152419;
    const double C95794 = C95792 * C152419;
    const double C96543 = C96542 * C152419;
    const double C151755 = ae * C151754;
    const double C48659 = (5 * C151345 + C150615 * C151754 +
                           (4 * C151334 + C150615 * C151741) * ae) /
                          C150502;
    const double C151847 = ae * C151846;
    const double C57000 = (5 * C151618 + C150615 * C151846 +
                           (4 * C151607 + C150615 * C151834) * ae) /
                          C150502;
    const double C151909 = C151854 + C151907;
    const double C49189 = C49186 + C48663;
    const double C118547 = C118544 + C118021;
    const double C57696 = C57693 + C49394;
    const double C146064 = C146061 + C118749;
    const double C48660 =
        (5 * (3 * C151299 + C151307 + C151307 + C150615 * C151693) + C151705 +
         C151705 +
         C150615 *
             (4 * C151693 + C151702 + C151702 +
              C150615 *
                  (3 * C151685 + C151698 + C151698 +
                   C150615 * (2 * C151677 + C151692 + C151692 +
                              C150615 * (C150658 + C151681 + C151681 +
                                         C150615 * (2 * ae * C150755 +
                                                    C150615 * C150673)))))) /
        C150520;
    const double C48671 = C45351 * C48658;
    const double C64301 = C62220 * C48658;
    const double C64295 = C62222 * C48658;
    const double C118029 = C114715 * C48658;
    const double C48661 =
        (5 * (3 * C151335 + C151343 + C151343 + C150615 * C151743) + C151755 +
         C151755 +
         C150615 *
             (4 * C151743 + C151752 + C151752 +
              C150615 *
                  (3 * C151735 + C151748 + C151748 +
                   C150615 *
                       (2 * C151727 + C151742 + C151742 +
                        C150615 * (C151391 + C151731 + C151731 +
                                   C150615 * (2 * ae * C151420 +
                                              C150615 * C150622 *
                                                  (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                  C150618)))))) /
        C150520;
    const double C48674 = C45351 * C48659;
    const double C64634 = C62222 * C48659;
    const double C118032 = C114715 * C48659;
    const double C57001 =
        (5 * (3 * C151608 + C151616 + C151616 + C150615 * C151832) + C151847 +
         C151847 +
         C150615 *
             (4 * C151832 + C151844 + C151844 +
              C150615 *
                  (3 * C151825 + C151840 + C151840 +
                   C150615 *
                       (2 * C151816 + C151835 + C151835 +
                        C150615 * (C151799 + C151824 + C151824 +
                                   C150615 * (2 * ae * C151803 +
                                              C150615 * C150807 *
                                                  (C150667 * C150668 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150617, 9)) *
                                                  C150618)))))) /
        C150520;
    const double C57005 = C45351 * C57000;
    const double C64768 = C62222 * C57000;
    const double C145373 = C114715 * C57000;
    const double C151910 = C151909 + C151899;
    const double C49192 = C49189 + C49178;
    const double C118550 = C118547 + C118536;
    const double C57699 = C57696 + C57685;
    const double C146067 = C146064 + C146053;
    const double C151911 = ae * C151910;
    const double C64292 = (6 * C151704 + C150615 * C151910 +
                           (5 * C151691 + C150615 * C151896) * ae) /
                          C150502;
    const double C64293 =
        (6 * (4 * C151693 + C151702 + C151702 + C150615 * C151897) + C151911 +
         C151911 +
         C150615 *
             (5 * C151897 + C151908 + C151908 +
              C150615 *
                  (4 * C151890 + C151904 + C151904 +
                   C150615 *
                       (3 * C151882 + C151900 + C151900 +
                        C150615 *
                            (2 * C151874 + C151889 + C151889 +
                             C150615 *
                                 (C150673 + C151878 + C151878 +
                                  C150615 * (2 * ae * C150783 +
                                             C150615 *
                                                 (C150667 * C150668 +
                                                  C150619 * bs[9] *
                                                      std::pow(C150617, 9)) *
                                                 C150618))))))) /
        C150520;
    const double C64302 = C62222 * C64292;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152280 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152287 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C3759) *
              C152198 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C152287 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152280 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C3759) *
              C152207 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C152280 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C152287 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152542 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C152280 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152542) *
               C152287 +
           (((C6518 * C67854 + C7815 * C152435) * C152606 +
             (C68095 + C68096) * C152570 + C68104 * C67858) *
                C152542 -
            ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
             (C8786 * C152435 + C8070 * C67854) * C152606) *
                C152326) *
               C3759) *
              C3415 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152542) *
               C152280 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152542 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152287 +
           (((C70077 + C70076) * C152606 + (C70075 + C70074) * C152570 +
             (C2062 * C67854 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C67858) *
                C152326 -
            ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
             (C68096 + C68095) * C152606) *
                C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152634 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152630 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152618 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C152239 * C152593) *
              C3415 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C152630 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152634 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152618 +
           ((C69783 + C69782) * C152606 + (C69781 + C69780) * C152570 +
            (C1846 * C67854 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C67858) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C3275 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152284) *
              C152633 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C152284 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C3275) *
              C152626 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C3275 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C152284) *
              C152611 +
          ((C68531 * C152606 + (C68533 + C68532) * C152570 +
            (C842 * C67854 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C67858) *
               C152239 * C152284 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152628 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152615 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
              C8069 * C152435) *
                 C152606 +
             (C68327 + C68328) * C152570 + C68336 * C67858) *
                C152586) *
               C3275 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152615 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152628 -
            ((C71120 + C71121) * C67858 + (C71122 + C71123) * C152570 +
             (C8073 * C152435 + C8069 * C67854) * C152606) *
                C152586) *
               C152284) *
              C3415 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152615 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152628 -
            ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
             (C68328 + C68327) * C152606) *
                C152586) *
               C3275 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152628 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152615 +
            ((C71123 + C71122) * C152606 + (C71121 + C71120) * C152570 +
             (C2838 * C67854 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C67858) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152542 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C3275 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152542) *
               C152284) *
              C152198 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152542) *
               C3275 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152542 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152284) *
              C152207 +
          (((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
                C152542 -
            ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
             C68335 * C152606) *
                C152326) *
               C3275 +
           ((C69027 * C152606 + (C69026 + C69025) * C152570 +
             (C1223 * C67854 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C67858) *
                C152326 -
            ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
             C68103 * C152606) *
                C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C3275 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152284) *
              C152633 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C152284 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C3275) *
              C152626 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C3275 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C152284) *
              C152611 +
          ((C68531 * C152606 + (C68533 + C68532) * C152570 +
            (C842 * C67854 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C67858) *
               C152239 * C152284 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152634 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152630 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152618 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C152239 * C152593) *
              C3415 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C152630 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152634 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152618 +
           ((C69783 + C69782) * C152606 + (C69781 + C69780) * C152570 +
            (C1846 * C67854 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C67858) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C4281 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C152280 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C4281) *
               C152287 +
           (((C6518 * C67854 + C7815 * C152435) * C152606 +
             (C68095 + C68096) * C152570 + C68104 * C67858) *
                C4281 -
            ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
             (C8786 * C152435 + C8070 * C67854) * C152606) *
                C152326) *
               C3759) *
              C152527 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C4281) *
               C152280 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C4281 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152287 +
           (((C70077 + C70076) * C152606 + (C70075 + C70074) * C152570 +
             (C2062 * C67854 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C67858) *
                C152326 -
            ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
             (C68096 + C68095) * C152606) *
                C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152322 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C4953) *
              C152280 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152329 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152322 -
           ((C71120 + C71121) * C67858 + (C71122 + C71123) * C152570 +
            (C8073 * C152435 + C8069 * C67854) * C152606) *
               C4953) *
              C152287 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152322 -
           ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C152329 +
           ((C8073 * C67854 + C24981 * C152435) * C152606 +
            (C8072 * C67854 + C24980 * C152435) * C152570 +
            (C8071 * C67854 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C67858) *
               C4953) *
              C3759) *
         C152193) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C4281 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C152634 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152326 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C4281) *
              C152630 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C4281 -
           ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C152326) *
              C152618 +
          (((C8786 * C67854 + C25683 * C152435) * C152606 +
            (C8573 * C67854 + C25475 * C152435) * C152570 +
            (C8572 * C67854 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C67858) *
               C152326 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C4281 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C3275 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C4281) *
               C152284) *
              C152624 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C4281) *
               C3275 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C4281 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152284) *
              C152609 +
          (((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
                C4281 -
            ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
             C68335 * C152606) *
                C152326) *
               C3275 +
           ((C69027 * C152606 + (C69026 + C69025) * C152570 +
             (C1223 * C67854 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C67858) *
                C152326 -
            ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
             C68103 * C152606) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152635 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152621 -
           ((C71318 + C71319) * C67858 + (C71320 + C71321) * C152570 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C67854) *
                C152606) *
               C152599) *
              C3275 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152632 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152635 -
           ((C71120 + C71121) * C67858 + (C71122 + C71123) * C152570 +
            (C8073 * C152435 + C8069 * C67854) * C152606) *
               C152621 +
           ((C10069 * C67854 + C26951 * C152435) * C152606 +
            (C9856 * C67854 + C26743 * C152435) * C152570 +
            (C9855 * C67854 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C152435) *
                C67858) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152322 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
              C8069 * C152435) *
                 C152606 +
             (C68327 + C68328) * C152570 + C68336 * C67858) *
                C4953) *
               C3275 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152329 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152322 -
            ((C71120 + C71121) * C67858 + (C71122 + C71123) * C152570 +
             (C8073 * C152435 + C8069 * C67854) * C152606) *
                C4953) *
               C152284) *
              C152527 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152329 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152322 -
            ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
             (C68328 + C68327) * C152606) *
                C4953) *
               C3275 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152322 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152329 +
            ((C71123 + C71122) * C152606 + (C71121 + C71120) * C152570 +
             (C2838 * C67854 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C67858) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C4281 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C3275 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C4281) *
               C152284) *
              C152624 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C4281) *
               C3275 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C4281 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152284) *
              C152609 +
          (((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
                C4281 -
            ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
             C68335 * C152606) *
                C152326) *
               C3275 +
           ((C69027 * C152606 + (C69026 + C69025) * C152570 +
             (C1223 * C67854 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C67858) *
                C152326 -
            ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
             C68103 * C152606) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C4281 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C152634 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152326 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C4281) *
              C152630 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C4281 -
           ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C152326) *
              C152618 +
          (((C8786 * C67854 + C25683 * C152435) * C152606 +
            (C8573 * C67854 + C25475 * C152435) * C152570 +
            (C8572 * C67854 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C67858) *
               C152326 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C1823 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C1824 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C1825 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C152239 * C152593) *
              C152527 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C1824 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C1823 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C1825 +
           ((C69783 + C69782) * C152606 + (C69781 + C69780) * C152570 +
            (C1846 * C67854 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C67858) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152541 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152284) *
              C829 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C152284 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152541) *
              C830 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C152541 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C152284) *
              C831 +
          ((C68531 * C152606 + (C68533 + C68532) * C152570 +
            (C842 * C67854 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C67858) *
               C152239 * C152284 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C2359 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
              C8069 * C152435) *
                 C152606 +
             (C68327 + C68328) * C152570 + C68336 * C67858) *
                C152586) *
               C152541 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C2360 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C2359 -
            ((C71120 + C71121) * C67858 + (C71122 + C71123) * C152570 +
             (C8073 * C152435 + C8069 * C67854) * C152606) *
                C152586) *
               C152284) *
              C152527 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C2360 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C2359 -
            ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
             (C68328 + C68327) * C152606) *
                C152586) *
               C152541 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C2359 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C2360 +
            ((C71123 + C71122) * C152606 + (C71121 + C71120) * C152570 +
             (C2838 * C67854 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C67858) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152542 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C1823 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152326 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152542) *
              C1824 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152542 -
           ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C152326) *
              C1825 +
          (((C8786 * C67854 + C25683 * C152435) * C152606 +
            (C8573 * C67854 + C25475 * C152435) * C152570 +
            (C8572 * C67854 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C67858) *
               C152326 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152542 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C152541 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152542) *
               C152284) *
              C353 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152542) *
               C152541 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152542 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152284) *
              C354 +
          (((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
                C152542 -
            ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
             C68335 * C152606) *
                C152326) *
               C152541 +
           ((C69027 * C152606 + (C69026 + C69025) * C152570 +
             (C1223 * C67854 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C67858) *
                C152326 -
            ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
             C68103 * C152606) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C2973 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C2975 -
           ((C71318 + C71319) * C67858 + (C71320 + C71321) * C152570 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C67854) *
                C152606) *
               C152599) *
              C152541 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C2974 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C2973 -
           ((C71120 + C71121) * C67858 + (C71122 + C71123) * C152570 +
            (C8073 * C152435 + C8069 * C67854) * C152606) *
               C2975 +
           ((C10069 * C67854 + C26951 * C152435) * C152606 +
            (C9856 * C67854 + C26743 * C152435) * C152570 +
            (C9855 * C67854 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C152435) *
                C67858) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
                C6517 * C152435) *
                   C152606 +
               (C67860 + C67861) * C152570 + C67870 * C67858) *
                  C152239 * C152221 * C129 -
              (C67871 * C67858 + (C67863 + C67862) * C152570 +
               (C67861 + C67860) * C152606) *
                  C152239 * C152221 * C130 +
              (C67870 * C152606 + (C67865 + C67864) * C152570 +
               C67872 * C67858) *
                  C152239 * C152221 * C131 -
              ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
               C67871 * C152606) *
                  C152239 * C152221 * C132 +
              (C67872 * C152606 + (C67869 + C67868) * C152570 +
               (C198 * C67854 +
                (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
                   C67858) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
                 C6517 * C152435) *
                    C152606 +
                (C67860 + C67861) * C152570 + C67870 * C67858) *
                   C152239 * C152627 -
               (C68103 * C67858 + (C68093 + C68094) * C152570 +
                (C6518 * C152435 + C6517 * C67854) * C152606) *
                   C152239 * C152613 +
               ((C6518 * C67854 + C7815 * C152435) * C152606 +
                (C68095 + C68096) * C152570 + C68104 * C67858) *
                   C152239 * C152583) *
                  C353 +
              (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
                (C68099 + C68100) * C67858) *
                   C152239 * C152613 -
               (C67871 * C67858 + (C67863 + C67862) * C152570 +
                (C67861 + C67860) * C152606) *
                   C152239 * C152627 -
               ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
                (C68096 + C68095) * C152606) *
                   C152239 * C152583) *
                  C354 +
              ((C67870 * C152606 + (C67865 + C67864) * C152570 +
                C67872 * C67858) *
                   C152239 * C152627 -
               ((C444 * C152435 + C443 * C67854) * C67858 +
                (C68100 + C68099) * C152570 + C68103 * C152606) *
                   C152239 * C152613 +
               (C68104 * C152606 + (C68102 + C68101) * C152570 +
                (C444 * C67854 +
                 (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                    C67858) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152628 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C152221 * C353 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            (C68331 + C68332) * C67858) *
               C152615 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152628 -
           ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
            (C68328 + C68327) * C152606) *
               C152586) *
              C152221 * C354 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152628 -
           ((C1223 * C152435 + C688 * C67854) * C67858 +
            (C68332 + C68331) * C152570 + C68335 * C152606) *
               C152615 +
           (C68336 * C152606 + (C68334 + C68333) * C152570 +
            (C689 * C67854 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C67858) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C1373 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C1374 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152583) *
              C152624 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C1374 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C1373 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152583) *
              C152609 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C1373 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C1374 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C152239 * C1461 -
          (C68103 * C67858 + (C68093 + C68094) * C152570 +
           (C6518 * C152435 + C6517 * C67854) * C152606) *
              C152239 * C1462 +
          ((C6518 * C67854 + C7815 * C152435) * C152606 +
           (C68095 + C68096) * C152570 + C68104 * C67858) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C67854) * C67858 +
           (C7817 * C152435 + C1848 * C67854) * C152570 +
           (C7818 * C152435 + C7815 * C67854) * C152606) *
              C152239 * C1464 +
          ((C7818 * C67854 + C24745 * C152435) * C152606 +
           (C7817 * C67854 + C24744 * C152435) * C152570 +
           (C7816 * C67854 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C67858) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152628 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C1373 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152615 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152628 -
           ((C8071 * C152435 + C2839 * C67854) * C67858 +
            (C8072 * C152435 + C2840 * C67854) * C152570 +
            (C8073 * C152435 + C8069 * C67854) * C152606) *
               C152586) *
              C1374 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152628 -
           ((C8572 * C152435 + C2063 * C67854) * C67858 +
            (C8573 * C152435 + C2064 * C67854) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C152615 +
           ((C8073 * C67854 + C24981 * C152435) * C152606 +
            (C8072 * C67854 + C24980 * C152435) * C152570 +
            (C8071 * C67854 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C67858) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C2359 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C152221 * C152624 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C2360 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C2359 -
           ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
            (C68328 + C68327) * C152606) *
               C152586) *
              C152221 * C152609 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C2359 -
           ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
            C68335 * C152606) *
               C2360 +
           (C68336 * C152606 + (C68334 + C68333) * C152570 +
            (C689 * C67854 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C67858) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C2359 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C152627 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C2360 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C2359 -
           ((C8071 * C152435 + C2839 * C67854) * C67858 +
            (C8072 * C152435 + C2840 * C67854) * C152570 +
            (C8073 * C152435 + C8069 * C67854) * C152606) *
               C152586) *
              C152613 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C2359 -
           ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C2360 +
           ((C8073 * C67854 + C24981 * C152435) * C152606 +
            (C8072 * C67854 + C24980 * C152435) * C152570 +
            (C8071 * C67854 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C67858) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C2590 -
          (C68335 * C67858 + (C68325 + C68326) * C152570 +
           (C7446 * C152435 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
               C152606) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
            C8069 * C152435) *
               C152606 +
           (C68327 + C68328) * C152570 + C68336 * C67858) *
              C2592 -
          ((C9855 * C152435 + C2995 * C67854) * C67858 +
           (C9856 * C152435 + C2996 * C67854) * C152570 +
           (C10069 * C152435 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C67854) *
               C152606) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C67854 +
            (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C152435) *
               C152606 +
           ((C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C67854 +
            (C134 * C9345 + C9355 + C9355 + C152449 * C9351) * C152435) *
               C152570 +
           ((C134 * C2601 + C2626 + C2626 + C152449 * C2617) * C67854 +
            (C134 * C9346 + C9356 + C9356 + C152449 * C9352) * C152435) *
               C67858) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152542 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C1373 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152542) *
               C1374 +
           (((C6518 * C67854 + C7815 * C152435) * C152606 +
             (C68095 + C68096) * C152570 + C68104 * C67858) *
                C152542 -
            ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
             (C8786 * C152435 + C8070 * C67854) * C152606) *
                C152326) *
               C152583) *
              C152527 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152542) *
               C1373 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152542 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C1374 +
           (((C70077 + C70076) * C152606 + (C70075 + C70074) * C152570 +
             (C2062 * C67854 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C67858) *
                C152326 -
            ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
             (C68096 + C68095) * C152606) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152542 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C152221 * C829 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C152326 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152542) *
              C152221 * C830 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152542 -
           ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
            C68335 * C152606) *
               C152326) *
              C152221 * C831 +
          ((C68728 * C152606 + (C68730 + C68729) * C152570 +
            (C984 * C67854 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C67858) *
               C152326 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C2973 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C2975 -
           ((C71318 + C71319) * C67858 + (C71320 + C71321) * C152570 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C67854) *
                C152606) *
               C152599) *
              C152221 * C152527 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C2974 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C2973 -
           ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
            (C68328 + C68327) * C152606) *
               C2975 +
           ((C71321 + C71320) * C152606 + (C71319 + C71318) * C152570 +
            (C2994 * C67854 +
             (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152435) *
                C67858) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152627 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152613 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152583) *
              C353 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            (C68099 + C68100) * C67858) *
               C152239 * C152613 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152627 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152583) *
              C354 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C152627 -
           ((C444 * C152435 + C443 * C67854) * C67858 +
            (C68100 + C68099) * C152570 + C68103 * C152606) *
               C152239 * C152613 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C152239 * C152221 * C129 -
          (C67871 * C67858 + (C67863 + C67862) * C152570 +
           (C67861 + C67860) * C152606) *
              C152239 * C152221 * C130 +
          (C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
              C152239 * C152221 * C131 -
          ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
           C67871 * C152606) *
              C152239 * C152221 * C132 +
          (C67872 * C152606 + (C67869 + C67868) * C152570 +
           (C198 * C67854 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C67858) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C1373 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C1374 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152583) *
              C152624 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C1374 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C1373 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152583) *
              C152609 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C1373 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C1374 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C152239 * C1461 -
          (C68103 * C67858 + (C68093 + C68094) * C152570 +
           (C6518 * C152435 + C6517 * C67854) * C152606) *
              C152239 * C1462 +
          ((C6518 * C67854 + C7815 * C152435) * C152606 +
           (C68095 + C68096) * C152570 + C68104 * C67858) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C67854) * C67858 +
           (C7817 * C152435 + C1848 * C67854) * C152570 +
           (C7818 * C152435 + C7815 * C67854) * C152606) *
              C152239 * C1464 +
          ((C7818 * C67854 + C24745 * C152435) * C152606 +
           (C7817 * C67854 + C24744 * C152435) * C152570 +
           (C7816 * C67854 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C67858) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C2359 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C152221 * C152624 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C2360 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C2359 -
           ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
            (C68328 + C68327) * C152606) *
               C152586) *
              C152221 * C152609 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C2359 -
           ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
            C68335 * C152606) *
               C2360 +
           (C68336 * C152606 + (C68334 + C68333) * C152570 +
            (C689 * C67854 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C67858) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C2359 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C152627 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C2360 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C2359 -
           ((C8071 * C152435 + C2839 * C67854) * C67858 +
            (C8072 * C152435 + C2840 * C67854) * C152570 +
            (C8073 * C152435 + C8069 * C67854) * C152606) *
               C152586) *
              C152613 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C2359 -
           ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C2360 +
           ((C8073 * C67854 + C24981 * C152435) * C152606 +
            (C8072 * C67854 + C24980 * C152435) * C152570 +
            (C8071 * C67854 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C67858) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C4281 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C152541 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C4281) *
               C152284) *
              C152198 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C4281) *
               C152541 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C4281 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152284) *
              C152207 +
          (((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
                C4281 -
            ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
             C68335 * C152606) *
                C152326) *
               C152541 +
           ((C69027 * C152606 + (C69026 + C69025) * C152570 +
             (C1223 * C67854 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C67858) *
                C152326 -
            ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
             C68103 * C152606) *
                C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152322 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
              C8069 * C152435) *
                 C152606 +
             (C68327 + C68328) * C152570 + C68336 * C67858) *
                C4953) *
               C152541 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152329 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152322 -
            ((C71120 + C71121) * C67858 + (C71122 + C71123) * C152570 +
             (C8073 * C152435 + C8069 * C67854) * C152606) *
                C4953) *
               C152284) *
              C3415 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152329 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152322 -
            ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
             (C68328 + C68327) * C152606) *
                C4953) *
               C152541 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152322 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152329 +
            ((C71123 + C71122) * C152606 + (C71121 + C71120) * C152570 +
             (C2838 * C67854 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C67858) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C4281 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C152627 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C4281) *
               C152613 +
           (((C6518 * C67854 + C7815 * C152435) * C152606 +
             (C68095 + C68096) * C152570 + C68104 * C67858) *
                C4281 -
            ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
             (C8786 * C152435 + C8070 * C67854) * C152606) *
                C152326) *
               C152583) *
              C3415 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C4281) *
               C152627 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C4281 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152613 +
           (((C70077 + C70076) * C152606 + (C70075 + C70074) * C152570 +
             (C2062 * C67854 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C67858) *
                C152326 -
            ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
             (C68096 + C68095) * C152606) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C4281 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C152221 * C152633 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C152326 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C4281) *
              C152221 * C152626 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C4281 -
           ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
            C68335 * C152606) *
               C152326) *
              C152221 * C152611 +
          ((C68728 * C152606 + (C68730 + C68729) * C152570 +
            (C984 * C67854 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C67858) *
               C152326 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152635 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152621 -
           ((C71318 + C71319) * C67858 + (C71320 + C71321) * C152570 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C67854) *
                C152606) *
               C152599) *
              C152221 * C3415 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C152632 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152635 -
           ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
            (C68328 + C68327) * C152606) *
               C152621 +
           ((C71321 + C71320) * C152606 + (C71319 + C71318) * C152570 +
            (C2994 * C67854 +
             (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152435) *
                C67858) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152322 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C4953) *
              C152221 * C152198 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C152329 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152322 -
           ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
            (C68328 + C68327) * C152606) *
               C4953) *
              C152221 * C152207 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152322 -
           ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
            C68335 * C152606) *
               C152329 +
           (C68336 * C152606 + (C68334 + C68333) * C152570 +
            (C689 * C67854 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C67858) *
               C4953) *
              C152221 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C4281 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C152221 * C152633 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C152326 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C4281) *
              C152221 * C152626 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C4281 -
           ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
            C68335 * C152606) *
               C152326) *
              C152221 * C152611 +
          ((C68728 * C152606 + (C68730 + C68729) * C152570 +
            (C984 * C67854 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C67858) *
               C152326 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C4281 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C152627 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C4281) *
               C152613 +
           (((C6518 * C67854 + C7815 * C152435) * C152606 +
             (C68095 + C68096) * C152570 + C68104 * C67858) *
                C4281 -
            ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
             (C8786 * C152435 + C8070 * C67854) * C152606) *
                C152326) *
               C152583) *
              C3415 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C4281) *
               C152627 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C4281 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152613 +
           (((C70077 + C70076) * C152606 + (C70075 + C70074) * C152570 +
             (C2062 * C67854 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C67858) *
                C152326 -
            ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
             (C68096 + C68095) * C152606) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152541 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152284) *
              C829 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C152284 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152541) *
              C830 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C152541 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C152284) *
              C831 +
          ((C68531 * C152606 + (C68533 + C68532) * C152570 +
            (C842 * C67854 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C67858) *
               C152239 * C152284 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C1823 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C1824 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C1825 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C152239 * C152593) *
              C152527 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C1824 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C1823 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C1825 +
           ((C69783 + C69782) * C152606 + (C69781 + C69780) * C152570 +
            (C1846 * C67854 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C67858) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152542 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C152541 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152542) *
               C152284) *
              C353 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152542) *
               C152541 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152542 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C152284) *
              C354 +
          (((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
                C152542 -
            ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
             C68335 * C152606) *
                C152326) *
               C152541 +
           ((C69027 * C152606 + (C69026 + C69025) * C152570 +
             (C1223 * C67854 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C67858) *
                C152326 -
            ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
             C68103 * C152606) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152542 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C1823 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152326 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152542) *
              C1824 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152542 -
           ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C152326) *
              C1825 +
          (((C8786 * C67854 + C25683 * C152435) * C152606 +
            (C8573 * C67854 + C25475 * C152435) * C152570 +
            (C8572 * C67854 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C67858) *
               C152326 -
           ((C69780 + C69781) * C67858 + (C69782 + C69783) * C152570 +
            (C7818 * C152435 + C7815 * C67854) * C152606) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152627 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152613 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152583) *
              C353 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            (C68099 + C68100) * C67858) *
               C152239 * C152613 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152627 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152583) *
              C354 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C152627 -
           ((C444 * C152435 + C443 * C67854) * C67858 +
            (C68100 + C68099) * C152570 + C68103 * C152606) *
               C152239 * C152613 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C152239 * C152221 * C129 -
          (C67871 * C67858 + (C67863 + C67862) * C152570 +
           (C67861 + C67860) * C152606) *
              C152239 * C152221 * C130 +
          (C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
              C152239 * C152221 * C131 -
          ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
           C67871 * C152606) *
              C152239 * C152221 * C132 +
          (C67872 * C152606 + (C67869 + C67868) * C152570 +
           (C198 * C67854 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C67858) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152628 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C152221 * C353 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            (C68331 + C68332) * C67858) *
               C152615 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152628 -
           ((C68333 + C68334) * C67858 + (C68330 + C68329) * C152570 +
            (C68328 + C68327) * C152606) *
               C152586) *
              C152221 * C354 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152628 -
           ((C1223 * C152435 + C688 * C67854) * C67858 +
            (C68332 + C68331) * C152570 + C68335 * C152606) *
               C152615 +
           (C68336 * C152606 + (C68334 + C68333) * C152570 +
            (C689 * C67854 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C67858) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C1373 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C1374 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152583) *
              C152624 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C1374 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C1373 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152583) *
              C152609 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C1373 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C1374 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C152239 * C1461 -
          (C68103 * C67858 + (C68093 + C68094) * C152570 +
           (C6518 * C152435 + C6517 * C67854) * C152606) *
              C152239 * C1462 +
          ((C6518 * C67854 + C7815 * C152435) * C152606 +
           (C68095 + C68096) * C152570 + C68104 * C67858) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C67854) * C67858 +
           (C7817 * C152435 + C1848 * C67854) * C152570 +
           (C7818 * C152435 + C7815 * C67854) * C152606) *
              C152239 * C1464 +
          ((C7818 * C67854 + C24745 * C152435) * C152606 +
           (C7817 * C67854 + C24744 * C152435) * C152570 +
           (C7816 * C67854 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C67858) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152628 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C67854 +
             C8069 * C152435) *
                C152606 +
            (C68327 + C68328) * C152570 + C68336 * C67858) *
               C152586) *
              C1373 +
          (((C7446 * C67854 + C8070 * C152435) * C152606 +
            (C69021 + C69022) * C152570 + C69027 * C67858) *
               C152615 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152628 -
           ((C8071 * C152435 + C2839 * C67854) * C67858 +
            (C8072 * C152435 + C2840 * C67854) * C152570 +
            (C8073 * C152435 + C8069 * C67854) * C152606) *
               C152586) *
              C1374 +
          (((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152628 -
           ((C8572 * C152435 + C2063 * C67854) * C67858 +
            (C8573 * C152435 + C2064 * C67854) * C152570 +
            (C8786 * C152435 + C8070 * C67854) * C152606) *
               C152615 +
           ((C8073 * C67854 + C24981 * C152435) * C152606 +
            (C8072 * C67854 + C24980 * C152435) * C152570 +
            (C8071 * C67854 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C67858) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152542 -
           (C68335 * C67858 + (C68325 + C68326) * C152570 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                C152606) *
               C152326) *
              C152221 * C829 +
          (((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
            C68728 * C67858) *
               C152326 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152542) *
              C152221 * C830 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152542 -
           ((C68729 + C68730) * C67858 + (C68332 + C68331) * C152570 +
            C68335 * C152606) *
               C152326) *
              C152221 * C831 +
          ((C68728 * C152606 + (C68730 + C68729) * C152570 +
            (C984 * C67854 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C67858) *
               C152326 -
           ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
            C67871 * C152606) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
              C6517 * C152435) *
                 C152606 +
             (C67860 + C67861) * C152570 + C67870 * C67858) *
                C152542 -
            (C68335 * C67858 + (C68325 + C68326) * C152570 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C67854) *
                 C152606) *
                C152326) *
               C1373 +
           (((C7446 * C67854 + C8070 * C152435) * C152606 +
             (C69021 + C69022) * C152570 + C69027 * C67858) *
                C152326 -
            (C68103 * C67858 + (C68093 + C68094) * C152570 +
             (C6518 * C152435 + C6517 * C67854) * C152606) *
                C152542) *
               C1374 +
           (((C6518 * C67854 + C7815 * C152435) * C152606 +
             (C68095 + C68096) * C152570 + C68104 * C67858) *
                C152542 -
            ((C70074 + C70075) * C67858 + (C70076 + C70077) * C152570 +
             (C8786 * C152435 + C8070 * C67854) * C152606) *
                C152326) *
               C152583) *
              C152527 +
          ((((C68326 + C68325) * C152606 + (C68324 + C68323) * C152570 +
             C68728 * C67858) *
                C152326 -
            (C67871 * C67858 + (C67863 + C67862) * C152570 +
             (C67861 + C67860) * C152606) *
                C152542) *
               C1373 +
           (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
             C68531 * C67858) *
                C152542 -
            ((C69025 + C69026) * C67858 + (C69024 + C69023) * C152570 +
             (C69022 + C69021) * C152606) *
                C152326) *
               C1374 +
           (((C70077 + C70076) * C152606 + (C70075 + C70074) * C152570 +
             (C2062 * C67854 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C67858) *
                C152326 -
            ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
             (C68096 + C68095) * C152606) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C152239 * C152221 * C129 -
          (C67871 * C67858 + (C67863 + C67862) * C152570 +
           (C67861 + C67860) * C152606) *
              C152239 * C152221 * C130 +
          (C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
              C152239 * C152221 * C131 -
          ((C67868 + C67869) * C67858 + (C67867 + C67866) * C152570 +
           C67871 * C152606) *
              C152239 * C152221 * C132 +
          (C67872 * C152606 + (C67869 + C67868) * C152570 +
           (C198 * C67854 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C67858) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C152627 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C152613 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152583) *
              C353 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            (C68099 + C68100) * C67858) *
               C152239 * C152613 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C152627 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152583) *
              C354 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C152627 -
           ((C444 * C152435 + C443 * C67854) * C67858 +
            (C68100 + C68099) * C152570 + C68103 * C152606) *
               C152239 * C152613 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
             C6517 * C152435) *
                C152606 +
            (C67860 + C67861) * C152570 + C67870 * C67858) *
               C152239 * C1373 -
           (C68103 * C67858 + (C68093 + C68094) * C152570 +
            (C6518 * C152435 + C6517 * C67854) * C152606) *
               C152239 * C1374 +
           ((C6518 * C67854 + C7815 * C152435) * C152606 +
            (C68095 + C68096) * C152570 + C68104 * C67858) *
               C152239 * C152583) *
              C152624 +
          (((C68094 + C68093) * C152606 + (C68092 + C68091) * C152570 +
            C68531 * C67858) *
               C152239 * C1374 -
           (C67871 * C67858 + (C67863 + C67862) * C152570 +
            (C67861 + C67860) * C152606) *
               C152239 * C1373 -
           ((C68101 + C68102) * C67858 + (C68098 + C68097) * C152570 +
            (C68096 + C68095) * C152606) *
               C152239 * C152583) *
              C152609 +
          ((C67870 * C152606 + (C67865 + C67864) * C152570 + C67872 * C67858) *
               C152239 * C1373 -
           ((C68532 + C68533) * C67858 + (C68100 + C68099) * C152570 +
            C68103 * C152606) *
               C152239 * C1374 +
           (C68104 * C152606 + (C68102 + C68101) * C152570 +
            (C444 * C67854 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C67854 +
            C6517 * C152435) *
               C152606 +
           (C67860 + C67861) * C152570 + C67870 * C67858) *
              C152239 * C1461 -
          (C68103 * C67858 + (C68093 + C68094) * C152570 +
           (C6518 * C152435 + C6517 * C67854) * C152606) *
              C152239 * C1462 +
          ((C6518 * C67854 + C7815 * C152435) * C152606 +
           (C68095 + C68096) * C152570 + C68104 * C67858) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C67854) * C67858 +
           (C7817 * C152435 + C1848 * C67854) * C152570 +
           (C7818 * C152435 + C7815 * C67854) * C152606) *
              C152239 * C1464 +
          ((C7818 * C67854 + C24745 * C152435) * C152606 +
           (C7817 * C67854 + C24744 * C152435) * C152570 +
           (C7816 * C67854 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C67858) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152280 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152287 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C3759) *
              C152198 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152287 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152280 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C3759) *
              C152207 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C152280 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152287 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152542 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C152280 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152542) *
               C152287 +
           (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
             (C76304 + C76305 + C76306) * C152170) *
                C152542 -
            ((C78278 + C78279 + C78280) * C152170 +
             (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
                C152326) *
               C3759) *
              C3415 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152542) *
               C152280 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152542 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152287 +
           (((C78280 + C78279 + C78278) * C76068 +
             (C2063 * C152622 + C8572 * C152602 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C76067) *
                 C152170) *
                C152326 -
            ((C76310 + C76311 + C76312) * C152170 +
             (C76306 + C76305 + C76304) * C76068) *
                C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152634 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152630 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152618 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C152239 * C152593) *
              C3415 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152630 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152634 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152618 +
           ((C77987 + C77986 + C77985) * C76068 +
            (C1847 * C152622 + C7816 * C152602 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C76067) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C3275 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152284) *
              C152633 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152284 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C3275) *
              C152626 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C3275 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152284) *
              C152611 +
          (((C76739 + C76738 + C76737) * C76068 +
            (C443 * C152622 + C444 * C152602 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C76067) *
                C152170) *
               C152239 * C152284 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152628 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152615 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
              C8069 * C152602 + C8073 * C76067) *
                 C76068 +
             (C76534 + C76535 + C76536) * C152170) *
                C152586) *
               C3275 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152615 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152628 -
            ((C79323 + C79324 + C79325) * C152170 +
             (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
                C152586) *
               C152284) *
              C3415 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152615 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152628 -
            ((C76540 + C76541 + C76542) * C152170 +
             (C76536 + C76535 + C76534) * C76068) *
                C152586) *
               C3275 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152628 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152615 +
            ((C79325 + C79324 + C79323) * C76068 +
             (C2839 * C152622 + C8071 * C152602 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C76067) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152542 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C3275 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152542) *
               C152284) *
              C152198 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152542) *
               C3275 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152542 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152284) *
              C152207 +
          ((((C76076 + C76075 + C76074) * C76068 +
             (C76077 + C76078 + C76079) * C152170) *
                C152542 -
            ((C76934 + C76935 + C76936) * C152170 +
             (C76539 + C76538 + C76537) * C76068) *
                C152326) *
               C3275 +
           (((C77232 + C77231 + C77230) * C76068 +
             (C1222 * C152622 + C2062 * C152602 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C76067) *
                 C152170) *
                C152326 -
            ((C76737 + C76738 + C76739) * C152170 +
             (C76309 + C76308 + C76307) * C76068) *
                C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C3275 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152284) *
              C152633 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152284 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C3275) *
              C152626 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C3275 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152284) *
              C152611 +
          (((C76739 + C76738 + C76737) * C76068 +
            (C443 * C152622 + C444 * C152602 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C76067) *
                C152170) *
               C152239 * C152284 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152634 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152630 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152618 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C152239 * C152593) *
              C3415 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152630 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152634 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152618 +
           ((C77987 + C77986 + C77985) * C76068 +
            (C1847 * C152622 + C7816 * C152602 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C76067) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C4281 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C152280 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C4281) *
               C152287 +
           (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
             (C76304 + C76305 + C76306) * C152170) *
                C4281 -
            ((C78278 + C78279 + C78280) * C152170 +
             (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
                C152326) *
               C3759) *
              C152527 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C4281) *
               C152280 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C4281 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152287 +
           (((C78280 + C78279 + C78278) * C76068 +
             (C2063 * C152622 + C8572 * C152602 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C76067) *
                 C152170) *
                C152326 -
            ((C76310 + C76311 + C76312) * C152170 +
             (C76306 + C76305 + C76304) * C76068) *
                C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152322 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C4953) *
              C152280 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152329 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152322 -
           ((C79323 + C79324 + C79325) * C152170 +
            (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
               C4953) *
              C152287 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152322 -
           ((C78278 + C78279 + C78280) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C152329 +
           ((C8073 * C152622 + C24981 * C152602 + C32604 * C76067) * C76068 +
            (C8072 * C152622 + C24980 * C152602 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C76067) *
                C152170) *
               C4953) *
              C3759) *
         C152193) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C4281 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C152634 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152326 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C4281) *
              C152630 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C4281 -
           ((C78278 + C78279 + C78280) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C152326) *
              C152618 +
          (((C8786 * C152622 + C25683 * C152602 + C33067 * C76067) * C76068 +
            (C8573 * C152622 + C25475 * C152602 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C76067) *
                C152170) *
               C152326 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C4281 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C3275 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C4281) *
               C152284) *
              C152624 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C4281) *
               C3275 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C4281 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152284) *
              C152609 +
          ((((C76076 + C76075 + C76074) * C76068 +
             (C76077 + C76078 + C76079) * C152170) *
                C4281 -
            ((C76934 + C76935 + C76936) * C152170 +
             (C76539 + C76538 + C76537) * C76068) *
                C152326) *
               C3275 +
           (((C77232 + C77231 + C77230) * C76068 +
             (C1222 * C152622 + C2062 * C152602 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C76067) *
                 C152170) *
                C152326 -
            ((C76737 + C76738 + C76739) * C152170 +
             (C76309 + C76308 + C76307) * C76068) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152635 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152621 -
           ((C79520 + C79521 + C79522) * C152170 +
            (C26951 * C76067 + C10069 * C152602 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152622) *
                C76068) *
               C152599) *
              C3275 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152632 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152635 -
           ((C79323 + C79324 + C79325) * C152170 +
            (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
               C152621 +
           ((C10069 * C152622 + C26951 * C152602 + C33908 * C76067) * C76068 +
            (C9856 * C152622 + C26743 * C152602 +
             (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C76067) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152322 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
              C8069 * C152602 + C8073 * C76067) *
                 C76068 +
             (C76534 + C76535 + C76536) * C152170) *
                C4953) *
               C3275 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152329 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152322 -
            ((C79323 + C79324 + C79325) * C152170 +
             (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
                C4953) *
               C152284) *
              C152527 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152329 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152322 -
            ((C76540 + C76541 + C76542) * C152170 +
             (C76536 + C76535 + C76534) * C76068) *
                C4953) *
               C3275 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152322 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152329 +
            ((C79325 + C79324 + C79323) * C76068 +
             (C2839 * C152622 + C8071 * C152602 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C76067) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C4281 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C3275 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C4281) *
               C152284) *
              C152624 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C4281) *
               C3275 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C4281 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152284) *
              C152609 +
          ((((C76076 + C76075 + C76074) * C76068 +
             (C76077 + C76078 + C76079) * C152170) *
                C4281 -
            ((C76934 + C76935 + C76936) * C152170 +
             (C76539 + C76538 + C76537) * C76068) *
                C152326) *
               C3275 +
           (((C77232 + C77231 + C77230) * C76068 +
             (C1222 * C152622 + C2062 * C152602 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C76067) *
                 C152170) *
                C152326 -
            ((C76737 + C76738 + C76739) * C152170 +
             (C76309 + C76308 + C76307) * C76068) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C4281 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C152634 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152326 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C4281) *
              C152630 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C4281 -
           ((C78278 + C78279 + C78280) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C152326) *
              C152618 +
          (((C8786 * C152622 + C25683 * C152602 + C33067 * C76067) * C76068 +
            (C8573 * C152622 + C25475 * C152602 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C76067) *
                C152170) *
               C152326 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C1823 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C1824 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C1825 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C152239 * C152593) *
              C152527 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C1824 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C1823 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C1825 +
           ((C77987 + C77986 + C77985) * C76068 +
            (C1847 * C152622 + C7816 * C152602 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C76067) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152541 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152284) *
              C829 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152284 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152541) *
              C830 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C152541 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152284) *
              C831 +
          (((C76739 + C76738 + C76737) * C76068 +
            (C443 * C152622 + C444 * C152602 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C76067) *
                C152170) *
               C152239 * C152284 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C2359 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
              C8069 * C152602 + C8073 * C76067) *
                 C76068 +
             (C76534 + C76535 + C76536) * C152170) *
                C152586) *
               C152541 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C2360 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C2359 -
            ((C79323 + C79324 + C79325) * C152170 +
             (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
                C152586) *
               C152284) *
              C152527 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C2360 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C2359 -
            ((C76540 + C76541 + C76542) * C152170 +
             (C76536 + C76535 + C76534) * C76068) *
                C152586) *
               C152541 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C2359 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C2360 +
            ((C79325 + C79324 + C79323) * C76068 +
             (C2839 * C152622 + C8071 * C152602 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C76067) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152542 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C1823 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152326 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152542) *
              C1824 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152542 -
           ((C78278 + C78279 + C78280) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C152326) *
              C1825 +
          (((C8786 * C152622 + C25683 * C152602 + C33067 * C76067) * C76068 +
            (C8573 * C152622 + C25475 * C152602 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C76067) *
                C152170) *
               C152326 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152542 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C152541 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152542) *
               C152284) *
              C353 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152542) *
               C152541 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152542 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152284) *
              C354 +
          ((((C76076 + C76075 + C76074) * C76068 +
             (C76077 + C76078 + C76079) * C152170) *
                C152542 -
            ((C76934 + C76935 + C76936) * C152170 +
             (C76539 + C76538 + C76537) * C76068) *
                C152326) *
               C152541 +
           (((C77232 + C77231 + C77230) * C76068 +
             (C1222 * C152622 + C2062 * C152602 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C76067) *
                 C152170) *
                C152326 -
            ((C76737 + C76738 + C76739) * C152170 +
             (C76309 + C76308 + C76307) * C76068) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C2973 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C2975 -
           ((C79520 + C79521 + C79522) * C152170 +
            (C26951 * C76067 + C10069 * C152602 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152622) *
                C76068) *
               C152599) *
              C152541 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C2974 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C2973 -
           ((C79323 + C79324 + C79325) * C152170 +
            (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
               C2975 +
           ((C10069 * C152622 + C26951 * C152602 + C33908 * C76067) * C76068 +
            (C9856 * C152622 + C26743 * C152602 +
             (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C76067) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
                C6517 * C152602 + C6518 * C76067) *
                   C76068 +
               (C76071 + C76072 + C76073) * C152170) *
                  C152239 * C152221 * C129 -
              ((C76074 + C76075 + C76076) * C152170 +
               (C76073 + C76072 + C76071) * C76068) *
                  C152239 * C152221 * C130 +
              ((C76076 + C76075 + C76074) * C76068 +
               (C76077 + C76078 + C76079) * C152170) *
                  C152239 * C152221 * C131 -
              ((C76080 + C76081 + C76082) * C152170 +
               (C76079 + C76078 + C76077) * C76068) *
                  C152239 * C152221 * C132 +
              ((C76082 + C76081 + C76080) * C76068 +
               (C197 * C152622 + C842 * C152602 +
                (C134 * C367 + C420 + C420 + C152449 * C391) * C76067) *
                   C152170) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
                 C6517 * C152602 + C6518 * C76067) *
                    C76068 +
                (C76071 + C76072 + C76073) * C152170) *
                   C152239 * C152627 -
               ((C76301 + C76302 + C76303) * C152170 +
                (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                   C152239 * C152613 +
               ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
                (C76304 + C76305 + C76306) * C152170) *
                   C152239 * C152583) *
                  C353 +
              (((C76303 + C76302 + C76301) * C76068 +
                (C76307 + C76308 + C76309) * C152170) *
                   C152239 * C152613 -
               ((C76074 + C76075 + C76076) * C152170 +
                (C76073 + C76072 + C76071) * C76068) *
                   C152239 * C152627 -
               ((C76310 + C76311 + C76312) * C152170 +
                (C76306 + C76305 + C76304) * C76068) *
                   C152239 * C152583) *
                  C354 +
              (((C76076 + C76075 + C76074) * C76068 +
                (C76077 + C76078 + C76079) * C152170) *
                   C152239 * C152627 -
               ((C1846 * C76067 + C442 * C152602 + C437 * C152622) * C152170 +
                (C76309 + C76308 + C76307) * C76068) *
                   C152239 * C152613 +
               ((C76312 + C76311 + C76310) * C76068 +
                (C442 * C152622 + C1846 * C152602 +
                 (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                    C152170) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152628 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C152221 * C353 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152615 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152628 -
           ((C76540 + C76541 + C76542) * C152170 +
            (C76536 + C76535 + C76534) * C76068) *
               C152586) *
              C152221 * C354 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152628 -
           ((C2062 * C76067 + C1222 * C152602 + C682 * C152622) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C152615 +
           ((C76542 + C76541 + C76540) * C76068 +
            (C687 * C152622 + C2838 * C152602 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C76067) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C1373 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C1374 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C1374 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C1373 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C1373 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C1374 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C152239 * C1461 -
          ((C76301 + C76302 + C76303) * C152170 +
           (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
              C152239 * C1462 +
          ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
           (C76304 + C76305 + C76306) * C152170) *
              C152239 * C1463 -
          ((C24744 * C76067 + C7817 * C152602 + C1848 * C152622) * C152170 +
           (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
              C152239 * C1464 +
          ((C7818 * C152622 + C24745 * C152602 + C32449 * C76067) * C76068 +
           (C7817 * C152622 + C24744 * C152602 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C76067) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152628 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C1373 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152615 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152628 -
           ((C24980 * C76067 + C8072 * C152602 + C2840 * C152622) * C152170 +
            (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
               C152586) *
              C1374 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152628 -
           ((C25475 * C76067 + C8573 * C152602 + C2064 * C152622) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C152615 +
           ((C8073 * C152622 + C24981 * C152602 + C32604 * C76067) * C76068 +
            (C8072 * C152622 + C24980 * C152602 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C76067) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C2359 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C2360 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C2359 -
           ((C76540 + C76541 + C76542) * C152170 +
            (C76536 + C76535 + C76534) * C76068) *
               C152586) *
              C152221 * C152609 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C2359 -
           ((C76934 + C76935 + C76936) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C2360 +
           ((C76542 + C76541 + C76540) * C76068 +
            (C687 * C152622 + C2838 * C152602 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C76067) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C2359 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C152627 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C2360 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C2359 -
           ((C24980 * C76067 + C8072 * C152602 + C2840 * C152622) * C152170 +
            (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
               C152586) *
              C152613 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C2359 -
           ((C78278 + C78279 + C78280) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C2360 +
           ((C8073 * C152622 + C24981 * C152602 + C32604 * C76067) * C76068 +
            (C8072 * C152622 + C24980 * C152602 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C76067) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C2590 -
          ((C76531 + C76532 + C76533) * C152170 +
           (C8070 * C76067 + C7446 * C152602 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
               C76068) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
            C8069 * C152602 + C8073 * C76067) *
               C76068 +
           (C76534 + C76535 + C76536) * C152170) *
              C2592 -
          ((C26743 * C76067 + C9856 * C152602 + C2996 * C152622) * C152170 +
           (C26951 * C76067 + C10069 * C152602 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152622) *
               C76068) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C152622 +
            (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C152602 +
            (C134 * C26241 + C26248 + C26248 + C152449 * C26245) * C76067) *
               C76068 +
           ((C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C152622 +
            (C134 * C9345 + C9355 + C9355 + C152449 * C9351) * C152602 +
            (C134 * C26242 + C26249 + C26249 + C152449 * C26246) * C76067) *
               C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152542 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C1373 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152542) *
               C1374 +
           (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
             (C76304 + C76305 + C76306) * C152170) *
                C152542 -
            ((C78278 + C78279 + C78280) * C152170 +
             (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
                C152326) *
               C152583) *
              C152527 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152542) *
               C1373 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152542 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C1374 +
           (((C78280 + C78279 + C78278) * C76068 +
             (C2063 * C152622 + C8572 * C152602 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C76067) *
                 C152170) *
                C152326 -
            ((C76310 + C76311 + C76312) * C152170 +
             (C76306 + C76305 + C76304) * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152542 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C152221 * C829 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152326 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152542) *
              C152221 * C830 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152542 -
           ((C76934 + C76935 + C76936) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C152326) *
              C152221 * C831 +
          (((C76936 + C76935 + C76934) * C76068 +
            (C688 * C152622 + C1223 * C152602 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C76067) *
                C152170) *
               C152326 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C2973 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C2975 -
           ((C79520 + C79521 + C79522) * C152170 +
            (C26951 * C76067 + C10069 * C152602 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152622) *
                C76068) *
               C152599) *
              C152221 * C152527 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C2974 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C2973 -
           ((C76540 + C76541 + C76542) * C152170 +
            (C76536 + C76535 + C76534) * C76068) *
               C2975 +
           ((C79522 + C79521 + C79520) * C76068 +
            (C2995 * C152622 + C9855 * C152602 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C76067) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152627 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152613 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152613 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152627 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152583) *
              C354 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C152627 -
           ((C1846 * C76067 + C442 * C152602 + C437 * C152622) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152613 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C152239 * C152221 * C129 -
          ((C76074 + C76075 + C76076) * C152170 +
           (C76073 + C76072 + C76071) * C76068) *
              C152239 * C152221 * C130 +
          ((C76076 + C76075 + C76074) * C76068 +
           (C76077 + C76078 + C76079) * C152170) *
              C152239 * C152221 * C131 -
          ((C76080 + C76081 + C76082) * C152170 +
           (C76079 + C76078 + C76077) * C76068) *
              C152239 * C152221 * C132 +
          ((C76082 + C76081 + C76080) * C76068 +
           (C197 * C152622 + C842 * C152602 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C76067) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C1373 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C1374 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C1374 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C1373 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C1373 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C1374 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C152239 * C1461 -
          ((C76301 + C76302 + C76303) * C152170 +
           (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
              C152239 * C1462 +
          ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
           (C76304 + C76305 + C76306) * C152170) *
              C152239 * C1463 -
          ((C24744 * C76067 + C7817 * C152602 + C1848 * C152622) * C152170 +
           (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
              C152239 * C1464 +
          ((C7818 * C152622 + C24745 * C152602 + C32449 * C76067) * C76068 +
           (C7817 * C152622 + C24744 * C152602 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C76067) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C2359 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C2360 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C2359 -
           ((C76540 + C76541 + C76542) * C152170 +
            (C76536 + C76535 + C76534) * C76068) *
               C152586) *
              C152221 * C152609 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C2359 -
           ((C76934 + C76935 + C76936) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C2360 +
           ((C76542 + C76541 + C76540) * C76068 +
            (C687 * C152622 + C2838 * C152602 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C76067) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C2359 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C152627 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C2360 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C2359 -
           ((C24980 * C76067 + C8072 * C152602 + C2840 * C152622) * C152170 +
            (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
               C152586) *
              C152613 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C2359 -
           ((C78278 + C78279 + C78280) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C2360 +
           ((C8073 * C152622 + C24981 * C152602 + C32604 * C76067) * C76068 +
            (C8072 * C152622 + C24980 * C152602 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C76067) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C4281 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C152541 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C4281) *
               C152284) *
              C152198 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C4281) *
               C152541 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C4281 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152284) *
              C152207 +
          ((((C76076 + C76075 + C76074) * C76068 +
             (C76077 + C76078 + C76079) * C152170) *
                C4281 -
            ((C76934 + C76935 + C76936) * C152170 +
             (C76539 + C76538 + C76537) * C76068) *
                C152326) *
               C152541 +
           (((C77232 + C77231 + C77230) * C76068 +
             (C1222 * C152622 + C2062 * C152602 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C76067) *
                 C152170) *
                C152326 -
            ((C76737 + C76738 + C76739) * C152170 +
             (C76309 + C76308 + C76307) * C76068) *
                C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152322 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
              C8069 * C152602 + C8073 * C76067) *
                 C76068 +
             (C76534 + C76535 + C76536) * C152170) *
                C4953) *
               C152541 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152329 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152322 -
            ((C79323 + C79324 + C79325) * C152170 +
             (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
                C4953) *
               C152284) *
              C3415 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152329 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152322 -
            ((C76540 + C76541 + C76542) * C152170 +
             (C76536 + C76535 + C76534) * C76068) *
                C4953) *
               C152541 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152322 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152329 +
            ((C79325 + C79324 + C79323) * C76068 +
             (C2839 * C152622 + C8071 * C152602 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C76067) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C4281 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C152627 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C4281) *
               C152613 +
           (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
             (C76304 + C76305 + C76306) * C152170) *
                C4281 -
            ((C78278 + C78279 + C78280) * C152170 +
             (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
                C152326) *
               C152583) *
              C3415 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C4281) *
               C152627 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C4281 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152613 +
           (((C78280 + C78279 + C78278) * C76068 +
             (C2063 * C152622 + C8572 * C152602 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C76067) *
                 C152170) *
                C152326 -
            ((C76310 + C76311 + C76312) * C152170 +
             (C76306 + C76305 + C76304) * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C4281 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C152221 * C152633 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152326 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C4281 -
           ((C76934 + C76935 + C76936) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C76936 + C76935 + C76934) * C76068 +
            (C688 * C152622 + C1223 * C152602 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C76067) *
                C152170) *
               C152326 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152635 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152621 -
           ((C79520 + C79521 + C79522) * C152170 +
            (C26951 * C76067 + C10069 * C152602 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152622) *
                C76068) *
               C152599) *
              C152221 * C3415 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152632 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152635 -
           ((C76540 + C76541 + C76542) * C152170 +
            (C76536 + C76535 + C76534) * C76068) *
               C152621 +
           ((C79522 + C79521 + C79520) * C76068 +
            (C2995 * C152622 + C9855 * C152602 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C76067) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152322 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C4953) *
              C152221 * C152198 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152329 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152322 -
           ((C76540 + C76541 + C76542) * C152170 +
            (C76536 + C76535 + C76534) * C76068) *
               C4953) *
              C152221 * C152207 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152322 -
           ((C76934 + C76935 + C76936) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C152329 +
           ((C76542 + C76541 + C76540) * C76068 +
            (C687 * C152622 + C2838 * C152602 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C76067) *
                C152170) *
               C4953) *
              C152221 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C4281 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C152221 * C152633 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152326 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C4281 -
           ((C76934 + C76935 + C76936) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C76936 + C76935 + C76934) * C76068 +
            (C688 * C152622 + C1223 * C152602 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C76067) *
                C152170) *
               C152326 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C4281 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C152627 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C4281) *
               C152613 +
           (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
             (C76304 + C76305 + C76306) * C152170) *
                C4281 -
            ((C78278 + C78279 + C78280) * C152170 +
             (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
                C152326) *
               C152583) *
              C3415 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C4281) *
               C152627 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C4281 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152613 +
           (((C78280 + C78279 + C78278) * C76068 +
             (C2063 * C152622 + C8572 * C152602 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C76067) *
                 C152170) *
                C152326 -
            ((C76310 + C76311 + C76312) * C152170 +
             (C76306 + C76305 + C76304) * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152541 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152284) *
              C829 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152284 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152541) *
              C830 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C152541 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152284) *
              C831 +
          (((C76739 + C76738 + C76737) * C76068 +
            (C443 * C152622 + C444 * C152602 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C76067) *
                C152170) *
               C152239 * C152284 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C1823 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C1824 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C1825 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C152239 * C152593) *
              C152527 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C1824 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C1823 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C1825 +
           ((C77987 + C77986 + C77985) * C76068 +
            (C1847 * C152622 + C7816 * C152602 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C76067) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152542 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C152541 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152542) *
               C152284) *
              C353 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152542) *
               C152541 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152542 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C152284) *
              C354 +
          ((((C76076 + C76075 + C76074) * C76068 +
             (C76077 + C76078 + C76079) * C152170) *
                C152542 -
            ((C76934 + C76935 + C76936) * C152170 +
             (C76539 + C76538 + C76537) * C76068) *
                C152326) *
               C152541 +
           (((C77232 + C77231 + C77230) * C76068 +
             (C1222 * C152622 + C2062 * C152602 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C76067) *
                 C152170) *
                C152326 -
            ((C76737 + C76738 + C76739) * C152170 +
             (C76309 + C76308 + C76307) * C76068) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152542 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C1823 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152326 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152542) *
              C1824 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152542 -
           ((C78278 + C78279 + C78280) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C152326) *
              C1825 +
          (((C8786 * C152622 + C25683 * C152602 + C33067 * C76067) * C76068 +
            (C8573 * C152622 + C25475 * C152602 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C76067) *
                C152170) *
               C152326 -
           ((C77985 + C77986 + C77987) * C152170 +
            (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152627 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152613 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152613 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152627 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152583) *
              C354 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C152627 -
           ((C1846 * C76067 + C442 * C152602 + C437 * C152622) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152613 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C152239 * C152221 * C129 -
          ((C76074 + C76075 + C76076) * C152170 +
           (C76073 + C76072 + C76071) * C76068) *
              C152239 * C152221 * C130 +
          ((C76076 + C76075 + C76074) * C76068 +
           (C76077 + C76078 + C76079) * C152170) *
              C152239 * C152221 * C131 -
          ((C76080 + C76081 + C76082) * C152170 +
           (C76079 + C76078 + C76077) * C76068) *
              C152239 * C152221 * C132 +
          ((C76082 + C76081 + C76080) * C76068 +
           (C197 * C152622 + C842 * C152602 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C76067) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152628 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C152221 * C353 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152615 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152628 -
           ((C76540 + C76541 + C76542) * C152170 +
            (C76536 + C76535 + C76534) * C76068) *
               C152586) *
              C152221 * C354 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152628 -
           ((C2062 * C76067 + C1222 * C152602 + C682 * C152622) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C152615 +
           ((C76542 + C76541 + C76540) * C76068 +
            (C687 * C152622 + C2838 * C152602 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C76067) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C1373 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C1374 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C1374 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C1373 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C1373 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C1374 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C152239 * C1461 -
          ((C76301 + C76302 + C76303) * C152170 +
           (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
              C152239 * C1462 +
          ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
           (C76304 + C76305 + C76306) * C152170) *
              C152239 * C1463 -
          ((C24744 * C76067 + C7817 * C152602 + C1848 * C152622) * C152170 +
           (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
              C152239 * C1464 +
          ((C7818 * C152622 + C24745 * C152602 + C32449 * C76067) * C76068 +
           (C7817 * C152622 + C24744 * C152602 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C76067) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152628 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152622 +
             C8069 * C152602 + C8073 * C76067) *
                C76068 +
            (C76534 + C76535 + C76536) * C152170) *
               C152586) *
              C1373 +
          (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
            (C77227 + C77228 + C77229) * C152170) *
               C152615 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152628 -
           ((C24980 * C76067 + C8072 * C152602 + C2840 * C152622) * C152170 +
            (C24981 * C76067 + C8073 * C152602 + C8069 * C152622) * C76068) *
               C152586) *
              C1374 +
          (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152628 -
           ((C25475 * C76067 + C8573 * C152602 + C2064 * C152622) * C152170 +
            (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
               C152615 +
           ((C8073 * C152622 + C24981 * C152602 + C32604 * C76067) * C76068 +
            (C8072 * C152622 + C24980 * C152602 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C76067) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152542 -
           ((C76531 + C76532 + C76533) * C152170 +
            (C8070 * C76067 + C7446 * C152602 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                C76068) *
               C152326) *
              C152221 * C829 +
          (((C76533 + C76532 + C76531) * C76068 +
            (C76537 + C76538 + C76539) * C152170) *
               C152326 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152542) *
              C152221 * C830 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152542 -
           ((C76934 + C76935 + C76936) * C152170 +
            (C76539 + C76538 + C76537) * C76068) *
               C152326) *
              C152221 * C831 +
          (((C76936 + C76935 + C76934) * C76068 +
            (C688 * C152622 + C1223 * C152602 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C76067) *
                C152170) *
               C152326 -
           ((C76080 + C76081 + C76082) * C152170 +
            (C76079 + C76078 + C76077) * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
              C6517 * C152602 + C6518 * C76067) *
                 C76068 +
             (C76071 + C76072 + C76073) * C152170) *
                C152542 -
            ((C76531 + C76532 + C76533) * C152170 +
             (C8070 * C76067 + C7446 * C152602 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152622) *
                 C76068) *
                C152326) *
               C1373 +
           (((C7446 * C152622 + C8070 * C152602 + C8786 * C76067) * C76068 +
             (C77227 + C77228 + C77229) * C152170) *
                C152326 -
            ((C76301 + C76302 + C76303) * C152170 +
             (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
                C152542) *
               C1374 +
           (((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
             (C76304 + C76305 + C76306) * C152170) *
                C152542 -
            ((C78278 + C78279 + C78280) * C152170 +
             (C25683 * C76067 + C8786 * C152602 + C8070 * C152622) * C76068) *
                C152326) *
               C152583) *
              C152527 +
          ((((C76533 + C76532 + C76531) * C76068 +
             (C76537 + C76538 + C76539) * C152170) *
                C152326 -
            ((C76074 + C76075 + C76076) * C152170 +
             (C76073 + C76072 + C76071) * C76068) *
                C152542) *
               C1373 +
           (((C76303 + C76302 + C76301) * C76068 +
             (C76307 + C76308 + C76309) * C152170) *
                C152542 -
            ((C77230 + C77231 + C77232) * C152170 +
             (C77229 + C77228 + C77227) * C76068) *
                C152326) *
               C1374 +
           (((C78280 + C78279 + C78278) * C76068 +
             (C2063 * C152622 + C8572 * C152602 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C76067) *
                 C152170) *
                C152326 -
            ((C76310 + C76311 + C76312) * C152170 +
             (C76306 + C76305 + C76304) * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C152239 * C152221 * C129 -
          ((C76074 + C76075 + C76076) * C152170 +
           (C76073 + C76072 + C76071) * C76068) *
              C152239 * C152221 * C130 +
          ((C76076 + C76075 + C76074) * C76068 +
           (C76077 + C76078 + C76079) * C152170) *
              C152239 * C152221 * C131 -
          ((C76080 + C76081 + C76082) * C152170 +
           (C76079 + C76078 + C76077) * C76068) *
              C152239 * C152221 * C132 +
          ((C76082 + C76081 + C76080) * C76068 +
           (C197 * C152622 + C842 * C152602 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C76067) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C152627 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C152613 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C152613 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C152627 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152583) *
              C354 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C152627 -
           ((C1846 * C76067 + C442 * C152602 + C437 * C152622) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C152613 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
             C6517 * C152602 + C6518 * C76067) *
                C76068 +
            (C76071 + C76072 + C76073) * C152170) *
               C152239 * C1373 -
           ((C76301 + C76302 + C76303) * C152170 +
            (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
               C152239 * C1374 +
           ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
            (C76304 + C76305 + C76306) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C76303 + C76302 + C76301) * C76068 +
            (C76307 + C76308 + C76309) * C152170) *
               C152239 * C1374 -
           ((C76074 + C76075 + C76076) * C152170 +
            (C76073 + C76072 + C76071) * C76068) *
               C152239 * C1373 -
           ((C76310 + C76311 + C76312) * C152170 +
            (C76306 + C76305 + C76304) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C76076 + C76075 + C76074) * C76068 +
            (C76077 + C76078 + C76079) * C152170) *
               C152239 * C1373 -
           ((C76737 + C76738 + C76739) * C152170 +
            (C76309 + C76308 + C76307) * C76068) *
               C152239 * C1374 +
           ((C76312 + C76311 + C76310) * C76068 +
            (C442 * C152622 + C1846 * C152602 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C76067) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152622 +
            C6517 * C152602 + C6518 * C76067) *
               C76068 +
           (C76071 + C76072 + C76073) * C152170) *
              C152239 * C1461 -
          ((C76301 + C76302 + C76303) * C152170 +
           (C7815 * C76067 + C6518 * C152602 + C6517 * C152622) * C76068) *
              C152239 * C1462 +
          ((C6518 * C152622 + C7815 * C152602 + C7818 * C76067) * C76068 +
           (C76304 + C76305 + C76306) * C152170) *
              C152239 * C1463 -
          ((C24744 * C76067 + C7817 * C152602 + C1848 * C152622) * C152170 +
           (C24745 * C76067 + C7818 * C152602 + C7815 * C152622) * C76068) *
              C152239 * C1464 +
          ((C7818 * C152622 + C24745 * C152602 + C32449 * C76067) * C76068 +
           (C7817 * C152622 + C24744 * C152602 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C76067) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[50] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C152280 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C152287 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C3759) *
                      C152198 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C152287 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C152280 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    (C86798 * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C3759) *
                      C152207 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C152280 -
                   (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C152287 +
                   ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                    ((C14993 + C14992) * C67854 +
                     (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                      C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                         C152435) *
                        C152170) *
                       C152239 * C3759) *
                      C3762)) /
                (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152542 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C152280 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152542) *
               C152287 +
           (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
             (C84599 * C67854 + C38987 * C152435) * C152170) *
                C152542 -
            (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
             ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                C152326) *
               C3759) *
              C3415 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152542) *
               C152280 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152542 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152287 +
           (((C39290 * C67854 + (C39302 + C39301) * C152435) * C76068 +
             ((C17161 + C17160) * C67854 +
              (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
               C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
             (C86798 * C152435 + C37225 * C67854) * C76068) *
                C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152239 * C152634 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152239 * C152630 +
           ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C152239 * C152618 -
           (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
            ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
               C152239 * C152593) *
              C3415 +
          (((C84597 * C67854 + C84599 * C152435) * C76068 +
            (C84600 * C67854 + C14995 * C152435) * C152170) *
               C152239 * C152630 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152239 * C152634 -
           (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
            (C86798 * C152435 + C37225 * C67854) * C76068) *
               C152239 * C152618 +
           ((C38987 * C67854 + (C38999 + C38998) * C152435) * C76068 +
            ((C16849 + C16848) * C67854 +
             (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
              C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152239 * C3275 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152239 * C152284) *
              C152633 +
          (((C84597 * C67854 + C84599 * C152435) * C76068 +
            (C84600 * C67854 + C14995 * C152435) * C152170) *
               C152239 * C152284 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152239 * C3275) *
              C152626 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C152239 * C3275 -
           (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
            (C84601 * C152435 + C14994 * C67854) * C76068) *
               C152239 * C152284) *
              C152611 +
          (((C15494 * C67854 + (C14993 + C14992) * C152435) * C76068 +
            ((C15507 + C15506) * C67854 +
             (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
              C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                C152170 +
            (C85150 * C152435 + C14691 * C67854) * C76068) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152628 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152615 +
            (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
               C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                  C67854 +
              (C38784 + C38785) * C152435) *
                 C76068 +
             ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
                C152586) *
               C3275 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152615 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152628 -
            (((C40380 + C40381) * C152435 + C88575 * C67854) * C152170 +
             ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                 C76068) *
                C152586) *
               C152284) *
              C3415 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152615 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152628 -
            (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                 C152170 +
             (C88575 * C152435 + (C15289 + C15288) * C67854) * C76068) *
                C152586) *
               C3275 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152628 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152615 +
            ((C88574 * C67854 + (C40381 + C40380) * C152435) * C76068 +
             ((C18252 + C18251) * C67854 +
              (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
               C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152542 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C3275 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152542) *
               C152284) *
              C152198 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152542) *
               C3275 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152542 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152284) *
              C152207 +
          ((((C14690 * C67854 + C84600 * C152435) * C76068 +
             ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                C152542 -
            (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                 C152170 +
             (C85797 * C152435 + C15296 * C67854) * C76068) *
                C152326) *
               C3275 +
           (((C16046 * C67854 + (C17161 + C17160) * C152435) * C76068 +
             ((C16045 + C16044) * C67854 +
              (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
               C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
             (C84601 * C152435 + C14994 * C67854) * C76068) *
                C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C3275 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C152284) *
                      C152633 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C152284 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C3275) *
                      C152626 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C3275 -
                   (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C152284) *
                      C152611 +
                  (((C15494 * C67854 + (C14993 + C14992) * C152435) * C76068 +
                    ((C15507 + C15506) * C67854 +
                     (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
                      C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                         C152435) *
                        C152170) *
                       C152239 * C152284 -
                   (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                        C152170 +
                    (C85150 * C152435 + C14691 * C67854) * C76068) *
                       C152239 * C3275) *
                      C152587)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C152634 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C152630 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C152618 -
                   (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
                    ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
                       C152239 * C152593) *
                      C3415 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C152630 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C152634 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    (C86798 * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C152618 +
                   ((C38987 * C67854 + (C38999 + C38998) * C152435) * C76068 +
                    ((C16849 + C16848) * C67854 +
                     (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
                      C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                         C152435) *
                        C152170) *
                       C152239 * C152593) *
                      C152204)) /
                    (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C4281 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C152280 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C4281) *
               C152287 +
           (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
             (C84599 * C67854 + C38987 * C152435) * C152170) *
                C4281 -
            (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
             ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                C152326) *
               C3759) *
              C152527 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C4281) *
               C152280 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C4281 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152287 +
           (((C39290 * C67854 + (C39302 + C39301) * C152435) * C76068 +
             ((C17161 + C17160) * C67854 +
              (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
               C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
             (C86798 * C152435 + C37225 * C67854) * C76068) *
                C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152322 -
                   ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
                    ((C38159 + C38160) * C152435 +
                     (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                      C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                         C67854) *
                        C76068) *
                       C152329 +
                   (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                      C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                         C67854 +
                     (C38784 + C38785) * C152435) *
                        C76068 +
                    ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
                       C4953) *
                      C152280 +
                  ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                        C76068 +
                    (C85796 * C67854 + C39290 * C152435) * C152170) *
                       C152329 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152322 -
                   (((C40380 + C40381) * C152435 + C88575 * C67854) * C152170 +
                    ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                        C76068) *
                       C4953) *
                      C152287 +
                  (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152322 -
                   (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
                    ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                       C152329 +
                   ((C38792 * C67854 + (C38791 + C38790) * C152435) * C76068 +
                    ((C40381 + C40380) * C67854 +
                     (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
                      C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                         C152435) *
                        C152170) *
                       C4953) *
                      C3759) *
                 C152193) /
                (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C4281 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C152634 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C152326 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C4281) *
              C152630 +
          (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C4281 -
           (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
            ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
               C152326) *
              C152618 +
          (((C39497 * C67854 + (C39509 + C39508) * C152435) * C76068 +
            ((C39302 + C39301) * C67854 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
            ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C4281 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C3275 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C4281) *
               C152284) *
              C152624 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C4281) *
               C3275 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C4281 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152284) *
              C152609 +
          ((((C14690 * C67854 + C84600 * C152435) * C76068 +
             ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                C4281 -
            (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                 C152170 +
             (C85797 * C152435 + C15296 * C67854) * C76068) *
                C152326) *
               C3275 +
           (((C16046 * C67854 + (C17161 + C17160) * C152435) * C76068 +
             ((C16045 + C16044) * C67854 +
              (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
               C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
             (C84601 * C152435 + C14994 * C67854) * C76068) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152635 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152632 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
               C152621 -
           (((C88842 + C88843) * C152435 + (C18469 + C18470) * C67854) *
                C152170 +
            ((C40792 + C40793) * C152435 +
             (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
              C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                 C67854) *
                C76068) *
               C152599) *
              C3275 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C152632 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152635 -
           (((C40380 + C40381) * C152435 + C88575 * C67854) * C152170 +
            ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                C76068) *
               C152621 +
           (((C40793 + C40792) * C67854 + (C40791 + C40790) * C152435) *
                C76068 +
            ((C88843 + C88842) * C67854 +
             (C14621 * C10053 + C40576 + C40576 + C152557 * C10059 +
              C14623 * C26242 + C40577 + C40577 + C152461 * C26246) *
                 C152435) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152322 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152329 +
            (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
               C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                  C67854 +
              (C38784 + C38785) * C152435) *
                 C76068 +
             ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
                C4953) *
               C3275 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152329 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152322 -
            (((C40380 + C40381) * C152435 + C88575 * C67854) * C152170 +
             ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                 C76068) *
                C4953) *
               C152284) *
              C152527 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152329 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152322 -
            (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                 C152170 +
             (C88575 * C152435 + (C15289 + C15288) * C67854) * C76068) *
                C4953) *
               C3275 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152322 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152329 +
            ((C88574 * C67854 + (C40381 + C40380) * C152435) * C76068 +
             ((C18252 + C18251) * C67854 +
              (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
               C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C4281 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C3275 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C4281) *
               C152284) *
              C152624 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C4281) *
               C3275 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C4281 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152284) *
              C152609 +
          ((((C14690 * C67854 + C84600 * C152435) * C76068 +
             ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                C4281 -
            (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                 C152170 +
             (C85797 * C152435 + C15296 * C67854) * C76068) *
                C152326) *
               C3275 +
           (((C16046 * C67854 + (C17161 + C17160) * C152435) * C76068 +
             ((C16045 + C16044) * C67854 +
              (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
               C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
             (C84601 * C152435 + C14994 * C67854) * C76068) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C4281 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C152634 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C152326 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C4281) *
              C152630 +
          (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C4281 -
           (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
            ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
               C152326) *
              C152618 +
          (((C39497 * C67854 + (C39509 + C39508) * C152435) * C76068 +
            ((C39302 + C39301) * C67854 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
            ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152239 * C1823 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152239 * C1824 +
           ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C152239 * C1825 -
           (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
            ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
               C152239 * C152593) *
              C152527 +
          (((C84597 * C67854 + C84599 * C152435) * C76068 +
            (C84600 * C67854 + C14995 * C152435) * C152170) *
               C152239 * C1824 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152239 * C1823 -
           (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
            (C86798 * C152435 + C37225 * C67854) * C76068) *
               C152239 * C1825 +
           ((C38987 * C67854 + (C38999 + C38998) * C152435) * C76068 +
            ((C16849 + C16848) * C67854 +
             (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
              C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152239 * C152541 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152239 * C152284) *
              C829 +
          (((C84597 * C67854 + C84599 * C152435) * C76068 +
            (C84600 * C67854 + C14995 * C152435) * C152170) *
               C152239 * C152284 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152239 * C152541) *
              C830 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C152239 * C152541 -
           (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
            (C84601 * C152435 + C14994 * C67854) * C76068) *
               C152239 * C152284) *
              C831 +
          (((C15494 * C67854 + (C14993 + C14992) * C152435) * C76068 +
            ((C15507 + C15506) * C67854 +
             (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
              C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                C152170 +
            (C85150 * C152435 + C14691 * C67854) * C76068) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C2359 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C2360 +
            (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
               C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                  C67854 +
              (C38784 + C38785) * C152435) *
                 C76068 +
             ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
                C152586) *
               C152541 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C2360 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C2359 -
            (((C40380 + C40381) * C152435 + C88575 * C67854) * C152170 +
             ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                 C76068) *
                C152586) *
               C152284) *
              C152527 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C2360 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C2359 -
            (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                 C152170 +
             (C88575 * C152435 + (C15289 + C15288) * C67854) * C76068) *
                C152586) *
               C152541 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C2359 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C2360 +
            ((C88574 * C67854 + (C40381 + C40380) * C152435) * C76068 +
             ((C18252 + C18251) * C67854 +
              (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
               C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152542 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C1823 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C152326 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152542) *
              C1824 +
          (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C152542 -
           (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
            ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
               C152326) *
              C1825 +
          (((C39497 * C67854 + (C39509 + C39508) * C152435) * C76068 +
            ((C39302 + C39301) * C67854 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
            ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152542 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C152541 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152542) *
               C152284) *
              C353 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152542) *
               C152541 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152542 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             ((C17162 + C17163) * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152284) *
              C354 +
          ((((C14690 * C67854 + C84600 * C152435) * C76068 +
             ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                C152542 -
            (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                 C152170 +
             (C85797 * C152435 + C15296 * C67854) * C76068) *
                C152326) *
               C152541 +
           (((C16046 * C67854 + (C17161 + C17160) * C152435) * C76068 +
             ((C16045 + C16044) * C67854 +
              (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
               C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
             (C84601 * C152435 + C14994 * C67854) * C76068) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C2973 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C2974 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
               C2975 -
           (((C88842 + C88843) * C152435 + (C18469 + C18470) * C67854) *
                C152170 +
            ((C40792 + C40793) * C152435 +
             (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
              C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                 C67854) *
                C76068) *
               C152599) *
              C152541 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C2974 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C2973 -
           (((C40380 + C40381) * C152435 + C88575 * C67854) * C152170 +
            ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                C76068) *
               C2975 +
           (((C40793 + C40792) * C67854 + (C40791 + C40790) * C152435) *
                C76068 +
            ((C88843 + C88842) * C67854 +
             (C14621 * C10053 + C40576 + C40576 + C152557 * C10059 +
              C14623 * C26242 + C40577 + C40577 + C152461 * C26246) *
                 C152435) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C67854 +
                (C37238 + C37239) * C152435) *
                   C76068 +
               ((C14680 + C14681) * C67854 + (C14985 + C14984) * C152435) *
                   C152170) *
                  C152239 * C152221 * C129 -
              ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
               ((C14984 + C14985) * C152435 + (C14681 + C14680) * C67854) *
                   C76068) *
                  C152239 * C152221 * C130 +
              ((C14690 * C67854 + (C14983 + C14982) * C152435) * C76068 +
               ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                  C152239 * C152221 * C131 -
              (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                   C152170 +
               ((C14991 + C14990) * C152435 + C14691 * C67854) * C76068) *
                  C152239 * C152221 * C132 +
              ((C14692 * C67854 + (C15507 + C15506) * C152435) * C76068 +
               ((C14689 + C14688) * C67854 +
                (C14621 * C366 + C15499 + C15499 + C152557 * C390 +
                 C14623 * C1184 + C15500 + C15500 + C152461 * C1196) *
                    C152435) *
                   C152170) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                  C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                     C67854 +
                 (C37238 + C37239) * C152435) *
                    C76068 +
                ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                   C152239 * C152627 -
               ((C37225 * C152435 + C84598 * C67854) * C152170 +
                ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                    C76068) *
                   C152239 * C152613 +
               ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                (C84599 * C67854 + C38987 * C152435) * C152170) *
                   C152239 * C152583) *
                  C353 +
              (((C84597 * C67854 + C84599 * C152435) * C76068 +
                (C84600 * C67854 + C14995 * C152435) * C152170) *
                   C152239 * C152613 -
               ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                   C152239 * C152627 -
               (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
                   C152239 * C152583) *
                  C354 +
              (((C14690 * C67854 + C84600 * C152435) * C76068 +
                ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                   C152239 * C152627 -
               (((C14992 + C14993) * C152435 + (C14991 + C14990) * C67854) *
                    C152170 +
                (C84601 * C152435 + C14994 * C67854) * C76068) *
                   C152239 * C152613 +
               ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                ((C14993 + C14992) * C67854 +
                 (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                  C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                     C152435) *
                    C152170) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152628 -
           (((C16041 + C16040) * C152435 + (C15286 + C15287) * C67854) *
                C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152615 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                C152170) *
               C152586) *
              C152221 * C353 +
          ((((C15287 + C15286) * C67854 + (C16040 + C16041) * C152435) *
                C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C152615 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152628 -
           (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                C152170 +
            ((C18253 + C18254) * C152435 + (C15289 + C15288) * C67854) *
                C76068) *
               C152586) *
              C152221 * C354 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C152628 -
           (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                C152170 +
            ((C16043 + C16042) * C152435 + C15296 * C67854) * C76068) *
               C152615 +
           ((C15297 * C67854 + (C18252 + C18251) * C152435) * C76068 +
            ((C15295 + C15294) * C67854 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152239 * C1373 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152239 * C1374 +
           ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C84597 * C67854 + C84599 * C152435) * C76068 +
            (C84600 * C67854 + C14995 * C152435) * C152170) *
               C152239 * C1374 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152239 * C1373 -
           (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
            ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C152239 * C1373 -
           (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
            (C84601 * C152435 + C14994 * C67854) * C76068) *
               C152239 * C1374 +
           ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
            ((C14993 + C14992) * C67854 +
             (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
              C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C67854 +
            (C37238 + C37239) * C152435) *
               C76068 +
           ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
              C152239 * C1461 -
          ((C37225 * C152435 + C84598 * C67854) * C152170 +
           ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
               C76068) *
              C152239 * C1462 +
          ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
           (C84599 * C67854 + C38987 * C152435) * C152170) *
              C152239 * C1463 -
          (((C38998 + C38999) * C152435 + (C16850 + C16851) * C67854) *
               C152170 +
           ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
              C152239 * C1464 +
          ((C38526 * C67854 + (C38525 + C38524) * C152435) * C76068 +
           ((C38999 + C38998) * C67854 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152628 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152615 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                C152170) *
               C152586) *
              C1373 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C152615 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152628 -
           (((C40380 + C40381) * C152435 + (C18253 + C18254) * C67854) *
                C152170 +
            ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                C76068) *
               C152586) *
              C1374 +
          (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C152628 -
           (((C39301 + C39302) * C152435 + (C17162 + C17163) * C67854) *
                C152170 +
            ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
               C152615 +
           ((C38792 * C67854 + (C38791 + C38790) * C152435) * C76068 +
            ((C40381 + C40380) * C67854 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C2359 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C2360 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                C152170) *
               C152586) *
              C152221 * C152624 +
          ((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C2360 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C2359 -
           (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                C152170 +
            ((C18253 + C18254) * C152435 + (C15289 + C15288) * C67854) *
                C76068) *
               C152586) *
              C152221 * C152609 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C2359 -
           (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                C152170 +
            (C85797 * C152435 + C15296 * C67854) * C76068) *
               C2360 +
           ((C15297 * C67854 + (C18252 + C18251) * C152435) * C76068 +
            ((C15295 + C15294) * C67854 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C2359 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C2360 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                C152170) *
               C152586) *
              C152627 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C2360 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C2359 -
           (((C40380 + C40381) * C152435 + (C18253 + C18254) * C67854) *
                C152170 +
            ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                C76068) *
               C152586) *
              C152613 +
          (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C2359 -
           (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
            ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
               C2360 +
           ((C38792 * C67854 + (C38791 + C38790) * C152435) * C76068 +
            ((C40381 + C40380) * C67854 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C67854 +
            (C37238 + C37239) * C152435) *
               C76068 +
           ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
              C2590 -
          ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
           ((C38159 + C38160) * C152435 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C67854) *
               C76068) *
              C2591 +
          (((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C67854 +
            (C38784 + C38785) * C152435) *
               C76068 +
           ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
               C152170) *
              C2592 -
          (((C14623 * C9345 + C18668 + C18668 + C152461 * C9351 +
             C14621 * C3130 + C18667 + C18667 + C152557 * C3138) *
                C152435 +
            (C18469 + C18470) * C67854) *
               C152170 +
           ((C40792 + C40793) * C152435 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C67854) *
               C76068) *
              C2593 +
          (((C14621 * C2599 + C17937 + C17937 + C152557 * C2615 +
             C14623 * C17921 + C17938 + C17938 + C152461 * C17927) *
                C67854 +
            (C14621 * C9344 + C40076 + C40076 + C152557 * C9350 +
             C14623 * C40067 + C40077 + C40077 + C152461 * C40071) *
                C152435) *
               C76068 +
           ((C14621 * C2600 + C17939 + C17939 + C152557 * C2616 +
             C14623 * C17922 + C17940 + C17940 + C152461 * C17928) *
                C67854 +
            (C14621 * C9345 + C88186 + C88186 + C152557 * C9351 +
             C14623 * C49388 + C88187 + C88187 + C152461 * C49390) *
                C152435) *
               C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152542 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C1373 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152542) *
               C1374 +
           (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
             (C84599 * C67854 + C38987 * C152435) * C152170) *
                C152542 -
            (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
             ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                C152326) *
               C152583) *
              C152527 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152542) *
               C1373 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152542 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C1374 +
           (((C39290 * C67854 + (C39302 + C39301) * C152435) * C76068 +
             ((C17161 + C17160) * C67854 +
              (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
               C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
             (C86798 * C152435 + C37225 * C67854) * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152542 -
           (((C16041 + C16040) * C152435 + (C15286 + C15287) * C67854) *
                C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C152221 * C829 +
          ((((C15287 + C15286) * C67854 + (C16040 + C16041) * C152435) *
                C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C152326 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152542) *
              C152221 * C830 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C152542 -
           (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                C152170 +
            ((C16043 + C16042) * C152435 + C15296 * C67854) * C76068) *
               C152326) *
              C152221 * C831 +
          (((C15702 * C67854 + (C16045 + C16044) * C152435) * C76068 +
            ((C15715 + C15714) * C67854 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                C152170 +
            (C85150 * C152435 + C14691 * C67854) * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C2973 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C2974 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
               C2975 -
           (((C88842 + C88843) * C152435 + (C18469 + C18470) * C67854) *
                C152170 +
            ((C40792 + C40793) * C152435 +
             (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
              C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                 C67854) *
                C76068) *
               C152599) *
              C152221 * C152527 +
          ((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C2974 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C2973 -
           (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                C152170 +
            (C88575 * C152435 + (C15289 + C15288) * C67854) * C76068) *
               C2975 +
           (((C18470 + C18469) * C67854 + (C88843 + C88842) * C152435) *
                C76068 +
            ((C18468 + C18467) * C67854 +
             (C14621 * C3131 + C18669 + C18669 + C152557 * C3139 +
              C14623 * C9346 + C18670 + C18670 + C152461 * C9352) *
                 C152435) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C152627 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C152613 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C152583) *
                      C353 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C152613 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C152627 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C152583) *
                      C354 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C152627 -
                   (((C14992 + C14993) * C152435 + (C14991 + C14990) * C67854) *
                        C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C152613 +
                   ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                    ((C14993 + C14992) * C67854 +
                     (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                      C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                         C152435) *
                        C152170) *
                       C152239 * C152583) *
                      C152577)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                     C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                        C67854 +
                    (C37238 + C37239) * C152435) *
                       C76068 +
                   ((C14680 + C14681) * C67854 + (C14985 + C14984) * C152435) *
                       C152170) *
                      C152239 * C152221 * C129 -
                  ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                   ((C14984 + C14985) * C152435 + (C14681 + C14680) * C67854) *
                       C76068) *
                      C152239 * C152221 * C130 +
                  ((C14690 * C67854 + (C14983 + C14982) * C152435) * C76068 +
                   ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                      C152239 * C152221 * C131 -
                  (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                       C152170 +
                   ((C14991 + C14990) * C152435 + C14691 * C67854) * C76068) *
                      C152239 * C152221 * C132 +
                  ((C14692 * C67854 + (C15507 + C15506) * C152435) * C76068 +
                   ((C14689 + C14688) * C67854 +
                    (C14621 * C366 + C15499 + C15499 + C152557 * C390 +
                     C14623 * C1184 + C15500 + C15500 + C152461 * C1196) *
                        C152435) *
                       C152170) *
                      C152239 * C152221 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C1373 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C1374 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C152583) *
                      C152624 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C1374 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C1373 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C152583) *
                      C152609 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C1373 -
                   (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C1374 +
                   ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                    ((C14993 + C14992) * C67854 +
                     (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                      C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                         C152435) *
                        C152170) *
                       C152239 * C152583) *
                      C152577)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                     C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                        C67854 +
                    (C37238 + C37239) * C152435) *
                       C76068 +
                   ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                      C152239 * C1461 -
                  ((C37225 * C152435 + C84598 * C67854) * C152170 +
                   ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                       C76068) *
                      C152239 * C1462 +
                  ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                   (C84599 * C67854 + C38987 * C152435) * C152170) *
                      C152239 * C1463 -
                  (((C38998 + C38999) * C152435 + (C16850 + C16851) * C67854) *
                       C152170 +
                   ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
                      C152239 * C1464 +
                  ((C38526 * C67854 + (C38525 + C38524) * C152435) * C76068 +
                   ((C38999 + C38998) * C67854 +
                    (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
                     C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                        C152435) *
                       C152170) *
                      C152239 * C1465) *
                 C152193) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C2359 -
                   ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
                    ((C38159 + C38160) * C152435 +
                     (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                      C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                         C67854) *
                        C76068) *
                       C2360 +
                   (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                      C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                         C67854 +
                     (C38784 + C38785) * C152435) *
                        C76068 +
                    ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                        C152170) *
                       C152586) *
                      C152221 * C152624 +
                  ((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
                    ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                       C2360 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C2359 -
                   (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                        C152170 +
                    ((C18253 + C18254) * C152435 + (C15289 + C15288) * C67854) *
                        C76068) *
                       C152586) *
                      C152221 * C152609 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C2359 -
                   (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                        C152170 +
                    (C85797 * C152435 + C15296 * C67854) * C76068) *
                       C2360 +
                   ((C15297 * C67854 + (C18252 + C18251) * C152435) * C76068 +
                    ((C15295 + C15294) * C67854 +
                     (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
                      C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                         C152435) *
                        C152170) *
                       C152586) *
                      C152221 * C152577)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C2359 -
                   ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
                    ((C38159 + C38160) * C152435 +
                     (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                      C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                         C67854) *
                        C76068) *
                       C2360 +
                   (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                      C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                         C67854 +
                     (C38784 + C38785) * C152435) *
                        C76068 +
                    ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                        C152170) *
                       C152586) *
                      C152627 +
                  ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                        C76068 +
                    (C85796 * C67854 + C39290 * C152435) * C152170) *
                       C2360 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C2359 -
                   (((C40380 + C40381) * C152435 + (C18253 + C18254) * C67854) *
                        C152170 +
                    ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                        C76068) *
                       C152586) *
                      C152613 +
                  (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C2359 -
                   (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
                    ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                       C2360 +
                   ((C38792 * C67854 + (C38791 + C38790) * C152435) * C76068 +
                    ((C40381 + C40380) * C67854 +
                     (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
                      C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                         C152435) *
                        C152170) *
                       C152586) *
                      C152583) *
                 C152193) /
                    (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C4281 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C152541 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C4281) *
               C152284) *
              C152198 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C4281) *
               C152541 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C4281 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152284) *
              C152207 +
          ((((C14690 * C67854 + C84600 * C152435) * C76068 +
             ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                C4281 -
            (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                 C152170 +
             (C85797 * C152435 + C15296 * C67854) * C76068) *
                C152326) *
               C152541 +
           (((C16046 * C67854 + (C17161 + C17160) * C152435) * C76068 +
             ((C16045 + C16044) * C67854 +
              (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
               C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
             (C84601 * C152435 + C14994 * C67854) * C76068) *
                C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152322 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152329 +
            (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
               C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                  C67854 +
              (C38784 + C38785) * C152435) *
                 C76068 +
             ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
                C4953) *
               C152541 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152329 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152322 -
            (((C40380 + C40381) * C152435 + C88575 * C67854) * C152170 +
             ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                 C76068) *
                C4953) *
               C152284) *
              C3415 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152329 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152322 -
            (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                 C152170 +
             (C88575 * C152435 + (C15289 + C15288) * C67854) * C76068) *
                C4953) *
               C152541 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152322 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152329 +
            ((C88574 * C67854 + (C40381 + C40380) * C152435) * C76068 +
             ((C18252 + C18251) * C67854 +
              (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
               C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C4281 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C152627 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C4281) *
               C152613 +
           (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
             (C84599 * C67854 + C38987 * C152435) * C152170) *
                C4281 -
            (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
             ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                C152326) *
               C152583) *
              C3415 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C4281) *
               C152627 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C4281 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152613 +
           (((C39290 * C67854 + (C39302 + C39301) * C152435) * C76068 +
             ((C17161 + C17160) * C67854 +
              (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
               C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
             (C86798 * C152435 + C37225 * C67854) * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C4281 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C152221 * C152633 +
          ((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C152326 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C4281 -
           (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                C152170 +
            (C85797 * C152435 + C15296 * C67854) * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C15702 * C67854 + (C16045 + C16044) * C152435) * C76068 +
            ((C15715 + C15714) * C67854 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                C152170 +
            (C85150 * C152435 + C14691 * C67854) * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152635 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152632 +
           (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C67854 +
             (C38784 + C38785) * C152435) *
                C76068 +
            ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
               C152621 -
           (((C88842 + C88843) * C152435 + (C18469 + C18470) * C67854) *
                C152170 +
            ((C40792 + C40793) * C152435 +
             (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
              C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                 C67854) *
                C76068) *
               C152599) *
              C152221 * C3415 +
          ((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C152632 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152635 -
           (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                C152170 +
            (C88575 * C152435 + (C15289 + C15288) * C67854) * C76068) *
               C152621 +
           (((C18470 + C18469) * C67854 + (C88843 + C88842) * C152435) *
                C76068 +
            ((C18468 + C18467) * C67854 +
             (C14621 * C3131 + C18669 + C18669 + C152557 * C3139 +
              C14623 * C9346 + C18670 + C18670 + C152461 * C9352) *
                 C152435) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152322 -
                   ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
                    ((C38159 + C38160) * C152435 +
                     (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                      C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                         C67854) *
                        C76068) *
                       C152329 +
                   (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                      C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                         C67854 +
                     (C38784 + C38785) * C152435) *
                        C76068 +
                    ((C15288 + C15289) * C67854 + C88574 * C152435) * C152170) *
                       C4953) *
                      C152221 * C152198 +
                  ((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
                    ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                       C152329 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152322 -
                   (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                        C152170 +
                    (C88575 * C152435 + (C15289 + C15288) * C67854) * C76068) *
                       C4953) *
                      C152221 * C152207 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152322 -
                   (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                        C152170 +
                    (C85797 * C152435 + C15296 * C67854) * C76068) *
                       C152329 +
                   ((C15297 * C67854 + (C18252 + C18251) * C152435) * C76068 +
                    ((C15295 + C15294) * C67854 +
                     (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
                      C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                         C152435) *
                        C152170) *
                       C4953) *
                      C152221 * C3762)) /
                (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C4281 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C152221 * C152633 +
          ((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C152326 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C4281 -
           (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                C152170 +
            (C85797 * C152435 + C15296 * C67854) * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C15702 * C67854 + (C16045 + C16044) * C152435) * C76068 +
            ((C15715 + C15714) * C67854 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                C152170 +
            (C85150 * C152435 + C14691 * C67854) * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C4281 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C152627 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C4281) *
               C152613 +
           (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
             (C84599 * C67854 + C38987 * C152435) * C152170) *
                C4281 -
            (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
             ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                C152326) *
               C152583) *
              C3415 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C4281) *
               C152627 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C4281 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152613 +
           (((C39290 * C67854 + (C39302 + C39301) * C152435) * C76068 +
             ((C17161 + C17160) * C67854 +
              (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
               C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
             (C86798 * C152435 + C37225 * C67854) * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C152541 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C152284) *
                      C829 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C152284 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C152541) *
                      C830 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C152541 -
                   (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C152284) *
                      C831 +
                  (((C15494 * C67854 + (C14993 + C14992) * C152435) * C76068 +
                    ((C15507 + C15506) * C67854 +
                     (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
                      C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                         C152435) *
                        C152170) *
                       C152239 * C152284 -
                   (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                        C152170 +
                    (C85150 * C152435 + C14691 * C67854) * C76068) *
                       C152239 * C152541) *
                      C152587)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C1823 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C1824 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C1825 -
                   (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
                    ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
                       C152239 * C152593) *
                      C152527 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C1824 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C1823 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    (C86798 * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C1825 +
                   ((C38987 * C67854 + (C38999 + C38998) * C152435) * C76068 +
                    ((C16849 + C16848) * C67854 +
                     (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
                      C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                         C152435) *
                        C152170) *
                       C152239 * C152593) *
                      C152204)) /
                    (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152542 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C152541 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152542) *
               C152284) *
              C353 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152542) *
               C152541 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152542 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             ((C17162 + C17163) * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C152284) *
              C354 +
          ((((C14690 * C67854 + C84600 * C152435) * C76068 +
             ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                C152542 -
            (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                 C152170 +
             (C85797 * C152435 + C15296 * C67854) * C76068) *
                C152326) *
               C152541 +
           (((C16046 * C67854 + (C17161 + C17160) * C152435) * C76068 +
             ((C16045 + C16044) * C67854 +
              (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
               C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
             (C84601 * C152435 + C14994 * C67854) * C76068) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152542 -
           ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C1823 +
          ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                C76068 +
            (C85796 * C67854 + C39290 * C152435) * C152170) *
               C152326 -
           ((C37225 * C152435 + C84598 * C67854) * C152170 +
            ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                C76068) *
               C152542) *
              C1824 +
          (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
            (C84599 * C67854 + C38987 * C152435) * C152170) *
               C152542 -
           (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
            ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
               C152326) *
              C1825 +
          (((C39497 * C67854 + (C39509 + C39508) * C152435) * C76068 +
            ((C39302 + C39301) * C67854 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C38998 + C38999) * C152435 + C86798 * C67854) * C152170 +
            ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[72] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C152627 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C152613 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C152583) *
                      C353 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C152613 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C152627 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C152583) *
                      C354 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C152627 -
                   (((C14992 + C14993) * C152435 + (C14991 + C14990) * C67854) *
                        C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C152613 +
                   ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                    ((C14993 + C14992) * C67854 +
                     (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                      C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                         C152435) *
                        C152170) *
                       C152239 * C152583) *
                      C152577)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                     C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                        C67854 +
                    (C37238 + C37239) * C152435) *
                       C76068 +
                   ((C14680 + C14681) * C67854 + (C14985 + C14984) * C152435) *
                       C152170) *
                      C152239 * C152221 * C129 -
                  ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                   ((C14984 + C14985) * C152435 + (C14681 + C14680) * C67854) *
                       C76068) *
                      C152239 * C152221 * C130 +
                  ((C14690 * C67854 + (C14983 + C14982) * C152435) * C76068 +
                   ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                      C152239 * C152221 * C131 -
                  (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                       C152170 +
                   ((C14991 + C14990) * C152435 + C14691 * C67854) * C76068) *
                      C152239 * C152221 * C132 +
                  ((C14692 * C67854 + (C15507 + C15506) * C152435) * C76068 +
                   ((C14689 + C14688) * C67854 +
                    (C14621 * C366 + C15499 + C15499 + C152557 * C390 +
                     C14623 * C1184 + C15500 + C15500 + C152461 * C1196) *
                        C152435) *
                       C152170) *
                      C152239 * C152221 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152628 -
                   (((C16041 + C16040) * C152435 + (C15286 + C15287) * C67854) *
                        C152170 +
                    ((C38159 + C38160) * C152435 +
                     (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                      C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                         C67854) *
                        C76068) *
                       C152615 +
                   (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                      C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                         C67854 +
                     (C38784 + C38785) * C152435) *
                        C76068 +
                    ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                        C152170) *
                       C152586) *
                      C152221 * C353 +
                  ((((C15287 + C15286) * C67854 + (C16040 + C16041) * C152435) *
                        C76068 +
                    ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                       C152615 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152628 -
                   (((C18251 + C18252) * C152435 + (C15291 + C15290) * C67854) *
                        C152170 +
                    ((C18253 + C18254) * C152435 + (C15289 + C15288) * C67854) *
                        C76068) *
                       C152586) *
                      C152221 * C354 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152628 -
                   (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                        C152170 +
                    ((C16043 + C16042) * C152435 + C15296 * C67854) * C76068) *
                       C152615 +
                   ((C15297 * C67854 + (C18252 + C18251) * C152435) * C76068 +
                    ((C15295 + C15294) * C67854 +
                     (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
                      C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                         C152435) *
                        C152170) *
                       C152586) *
                      C152221 * C152577)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C1373 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C1374 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C152583) *
                      C152624 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C1374 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C1373 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C152583) *
                      C152609 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C1373 -
                   (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C1374 +
                   ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                    ((C14993 + C14992) * C67854 +
                     (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                      C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                         C152435) *
                        C152170) *
                       C152239 * C152583) *
                      C152577)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                     C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                        C67854 +
                    (C37238 + C37239) * C152435) *
                       C76068 +
                   ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                      C152239 * C1461 -
                  ((C37225 * C152435 + C84598 * C67854) * C152170 +
                   ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                       C76068) *
                      C152239 * C1462 +
                  ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                   (C84599 * C67854 + C38987 * C152435) * C152170) *
                      C152239 * C1463 -
                  (((C38998 + C38999) * C152435 + (C16850 + C16851) * C67854) *
                       C152170 +
                   ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
                      C152239 * C1464 +
                  ((C38526 * C67854 + (C38525 + C38524) * C152435) * C76068 +
                   ((C38999 + C38998) * C67854 +
                    (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
                     C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                        C152435) *
                       C152170) *
                      C152239 * C1465) *
                 C152193) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152628 -
                   ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
                    ((C38159 + C38160) * C152435 +
                     (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                      C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                         C67854) *
                        C76068) *
                       C152615 +
                   (((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                      C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                         C67854 +
                     (C38784 + C38785) * C152435) *
                        C76068 +
                    ((C15288 + C15289) * C67854 + (C18254 + C18253) * C152435) *
                        C152170) *
                       C152586) *
                      C1373 +
                  ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                        C76068 +
                    (C85796 * C67854 + C39290 * C152435) * C152170) *
                       C152615 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152628 -
                   (((C40380 + C40381) * C152435 + (C18253 + C18254) * C67854) *
                        C152170 +
                    ((C38787 + C38786) * C152435 + (C38785 + C38784) * C67854) *
                        C76068) *
                       C152586) *
                      C1374 +
                  (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152628 -
                   (((C39301 + C39302) * C152435 + (C17162 + C17163) * C67854) *
                        C152170 +
                    ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                       C152615 +
                   ((C38792 * C67854 + (C38791 + C38790) * C152435) * C76068 +
                    ((C40381 + C40380) * C67854 +
                     (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
                      C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                         C152435) *
                        C152170) *
                       C152586) *
                      C152583) *
                 C152193) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C67854 +
             (C37238 + C37239) * C152435) *
                C76068 +
            ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
               C152542 -
           (((C16041 + C16040) * C152435 + (C15286 + C15287) * C67854) *
                C152170 +
            ((C38159 + C38160) * C152435 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C67854) *
                C76068) *
               C152326) *
              C152221 * C829 +
          ((((C15287 + C15286) * C67854 + (C16040 + C16041) * C152435) *
                C76068 +
            ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
               C152326 -
           ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
            (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
               C152542) *
              C152221 * C830 +
          (((C14690 * C67854 + C84600 * C152435) * C76068 +
            ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
               C152542 -
           (((C16044 + C16045) * C152435 + (C15293 + C15292) * C67854) *
                C152170 +
            ((C16043 + C16042) * C152435 + C15296 * C67854) * C76068) *
               C152326) *
              C152221 * C831 +
          (((C15702 * C67854 + (C16045 + C16044) * C152435) * C76068 +
            ((C15715 + C15714) * C67854 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                C152170 +
            (C85150 * C152435 + C14691 * C67854) * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
               C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                  C67854 +
              (C37238 + C37239) * C152435) *
                 C76068 +
             ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                C152542 -
            ((C85795 * C152435 + (C15286 + C15287) * C67854) * C152170 +
             ((C38159 + C38160) * C152435 +
              (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
               C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                  C67854) *
                 C76068) *
                C152326) *
               C1373 +
           ((((C38160 + C38159) * C67854 + (C38158 + C38157) * C152435) *
                 C76068 +
             (C85796 * C67854 + C39290 * C152435) * C152170) *
                C152326 -
            ((C37225 * C152435 + C84598 * C67854) * C152170 +
             ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                 C76068) *
                C152542) *
               C1374 +
           (((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
             (C84599 * C67854 + C38987 * C152435) * C152170) *
                C152542 -
            (((C39301 + C39302) * C152435 + C87185 * C67854) * C152170 +
             ((C38789 + C38788) * C152435 + C38745 * C67854) * C76068) *
                C152326) *
               C152583) *
              C152527 +
          (((((C15287 + C15286) * C67854 + C85796 * C152435) * C76068 +
             ((C15285 + C15284) * C67854 + C16046 * C152435) * C152170) *
                C152326 -
            ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
             (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                C152542) *
               C1373 +
           (((C84597 * C67854 + C84599 * C152435) * C76068 +
             (C84600 * C67854 + C14995 * C152435) * C152170) *
                C152542 -
            (((C17160 + C17161) * C152435 + C85797 * C67854) * C152170 +
             (C87185 * C152435 + C85795 * C67854) * C76068) *
                C152326) *
               C1374 +
           (((C39290 * C67854 + (C39302 + C39301) * C152435) * C76068 +
             ((C17161 + C17160) * C67854 +
              (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
               C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
             (C86798 * C152435 + C37225 * C67854) * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                     C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                        C67854 +
                    (C37238 + C37239) * C152435) *
                       C76068 +
                   ((C14680 + C14681) * C67854 + (C14985 + C14984) * C152435) *
                       C152170) *
                      C152239 * C152221 * C129 -
                  ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                   ((C14984 + C14985) * C152435 + (C14681 + C14680) * C67854) *
                       C76068) *
                      C152239 * C152221 * C130 +
                  ((C14690 * C67854 + (C14983 + C14982) * C152435) * C76068 +
                   ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                      C152239 * C152221 * C131 -
                  (((C15506 + C15507) * C152435 + (C14687 + C14686) * C67854) *
                       C152170 +
                   ((C14991 + C14990) * C152435 + C14691 * C67854) * C76068) *
                      C152239 * C152221 * C132 +
                  ((C14692 * C67854 + (C15507 + C15506) * C152435) * C76068 +
                   ((C14689 + C14688) * C67854 +
                    (C14621 * C366 + C15499 + C15499 + C152557 * C390 +
                     C14623 * C1184 + C15500 + C15500 + C152461 * C1196) *
                        C152435) *
                       C152170) *
                      C152239 * C152221 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C152627 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C152613 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C152583) *
                      C353 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C152613 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C152627 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C152583) *
                      C354 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C152627 -
                   (((C14992 + C14993) * C152435 + (C14991 + C14990) * C67854) *
                        C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C152613 +
                   ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                    ((C14993 + C14992) * C67854 +
                     (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                      C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                         C152435) *
                        C152170) *
                       C152239 * C152583) *
                      C152577)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                      C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                         C67854 +
                     (C37238 + C37239) * C152435) *
                        C76068 +
                    ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                       C152239 * C1373 -
                   ((C37225 * C152435 + C84598 * C67854) * C152170 +
                    ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                        C76068) *
                       C152239 * C1374 +
                   ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                    (C84599 * C67854 + C38987 * C152435) * C152170) *
                       C152239 * C152583) *
                      C152624 +
                  (((C84597 * C67854 + C84599 * C152435) * C76068 +
                    (C84600 * C67854 + C14995 * C152435) * C152170) *
                       C152239 * C1374 -
                   ((C14994 * C152435 + (C14683 + C14682) * C67854) * C152170 +
                    (C84598 * C152435 + (C14681 + C14680) * C67854) * C76068) *
                       C152239 * C1373 -
                   (((C16848 + C16849) * C152435 + C84601 * C67854) * C152170 +
                    ((C16850 + C16851) * C152435 + C37225 * C67854) * C76068) *
                       C152239 * C152583) *
                      C152609 +
                  (((C14690 * C67854 + C84600 * C152435) * C76068 +
                    ((C14685 + C14684) * C67854 + C15494 * C152435) * C152170) *
                       C152239 * C1373 -
                   (((C14992 + C14993) * C152435 + C85150 * C67854) * C152170 +
                    (C84601 * C152435 + C14994 * C67854) * C76068) *
                       C152239 * C1374 +
                   ((C14995 * C67854 + (C16849 + C16848) * C152435) * C76068 +
                    ((C14993 + C14992) * C67854 +
                     (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                      C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                         C152435) *
                        C152170) *
                       C152239 * C152583) *
                      C152577)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                     C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                        C67854 +
                    (C37238 + C37239) * C152435) *
                       C76068 +
                   ((C14680 + C14681) * C67854 + C84597 * C152435) * C152170) *
                      C152239 * C1461 -
                  ((C37225 * C152435 + C84598 * C67854) * C152170 +
                   ((C37241 + C37240) * C152435 + (C37239 + C37238) * C67854) *
                       C76068) *
                      C152239 * C1462 +
                  ((C37244 * C67854 + (C37243 + C37242) * C152435) * C76068 +
                   (C84599 * C67854 + C38987 * C152435) * C152170) *
                      C152239 * C1463 -
                  (((C38998 + C38999) * C152435 + (C16850 + C16851) * C67854) *
                       C152170 +
                   ((C38523 + C38522) * C152435 + C38501 * C67854) * C76068) *
                      C152239 * C1464 +
                  ((C38526 * C67854 + (C38525 + C38524) * C152435) * C76068 +
                   ((C38999 + C38998) * C67854 +
                    (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
                     C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                        C152435) *
                       C152170) *
                      C152239 * C1465) *
                 C152193) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152280 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152287 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C3759) *
              C152198 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152287 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152280 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C3759) *
              C152207 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C152280 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152287 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C152280 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152542) *
               C152287 +
           ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                 C152518 +
             (C104049 * C67854 + C106348 * C152435) * C152170) *
                C152542 -
            (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                 C152518) *
                C152326) *
               C3759) *
              C3415 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152542) *
               C152280 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152287 +
           (((C106736 * C67854 + (C106747 + C106746) * C152435) * C152518 +
             ((C97657 + C97656) * C67854 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
             (C106349 * C152435 + C104043 * C67854) * C152518) *
                C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152634 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152630 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152618 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C152239 * C152593) *
              C3415 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152630 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152634 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152618 +
           ((C106348 * C67854 + (C105753 + C105752) * C152435) * C152518 +
            ((C97345 + C97344) * C67854 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C3275 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152284) *
              C152633 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C3275 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C95990 * C67854 + (C95489 + C95488) * C152435) * C152518 +
            ((C96003 + C96002) * C67854 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152628 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152615 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C67854 +
              (C106082 + C106083) * C152435) *
                 C152518 +
             ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
                C152586) *
               C3275 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152615 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152628 -
            (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                 C152518) *
                C152586) *
               C152284) *
              C3415 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152615 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152628 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
                C152586) *
               C3275 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152628 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152615 +
            ((C108152 * C67854 + (C106087 + C106086) * C152435) * C152518 +
             ((C98739 + C98738) * C67854 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C3275 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152542) *
               C152284) *
              C152198 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152542) *
               C3275 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C95186 * C67854 + C104050 * C152435) * C152518 +
             ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                C152542 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                 C152170 +
             (C105263 * C152435 + C95792 * C67854) * C152518) *
                C152326) *
               C3275 +
           (((C96542 * C67854 + (C97657 + C97656) * C152435) * C152518 +
             ((C96541 + C96540) * C67854 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
             (C104051 * C152435 + C95490 * C67854) * C152518) *
                C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C3275 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152284) *
              C152633 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C3275 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C95990 * C67854 + (C95489 + C95488) * C152435) * C152518 +
            ((C96003 + C96002) * C67854 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152634 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152630 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152618 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C152239 * C152593) *
              C3415 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152630 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152634 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152618 +
           ((C106348 * C67854 + (C105753 + C105752) * C152435) * C152518 +
            ((C97345 + C97344) * C67854 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C152280 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C4281) *
               C152287 +
           ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                 C152518 +
             (C104049 * C67854 + C106348 * C152435) * C152170) *
                C4281 -
            (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                 C152518) *
                C152326) *
               C3759) *
              C152527 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C4281) *
               C152280 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152287 +
           (((C106736 * C67854 + (C106747 + C106746) * C152435) * C152518 +
             ((C97657 + C97656) * C67854 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
             (C106349 * C152435 + C104043 * C67854) * C152518) *
                C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152322 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152329 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C4953) *
              C152280 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152329 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152322 -
           (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                C152518) *
               C4953) *
              C152287 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152322 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C152329 +
           (((C106089 + C106088) * C67854 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C152518 +
            ((C106087 + C106086) * C67854 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C4953) *
              C3759) *
         C152193) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C152634 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C4281) *
              C152630 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C4281 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C152326) *
              C152618 +
          ((((C107019 + C107018) * C67854 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C152518 +
            ((C106747 + C106746) * C67854 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C3275 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C4281) *
               C152284) *
              C152624 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C4281) *
               C3275 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C95186 * C67854 + C104050 * C152435) * C152518 +
             ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                C4281 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                 C152170 +
             (C105263 * C152435 + C95792 * C67854) * C152518) *
                C152326) *
               C3275 +
           (((C96542 * C67854 + (C97657 + C97656) * C152435) * C152518 +
             ((C96541 + C96540) * C67854 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
             (C104051 * C152435 + C95490 * C67854) * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152635 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152632 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152621 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C67854) *
                C152170 +
            ((C108692 + C108693) * C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C67854) *
                C152518) *
               C152599) *
              C3275 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152632 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152635 -
           (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                C152518) *
               C152621 +
           (((C108693 + C108692) * C67854 +
             (C95117 * C10052 + C108684 + C108684 + C95115 * C10058 +
              C95119 * C26241 + C108685 + C108685 + C152461 * C26245) *
                 C152435) *
                C152518 +
            ((C108421 + C108420) * C67854 +
             (C95117 * C10053 + C108686 + C108686 + C95115 * C10059 +
              C95119 * C26242 + C108687 + C108687 + C152461 * C26246) *
                 C152435) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152322 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152329 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C67854 +
              (C106082 + C106083) * C152435) *
                 C152518 +
             ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
                C4953) *
               C3275 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152329 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152322 -
            (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                 C152518) *
                C4953) *
               C152284) *
              C152527 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152329 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152322 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
                C4953) *
               C3275 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152322 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152329 +
            ((C108152 * C67854 + (C106087 + C106086) * C152435) * C152518 +
             ((C98739 + C98738) * C67854 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C3275 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C4281) *
               C152284) *
              C152624 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C4281) *
               C3275 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C95186 * C67854 + C104050 * C152435) * C152518 +
             ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                C4281 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                 C152170 +
             (C105263 * C152435 + C95792 * C67854) * C152518) *
                C152326) *
               C3275 +
           (((C96542 * C67854 + (C97657 + C97656) * C152435) * C152518 +
             ((C96541 + C96540) * C67854 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
             (C104051 * C152435 + C95490 * C67854) * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C152634 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C4281) *
              C152630 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C4281 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C152326) *
              C152618 +
          ((((C107019 + C107018) * C67854 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C152518 +
            ((C106747 + C106746) * C67854 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C1823 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C1824 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C1825 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C152239 * C152593) *
              C152527 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C1824 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C1823 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C1825 +
           ((C106348 * C67854 + (C105753 + C105752) * C152435) * C152518 +
            ((C97345 + C97344) * C67854 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152541 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152284) *
              C829 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152541) *
              C830 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C152541 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152284) *
              C831 +
          (((C95990 * C67854 + (C95489 + C95488) * C152435) * C152518 +
            ((C96003 + C96002) * C67854 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C2359 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C2360 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C67854 +
              (C106082 + C106083) * C152435) *
                 C152518 +
             ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
                C152586) *
               C152541 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C2360 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C2359 -
            (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                 C152518) *
                C152586) *
               C152284) *
              C152527 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C2360 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C2359 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
                C152586) *
               C152541 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C2359 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C2360 +
            ((C108152 * C67854 + (C106087 + C106086) * C152435) * C152518 +
             ((C98739 + C98738) * C67854 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152542 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C1823 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152542) *
              C1824 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152542 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C152326) *
              C1825 +
          ((((C107019 + C107018) * C67854 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C152518 +
            ((C106747 + C106746) * C67854 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C152541 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152542) *
               C152284) *
              C353 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152542) *
               C152541 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C95186 * C67854 + C104050 * C152435) * C152518 +
             ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                C152542 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                 C152170 +
             (C105263 * C152435 + C95792 * C67854) * C152518) *
                C152326) *
               C152541 +
           (((C96542 * C67854 + (C97657 + C97656) * C152435) * C152518 +
             ((C96541 + C96540) * C67854 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
             (C104051 * C152435 + C95490 * C67854) * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C2973 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C2974 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C2975 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C67854) *
                C152170 +
            ((C108692 + C108693) * C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C67854) *
                C152518) *
               C152599) *
              C152541 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C2974 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C2973 -
           (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                C152518) *
               C2975 +
           (((C108693 + C108692) * C67854 +
             (C95117 * C10052 + C108684 + C108684 + C95115 * C10058 +
              C95119 * C26241 + C108685 + C108685 + C152461 * C26245) *
                 C152435) *
                C152518 +
            ((C108421 + C108420) * C67854 +
             (C95117 * C10053 + C108686 + C108686 + C95115 * C10059 +
              C95119 * C26242 + C108687 + C108687 + C152461 * C26246) *
                 C152435) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                 C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                    C67854 +
                (C104060 + C104061) * C152435) *
                   C152518 +
               ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                  C152239 * C152221 * C129 -
              ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
               (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                  C152239 * C152221 * C130 +
              ((C95186 * C67854 + C104050 * C152435) * C152518 +
               ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                  C152239 * C152221 * C131 -
              (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                   C152170 +
               (C104612 * C152435 + C95187 * C67854) * C152518) *
                  C152239 * C152221 * C132 +
              ((C95188 * C67854 + (C96003 + C96002) * C152435) * C152518 +
               ((C95185 + C95184) * C67854 +
                (C95117 * C366 + C95995 + C95995 + C95115 * C390 +
                 C95119 * C1184 + C95996 + C95996 + C152461 * C1196) *
                    C152435) *
                   C152170) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                  C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                     C67854 +
                 (C104060 + C104061) * C152435) *
                    C152518 +
                ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                   C152239 * C152627 -
               ((C104043 * C152435 + C104044 * C67854) * C152170 +
                ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                    C152518) *
                   C152239 * C152613 +
               (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                    C152518 +
                (C104049 * C67854 + C106348 * C152435) * C152170) *
                   C152239 * C152583) *
                  C353 +
              (((C104042 * C67854 + C104049 * C152435) * C152518 +
                (C104050 * C67854 + C95491 * C152435) * C152170) *
                   C152239 * C152613 -
               ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
                (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                   C152239 * C152627 -
               (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
                (C106349 * C152435 + C104043 * C67854) * C152518) *
                   C152239 * C152583) *
                  C354 +
              (((C95186 * C67854 + C104050 * C152435) * C152518 +
                ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                   C152239 * C152627 -
               (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
                (C104051 * C152435 + C95490 * C67854) * C152518) *
                   C152239 * C152613 +
               ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
                ((C95489 + C95488) * C67854 +
                 (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
                  C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                     C152435) *
                    C152170) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152628 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C152221 * C353 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152615 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152628 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
               C152586) *
              C152221 * C354 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152628 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C152615 +
           ((C95793 * C67854 + (C98739 + C98738) * C152435) * C152518 +
            ((C95791 + C95790) * C67854 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C1374 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C1374 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C67854) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
               C152518) *
              C152239 * C1462 +
          (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
               C152518 +
           (C104049 * C67854 + C106348 * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
               C152518) *
              C152239 * C1464 +
          (((C105755 + C105754) * C67854 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C152518 +
           ((C105753 + C105752) * C67854 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152628 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C1373 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152615 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152628 -
           (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                C152518) *
               C152586) *
              C1374 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152628 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C152615 +
           (((C106089 + C106088) * C67854 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C152518 +
            ((C106087 + C106086) * C67854 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C152221 * C152624 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C2360 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C2359 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C2359 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C2360 +
           ((C95793 * C67854 + (C98739 + C98738) * C152435) * C152518 +
            ((C95791 + C95790) * C67854 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C152627 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C2360 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C2359 -
           (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                C152518) *
               C152586) *
              C152613 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C2359 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C2360 +
           (((C106089 + C106088) * C67854 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C152518 +
            ((C106087 + C106086) * C67854 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C2590 -
          ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
           ((C105268 + C105269) * C152435 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C67854) *
               C152518) *
              C2591 +
          (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C67854 +
            (C106082 + C106083) * C152435) *
               C152518 +
           ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
              C2592 -
          (((C108420 + C108421) * C152435 + (C98956 + C98957) * C67854) *
               C152170 +
           ((C108692 + C108693) * C152435 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C67854) *
               C152518) *
              C2593 +
          (((C95117 * C2599 + C98424 + C98424 + C95115 * C2615 +
             C95119 * C17921 + C98425 + C98425 + C152461 * C17927) *
                C67854 +
            (C95117 * C9344 + C107762 + C107762 + C95115 * C9350 +
             C95119 * C40067 + C107763 + C107763 + C152461 * C40071) *
                C152435) *
               C152518 +
           ((C95117 * C2600 + C98426 + C98426 + C95115 * C2616 +
             C95119 * C17922 + C98427 + C98427 + C152461 * C17928) *
                C67854 +
            (C95117 * C9345 + C107764 + C107764 + C95115 * C9351 +
             C95119 * C49388 + C107765 + C107765 + C152461 * C49390) *
                C152435) *
               C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C1373 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152542) *
               C1374 +
           ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                 C152518 +
             (C104049 * C67854 + C106348 * C152435) * C152170) *
                C152542 -
            (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                 C152518) *
                C152326) *
               C152583) *
              C152527 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152542) *
               C1373 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C1374 +
           (((C106736 * C67854 + (C106747 + C106746) * C152435) * C152518 +
             ((C97657 + C97656) * C67854 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
             (C106349 * C152435 + C104043 * C67854) * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152542 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C152221 * C829 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152542) *
              C152221 * C830 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152542 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C152326) *
              C152221 * C831 +
          (((C96198 * C67854 + (C96541 + C96540) * C152435) * C152518 +
            ((C96211 + C96210) * C67854 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C2973 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C2974 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C2975 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C67854) *
                C152170 +
            ((C108692 + C108693) * C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C67854) *
                C152518) *
               C152599) *
              C152221 * C152527 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C2974 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C2973 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
               C2975 +
           (((C98957 + C98956) * C67854 + (C108421 + C108420) * C152435) *
                C152518 +
            ((C98955 + C98954) * C67854 +
             (C95117 * C3131 + C99156 + C99156 + C95115 * C3139 +
              C95119 * C9346 + C99157 + C99157 + C152461 * C9352) *
                 C152435) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152627 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152613 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152613 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152627 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C152627 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152613 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C152239 * C152221 * C129 -
          ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
           (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
              C152239 * C152221 * C130 +
          ((C95186 * C67854 + C104050 * C152435) * C152518 +
           ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
              C152239 * C152221 * C131 -
          (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
               C152170 +
           (C104612 * C152435 + C95187 * C67854) * C152518) *
              C152239 * C152221 * C132 +
          ((C95188 * C67854 + (C96003 + C96002) * C152435) * C152518 +
           ((C95185 + C95184) * C67854 +
            (C95117 * C366 + C95995 + C95995 + C95115 * C390 + C95119 * C1184 +
             C95996 + C95996 + C152461 * C1196) *
                C152435) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C1374 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C1374 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C67854) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
               C152518) *
              C152239 * C1462 +
          (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
               C152518 +
           (C104049 * C67854 + C106348 * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
               C152518) *
              C152239 * C1464 +
          (((C105755 + C105754) * C67854 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C152518 +
           ((C105753 + C105752) * C67854 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C152221 * C152624 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C2360 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C2359 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C2359 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C2360 +
           ((C95793 * C67854 + (C98739 + C98738) * C152435) * C152518 +
            ((C95791 + C95790) * C67854 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C152627 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C2360 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C2359 -
           (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                C152518) *
               C152586) *
              C152613 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C2359 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C2360 +
           (((C106089 + C106088) * C67854 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C152518 +
            ((C106087 + C106086) * C67854 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C152541 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C4281) *
               C152284) *
              C152198 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C4281) *
               C152541 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C95186 * C67854 + C104050 * C152435) * C152518 +
             ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                C4281 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                 C152170 +
             (C105263 * C152435 + C95792 * C67854) * C152518) *
                C152326) *
               C152541 +
           (((C96542 * C67854 + (C97657 + C97656) * C152435) * C152518 +
             ((C96541 + C96540) * C67854 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
             (C104051 * C152435 + C95490 * C67854) * C152518) *
                C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152322 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152329 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C67854 +
              (C106082 + C106083) * C152435) *
                 C152518 +
             ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
                C4953) *
               C152541 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152329 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152322 -
            (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                 C152518) *
                C4953) *
               C152284) *
              C3415 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152329 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152322 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
                C4953) *
               C152541 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152322 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152329 +
            ((C108152 * C67854 + (C106087 + C106086) * C152435) * C152518 +
             ((C98739 + C98738) * C67854 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C152627 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C4281) *
               C152613 +
           ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                 C152518 +
             (C104049 * C67854 + C106348 * C152435) * C152170) *
                C4281 -
            (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                 C152518) *
                C152326) *
               C152583) *
              C3415 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C4281) *
               C152627 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152613 +
           (((C106736 * C67854 + (C106747 + C106746) * C152435) * C152518 +
             ((C97657 + C97656) * C67854 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
             (C106349 * C152435 + C104043 * C67854) * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C152221 * C152633 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C4281 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C96198 * C67854 + (C96541 + C96540) * C152435) * C152518 +
            ((C96211 + C96210) * C67854 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152635 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152632 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152621 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C67854) *
                C152170 +
            ((C108692 + C108693) * C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C67854) *
                C152518) *
               C152599) *
              C152221 * C3415 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152632 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152635 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
               C152621 +
           (((C98957 + C98956) * C67854 + (C108421 + C108420) * C152435) *
                C152518 +
            ((C98955 + C98954) * C67854 +
             (C95117 * C3131 + C99156 + C99156 + C95115 * C3139 +
              C95119 * C9346 + C99157 + C99157 + C152461 * C9352) *
                 C152435) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152322 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152329 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C4953) *
              C152221 * C152198 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152329 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152322 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
               C4953) *
              C152221 * C152207 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152322 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C152329 +
           ((C95793 * C67854 + (C98739 + C98738) * C152435) * C152518 +
            ((C95791 + C95790) * C67854 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C4953) *
              C152221 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C152221 * C152633 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C4281 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C96198 * C67854 + (C96541 + C96540) * C152435) * C152518 +
            ((C96211 + C96210) * C67854 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C152627 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C4281) *
               C152613 +
           ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                 C152518 +
             (C104049 * C67854 + C106348 * C152435) * C152170) *
                C4281 -
            (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                 C152518) *
                C152326) *
               C152583) *
              C3415 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C4281) *
               C152627 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152613 +
           (((C106736 * C67854 + (C106747 + C106746) * C152435) * C152518 +
             ((C97657 + C97656) * C67854 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
             (C106349 * C152435 + C104043 * C67854) * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152541 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152284) *
              C829 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152541) *
              C830 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C152541 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152284) *
              C831 +
          (((C95990 * C67854 + (C95489 + C95488) * C152435) * C152518 +
            ((C96003 + C96002) * C67854 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C1823 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C1824 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C1825 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C152239 * C152593) *
              C152527 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C1824 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C1823 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C1825 +
           ((C106348 * C67854 + (C105753 + C105752) * C152435) * C152518 +
            ((C97345 + C97344) * C67854 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C152541 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152542) *
               C152284) *
              C353 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152542) *
               C152541 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C95186 * C67854 + C104050 * C152435) * C152518 +
             ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
                C152542 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                 C152170 +
             (C105263 * C152435 + C95792 * C67854) * C152518) *
                C152326) *
               C152541 +
           (((C96542 * C67854 + (C97657 + C97656) * C152435) * C152518 +
             ((C96541 + C96540) * C67854 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
             (C104051 * C152435 + C95490 * C67854) * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152542 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C1823 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152542) *
              C1824 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152542 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C152326) *
              C1825 +
          ((((C107019 + C107018) * C67854 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C152518 +
            ((C106747 + C106746) * C67854 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
                C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152627 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152613 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152613 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152627 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C152627 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152613 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C152239 * C152221 * C129 -
          ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
           (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
              C152239 * C152221 * C130 +
          ((C95186 * C67854 + C104050 * C152435) * C152518 +
           ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
              C152239 * C152221 * C131 -
          (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
               C152170 +
           (C104612 * C152435 + C95187 * C67854) * C152518) *
              C152239 * C152221 * C132 +
          ((C95188 * C67854 + (C96003 + C96002) * C152435) * C152518 +
           ((C95185 + C95184) * C67854 +
            (C95117 * C366 + C95995 + C95995 + C95115 * C390 + C95119 * C1184 +
             C95996 + C95996 + C152461 * C1196) *
                C152435) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152628 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C152221 * C353 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152615 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152628 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C67854) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C67854) * C152518) *
               C152586) *
              C152221 * C354 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152628 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C152615 +
           ((C95793 * C67854 + (C98739 + C98738) * C152435) * C152518 +
            ((C95791 + C95790) * C67854 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C1374 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C1374 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C67854) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
               C152518) *
              C152239 * C1462 +
          (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
               C152518 +
           (C104049 * C67854 + C106348 * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
               C152518) *
              C152239 * C1464 +
          (((C105755 + C105754) * C67854 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C152518 +
           ((C105753 + C105752) * C67854 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152628 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C67854 +
             (C106082 + C106083) * C152435) *
                C152518 +
            ((C95784 + C95785) * C67854 + C108152 * C152435) * C152170) *
               C152586) *
              C1373 +
          ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                C152518 +
            (C105262 * C67854 + C106736 * C152435) * C152170) *
               C152615 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152628 -
           (((C106086 + C106087) * C152435 + C108153 * C67854) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C67854) *
                C152518) *
               C152586) *
              C1374 +
          ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152628 -
           (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                C152518) *
               C152615 +
           (((C106089 + C106088) * C67854 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C152518 +
            ((C106087 + C106086) * C67854 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152542 -
           ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C67854) *
                C152518) *
               C152326) *
              C152221 * C829 +
          ((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
            ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152542) *
              C152221 * C830 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152542 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C67854) *
                C152170 +
            (C105263 * C152435 + C95792 * C67854) * C152518) *
               C152326) *
              C152221 * C831 +
          (((C96198 * C67854 + (C96541 + C96540) * C152435) * C152518 +
            ((C96211 + C96210) * C67854 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
                C152170 +
            (C104612 * C152435 + C95187 * C67854) * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C67854 +
              (C104060 + C104061) * C152435) *
                 C152518 +
             ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C67854) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C67854) *
                 C152518) *
                C152326) *
               C1373 +
           ((((C105269 + C105268) * C67854 + (C106084 + C106085) * C152435) *
                 C152518 +
             (C105262 * C67854 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C67854) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                 C152518) *
                C152542) *
               C1374 +
           ((((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                 C152518 +
             (C104049 * C67854 + C106348 * C152435) * C152170) *
                C152542 -
            (((C106746 + C106747) * C152435 + C106741 * C67854) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C67854) *
                 C152518) *
                C152326) *
               C152583) *
              C152527 +
          (((((C95783 + C95782) * C67854 + C105262 * C152435) * C152518 +
             ((C95781 + C95780) * C67854 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
                C152542) *
               C1373 +
           (((C104042 * C67854 + C104049 * C152435) * C152518 +
             (C104050 * C67854 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C67854) * C152170 +
             (C106741 * C152435 + C105257 * C67854) * C152518) *
                C152326) *
               C1374 +
           (((C106736 * C67854 + (C106747 + C106746) * C152435) * C152518 +
             ((C97657 + C97656) * C67854 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
             (C106349 * C152435 + C104043 * C67854) * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C152239 * C152221 * C129 -
          ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
           (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
              C152239 * C152221 * C130 +
          ((C95186 * C67854 + C104050 * C152435) * C152518 +
           ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
              C152239 * C152221 * C131 -
          (((C96002 + C96003) * C152435 + (C95183 + C95182) * C67854) *
               C152170 +
           (C104612 * C152435 + C95187 * C67854) * C152518) *
              C152239 * C152221 * C132 +
          ((C95188 * C67854 + (C96003 + C96002) * C152435) * C152518 +
           ((C95185 + C95184) * C67854 +
            (C95117 * C366 + C95995 + C95995 + C95115 * C390 + C95119 * C1184 +
             C95996 + C95996 + C152461 * C1196) *
                C152435) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C152627 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C152613 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C152613 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C152627 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C152627 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C152613 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C67854 +
             (C104060 + C104061) * C152435) *
                C152518 +
            ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C67854) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
                C152518) *
               C152239 * C1374 +
           (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
                C152518 +
            (C104049 * C67854 + C106348 * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C67854 + C104049 * C152435) * C152518 +
            (C104050 * C67854 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C67854) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C67854) * C152518) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C67854) * C152170 +
            (C106349 * C152435 + C104043 * C67854) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C67854 + C104050 * C152435) * C152518 +
            ((C95181 + C95180) * C67854 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C67854) * C152170 +
            (C104051 * C152435 + C95490 * C67854) * C152518) *
               C152239 * C1374 +
           ((C95491 * C67854 + (C97345 + C97344) * C152435) * C152518 +
            ((C95489 + C95488) * C67854 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C67854 +
            (C104060 + C104061) * C152435) *
               C152518 +
           ((C95176 + C95177) * C67854 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C67854) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C67854) *
               C152518) *
              C152239 * C1462 +
          (((C104063 + C104062) * C67854 + (C105750 + C105751) * C152435) *
               C152518 +
           (C104049 * C67854 + C106348 * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + C106349 * C67854) * C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C67854) *
               C152518) *
              C152239 * C1464 +
          (((C105755 + C105754) * C67854 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C152518 +
           ((C105753 + C105752) * C67854 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152280 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152287 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152239 * C3759) *
              C152198 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152287 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152280 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C3759) *
              C152207 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C152280 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152287 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152542 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C152280 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152542) *
               C152287 +
           ((C134345 * C152622 + (C105750 + C105751) * C152602 +
             C135583 * C76067) *
                C152165 * C152542 -
            ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
             C135814 * C152622) *
                C152165 * C152326) *
               C3759) *
              C3415 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152542) *
               C152280 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152542 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152287 +
           ((C106736 * C152622 + (C106747 + C106746) * C152602 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C76067) *
                C152165 * C152326 -
            ((C105752 + C105753) * C76067 + C106349 * C152602 +
             C104043 * C152622) *
                C152165 * C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152634 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152630 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152239 * C152618 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C152239 * C152593) *
              C3415 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152630 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152634 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152618 +
           (C106348 * C152622 + (C105753 + C105752) * C152602 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C76067) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C3275 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152284) *
              C152633 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152284 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C3275 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C95990 * C152622 + (C95489 + C95488) * C152602 +
            (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
             C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                C76067) *
               C152165 * C152239 * C152284 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152628 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152615 +
            ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152622 +
             (C106082 + C106083) * C152602 + C135815 * C76067) *
                C152165 * C152586) *
               C3275 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152615 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152628 -
            ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
             (C106083 + C106082) * C152622) *
                C152165 * C152586) *
               C152284) *
              C3415 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152615 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152628 -
            ((C106086 + C106087) * C76067 + C108153 * C152602 +
             (C95785 + C95784) * C152622) *
                C152165 * C152586) *
               C3275 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152628 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152615 +
            (C108152 * C152622 + (C106087 + C106086) * C152602 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C76067) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152542 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C3275 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152542) *
               C152284) *
              C152198 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152542) *
               C3275 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152542 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
                C152542 -
            ((C97656 + C97657) * C76067 + C105263 * C152602 +
             C95792 * C152622) *
                C152165 * C152326) *
               C3275 +
           ((C96542 * C152622 + (C97657 + C97656) * C152602 +
             (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
              C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                 C76067) *
                C152165 * C152326 -
            ((C97344 + C97345) * C76067 + C104051 * C152602 +
             C95490 * C152622) *
                C152165 * C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C3275 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152284) *
              C152633 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152284 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C3275 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C95990 * C152622 + (C95489 + C95488) * C152602 +
            (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
             C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                C76067) *
               C152165 * C152239 * C152284 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152634 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152630 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152239 * C152618 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C152239 * C152593) *
              C3415 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152630 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152634 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152618 +
           (C106348 * C152622 + (C105753 + C105752) * C152602 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C76067) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C4281 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C152280 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C4281) *
               C152287 +
           ((C134345 * C152622 + (C105750 + C105751) * C152602 +
             C135583 * C76067) *
                C152165 * C4281 -
            ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
             C135814 * C152622) *
                C152165 * C152326) *
               C3759) *
              C152527 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C4281) *
               C152280 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C4281 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152287 +
           ((C106736 * C152622 + (C106747 + C106746) * C152602 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C76067) *
                C152165 * C152326 -
            ((C105752 + C105753) * C76067 + C106349 * C152602 +
             C104043 * C152622) *
                C152165 * C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152322 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152329 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C4953) *
              C152280 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C152329 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152322 -
           ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
            (C106083 + C106082) * C152622) *
               C152165 * C4953) *
              C152287 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152322 -
           ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
            C135814 * C152622) *
               C152165 * C152329 +
           (C135815 * C152622 + (C135827 + C135826) * C152602 +
            (C95117 * C24963 + C135820 + C135820 + C95115 * C24967 +
             C95119 * C33899 + C135821 + C135821 + C152461 * C33901) *
                C76067) *
               C152165 * C4953) *
              C3759) *
         C152193) /
        (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C4281 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C152634 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C152326 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C4281) *
              C152630 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C4281 -
           ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
            C135814 * C152622) *
               C152165 * C152326) *
              C152618 +
          ((C136506 * C152622 + (C136518 + C136517) * C152602 +
            (C95117 * C25670 + C136511 + C136511 + C95115 * C25674 +
             C95119 * C32595 + C136512 + C136512 + C152461 * C32597) *
                C76067) *
               C152165 * C152326 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C4281 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C3275 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C4281) *
               C3275 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C4281 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
                C4281 -
            ((C97656 + C97657) * C76067 + C105263 * C152602 +
             C95792 * C152622) *
                C152165 * C152326) *
               C3275 +
           ((C96542 * C152622 + (C97657 + C97656) * C152602 +
             (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
              C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                 C76067) *
                C152165 * C152326 -
            ((C97344 + C97345) * C76067 + C104051 * C152602 +
             C95490 * C152622) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152635 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152632 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152621 -
           ((C137767 + C137768) * C76067 + (C108692 + C108693) * C152602 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C152622) *
               C152165 * C152599) *
              C3275 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C152632 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152635 -
           ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
            (C106083 + C106082) * C152622) *
               C152165 * C152621 +
           ((C108693 + C108692) * C152622 + (C137768 + C137767) * C152602 +
            (C95117 * C26938 + C137761 + C137761 + C95115 * C26942 +
             C95119 * C33441 + C137762 + C137762 + C152461 * C33443) *
                C76067) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152322 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152329 +
            ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152622 +
             (C106082 + C106083) * C152602 + C135815 * C76067) *
                C152165 * C4953) *
               C3275 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152329 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152322 -
            ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
             (C106083 + C106082) * C152622) *
                C152165 * C4953) *
               C152284) *
              C152527 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152329 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152322 -
            ((C106086 + C106087) * C76067 + C108153 * C152602 +
             (C95785 + C95784) * C152622) *
                C152165 * C4953) *
               C3275 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152322 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152329 +
            (C108152 * C152622 + (C106087 + C106086) * C152602 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C76067) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C4281 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C3275 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C4281) *
               C3275 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C4281 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
                C4281 -
            ((C97656 + C97657) * C76067 + C105263 * C152602 +
             C95792 * C152622) *
                C152165 * C152326) *
               C3275 +
           ((C96542 * C152622 + (C97657 + C97656) * C152602 +
             (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
              C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                 C76067) *
                C152165 * C152326 -
            ((C97344 + C97345) * C76067 + C104051 * C152602 +
             C95490 * C152622) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C4281 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C152634 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C152326 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C4281) *
              C152630 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C4281 -
           ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
            C135814 * C152622) *
               C152165 * C152326) *
              C152618 +
          ((C136506 * C152622 + (C136518 + C136517) * C152602 +
            (C95117 * C25670 + C136511 + C136511 + C95115 * C25674 +
             C95119 * C32595 + C136512 + C136512 + C152461 * C32597) *
                C76067) *
               C152165 * C152326 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C1823 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C1824 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152239 * C1825 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C152239 * C152593) *
              C152527 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C1824 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C1823 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C1825 +
           (C106348 * C152622 + (C105753 + C105752) * C152602 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C76067) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152541 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152284) *
              C829 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152284 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C152541 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C95990 * C152622 + (C95489 + C95488) * C152602 +
            (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
             C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                C76067) *
               C152165 * C152239 * C152284 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C2359 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C2360 +
            ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152622 +
             (C106082 + C106083) * C152602 + C135815 * C76067) *
                C152165 * C152586) *
               C152541 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C2360 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C2359 -
            ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
             (C106083 + C106082) * C152622) *
                C152165 * C152586) *
               C152284) *
              C152527 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C2360 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C2359 -
            ((C106086 + C106087) * C76067 + C108153 * C152602 +
             (C95785 + C95784) * C152622) *
                C152165 * C152586) *
               C152541 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C2359 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C2360 +
            (C108152 * C152622 + (C106087 + C106086) * C152602 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C76067) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152542 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C1823 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C152326 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152542) *
              C1824 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152542 -
           ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
            C135814 * C152622) *
               C152165 * C152326) *
              C1825 +
          ((C136506 * C152622 + (C136518 + C136517) * C152602 +
            (C95117 * C25670 + C136511 + C136511 + C95115 * C25674 +
             C95119 * C32595 + C136512 + C136512 + C152461 * C32597) *
                C76067) *
               C152165 * C152326 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152542 -
            ((C106085 + C106084) * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C152541 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             (C107019 + C107018) * C76067) *
                C152165 * C152326 -
            ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152542) *
               C152541 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152542 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
                C152542 -
            ((C97656 + C97657) * C76067 + C105263 * C152602 +
             C95792 * C152622) *
                C152165 * C152326) *
               C152541 +
           ((C96542 * C152622 + (C97657 + C97656) * C152602 +
             (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
              C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                 C76067) *
                C152165 * C152326 -
            ((C97344 + C97345) * C76067 + C104051 * C152602 +
             C95490 * C152622) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C2973 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C2974 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C2975 -
           ((C137767 + C137768) * C76067 + (C108692 + C108693) * C152602 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C152622) *
               C152165 * C152599) *
              C152541 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C2974 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C2973 -
           ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
            (C106083 + C106082) * C152622) *
               C152165 * C2975 +
           ((C108693 + C108692) * C152622 + (C137768 + C137767) * C152602 +
            (C95117 * C26938 + C137761 + C137761 + C95115 * C26942 +
             C95119 * C33441 + C137762 + C137762 + C152461 * C33443) *
                C76067) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                   C152622 +
               (C104060 + C104061) * C152602 + (C104063 + C104062) * C76067) *
                  C152165 * C152239 * C152221 * C129 -
              (C104043 * C76067 + C104044 * C152602 +
               (C95177 + C95176) * C152622) *
                  C152165 * C152239 * C152221 * C130 +
              (C95186 * C152622 + C104050 * C152602 + C95491 * C76067) *
                  C152165 * C152239 * C152221 * C131 -
              ((C95488 + C95489) * C76067 + C104612 * C152602 +
               C95187 * C152622) *
                  C152165 * C152239 * C152221 * C132 +
              (C95188 * C152622 + (C96003 + C96002) * C152602 +
               (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                   C76067) *
                  C152165 * C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                 C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                    C152622 +
                (C104060 + C104061) * C152602 + C134345 * C76067) *
                   C152165 * C152239 * C152627 -
               ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
                (C104061 + C104060) * C152622) *
                   C152165 * C152239 * C152613 +
               (C134345 * C152622 + (C105750 + C105751) * C152602 +
                (C105755 + C105754) * C76067) *
                   C152165 * C152239 * C152583) *
                  C353 +
              ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                   C152165 * C152239 * C152613 -
               (C104043 * C76067 + C104044 * C152602 +
                (C95177 + C95176) * C152622) *
                   C152165 * C152239 * C152627 -
               ((C105752 + C105753) * C76067 + C106349 * C152602 +
                C104043 * C152622) *
                   C152165 * C152239 * C152583) *
                  C354 +
              ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) *
                   C152165 * C152239 * C152627 -
               ((C97344 + C97345) * C76067 + C104051 * C152602 +
                C95490 * C152622) *
                   C152165 * C152239 * C152613 +
               (C95491 * C152622 + (C97345 + C97344) * C152602 +
                (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
                 C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                    C76067) *
                   C152165 * C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152628 -
           ((C106085 + C106084) * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152615 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + (C106089 + C106088) * C76067) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152615 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152628 -
           ((C106086 + C106087) * C76067 + C108153 * C152602 +
            (C95785 + C95784) * C152622) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152628 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C152615 +
           (C95793 * C152622 + (C98739 + C98738) * C152602 +
            (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
             C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                C76067) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C1373 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C1374 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            (C105755 + C105754) * C76067) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C1374 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C1373 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C1373 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C1374 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + C134345 * C76067) *
              C152165 * C152239 * C1461 -
          (C135582 * C76067 + (C104062 + C104063) * C152602 +
           (C104061 + C104060) * C152622) *
              C152165 * C152239 * C1462 +
          (C134345 * C152622 + (C105750 + C105751) * C152602 +
           C135583 * C76067) *
              C152165 * C152239 * C1463 -
          ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
           C135582 * C152622) *
              C152165 * C152239 * C1464 +
          (C135583 * C152622 + (C135595 + C135594) * C152602 +
           (C95117 * C24727 + C135588 + C135588 + C95115 * C24731 +
            C95119 * C33058 + C135589 + C135589 + C152461 * C33060) *
               C76067) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152628 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152615 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152586) *
              C1373 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            (C107019 + C107018) * C76067) *
               C152165 * C152615 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152628 -
           ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
            (C106083 + C106082) * C152622) *
               C152165 * C152586) *
              C1374 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152628 -
           ((C95119 * C24963 + C107011 + C107011 + C152461 * C24967 +
             C95117 * C8769 + C107010 + C107010 + C95115 * C8775) *
                C76067 +
            (C107018 + C107019) * C152602 + C135814 * C152622) *
               C152165 * C152615 +
           (C135815 * C152622 + (C135827 + C135826) * C152602 +
            (C95117 * C24963 + C135820 + C135820 + C95115 * C24967 +
             C95119 * C33899 + C135821 + C135821 + C152461 * C33901) *
                C76067) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C2359 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C2360 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C2360 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C2359 -
           ((C106086 + C106087) * C76067 + C108153 * C152602 +
            (C95785 + C95784) * C152622) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C2359 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C2360 +
           (C95793 * C152622 + (C98739 + C98738) * C152602 +
            (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
             C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                C76067) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C2359 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C2360 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152586) *
              C152627 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C2360 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C2359 -
           ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
            (C106083 + C106082) * C152622) *
               C152165 * C152586) *
              C152613 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C2359 -
           ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
            C135814 * C152622) *
               C152165 * C2360 +
           (C135815 * C152622 + (C135827 + C135826) * C152602 +
            (C95117 * C24963 + C135820 + C135820 + C95115 * C24967 +
             C95119 * C33899 + C135821 + C135821 + C152461 * C33901) *
                C76067) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + C134345 * C76067) *
              C152165 * C2590 -
          (C135814 * C76067 + (C105268 + C105269) * C152602 +
           (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
            C95725 + C95725 + C95115 * C628) *
               C152622) *
              C152165 * C2591 +
          ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
            C95727 + C95727 + C152461 * C2614) *
               C152622 +
           (C106082 + C106083) * C152602 + C135815 * C76067) *
              C152165 * C2592 -
          ((C95119 * C26241 + C108685 + C108685 + C152461 * C26245 +
            C95117 * C10052 + C108684 + C108684 + C95115 * C10058) *
               C76067 +
           (C108692 + C108693) * C152602 +
           (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
            C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
               C152622) *
              C152165 * C2593 +
          ((C95117 * C2599 + C98424 + C98424 + C95115 * C2615 +
            C95119 * C17921 + C98425 + C98425 + C152461 * C17927) *
               C152622 +
           (C95117 * C9344 + C107762 + C107762 + C95115 * C9350 +
            C95119 * C40067 + C107763 + C107763 + C152461 * C40071) *
               C152602 +
           (C95117 * C26241 + C137077 + C137077 + C95115 * C26245 +
            C95119 * C40068 + C137078 + C137078 + C152461 * C40072) *
               C76067) *
              C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152542 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C1373 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             (C107019 + C107018) * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152542) *
               C1374 +
           ((C134345 * C152622 + (C105750 + C105751) * C152602 +
             C135583 * C76067) *
                C152165 * C152542 -
            ((C95119 * C24963 + C107011 + C107011 + C152461 * C24967 +
              C95117 * C8769 + C107010 + C107010 + C95115 * C8775) *
                 C76067 +
             (C107018 + C107019) * C152602 + C135814 * C152622) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152542) *
               C1373 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152542 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C1374 +
           ((C106736 * C152622 + (C106747 + C106746) * C152602 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C76067) *
                C152165 * C152326 -
            ((C105752 + C105753) * C76067 + C106349 * C152602 +
             C104043 * C152622) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152542 -
           ((C106085 + C106084) * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152326 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152542 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C96198 * C152622 + (C96541 + C96540) * C152602 +
            (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
             C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                C76067) *
               C152165 * C152326 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C2973 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C2974 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C2975 -
           ((C95119 * C26241 + C108685 + C108685 + C152461 * C26245 +
             C95117 * C10052 + C108684 + C108684 + C95115 * C10058) *
                C76067 +
            (C108692 + C108693) * C152602 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C152622) *
               C152165 * C152599) *
              C152221 * C152527 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C2974 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C2973 -
           ((C106086 + C106087) * C76067 + C108153 * C152602 +
            (C95785 + C95784) * C152622) *
               C152165 * C2975 +
           ((C98957 + C98956) * C152622 + (C108421 + C108420) * C152602 +
            (C95117 * C10053 + C108686 + C108686 + C95115 * C10059 +
             C95119 * C26242 + C108687 + C108687 + C152461 * C26246) *
                C76067) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152627 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152613 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            (C105755 + C105754) * C76067) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152613 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152627 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C152627 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152613 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + (C104063 + C104062) * C76067) *
              C152165 * C152239 * C152221 * C129 -
          (C104043 * C76067 + C104044 * C152602 + (C95177 + C95176) * C152622) *
              C152165 * C152239 * C152221 * C130 +
          (C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
              C152239 * C152221 * C131 -
          ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
              C152165 * C152239 * C152221 * C132 +
          (C95188 * C152622 + (C96003 + C96002) * C152602 +
           (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
            C95453 + C95453 + C152461 * C2047) *
               C76067) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C1373 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C1374 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            (C105755 + C105754) * C76067) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C1374 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C1373 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C1373 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C1374 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + C134345 * C76067) *
              C152165 * C152239 * C1461 -
          (C135582 * C76067 + (C104062 + C104063) * C152602 +
           (C104061 + C104060) * C152622) *
              C152165 * C152239 * C1462 +
          (C134345 * C152622 + (C105750 + C105751) * C152602 +
           C135583 * C76067) *
              C152165 * C152239 * C1463 -
          ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
           C135582 * C152622) *
              C152165 * C152239 * C1464 +
          (C135583 * C152622 + (C135595 + C135594) * C152602 +
           (C95117 * C24727 + C135588 + C135588 + C95115 * C24731 +
            C95119 * C33058 + C135589 + C135589 + C152461 * C33060) *
               C76067) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C2359 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C2360 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C2360 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C2359 -
           ((C106086 + C106087) * C76067 + C108153 * C152602 +
            (C95785 + C95784) * C152622) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C2359 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C2360 +
           (C95793 * C152622 + (C98739 + C98738) * C152602 +
            (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
             C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                C76067) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C2359 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C2360 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152586) *
              C152627 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C2360 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C2359 -
           ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
            (C106083 + C106082) * C152622) *
               C152165 * C152586) *
              C152613 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C2359 -
           ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
            C135814 * C152622) *
               C152165 * C2360 +
           (C135815 * C152622 + (C135827 + C135826) * C152602 +
            (C95117 * C24963 + C135820 + C135820 + C95115 * C24967 +
             C95119 * C33899 + C135821 + C135821 + C152461 * C33901) *
                C76067) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C4281 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C152541 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C4281) *
               C152284) *
              C152198 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C4281) *
               C152541 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C4281 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
                C4281 -
            ((C97656 + C97657) * C76067 + C105263 * C152602 +
             C95792 * C152622) *
                C152165 * C152326) *
               C152541 +
           ((C96542 * C152622 + (C97657 + C97656) * C152602 +
             (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
              C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                 C76067) *
                C152165 * C152326 -
            ((C97344 + C97345) * C76067 + C104051 * C152602 +
             C95490 * C152622) *
                C152165 * C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152322 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152329 +
            ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152622 +
             (C106082 + C106083) * C152602 + C135815 * C76067) *
                C152165 * C4953) *
               C152541 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152329 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152322 -
            ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
             (C106083 + C106082) * C152622) *
                C152165 * C4953) *
               C152284) *
              C3415 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152329 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152322 -
            ((C106086 + C106087) * C76067 + C108153 * C152602 +
             (C95785 + C95784) * C152622) *
                C152165 * C4953) *
               C152541 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152322 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152329 +
            (C108152 * C152622 + (C106087 + C106086) * C152602 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C76067) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C4281 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C152627 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C4281) *
               C152613 +
           ((C134345 * C152622 + (C105750 + C105751) * C152602 +
             C135583 * C76067) *
                C152165 * C4281 -
            ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
             C135814 * C152622) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C4281) *
               C152627 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C4281 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152613 +
           ((C106736 * C152622 + (C106747 + C106746) * C152602 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C76067) *
                C152165 * C152326 -
            ((C105752 + C105753) * C76067 + C106349 * C152602 +
             C104043 * C152622) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C4281 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152326 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C4281 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C96198 * C152622 + (C96541 + C96540) * C152602 +
            (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
             C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                C76067) *
               C152165 * C152326 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152635 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152632 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152621 -
           ((C137767 + C137768) * C76067 + (C108692 + C108693) * C152602 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C152622) *
               C152165 * C152599) *
              C152221 * C3415 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152632 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152635 -
           ((C106086 + C106087) * C76067 + C108153 * C152602 +
            (C95785 + C95784) * C152622) *
               C152165 * C152621 +
           ((C98957 + C98956) * C152622 + (C108421 + C108420) * C152602 +
            (C95117 * C10053 + C108686 + C108686 + C95115 * C10059 +
             C95119 * C26242 + C108687 + C108687 + C152461 * C26246) *
                C76067) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152322 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152329 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C4953) *
              C152221 * C152198 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152329 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152322 -
           ((C106086 + C106087) * C76067 + C108153 * C152602 +
            (C95785 + C95784) * C152622) *
               C152165 * C4953) *
              C152221 * C152207 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152322 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C152329 +
           (C95793 * C152622 + (C98739 + C98738) * C152602 +
            (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
             C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                C76067) *
               C152165 * C4953) *
              C152221 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C4281 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152326 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C4281 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C96198 * C152622 + (C96541 + C96540) * C152602 +
            (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
             C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                C76067) *
               C152165 * C152326 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C4281 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C152627 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             C136506 * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C4281) *
               C152613 +
           ((C134345 * C152622 + (C105750 + C105751) * C152602 +
             C135583 * C76067) *
                C152165 * C4281 -
            ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
             C135814 * C152622) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C4281) *
               C152627 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C4281 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152613 +
           ((C106736 * C152622 + (C106747 + C106746) * C152602 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C76067) *
                C152165 * C152326 -
            ((C105752 + C105753) * C76067 + C106349 * C152602 +
             C104043 * C152622) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152541 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152284) *
              C829 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152284 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C152541 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C95990 * C152622 + (C95489 + C95488) * C152602 +
            (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
             C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                C76067) *
               C152165 * C152239 * C152284 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C1823 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C1824 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152239 * C1825 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C152239 * C152593) *
              C152527 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C1824 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C1823 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C1825 +
           (C106348 * C152622 + (C105753 + C105752) * C152602 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C76067) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152542 -
            ((C106085 + C106084) * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C152541 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             (C107019 + C107018) * C76067) *
                C152165 * C152326 -
            ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152542) *
               C152541 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152542 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
                C152542 -
            ((C97656 + C97657) * C76067 + C105263 * C152602 +
             C95792 * C152622) *
                C152165 * C152326) *
               C152541 +
           ((C96542 * C152622 + (C97657 + C97656) * C152602 +
             (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
              C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                 C76067) *
                C152165 * C152326 -
            ((C97344 + C97345) * C76067 + C104051 * C152602 +
             C95490 * C152622) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152542 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C1823 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            C136506 * C76067) *
               C152165 * C152326 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152542) *
              C1824 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152542 -
           ((C136517 + C136518) * C76067 + (C107018 + C107019) * C152602 +
            C135814 * C152622) *
               C152165 * C152326) *
              C1825 +
          ((C136506 * C152622 + (C136518 + C136517) * C152602 +
            (C95117 * C25670 + C136511 + C136511 + C95115 * C25674 +
             C95119 * C32595 + C136512 + C136512 + C152461 * C32597) *
                C76067) *
               C152165 * C152326 -
           ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
            C135582 * C152622) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152627 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152613 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            (C105755 + C105754) * C76067) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152613 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152627 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C152627 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152613 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + (C104063 + C104062) * C76067) *
              C152165 * C152239 * C152221 * C129 -
          (C104043 * C76067 + C104044 * C152602 + (C95177 + C95176) * C152622) *
              C152165 * C152239 * C152221 * C130 +
          (C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
              C152239 * C152221 * C131 -
          ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
              C152165 * C152239 * C152221 * C132 +
          (C95188 * C152622 + (C96003 + C96002) * C152602 +
           (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
            C95453 + C95453 + C152461 * C2047) *
               C76067) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152628 -
           ((C106085 + C106084) * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152615 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + (C106089 + C106088) * C76067) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152615 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152628 -
           ((C106086 + C106087) * C76067 + C108153 * C152602 +
            (C95785 + C95784) * C152622) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152628 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C152615 +
           (C95793 * C152622 + (C98739 + C98738) * C152602 +
            (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
             C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                C76067) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C1373 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C1374 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            (C105755 + C105754) * C76067) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C1374 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C1373 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C1373 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C1374 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + C134345 * C76067) *
              C152165 * C152239 * C1461 -
          (C135582 * C76067 + (C104062 + C104063) * C152602 +
           (C104061 + C104060) * C152622) *
              C152165 * C152239 * C1462 +
          (C134345 * C152622 + (C105750 + C105751) * C152602 +
           C135583 * C76067) *
              C152165 * C152239 * C1463 -
          ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
           C135582 * C152622) *
              C152165 * C152239 * C1464 +
          (C135583 * C152622 + (C135595 + C135594) * C152602 +
           (C95117 * C24727 + C135588 + C135588 + C95115 * C24731 +
            C95119 * C33058 + C135589 + C135589 + C152461 * C33060) *
               C76067) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152628 -
           (C135814 * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152615 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152622 +
            (C106082 + C106083) * C152602 + C135815 * C76067) *
               C152165 * C152586) *
              C1373 +
          (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
            (C107019 + C107018) * C76067) *
               C152165 * C152615 -
           (C135582 * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152628 -
           ((C135826 + C135827) * C76067 + (C106088 + C106089) * C152602 +
            (C106083 + C106082) * C152622) *
               C152165 * C152586) *
              C1374 +
          ((C134345 * C152622 + (C105750 + C105751) * C152602 +
            C135583 * C76067) *
               C152165 * C152628 -
           ((C95119 * C24963 + C107011 + C107011 + C152461 * C24967 +
             C95117 * C8769 + C107010 + C107010 + C95115 * C8775) *
                C76067 +
            (C107018 + C107019) * C152602 + C135814 * C152622) *
               C152165 * C152615 +
           (C135815 * C152622 + (C135827 + C135826) * C152602 +
            (C95117 * C24963 + C135820 + C135820 + C95115 * C24967 +
             C95119 * C33899 + C135821 + C135821 + C152461 * C33901) *
                C76067) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152542 -
           ((C106085 + C106084) * C76067 + (C105268 + C105269) * C152602 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152622) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C95783 + C95782) * C152622 + C105262 * C152602 +
            C106736 * C76067) *
               C152165 * C152326 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152542 -
           ((C97656 + C97657) * C76067 + C105263 * C152602 + C95792 * C152622) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C96198 * C152622 + (C96541 + C96540) * C152602 +
            (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
             C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                C76067) *
               C152165 * C152326 -
           ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152622 +
             (C104060 + C104061) * C152602 + C134345 * C76067) *
                C152165 * C152542 -
            (C135814 * C76067 + (C105268 + C105269) * C152602 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152622) *
                C152165 * C152326) *
               C1373 +
           (((C105269 + C105268) * C152622 + (C106084 + C106085) * C152602 +
             (C107019 + C107018) * C76067) *
                C152165 * C152326 -
            (C135582 * C76067 + (C104062 + C104063) * C152602 +
             (C104061 + C104060) * C152622) *
                C152165 * C152542) *
               C1374 +
           ((C134345 * C152622 + (C105750 + C105751) * C152602 +
             C135583 * C76067) *
                C152165 * C152542 -
            ((C95119 * C24963 + C107011 + C107011 + C152461 * C24967 +
              C95117 * C8769 + C107010 + C107010 + C95115 * C8775) *
                 C76067 +
             (C107018 + C107019) * C152602 + C135814 * C152622) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C95783 + C95782) * C152622 + C105262 * C152602 +
             C106736 * C76067) *
                C152165 * C152326 -
            (C104043 * C76067 + C104044 * C152602 +
             (C95177 + C95176) * C152622) *
                C152165 * C152542) *
               C1373 +
           ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
                C152165 * C152542 -
            ((C106746 + C106747) * C76067 + C106741 * C152602 +
             C105257 * C152622) *
                C152165 * C152326) *
               C1374 +
           ((C106736 * C152622 + (C106747 + C106746) * C152602 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C76067) *
                C152165 * C152326 -
            ((C105752 + C105753) * C76067 + C106349 * C152602 +
             C104043 * C152622) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + (C104063 + C104062) * C76067) *
              C152165 * C152239 * C152221 * C129 -
          (C104043 * C76067 + C104044 * C152602 + (C95177 + C95176) * C152622) *
              C152165 * C152239 * C152221 * C130 +
          (C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
              C152239 * C152221 * C131 -
          ((C95488 + C95489) * C76067 + C104612 * C152602 + C95187 * C152622) *
              C152165 * C152239 * C152221 * C132 +
          (C95188 * C152622 + (C96003 + C96002) * C152602 +
           (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
            C95453 + C95453 + C152461 * C2047) *
               C76067) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C152627 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C152613 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            (C105755 + C105754) * C76067) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C152613 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C152627 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C152627 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C152613 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152622 +
            (C104060 + C104061) * C152602 + C134345 * C76067) *
               C152165 * C152239 * C1373 -
           ((C105751 + C105750) * C76067 + (C104062 + C104063) * C152602 +
            (C104061 + C104060) * C152622) *
               C152165 * C152239 * C1374 +
           (C134345 * C152622 + (C105750 + C105751) * C152602 +
            (C105755 + C105754) * C76067) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C104042 * C152622 + C104049 * C152602 + C106348 * C76067) *
               C152165 * C152239 * C1374 -
           (C104043 * C76067 + C104044 * C152602 +
            (C95177 + C95176) * C152622) *
               C152165 * C152239 * C1373 -
           ((C105752 + C105753) * C76067 + C106349 * C152602 +
            C104043 * C152622) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C95186 * C152622 + C104050 * C152602 + C95491 * C76067) * C152165 *
               C152239 * C1373 -
           ((C97344 + C97345) * C76067 + C104051 * C152602 + C95490 * C152622) *
               C152165 * C152239 * C1374 +
           (C95491 * C152622 + (C97345 + C97344) * C152602 +
            (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
             C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                C76067) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152622 +
           (C104060 + C104061) * C152602 + C134345 * C76067) *
              C152165 * C152239 * C1461 -
          (C135582 * C76067 + (C104062 + C104063) * C152602 +
           (C104061 + C104060) * C152622) *
              C152165 * C152239 * C1462 +
          (C134345 * C152622 + (C105750 + C105751) * C152602 +
           C135583 * C76067) *
              C152165 * C152239 * C1463 -
          ((C135594 + C135595) * C76067 + (C105754 + C105755) * C152602 +
           C135582 * C152622) *
              C152165 * C152239 * C1464 +
          (C135583 * C152622 + (C135595 + C135594) * C152602 +
           (C95117 * C24727 + C135588 + C135588 + C95115 * C24731 +
            C95119 * C33058 + C135589 + C135589 + C152461 * C33060) *
               C76067) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[125] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C152280 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C152287 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C143845 + C143846 + C143847) * C152435) *
                        C152165 * C152239 * C3759) *
                       C152198 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C152287 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C152280 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C3759) *
                       C152207 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C152280 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C152287 +
                    ((C115096 + C115095 + C115094) * C67854 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152435) *
                        C152165 * C152239 * C3759) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152542 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C152280 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152542) *
               C152287 +
           (((C142566 + C142565 + C142564) * C67854 +
             (C143845 + C143846 + C143847) * C152435) *
                C152165 * C152542 -
            ((C144810 + C144811 + C144812) * C152435 +
             (C144113 + C144112 + C144111) * C67854) *
                C152165 * C152326) *
               C3759) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152542) *
               C152280 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152542 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152287 +
           (((C117262 + C117261 + C117260) * C67854 +
             (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
              C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
              C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C116952 + C116953 + C116954) * C152435 +
             (C115090 + C115089 + C115088) * C67854) *
                C152165 * C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152239 * C152634 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152239 * C152630 +
           ((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C152239 * C152618 -
           ((C143848 + C143849 + C143850) * C152435 +
            (C143847 + C143846 + C143845) * C67854) *
               C152165 * C152239 * C152593) *
              C3415 +
          (((C115087 + C115086 + C115085) * C67854 +
            (C115088 + C115089 + C115090) * C152435) *
               C152165 * C152239 * C152630 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152239 * C152634 -
           ((C116952 + C116953 + C116954) * C152435 +
            (C115090 + C115089 + C115088) * C67854) *
               C152165 * C152239 * C152618 +
           ((C116954 + C116953 + C116952) * C67854 +
            (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
             C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
             C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
                C152435) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152239 * C3275 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152239 * C152284) *
              C152633 +
          (((C115087 + C115086 + C115085) * C67854 +
            (C115088 + C115089 + C115090) * C152435) *
               C152165 * C152239 * C152284 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152239 * C3275) *
              C152626 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C152239 * C3275 -
           ((C115094 + C115095 + C115096) * C152435 +
            (C115093 + C115092 + C115091) * C67854) *
               C152165 * C152239 * C152284) *
              C152611 +
          (((C115610 + C115609 + C115608) * C67854 +
            (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
             C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
             C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                C152435) *
               C152165 * C152239 * C152284 -
           ((C115608 + C115609 + C115610) * C152435 +
            (C114791 + C114790 + C114789) * C67854) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152628 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152615 +
            ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
              C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
              C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                 C67854 +
             (C144108 + C144109 + C144110) * C152435) *
                C152165 * C152586) *
               C3275 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152615 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152628 -
            ((C144114 + C144115 + C144116) * C152435 +
             (C144110 + C144109 + C144108) * C67854) *
                C152165 * C152586) *
               C152284) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152615 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152628 -
            ((C118338 + C118339 + C118340) * C152435 +
             (C115392 + C115391 + C115390) * C67854) *
                C152165 * C152586) *
               C3275 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152628 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152615 +
            ((C118340 + C118339 + C118338) * C67854 +
             (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
              C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
              C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                 C152435) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152542 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C3275 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152542) *
               C152284) *
              C152198 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152542) *
               C3275 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152542 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          ((((C114788 + C114787 + C114786) * C67854 +
             (C115091 + C115092 + C115093) * C152435) *
                C152165 * C152542 -
            ((C116152 + C116153 + C116154) * C152435 +
             (C115395 + C115394 + C115393) * C67854) *
                C152165 * C152326) *
               C3275 +
           (((C116154 + C116153 + C116152) * C67854 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C115094 + C115095 + C115096) * C152435 +
             (C115093 + C115092 + C115091) * C67854) *
                C152165 * C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C3275 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C152284) *
                       C152633 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C152284 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C3275) *
                       C152626 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C3275 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C152284) *
                       C152611 +
                   (((C115610 + C115609 + C115608) * C67854 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152435) *
                        C152165 * C152239 * C152284 -
                    ((C115608 + C115609 + C115610) * C152435 +
                     (C114791 + C114790 + C114789) * C67854) *
                        C152165 * C152239 * C3275) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C152634 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C152630 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C143845 + C143846 + C143847) * C152435) *
                        C152165 * C152239 * C152618 -
                    ((C143848 + C143849 + C143850) * C152435 +
                     (C143847 + C143846 + C143845) * C67854) *
                        C152165 * C152239 * C152593) *
                       C3415 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C152630 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C152634 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C152618 +
                    ((C116954 + C116953 + C116952) * C67854 +
                     (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
                      C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
                      C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
                         C152435) *
                        C152165 * C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C4281 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C152280 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C4281) *
               C152287 +
           (((C142566 + C142565 + C142564) * C67854 +
             (C143845 + C143846 + C143847) * C152435) *
                C152165 * C4281 -
            ((C144810 + C144811 + C144812) * C152435 +
             (C144113 + C144112 + C144111) * C67854) *
                C152165 * C152326) *
               C3759) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C4281) *
               C152280 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C4281 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152287 +
           (((C117262 + C117261 + C117260) * C67854 +
             (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
              C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
              C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C116952 + C116953 + C116954) * C152435 +
             (C115090 + C115089 + C115088) * C67854) *
                C152165 * C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152322 -
                    ((C143475 + C143476 + C143477) * C152435 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C67854) *
                        C152165 * C152329 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C67854 +
                     (C144108 + C144109 + C144110) * C152435) *
                        C152165 * C4953) *
                       C152280 +
                   (((C143477 + C143476 + C143475) * C67854 +
                     (C144111 + C144112 + C144113) * C152435) *
                        C152165 * C152329 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152322 -
                    ((C144114 + C144115 + C144116) * C152435 +
                     (C144110 + C144109 + C144108) * C67854) *
                        C152165 * C4953) *
                       C152287 +
                   (((C142566 + C142565 + C142564) * C67854 +
                     (C143845 + C143846 + C143847) * C152435) *
                        C152165 * C152322 -
                    ((C144810 + C144811 + C144812) * C152435 +
                     (C144113 + C144112 + C144111) * C67854) *
                        C152165 * C152329 +
                    ((C144116 + C144115 + C144114) * C67854 +
                     (C114710 * C8036 + C144087 + C144087 + C152623 * C8042 +
                      C114712 * C26938 + C144088 + C144088 + C152605 * C26942 +
                      C114714 * C33441 + C144089 + C144089 + C114709 * C33443) *
                         C152435) *
                        C152165 * C4953) *
                       C3759) *
                  C152193) /
                 (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C4281 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C152634 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C152326 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C4281) *
              C152630 +
          (((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C4281 -
           ((C144810 + C144811 + C144812) * C152435 +
            (C144113 + C144112 + C144111) * C67854) *
               C152165 * C152326) *
              C152618 +
          (((C144812 + C144811 + C144810) * C67854 +
            (C114710 * C8769 + C144801 + C144801 + C152623 * C8775 +
             C114712 * C24963 + C144802 + C144802 + C152605 * C24967 +
             C114714 * C33899 + C144803 + C144803 + C114709 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C143848 + C143849 + C143850) * C152435 +
            (C143847 + C143846 + C143845) * C67854) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C4281 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C3275 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C4281) *
               C3275 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C4281 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          ((((C114788 + C114787 + C114786) * C67854 +
             (C115091 + C115092 + C115093) * C152435) *
                C152165 * C4281 -
            ((C116152 + C116153 + C116154) * C152435 +
             (C115395 + C115394 + C115393) * C67854) *
                C152165 * C152326) *
               C3275 +
           (((C116154 + C116153 + C116152) * C67854 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C115094 + C115095 + C115096) * C152435 +
             (C115093 + C115092 + C115091) * C67854) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152635 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152632 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C144108 + C144109 + C144110) * C152435) *
               C152165 * C152621 -
           ((C146067 + C146068 + C146069) * C152435 +
            (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
             C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
             C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                C67854) *
               C152165 * C152599) *
              C3275 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C152632 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152635 -
           ((C144114 + C144115 + C144116) * C152435 +
            (C144110 + C144109 + C144108) * C67854) *
               C152165 * C152621 +
           ((C146069 + C146068 + C146067) * C67854 +
            (C114710 * C10052 + C146058 + C146058 + C152623 * C10058 +
             C114712 * C26241 + C146059 + C146059 + C152605 * C26245 +
             C114714 * C40068 + C146060 + C146060 + C114709 * C40072) *
                C152435) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152322 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152329 +
            ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
              C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
              C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                 C67854 +
             (C144108 + C144109 + C144110) * C152435) *
                C152165 * C4953) *
               C3275 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152329 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152322 -
            ((C144114 + C144115 + C144116) * C152435 +
             (C144110 + C144109 + C144108) * C67854) *
                C152165 * C4953) *
               C152284) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152329 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152322 -
            ((C118338 + C118339 + C118340) * C152435 +
             (C115392 + C115391 + C115390) * C67854) *
                C152165 * C4953) *
               C3275 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152322 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152329 +
            ((C118340 + C118339 + C118338) * C67854 +
             (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
              C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
              C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                 C152435) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C4281 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C3275 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C4281) *
               C3275 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C4281 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          ((((C114788 + C114787 + C114786) * C67854 +
             (C115091 + C115092 + C115093) * C152435) *
                C152165 * C4281 -
            ((C116152 + C116153 + C116154) * C152435 +
             (C115395 + C115394 + C115393) * C67854) *
                C152165 * C152326) *
               C3275 +
           (((C116154 + C116153 + C116152) * C67854 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C115094 + C115095 + C115096) * C152435 +
             (C115093 + C115092 + C115091) * C67854) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C4281 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C152634 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C152326 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C4281) *
              C152630 +
          (((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C4281 -
           ((C144810 + C144811 + C144812) * C152435 +
            (C144113 + C144112 + C144111) * C67854) *
               C152165 * C152326) *
              C152618 +
          (((C144812 + C144811 + C144810) * C67854 +
            (C114710 * C8769 + C144801 + C144801 + C152623 * C8775 +
             C114712 * C24963 + C144802 + C144802 + C152605 * C24967 +
             C114714 * C33899 + C144803 + C144803 + C114709 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C143848 + C143849 + C143850) * C152435 +
            (C143847 + C143846 + C143845) * C67854) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152239 * C1823 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152239 * C1824 +
           ((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C152239 * C1825 -
           ((C143848 + C143849 + C143850) * C152435 +
            (C143847 + C143846 + C143845) * C67854) *
               C152165 * C152239 * C152593) *
              C152527 +
          (((C115087 + C115086 + C115085) * C67854 +
            (C115088 + C115089 + C115090) * C152435) *
               C152165 * C152239 * C1824 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152239 * C1823 -
           ((C116952 + C116953 + C116954) * C152435 +
            (C115090 + C115089 + C115088) * C67854) *
               C152165 * C152239 * C1825 +
           ((C116954 + C116953 + C116952) * C67854 +
            (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
             C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
             C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
                C152435) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152239 * C152541 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152239 * C152284) *
              C829 +
          (((C115087 + C115086 + C115085) * C67854 +
            (C115088 + C115089 + C115090) * C152435) *
               C152165 * C152239 * C152284 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152239 * C152541) *
              C830 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C152239 * C152541 -
           ((C115094 + C115095 + C115096) * C152435 +
            (C115093 + C115092 + C115091) * C67854) *
               C152165 * C152239 * C152284) *
              C831 +
          (((C115610 + C115609 + C115608) * C67854 +
            (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
             C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
             C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                C152435) *
               C152165 * C152239 * C152284 -
           ((C115608 + C115609 + C115610) * C152435 +
            (C114791 + C114790 + C114789) * C67854) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C2359 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C2360 +
            ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
              C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
              C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                 C67854 +
             (C144108 + C144109 + C144110) * C152435) *
                C152165 * C152586) *
               C152541 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C2360 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C2359 -
            ((C144114 + C144115 + C144116) * C152435 +
             (C144110 + C144109 + C144108) * C67854) *
                C152165 * C152586) *
               C152284) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C2360 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C2359 -
            ((C118338 + C118339 + C118340) * C152435 +
             (C115392 + C115391 + C115390) * C67854) *
                C152165 * C152586) *
               C152541 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C2359 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C2360 +
            ((C118340 + C118339 + C118338) * C67854 +
             (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
              C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
              C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                 C152435) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152542 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C1823 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C152326 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152542) *
              C1824 +
          (((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C152542 -
           ((C144810 + C144811 + C144812) * C152435 +
            (C144113 + C144112 + C144111) * C67854) *
               C152165 * C152326) *
              C1825 +
          (((C144812 + C144811 + C144810) * C67854 +
            (C114710 * C8769 + C144801 + C144801 + C152623 * C8775 +
             C114712 * C24963 + C144802 + C144802 + C152605 * C24967 +
             C114714 * C33899 + C144803 + C144803 + C114709 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C143848 + C143849 + C143850) * C152435 +
            (C143847 + C143846 + C143845) * C67854) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152542 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C152541 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C114710 * C1652 + C116736 + C116736 + C152623 * C1676 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114714 * C10052 + C116734 + C116734 + C114709 * C10058) *
                 C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152542) *
               C152541 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152542 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152284) *
              C354 +
          ((((C114788 + C114787 + C114786) * C67854 +
             (C115091 + C115092 + C115093) * C152435) *
                C152165 * C152542 -
            ((C116152 + C116153 + C116154) * C152435 +
             (C115395 + C115394 + C115393) * C67854) *
                C152165 * C152326) *
               C152541 +
           (((C116154 + C116153 + C116152) * C67854 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C115094 + C115095 + C115096) * C152435 +
             (C115093 + C115092 + C115091) * C67854) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C2973 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C2974 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C144108 + C144109 + C144110) * C152435) *
               C152165 * C2975 -
           ((C146067 + C146068 + C146069) * C152435 +
            (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
             C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
             C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                C67854) *
               C152165 * C152599) *
              C152541 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C2974 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C2973 -
           ((C144114 + C144115 + C144116) * C152435 +
            (C144110 + C144109 + C144108) * C67854) *
               C152165 * C2975 +
           ((C146069 + C146068 + C146067) * C67854 +
            (C114710 * C10052 + C146058 + C146058 + C152623 * C10058 +
             C114712 * C26241 + C146059 + C146059 + C152605 * C26245 +
             C114714 * C40068 + C146060 + C146060 + C114709 * C40072) *
                C152435) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                   C67854 +
               (C114710 * C359 + C115024 + C115024 + C152623 * C383 +
                C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                C114714 * C1648 + C115022 + C115022 + C114709 * C1672) *
                   C152435) *
                  C152165 * C152239 * C152221 * C129 -
              ((C115085 + C115086 + C115087) * C152435 +
               (C114785 + C114784 + C114783) * C67854) *
                  C152165 * C152239 * C152221 * C130 +
              ((C114788 + C114787 + C114786) * C67854 +
               (C115091 + C115092 + C115093) * C152435) *
                  C152165 * C152239 * C152221 * C131 -
              ((C115608 + C115609 + C115610) * C152435 +
               (C114791 + C114790 + C114789) * C67854) *
                  C152165 * C152239 * C152221 * C132 +
              ((C114794 + C114793 + C114792) * C67854 +
               (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                   C152435) *
                  C152165 * C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                 C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                 C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                    C67854 +
                (C142561 + C142562 + C142563) * C152435) *
                   C152165 * C152239 * C152627 -
               ((C142564 + C142565 + C142566) * C152435 +
                (C142563 + C142562 + C142561) * C67854) *
                   C152165 * C152239 * C152613 +
               ((C142566 + C142565 + C142564) * C67854 +
                (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
                 C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                 C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                    C152435) *
                   C152165 * C152239 * C152583) *
                  C353 +
              (((C115087 + C115086 + C115085) * C67854 +
                (C115088 + C115089 + C115090) * C152435) *
                   C152165 * C152239 * C152613 -
               ((C115085 + C115086 + C115087) * C152435 +
                (C114785 + C114784 + C114783) * C67854) *
                   C152165 * C152239 * C152627 -
               ((C116952 + C116953 + C116954) * C152435 +
                (C115090 + C115089 + C115088) * C67854) *
                   C152165 * C152239 * C152583) *
                  C354 +
              (((C114788 + C114787 + C114786) * C67854 +
                (C115091 + C115092 + C115093) * C152435) *
                   C152165 * C152239 * C152627 -
               ((C115094 + C115095 + C115096) * C152435 +
                (C115093 + C115092 + C115091) * C67854) *
                   C152165 * C152239 * C152613 +
               ((C115096 + C115095 + C115094) * C67854 +
                (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                 C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                 C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                    C152435) *
                   C152165 * C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152628 -
           ((C114714 * C3129 + C116115 + C116115 + C114709 * C3137 +
             C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
             C114710 * C1179 + C116113 + C116113 + C152623 * C1191) *
                C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152615 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C114710 * C1648 + C116730 + C116730 + C152623 * C1672 +
             C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
             C114714 * C9344 + C116728 + C116728 + C114709 * C9350) *
                C152435) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C152615 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152628 -
           ((C118338 + C118339 + C118340) * C152435 +
            (C115392 + C115391 + C115390) * C67854) *
               C152165 * C152586) *
              C152221 * C354 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C152628 -
           ((C116152 + C116153 + C116154) * C152435 +
            (C115395 + C115394 + C115393) * C67854) *
               C152165 * C152615 +
           ((C115398 + C115397 + C115396) * C67854 +
            (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
             C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
             C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                C152435) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152239 * C1373 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152239 * C1374 +
           ((C142566 + C142565 + C142564) * C67854 +
            (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
             C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
             C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C115087 + C115086 + C115085) * C67854 +
            (C115088 + C115089 + C115090) * C152435) *
               C152165 * C152239 * C1374 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152239 * C1373 -
           ((C116952 + C116953 + C116954) * C152435 +
            (C115090 + C115089 + C115088) * C67854) *
               C152165 * C152239 * C152583) *
              C152609 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C152239 * C1373 -
           ((C115094 + C115095 + C115096) * C152435 +
            (C115093 + C115092 + C115091) * C67854) *
               C152165 * C152239 * C1374 +
           ((C115096 + C115095 + C115094) * C67854 +
            (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
             C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
             C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
            C114712 * C604 + C114718 + C114718 + C152605 * C628 +
            C114714 * C605 + C114719 + C114719 + C114709 * C629) *
               C67854 +
           (C142561 + C142562 + C142563) * C152435) *
              C152165 * C152239 * C1461 -
          ((C142564 + C142565 + C142566) * C152435 +
           (C142563 + C142562 + C142561) * C67854) *
              C152165 * C152239 * C1462 +
          ((C142566 + C142565 + C142564) * C67854 +
           (C143845 + C143846 + C143847) * C152435) *
              C152165 * C152239 * C1463 -
          ((C143848 + C143849 + C143850) * C152435 +
           (C143847 + C143846 + C143845) * C67854) *
              C152165 * C152239 * C1464 +
          ((C143850 + C143849 + C143848) * C67854 +
           (C114710 * C7786 + C143830 + C143830 + C152623 * C7792 +
            C114712 * C25670 + C143831 + C143831 + C152605 * C25674 +
            C114714 * C32595 + C143832 + C143832 + C114709 * C32597) *
               C152435) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152628 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152615 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C144108 + C144109 + C144110) * C152435) *
               C152165 * C152586) *
              C1373 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C152615 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152628 -
           ((C144114 + C144115 + C144116) * C152435 +
            (C144110 + C144109 + C144108) * C67854) *
               C152165 * C152586) *
              C1374 +
          (((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C152628 -
           ((C114714 * C26938 + C117459 + C117459 + C114709 * C26942 +
             C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
             C114710 * C2197 + C117457 + C117457 + C152623 * C2205) *
                C152435 +
            (C144113 + C144112 + C144111) * C67854) *
               C152165 * C152615 +
           ((C144116 + C144115 + C144114) * C67854 +
            (C114710 * C8036 + C144087 + C144087 + C152623 * C8042 +
             C114712 * C26938 + C144088 + C144088 + C152605 * C26942 +
             C114714 * C33441 + C144089 + C144089 + C114709 * C33443) *
                C152435) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C2359 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C2360 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C144108 + C144109 + C144110) * C152435) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C2360 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C2359 -
           ((C118338 + C118339 + C118340) * C152435 +
            (C115392 + C115391 + C115390) * C67854) *
               C152165 * C152586) *
              C152221 * C152609 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C2359 -
           ((C116152 + C116153 + C116154) * C152435 +
            (C115395 + C115394 + C115393) * C67854) *
               C152165 * C2360 +
           ((C115398 + C115397 + C115396) * C67854 +
            (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
             C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
             C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                C152435) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C2359 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C2360 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C144108 + C144109 + C144110) * C152435) *
               C152165 * C152586) *
              C152627 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C2360 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C2359 -
           ((C144114 + C144115 + C144116) * C152435 +
            (C144110 + C144109 + C144108) * C67854) *
               C152165 * C152586) *
              C152613 +
          (((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C2359 -
           ((C144810 + C144811 + C144812) * C152435 +
            (C144113 + C144112 + C144111) * C67854) *
               C152165 * C2360 +
           ((C144116 + C144115 + C144114) * C67854 +
            (C114710 * C8036 + C144087 + C144087 + C152623 * C8042 +
             C114712 * C26938 + C144088 + C144088 + C152605 * C26942 +
             C114714 * C33441 + C144089 + C144089 + C114709 * C33443) *
                C152435) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
            C114712 * C604 + C114718 + C114718 + C152605 * C628 +
            C114714 * C605 + C114719 + C114719 + C114709 * C629) *
               C67854 +
           (C142561 + C142562 + C142563) * C152435) *
              C152165 * C2590 -
          ((C143475 + C143476 + C143477) * C152435 +
           (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
            C114712 * C605 + C115325 + C115325 + C152605 * C629 +
            C114710 * C604 + C115326 + C115326 + C152623 * C628) *
               C67854) *
              C152165 * C2591 +
          ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
            C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
            C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
               C67854 +
           (C144108 + C144109 + C144110) * C152435) *
              C152165 * C2592 -
          ((C114714 * C40067 + C118749 + C118749 + C114709 * C40071 +
            C114712 * C9344 + C118748 + C118748 + C152605 * C9350 +
            C114710 * C3129 + C118747 + C118747 + C152623 * C3137) *
               C152435 +
           (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
            C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
            C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
               C67854) *
              C152165 * C2593 +
          ((C114710 * C2599 + C118027 + C118027 + C152623 * C2615 +
            C114712 * C17921 + C118028 + C118028 + C152605 * C17927 +
            C114714 * C48656 + C118029 + C118029 + C114709 * C48660) *
               C67854 +
           (C114710 * C9344 + C145371 + C145371 + C152623 * C9350 +
            C114712 * C40067 + C145372 + C145372 + C152605 * C40071 +
            C114714 * C56999 + C145373 + C145373 + C114709 * C57001) *
               C152435) *
              C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152542 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C1373 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152542) *
               C1374 +
           (((C142566 + C142565 + C142564) * C67854 +
             (C143845 + C143846 + C143847) * C152435) *
                C152165 * C152542 -
            ((C114714 * C26938 + C117459 + C117459 + C114709 * C26942 +
              C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
              C114710 * C2197 + C117457 + C117457 + C152623 * C2205) *
                 C152435 +
             (C144113 + C144112 + C144111) * C67854) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152542) *
               C1373 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152542 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C1374 +
           (((C117262 + C117261 + C117260) * C67854 +
             (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
              C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
              C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C116952 + C116953 + C116954) * C152435 +
             (C115090 + C115089 + C115088) * C67854) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152542 -
           ((C114714 * C3129 + C116115 + C116115 + C114709 * C3137 +
             C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
             C114710 * C1179 + C116113 + C116113 + C152623 * C1191) *
                C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C152326 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152542) *
              C152221 * C830 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C152542 -
           ((C116152 + C116153 + C116154) * C152435 +
            (C115395 + C115394 + C115393) * C67854) *
               C152165 * C152326) *
              C152221 * C831 +
          (((C115822 + C115821 + C115820) * C67854 +
            (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
             C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
             C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C115608 + C115609 + C115610) * C152435 +
            (C114791 + C114790 + C114789) * C67854) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C2973 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C2974 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C144108 + C144109 + C144110) * C152435) *
               C152165 * C2975 -
           ((C114714 * C40067 + C118749 + C118749 + C114709 * C40071 +
             C114712 * C9344 + C118748 + C118748 + C152605 * C9350 +
             C114710 * C3129 + C118747 + C118747 + C152623 * C3137) *
                C152435 +
            (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
             C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
             C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                C67854) *
               C152165 * C152599) *
              C152221 * C152527 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C2974 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C2973 -
           ((C118338 + C118339 + C118340) * C152435 +
            (C115392 + C115391 + C115390) * C67854) *
               C152165 * C2975 +
           ((C118552 + C118551 + C118550) * C67854 +
            (C114710 * C3130 + C118750 + C118750 + C152623 * C3138 +
             C114712 * C9345 + C118751 + C118751 + C152605 * C9351 +
             C114714 * C49388 + C118752 + C118752 + C114709 * C49390) *
                C152435) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C152627 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C152613 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C353 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C152613 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C152627 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C152583) *
                       C354 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C152627 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C152613 +
                    ((C115096 + C115095 + C115094) * C67854 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C67854 +
                    (C114710 * C359 + C115024 + C115024 + C152623 * C383 +
                     C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                     C114714 * C1648 + C115022 + C115022 + C114709 * C1672) *
                        C152435) *
                       C152165 * C152239 * C152221 * C129 -
                   ((C115085 + C115086 + C115087) * C152435 +
                    (C114785 + C114784 + C114783) * C67854) *
                       C152165 * C152239 * C152221 * C130 +
                   ((C114788 + C114787 + C114786) * C67854 +
                    (C115091 + C115092 + C115093) * C152435) *
                       C152165 * C152239 * C152221 * C131 -
                   ((C115608 + C115609 + C115610) * C152435 +
                    (C114791 + C114790 + C114789) * C67854) *
                       C152165 * C152239 * C152221 * C132 +
                   ((C114794 + C114793 + C114792) * C67854 +
                    (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                     C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                     C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                        C152435) *
                       C152165 * C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C1373 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C1374 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152624 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C1374 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C1373 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C152583) *
                       C152609 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C1373 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C1374 +
                    ((C115096 + C115095 + C115094) * C67854 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C67854 +
                    (C142561 + C142562 + C142563) * C152435) *
                       C152165 * C152239 * C1461 -
                   ((C142564 + C142565 + C142566) * C152435 +
                    (C142563 + C142562 + C142561) * C67854) *
                       C152165 * C152239 * C1462 +
                   ((C142566 + C142565 + C142564) * C67854 +
                    (C143845 + C143846 + C143847) * C152435) *
                       C152165 * C152239 * C1463 -
                   ((C143848 + C143849 + C143850) * C152435 +
                    (C143847 + C143846 + C143845) * C67854) *
                       C152165 * C152239 * C1464 +
                   ((C143850 + C143849 + C143848) * C67854 +
                    (C114710 * C7786 + C143830 + C143830 + C152623 * C7792 +
                     C114712 * C25670 + C143831 + C143831 + C152605 * C25674 +
                     C114714 * C32595 + C143832 + C143832 + C114709 * C32597) *
                        C152435) *
                       C152165 * C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C2359 -
                    ((C143475 + C143476 + C143477) * C152435 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C67854) *
                        C152165 * C2360 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C67854 +
                     (C144108 + C144109 + C144110) * C152435) *
                        C152165 * C152586) *
                       C152221 * C152624 +
                   (((C115389 + C115388 + C115387) * C67854 +
                     (C116149 + C116150 + C116151) * C152435) *
                        C152165 * C2360 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C2359 -
                    ((C118338 + C118339 + C118340) * C152435 +
                     (C115392 + C115391 + C115390) * C67854) *
                        C152165 * C152586) *
                       C152221 * C152609 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C2359 -
                    ((C116152 + C116153 + C116154) * C152435 +
                     (C115395 + C115394 + C115393) * C67854) *
                        C152165 * C2360 +
                    ((C115398 + C115397 + C115396) * C67854 +
                     (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
                      C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
                      C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                         C152435) *
                        C152165 * C152586) *
                       C152221 * C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C2359 -
                    ((C143475 + C143476 + C143477) * C152435 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C67854) *
                        C152165 * C2360 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C67854 +
                     (C144108 + C144109 + C144110) * C152435) *
                        C152165 * C152586) *
                       C152627 +
                   (((C143477 + C143476 + C143475) * C67854 +
                     (C144111 + C144112 + C144113) * C152435) *
                        C152165 * C2360 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C2359 -
                    ((C144114 + C144115 + C144116) * C152435 +
                     (C144110 + C144109 + C144108) * C67854) *
                        C152165 * C152586) *
                       C152613 +
                   (((C142566 + C142565 + C142564) * C67854 +
                     (C143845 + C143846 + C143847) * C152435) *
                        C152165 * C2359 -
                    ((C144810 + C144811 + C144812) * C152435 +
                     (C144113 + C144112 + C144111) * C67854) *
                        C152165 * C2360 +
                    ((C144116 + C144115 + C144114) * C67854 +
                     (C114710 * C8036 + C144087 + C144087 + C152623 * C8042 +
                      C114712 * C26938 + C144088 + C144088 + C152605 * C26942 +
                      C114714 * C33441 + C144089 + C144089 + C114709 * C33443) *
                         C152435) *
                        C152165 * C152586) *
                       C152583) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C4281 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C152541 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C4281) *
               C152284) *
              C152198 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C4281) *
               C152541 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C4281 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          ((((C114788 + C114787 + C114786) * C67854 +
             (C115091 + C115092 + C115093) * C152435) *
                C152165 * C4281 -
            ((C116152 + C116153 + C116154) * C152435 +
             (C115395 + C115394 + C115393) * C67854) *
                C152165 * C152326) *
               C152541 +
           (((C116154 + C116153 + C116152) * C67854 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C115094 + C115095 + C115096) * C152435 +
             (C115093 + C115092 + C115091) * C67854) *
                C152165 * C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152322 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152329 +
            ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
              C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
              C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                 C67854 +
             (C144108 + C144109 + C144110) * C152435) *
                C152165 * C4953) *
               C152541 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152329 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152322 -
            ((C144114 + C144115 + C144116) * C152435 +
             (C144110 + C144109 + C144108) * C67854) *
                C152165 * C4953) *
               C152284) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152329 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152322 -
            ((C118338 + C118339 + C118340) * C152435 +
             (C115392 + C115391 + C115390) * C67854) *
                C152165 * C4953) *
               C152541 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152322 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152329 +
            ((C118340 + C118339 + C118338) * C67854 +
             (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
              C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
              C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                 C152435) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C4281 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C152627 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C4281) *
               C152613 +
           (((C142566 + C142565 + C142564) * C67854 +
             (C143845 + C143846 + C143847) * C152435) *
                C152165 * C4281 -
            ((C144810 + C144811 + C144812) * C152435 +
             (C144113 + C144112 + C144111) * C67854) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C4281) *
               C152627 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C4281 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152613 +
           (((C117262 + C117261 + C117260) * C67854 +
             (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
              C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
              C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C116952 + C116953 + C116954) * C152435 +
             (C115090 + C115089 + C115088) * C67854) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C4281 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C152326 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C4281) *
              C152221 * C152626 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C4281 -
           ((C116152 + C116153 + C116154) * C152435 +
            (C115395 + C115394 + C115393) * C67854) *
               C152165 * C152326) *
              C152221 * C152611 +
          (((C115822 + C115821 + C115820) * C67854 +
            (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
             C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
             C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C115608 + C115609 + C115610) * C152435 +
            (C114791 + C114790 + C114789) * C67854) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152635 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152632 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C67854 +
            (C144108 + C144109 + C144110) * C152435) *
               C152165 * C152621 -
           ((C146067 + C146068 + C146069) * C152435 +
            (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
             C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
             C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                C67854) *
               C152165 * C152599) *
              C152221 * C3415 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C152632 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152635 -
           ((C118338 + C118339 + C118340) * C152435 +
            (C115392 + C115391 + C115390) * C67854) *
               C152165 * C152621 +
           ((C118552 + C118551 + C118550) * C67854 +
            (C114710 * C3130 + C118750 + C118750 + C152623 * C3138 +
             C114712 * C9345 + C118751 + C118751 + C152605 * C9351 +
             C114714 * C49388 + C118752 + C118752 + C114709 * C49390) *
                C152435) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152322 -
                    ((C143475 + C143476 + C143477) * C152435 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C67854) *
                        C152165 * C152329 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C67854 +
                     (C144108 + C144109 + C144110) * C152435) *
                        C152165 * C4953) *
                       C152221 * C152198 +
                   (((C115389 + C115388 + C115387) * C67854 +
                     (C116149 + C116150 + C116151) * C152435) *
                        C152165 * C152329 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152322 -
                    ((C118338 + C118339 + C118340) * C152435 +
                     (C115392 + C115391 + C115390) * C67854) *
                        C152165 * C4953) *
                       C152221 * C152207 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152322 -
                    ((C116152 + C116153 + C116154) * C152435 +
                     (C115395 + C115394 + C115393) * C67854) *
                        C152165 * C152329 +
                    ((C115398 + C115397 + C115396) * C67854 +
                     (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
                      C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
                      C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                         C152435) *
                        C152165 * C4953) *
                       C152221 * C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C4281 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C152326 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C4281) *
              C152221 * C152626 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C4281 -
           ((C116152 + C116153 + C116154) * C152435 +
            (C115395 + C115394 + C115393) * C67854) *
               C152165 * C152326) *
              C152221 * C152611 +
          (((C115822 + C115821 + C115820) * C67854 +
            (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
             C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
             C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C115608 + C115609 + C115610) * C152435 +
            (C114791 + C114790 + C114789) * C67854) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C4281 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C152627 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C4281) *
               C152613 +
           (((C142566 + C142565 + C142564) * C67854 +
             (C143845 + C143846 + C143847) * C152435) *
                C152165 * C4281 -
            ((C144810 + C144811 + C144812) * C152435 +
             (C144113 + C144112 + C144111) * C67854) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C4281) *
               C152627 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C4281 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152613 +
           (((C117262 + C117261 + C117260) * C67854 +
             (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
              C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
              C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C116952 + C116953 + C116954) * C152435 +
             (C115090 + C115089 + C115088) * C67854) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C152541 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C152284) *
                       C829 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C152284 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C152541) *
                       C830 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C152541 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C152284) *
                       C831 +
                   (((C115610 + C115609 + C115608) * C67854 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152435) *
                        C152165 * C152239 * C152284 -
                    ((C115608 + C115609 + C115610) * C152435 +
                     (C114791 + C114790 + C114789) * C67854) *
                        C152165 * C152239 * C152541) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C1823 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C1824 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C143845 + C143846 + C143847) * C152435) *
                        C152165 * C152239 * C1825 -
                    ((C143848 + C143849 + C143850) * C152435 +
                     (C143847 + C143846 + C143845) * C67854) *
                        C152165 * C152239 * C152593) *
                       C152527 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C1824 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C1823 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C1825 +
                    ((C116954 + C116953 + C116952) * C67854 +
                     (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
                      C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
                      C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
                         C152435) *
                        C152165 * C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152542 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C152541 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C114710 * C1652 + C116736 + C116736 + C152623 * C1676 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114714 * C10052 + C116734 + C116734 + C114709 * C10058) *
                 C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152542) *
               C152541 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152542 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C152284) *
              C354 +
          ((((C114788 + C114787 + C114786) * C67854 +
             (C115091 + C115092 + C115093) * C152435) *
                C152165 * C152542 -
            ((C116152 + C116153 + C116154) * C152435 +
             (C115395 + C115394 + C115393) * C67854) *
                C152165 * C152326) *
               C152541 +
           (((C116154 + C116153 + C116152) * C67854 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C115094 + C115095 + C115096) * C152435 +
             (C115093 + C115092 + C115091) * C67854) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152542 -
           ((C143475 + C143476 + C143477) * C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C1823 +
          (((C143477 + C143476 + C143475) * C67854 +
            (C144111 + C144112 + C144113) * C152435) *
               C152165 * C152326 -
           ((C142564 + C142565 + C142566) * C152435 +
            (C142563 + C142562 + C142561) * C67854) *
               C152165 * C152542) *
              C1824 +
          (((C142566 + C142565 + C142564) * C67854 +
            (C143845 + C143846 + C143847) * C152435) *
               C152165 * C152542 -
           ((C144810 + C144811 + C144812) * C152435 +
            (C144113 + C144112 + C144111) * C67854) *
               C152165 * C152326) *
              C1825 +
          (((C144812 + C144811 + C144810) * C67854 +
            (C114710 * C8769 + C144801 + C144801 + C152623 * C8775 +
             C114712 * C24963 + C144802 + C144802 + C152605 * C24967 +
             C114714 * C33899 + C144803 + C144803 + C114709 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C143848 + C143849 + C143850) * C152435 +
            (C143847 + C143846 + C143845) * C67854) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[147] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C152627 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C152613 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C353 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C152613 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C152627 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C152583) *
                       C354 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C152627 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C152613 +
                    ((C115096 + C115095 + C115094) * C67854 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C67854 +
                    (C114710 * C359 + C115024 + C115024 + C152623 * C383 +
                     C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                     C114714 * C1648 + C115022 + C115022 + C114709 * C1672) *
                        C152435) *
                       C152165 * C152239 * C152221 * C129 -
                   ((C115085 + C115086 + C115087) * C152435 +
                    (C114785 + C114784 + C114783) * C67854) *
                       C152165 * C152239 * C152221 * C130 +
                   ((C114788 + C114787 + C114786) * C67854 +
                    (C115091 + C115092 + C115093) * C152435) *
                       C152165 * C152239 * C152221 * C131 -
                   ((C115608 + C115609 + C115610) * C152435 +
                    (C114791 + C114790 + C114789) * C67854) *
                       C152165 * C152239 * C152221 * C132 +
                   ((C114794 + C114793 + C114792) * C67854 +
                    (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                     C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                     C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                        C152435) *
                       C152165 * C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152628 -
                    ((C114714 * C3129 + C116115 + C116115 + C114709 * C3137 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114710 * C1179 + C116113 + C116113 + C152623 * C1191) *
                         C152435 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C67854) *
                        C152165 * C152615 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C67854 +
                     (C114710 * C1648 + C116730 + C116730 + C152623 * C1672 +
                      C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                      C114714 * C9344 + C116728 + C116728 + C114709 * C9350) *
                         C152435) *
                        C152165 * C152586) *
                       C152221 * C353 +
                   (((C115389 + C115388 + C115387) * C67854 +
                     (C116149 + C116150 + C116151) * C152435) *
                        C152165 * C152615 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152628 -
                    ((C118338 + C118339 + C118340) * C152435 +
                     (C115392 + C115391 + C115390) * C67854) *
                        C152165 * C152586) *
                       C152221 * C354 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152628 -
                    ((C116152 + C116153 + C116154) * C152435 +
                     (C115395 + C115394 + C115393) * C67854) *
                        C152165 * C152615 +
                    ((C115398 + C115397 + C115396) * C67854 +
                     (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
                      C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
                      C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                         C152435) *
                        C152165 * C152586) *
                       C152221 * C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C1373 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C1374 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152624 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C1374 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C1373 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C152583) *
                       C152609 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C1373 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C1374 +
                    ((C115096 + C115095 + C115094) * C67854 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C67854 +
                    (C142561 + C142562 + C142563) * C152435) *
                       C152165 * C152239 * C1461 -
                   ((C142564 + C142565 + C142566) * C152435 +
                    (C142563 + C142562 + C142561) * C67854) *
                       C152165 * C152239 * C1462 +
                   ((C142566 + C142565 + C142564) * C67854 +
                    (C143845 + C143846 + C143847) * C152435) *
                       C152165 * C152239 * C1463 -
                   ((C143848 + C143849 + C143850) * C152435 +
                    (C143847 + C143846 + C143845) * C67854) *
                       C152165 * C152239 * C1464 +
                   ((C143850 + C143849 + C143848) * C67854 +
                    (C114710 * C7786 + C143830 + C143830 + C152623 * C7792 +
                     C114712 * C25670 + C143831 + C143831 + C152605 * C25674 +
                     C114714 * C32595 + C143832 + C143832 + C114709 * C32597) *
                        C152435) *
                       C152165 * C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152628 -
                    ((C143475 + C143476 + C143477) * C152435 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C67854) *
                        C152165 * C152615 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C67854 +
                     (C144108 + C144109 + C144110) * C152435) *
                        C152165 * C152586) *
                       C1373 +
                   (((C143477 + C143476 + C143475) * C67854 +
                     (C144111 + C144112 + C144113) * C152435) *
                        C152165 * C152615 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152628 -
                    ((C144114 + C144115 + C144116) * C152435 +
                     (C144110 + C144109 + C144108) * C67854) *
                        C152165 * C152586) *
                       C1374 +
                   (((C142566 + C142565 + C142564) * C67854 +
                     (C143845 + C143846 + C143847) * C152435) *
                        C152165 * C152628 -
                    ((C114714 * C26938 + C117459 + C117459 + C114709 * C26942 +
                      C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
                      C114710 * C2197 + C117457 + C117457 + C152623 * C2205) *
                         C152435 +
                     (C144113 + C144112 + C144111) * C67854) *
                        C152165 * C152615 +
                    ((C144116 + C144115 + C144114) * C67854 +
                     (C114710 * C8036 + C144087 + C144087 + C152623 * C8042 +
                      C114712 * C26938 + C144088 + C144088 + C152605 * C26942 +
                      C114714 * C33441 + C144089 + C144089 + C114709 * C33443) *
                         C152435) *
                        C152165 * C152586) *
                       C152583) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C67854 +
            (C142561 + C142562 + C142563) * C152435) *
               C152165 * C152542 -
           ((C114714 * C3129 + C116115 + C116115 + C114709 * C3137 +
             C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
             C114710 * C1179 + C116113 + C116113 + C152623 * C1191) *
                C152435 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C67854) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C115389 + C115388 + C115387) * C67854 +
            (C116149 + C116150 + C116151) * C152435) *
               C152165 * C152326 -
           ((C115085 + C115086 + C115087) * C152435 +
            (C114785 + C114784 + C114783) * C67854) *
               C152165 * C152542) *
              C152221 * C830 +
          (((C114788 + C114787 + C114786) * C67854 +
            (C115091 + C115092 + C115093) * C152435) *
               C152165 * C152542 -
           ((C116152 + C116153 + C116154) * C152435 +
            (C115395 + C115394 + C115393) * C67854) *
               C152165 * C152326) *
              C152221 * C831 +
          (((C115822 + C115821 + C115820) * C67854 +
            (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
             C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
             C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C115608 + C115609 + C115610) * C152435 +
            (C114791 + C114790 + C114789) * C67854) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C67854 +
             (C142561 + C142562 + C142563) * C152435) *
                C152165 * C152542 -
            ((C143475 + C143476 + C143477) * C152435 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C67854) *
                C152165 * C152326) *
               C1373 +
           (((C143477 + C143476 + C143475) * C67854 +
             (C144111 + C144112 + C144113) * C152435) *
                C152165 * C152326 -
            ((C142564 + C142565 + C142566) * C152435 +
             (C142563 + C142562 + C142561) * C67854) *
                C152165 * C152542) *
               C1374 +
           (((C142566 + C142565 + C142564) * C67854 +
             (C143845 + C143846 + C143847) * C152435) *
                C152165 * C152542 -
            ((C114714 * C26938 + C117459 + C117459 + C114709 * C26942 +
              C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
              C114710 * C2197 + C117457 + C117457 + C152623 * C2205) *
                 C152435 +
             (C144113 + C144112 + C144111) * C67854) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C67854 +
             (C116149 + C116150 + C116151) * C152435) *
                C152165 * C152326 -
            ((C115085 + C115086 + C115087) * C152435 +
             (C114785 + C114784 + C114783) * C67854) *
                C152165 * C152542) *
               C1373 +
           (((C115087 + C115086 + C115085) * C67854 +
             (C115088 + C115089 + C115090) * C152435) *
                C152165 * C152542 -
            ((C117260 + C117261 + C117262) * C152435 +
             (C116151 + C116150 + C116149) * C67854) *
                C152165 * C152326) *
               C1374 +
           (((C117262 + C117261 + C117260) * C67854 +
             (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
              C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
              C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C116952 + C116953 + C116954) * C152435 +
             (C115090 + C115089 + C115088) * C67854) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C67854 +
                    (C114710 * C359 + C115024 + C115024 + C152623 * C383 +
                     C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                     C114714 * C1648 + C115022 + C115022 + C114709 * C1672) *
                        C152435) *
                       C152165 * C152239 * C152221 * C129 -
                   ((C115085 + C115086 + C115087) * C152435 +
                    (C114785 + C114784 + C114783) * C67854) *
                       C152165 * C152239 * C152221 * C130 +
                   ((C114788 + C114787 + C114786) * C67854 +
                    (C115091 + C115092 + C115093) * C152435) *
                       C152165 * C152239 * C152221 * C131 -
                   ((C115608 + C115609 + C115610) * C152435 +
                    (C114791 + C114790 + C114789) * C67854) *
                       C152165 * C152239 * C152221 * C132 +
                   ((C114794 + C114793 + C114792) * C67854 +
                    (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                     C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                     C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                        C152435) *
                       C152165 * C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C152627 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C152613 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C353 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C152613 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C152627 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C152583) *
                       C354 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C152627 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C152613 +
                    ((C115096 + C115095 + C115094) * C67854 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C67854 +
                     (C142561 + C142562 + C142563) * C152435) *
                        C152165 * C152239 * C1373 -
                    ((C142564 + C142565 + C142566) * C152435 +
                     (C142563 + C142562 + C142561) * C67854) *
                        C152165 * C152239 * C1374 +
                    ((C142566 + C142565 + C142564) * C67854 +
                     (C114710 * C1470 + C116500 + C116500 + C152623 * C1486 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114714 * C8036 + C116498 + C116498 + C114709 * C8042) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152624 +
                   (((C115087 + C115086 + C115085) * C67854 +
                     (C115088 + C115089 + C115090) * C152435) *
                        C152165 * C152239 * C1374 -
                    ((C115085 + C115086 + C115087) * C152435 +
                     (C114785 + C114784 + C114783) * C67854) *
                        C152165 * C152239 * C1373 -
                    ((C116952 + C116953 + C116954) * C152435 +
                     (C115090 + C115089 + C115088) * C67854) *
                        C152165 * C152239 * C152583) *
                       C152609 +
                   (((C114788 + C114787 + C114786) * C67854 +
                     (C115091 + C115092 + C115093) * C152435) *
                        C152165 * C152239 * C1373 -
                    ((C115094 + C115095 + C115096) * C152435 +
                     (C115093 + C115092 + C115091) * C67854) *
                        C152165 * C152239 * C1374 +
                    ((C115096 + C115095 + C115094) * C67854 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152435) *
                        C152165 * C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C67854 +
                    (C142561 + C142562 + C142563) * C152435) *
                       C152165 * C152239 * C1461 -
                   ((C142564 + C142565 + C142566) * C152435 +
                    (C142563 + C142562 + C142561) * C67854) *
                       C152165 * C152239 * C1462 +
                   ((C142566 + C142565 + C142564) * C67854 +
                    (C143845 + C143846 + C143847) * C152435) *
                       C152165 * C152239 * C1463 -
                   ((C143848 + C143849 + C143850) * C152435 +
                    (C143847 + C143846 + C143845) * C67854) *
                       C152165 * C152239 * C1464 +
                   ((C143850 + C143849 + C143848) * C67854 +
                    (C114710 * C7786 + C143830 + C143830 + C152623 * C7792 +
                     C114712 * C25670 + C143831 + C143831 + C152605 * C25674 +
                     C114714 * C32595 + C143832 + C143832 + C114709 * C32597) *
                        C152435) *
                       C152165 * C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152280 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152287 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C3759) *
              C152198 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152287 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152280 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C3759) *
              C152207 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152280 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152287 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152280 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152287 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C3759) *
              C152198 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152287 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152280 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C3759) *
              C152207 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152280 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152287 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152280 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152287 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C3759) *
              C152198 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152287 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152280 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C3759) *
              C152207 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C152280 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152287 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152280 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152287 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C152542 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C3759) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C152280 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152287 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152280 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C152287 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152542 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C3759) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C152280 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152287 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152542 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C152280 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152542) *
               C152287 +
           (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
              C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
              C45663 + C45345 * C1677) *
                 C152419 * C152518 +
             (C45724 + C45725 + C45726) * C152419 * C152170) *
                C152542 -
            ((C47896 + C47897 + C47898) * C152419 * C152170 +
             (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                 C152419 * C152518) *
                C152326) *
               C3759) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152542) *
               C152280 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152542 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152287 +
           (((C47898 + C47897 + C47896) * C152419 * C152518 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C45730 + C45731 + C45732) * C152419 * C152170 +
             (C45726 + C45725 + C45724) * C152419 * C152518) *
                C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C3275 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C152284) *
                  C152633 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C152284 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C3275) *
                  C152626 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152239 * C3275 -
               (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                   C152239 * C152284) *
                  C152611 +
              ((C445 * C123 + C451 * C124 + C843 * C125 +
                (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
                   C152239 * C152284 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C152239 * C3275) *
                  C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C152634 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C152630 +
               ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152239 * C152618 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 *
                    C123) *
                   C152239 * C152593) *
                  C3415 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C152630 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C152634 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152239 * C152618 +
               (C1851 * C123 + C1850 * C124 + C1849 * C125 +
                (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 *
                    C126) *
                   C152239 * C152593) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152628 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152615 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152586) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152615 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152628 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C152586) *
               C152284) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152615 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152628 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152628 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152615 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C3275 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C152633 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C3275 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152634 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152630 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152618 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C3415 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152630 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152634 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152618 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152628 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152615 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C152586) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152615 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152628 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C152586) *
               C152284) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152615 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152628 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C152586) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152628 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152615 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C3275 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152284) *
              C152633 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152284 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C3275 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C46246 + C46245 + C46244) * C152419 * C152518 +
            (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
             C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
             C46237 + C45345 * C2823) *
                C152419 * C152170) *
               C152239 * C152284 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152634 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152630 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152618 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C152239 * C152593) *
              C3415 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152630 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152634 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152618 +
           ((C47590 + C47589 + C47588) * C152419 * C152518 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152419 * C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152628 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152615 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152419 * C152518 +
             (C46026 + C46027 + C46028) * C152419 * C152170) *
                C152586) *
               C3275 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152615 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152628 -
            ((C48980 + C48981 + C48982) * C152419 * C152170 +
             (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
              C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
              C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                 C152419 * C152518) *
                C152586) *
               C152284) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152615 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152628 -
            ((C46032 + C46033 + C46034) * C152419 * C152170 +
             (C46028 + C46027 + C46026) * C152419 * C152518) *
                C152586) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152628 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152615 +
            ((C48982 + C48981 + C48980) * C152419 * C152518 +
             (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
              C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
              C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                 C152419 * C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152284) *
              C152198 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C152542 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C3275 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C152284) *
              C152198 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C152207 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152542 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C3275 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152542) *
               C152284) *
              C152198 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152542) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152542 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C45424 + C45423 + C45422) * C152419 * C152518 +
             (C45425 + C45426 + C45427) * C152419 * C152170) *
                C152542 -
            ((C46456 + C46457 + C46458) * C152419 * C152170 +
             (C46031 + C46030 + C46029) * C152419 * C152518) *
                C152326) *
               C3275 +
           (((C46790 + C46789 + C46788) * C152419 * C152518 +
             (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
              C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
              C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                 C152419 * C152170) *
                C152326 -
            ((C46244 + C46245 + C46246) * C152419 * C152170 +
             (C45729 + C45728 + C45727) * C152419 * C152518) *
                C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152634 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152630 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152618 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152239 * C152593) *
              C3415 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152630 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152634 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152618 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 * C126) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C3275 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152284) *
              C152633 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152284 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C3275) *
              C152626 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C3275 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152284) *
              C152611 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
               C152239 * C152284 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
               C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C3275 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C152633 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C3275 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152634 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152630 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152618 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C3415 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152630 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152634 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152618 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C3275 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152284) *
              C152633 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152284 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C3275 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C46246 + C46245 + C46244) * C152419 * C152518 +
            (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
             C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
             C46237 + C45345 * C2823) *
                C152419 * C152170) *
               C152239 * C152284 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152634 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152630 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152618 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C152239 * C152593) *
              C3415 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152630 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152634 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152618 +
           ((C47590 + C47589 + C47588) * C152419 * C152518 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152419 * C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152280 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152287 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C4281 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C3759) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152280 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152287 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152280 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152287 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C3759) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152280 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152287 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C4281 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C152280 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C4281) *
               C152287 +
           (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
              C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
              C45663 + C45345 * C1677) *
                 C152419 * C152518 +
             (C45724 + C45725 + C45726) * C152419 * C152170) *
                C4281 -
            ((C47896 + C47897 + C47898) * C152419 * C152170 +
             (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                 C152419 * C152518) *
                C152326) *
               C3759) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C4281) *
               C152280 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C4281 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152287 +
           (((C47898 + C47897 + C47896) * C152419 * C152518 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C45730 + C45731 + C45732) * C152419 * C152170 +
             (C45726 + C45725 + C45724) * C152419 * C152518) *
                C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152322 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C4953) *
              C152280 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152329 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152322 -
           ((C26540 + C26541 + C26542) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C4953) *
              C152287 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152322 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152329 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152322 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152280 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152329 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152322 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C4953) *
              C152287 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152322 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152329 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152322 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152329 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C4953) *
              C152280 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152329 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152322 -
           ((C48980 + C48981 + C48982) * C152419 * C152170 +
            (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                C152419 * C152518) *
               C4953) *
              C152287 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152322 -
           ((C47896 + C47897 + C47898) * C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C152329 +
           ((C45346 * C1653 + C47373 + C47373 + C45343 * C1677 +
             C45348 * C10052 + C47374 + C47374 + C45344 * C10058 +
             C45350 * C26241 + C47375 + C47375 + C45345 * C26245) *
                C152419 * C152518 +
            (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
             C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
             C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                C152419 * C152170) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C4281 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 *
                     C123) *
                    C152326) *
                   C3275 +
               (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152326 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 *
                     C123) *
                    C4281) *
                   C152284) *
                  C152624 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152326 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C4281) *
                   C3275 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C4281 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152326) *
                   C152284) *
                  C152609 +
              (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                    C4281 -
                (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                    C152326) *
                   C3275 +
               ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
                 (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                     C126) *
                    C152326 -
                (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                    C4281) *
                   C152284) *
                  C152577) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C4281 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C152326) *
                  C152634 +
              (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C152326 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C4281) *
                  C152630 +
              (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C4281 -
               (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                    C123) *
                   C152326) *
                  C152618 +
              (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 *
                    C123 +
                (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 *
                    C124 +
                (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 *
                    C125 +
                (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 *
                    C126) *
                   C152326 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 *
                    C123) *
                   C4281) *
                  C152593) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152635 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152621 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C3275 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152632 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152635 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152621 +
           ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152419 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152449 * C3138) * C152419 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152449 * C3139) * C152419 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152419 * C126) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152284) *
              C152624 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C4281 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C3275 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152634 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C4281) *
              C152630 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C4281 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C152618 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152635 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152621 -
           ((C26744 + C26739 + C26740) * C152170 +
            (C26951 * C23222 + C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C3275 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152632 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152635 -
           ((C26540 + C26541 + C26542) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152621 +
           ((C10069 * C23220 + C26951 * C23221 +
             (C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C23222) *
                C152518 +
            (C9856 * C23220 + C26743 * C23221 +
             (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C23222) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C4281 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C3275 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C4281) *
               C152284) *
              C152624 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C4281) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C4281 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C45424 + C45423 + C45422) * C152419 * C152518 +
             (C45425 + C45426 + C45427) * C152419 * C152170) *
                C4281 -
            ((C46456 + C46457 + C46458) * C152419 * C152170 +
             (C46031 + C46030 + C46029) * C152419 * C152518) *
                C152326) *
               C3275 +
           (((C46790 + C46789 + C46788) * C152419 * C152518 +
             (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
              C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
              C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                 C152419 * C152170) *
                C152326 -
            ((C46244 + C46245 + C46246) * C152419 * C152170 +
             (C45729 + C45728 + C45727) * C152419 * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C4281 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C152634 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152326 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C4281) *
              C152630 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C4281 -
           ((C47896 + C47897 + C47898) * C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C152326) *
              C152618 +
          (((C45346 * C2197 + C48093 + C48093 + C45343 * C2205 +
             C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
             C45350 * C26938 + C48095 + C48095 + C45345 * C26942) *
                C152419 * C152518 +
            (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
             C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
             C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                C152419 * C152170) *
               C152326 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152635 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152632 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152621 -
           ((C49192 + C49193 + C49194) * C152419 * C152170 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152419 * C152518) *
               C152599) *
              C3275 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152632 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152635 -
           ((C48980 + C48981 + C48982) * C152419 * C152170 +
            (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                C152419 * C152518) *
               C152621 +
           ((C45346 * C3129 + C49392 + C49392 + C45343 * C3137 +
             C45348 * C9344 + C49393 + C49393 + C45344 * C9350 +
             C45350 * C40067 + C49394 + C49394 + C45345 * C40071) *
                C152419 * C152518 +
            (C45346 * C3130 + C49395 + C49395 + C45343 * C3138 +
             C45348 * C9345 + C49396 + C49396 + C45344 * C9351 +
             C45350 * C49388 + C49397 + C49397 + C45345 * C49390) *
                C152419 * C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152322 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C4953) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152329 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152322 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C4953) *
               C152284) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152329 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152322 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C4953) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152322 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152329 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152322 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152329 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152322 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C4953) *
               C152284) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152329 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152322 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152322 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152329 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152322 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152329 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152419 * C152518 +
             (C46026 + C46027 + C46028) * C152419 * C152170) *
                C4953) *
               C3275 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152329 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152322 -
            ((C48980 + C48981 + C48982) * C152419 * C152170 +
             (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
              C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
              C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                 C152419 * C152518) *
                C4953) *
               C152284) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152329 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152322 -
            ((C46032 + C46033 + C46034) * C152419 * C152170 +
             (C46028 + C46027 + C46026) * C152419 * C152518) *
                C4953) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152322 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152329 +
            ((C48982 + C48981 + C48980) * C152419 * C152518 +
             (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
              C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
              C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                 C152419 * C152170) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152634 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152326 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C4281) *
              C152630 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C4281 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152326) *
              C152618 +
          (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 * C126) *
               C152326 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152284) *
              C152624 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C152609 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152284) *
              C152624 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C4281 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C3275 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152634 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C4281) *
              C152630 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C4281 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C152618 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C4281 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C3275 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C4281) *
               C152284) *
              C152624 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C4281) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C4281 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C45424 + C45423 + C45422) * C152419 * C152518 +
             (C45425 + C45426 + C45427) * C152419 * C152170) *
                C4281 -
            ((C46456 + C46457 + C46458) * C152419 * C152170 +
             (C46031 + C46030 + C46029) * C152419 * C152518) *
                C152326) *
               C3275 +
           (((C46790 + C46789 + C46788) * C152419 * C152518 +
             (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
              C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
              C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                 C152419 * C152170) *
                C152326 -
            ((C46244 + C46245 + C46246) * C152419 * C152170 +
             (C45729 + C45728 + C45727) * C152419 * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C4281 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C152634 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152326 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C4281) *
              C152630 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C4281 -
           ((C47896 + C47897 + C47898) * C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C152326) *
              C152618 +
          (((C45346 * C2197 + C48093 + C48093 + C45343 * C2205 +
             C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
             C45350 * C26938 + C48095 + C48095 + C45345 * C26942) *
                C152419 * C152518 +
            (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
             C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
             C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                C152419 * C152170) *
               C152326 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C152541 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C152284) *
                  C829 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C152284 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C152541) *
                  C830 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152239 * C152541 -
               (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                   C152239 * C152284) *
                  C831 +
              ((C445 * C123 + C451 * C124 + C843 * C125 +
                (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
                   C152239 * C152284 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C152239 * C152541) *
                  C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C1823 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C1824 +
               ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152239 * C1825 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 *
                    C123) *
                   C152239 * C152593) *
                  C152527 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C1824 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C1823 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152239 * C1825 +
               (C1851 * C123 + C1850 * C124 + C1849 * C125 +
                (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 *
                    C126) *
                   C152239 * C152593) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C2359 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C2360 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152586) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C2360 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C2359 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C152586) *
               C152284) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C2359 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C2360 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152541 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C829 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152541) *
              C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152541 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C831 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1823 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1824 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C1825 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C152527 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1824 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1823 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C1825 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C2359 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C152586) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C2360 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C2359 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C152586) *
               C152284) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C2360 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C2359 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C152586) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C2359 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C2360 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152541 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152284) *
              C829 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152284 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152541) *
              C830 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C152541 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152284) *
              C831 +
          (((C46246 + C46245 + C46244) * C152419 * C152518 +
            (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
             C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
             C46237 + C45345 * C2823) *
                C152419 * C152170) *
               C152239 * C152284 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C1823 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C1824 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C1825 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C152239 * C152593) *
              C152527 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C1824 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C1823 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C1825 +
           ((C47590 + C47589 + C47588) * C152419 * C152518 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152419 * C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C2359 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C2360 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152419 * C152518 +
             (C46026 + C46027 + C46028) * C152419 * C152170) *
                C152586) *
               C152541 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C2360 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C2359 -
            ((C48980 + C48981 + C48982) * C152419 * C152170 +
             (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
              C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
              C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                 C152419 * C152518) *
                C152586) *
               C152284) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C2360 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C2359 -
            ((C46032 + C46033 + C46034) * C152419 * C152170 +
             (C46028 + C46027 + C46026) * C152419 * C152518) *
                C152586) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C2359 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C2360 +
            ((C48982 + C48981 + C48980) * C152419 * C152518 +
             (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
              C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
              C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                 C152419 * C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C152542 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 *
                     C123) *
                    C152326) *
                   C152541 +
               (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152326 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 *
                     C123) *
                    C152542) *
                   C152284) *
                  C353 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152326 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C152542) *
                   C152541 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C152542 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152326) *
                   C152284) *
                  C354 +
              (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                    C152542 -
                (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                    C152326) *
                   C152541 +
               ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
                 (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                     C126) *
                    C152326 -
                (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                    C152542) *
                   C152284) *
                  C152577) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152542 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C152326) *
                  C1823 +
              (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C152326 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152542) *
                  C1824 +
              (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152542 -
               (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                    C123) *
                   C152326) *
                  C1825 +
              (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 *
                    C123 +
                (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 *
                    C124 +
                (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 *
                    C125 +
                (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 *
                    C126) *
                   C152326 -
               (C1849 * C126 + C1850 * C125 + C1851 * C124 +
                (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 *
                    C123) *
                   C152542) *
                  C152593) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C152541 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2974 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C2973 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C2975 +
           ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152419 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152449 * C3138) * C152419 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152449 * C3139) * C152419 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152419 * C126) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152284) *
              C353 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C152542 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C152541 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C1823 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152542) *
              C1824 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152542 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C1825 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2973 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C2975 -
           ((C26744 + C26739 + C26740) * C152170 +
            (C26951 * C23222 + C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C152541 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C2974 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C2973 -
           ((C26540 + C26541 + C26542) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C2975 +
           ((C10069 * C23220 + C26951 * C23221 +
             (C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C23222) *
                C152518 +
            (C9856 * C23220 + C26743 * C23221 +
             (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C23222) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152542 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C152541 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152542) *
               C152284) *
              C353 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152542) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152542 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C45424 + C45423 + C45422) * C152419 * C152518 +
             (C45425 + C45426 + C45427) * C152419 * C152170) *
                C152542 -
            ((C46456 + C46457 + C46458) * C152419 * C152170 +
             (C46031 + C46030 + C46029) * C152419 * C152518) *
                C152326) *
               C152541 +
           (((C46790 + C46789 + C46788) * C152419 * C152518 +
             (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
              C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
              C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                 C152419 * C152170) *
                C152326 -
            ((C46244 + C46245 + C46246) * C152419 * C152170 +
             (C45729 + C45728 + C45727) * C152419 * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152542 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C1823 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152326 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152542) *
              C1824 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152542 -
           ((C47896 + C47897 + C47898) * C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C152326) *
              C1825 +
          (((C45346 * C2197 + C48093 + C48093 + C45343 * C2205 +
             C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
             C45350 * C26938 + C48095 + C48095 + C45345 * C26942) *
                C152419 * C152518 +
            (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
             C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
             C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                C152419 * C152170) *
               C152326 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C2973 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C2974 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C2975 -
           ((C49192 + C49193 + C49194) * C152419 * C152170 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152419 * C152518) *
               C152599) *
              C152541 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C2974 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C2973 -
           ((C48980 + C48981 + C48982) * C152419 * C152170 +
            (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                C152419 * C152518) *
               C2975 +
           ((C45346 * C3129 + C49392 + C49392 + C45343 * C3137 +
             C45348 * C9344 + C49393 + C49393 + C45344 * C9350 +
             C45350 * C40067 + C49394 + C49394 + C45345 * C40071) *
                C152419 * C152518 +
            (C45346 * C3130 + C49395 + C49395 + C45343 * C3138 +
             C45348 * C9345 + C49396 + C49396 + C45344 * C9351 +
             C45350 * C49388 + C49397 + C49397 + C45345 * C49390) *
                C152419 * C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152239 * C152221 * C129 -
              (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                  C152239 * C152221 * C130 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                  C152239 * C152221 * C131 -
              (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C152239 * C152221 * C132 +
              (C202 * C123 + C203 * C124 + C204 * C125 +
               (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
                  C152239 * C152221 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C152627 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C152613 +
               ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152239 * C152583) *
                  C353 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C152613 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C152627 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152239 * C152583) *
                  C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152239 * C152627 -
               ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
                C451 * C125 + C445 * C124 + C446 * C123) *
                   C152239 * C152613 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
                   C152239 * C152583) *
                  C152577) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152628 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C152615 +
               ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152586) *
                  C152221 * C353 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                   C152615 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152628 -
               (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) *
                   C152586) *
                  C152221 * C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152628 -
               ((C134 * C611 + C664 + C664 + C152449 * C635) * C152419 * C126 +
                C696 * C125 + C690 * C124 + C691 * C123) *
                   C152615 +
               (C694 * C123 + C695 * C124 + C697 * C125 +
                (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
                   C152586) *
                  C152221 * C152577) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C1373 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C1374 +
               ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152239 * C152583) *
                  C152624 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C1374 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C1373 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152239 * C152583) *
                  C152609 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152239 * C1373 -
               (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) *
                   C152239 * C1374 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
                   C152239 * C152583) *
                  C152577) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152239 * C1461 -
              (C445 * C126 + C446 * C125 + C447 * C124 +
               (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                  C152239 * C1462 +
              ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
               C448 * C124 + C449 * C125 + C450 * C126) *
                  C152239 * C1463 -
              ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 *
                   C126 +
               (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 *
                   C125 +
               (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 *
                   C124 +
               (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 *
                   C123) *
                  C152239 * C1464 +
              ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 *
                   C123 +
               (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 *
                   C124 +
               (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 *
                   C125 +
               (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 *
                   C126) *
                  C152239 * C1465) *
             C152193 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152628 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C152615 +
               ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152586) *
                  C1373 +
              (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C152615 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152628 -
               ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 *
                    C126 +
                (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 *
                    C125 +
                (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 *
                    C124 +
                (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                    C123) *
                   C152586) *
                  C1374 +
              (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152628 -
               ((C134 * C1649 + C1686 + C1686 + C152449 * C1673) * C152419 *
                    C126 +
                (C134 * C1650 + C1687 + C1687 + C152449 * C1674) * C152419 *
                    C125 +
                (C134 * C1651 + C1688 + C1688 + C152449 * C1675) * C152419 *
                    C124 +
                (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                    C123) *
                   C152615 +
               ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 *
                    C123 +
                (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 *
                    C124 +
                (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 *
                    C125 +
                (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 *
                    C126) *
                   C152586) *
                  C152583) *
             C152193 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C2359 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C2360 +
               ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152586) *
                  C152221 * C152624 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
               (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) *
                   C152586) *
                  C152221 * C152609 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
               (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
               (C694 * C123 + C695 * C124 + C697 * C125 +
                (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
                   C152586) *
                  C152221 * C152577) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C2359 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C2360 +
               ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
                C693 * C124 + C694 * C125 + C695 * C126) *
                   C152586) *
                  C152627 +
              (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                    C123 +
                C1224 * C124 + C1225 * C125 + C1226 * C126) *
                   C2360 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C2359 -
               ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 *
                    C126 +
                (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 *
                    C125 +
                (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 *
                    C124 +
                (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                    C123) *
                   C152586) *
                  C152613 +
              (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C2359 -
               (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                    C123) *
                   C2360 +
               ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 *
                    C123 +
                (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 *
                    C124 +
                (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 *
                    C125 +
                (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 *
                    C126) *
                   C152586) *
                  C152583) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C2590 -
          (C690 * C126 + C691 * C125 + C692 * C124 +
           (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
              C2591 +
          ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
           C693 * C124 + C694 * C125 + C695 * C126) *
              C2592 -
          ((C134 * C2595 + C2620 + C2620 + C152449 * C2611) * C152419 * C126 +
           (C134 * C2596 + C2621 + C2621 + C152449 * C2612) * C152419 * C125 +
           (C134 * C2597 + C2622 + C2622 + C152449 * C2613) * C152419 * C124 +
           (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
              C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C152419 * C123 +
           (C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C152419 * C124 +
           (C134 * C2601 + C2626 + C2626 + C152449 * C2617) * C152419 * C125 +
           (C134 * C2602 + C2627 + C2627 + C152449 * C2618) * C152419 * C126) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C353 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152615 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152628 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152628 -
           ((C2062 * C23222 + C1222 * C23221 + C682 * C23220) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152615 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C1373 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152615 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152628 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C1374 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152628 -
           (((C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C23222 +
             C8573 * C23221 + C2064 * C23220) *
                C152170 +
            ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
             C8786 * C23221 + C8070 * C23220) *
                C152518) *
               C152615 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C2360 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C2359 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C2359 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C2360 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152627 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C2360 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C2359 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C152613 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C2359 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C2360 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C2590 -
          ((C23686 + C23687 + C23688) * C152170 +
           (C8070 * C23222 + C7446 * C23221 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
               C152518) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
            C8069 * C23221 + C8073 * C23222) *
               C152518 +
           (C23689 + C23690 + C23691) * C152170) *
              C2592 -
          (((C134 * C10053 + C10065 + C10065 + C152449 * C10059) * C23222 +
            C9856 * C23221 + C2996 * C23220) *
               C152170 +
           ((C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C23222 +
            C10069 * C23221 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
               C152518) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C23220 +
            (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C23221 +
            (C134 * C26241 + C26248 + C26248 + C152449 * C26245) * C23222) *
               C152518 +
           ((C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C23220 +
            (C134 * C9345 + C9355 + C9355 + C152449 * C9351) * C23221 +
            (C134 * C26242 + C26249 + C26249 + C152449 * C26246) * C23222) *
               C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C152221 * C129 -
          ((C45422 + C45423 + C45424) * C152419 * C152170 +
           (C45421 + C45420 + C45419) * C152419 * C152518) *
              C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152419 * C152518 +
           (C45425 + C45426 + C45427) * C152419 * C152170) *
              C152239 * C152221 * C131 -
          ((C45428 + C45429 + C45430) * C152419 * C152170 +
           (C45427 + C45426 + C45425) * C152419 * C152518) *
              C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152419 * C152518 +
           (C45346 * C141 + C45392 + C45392 + C45343 * C157 + C45348 * C611 +
            C45393 + C45393 + C45344 * C635 + C45350 * C612 + C45394 + C45394 +
            C45345 * C636) *
               C152419 * C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152613 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152613 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45350 * C1645 + C45691 + C45691 + C45345 * C1669 +
             C45348 * C1182 + C45692 + C45692 + C45344 * C1194 + C45346 * C356 +
             C45693 + C45693 + C45343 * C380) *
                C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152628 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C152221 * C353 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152615 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152628 -
           ((C46032 + C46033 + C46034) * C152419 * C152170 +
            (C46028 + C46027 + C46026) * C152419 * C152518) *
               C152586) *
              C152221 * C354 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152628 -
           ((C45350 * C2595 + C45993 + C45993 + C45345 * C2611 + C45348 * C608 +
             C45994 + C45994 + C45344 * C632 + C45346 * C601 + C45995 + C45995 +
             C45343 * C625) *
                C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C152615 +
           ((C46034 + C46033 + C46032) * C152419 * C152518 +
            (C45346 * C608 + C45996 + C45996 + C45343 * C632 + C45348 * C2595 +
             C45997 + C45997 + C45344 * C2611 + C45350 * C2602 + C45998 +
             C45998 + C45345 * C2618) *
                C152419 * C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C1373 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C1374 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C1374 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C1373 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C1461 -
          ((C45721 + C45722 + C45723) * C152419 * C152170 +
           (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45346 * C359 + C45660 + C45660 +
            C45343 * C383) *
               C152419 * C152518) *
              C152239 * C1462 +
          ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
            C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
            C45663 + C45345 * C1677) *
               C152419 * C152518 +
           (C45724 + C45725 + C45726) * C152419 * C152170) *
              C152239 * C1463 -
          ((C45350 * C8037 + C47131 + C47131 + C45345 * C8043 + C45348 * C2198 +
            C47132 + C47132 + C45344 * C2206 + C45346 * C1469 + C47133 +
            C47133 + C45343 * C1485) *
               C152419 * C152170 +
           (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 + C45348 * C2197 +
            C47135 + C47135 + C45344 * C2205 + C45346 * C1470 + C47136 +
            C47136 + C45343 * C1486) *
               C152419 * C152518) *
              C152239 * C1464 +
          ((C45346 * C1471 + C47137 + C47137 + C45343 * C1487 + C45348 * C8769 +
            C47138 + C47138 + C45344 * C8775 + C45350 * C24963 + C47139 +
            C47139 + C45345 * C24967) *
               C152419 * C152518 +
           (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 + C45348 * C8770 +
            C47141 + C47141 + C45344 * C8776 + C45350 * C24964 + C47142 +
            C47142 + C45345 * C24968) *
               C152419 * C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152628 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C1373 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152615 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152628 -
           ((C45350 * C9345 + C47361 + C47361 + C45345 * C9351 +
             C45348 * C3130 + C47362 + C47362 + C45344 * C3138 +
             C45346 * C1647 + C47363 + C47363 + C45343 * C1671) *
                C152419 * C152170 +
            (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                C152419 * C152518) *
               C152586) *
              C1374 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152628 -
           ((C45350 * C10053 + C47367 + C47367 + C45345 * C10059 +
             C45348 * C1654 + C47368 + C47368 + C45344 * C1678 +
             C45346 * C1651 + C47369 + C47369 + C45343 * C1675) *
                C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C152615 +
           ((C45346 * C1653 + C47373 + C47373 + C45343 * C1677 +
             C45348 * C10052 + C47374 + C47374 + C45344 * C10058 +
             C45350 * C26241 + C47375 + C47375 + C45345 * C26245) *
                C152419 * C152518 +
            (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
             C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
             C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                C152419 * C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C2359 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C2360 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C2359 -
           ((C46032 + C46033 + C46034) * C152419 * C152170 +
            (C46028 + C46027 + C46026) * C152419 * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C2359 -
           ((C46456 + C46457 + C46458) * C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C2360 +
           ((C46034 + C46033 + C46032) * C152419 * C152518 +
            (C45346 * C608 + C45996 + C45996 + C45343 * C632 + C45348 * C2595 +
             C45997 + C45997 + C45344 * C2611 + C45350 * C2602 + C45998 +
             C45998 + C45345 * C2618) *
                C152419 * C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C2359 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C152627 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C2360 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C2359 -
           ((C45350 * C9345 + C47361 + C47361 + C45345 * C9351 +
             C45348 * C3130 + C47362 + C47362 + C45344 * C3138 +
             C45346 * C1647 + C47363 + C47363 + C45343 * C1671) *
                C152419 * C152170 +
            (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                C152419 * C152518) *
               C152586) *
              C152613 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C2359 -
           ((C47896 + C47897 + C47898) * C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C2360 +
           ((C45346 * C1653 + C47373 + C47373 + C45343 * C1677 +
             C45348 * C10052 + C47374 + C47374 + C45344 * C10058 +
             C45350 * C26241 + C47375 + C47375 + C45345 * C26245) *
                C152419 * C152518 +
            (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
             C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
             C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                C152419 * C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C2590 -
          ((C46023 + C46024 + C46025) * C152419 * C152170 +
           (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
            C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
            C45343 * C628) *
               C152419 * C152518) *
              C2591 +
          ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
            C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
            C45965 + C45345 * C2615) *
               C152419 * C152518 +
           (C46026 + C46027 + C46028) * C152419 * C152170) *
              C2592 -
          ((C45350 * C17922 + C48663 + C48663 + C45345 * C17928 +
            C45348 * C2600 + C48664 + C48664 + C45344 * C2616 + C45346 * C2597 +
            C48665 + C48665 + C45343 * C2613) *
               C152419 * C152170 +
           (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
            C45348 * C2599 + C48667 + C48667 + C45344 * C2615 + C45346 * C2598 +
            C48668 + C48668 + C45343 * C2614) *
               C152419 * C152518) *
              C2593 +
          ((C45346 * C2599 + C48669 + C48669 + C45343 * C2615 +
            C45348 * C17921 + C48670 + C48670 + C45344 * C17927 +
            C45350 * C48656 + C48671 + C48671 + C45345 * C48660) *
               C152419 * C152518 +
           (C45346 * C2600 + C48672 + C48672 + C45343 * C2616 +
            C45348 * C17922 + C48673 + C48673 + C45344 * C17928 +
            C45350 * C48657 + C48674 + C48674 + C45345 * C48661) *
               C152419 * C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152542 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C152326) *
                  C152221 * C829 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                   C152326 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152542) *
                  C152221 * C830 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152542 -
               (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                   C152326) *
                  C152221 * C831 +
              ((C690 * C123 + C696 * C124 + C985 * C125 +
                (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
                   C152326 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C152542) *
                  C152221 * C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C152542 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 *
                     C123) *
                    C152326) *
                   C1373 +
               (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152326 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 *
                     C123) *
                    C152542) *
                   C1374 +
               (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                 C448 * C124 + C449 * C125 + C450 * C126) *
                    C152542 -
                (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                 (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                     C123) *
                    C152326) *
                   C152583) *
                  C152527 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152326 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C152542) *
                   C1373 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C152542 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152326) *
                   C1374 +
               ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
                 (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                     C126) *
                    C152326 -
                (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                    C152542) *
                   C152583) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C152221 * C152527 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2974 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2973 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C2975 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152449 * C2979) * C152419 * C126) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C829 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152542) *
              C152221 * C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152542 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C831 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C1373 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C1374 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C152542 -
            ((C25476 + C25471 + C25472) * C152170 +
             ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
              C8786 * C23221 + C8070 * C23220) *
                 C152518) *
                C152326) *
               C152583) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C1373 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C1374 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2973 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C2975 -
           ((C26744 + C26739 + C26740) * C152170 +
            ((C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C23222 +
             C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C152221 * C152527 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C2974 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C2973 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C2975 +
           ((C26740 + C26739 + C26744) * C152518 +
            (C2995 * C23220 + C9855 * C23221 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C23222) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152542 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C152221 * C829 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152326 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152542) *
              C152221 * C830 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152542 -
           ((C46456 + C46457 + C46458) * C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C152326) *
              C152221 * C831 +
          (((C46458 + C46457 + C46456) * C152419 * C152518 +
            (C45346 * C609 + C46447 + C46447 + C45343 * C633 + C45348 * C610 +
             C46448 + C46448 + C45344 * C634 + C45350 * C2977 + C46449 +
             C46449 + C45345 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152542 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C1373 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152542) *
               C1374 +
           (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
              C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
              C45663 + C45345 * C1677) *
                 C152419 * C152518 +
             (C45724 + C45725 + C45726) * C152419 * C152170) *
                C152542 -
            ((C47896 + C47897 + C47898) * C152419 * C152170 +
             (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                 C152419 * C152518) *
                C152326) *
               C152583) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152542) *
               C1373 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152542 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C1374 +
           (((C47898 + C47897 + C47896) * C152419 * C152518 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C45730 + C45731 + C45732) * C152419 * C152170 +
             (C45726 + C45725 + C45724) * C152419 * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C2973 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C2974 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C2975 -
           ((C49192 + C49193 + C49194) * C152419 * C152170 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152419 * C152518) *
               C152599) *
              C152221 * C152527 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C2974 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C2973 -
           ((C46032 + C46033 + C46034) * C152419 * C152170 +
            (C46028 + C46027 + C46026) * C152419 * C152518) *
               C2975 +
           ((C49194 + C49193 + C49192) * C152419 * C152518 +
            (C45346 * C2596 + C49183 + C49183 + C45343 * C2612 +
             C45348 * C2601 + C49184 + C49184 + C45344 * C2617 +
             C45350 * C17923 + C49185 + C49185 + C45345 * C17929) *
                C152419 * C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C152221 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
              C152221 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
              C152221 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
              C152221 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152627 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152613 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152613 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152627 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152627 -
           ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152239 * C152613 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1374 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C152624 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
              C152239 * C1462 +
          ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152239 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
              C152239 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 * C126) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152221 * C152624 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
              C152221 * C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152627 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2360 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C2359 -
           ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152586) *
              C152613 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C2359 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C2360 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C2360 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C2359 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C2359 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C2360 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152627 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C2360 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C2359 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C152613 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C2359 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C2360 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C152221 * C129 -
          ((C45422 + C45423 + C45424) * C152419 * C152170 +
           (C45421 + C45420 + C45419) * C152419 * C152518) *
              C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152419 * C152518 +
           (C45425 + C45426 + C45427) * C152419 * C152170) *
              C152239 * C152221 * C131 -
          ((C45428 + C45429 + C45430) * C152419 * C152170 +
           (C45427 + C45426 + C45425) * C152419 * C152518) *
              C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152419 * C152518 +
           (C45346 * C141 + C45392 + C45392 + C45343 * C157 + C45348 * C611 +
            C45393 + C45393 + C45344 * C635 + C45350 * C612 + C45394 + C45394 +
            C45345 * C636) *
               C152419 * C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152613 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152613 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45350 * C1645 + C45691 + C45691 + C45345 * C1669 +
             C45348 * C1182 + C45692 + C45692 + C45344 * C1194 + C45346 * C356 +
             C45693 + C45693 + C45343 * C380) *
                C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C1373 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C1374 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C1374 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C1373 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C1461 -
          ((C45721 + C45722 + C45723) * C152419 * C152170 +
           (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45346 * C359 + C45660 + C45660 +
            C45343 * C383) *
               C152419 * C152518) *
              C152239 * C1462 +
          ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
            C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
            C45663 + C45345 * C1677) *
               C152419 * C152518 +
           (C45724 + C45725 + C45726) * C152419 * C152170) *
              C152239 * C1463 -
          ((C45350 * C8037 + C47131 + C47131 + C45345 * C8043 + C45348 * C2198 +
            C47132 + C47132 + C45344 * C2206 + C45346 * C1469 + C47133 +
            C47133 + C45343 * C1485) *
               C152419 * C152170 +
           (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 + C45348 * C2197 +
            C47135 + C47135 + C45344 * C2205 + C45346 * C1470 + C47136 +
            C47136 + C45343 * C1486) *
               C152419 * C152518) *
              C152239 * C1464 +
          ((C45346 * C1471 + C47137 + C47137 + C45343 * C1487 + C45348 * C8769 +
            C47138 + C47138 + C45344 * C8775 + C45350 * C24963 + C47139 +
            C47139 + C45345 * C24967) *
               C152419 * C152518 +
           (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 + C45348 * C8770 +
            C47141 + C47141 + C45344 * C8776 + C45350 * C24964 + C47142 +
            C47142 + C45345 * C24968) *
               C152419 * C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C2359 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C2360 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C2359 -
           ((C46032 + C46033 + C46034) * C152419 * C152170 +
            (C46028 + C46027 + C46026) * C152419 * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C2359 -
           ((C46456 + C46457 + C46458) * C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C2360 +
           ((C46034 + C46033 + C46032) * C152419 * C152518 +
            (C45346 * C608 + C45996 + C45996 + C45343 * C632 + C45348 * C2595 +
             C45997 + C45997 + C45344 * C2611 + C45350 * C2602 + C45998 +
             C45998 + C45345 * C2618) *
                C152419 * C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C2359 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C152627 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C2360 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C2359 -
           ((C45350 * C9345 + C47361 + C47361 + C45345 * C9351 +
             C45348 * C3130 + C47362 + C47362 + C45344 * C3138 +
             C45346 * C1647 + C47363 + C47363 + C45343 * C1671) *
                C152419 * C152170 +
            (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                C152419 * C152518) *
               C152586) *
              C152613 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C2359 -
           ((C47896 + C47897 + C47898) * C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C2360 +
           ((C45346 * C1653 + C47373 + C47373 + C45343 * C1677 +
             C45348 * C10052 + C47374 + C47374 + C45344 * C10058 +
             C45350 * C26241 + C47375 + C47375 + C45345 * C26245) *
                C152419 * C152518 +
            (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
             C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
             C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                C152419 * C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152284) *
              C152198 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C4281 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C152541 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152284) *
              C152198 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C152207 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C152541 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C4281 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C152541 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C4281) *
               C152284) *
              C152198 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C4281) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C4281 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C45424 + C45423 + C45422) * C152419 * C152518 +
             (C45425 + C45426 + C45427) * C152419 * C152170) *
                C4281 -
            ((C46456 + C46457 + C46458) * C152419 * C152170 +
             (C46031 + C46030 + C46029) * C152419 * C152518) *
                C152326) *
               C152541 +
           (((C46790 + C46789 + C46788) * C152419 * C152518 +
             (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
              C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
              C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                 C152419 * C152170) *
                C152326 -
            ((C46244 + C46245 + C46246) * C152419 * C152170 +
             (C45729 + C45728 + C45727) * C152419 * C152518) *
                C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152322 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C4953) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152329 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152322 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C4953) *
               C152284) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152329 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152322 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C4953) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152322 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152329 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152322 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152329 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152322 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C4953) *
               C152284) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152329 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152322 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152322 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152329 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152322 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152329 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152419 * C152518 +
             (C46026 + C46027 + C46028) * C152419 * C152170) *
                C4953) *
               C152541 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152329 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152322 -
            ((C48980 + C48981 + C48982) * C152419 * C152170 +
             (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
              C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
              C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                 C152419 * C152518) *
                C4953) *
               C152284) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152329 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152322 -
            ((C46032 + C46033 + C46034) * C152419 * C152170 +
             (C46028 + C46027 + C46026) * C152419 * C152518) *
                C4953) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152322 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152329 +
            ((C48982 + C48981 + C48980) * C152419 * C152518 +
             (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
              C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
              C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                 C152419 * C152170) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C4281 -
               (C690 * C126 + C691 * C125 + C692 * C124 +
                (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                   C152326) *
                  C152221 * C152633 +
              ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                   C152326 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C4281) *
                  C152221 * C152626 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
               (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) *
                   C152326) *
                  C152221 * C152611 +
              ((C690 * C123 + C696 * C124 + C985 * C125 +
                (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
                   C152326 -
               (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                   C4281) *
                  C152221 * C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                 C199 * C124 + C200 * C125 + C201 * C126) *
                    C4281 -
                (C690 * C126 + C691 * C125 + C692 * C124 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 *
                     C123) *
                    C152326) *
                   C152627 +
               (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 *
                     C123 +
                 C1224 * C124 + C1225 * C125 + C1226 * C126) *
                    C152326 -
                (C445 * C126 + C446 * C125 + C447 * C124 +
                 (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 *
                     C123) *
                    C4281) *
                   C152613 +
               (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                 C448 * C124 + C449 * C125 + C450 * C126) *
                    C4281 -
                (C2065 * C126 + C2066 * C125 + C2067 * C124 +
                 (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                     C123) *
                    C152326) *
                   C152583) *
                  C3415 +
              (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) *
                    C152326 -
                (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                    C4281) *
                   C152627 +
               ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                    C4281 -
                (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                    C152326) *
                   C152613 +
               ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
                 (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                     C126) *
                    C152326 -
                (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                    C4281) *
                   C152583) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152635 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152621 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C152221 * C3415 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152632 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152635 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152621 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152449 * C2979) * C152419 * C126) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C152633 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C4281 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152627 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152613 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C4281 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C152583) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152627 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152613 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152635 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152621 -
           ((C26744 + C26739 + C26740) * C152170 +
            (C26951 * C23222 + C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C152221 * C3415 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152632 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152635 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152621 +
           ((C26740 + C26739 + C26744) * C152518 +
            (C2995 * C23220 + C9855 * C23221 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C23222) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C4281 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C152221 * C152633 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152326 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C4281 -
           ((C46456 + C46457 + C46458) * C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C46458 + C46457 + C46456) * C152419 * C152518 +
            (C45346 * C609 + C46447 + C46447 + C45343 * C633 + C45348 * C610 +
             C46448 + C46448 + C45344 * C634 + C45350 * C2977 + C46449 +
             C46449 + C45345 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C4281 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C152627 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C4281) *
               C152613 +
           (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
              C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
              C45663 + C45345 * C1677) *
                 C152419 * C152518 +
             (C45724 + C45725 + C45726) * C152419 * C152170) *
                C4281 -
            ((C47896 + C47897 + C47898) * C152419 * C152170 +
             (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                 C152419 * C152518) *
                C152326) *
               C152583) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C4281) *
               C152627 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C4281 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152613 +
           (((C47898 + C47897 + C47896) * C152419 * C152518 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C45730 + C45731 + C45732) * C152419 * C152170 +
             (C45726 + C45725 + C45724) * C152419 * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152635 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152632 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152621 -
           ((C49192 + C49193 + C49194) * C152419 * C152170 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152419 * C152518) *
               C152599) *
              C152221 * C3415 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152632 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152635 -
           ((C46032 + C46033 + C46034) * C152419 * C152170 +
            (C46028 + C46027 + C46026) * C152419 * C152518) *
               C152621 +
           ((C49194 + C49193 + C49192) * C152419 * C152518 +
            (C45346 * C2596 + C49183 + C49183 + C45343 * C2612 +
             C45348 * C2601 + C49184 + C49184 + C45344 * C2617 +
             C45350 * C17923 + C49185 + C49185 + C45345 * C17929) *
                C152419 * C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152322 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C4953) *
              C152221 * C152198 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152329 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152322 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C4953) *
              C152221 * C152207 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152322 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152329 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152322 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152221 * C152198 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152329 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152322 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
              C152221 * C152207 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152322 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152329 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152322 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152329 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C4953) *
              C152221 * C152198 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152329 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152322 -
           ((C46032 + C46033 + C46034) * C152419 * C152170 +
            (C46028 + C46027 + C46026) * C152419 * C152518) *
               C4953) *
              C152221 * C152207 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152322 -
           ((C46456 + C46457 + C46458) * C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C152329 +
           ((C46034 + C46033 + C46032) * C152419 * C152518 +
            (C45346 * C608 + C45996 + C45996 + C45343 * C632 + C45348 * C2595 +
             C45997 + C45997 + C45344 * C2611 + C45350 * C2602 + C45998 +
             C45998 + C45345 * C2618) *
                C152419 * C152170) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152627 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152613 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C152583) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152627 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152613 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152221 * C152633 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
              C152221 * C152626 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
              C152221 * C152611 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
               C152326 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C152633 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C4281 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152627 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152613 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C4281 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C152583) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152627 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152613 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C4281 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C152221 * C152633 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152326 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C4281 -
           ((C46456 + C46457 + C46458) * C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C46458 + C46457 + C46456) * C152419 * C152518 +
            (C45346 * C609 + C46447 + C46447 + C45343 * C633 + C45348 * C610 +
             C46448 + C46448 + C45344 * C634 + C45350 * C2977 + C46449 +
             C46449 + C45345 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C4281 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C152627 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C4281) *
               C152613 +
           (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
              C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
              C45663 + C45345 * C1677) *
                 C152419 * C152518 +
             (C45724 + C45725 + C45726) * C152419 * C152170) *
                C4281 -
            ((C47896 + C47897 + C47898) * C152419 * C152170 +
             (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                 C152419 * C152518) *
                C152326) *
               C152583) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C4281) *
               C152627 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C4281 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152613 +
           (((C47898 + C47897 + C47896) * C152419 * C152518 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C45730 + C45731 + C45732) * C152419 * C152170 +
             (C45726 + C45725 + C45724) * C152419 * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1823 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1824 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C1825 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152239 * C152593) *
              C152527 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1824 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1823 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C1825 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 * C126) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152541 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152284) *
              C829 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152284 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152541) *
              C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152541 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152284) *
              C831 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
               C152239 * C152284 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
               C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152541 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C829 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152541) *
              C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152541 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C831 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1823 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1824 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C1825 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C152527 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1824 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1823 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C1825 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152541 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152284) *
              C829 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152284 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152541) *
              C830 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C152541 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152284) *
              C831 +
          (((C46246 + C46245 + C46244) * C152419 * C152518 +
            (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
             C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
             C46237 + C45345 * C2823) *
                C152419 * C152170) *
               C152239 * C152284 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C1823 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C1824 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C1825 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C152239 * C152593) *
              C152527 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C1824 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C1823 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C1825 +
           ((C47590 + C47589 + C47588) * C152419 * C152518 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152419 * C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152542 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C1823 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152326 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152542) *
              C1824 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152542 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152326) *
              C1825 +
          (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 * C126) *
               C152326 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C152284) *
              C353 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C354 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C152541 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152284) *
              C353 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C152542 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C152541 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C1823 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152542) *
              C1824 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152542 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C1825 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152542 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C152541 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152542) *
               C152284) *
              C353 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152542) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152542 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C45424 + C45423 + C45422) * C152419 * C152518 +
             (C45425 + C45426 + C45427) * C152419 * C152170) *
                C152542 -
            ((C46456 + C46457 + C46458) * C152419 * C152170 +
             (C46031 + C46030 + C46029) * C152419 * C152518) *
                C152326) *
               C152541 +
           (((C46790 + C46789 + C46788) * C152419 * C152518 +
             (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
              C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
              C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                 C152419 * C152170) *
                C152326 -
            ((C46244 + C46245 + C46246) * C152419 * C152170 +
             (C45729 + C45728 + C45727) * C152419 * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152542 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C1823 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152326 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152542) *
              C1824 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152542 -
           ((C47896 + C47897 + C47898) * C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C152326) *
              C1825 +
          (((C45346 * C2197 + C48093 + C48093 + C45343 * C2205 +
             C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
             C45350 * C26938 + C48095 + C48095 + C45345 * C26942) *
                C152419 * C152518 +
            (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
             C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
             C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                C152419 * C152170) *
               C152326 -
           ((C47588 + C47589 + C47590) * C152419 * C152170 +
            (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45346 * C1470 + C47136 + C47136 + C45343 * C1486) *
                C152419 * C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152239 * C152221 * C129 -
              (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                  C152239 * C152221 * C130 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                  C152239 * C152221 * C131 -
              (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C152239 * C152221 * C132 +
              (C202 * C123 + C203 * C124 + C204 * C125 +
               (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C152627 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C152613 +
               ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152239 * C152583) *
                  C353 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C152613 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C152627 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152239 * C152583) *
                  C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152239 * C152627 -
               ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
                C451 * C125 + C445 * C124 + C446 * C123) *
                   C152239 * C152613 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152628 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152221 * C353 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152615 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152628 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
              C152221 * C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152628 -
           ((C134 * C611 + C664 + C664 + C152449 * C635) * C152419 * C126 +
            C696 * C125 + C690 * C124 + C691 * C123) *
               C152615 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1374 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C152624 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
              C152239 * C1462 +
          ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152239 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
              C152239 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 * C126) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152628 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C1373 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152615 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152628 -
           ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152586) *
              C1374 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152628 -
           ((C134 * C1649 + C1686 + C1686 + C152449 * C1673) * C152419 * C126 +
            (C134 * C1650 + C1687 + C1687 + C152449 * C1674) * C152419 * C125 +
            (C134 * C1651 + C1688 + C1688 + C152449 * C1675) * C152419 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152615 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C353 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152615 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152628 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152628 -
           ((C2062 * C23222 + C1222 * C23221 + C682 * C23220) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152615 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C1373 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152615 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152628 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C1374 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152628 -
           (((C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C23222 +
             C8573 * C23221 + C2064 * C23220) *
                C152170 +
            ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
             C8786 * C23221 + C8070 * C23220) *
                C152518) *
               C152615 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C152221 * C129 -
          ((C45422 + C45423 + C45424) * C152419 * C152170 +
           (C45421 + C45420 + C45419) * C152419 * C152518) *
              C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152419 * C152518 +
           (C45425 + C45426 + C45427) * C152419 * C152170) *
              C152239 * C152221 * C131 -
          ((C45428 + C45429 + C45430) * C152419 * C152170 +
           (C45427 + C45426 + C45425) * C152419 * C152518) *
              C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152419 * C152518 +
           (C45346 * C141 + C45392 + C45392 + C45343 * C157 + C45348 * C611 +
            C45393 + C45393 + C45344 * C635 + C45350 * C612 + C45394 + C45394 +
            C45345 * C636) *
               C152419 * C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152613 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152613 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45350 * C1645 + C45691 + C45691 + C45345 * C1669 +
             C45348 * C1182 + C45692 + C45692 + C45344 * C1194 + C45346 * C356 +
             C45693 + C45693 + C45343 * C380) *
                C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152628 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C152221 * C353 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152615 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152628 -
           ((C46032 + C46033 + C46034) * C152419 * C152170 +
            (C46028 + C46027 + C46026) * C152419 * C152518) *
               C152586) *
              C152221 * C354 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152628 -
           ((C45350 * C2595 + C45993 + C45993 + C45345 * C2611 + C45348 * C608 +
             C45994 + C45994 + C45344 * C632 + C45346 * C601 + C45995 + C45995 +
             C45343 * C625) *
                C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C152615 +
           ((C46034 + C46033 + C46032) * C152419 * C152518 +
            (C45346 * C608 + C45996 + C45996 + C45343 * C632 + C45348 * C2595 +
             C45997 + C45997 + C45344 * C2611 + C45350 * C2602 + C45998 +
             C45998 + C45345 * C2618) *
                C152419 * C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C1373 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C1374 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C1374 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C1373 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C1461 -
          ((C45721 + C45722 + C45723) * C152419 * C152170 +
           (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45346 * C359 + C45660 + C45660 +
            C45343 * C383) *
               C152419 * C152518) *
              C152239 * C1462 +
          ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
            C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
            C45663 + C45345 * C1677) *
               C152419 * C152518 +
           (C45724 + C45725 + C45726) * C152419 * C152170) *
              C152239 * C1463 -
          ((C45350 * C8037 + C47131 + C47131 + C45345 * C8043 + C45348 * C2198 +
            C47132 + C47132 + C45344 * C2206 + C45346 * C1469 + C47133 +
            C47133 + C45343 * C1485) *
               C152419 * C152170 +
           (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 + C45348 * C2197 +
            C47135 + C47135 + C45344 * C2205 + C45346 * C1470 + C47136 +
            C47136 + C45343 * C1486) *
               C152419 * C152518) *
              C152239 * C1464 +
          ((C45346 * C1471 + C47137 + C47137 + C45343 * C1487 + C45348 * C8769 +
            C47138 + C47138 + C45344 * C8775 + C45350 * C24963 + C47139 +
            C47139 + C45345 * C24967) *
               C152419 * C152518 +
           (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 + C45348 * C8770 +
            C47141 + C47141 + C45344 * C8776 + C45350 * C24964 + C47142 +
            C47142 + C45345 * C24968) *
               C152419 * C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152628 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152419 * C152518 +
            (C46026 + C46027 + C46028) * C152419 * C152170) *
               C152586) *
              C1373 +
          (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                C152419 * C152518 +
            (C46785 + C46786 + C46787) * C152419 * C152170) *
               C152615 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152628 -
           ((C45350 * C9345 + C47361 + C47361 + C45345 * C9351 +
             C45348 * C3130 + C47362 + C47362 + C45344 * C3138 +
             C45346 * C1647 + C47363 + C47363 + C45343 * C1671) *
                C152419 * C152170 +
            (C45350 * C9344 + C47364 + C47364 + C45345 * C9350 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45346 * C1648 + C47366 + C47366 + C45343 * C1672) *
                C152419 * C152518) *
               C152586) *
              C1374 +
          (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152628 -
           ((C45350 * C10053 + C47367 + C47367 + C45345 * C10059 +
             C45348 * C1654 + C47368 + C47368 + C45344 * C1678 +
             C45346 * C1651 + C47369 + C47369 + C45343 * C1675) *
                C152419 * C152170 +
            (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
             C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
             C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                C152419 * C152518) *
               C152615 +
           ((C45346 * C1653 + C47373 + C47373 + C45343 * C1677 +
             C45348 * C10052 + C47374 + C47374 + C45344 * C10058 +
             C45350 * C26241 + C47375 + C47375 + C45345 * C26245) *
                C152419 * C152518 +
            (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
             C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
             C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                C152419 * C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C1373 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C1374 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152542 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C152583) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C1373 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C1374 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152542 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152221 * C829 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
              C152221 * C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
              C152221 * C831 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
               C152326 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C829 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152542) *
              C152221 * C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152542 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C831 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C1373 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C1374 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C152542 -
            ((C25476 + C25471 + C25472) * C152170 +
             ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
              C8786 * C23221 + C8070 * C23220) *
                 C152518) *
                C152326) *
               C152583) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C1373 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C1374 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152542 -
           ((C46023 + C46024 + C46025) * C152419 * C152170 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152419 * C152518) *
               C152326) *
              C152221 * C829 +
          (((C46025 + C46024 + C46023) * C152419 * C152518 +
            (C46029 + C46030 + C46031) * C152419 * C152170) *
               C152326 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152542) *
              C152221 * C830 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152542 -
           ((C46456 + C46457 + C46458) * C152419 * C152170 +
            (C46031 + C46030 + C46029) * C152419 * C152518) *
               C152326) *
              C152221 * C831 +
          (((C46458 + C46457 + C46456) * C152419 * C152518 +
            (C45346 * C609 + C46447 + C46447 + C45343 * C633 + C45348 * C610 +
             C46448 + C46448 + C45344 * C634 + C45350 * C2977 + C46449 +
             C46449 + C45345 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C45428 + C45429 + C45430) * C152419 * C152170 +
            (C45427 + C45426 + C45425) * C152419 * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152419 * C152518 +
             (C45419 + C45420 + C45421) * C152419 * C152170) *
                C152542 -
            ((C46023 + C46024 + C46025) * C152419 * C152170 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152419 * C152518) *
                C152326) *
               C1373 +
           (((C45346 * C1179 + C46749 + C46749 + C45343 * C1191 +
              C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
              C45350 * C3129 + C46751 + C46751 + C45345 * C3137) *
                 C152419 * C152518 +
             (C46785 + C46786 + C46787) * C152419 * C152170) *
                C152326 -
            ((C45721 + C45722 + C45723) * C152419 * C152170 +
             (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
              C45348 * C1179 + C45659 + C45659 + C45344 * C1191 +
              C45346 * C359 + C45660 + C45660 + C45343 * C383) *
                 C152419 * C152518) *
                C152542) *
               C1374 +
           (((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
              C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
              C45663 + C45345 * C1677) *
                 C152419 * C152518 +
             (C45724 + C45725 + C45726) * C152419 * C152170) *
                C152542 -
            ((C47896 + C47897 + C47898) * C152419 * C152170 +
             (C45350 * C10052 + C47370 + C47370 + C45345 * C10058 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45346 * C1652 + C47372 + C47372 + C45343 * C1676) *
                 C152419 * C152518) *
                C152326) *
               C152583) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152419 * C152518 +
             (C46029 + C46030 + C46031) * C152419 * C152170) *
                C152326 -
            ((C45422 + C45423 + C45424) * C152419 * C152170 +
             (C45421 + C45420 + C45419) * C152419 * C152518) *
                C152542) *
               C1373 +
           (((C45723 + C45722 + C45721) * C152419 * C152518 +
             (C45727 + C45728 + C45729) * C152419 * C152170) *
                C152542 -
            ((C46788 + C46789 + C46790) * C152419 * C152170 +
             (C46787 + C46786 + C46785) * C152419 * C152518) *
                C152326) *
               C1374 +
           (((C47898 + C47897 + C47896) * C152419 * C152518 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C45730 + C45731 + C45732) * C152419 * C152170 +
             (C45726 + C45725 + C45724) * C152419 * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152627 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152613 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152613 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152627 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152627 -
           ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152239 * C152613 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C152221 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
              C152221 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
              C152221 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
              C152221 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1374 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C152624 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
              C152239 * C1462 +
          ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152239 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
              C152239 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 * C126) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C152221 * C129 -
          ((C45422 + C45423 + C45424) * C152419 * C152170 +
           (C45421 + C45420 + C45419) * C152419 * C152518) *
              C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152419 * C152518 +
           (C45425 + C45426 + C45427) * C152419 * C152170) *
              C152239 * C152221 * C131 -
          ((C45428 + C45429 + C45430) * C152419 * C152170 +
           (C45427 + C45426 + C45425) * C152419 * C152518) *
              C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152419 * C152518 +
           (C45346 * C141 + C45392 + C45392 + C45343 * C157 + C45348 * C611 +
            C45393 + C45393 + C45344 * C635 + C45350 * C612 + C45394 + C45394 +
            C45345 * C636) *
               C152419 * C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C152613 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C152613 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C152627 -
           ((C45350 * C1645 + C45691 + C45691 + C45345 * C1669 +
             C45348 * C1182 + C45692 + C45692 + C45344 * C1194 + C45346 * C356 +
             C45693 + C45693 + C45343 * C380) *
                C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152419 * C152518 +
            (C45419 + C45420 + C45421) * C152419 * C152170) *
               C152239 * C1373 -
           ((C45721 + C45722 + C45723) * C152419 * C152170 +
            (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 +
             C45348 * C1179 + C45659 + C45659 + C45344 * C1191 + C45346 * C359 +
             C45660 + C45660 + C45343 * C383) *
                C152419 * C152518) *
               C152239 * C1374 +
           ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
             C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
             C45663 + C45345 * C1677) *
                C152419 * C152518 +
            (C45724 + C45725 + C45726) * C152419 * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152419 * C152518 +
            (C45727 + C45728 + C45729) * C152419 * C152170) *
               C152239 * C1374 -
           ((C45422 + C45423 + C45424) * C152419 * C152170 +
            (C45421 + C45420 + C45419) * C152419 * C152518) *
               C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152419 * C152170 +
            (C45726 + C45725 + C45724) * C152419 * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152419 * C152518 +
            (C45425 + C45426 + C45427) * C152419 * C152170) *
               C152239 * C1373 -
           ((C46244 + C46245 + C46246) * C152419 * C152170 +
            (C45729 + C45728 + C45727) * C152419 * C152518) *
               C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152419 * C152518 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152419 * C152518 +
           (C45419 + C45420 + C45421) * C152419 * C152170) *
              C152239 * C1461 -
          ((C45721 + C45722 + C45723) * C152419 * C152170 +
           (C45350 * C1648 + C45658 + C45658 + C45345 * C1672 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45346 * C359 + C45660 + C45660 +
            C45343 * C383) *
               C152419 * C152518) *
              C152239 * C1462 +
          ((C45346 * C360 + C45661 + C45661 + C45343 * C384 + C45348 * C1652 +
            C45662 + C45662 + C45344 * C1676 + C45350 * C1653 + C45663 +
            C45663 + C45345 * C1677) *
               C152419 * C152518 +
           (C45724 + C45725 + C45726) * C152419 * C152170) *
              C152239 * C1463 -
          ((C45350 * C8037 + C47131 + C47131 + C45345 * C8043 + C45348 * C2198 +
            C47132 + C47132 + C45344 * C2206 + C45346 * C1469 + C47133 +
            C47133 + C45343 * C1485) *
               C152419 * C152170 +
           (C45350 * C8036 + C47134 + C47134 + C45345 * C8042 + C45348 * C2197 +
            C47135 + C47135 + C45344 * C2205 + C45346 * C1470 + C47136 +
            C47136 + C45343 * C1486) *
               C152419 * C152518) *
              C152239 * C1464 +
          ((C45346 * C1471 + C47137 + C47137 + C45343 * C1487 + C45348 * C8769 +
            C47138 + C47138 + C45344 * C8775 + C45350 * C24963 + C47139 +
            C47139 + C45345 * C24967) *
               C152419 * C152518 +
           (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 + C45348 * C8770 +
            C47141 + C47141 + C45344 * C8776 + C45350 * C24964 + C47142 +
            C47142 + C45345 * C24968) *
               C152419 * C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152280 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152287 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C3759) *
              C152198 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152287 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152280 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C3759) *
              C152207 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152280 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152287 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152280 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152287 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C3759) *
              C152198 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152287 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152280 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C3759) *
              C152207 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152280 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152287 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152280 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152287 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152239 * C3759) *
              C152198 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152287 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152280 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C3759) *
              C152207 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C152280 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152287 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152280 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152287 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C152542 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C3759) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C152280 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152287 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152280 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C152287 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C152542 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             (C8786 * C152435 + C8070 * C152555) * C6260) *
                C152326) *
               C3759) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C152280 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152287 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152542 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C152280 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152542) *
               C152287 +
           (((C54195 + C54194 + C54193) * C152555 +
             (C55474 + C55475 + C55476) * C152435) *
                C152165 * C152542 -
            ((C56439 + C56440 + C56441) * C152435 +
             (C55742 + C55741 + C55740) * C152555) *
                C152165 * C152326) *
               C3759) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152542) *
               C152280 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152542 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152287 +
           (((C47898 + C47897 + C47896) * C152555 +
             (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
              C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
              C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C47588 + C47589 + C47590) * C152435 +
             (C45726 + C45725 + C45724) * C152555) *
                C152165 * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C3275 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C152284) *
                  C152633 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                C6945 * C6262) *
                   C152239 * C152284 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C3275) *
                  C152626 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152239 * C3275 -
               ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
                C6512 * C6260) *
                   C152239 * C152284) *
                  C152611 +
              ((C6945 * C6260 + (C6947 + C6946) * C6261 +
                (C842 * C152555 +
                 (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                    C6262) *
                   C152239 * C152284 -
               ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 +
                C6275 * C6260) *
                   C152239 * C3275) *
                  C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C152634 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C152630 +
               ((C6518 * C152555 + C7815 * C152435) * C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152239 * C152618 -
               ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
                (C7818 * C152435 + C7815 * C152555) * C6260) *
                   C152239 * C152593) *
                  C3415 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                C6945 * C6262) *
                   C152239 * C152630 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C152634 -
               ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                (C6504 + C6503) * C6260) *
                   C152239 * C152618 +
               ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
                (C1846 * C152555 +
                 (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                    C6262) *
                   C152239 * C152593) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152628 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152615 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C152586) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152615 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152628 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C152586) *
               C152284) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152615 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152628 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C152586) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152628 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152615 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C3275 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C152633 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C3275 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152634 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152630 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152618 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C3415 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152630 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152634 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152618 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152628 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152615 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C152586) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152615 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152628 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C152586) *
               C152284) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152615 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152628 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C152586) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152628 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152615 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C3275 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152284) *
              C152633 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152284 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C3275) *
              C152626 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C3275 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152284) *
              C152611 +
          (((C46246 + C46245 + C46244) * C152555 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152435) *
               C152165 * C152239 * C152284 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152634 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152630 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152239 * C152618 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C152239 * C152593) *
              C3415 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152630 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152634 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152618 +
           ((C47590 + C47589 + C47588) * C152555 +
            (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 +
             C45348 * C8770 + C47141 + C47141 + C45344 * C8776 +
             C45350 * C24964 + C47142 + C47142 + C45345 * C24968) *
                C152435) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152628 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152615 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152555 +
             (C55737 + C55738 + C55739) * C152435) *
                C152165 * C152586) *
               C3275 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152615 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152628 -
            ((C55743 + C55744 + C55745) * C152435 +
             (C55739 + C55738 + C55737) * C152555) *
                C152165 * C152586) *
               C152284) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152615 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152628 -
            ((C48980 + C48981 + C48982) * C152435 +
             (C46028 + C46027 + C46026) * C152555) *
                C152165 * C152586) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152628 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152615 +
            ((C48982 + C48981 + C48980) * C152555 +
             (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
              C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
              C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                 C152435) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152284) *
              C152198 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C152542 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C152284) *
              C152198 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                C152542 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C3275 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152542 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C3275 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152542) *
               C152284) *
              C152198 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152542) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152542 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          ((((C45424 + C45423 + C45422) * C152555 +
             (C45727 + C45728 + C45729) * C152435) *
                C152165 * C152542 -
            ((C46788 + C46789 + C46790) * C152435 +
             (C46031 + C46030 + C46029) * C152555) *
                C152165 * C152326) *
               C3275 +
           (((C46790 + C46789 + C46788) * C152555 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C45730 + C45731 + C45732) * C152435 +
             (C45729 + C45728 + C45727) * C152555) *
                C152165 * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152634 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152630 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152618 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152239 * C152593) *
              C3415 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152630 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152634 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152618 +
           ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
            (C1846 * C152555 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C3275 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152284) *
              C152633 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152284 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C3275) *
              C152626 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C3275 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152284) *
              C152611 +
          ((C6945 * C6260 + (C6947 + C6946) * C6261 +
            (C842 * C152555 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C6262) *
               C152239 * C152284 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C3275 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C152633 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C3275 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152634 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152630 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152618 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C3415 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152630 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152634 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152618 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C3275 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152284) *
              C152633 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152284 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C3275) *
              C152626 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C3275 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152284) *
              C152611 +
          (((C46246 + C46245 + C46244) * C152555 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152435) *
               C152165 * C152239 * C152284 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152634 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152630 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152239 * C152618 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C152239 * C152593) *
              C3415 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152630 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152634 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152618 +
           ((C47590 + C47589 + C47588) * C152555 +
            (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 +
             C45348 * C8770 + C47141 + C47141 + C45344 * C8776 +
             C45350 * C24964 + C47142 + C47142 + C45345 * C24968) *
                C152435) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152280 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152287 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C4281 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C3759) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152280 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152287 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152280 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152287 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C4281 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             (C8786 * C152435 + C8070 * C152555) * C6260) *
                C152326) *
               C3759) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C152280 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152287 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C4281 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C152280 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C4281) *
               C152287 +
           (((C54195 + C54194 + C54193) * C152555 +
             (C55474 + C55475 + C55476) * C152435) *
                C152165 * C4281 -
            ((C56439 + C56440 + C56441) * C152435 +
             (C55742 + C55741 + C55740) * C152555) *
                C152165 * C152326) *
               C3759) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C4281) *
               C152280 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C4281 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152287 +
           (((C47898 + C47897 + C47896) * C152555 +
             (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
              C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
              C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C47588 + C47589 + C47590) * C152435 +
             (C45726 + C45725 + C45724) * C152555) *
                C152165 * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152322 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C4953) *
              C152280 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152329 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152322 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C4953) *
              C152287 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152322 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152329 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152322 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C4953) *
              C152280 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152329 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152322 -
           ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C4953) *
              C152287 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152322 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152329 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152322 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152329 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C4953) *
              C152280 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152329 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152322 -
           ((C55743 + C55744 + C55745) * C152435 +
            (C55739 + C55738 + C55737) * C152555) *
               C152165 * C4953) *
              C152287 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152322 -
           ((C56439 + C56440 + C56441) * C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C152329 +
           ((C55745 + C55744 + C55743) * C152555 +
            (C45346 * C8036 + C55716 + C55716 + C45343 * C8042 +
             C45348 * C26938 + C55717 + C55717 + C45344 * C26942 +
             C45350 * C33441 + C55718 + C55718 + C45345 * C33443) *
                C152435) *
               C152165 * C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                  C6517 * C152435) *
                     C6260 +
                 (C6264 + C6265) * C6261 + C6274 * C6262) *
                    C4281 -
                (C6749 * C6262 + (C6739 + C6740) * C6261 +
                 (C7446 * C152435 +
                  (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                     C6260) *
                    C152326) *
                   C3275 +
               (((C7446 * C152555 + C8070 * C152435) * C6260 +
                 (C7437 + C7438) * C6261 + C7444 * C6262) *
                    C152326 -
                (C6512 * C6262 + (C6499 + C6500) * C6261 +
                 (C6518 * C152435 + C6517 * C152555) * C6260) *
                    C4281) *
                   C152284) *
                  C152624 +
              ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                 C7142 * C6262) *
                    C152326 -
                (C6275 * C6262 + (C6267 + C6266) * C6261 +
                 (C6265 + C6264) * C6260) *
                    C4281) *
                   C3275 +
               (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                 C6945 * C6262) *
                    C4281 -
                ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
                 (C7438 + C7437) * C6260) *
                    C152326) *
                   C152284) *
                  C152609 +
              (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                    C4281 -
                ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
                 C6749 * C6260) *
                    C152326) *
                   C3275 +
               ((C7444 * C6260 + (C7442 + C7441) * C6261 +
                 (C1223 * C152555 +
                  (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                     C6262) *
                    C152326 -
                ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
                 C6512 * C6260) *
                    C4281) *
                   C152284) *
                  C152577) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C4281 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                (C7446 * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C152326) *
                  C152634 +
              (((C7446 * C152555 + C8070 * C152435) * C6260 +
                (C7437 + C7438) * C6261 + C7444 * C6262) *
                   C152326 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C4281) *
                  C152630 +
              (((C6518 * C152555 + C7815 * C152435) * C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C4281 -
               ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
                (C8786 * C152435 + C8070 * C152555) * C6260) *
                   C152326) *
                  C152618 +
              (((C8786 * C152555 +
                 (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                    C6260 +
                (C8573 * C152555 +
                 (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                    C6261 +
                (C8572 * C152555 +
                 (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                    C6262) *
                   C152326 -
               ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
                (C7818 * C152435 + C7815 * C152555) * C6260) *
                   C4281) *
                  C152593) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152635 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152621 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C3275 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152632 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152635 -
           ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152621 +
           ((C10069 * C152555 +
             (C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C152435) *
                C6260 +
            (C9856 * C152555 +
             (C134 * C10053 + C10065 + C10065 + C152449 * C10059) * C152435) *
                C6261 +
            (C9855 * C152555 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C152435) *
                C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C4281 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152634 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C4281) *
              C152630 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C4281 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C152618 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152635 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152621 -
           (C33908 * C31464 + C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C3275 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152632 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152635 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152621 +
           (C10069 * C31461 + C26951 * C31462 + C33908 * C31463 +
            (C134 * C33899 + C33905 + C33905 + C152449 * C33901) * C31464) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C4281 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C3275 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C4281) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C4281 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          ((((C45424 + C45423 + C45422) * C152555 +
             (C45727 + C45728 + C45729) * C152435) *
                C152165 * C4281 -
            ((C46788 + C46789 + C46790) * C152435 +
             (C46031 + C46030 + C46029) * C152555) *
                C152165 * C152326) *
               C3275 +
           (((C46790 + C46789 + C46788) * C152555 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C45730 + C45731 + C45732) * C152435 +
             (C45729 + C45728 + C45727) * C152555) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C4281 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C152634 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152326 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C4281) *
              C152630 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C4281 -
           ((C56439 + C56440 + C56441) * C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C152326) *
              C152618 +
          (((C56441 + C56440 + C56439) * C152555 +
            (C45346 * C8769 + C56430 + C56430 + C45343 * C8775 +
             C45348 * C24963 + C56431 + C56431 + C45344 * C24967 +
             C45350 * C33899 + C56432 + C56432 + C45345 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152635 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152632 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152621 -
           ((C57699 + C57700 + C57701) * C152435 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152555) *
               C152165 * C152599) *
              C3275 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152632 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152635 -
           ((C55743 + C55744 + C55745) * C152435 +
            (C55739 + C55738 + C55737) * C152555) *
               C152165 * C152621 +
           ((C57701 + C57700 + C57699) * C152555 +
            (C45346 * C10052 + C57690 + C57690 + C45343 * C10058 +
             C45348 * C26241 + C57691 + C57691 + C45344 * C26245 +
             C45350 * C40068 + C57692 + C57692 + C45345 * C40072) *
                C152435) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152322 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C4953) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152329 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152322 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C4953) *
               C152284) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152329 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152322 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C4953) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152322 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152329 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152322 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C4953) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152329 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152322 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C4953) *
               C152284) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152329 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152322 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C4953) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152322 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152329 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152322 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152329 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152555 +
             (C55737 + C55738 + C55739) * C152435) *
                C152165 * C4953) *
               C3275 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152329 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152322 -
            ((C55743 + C55744 + C55745) * C152435 +
             (C55739 + C55738 + C55737) * C152555) *
                C152165 * C4953) *
               C152284) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152329 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152322 -
            ((C48980 + C48981 + C48982) * C152435 +
             (C46028 + C46027 + C46026) * C152555) *
                C152165 * C4953) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152322 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152329 +
            ((C48982 + C48981 + C48980) * C152555 +
             (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
              C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
              C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                 C152435) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C4281 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152634 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152326 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C4281) *
              C152630 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C4281 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152326) *
              C152618 +
          (((C8786 * C152555 +
             (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                C6260 +
            (C8573 * C152555 +
             (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                C6261 +
            (C8572 * C152555 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C6262) *
               C152326 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152284) *
              C152624 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C152609 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C3275 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C4281 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152634 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C4281) *
              C152630 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C4281 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C152618 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C4281 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C3275 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C4281) *
               C3275 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C4281 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          ((((C45424 + C45423 + C45422) * C152555 +
             (C45727 + C45728 + C45729) * C152435) *
                C152165 * C4281 -
            ((C46788 + C46789 + C46790) * C152435 +
             (C46031 + C46030 + C46029) * C152555) *
                C152165 * C152326) *
               C3275 +
           (((C46790 + C46789 + C46788) * C152555 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C45730 + C45731 + C45732) * C152435 +
             (C45729 + C45728 + C45727) * C152555) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C4281 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C152634 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152326 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C4281) *
              C152630 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C4281 -
           ((C56439 + C56440 + C56441) * C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C152326) *
              C152618 +
          (((C56441 + C56440 + C56439) * C152555 +
            (C45346 * C8769 + C56430 + C56430 + C45343 * C8775 +
             C45348 * C24963 + C56431 + C56431 + C45344 * C24967 +
             C45350 * C33899 + C56432 + C56432 + C45345 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C152541 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C152284) *
                  C829 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                C6945 * C6262) *
                   C152239 * C152284 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C152541) *
                  C830 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152239 * C152541 -
               ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
                C6512 * C6260) *
                   C152239 * C152284) *
                  C831 +
              ((C6945 * C6260 + (C6947 + C6946) * C6261 +
                (C842 * C152555 +
                 (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                    C6262) *
                   C152239 * C152284 -
               ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 +
                C6275 * C6260) *
                   C152239 * C152541) *
                  C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C1823 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C1824 +
               ((C6518 * C152555 + C7815 * C152435) * C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152239 * C1825 -
               ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
                (C7818 * C152435 + C7815 * C152555) * C6260) *
                   C152239 * C152593) *
                  C152527 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                C6945 * C6262) *
                   C152239 * C1824 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C1823 -
               ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                (C6504 + C6503) * C6260) *
                   C152239 * C1825 +
               ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
                (C1846 * C152555 +
                 (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                    C6262) *
                   C152239 * C152593) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C2359 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C152586) *
               C152541 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C2360 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C2359 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C152586) *
               C152284) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C2360 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C2359 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C152586) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C2359 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C2360 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152541 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C829 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152541 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1823 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1824 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C1825 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C152527 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1824 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1823 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C1825 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C2359 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C2360 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C152586) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C2360 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C2359 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C152586) *
               C152284) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C2360 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C2359 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C152586) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C2359 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C2360 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152541 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152284) *
              C829 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152284 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152541) *
              C830 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C152541 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152284) *
              C831 +
          (((C46246 + C46245 + C46244) * C152555 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152435) *
               C152165 * C152239 * C152284 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C1823 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C1824 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152239 * C1825 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C152239 * C152593) *
              C152527 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C1824 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C1823 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C1825 +
           ((C47590 + C47589 + C47588) * C152555 +
            (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 +
             C45348 * C8770 + C47141 + C47141 + C45344 * C8776 +
             C45350 * C24964 + C47142 + C47142 + C45345 * C24968) *
                C152435) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C2359 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C2360 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152555 +
             (C55737 + C55738 + C55739) * C152435) *
                C152165 * C152586) *
               C152541 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C2360 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C2359 -
            ((C55743 + C55744 + C55745) * C152435 +
             (C55739 + C55738 + C55737) * C152555) *
                C152165 * C152586) *
               C152284) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C2360 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C2359 -
            ((C48980 + C48981 + C48982) * C152435 +
             (C46028 + C46027 + C46026) * C152555) *
                C152165 * C152586) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C2359 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C2360 +
            ((C48982 + C48981 + C48980) * C152555 +
             (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
              C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
              C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                 C152435) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                  C6517 * C152435) *
                     C6260 +
                 (C6264 + C6265) * C6261 + C6274 * C6262) *
                    C152542 -
                (C6749 * C6262 + (C6739 + C6740) * C6261 +
                 (C7446 * C152435 +
                  (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                     C6260) *
                    C152326) *
                   C152541 +
               (((C7446 * C152555 +
                  (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152435) *
                     C6260 +
                 (C7437 + C7438) * C6261 + C7444 * C6262) *
                    C152326 -
                (C6512 * C6262 + (C6499 + C6500) * C6261 +
                 (C6518 * C152435 + C6517 * C152555) * C6260) *
                    C152542) *
                   C152284) *
                  C353 +
              ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                 C7142 * C6262) *
                    C152326 -
                (C6275 * C6262 + (C6267 + C6266) * C6261 +
                 (C6265 + C6264) * C6260) *
                    C152542) *
                   C152541 +
               (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                 C6945 * C6262) *
                    C152542 -
                ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
                 (C7438 + C7437) * C6260) *
                    C152326) *
                   C152284) *
                  C354 +
              (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                    C152542 -
                ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
                 C6749 * C6260) *
                    C152326) *
                   C152541 +
               ((C7444 * C6260 + (C7442 + C7441) * C6261 +
                 (C1223 * C152555 +
                  (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                     C6262) *
                    C152326 -
                ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
                 C6512 * C6260) *
                    C152542) *
                   C152284) *
                  C152577) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152542 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                (C7446 * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C152326) *
                  C1823 +
              (((C7446 * C152555 + C8070 * C152435) * C6260 +
                (C7437 + C7438) * C6261 + C7444 * C6262) *
                   C152326 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152542) *
                  C1824 +
              (((C6518 * C152555 + C7815 * C152435) * C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152542 -
               ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
                (C8786 * C152435 + C8070 * C152555) * C6260) *
                   C152326) *
                  C1825 +
              (((C8786 * C152555 +
                 (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                    C6260 +
                (C8573 * C152555 +
                 (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                    C6261 +
                (C8572 * C152555 +
                 (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                    C6262) *
                   C152326 -
               ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
                (C7818 * C152435 + C7815 * C152555) * C6260) *
                   C152542) *
                  C152593) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2973 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C2975 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C152541 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C2974 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C2973 -
           ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C2975 +
           ((C10069 * C152555 +
             (C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C152435) *
                C6260 +
            (C9856 * C152555 +
             (C134 * C10053 + C10065 + C10065 + C152449 * C10059) * C152435) *
                C6261 +
            (C9855 * C152555 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C152435) *
                C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152284) *
              C353 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C152542 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C1823 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152542) *
              C1824 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152542 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C1825 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2973 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C2975 -
           (C33908 * C31464 + C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C152541 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C2974 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C2973 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C2975 +
           (C10069 * C31461 + C26951 * C31462 + C33908 * C31463 +
            (C134 * C33899 + C33905 + C33905 + C152449 * C33901) * C31464) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152542 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C152541 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C45346 * C1652 + C47372 + C47372 + C45343 * C1676 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45350 * C10052 + C47370 + C47370 + C45345 * C10058) *
                 C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152542) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152542 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152284) *
              C354 +
          ((((C45424 + C45423 + C45422) * C152555 +
             (C45727 + C45728 + C45729) * C152435) *
                C152165 * C152542 -
            ((C46788 + C46789 + C46790) * C152435 +
             (C46031 + C46030 + C46029) * C152555) *
                C152165 * C152326) *
               C152541 +
           (((C46790 + C46789 + C46788) * C152555 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C45730 + C45731 + C45732) * C152435 +
             (C45729 + C45728 + C45727) * C152555) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152542 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C1823 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152326 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152542) *
              C1824 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152542 -
           ((C56439 + C56440 + C56441) * C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C152326) *
              C1825 +
          (((C56441 + C56440 + C56439) * C152555 +
            (C45346 * C8769 + C56430 + C56430 + C45343 * C8775 +
             C45348 * C24963 + C56431 + C56431 + C45344 * C24967 +
             C45350 * C33899 + C56432 + C56432 + C45345 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C2973 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C2974 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C2975 -
           ((C57699 + C57700 + C57701) * C152435 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152555) *
               C152165 * C152599) *
              C152541 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C2974 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C2973 -
           ((C55743 + C55744 + C55745) * C152435 +
            (C55739 + C55738 + C55737) * C152555) *
               C152165 * C2975 +
           ((C57701 + C57700 + C57699) * C152555 +
            (C45346 * C10052 + C57690 + C57690 + C45343 * C10058 +
             C45348 * C26241 + C57691 + C57691 + C45344 * C26245 +
             C45350 * C40068 + C57692 + C57692 + C45345 * C40072) *
                C152435) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
                   C6260 +
               (C6264 + C6265) * C6261 + C6274 * C6262) *
                  C152239 * C152221 * C129 -
              (C6275 * C6262 + (C6267 + C6266) * C6261 +
               (C6265 + C6264) * C6260) *
                  C152239 * C152221 * C130 +
              (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                  C152239 * C152221 * C131 -
              ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 +
               C6275 * C6260) *
                  C152239 * C152221 * C132 +
              (C6276 * C6260 + (C6273 + C6272) * C6261 +
               (C198 * C152555 +
                (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
                   C6262) *
                  C152239 * C152221 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C152627 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C152613 +
               ((C6518 * C152555 +
                 (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                    C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152239 * C152583) *
                  C353 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                (C6507 + C6508) * C6262) *
                   C152239 * C152613 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C152627 -
               ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                (C6504 + C6503) * C6260) *
                   C152239 * C152583) *
                  C354 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152239 * C152627 -
               ((C444 * C152435 + C443 * C152555) * C6262 +
                (C6508 + C6507) * C6261 + C6512 * C6260) *
                   C152239 * C152613 +
               (C6514 * C6260 + (C6510 + C6509) * C6261 +
                (C444 * C152555 +
                 (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                    C6262) *
                   C152239 * C152583) *
                  C152577) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152628 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C152615 +
               (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
                 (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152435) *
                    C6260 +
                (C6741 + C6742) * C6261 + C6750 * C6262) *
                   C152586) *
                  C152221 * C353 +
              (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                (C6745 + C6746) * C6262) *
                   C152615 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152628 -
               ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
                (C6742 + C6741) * C6260) *
                   C152586) *
                  C152221 * C354 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152628 -
               ((C1223 * C152435 + C688 * C152555) * C6262 +
                (C6746 + C6745) * C6261 + C6749 * C6260) *
                   C152615 +
               (C6750 * C6260 + (C6748 + C6747) * C6261 +
                (C689 * C152555 +
                 (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                    C6262) *
                   C152586) *
                  C152221 * C152577) -
         0.25 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C1373 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C1374 +
               ((C6518 * C152555 +
                 (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                    C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152239 * C152583) *
                  C152624 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                C6945 * C6262) *
                   C152239 * C1374 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C1373 -
               ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                (C6504 + C6503) * C6260) *
                   C152239 * C152583) *
                  C152609 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152239 * C1373 -
               ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
                C6512 * C6260) *
                   C152239 * C1374 +
               (C6514 * C6260 + (C6510 + C6509) * C6261 +
                (C444 * C152555 +
                 (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                    C6262) *
                   C152239 * C152583) *
                  C152577) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                C6517 * C152435) *
                   C6260 +
               (C6264 + C6265) * C6261 + C6274 * C6262) *
                  C152239 * C1461 -
              (C6512 * C6262 + (C6499 + C6500) * C6261 +
               (C6518 * C152435 + C6517 * C152555) * C6260) *
                  C152239 * C1462 +
              ((C6518 * C152555 + C7815 * C152435) * C6260 +
               (C6503 + C6504) * C6261 + C6514 * C6262) *
                  C152239 * C1463 -
              ((C7816 * C152435 + C1847 * C152555) * C6262 +
               (C7817 * C152435 + C1848 * C152555) * C6261 +
               (C7818 * C152435 + C7815 * C152555) * C6260) *
                  C152239 * C1464 +
              ((C7818 * C152555 +
                (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
                   C6260 +
               (C7817 * C152555 +
                (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
                   C6261 +
               (C7816 * C152555 +
                (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
                   C6262) *
                  C152239 * C1465) *
             C152193 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152628 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                (C7446 * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C152615 +
               (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
                 C8069 * C152435) *
                    C6260 +
                (C6741 + C6742) * C6261 + C6750 * C6262) *
                   C152586) *
                  C1373 +
              (((C7446 * C152555 + C8070 * C152435) * C6260 +
                (C7437 + C7438) * C6261 + C7444 * C6262) *
                   C152615 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152628 -
               ((C8071 * C152435 + C2839 * C152555) * C6262 +
                (C8072 * C152435 + C2840 * C152555) * C6261 +
                (C8073 * C152435 + C8069 * C152555) * C6260) *
                   C152586) *
                  C1374 +
              (((C6518 * C152555 + C7815 * C152435) * C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152628 -
               (((C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152435 +
                 C2063 * C152555) *
                    C6262 +
                ((C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152435 +
                 C2064 * C152555) *
                    C6261 +
                ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
                 C8070 * C152555) *
                    C6260) *
                   C152615 +
               ((C8073 * C152555 +
                 (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                    C6260 +
                (C8072 * C152555 +
                 (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                    C6261 +
                (C8071 * C152555 +
                 (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                    C6262) *
                   C152586) *
                  C152583) *
             C152193 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C2359 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                (C7446 * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C2360 +
               (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
                 C8069 * C152435) *
                    C6260 +
                (C6741 + C6742) * C6261 + C6750 * C6262) *
                   C152586) *
                  C152221 * C152624 +
              (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                C7142 * C6262) *
                   C2360 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C2359 -
               ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
                (C6742 + C6741) * C6260) *
                   C152586) *
                  C152221 * C152609 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C2359 -
               ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
                C6749 * C6260) *
                   C2360 +
               (C6750 * C6260 + (C6748 + C6747) * C6261 +
                (C689 * C152555 +
                 (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                    C6262) *
                   C152586) *
                  C152221 * C152577) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C2359 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                (C7446 * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C2360 +
               (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
                 C8069 * C152435) *
                    C6260 +
                (C6741 + C6742) * C6261 + C6750 * C6262) *
                   C152586) *
                  C152627 +
              (((C7446 * C152555 + C8070 * C152435) * C6260 +
                (C7437 + C7438) * C6261 + C7444 * C6262) *
                   C2360 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C2359 -
               ((C8071 * C152435 + C2839 * C152555) * C6262 +
                (C8072 * C152435 + C2840 * C152555) * C6261 +
                (C8073 * C152435 + C8069 * C152555) * C6260) *
                   C152586) *
                  C152613 +
              (((C6518 * C152555 + C7815 * C152435) * C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C2359 -
               ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
                (C8786 * C152435 + C8070 * C152555) * C6260) *
                   C2360 +
               ((C8073 * C152555 +
                 (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                    C6260 +
                (C8072 * C152555 +
                 (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                    C6261 +
                (C8071 * C152555 +
                 (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                    C6262) *
                   C152586) *
                  C152583) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C2590 -
          (C6749 * C6262 + (C6739 + C6740) * C6261 +
           (C7446 * C152435 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
               C6260) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
            C8069 * C152435) *
               C6260 +
           (C6741 + C6742) * C6261 + C6750 * C6262) *
              C2592 -
          (((C134 * C3131 + C3144 + C3144 + C152449 * C3139) * C152435 +
            C2995 * C152555) *
               C6262 +
           ((C134 * C3130 + C3143 + C3143 + C152449 * C3138) * C152435 +
            C2996 * C152555) *
               C6261 +
           ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152435 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
               C6260) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C152555 +
            (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C152435) *
               C6260 +
           ((C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C152555 +
            (C134 * C9345 + C9355 + C9355 + C152449 * C9351) * C152435) *
               C6261 +
           ((C134 * C2601 + C2626 + C2626 + C152449 * C2617) * C152555 +
            (C134 * C9346 + C9356 + C9356 + C152449 * C9352) * C152435) *
               C6262) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C353 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152615 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152628 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152628 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152615 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C1373 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152615 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152628 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C1374 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152628 -
           ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
            C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
               C152165 * C152615 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C152624 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C2360 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C2359 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C2359 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C2360 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152627 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C2360 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C2359 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C152613 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C2359 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C2360 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C2590 -
          (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
           (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
              C152165 * C2591 +
          ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
           C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
              C152165 * C2592 -
          ((C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C31464 +
           C26951 * C31463 + C10069 * C31462 +
           (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
              C152165 * C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C31461 +
           (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C31462 +
           (C134 * C26241 + C26248 + C26248 + C152449 * C26245) * C31463 +
           (C134 * C33441 + C33445 + C33445 + C152449 * C33443) * C31464) *
              C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C45346 * C359 + C45660 + C45660 + C45343 * C383 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45350 * C1648 + C45658 +
            C45658 + C45345 * C1672) *
               C152435) *
              C152165 * C152239 * C152221 * C129 -
          ((C45721 + C45722 + C45723) * C152435 +
           (C45421 + C45420 + C45419) * C152555) *
              C152165 * C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152555 +
           (C45727 + C45728 + C45729) * C152435) *
              C152165 * C152239 * C152221 * C131 -
          ((C46244 + C46245 + C46246) * C152435 +
           (C45427 + C45426 + C45425) * C152555) *
              C152165 * C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152555 +
           (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
            C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
            C46237 + C45345 * C2823) *
               C152435) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152627 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152613 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152613 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152627 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152628 -
           ((C45350 * C3129 + C46751 + C46751 + C45345 * C3137 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45346 * C1179 + C46749 + C46749 + C45343 * C1191) *
                C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C45346 * C1648 + C47366 + C47366 + C45343 * C1672 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45350 * C9344 + C47364 + C47364 + C45345 * C9350) *
                C152435) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152615 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152628 -
           ((C48980 + C48981 + C48982) * C152435 +
            (C46028 + C46027 + C46026) * C152555) *
               C152165 * C152586) *
              C152221 * C354 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152628 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C152615 +
           ((C46034 + C46033 + C46032) * C152555 +
            (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
             C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
             C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                C152435) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C1373 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C1374 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C1374 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C1373 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C54190 + C54191 + C54192) * C152435) *
              C152165 * C152239 * C1461 -
          ((C54193 + C54194 + C54195) * C152435 +
           (C54192 + C54191 + C54190) * C152555) *
              C152165 * C152239 * C1462 +
          ((C54195 + C54194 + C54193) * C152555 +
           (C55474 + C55475 + C55476) * C152435) *
              C152165 * C152239 * C1463 -
          ((C55477 + C55478 + C55479) * C152435 +
           (C55476 + C55475 + C55474) * C152555) *
              C152165 * C152239 * C1464 +
          ((C55479 + C55478 + C55477) * C152555 +
           (C45346 * C7786 + C55459 + C55459 + C45343 * C7792 +
            C45348 * C25670 + C55460 + C55460 + C45344 * C25674 +
            C45350 * C32595 + C55461 + C55461 + C45345 * C32597) *
               C152435) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152628 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152586) *
              C1373 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152615 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152628 -
           ((C55743 + C55744 + C55745) * C152435 +
            (C55739 + C55738 + C55737) * C152555) *
               C152165 * C152586) *
              C1374 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152628 -
           ((C45350 * C26938 + C48095 + C48095 + C45345 * C26942 +
             C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
             C45346 * C2197 + C48093 + C48093 + C45343 * C2205) *
                C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C152615 +
           ((C55745 + C55744 + C55743) * C152555 +
            (C45346 * C8036 + C55716 + C55716 + C45343 * C8042 +
             C45348 * C26938 + C55717 + C55717 + C45344 * C26942 +
             C45350 * C33441 + C55718 + C55718 + C45345 * C33443) *
                C152435) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C2359 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C2360 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C2359 -
           ((C48980 + C48981 + C48982) * C152435 +
            (C46028 + C46027 + C46026) * C152555) *
               C152165 * C152586) *
              C152221 * C152609 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C2359 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C2360 +
           ((C46034 + C46033 + C46032) * C152555 +
            (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
             C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
             C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                C152435) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C2359 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152586) *
              C152627 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C2360 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C2359 -
           ((C55743 + C55744 + C55745) * C152435 +
            (C55739 + C55738 + C55737) * C152555) *
               C152165 * C152586) *
              C152613 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C2359 -
           ((C56439 + C56440 + C56441) * C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C2360 +
           ((C55745 + C55744 + C55743) * C152555 +
            (C45346 * C8036 + C55716 + C55716 + C45343 * C8042 +
             C45348 * C26938 + C55717 + C55717 + C45344 * C26942 +
             C45350 * C33441 + C55718 + C55718 + C45345 * C33443) *
                C152435) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C54190 + C54191 + C54192) * C152435) *
              C152165 * C2590 -
          ((C55104 + C55105 + C55106) * C152435 +
           (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
            C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
            C45343 * C628) *
               C152555) *
              C152165 * C2591 +
          ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
            C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
            C45965 + C45345 * C2615) *
               C152555 +
           (C55737 + C55738 + C55739) * C152435) *
              C152165 * C2592 -
          ((C45350 * C40067 + C49394 + C49394 + C45345 * C40071 +
            C45348 * C9344 + C49393 + C49393 + C45344 * C9350 + C45346 * C3129 +
            C49392 + C49392 + C45343 * C3137) *
               C152435 +
           (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
            C45348 * C2599 + C48667 + C48667 + C45344 * C2615 + C45346 * C2598 +
            C48668 + C48668 + C45343 * C2614) *
               C152555) *
              C152165 * C2593 +
          ((C45346 * C2599 + C48669 + C48669 + C45343 * C2615 +
            C45348 * C17921 + C48670 + C48670 + C45344 * C17927 +
            C45350 * C48656 + C48671 + C48671 + C45345 * C48660) *
               C152555 +
           (C45346 * C9344 + C57003 + C57003 + C45343 * C9350 +
            C45348 * C40067 + C57004 + C57004 + C45344 * C40071 +
            C45350 * C56999 + C57005 + C57005 + C45345 * C57001) *
               C152435) *
              C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152542 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C152326) *
                  C152221 * C829 +
              (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                C7142 * C6262) *
                   C152326 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152542) *
                  C152221 * C830 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152542 -
               ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
                C6749 * C6260) *
                   C152326) *
                  C152221 * C831 +
              ((C7142 * C6260 + (C7144 + C7143) * C6261 +
                (C984 * C152555 +
                 (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                    C6262) *
                   C152326 -
               ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 +
                C6275 * C6260) *
                   C152542) *
                  C152221 * C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                  C6517 * C152435) *
                     C6260 +
                 (C6264 + C6265) * C6261 + C6274 * C6262) *
                    C152542 -
                (C6749 * C6262 + (C6739 + C6740) * C6261 +
                 (C7446 * C152435 +
                  (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                     C6260) *
                    C152326) *
                   C1373 +
               (((C7446 * C152555 + C8070 * C152435) * C6260 +
                 (C7437 + C7438) * C6261 + C7444 * C6262) *
                    C152326 -
                (C6512 * C6262 + (C6499 + C6500) * C6261 +
                 (C6518 * C152435 + C6517 * C152555) * C6260) *
                    C152542) *
                   C1374 +
               (((C6518 * C152555 + C7815 * C152435) * C6260 +
                 (C6503 + C6504) * C6261 + C6514 * C6262) *
                    C152542 -
                ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
                 ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
                  C8070 * C152555) *
                     C6260) *
                    C152326) *
                   C152583) *
                  C152527 +
              ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                 C7142 * C6262) *
                    C152326 -
                (C6275 * C6262 + (C6267 + C6266) * C6261 +
                 (C6265 + C6264) * C6260) *
                    C152542) *
                   C1373 +
               (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                 C6945 * C6262) *
                    C152542 -
                ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
                 (C7438 + C7437) * C6260) *
                    C152326) *
                   C1374 +
               (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
                 (C2062 * C152555 +
                  (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                     C6262) *
                    C152326 -
                ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                 (C6504 + C6503) * C6260) *
                    C152542) *
                   C152583) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2973 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C2975 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C152221 * C152527 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C2974 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C2973 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C2975 +
           ((C9850 + C9858) * C6260 + (C9847 + C9857) * C6261 +
            (C2994 * C152555 +
             (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152435) *
                C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C829 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152542 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C1373 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C1374 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C152542 -
            ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
             C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C1373 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C1374 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2973 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C2975 -
           ((C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C31464 +
            C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C152221 * C152527 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C2974 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C2973 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C2975 +
           (C2996 * C31461 + C9856 * C31462 + C26743 * C31463 +
            (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C31464) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152542 -
           ((C45350 * C3129 + C46751 + C46751 + C45345 * C3137 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45346 * C1179 + C46749 + C46749 + C45343 * C1191) *
                C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152326 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152542) *
              C152221 * C830 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152542 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C152326) *
              C152221 * C831 +
          (((C46458 + C46457 + C46456) * C152555 +
            (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
             C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
             C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152542 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C1373 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152542) *
               C1374 +
           (((C54195 + C54194 + C54193) * C152555 +
             (C55474 + C55475 + C55476) * C152435) *
                C152165 * C152542 -
            ((C45350 * C26938 + C48095 + C48095 + C45345 * C26942 +
              C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
              C45346 * C2197 + C48093 + C48093 + C45343 * C2205) *
                 C152435 +
             (C55742 + C55741 + C55740) * C152555) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152542) *
               C1373 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152542 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C1374 +
           (((C47898 + C47897 + C47896) * C152555 +
             (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
              C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
              C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C47588 + C47589 + C47590) * C152435 +
             (C45726 + C45725 + C45724) * C152555) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C2973 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C2974 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C2975 -
           ((C45350 * C40067 + C49394 + C49394 + C45345 * C40071 +
             C45348 * C9344 + C49393 + C49393 + C45344 * C9350 +
             C45346 * C3129 + C49392 + C49392 + C45343 * C3137) *
                C152435 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152555) *
               C152165 * C152599) *
              C152221 * C152527 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C2974 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C2973 -
           ((C48980 + C48981 + C48982) * C152435 +
            (C46028 + C46027 + C46026) * C152555) *
               C152165 * C2975 +
           ((C49194 + C49193 + C49192) * C152555 +
            (C45346 * C3130 + C49395 + C49395 + C45343 * C3138 +
             C45348 * C9345 + C49396 + C49396 + C45344 * C9351 +
             C45350 * C49388 + C49397 + C49397 + C45345 * C49390) *
                C152435) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C152221 * C129 -
          (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
              C152239 * C152221 * C130 +
          (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
              C152221 * C131 -
          ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
              C152239 * C152221 * C132 +
          (C6276 * C6260 + (C6273 + C6272) * C6261 +
           (C198 * C152555 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152627 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152613 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
            (C6507 + C6508) * C6262) *
               C152239 * C152613 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152627 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152627 -
           ((C444 * C152435 + C443 * C152555) * C6262 +
            (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152613 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1373 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1374 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1374 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1373 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C1373 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C1374 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C1461 -
          (C6512 * C6262 + (C6499 + C6500) * C6261 +
           (C6518 * C152435 + C6517 * C152555) * C6260) *
              C152239 * C1462 +
          ((C6518 * C152555 + C7815 * C152435) * C6260 +
           (C6503 + C6504) * C6261 + C6514 * C6262) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C152555) * C6262 +
           (C7817 * C152435 + C1848 * C152555) * C6261 +
           (C7818 * C152435 + C7815 * C152555) * C6260) *
              C152239 * C1464 +
          ((C7818 * C152555 +
            (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
               C6260 +
           (C7817 * C152555 +
            (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
               C6261 +
           (C7816 * C152555 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2359 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152221 * C152624 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C2360 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C2359 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152586) *
              C152221 * C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C2359 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C2360 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2359 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152627 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C2360 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C2359 -
           ((C8071 * C152435 + C2839 * C152555) * C6262 +
            (C8072 * C152435 + C2840 * C152555) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152586) *
              C152613 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C2359 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C2360 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C152624 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C2360 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C2359 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C2359 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C2360 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152627 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C2360 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C2359 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C152613 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C2359 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C2360 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C45346 * C359 + C45660 + C45660 + C45343 * C383 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45350 * C1648 + C45658 +
            C45658 + C45345 * C1672) *
               C152435) *
              C152165 * C152239 * C152221 * C129 -
          ((C45721 + C45722 + C45723) * C152435 +
           (C45421 + C45420 + C45419) * C152555) *
              C152165 * C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152555 +
           (C45727 + C45728 + C45729) * C152435) *
              C152165 * C152239 * C152221 * C131 -
          ((C46244 + C46245 + C46246) * C152435 +
           (C45427 + C45426 + C45425) * C152555) *
              C152165 * C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152555 +
           (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
            C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
            C46237 + C45345 * C2823) *
               C152435) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152627 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152613 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152613 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152627 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C1373 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C1374 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C1374 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C1373 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C54190 + C54191 + C54192) * C152435) *
              C152165 * C152239 * C1461 -
          ((C54193 + C54194 + C54195) * C152435 +
           (C54192 + C54191 + C54190) * C152555) *
              C152165 * C152239 * C1462 +
          ((C54195 + C54194 + C54193) * C152555 +
           (C55474 + C55475 + C55476) * C152435) *
              C152165 * C152239 * C1463 -
          ((C55477 + C55478 + C55479) * C152435 +
           (C55476 + C55475 + C55474) * C152555) *
              C152165 * C152239 * C1464 +
          ((C55479 + C55478 + C55477) * C152555 +
           (C45346 * C7786 + C55459 + C55459 + C45343 * C7792 +
            C45348 * C25670 + C55460 + C55460 + C45344 * C25674 +
            C45350 * C32595 + C55461 + C55461 + C45345 * C32597) *
               C152435) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C2359 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C2360 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C2359 -
           ((C48980 + C48981 + C48982) * C152435 +
            (C46028 + C46027 + C46026) * C152555) *
               C152165 * C152586) *
              C152221 * C152609 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C2359 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C2360 +
           ((C46034 + C46033 + C46032) * C152555 +
            (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
             C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
             C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                C152435) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C2359 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C2360 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152586) *
              C152627 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C2360 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C2359 -
           ((C55743 + C55744 + C55745) * C152435 +
            (C55739 + C55738 + C55737) * C152555) *
               C152165 * C152586) *
              C152613 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C2359 -
           ((C56439 + C56440 + C56441) * C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C2360 +
           ((C55745 + C55744 + C55743) * C152555 +
            (C45346 * C8036 + C55716 + C55716 + C45343 * C8042 +
             C45348 * C26938 + C55717 + C55717 + C45344 * C26942 +
             C45350 * C33441 + C55718 + C55718 + C45345 * C33443) *
                C152435) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152198 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C4281 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152541 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152284) *
              C152198 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C152541 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C4281 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C152541 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C4281) *
               C152284) *
              C152198 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C4281) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C4281 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          ((((C45424 + C45423 + C45422) * C152555 +
             (C45727 + C45728 + C45729) * C152435) *
                C152165 * C4281 -
            ((C46788 + C46789 + C46790) * C152435 +
             (C46031 + C46030 + C46029) * C152555) *
                C152165 * C152326) *
               C152541 +
           (((C46790 + C46789 + C46788) * C152555 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C45730 + C45731 + C45732) * C152435 +
             (C45729 + C45728 + C45727) * C152555) *
                C152165 * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152322 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C4953) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152329 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152322 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C4953) *
               C152284) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152329 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152322 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C4953) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152322 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152329 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152322 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C4953) *
               C152541 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152329 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152322 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C4953) *
               C152284) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152329 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152322 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C4953) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152322 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152329 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152322 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152329 +
            ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
              C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
              C45965 + C45345 * C2615) *
                 C152555 +
             (C55737 + C55738 + C55739) * C152435) *
                C152165 * C4953) *
               C152541 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152329 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152322 -
            ((C55743 + C55744 + C55745) * C152435 +
             (C55739 + C55738 + C55737) * C152555) *
                C152165 * C4953) *
               C152284) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152329 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152322 -
            ((C48980 + C48981 + C48982) * C152435 +
             (C46028 + C46027 + C46026) * C152555) *
                C152165 * C4953) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152322 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152329 +
            ((C48982 + C48981 + C48980) * C152555 +
             (C45346 * C1654 + C47376 + C47376 + C45343 * C1678 +
              C45348 * C10053 + C47377 + C47377 + C45344 * C10059 +
              C45350 * C26242 + C47378 + C47378 + C45345 * C26246) *
                 C152435) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C4281 -
               (C6749 * C6262 + (C6739 + C6740) * C6261 +
                (C7446 * C152435 +
                 (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                    C6260) *
                   C152326) *
                  C152221 * C152633 +
              (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                C7142 * C6262) *
                   C152326 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C4281) *
                  C152221 * C152626 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C4281 -
               ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
                C6749 * C6260) *
                   C152326) *
                  C152221 * C152611 +
              ((C7142 * C6260 + (C7144 + C7143) * C6261 +
                (C984 * C152555 +
                 (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                    C6262) *
                   C152326 -
               ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 +
                C6275 * C6260) *
                   C4281) *
                  C152221 * C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                  C6517 * C152435) *
                     C6260 +
                 (C6264 + C6265) * C6261 + C6274 * C6262) *
                    C4281 -
                (C6749 * C6262 + (C6739 + C6740) * C6261 +
                 (C7446 * C152435 +
                  (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                     C6260) *
                    C152326) *
                   C152627 +
               (((C7446 * C152555 + C8070 * C152435) * C6260 +
                 (C7437 + C7438) * C6261 + C7444 * C6262) *
                    C152326 -
                (C6512 * C6262 + (C6499 + C6500) * C6261 +
                 (C6518 * C152435 + C6517 * C152555) * C6260) *
                    C4281) *
                   C152613 +
               (((C6518 * C152555 + C7815 * C152435) * C6260 +
                 (C6503 + C6504) * C6261 + C6514 * C6262) *
                    C4281 -
                ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
                 (C8786 * C152435 + C8070 * C152555) * C6260) *
                    C152326) *
                   C152583) *
                  C3415 +
              ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
                 C7142 * C6262) *
                    C152326 -
                (C6275 * C6262 + (C6267 + C6266) * C6261 +
                 (C6265 + C6264) * C6260) *
                    C4281) *
                   C152627 +
               (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                 C6945 * C6262) *
                    C4281 -
                ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
                 (C7438 + C7437) * C6260) *
                    C152326) *
                   C152613 +
               (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
                 (C2062 * C152555 +
                  (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                     C6262) *
                    C152326 -
                ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                 (C6504 + C6503) * C6260) *
                    C4281) *
                   C152583) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152635 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152621 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C152221 * C3415 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152632 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152635 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152621 +
           ((C9850 + C9858) * C6260 + (C9847 + C9857) * C6261 +
            (C2994 * C152555 +
             (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152435) *
                C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C152633 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C4281 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152627 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152613 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C4281 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152627 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152613 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152635 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152621 -
           (C33908 * C31464 + C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C152221 * C3415 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152632 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152635 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152621 +
           (C2996 * C31461 + C9856 * C31462 + C26743 * C31463 +
            (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C31464) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C4281 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152326 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C4281) *
              C152221 * C152626 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C4281 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C152326) *
              C152221 * C152611 +
          (((C46458 + C46457 + C46456) * C152555 +
            (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
             C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
             C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C4281 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C152627 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C4281) *
               C152613 +
           (((C54195 + C54194 + C54193) * C152555 +
             (C55474 + C55475 + C55476) * C152435) *
                C152165 * C4281 -
            ((C56439 + C56440 + C56441) * C152435 +
             (C55742 + C55741 + C55740) * C152555) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C4281) *
               C152627 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C4281 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152613 +
           (((C47898 + C47897 + C47896) * C152555 +
             (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
              C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
              C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C47588 + C47589 + C47590) * C152435 +
             (C45726 + C45725 + C45724) * C152555) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152635 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152632 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152621 -
           ((C57699 + C57700 + C57701) * C152435 +
            (C45350 * C17921 + C48666 + C48666 + C45345 * C17927 +
             C45348 * C2599 + C48667 + C48667 + C45344 * C2615 +
             C45346 * C2598 + C48668 + C48668 + C45343 * C2614) *
                C152555) *
               C152165 * C152599) *
              C152221 * C3415 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152632 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152635 -
           ((C48980 + C48981 + C48982) * C152435 +
            (C46028 + C46027 + C46026) * C152555) *
               C152165 * C152621 +
           ((C49194 + C49193 + C49192) * C152555 +
            (C45346 * C3130 + C49395 + C49395 + C45343 * C3138 +
             C45348 * C9345 + C49396 + C49396 + C45344 * C9351 +
             C45350 * C49388 + C49397 + C49397 + C45345 * C49390) *
                C152435) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152322 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C4953) *
              C152221 * C152198 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152329 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152322 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C4953) *
              C152221 * C152207 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152322 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152329 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152322 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C4953) *
              C152221 * C152198 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152329 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152322 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C4953) *
              C152221 * C152207 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152322 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152329 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152322 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152329 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C4953) *
              C152221 * C152198 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152329 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152322 -
           ((C48980 + C48981 + C48982) * C152435 +
            (C46028 + C46027 + C46026) * C152555) *
               C152165 * C4953) *
              C152221 * C152207 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152322 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C152329 +
           ((C46034 + C46033 + C46032) * C152555 +
            (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
             C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
             C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                C152435) *
               C152165 * C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152627 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152613 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C4281 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             (C8786 * C152435 + C8070 * C152555) * C6260) *
                C152326) *
               C152583) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C152627 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152613 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C4281 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152221 * C152633 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152326 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C4281) *
              C152221 * C152626 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152326) *
              C152221 * C152611 +
          ((C7142 * C6260 + (C7144 + C7143) * C6261 +
            (C984 * C152555 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C6262) *
               C152326 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C152633 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C4281 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152627 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152613 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C4281 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152627 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152613 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C4281 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152326 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C4281) *
              C152221 * C152626 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C4281 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C152326) *
              C152221 * C152611 +
          (((C46458 + C46457 + C46456) * C152555 +
            (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
             C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
             C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C4281 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C152627 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C4281) *
               C152613 +
           (((C54195 + C54194 + C54193) * C152555 +
             (C55474 + C55475 + C55476) * C152435) *
                C152165 * C4281 -
            ((C56439 + C56440 + C56441) * C152435 +
             (C55742 + C55741 + C55740) * C152555) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C4281) *
               C152627 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C4281 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152613 +
           (((C47898 + C47897 + C47896) * C152555 +
             (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
              C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
              C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C47588 + C47589 + C47590) * C152435 +
             (C45726 + C45725 + C45724) * C152555) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1823 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1824 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C1825 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152239 * C152593) *
              C152527 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1824 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1823 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C1825 +
           ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
            (C1846 * C152555 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152541 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152284) *
              C829 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152284 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152541) *
              C830 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152541 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152284) *
              C831 +
          ((C6945 * C6260 + (C6947 + C6946) * C6261 +
            (C842 * C152555 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C6262) *
               C152239 * C152284 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152541 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C829 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152541 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1823 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1824 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C1825 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C152527 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1824 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1823 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C1825 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152541 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152284) *
              C829 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152284 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152541) *
              C830 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C152541 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152284) *
              C831 +
          (((C46246 + C46245 + C46244) * C152555 +
            (C45346 * C363 + C45694 + C45694 + C45343 * C387 + C45348 * C1649 +
             C45695 + C45695 + C45344 * C1673 + C45350 * C1656 + C45696 +
             C45696 + C45345 * C1680) *
                C152435) *
               C152165 * C152239 * C152284 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C1823 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C1824 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152239 * C1825 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C152239 * C152593) *
              C152527 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C1824 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C1823 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C1825 +
           ((C47590 + C47589 + C47588) * C152555 +
            (C45346 * C1472 + C47140 + C47140 + C45343 * C1488 +
             C45348 * C8770 + C47141 + C47141 + C45344 * C8776 +
             C45350 * C24964 + C47142 + C47142 + C45345 * C24968) *
                C152435) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152542 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C1823 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152326 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152542) *
              C1824 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152542 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152326) *
              C1825 +
          (((C8786 * C152555 +
             (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                C6260 +
            (C8573 * C152555 +
             (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                C6261 +
            (C8572 * C152555 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C6262) *
               C152326 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152541 +
           (((C7446 * C152555 +
              (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152435) *
                 C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C152284) *
              C353 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C354 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                C152542 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C152541 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152284) *
              C353 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C152542 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C1823 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152542) *
              C1824 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152542 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C1825 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152542 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C152541 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C45346 * C1652 + C47372 + C47372 + C45343 * C1676 +
              C45348 * C1653 + C47371 + C47371 + C45344 * C1677 +
              C45350 * C10052 + C47370 + C47370 + C45345 * C10058) *
                 C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152542) *
               C152541 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152542 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C152284) *
              C354 +
          ((((C45424 + C45423 + C45422) * C152555 +
             (C45727 + C45728 + C45729) * C152435) *
                C152165 * C152542 -
            ((C46788 + C46789 + C46790) * C152435 +
             (C46031 + C46030 + C46029) * C152555) *
                C152165 * C152326) *
               C152541 +
           (((C46790 + C46789 + C46788) * C152555 +
             (C45346 * C1650 + C47887 + C47887 + C45343 * C1674 +
              C45348 * C1655 + C47888 + C47888 + C45344 * C1679 +
              C45350 * C10054 + C47889 + C47889 + C45345 * C10060) *
                 C152435) *
                C152165 * C152326 -
            ((C45730 + C45731 + C45732) * C152435 +
             (C45729 + C45728 + C45727) * C152555) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152542 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C1823 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152326 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152542) *
              C1824 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152542 -
           ((C56439 + C56440 + C56441) * C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C152326) *
              C1825 +
          (((C56441 + C56440 + C56439) * C152555 +
            (C45346 * C8769 + C56430 + C56430 + C45343 * C8775 +
             C45348 * C24963 + C56431 + C56431 + C45344 * C24967 +
             C45350 * C33899 + C56432 + C56432 + C45345 * C33901) *
                C152435) *
               C152165 * C152326 -
           ((C55477 + C55478 + C55479) * C152435 +
            (C55476 + C55475 + C55474) * C152555) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
                   C6260 +
               (C6264 + C6265) * C6261 + C6274 * C6262) *
                  C152239 * C152221 * C129 -
              (C6275 * C6262 + (C6267 + C6266) * C6261 +
               (C6265 + C6264) * C6260) *
                  C152239 * C152221 * C130 +
              (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                  C152239 * C152221 * C131 -
              ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 +
               C6275 * C6260) *
                  C152239 * C152221 * C132 +
              (C6276 * C6260 + (C6273 + C6272) * C6261 +
               (C198 * C152555 +
                (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
                   C6262) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C152627 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C152613 +
               ((C6518 * C152555 +
                 (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                    C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152239 * C152583) *
                  C353 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                (C6507 + C6508) * C6262) *
                   C152239 * C152613 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C152627 -
               ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                (C6504 + C6503) * C6260) *
                   C152239 * C152583) *
                  C354 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152239 * C152627 -
               ((C444 * C152435 + C443 * C152555) * C6262 +
                (C6508 + C6507) * C6261 + C6512 * C6260) *
                   C152239 * C152613 +
               (C6514 * C6260 + (C6510 + C6509) * C6261 +
                (C444 * C152555 +
                 (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                    C6262) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152628 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152221 * C353 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
            (C6745 + C6746) * C6262) *
               C152615 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152628 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152586) *
              C152221 * C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152628 -
           ((C1223 * C152435 + C688 * C152555) * C6262 +
            (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152615 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1373 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1374 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1374 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1373 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C1373 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C1374 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C1461 -
          (C6512 * C6262 + (C6499 + C6500) * C6261 +
           (C6518 * C152435 + C6517 * C152555) * C6260) *
              C152239 * C1462 +
          ((C6518 * C152555 + C7815 * C152435) * C6260 +
           (C6503 + C6504) * C6261 + C6514 * C6262) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C152555) * C6262 +
           (C7817 * C152435 + C1848 * C152555) * C6261 +
           (C7818 * C152435 + C7815 * C152555) * C6260) *
              C152239 * C1464 +
          ((C7818 * C152555 +
            (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
               C6260 +
           (C7817 * C152555 +
            (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
               C6261 +
           (C7816 * C152555 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152628 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C1373 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152615 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152628 -
           ((C8071 * C152435 + C2839 * C152555) * C6262 +
            (C8072 * C152435 + C2840 * C152555) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152586) *
              C1374 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152628 -
           (((C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152435 +
             C2063 * C152555) *
                C6262 +
            ((C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152435 +
             C2064 * C152555) *
                C6261 +
            ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
             C8070 * C152555) *
                C6260) *
               C152615 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C353 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152615 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152628 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152628 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152615 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C1373 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152615 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152628 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C1374 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152628 -
           ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
            C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
               C152165 * C152615 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C45346 * C359 + C45660 + C45660 + C45343 * C383 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45350 * C1648 + C45658 +
            C45658 + C45345 * C1672) *
               C152435) *
              C152165 * C152239 * C152221 * C129 -
          ((C45721 + C45722 + C45723) * C152435 +
           (C45421 + C45420 + C45419) * C152555) *
              C152165 * C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152555 +
           (C45727 + C45728 + C45729) * C152435) *
              C152165 * C152239 * C152221 * C131 -
          ((C46244 + C46245 + C46246) * C152435 +
           (C45427 + C45426 + C45425) * C152555) *
              C152165 * C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152555 +
           (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
            C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
            C46237 + C45345 * C2823) *
               C152435) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152627 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152613 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152613 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152627 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152628 -
           ((C45350 * C3129 + C46751 + C46751 + C45345 * C3137 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45346 * C1179 + C46749 + C46749 + C45343 * C1191) *
                C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C45346 * C1648 + C47366 + C47366 + C45343 * C1672 +
             C45348 * C3129 + C47365 + C47365 + C45344 * C3137 +
             C45350 * C9344 + C47364 + C47364 + C45345 * C9350) *
                C152435) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152615 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152628 -
           ((C48980 + C48981 + C48982) * C152435 +
            (C46028 + C46027 + C46026) * C152555) *
               C152165 * C152586) *
              C152221 * C354 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152628 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C152615 +
           ((C46034 + C46033 + C46032) * C152555 +
            (C45346 * C1646 + C48971 + C48971 + C45343 * C1670 +
             C45348 * C3131 + C48972 + C48972 + C45344 * C3139 +
             C45350 * C9346 + C48973 + C48973 + C45345 * C9352) *
                C152435) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C1373 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C1374 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C1374 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C1373 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C54190 + C54191 + C54192) * C152435) *
              C152165 * C152239 * C1461 -
          ((C54193 + C54194 + C54195) * C152435 +
           (C54192 + C54191 + C54190) * C152555) *
              C152165 * C152239 * C1462 +
          ((C54195 + C54194 + C54193) * C152555 +
           (C55474 + C55475 + C55476) * C152435) *
              C152165 * C152239 * C1463 -
          ((C55477 + C55478 + C55479) * C152435 +
           (C55476 + C55475 + C55474) * C152555) *
              C152165 * C152239 * C1464 +
          ((C55479 + C55478 + C55477) * C152555 +
           (C45346 * C7786 + C55459 + C55459 + C45343 * C7792 +
            C45348 * C25670 + C55460 + C55460 + C45344 * C25674 +
            C45350 * C32595 + C55461 + C55461 + C45345 * C32597) *
               C152435) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152628 -
           ((C55104 + C55105 + C55106) * C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152615 +
           ((C45346 * C605 + C45963 + C45963 + C45343 * C629 + C45348 * C2598 +
             C45964 + C45964 + C45344 * C2614 + C45350 * C2599 + C45965 +
             C45965 + C45345 * C2615) *
                C152555 +
            (C55737 + C55738 + C55739) * C152435) *
               C152165 * C152586) *
              C1373 +
          (((C55106 + C55105 + C55104) * C152555 +
            (C55740 + C55741 + C55742) * C152435) *
               C152165 * C152615 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152628 -
           ((C55743 + C55744 + C55745) * C152435 +
            (C55739 + C55738 + C55737) * C152555) *
               C152165 * C152586) *
              C1374 +
          (((C54195 + C54194 + C54193) * C152555 +
            (C55474 + C55475 + C55476) * C152435) *
               C152165 * C152628 -
           ((C45350 * C26938 + C48095 + C48095 + C45345 * C26942 +
             C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
             C45346 * C2197 + C48093 + C48093 + C45343 * C2205) *
                C152435 +
            (C55742 + C55741 + C55740) * C152555) *
               C152165 * C152615 +
           ((C55745 + C55744 + C55743) * C152555 +
            (C45346 * C8036 + C55716 + C55716 + C45343 * C8042 +
             C45348 * C26938 + C55717 + C55717 + C45344 * C26942 +
             C45350 * C33441 + C55718 + C55718 + C45345 * C33443) *
                C152435) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C1373 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C1374 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C152542 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
              C8070 * C152555) *
                 C6260) *
                C152326) *
               C152583) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C1373 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C1374 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152542 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152221 * C829 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152326 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152542) *
              C152221 * C830 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152542 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152326) *
              C152221 * C831 +
          ((C7142 * C6260 + (C7144 + C7143) * C6261 +
            (C984 * C152555 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C6262) *
               C152326 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C829 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152542 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C1373 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C1374 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C152542 -
            ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
             C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C1373 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C1374 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152542 -
           ((C45350 * C3129 + C46751 + C46751 + C45345 * C3137 +
             C45348 * C1648 + C46750 + C46750 + C45344 * C1672 +
             C45346 * C1179 + C46749 + C46749 + C45343 * C1191) *
                C152435 +
            (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 + C45348 * C605 +
             C45961 + C45961 + C45344 * C629 + C45346 * C604 + C45962 + C45962 +
             C45343 * C628) *
                C152555) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C46025 + C46024 + C46023) * C152555 +
            (C46785 + C46786 + C46787) * C152435) *
               C152165 * C152326 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152542) *
              C152221 * C830 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152542 -
           ((C46788 + C46789 + C46790) * C152435 +
            (C46031 + C46030 + C46029) * C152555) *
               C152165 * C152326) *
              C152221 * C831 +
          (((C46458 + C46457 + C46456) * C152555 +
            (C45346 * C1182 + C46770 + C46770 + C45343 * C1194 +
             C45348 * C1645 + C46771 + C46771 + C45344 * C1669 +
             C45350 * C3132 + C46772 + C46772 + C45345 * C3140) *
                C152435) *
               C152165 * C152326 -
           ((C46244 + C46245 + C46246) * C152435 +
            (C45427 + C45426 + C45425) * C152555) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
              C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 +
              C45355 + C45345 * C629) *
                 C152555 +
             (C54190 + C54191 + C54192) * C152435) *
                C152165 * C152542 -
            ((C55104 + C55105 + C55106) * C152435 +
             (C45350 * C2598 + C45960 + C45960 + C45345 * C2614 +
              C45348 * C605 + C45961 + C45961 + C45344 * C629 + C45346 * C604 +
              C45962 + C45962 + C45343 * C628) *
                 C152555) *
                C152165 * C152326) *
               C1373 +
           (((C55106 + C55105 + C55104) * C152555 +
             (C55740 + C55741 + C55742) * C152435) *
                C152165 * C152326 -
            ((C54193 + C54194 + C54195) * C152435 +
             (C54192 + C54191 + C54190) * C152555) *
                C152165 * C152542) *
               C1374 +
           (((C54195 + C54194 + C54193) * C152555 +
             (C55474 + C55475 + C55476) * C152435) *
                C152165 * C152542 -
            ((C45350 * C26938 + C48095 + C48095 + C45345 * C26942 +
              C45348 * C8036 + C48094 + C48094 + C45344 * C8042 +
              C45346 * C2197 + C48093 + C48093 + C45343 * C2205) *
                 C152435 +
             (C55742 + C55741 + C55740) * C152555) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C46025 + C46024 + C46023) * C152555 +
             (C46785 + C46786 + C46787) * C152435) *
                C152165 * C152326 -
            ((C45721 + C45722 + C45723) * C152435 +
             (C45421 + C45420 + C45419) * C152555) *
                C152165 * C152542) *
               C1373 +
           (((C45723 + C45722 + C45721) * C152555 +
             (C45724 + C45725 + C45726) * C152435) *
                C152165 * C152542 -
            ((C47896 + C47897 + C47898) * C152435 +
             (C46787 + C46786 + C46785) * C152555) *
                C152165 * C152326) *
               C1374 +
           (((C47898 + C47897 + C47896) * C152555 +
             (C45346 * C2198 + C48096 + C48096 + C45343 * C2206 +
              C45348 * C8037 + C48097 + C48097 + C45344 * C8043 +
              C45350 * C26939 + C48098 + C48098 + C45345 * C26943) *
                 C152435) *
                C152165 * C152326 -
            ((C47588 + C47589 + C47590) * C152435 +
             (C45726 + C45725 + C45724) * C152555) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152627 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152613 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
            (C6507 + C6508) * C6262) *
               C152239 * C152613 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152627 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152627 -
           ((C444 * C152435 + C443 * C152555) * C6262 +
            (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152613 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C152221 * C129 -
          (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
              C152239 * C152221 * C130 +
          (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
              C152221 * C131 -
          ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
              C152239 * C152221 * C132 +
          (C6276 * C6260 + (C6273 + C6272) * C6261 +
           (C198 * C152555 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1373 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1374 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1374 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1373 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C1373 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C1374 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C1461 -
          (C6512 * C6262 + (C6499 + C6500) * C6261 +
           (C6518 * C152435 + C6517 * C152555) * C6260) *
              C152239 * C1462 +
          ((C6518 * C152555 + C7815 * C152435) * C6260 +
           (C6503 + C6504) * C6261 + C6514 * C6262) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C152555) * C6262 +
           (C7817 * C152435 + C1848 * C152555) * C6261 +
           (C7818 * C152435 + C7815 * C152555) * C6260) *
              C152239 * C1464 +
          ((C7818 * C152555 +
            (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
               C6260 +
           (C7817 * C152555 +
            (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
               C6261 +
           (C7816 * C152555 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C45346 * C359 + C45660 + C45660 + C45343 * C383 + C45348 * C1179 +
            C45659 + C45659 + C45344 * C1191 + C45350 * C1648 + C45658 +
            C45658 + C45345 * C1672) *
               C152435) *
              C152165 * C152239 * C152221 * C129 -
          ((C45721 + C45722 + C45723) * C152435 +
           (C45421 + C45420 + C45419) * C152555) *
              C152165 * C152239 * C152221 * C130 +
          ((C45424 + C45423 + C45422) * C152555 +
           (C45727 + C45728 + C45729) * C152435) *
              C152165 * C152239 * C152221 * C131 -
          ((C46244 + C46245 + C46246) * C152435 +
           (C45427 + C45426 + C45425) * C152555) *
              C152165 * C152239 * C152221 * C132 +
          ((C45430 + C45429 + C45428) * C152555 +
           (C45346 * C364 + C46235 + C46235 + C45343 * C388 + C45348 * C1183 +
            C46236 + C46236 + C45344 * C1195 + C45350 * C2821 + C46237 +
            C46237 + C45345 * C2823) *
               C152435) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C152627 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C152613 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C152613 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C152627 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C354 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C152627 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C152613 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
             C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
             C45345 * C629) *
                C152555 +
            (C54190 + C54191 + C54192) * C152435) *
               C152165 * C152239 * C1373 -
           ((C54193 + C54194 + C54195) * C152435 +
            (C54192 + C54191 + C54190) * C152555) *
               C152165 * C152239 * C1374 +
           ((C54195 + C54194 + C54193) * C152555 +
            (C45346 * C1470 + C47136 + C47136 + C45343 * C1486 +
             C45348 * C2197 + C47135 + C47135 + C45344 * C2205 +
             C45350 * C8036 + C47134 + C47134 + C45345 * C8042) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C45723 + C45722 + C45721) * C152555 +
            (C45724 + C45725 + C45726) * C152435) *
               C152165 * C152239 * C1374 -
           ((C45721 + C45722 + C45723) * C152435 +
            (C45421 + C45420 + C45419) * C152555) *
               C152165 * C152239 * C1373 -
           ((C47588 + C47589 + C47590) * C152435 +
            (C45726 + C45725 + C45724) * C152555) *
               C152165 * C152239 * C152583) *
              C152609 +
          (((C45424 + C45423 + C45422) * C152555 +
            (C45727 + C45728 + C45729) * C152435) *
               C152165 * C152239 * C1373 -
           ((C45730 + C45731 + C45732) * C152435 +
            (C45729 + C45728 + C45727) * C152555) *
               C152165 * C152239 * C1374 +
           ((C45732 + C45731 + C45730) * C152555 +
            (C45346 * C1468 + C47579 + C47579 + C45343 * C1484 +
             C45348 * C2199 + C47580 + C47580 + C45344 * C2207 +
             C45350 * C8038 + C47581 + C47581 + C45345 * C8044) *
                C152435) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C45346 * C136 + C45353 + C45353 + C45343 * C152 + C45348 * C604 +
            C45354 + C45354 + C45344 * C628 + C45350 * C605 + C45355 + C45355 +
            C45345 * C629) *
               C152555 +
           (C54190 + C54191 + C54192) * C152435) *
              C152165 * C152239 * C1461 -
          ((C54193 + C54194 + C54195) * C152435 +
           (C54192 + C54191 + C54190) * C152555) *
              C152165 * C152239 * C1462 +
          ((C54195 + C54194 + C54193) * C152555 +
           (C55474 + C55475 + C55476) * C152435) *
              C152165 * C152239 * C1463 -
          ((C55477 + C55478 + C55479) * C152435 +
           (C55476 + C55475 + C55474) * C152555) *
              C152165 * C152239 * C1464 +
          ((C55479 + C55478 + C55477) * C152555 +
           (C45346 * C7786 + C55459 + C55459 + C45343 * C7792 +
            C45348 * C25670 + C55460 + C55460 + C45344 * C25674 +
            C45350 * C32595 + C55461 + C55461 + C45345 * C32597) *
               C152435) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152280 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152287 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C3759) *
              C152198 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152287 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152280 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C3759) *
              C152207 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152280 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152287 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152280 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152287 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C3759) *
              C152198 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152287 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152280 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C3759) *
              C152207 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152280 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152287 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152280 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152287 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C3759) *
              C152198 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152287 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152280 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C3759) *
              C152207 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C152280 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152287 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152280 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152287 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C152542 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C3759) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C152280 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152287 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152280 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C152287 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C152542 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C3759) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C152280 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152287 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152542 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C152280 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152542) *
               C152287 +
           ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
             C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
             C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
             C62214 * C10058) *
                C152419 * C152165 * C152542 -
            (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
             C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
             C62217 * C1653 + C63446 + C63446 + C62212 * C1677 +
             C62215 * C1652 + C63447 + C63447 + C62211 * C1676) *
                C152419 * C152165 * C152326) *
               C3759) *
              C3415 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152542) *
               C152280 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152542 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152287 +
           ((C62215 * C1651 + C63780 + C63780 + C62211 * C1675 +
             C62217 * C1654 + C63781 + C63781 + C62212 * C1678 +
             C62219 * C10053 + C63782 + C63782 + C62213 * C10059 +
             C62221 * C26242 + C63783 + C63783 + C62214 * C26246) *
                C152419 * C152165 * C152326 -
            (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
             C62219 * C1654 + C62403 + C62403 + C62213 * C1678 +
             C62217 * C1651 + C62404 + C62404 + C62212 * C1675 + C62215 * C361 +
             C62405 + C62405 + C62211 * C385) *
                C152419 * C152165 * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C3275 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C152284) *
                  C152633 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                   C152239 * C152284 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C3275) *
                  C152626 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152239 * C3275 -
               ((C15506 + C15507) * C152419 * C6262 +
                (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                   C152239 * C152284) *
                  C152611 +
              ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
                (C14621 * C366 + C15499 + C15499 + C152557 * C390 +
                 C14623 * C1184 + C15500 + C15500 + C152461 * C1196) *
                    C152419 * C6262) *
                   C152239 * C152284 -
               ((C14688 + C14689) * C152419 * C6262 +
                (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
                   C152239 * C3275) *
                  C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C152634 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C152630 +
               ((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152239 * C152618 -
               ((C16848 + C16849) * C152419 * C6262 +
                (C16850 + C16851) * C152419 * C6261 +
                (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
                 C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                    C152419 * C6260) *
                   C152239 * C152593) *
                  C3415 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                   C152239 * C152630 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C152634 -
               ((C14992 + C14993) * C152419 * C6262 +
                (C14989 + C14988) * C152419 * C6261 +
                (C14987 + C14986) * C152419 * C6260) *
                   C152239 * C152618 +
               ((C16851 + C16850) * C152419 * C6260 +
                (C16849 + C16848) * C152419 * C6261 +
                (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                 C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                    C152419 * C6262) *
                   C152239 * C152593) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152628 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152615 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C152419 * C6260 +
             (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                C152586) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152615 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152628 -
            ((C18251 + C18252) * C152419 * C6262 +
             (C18253 + C18254) * C152419 * C6261 +
             (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
              C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                 C152419 * C6260) *
                C152586) *
               C152284) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152615 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152628 -
            ((C15294 + C15295) * C152419 * C6262 +
             (C15291 + C15290) * C152419 * C6261 +
             (C15289 + C15288) * C152419 * C6260) *
                C152586) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152628 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152615 +
            ((C18254 + C18253) * C152419 * C6260 +
             (C18252 + C18251) * C152419 * C6261 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152419 * C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C3275 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C152633 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C3275 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152634 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152630 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C152618 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C3415 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152630 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152634 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C152618 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152628 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152615 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C23220 +
             (C38784 + C38785) * C23221 + C38792 * C23222) *
                C152165 * C152586) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152615 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152628 -
            ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
             (C38785 + C38784) * C23220) *
                C152165 * C152586) *
               C152284) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152615 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152628 -
            ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
             (C15289 + C15288) * C23220) *
                C152165 * C152586) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152628 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152615 +
            ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C23222) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C3275 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152284) *
              C152633 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C3275) *
              C152626 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C3275 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152284) *
              C152611 +
          ((C62215 * C356 + C62714 + C62714 + C62211 * C380 + C62217 * C1182 +
            C62715 + C62715 + C62212 * C1194 + C62219 * C1645 + C62716 +
            C62716 + C62213 * C1669 + C62221 * C3132 + C62717 + C62717 +
            C62214 * C3140) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152634 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152630 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152618 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C152239 * C152593) *
              C3415 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152630 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152634 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152618 +
           (C62215 * C1469 + C63582 + C63582 + C62211 * C1485 + C62217 * C2198 +
            C63583 + C63583 + C62212 * C2206 + C62219 * C8037 + C63584 +
            C63584 + C62213 * C8043 + C62221 * C26939 + C63585 + C63585 +
            C62214 * C26943) *
               C152419 * C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152628 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152615 +
            (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
             C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
             C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
             C62214 * C17927) *
                C152419 * C152165 * C152586) *
               C3275 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152615 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152628 -
            (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
             C62219 * C9344 + C63441 + C63441 + C62213 * C9350 +
             C62217 * C3129 + C63442 + C63442 + C62212 * C3137 +
             C62215 * C1648 + C63443 + C63443 + C62211 * C1672) *
                C152419 * C152165 * C152586) *
               C152284) *
              C3415 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152615 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152628 -
            (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
             C62219 * C2600 + C62573 + C62573 + C62213 * C2616 +
             C62217 * C2597 + C62574 + C62574 + C62212 * C2613 + C62215 * C606 +
             C62575 + C62575 + C62211 * C630) *
                C152419 * C152165 * C152586) *
               C3275 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152628 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152615 +
            (C62215 * C1647 + C64497 + C64497 + C62211 * C1671 +
             C62217 * C3130 + C64498 + C64498 + C62212 * C3138 +
             C62219 * C9345 + C64499 + C64499 + C62213 * C9351 +
             C62221 * C49388 + C64500 + C64500 + C62214 * C49390) *
                C152419 * C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C152542 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C3275 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C152542 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C3275 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152542 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C3275 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152542) *
               C152284) *
              C152198 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152542) *
               C3275 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152542 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152284) *
              C152207 +
          (((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
             C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
             C62213 * C631 + C62221 * C2596 + C62235 + C62235 +
             C62214 * C2612) *
                C152419 * C152165 * C152542 -
            (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 +
             C62219 * C2596 + C62577 + C62577 + C62213 * C2612 + C62217 * C607 +
             C62578 + C62578 + C62212 * C631 + C62215 * C602 + C62579 + C62579 +
             C62211 * C626) *
                C152419 * C152165 * C152326) *
               C3275 +
           ((C62215 * C1181 + C63054 + C63054 + C62211 * C1193 +
             C62217 * C1646 + C63055 + C63055 + C62212 * C1670 +
             C62219 * C3131 + C63056 + C63056 + C62213 * C3139 +
             C62221 * C9346 + C63057 + C63057 + C62214 * C9352) *
                C152419 * C152165 * C152326 -
            (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 +
             C62219 * C1646 + C62407 + C62407 + C62213 * C1670 +
             C62217 * C1181 + C62408 + C62408 + C62212 * C1193 + C62215 * C357 +
             C62409 + C62409 + C62211 * C381) *
                C152419 * C152165 * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152634 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152630 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152618 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152239 * C152593) *
              C3415 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152630 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152634 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152618 +
           ((C16851 + C16850) * C152419 * C6260 +
            (C16849 + C16848) * C152419 * C6261 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C152419 * C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C3275 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152284) *
              C152633 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152284 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C3275) *
              C152626 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C3275 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152284) *
              C152611 +
          ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
            (C14621 * C366 + C15499 + C15499 + C152557 * C390 + C14623 * C1184 +
             C15500 + C15500 + C152461 * C1196) *
                C152419 * C6262) *
               C152239 * C152284 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C3275 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C152633 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C3275 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152634 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152630 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C152618 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C3415 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152630 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152634 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C152618 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C3275 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152284) *
              C152633 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C3275) *
              C152626 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C3275 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152284) *
              C152611 +
          ((C62215 * C356 + C62714 + C62714 + C62211 * C380 + C62217 * C1182 +
            C62715 + C62715 + C62212 * C1194 + C62219 * C1645 + C62716 +
            C62716 + C62213 * C1669 + C62221 * C3132 + C62717 + C62717 +
            C62214 * C3140) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152634 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152630 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152618 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C152239 * C152593) *
              C3415 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152630 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152634 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152618 +
           (C62215 * C1469 + C63582 + C63582 + C62211 * C1485 + C62217 * C2198 +
            C63583 + C63583 + C62212 * C2206 + C62219 * C8037 + C63584 +
            C63584 + C62213 * C8043 + C62221 * C26939 + C63585 + C63585 +
            C62214 * C26943) *
               C152419 * C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152280 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152287 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C4281 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C3759) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152280 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152287 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152280 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152287 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C4281 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C3759) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C152280 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152287 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C4281 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C152280 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C4281) *
               C152287 +
           ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
             C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
             C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
             C62214 * C10058) *
                C152419 * C152165 * C4281 -
            (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
             C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
             C62217 * C1653 + C63446 + C63446 + C62212 * C1677 +
             C62215 * C1652 + C63447 + C63447 + C62211 * C1676) *
                C152419 * C152165 * C152326) *
               C3759) *
              C152527 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C4281) *
               C152280 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C4281 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152287 +
           ((C62215 * C1651 + C63780 + C63780 + C62211 * C1675 +
             C62217 * C1654 + C63781 + C63781 + C62212 * C1678 +
             C62219 * C10053 + C63782 + C63782 + C62213 * C10059 +
             C62221 * C26242 + C63783 + C63783 + C62214 * C26246) *
                C152419 * C152165 * C152326 -
            (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
             C62219 * C1654 + C62403 + C62403 + C62213 * C1678 +
             C62217 * C1651 + C62404 + C62404 + C62212 * C1675 + C62215 * C361 +
             C62405 + C62405 + C62211 * C385) *
                C152419 * C152165 * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152322 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C4953) *
              C152280 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152329 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152322 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C4953) *
              C152287 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152322 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152329 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152322 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C4953) *
              C152280 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152329 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152322 -
           ((C18251 + C18252) * C152419 * C6262 +
            (C18253 + C18254) * C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C4953) *
              C152287 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152322 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152329 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152322 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152329 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C4953) *
              C152280 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152329 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152322 -
           (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
            C62219 * C9344 + C63441 + C63441 + C62213 * C9350 + C62217 * C3129 +
            C63442 + C63442 + C62212 * C3137 + C62215 * C1648 + C63443 +
            C63443 + C62211 * C1672) *
               C152419 * C152165 * C4953) *
              C152287 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152322 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C152329 +
           (C62215 * C1653 + C63448 + C63448 + C62211 * C1677 +
            C62217 * C10052 + C63449 + C63449 + C62212 * C10058 +
            C62219 * C26241 + C63450 + C63450 + C62213 * C26245 +
            C62221 * C40068 + C63451 + C63451 + C62214 * C40072) *
               C152419 * C152165 * C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                  C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                     C152419 * C6260 +
                 (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                    C4281 -
                (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                 (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                  C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                     C152419 * C6260) *
                    C152326) *
                   C3275 +
               (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                  C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                     C152419 * C6260 +
                 (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                    C152326 -
                (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                 (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                  C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                     C152419 * C6260) *
                    C4281) *
                   C152284) *
                  C152624 +
              ((((C15287 + C15286) * C152419 * C6260 +
                 (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                    C152326 -
                (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                 (C14681 + C14680) * C152419 * C6260) *
                    C4281) *
                   C3275 +
               (((C14985 + C14984) * C152419 * C6260 +
                 (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                    C4281 -
                ((C16044 + C16045) * C152419 * C6262 +
                 (C16043 + C16042) * C152419 * C6261 +
                 (C16041 + C16040) * C152419 * C6260) *
                    C152326) *
                   C152284) *
                  C152609 +
              (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                 C14695 * C6262) *
                    C4281 -
                ((C15714 + C15715) * C152419 * C6262 +
                 (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                    C152326) *
                   C3275 +
               ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
                 (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
                  C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                     C152419 * C6262) *
                    C152326 -
                ((C15506 + C15507) * C152419 * C6262 +
                 (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                    C4281) *
                   C152284) *
                  C152577) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C4281 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C152326) *
                  C152634 +
              (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                 C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                    C152419 * C6260 +
                (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                   C152326 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C4281) *
                  C152630 +
              (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C4281 -
               ((C17160 + C17161) * C152419 * C6262 +
                (C17162 + C17163) * C152419 * C6261 +
                (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
                 C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                    C152419 * C6260) *
                   C152326) *
                  C152618 +
              (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
                 C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                    C152419 * C6260 +
                (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
                 C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                    C152419 * C6261 +
                (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
                 C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                    C152419 * C6262) *
                   C152326 -
               ((C16848 + C16849) * C152419 * C6262 +
                (C16850 + C16851) * C152419 * C6261 +
                (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
                 C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                    C152419 * C6260) *
                   C4281) *
                  C152593) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152635 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152621 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C3275 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152632 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152635 -
           ((C18251 + C18252) * C152419 * C6262 +
            (C18253 + C18254) * C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152621 +
           ((C14621 * C3129 + C18665 + C18665 + C152557 * C3137 +
             C14623 * C9344 + C18666 + C18666 + C152461 * C9350) *
                C152419 * C6260 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C152419 * C6261 +
            (C14621 * C3131 + C18669 + C18669 + C152557 * C3139 +
             C14623 * C9346 + C18670 + C18670 + C152461 * C9352) *
                C152419 * C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C4281 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C3275 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152634 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C4281) *
              C152630 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C4281 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C152618 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152635 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152621 -
           ((C40790 + C40791) * C23222 + (C40792 + C40793) * C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C3275 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152632 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152635 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152621 +
           ((C40793 + C40792) * C23220 + (C40791 + C40790) * C23221 +
            (C14621 * C26938 + C40780 + C40780 + C152557 * C26942 +
             C14623 * C33441 + C40781 + C40781 + C152461 * C33443) *
                C23222) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C4281 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C3275 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C4281) *
               C152284) *
              C152624 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C4281) *
               C3275 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C4281 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152284) *
              C152609 +
          (((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
             C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
             C62213 * C631 + C62221 * C2596 + C62235 + C62235 +
             C62214 * C2612) *
                C152419 * C152165 * C4281 -
            (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 +
             C62219 * C2596 + C62577 + C62577 + C62213 * C2612 + C62217 * C607 +
             C62578 + C62578 + C62212 * C631 + C62215 * C602 + C62579 + C62579 +
             C62211 * C626) *
                C152419 * C152165 * C152326) *
               C3275 +
           ((C62215 * C1181 + C63054 + C63054 + C62211 * C1193 +
             C62217 * C1646 + C63055 + C63055 + C62212 * C1670 +
             C62219 * C3131 + C63056 + C63056 + C62213 * C3139 +
             C62221 * C9346 + C63057 + C63057 + C62214 * C9352) *
                C152419 * C152165 * C152326 -
            (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 +
             C62219 * C1646 + C62407 + C62407 + C62213 * C1670 +
             C62217 * C1181 + C62408 + C62408 + C62212 * C1193 + C62215 * C357 +
             C62409 + C62409 + C62211 * C381) *
                C152419 * C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C4281 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C152634 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152326 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C4281) *
              C152630 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C4281 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C152326) *
              C152618 +
          ((C62215 * C2197 + C63914 + C63914 + C62211 * C2205 + C62217 * C8036 +
            C63915 + C63915 + C62212 * C8042 + C62219 * C26938 + C63916 +
            C63916 + C62213 * C26942 + C62221 * C33441 + C63917 + C63917 +
            C62214 * C33443) *
               C152419 * C152165 * C152326 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152635 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152632 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152621 -
           (C62221 * C48656 + C64295 + C64295 + C62214 * C48660 +
            C62219 * C17921 + C64296 + C64296 + C62213 * C17927 +
            C62217 * C2599 + C64297 + C64297 + C62212 * C2615 + C62215 * C2598 +
            C64298 + C64298 + C62211 * C2614) *
               C152419 * C152165 * C152599) *
              C3275 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152632 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152635 -
           (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
            C62219 * C9344 + C63441 + C63441 + C62213 * C9350 + C62217 * C3129 +
            C63442 + C63442 + C62212 * C3137 + C62215 * C1648 + C63443 +
            C63443 + C62211 * C1672) *
               C152419 * C152165 * C152621 +
           (C62215 * C3129 + C64765 + C64765 + C62211 * C3137 + C62217 * C9344 +
            C64766 + C64766 + C62212 * C9350 + C62219 * C40067 + C64767 +
            C64767 + C62213 * C40071 + C62221 * C56999 + C64768 + C64768 +
            C62214 * C57001) *
               C152419 * C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152322 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152329 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C23220 +
             (C38784 + C38785) * C23221 + C38792 * C23222) *
                C152165 * C4953) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152329 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152322 -
            ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
             (C38785 + C38784) * C23220) *
                C152165 * C4953) *
               C152284) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152329 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152322 -
            ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
             (C15289 + C15288) * C23220) *
                C152165 * C4953) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152322 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152329 +
            ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C23222) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152322 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152329 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C152419 * C6260 +
             (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                C4953) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152329 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152322 -
            ((C18251 + C18252) * C152419 * C6262 +
             (C18253 + C18254) * C152419 * C6261 +
             (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
              C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                 C152419 * C6260) *
                C4953) *
               C152284) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152329 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152322 -
            ((C15294 + C15295) * C152419 * C6262 +
             (C15291 + C15290) * C152419 * C6261 +
             (C15289 + C15288) * C152419 * C6260) *
                C4953) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152322 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152329 +
            ((C18254 + C18253) * C152419 * C6260 +
             (C18252 + C18251) * C152419 * C6261 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152419 * C6262) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152322 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152329 +
            (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
             C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
             C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
             C62214 * C17927) *
                C152419 * C152165 * C4953) *
               C3275 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152329 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152322 -
            (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
             C62219 * C9344 + C63441 + C63441 + C62213 * C9350 +
             C62217 * C3129 + C63442 + C63442 + C62212 * C3137 +
             C62215 * C1648 + C63443 + C63443 + C62211 * C1672) *
                C152419 * C152165 * C4953) *
               C152284) *
              C152527 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152329 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152322 -
            (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
             C62219 * C2600 + C62573 + C62573 + C62213 * C2616 +
             C62217 * C2597 + C62574 + C62574 + C62212 * C2613 + C62215 * C606 +
             C62575 + C62575 + C62211 * C630) *
                C152419 * C152165 * C4953) *
               C3275 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152322 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152329 +
            (C62215 * C1647 + C64497 + C64497 + C62211 * C1671 +
             C62217 * C3130 + C64498 + C64498 + C62212 * C3138 +
             C62219 * C9345 + C64499 + C64499 + C62213 * C9351 +
             C62221 * C49388 + C64500 + C64500 + C62214 * C49390) *
                C152419 * C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C4281 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152634 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152326 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C4281) *
              C152630 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C4281 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152326) *
              C152618 +
          (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
             C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                C152419 * C6260 +
            (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
             C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                C152419 * C6261 +
            (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
             C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                C152419 * C6262) *
               C152326 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152284) *
              C152624 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C152609 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C4281 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C3275 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C4281 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C3275 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152634 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C4281) *
              C152630 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C4281 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C152618 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C4281 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C3275 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C4281) *
               C152284) *
              C152624 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C4281) *
               C3275 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C4281 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152284) *
              C152609 +
          (((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
             C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
             C62213 * C631 + C62221 * C2596 + C62235 + C62235 +
             C62214 * C2612) *
                C152419 * C152165 * C4281 -
            (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 +
             C62219 * C2596 + C62577 + C62577 + C62213 * C2612 + C62217 * C607 +
             C62578 + C62578 + C62212 * C631 + C62215 * C602 + C62579 + C62579 +
             C62211 * C626) *
                C152419 * C152165 * C152326) *
               C3275 +
           ((C62215 * C1181 + C63054 + C63054 + C62211 * C1193 +
             C62217 * C1646 + C63055 + C63055 + C62212 * C1670 +
             C62219 * C3131 + C63056 + C63056 + C62213 * C3139 +
             C62221 * C9346 + C63057 + C63057 + C62214 * C9352) *
                C152419 * C152165 * C152326 -
            (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 +
             C62219 * C1646 + C62407 + C62407 + C62213 * C1670 +
             C62217 * C1181 + C62408 + C62408 + C62212 * C1193 + C62215 * C357 +
             C62409 + C62409 + C62211 * C381) *
                C152419 * C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C4281 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C152634 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152326 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C4281) *
              C152630 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C4281 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C152326) *
              C152618 +
          ((C62215 * C2197 + C63914 + C63914 + C62211 * C2205 + C62217 * C8036 +
            C63915 + C63915 + C62212 * C8042 + C62219 * C26938 + C63916 +
            C63916 + C62213 * C26942 + C62221 * C33441 + C63917 + C63917 +
            C62214 * C33443) *
               C152419 * C152165 * C152326 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C152541 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C152284) *
                  C829 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                   C152239 * C152284 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C152541) *
                  C830 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152239 * C152541 -
               ((C15506 + C15507) * C152419 * C6262 +
                (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                   C152239 * C152284) *
                  C831 +
              ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
                (C14621 * C366 + C15499 + C15499 + C152557 * C390 +
                 C14623 * C1184 + C15500 + C15500 + C152461 * C1196) *
                    C152419 * C6262) *
                   C152239 * C152284 -
               ((C14688 + C14689) * C152419 * C6262 +
                (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
                   C152239 * C152541) *
                  C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C1823 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C1824 +
               ((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152239 * C1825 -
               ((C16848 + C16849) * C152419 * C6262 +
                (C16850 + C16851) * C152419 * C6261 +
                (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
                 C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                    C152419 * C6260) *
                   C152239 * C152593) *
                  C152527 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                   C152239 * C1824 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C1823 -
               ((C14992 + C14993) * C152419 * C6262 +
                (C14989 + C14988) * C152419 * C6261 +
                (C14987 + C14986) * C152419 * C6260) *
                   C152239 * C1825 +
               ((C16851 + C16850) * C152419 * C6260 +
                (C16849 + C16848) * C152419 * C6261 +
                (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
                 C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                    C152419 * C6262) *
                   C152239 * C152593) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C2359 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C2360 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C152419 * C6260 +
             (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                C152586) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C2360 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C2359 -
            ((C18251 + C18252) * C152419 * C6262 +
             (C18253 + C18254) * C152419 * C6261 +
             (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
              C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                 C152419 * C6260) *
                C152586) *
               C152284) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C2360 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C2359 -
            ((C15294 + C15295) * C152419 * C6262 +
             (C15291 + C15290) * C152419 * C6261 +
             (C15289 + C15288) * C152419 * C6260) *
                C152586) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C2359 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C2360 +
            ((C18254 + C18253) * C152419 * C6260 +
             (C18252 + C18251) * C152419 * C6261 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152419 * C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152541 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C829 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152541 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1823 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1824 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C1825 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C152527 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C1824 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1823 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C1825 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C2359 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C2360 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C23220 +
             (C38784 + C38785) * C23221 + C38792 * C23222) *
                C152165 * C152586) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C2360 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C2359 -
            ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
             (C38785 + C38784) * C23220) *
                C152165 * C152586) *
               C152284) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C2360 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C2359 -
            ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
             (C15289 + C15288) * C23220) *
                C152165 * C152586) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C2359 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C2360 +
            ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C23222) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152541 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152284) *
              C829 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152541) *
              C830 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C152541 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152284) *
              C831 +
          ((C62215 * C356 + C62714 + C62714 + C62211 * C380 + C62217 * C1182 +
            C62715 + C62715 + C62212 * C1194 + C62219 * C1645 + C62716 +
            C62716 + C62213 * C1669 + C62221 * C3132 + C62717 + C62717 +
            C62214 * C3140) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C1823 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C1824 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C1825 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C152239 * C152593) *
              C152527 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C1824 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C1823 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C1825 +
           (C62215 * C1469 + C63582 + C63582 + C62211 * C1485 + C62217 * C2198 +
            C63583 + C63583 + C62212 * C2206 + C62219 * C8037 + C63584 +
            C63584 + C62213 * C8043 + C62221 * C26939 + C63585 + C63585 +
            C62214 * C26943) *
               C152419 * C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C2359 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C2360 +
            (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
             C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
             C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
             C62214 * C17927) *
                C152419 * C152165 * C152586) *
               C152541 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C2360 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C2359 -
            (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
             C62219 * C9344 + C63441 + C63441 + C62213 * C9350 +
             C62217 * C3129 + C63442 + C63442 + C62212 * C3137 +
             C62215 * C1648 + C63443 + C63443 + C62211 * C1672) *
                C152419 * C152165 * C152586) *
               C152284) *
              C152527 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C2360 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C2359 -
            (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
             C62219 * C2600 + C62573 + C62573 + C62213 * C2616 +
             C62217 * C2597 + C62574 + C62574 + C62212 * C2613 + C62215 * C606 +
             C62575 + C62575 + C62211 * C630) *
                C152419 * C152165 * C152586) *
               C152541 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C2359 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C2360 +
            (C62215 * C1647 + C64497 + C64497 + C62211 * C1671 +
             C62217 * C3130 + C64498 + C64498 + C62212 * C3138 +
             C62219 * C9345 + C64499 + C64499 + C62213 * C9351 +
             C62221 * C49388 + C64500 + C64500 + C62214 * C49390) *
                C152419 * C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                  C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                     C152419 * C6260 +
                 (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                    C152542 -
                (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                 (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                  C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                     C152419 * C6260) *
                    C152326) *
                   C152541 +
               (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                  C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                     C152419 * C6260 +
                 (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                    C152326 -
                (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                 (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                  C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                     C152419 * C6260) *
                    C152542) *
                   C152284) *
                  C353 +
              ((((C15287 + C15286) * C152419 * C6260 +
                 (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                    C152326 -
                (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                 (C14681 + C14680) * C152419 * C6260) *
                    C152542) *
                   C152541 +
               (((C14985 + C14984) * C152419 * C6260 +
                 (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                    C152542 -
                ((C16044 + C16045) * C152419 * C6262 +
                 (C16043 + C16042) * C152419 * C6261 +
                 (C16041 + C16040) * C152419 * C6260) *
                    C152326) *
                   C152284) *
                  C354 +
              (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                 C14695 * C6262) *
                    C152542 -
                ((C15714 + C15715) * C152419 * C6262 +
                 (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                    C152326) *
                   C152541 +
               ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
                 (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
                  C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                     C152419 * C6262) *
                    C152326 -
                ((C15506 + C15507) * C152419 * C6262 +
                 (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                    C152542) *
                   C152284) *
                  C152577) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152542 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C152326) *
                  C1823 +
              (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                 C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                    C152419 * C6260 +
                (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                   C152326 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152542) *
                  C1824 +
              (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152542 -
               ((C17160 + C17161) * C152419 * C6262 +
                (C17162 + C17163) * C152419 * C6261 +
                (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
                 C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                    C152419 * C6260) *
                   C152326) *
                  C1825 +
              (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
                 C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                    C152419 * C6260 +
                (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
                 C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                    C152419 * C6261 +
                (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
                 C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                    C152419 * C6262) *
                   C152326 -
               ((C16848 + C16849) * C152419 * C6262 +
                (C16850 + C16851) * C152419 * C6261 +
                (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
                 C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                    C152419 * C6260) *
                   C152542) *
                  C152593) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2973 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C2975 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C152541 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C2974 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C2973 -
           ((C18251 + C18252) * C152419 * C6262 +
            (C18253 + C18254) * C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C2975 +
           ((C14621 * C3129 + C18665 + C18665 + C152557 * C3137 +
             C14623 * C9344 + C18666 + C18666 + C152461 * C9350) *
                C152419 * C6260 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C152419 * C6261 +
            (C14621 * C3131 + C18669 + C18669 + C152557 * C3139 +
             C14623 * C9346 + C18670 + C18670 + C152461 * C9352) *
                C152419 * C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            ((C38157 + C38158) * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
              C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                 C23222) *
                C152165 * C152326 -
            ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             (C17163 + C17162) * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             (C16851 + C16850) * C23222) *
                C152165 * C152542 -
            ((C14623 * C8037 + C17361 + C17361 + C152461 * C8043 +
              C14621 * C2198 + C17360 + C17360 + C152557 * C2206) *
                 C23222 +
             (C17162 + C17163) * C23221 + (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C152542 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C152541 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C1823 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152542) *
              C1824 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152542 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C1825 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2973 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C2975 -
           ((C40790 + C40791) * C23222 + (C40792 + C40793) * C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C152541 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C2974 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C2973 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C2975 +
           ((C40793 + C40792) * C23220 + (C40791 + C40790) * C23221 +
            (C14621 * C26938 + C40780 + C40780 + C152557 * C26942 +
             C14623 * C33441 + C40781 + C40781 + C152461 * C33443) *
                C23222) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152542 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C152541 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152542) *
               C152284) *
              C353 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152542) *
               C152541 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152542 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152284) *
              C354 +
          (((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
             C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
             C62213 * C631 + C62221 * C2596 + C62235 + C62235 +
             C62214 * C2612) *
                C152419 * C152165 * C152542 -
            (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 +
             C62219 * C2596 + C62577 + C62577 + C62213 * C2612 + C62217 * C607 +
             C62578 + C62578 + C62212 * C631 + C62215 * C602 + C62579 + C62579 +
             C62211 * C626) *
                C152419 * C152165 * C152326) *
               C152541 +
           ((C62215 * C1181 + C63054 + C63054 + C62211 * C1193 +
             C62217 * C1646 + C63055 + C63055 + C62212 * C1670 +
             C62219 * C3131 + C63056 + C63056 + C62213 * C3139 +
             C62221 * C9346 + C63057 + C63057 + C62214 * C9352) *
                C152419 * C152165 * C152326 -
            (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 +
             C62219 * C1646 + C62407 + C62407 + C62213 * C1670 +
             C62217 * C1181 + C62408 + C62408 + C62212 * C1193 + C62215 * C357 +
             C62409 + C62409 + C62211 * C381) *
                C152419 * C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152542 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C1823 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152326 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152542) *
              C1824 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152542 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C152326) *
              C1825 +
          ((C62215 * C2197 + C63914 + C63914 + C62211 * C2205 + C62217 * C8036 +
            C63915 + C63915 + C62212 * C8042 + C62219 * C26938 + C63916 +
            C63916 + C62213 * C26942 + C62221 * C33441 + C63917 + C63917 +
            C62214 * C33443) *
               C152419 * C152165 * C152326 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C2973 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C2974 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C2975 -
           (C62221 * C48656 + C64295 + C64295 + C62214 * C48660 +
            C62219 * C17921 + C64296 + C64296 + C62213 * C17927 +
            C62217 * C2599 + C64297 + C64297 + C62212 * C2615 + C62215 * C2598 +
            C64298 + C64298 + C62211 * C2614) *
               C152419 * C152165 * C152599) *
              C152541 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C2974 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C2973 -
           (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
            C62219 * C9344 + C63441 + C63441 + C62213 * C9350 + C62217 * C3129 +
            C63442 + C63442 + C62212 * C3137 + C62215 * C1648 + C63443 +
            C63443 + C62211 * C1672) *
               C152419 * C152165 * C2975 +
           (C62215 * C3129 + C64765 + C64765 + C62211 * C3137 + C62217 * C9344 +
            C64766 + C64766 + C62212 * C9350 + C62219 * C40067 + C64767 +
            C64767 + C62213 * C40071 + C62221 * C56999 + C64768 + C64768 +
            C62214 * C57001) *
               C152419 * C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                   C152419 * C6260 +
               (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                  C152239 * C152221 * C129 -
              (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
               (C14681 + C14680) * C152419 * C6260) *
                  C152239 * C152221 * C130 +
              (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
               C14695 * C6262) *
                  C152239 * C152221 * C131 -
              ((C14688 + C14689) * C152419 * C6262 +
               (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
                  C152239 * C152221 * C132 +
              (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
               (C14621 * C142 + C14658 + C14658 + C152557 * C158 +
                C14623 * C975 + C14659 + C14659 + C152461 * C977) *
                   C152419 * C6262) *
                  C152239 * C152221 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C152627 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C152613 +
               ((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152239 * C152583) *
                  C353 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 +
                (C14990 + C14991) * C152419 * C6262) *
                   C152239 * C152613 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C152627 -
               ((C14992 + C14993) * C152419 * C6262 +
                (C14989 + C14988) * C152419 * C6261 +
                (C14987 + C14986) * C152419 * C6260) *
                   C152239 * C152583) *
                  C354 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152239 * C152627 -
               ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
                 C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                    C152419 * C6262 +
                (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                   C152239 * C152613 +
               (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
                (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
                 C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                    C152419 * C6262) *
                   C152239 * C152583) *
                  C152577) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152628 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C152615 +
               ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                 C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                    C152419 * C6260 +
                (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                   C152586) *
                  C152221 * C353 +
              (((C15287 + C15286) * C152419 * C6260 +
                (C15285 + C15284) * C152419 * C6261 +
                (C15292 + C15293) * C152419 * C6262) *
                   C152615 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152628 -
               ((C15294 + C15295) * C152419 * C6262 +
                (C15291 + C15290) * C152419 * C6261 +
                (C15289 + C15288) * C152419 * C6260) *
                   C152586) *
                  C152221 * C354 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152628 -
               ((C14623 * C610 + C15256 + C15256 + C152461 * C634 +
                 C14621 * C609 + C15257 + C15257 + C152557 * C633) *
                    C152419 * C6262 +
                (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                   C152615 +
               (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
                (C14621 * C610 + C15258 + C15258 + C152557 * C634 +
                 C14623 * C2977 + C15259 + C15259 + C152461 * C2979) *
                    C152419 * C6262) *
                   C152586) *
                  C152221 * C152577) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C1373 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C1374 +
               ((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152239 * C152583) *
                  C152624 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                   C152239 * C1374 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C1373 -
               ((C14992 + C14993) * C152419 * C6262 +
                (C14989 + C14988) * C152419 * C6261 +
                (C14987 + C14986) * C152419 * C6260) *
                   C152239 * C152583) *
                  C152609 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152239 * C1373 -
               ((C15506 + C15507) * C152419 * C6262 +
                (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                   C152239 * C1374 +
               (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
                (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
                 C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                    C152419 * C6262) *
                   C152239 * C152583) *
                  C152577) -
         0.25 * std::pow(Pi, 2.5) *
             (((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                   C152419 * C6260 +
               (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                  C152239 * C1461 -
              (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
               (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                   C152419 * C6260) *
                  C152239 * C1462 +
              ((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                   C152419 * C6260 +
               (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                  C152239 * C1463 -
              ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
                C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
                   C152419 * C6262 +
               (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
                C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
                   C152419 * C6261 +
               (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
                C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                   C152419 * C6260) *
                  C152239 * C1464 +
              ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
                C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                   C152419 * C6260 +
               (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
                C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
                   C152419 * C6261 +
               (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
                C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                   C152419 * C6262) *
                  C152239 * C1465) *
             C152193 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152628 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C152615 +
               ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                 C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                    C152419 * C6260 +
                (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                   C152586) *
                  C1373 +
              (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                 C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                    C152419 * C6260 +
                (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                   C152615 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152628 -
               ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
                 C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                    C152419 * C6262 +
                (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
                 C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                    C152419 * C6261 +
                (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
                 C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                    C152419 * C6260) *
                   C152586) *
                  C1374 +
              (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152628 -
               ((C14623 * C1655 + C16624 + C16624 + C152461 * C1679 +
                 C14621 * C1650 + C16625 + C16625 + C152557 * C1674) *
                    C152419 * C6262 +
                (C14623 * C1654 + C16626 + C16626 + C152461 * C1678 +
                 C14621 * C1651 + C16627 + C16627 + C152557 * C1675) *
                    C152419 * C6261 +
                (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
                 C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                    C152419 * C6260) *
                   C152615 +
               ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
                 C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                    C152419 * C6260 +
                (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
                 C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                    C152419 * C6261 +
                (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
                 C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                    C152419 * C6262) *
                   C152586) *
                  C152583) *
             C152193 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C2359 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C2360 +
               ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                 C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                    C152419 * C6260 +
                (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                   C152586) *
                  C152221 * C152624 +
              (((C15287 + C15286) * C152419 * C6260 +
                (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                   C2360 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C2359 -
               ((C15294 + C15295) * C152419 * C6262 +
                (C15291 + C15290) * C152419 * C6261 +
                (C15289 + C15288) * C152419 * C6260) *
                   C152586) *
                  C152221 * C152609 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C2359 -
               ((C15714 + C15715) * C152419 * C6262 +
                (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                   C2360 +
               (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
                (C14621 * C610 + C15258 + C15258 + C152557 * C634 +
                 C14623 * C2977 + C15259 + C15259 + C152461 * C2979) *
                    C152419 * C6262) *
                   C152586) *
                  C152221 * C152577) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C2359 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C2360 +
               ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                 C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                    C152419 * C6260 +
                (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                   C152586) *
                  C152627 +
              (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                 C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                    C152419 * C6260 +
                (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                   C2360 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C2359 -
               ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
                 C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                    C152419 * C6262 +
                (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
                 C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                    C152419 * C6261 +
                (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
                 C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                    C152419 * C6260) *
                   C152586) *
                  C152613 +
              (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C2359 -
               ((C17160 + C17161) * C152419 * C6262 +
                (C17162 + C17163) * C152419 * C6261 +
                (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
                 C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                    C152419 * C6260) *
                   C2360 +
               ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
                 C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                    C152419 * C6260 +
                (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
                 C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                    C152419 * C6261 +
                (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
                 C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                    C152419 * C6262) *
                   C152586) *
                  C152583) *
             C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C2590 -
          (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
           (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
            C15229 + C15229 + C152557 * C628) *
               C152419 * C6260) *
              C2591 +
          ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
            C15231 + C15231 + C152461 * C2614) *
               C152419 * C6260 +
           (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
              C2592 -
          ((C14623 * C2601 + C17931 + C17931 + C152461 * C2617 +
            C14621 * C2596 + C17932 + C17932 + C152557 * C2612) *
               C152419 * C6262 +
           (C14623 * C2600 + C17933 + C17933 + C152461 * C2616 +
            C14621 * C2597 + C17934 + C17934 + C152557 * C2613) *
               C152419 * C6261 +
           (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
            C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
               C152419 * C6260) *
              C2593 +
          ((C14621 * C2599 + C17937 + C17937 + C152557 * C2615 +
            C14623 * C17921 + C17938 + C17938 + C152461 * C17927) *
               C152419 * C6260 +
           (C14621 * C2600 + C17939 + C17939 + C152557 * C2616 +
            C14623 * C17922 + C17940 + C17940 + C152461 * C17928) *
               C152419 * C6261 +
           (C14621 * C2601 + C17941 + C17941 + C152557 * C2617 +
            C14623 * C17923 + C17942 + C17942 + C152461 * C17929) *
               C152419 * C6262) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C14621 * C1648 + C16623 + C16623 + C152557 * C1672 +
             C14623 * C3129 + C16622 + C16622 + C152461 * C3137) *
                C23221 +
            (C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C23222) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152615 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152628 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152628 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152615 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C1373 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            (C38788 + C38789) * C23222) *
               C152165 * C152615 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152628 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C1374 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152628 -
           ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
             C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                C23222 +
            (C38789 + C38788) * C23221 + C38745 * C23220) *
               C152165 * C152615 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C2360 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C2359 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C2359 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C2360 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152627 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C2360 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C2359 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C152613 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C2359 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C2360 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C2590 -
          (C38745 * C23222 + (C38159 + C38160) * C23221 +
           (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
            C15229 + C15229 + C152557 * C628) *
               C23220) *
              C152165 * C2591 +
          ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
            C15231 + C15231 + C152461 * C2614) *
               C23220 +
           (C38784 + C38785) * C23221 + C38792 * C23222) *
              C152165 * C2592 -
          ((C14623 * C26241 + C40074 + C40074 + C152461 * C26245 +
            C14621 * C10052 + C40075 + C40075 + C152557 * C10058) *
               C23222 +
           (C14623 * C9344 + C18666 + C18666 + C152461 * C9350 +
            C14621 * C3129 + C18665 + C18665 + C152557 * C3137) *
               C23221 +
           (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
            C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
               C23220) *
              C152165 * C2593 +
          ((C14621 * C2599 + C17937 + C17937 + C152557 * C2615 +
            C14623 * C17921 + C17938 + C17938 + C152461 * C17927) *
               C23220 +
           (C14621 * C9344 + C40076 + C40076 + C152557 * C9350 +
            C14623 * C40067 + C40077 + C40077 + C152461 * C40071) *
               C23221 +
           (C14621 * C26241 + C40078 + C40078 + C152557 * C26245 +
            C14623 * C40068 + C40079 + C40079 + C152461 * C40072) *
               C23222) *
              C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C152221 * C129 -
          (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
           C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
           C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
              C152419 * C152165 * C152239 * C152221 * C130 +
          (C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
           C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
           C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
              C152419 * C152165 * C152239 * C152221 * C131 -
          (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
           C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
           C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
              C152419 * C152165 * C152239 * C152221 * C132 +
          (C62215 * C140 + C62240 + C62240 + C62211 * C156 + C62217 * C609 +
           C62241 + C62241 + C62212 * C633 + C62219 * C610 + C62242 + C62242 +
           C62213 * C634 + C62221 * C2977 + C62243 + C62243 + C62214 * C2979) *
              C152419 * C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C353 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152613 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C354 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152628 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152615 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C152221 * C353 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152615 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152628 -
           (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
            C62219 * C2600 + C62573 + C62573 + C62213 * C2616 + C62217 * C2597 +
            C62574 + C62574 + C62212 * C2613 + C62215 * C606 + C62575 + C62575 +
            C62211 * C630) *
               C152419 * C152165 * C152586) *
              C152221 * C354 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152628 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C152615 +
           (C62215 * C607 + C62580 + C62580 + C62211 * C631 + C62217 * C2596 +
            C62581 + C62581 + C62212 * C2612 + C62219 * C2601 + C62582 +
            C62582 + C62213 * C2617 + C62221 * C17923 + C62583 + C62583 +
            C62214 * C17929) *
               C152419 * C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C152624 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C1374 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C152609 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C1461 -
          (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
           C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 + C62392 +
           C62212 * C1191 + C62215 * C359 + C62393 + C62393 + C62211 * C383) *
              C152419 * C152165 * C152239 * C1462 +
          (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
           C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 + C62396 +
           C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
           C62214 * C10058) *
              C152419 * C152165 * C152239 * C1463 -
          (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
           C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
           C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 + C63289 +
           C62211 * C1486) *
              C152419 * C152165 * C152239 * C1464 +
          (C62215 * C1471 + C63290 + C63290 + C62211 * C1487 + C62217 * C8769 +
           C63291 + C63291 + C62212 * C8775 + C62219 * C24963 + C63292 +
           C63292 + C62213 * C24967 + C62221 * C33899 + C63293 + C63293 +
           C62214 * C33901) *
              C152419 * C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152628 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152615 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C1373 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152615 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152628 -
           (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
            C62219 * C9344 + C63441 + C63441 + C62213 * C9350 + C62217 * C3129 +
            C63442 + C63442 + C62212 * C3137 + C62215 * C1648 + C63443 +
            C63443 + C62211 * C1672) *
               C152419 * C152165 * C152586) *
              C1374 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152628 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C152615 +
           (C62215 * C1653 + C63448 + C63448 + C62211 * C1677 +
            C62217 * C10052 + C63449 + C63449 + C62212 * C10058 +
            C62219 * C26241 + C63450 + C63450 + C62213 * C26245 +
            C62221 * C40068 + C63451 + C63451 + C62214 * C40072) *
               C152419 * C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C2359 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C2360 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C152221 * C152624 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C2360 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C2359 -
           (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
            C62219 * C2600 + C62573 + C62573 + C62213 * C2616 + C62217 * C2597 +
            C62574 + C62574 + C62212 * C2613 + C62215 * C606 + C62575 + C62575 +
            C62211 * C630) *
               C152419 * C152165 * C152586) *
              C152221 * C152609 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C2359 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C2360 +
           (C62215 * C607 + C62580 + C62580 + C62211 * C631 + C62217 * C2596 +
            C62581 + C62581 + C62212 * C2612 + C62219 * C2601 + C62582 +
            C62582 + C62213 * C2617 + C62221 * C17923 + C62583 + C62583 +
            C62214 * C17929) *
               C152419 * C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C2359 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C2360 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C152627 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C2360 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C2359 -
           (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
            C62219 * C9344 + C63441 + C63441 + C62213 * C9350 + C62217 * C3129 +
            C63442 + C63442 + C62212 * C3137 + C62215 * C1648 + C63443 +
            C63443 + C62211 * C1672) *
               C152419 * C152165 * C152586) *
              C152613 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C2359 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C2360 +
           (C62215 * C1653 + C63448 + C63448 + C62211 * C1677 +
            C62217 * C10052 + C63449 + C63449 + C62212 * C10058 +
            C62219 * C26241 + C63450 + C63450 + C62213 * C26245 +
            C62221 * C40068 + C63451 + C63451 + C62214 * C40072) *
               C152419 * C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C2590 -
          (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
           C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
           C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
              C152419 * C152165 * C2591 +
          (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
           C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 + C62566 +
           C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
           C62214 * C17927) *
              C152419 * C152165 * C2592 -
          (C62221 * C48656 + C64295 + C64295 + C62214 * C48660 +
           C62219 * C17921 + C64296 + C64296 + C62213 * C17927 +
           C62217 * C2599 + C64297 + C64297 + C62212 * C2615 + C62215 * C2598 +
           C64298 + C64298 + C62211 * C2614) *
              C152419 * C152165 * C2593 +
          (C62215 * C2599 + C64299 + C64299 + C62211 * C2615 + C62217 * C17921 +
           C64300 + C64300 + C62212 * C17927 + C62219 * C48656 + C64301 +
           C64301 + C62213 * C48660 + C62221 * C64291 + C64302 + C64302 +
           C62214 * C64293) *
              C152419 * C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152542 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C152326) *
                  C152221 * C829 +
              (((C15287 + C15286) * C152419 * C6260 +
                (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                   C152326 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152542) *
                  C152221 * C830 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152542 -
               ((C15714 + C15715) * C152419 * C6262 +
                (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                   C152326) *
                  C152221 * C831 +
              ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
                (C14621 * C611 + C15707 + C15707 + C152557 * C635 +
                 C14623 * C612 + C15708 + C15708 + C152461 * C636) *
                    C152419 * C6262) *
                   C152326 -
               ((C14688 + C14689) * C152419 * C6262 +
                (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
                   C152542) *
                  C152221 * C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                  C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                     C152419 * C6260 +
                 (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                    C152542 -
                (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                 (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                  C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                     C152419 * C6260) *
                    C152326) *
                   C1373 +
               (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                  C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                     C152419 * C6260 +
                 (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                    C152326 -
                (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                 (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                  C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                     C152419 * C6260) *
                    C152542) *
                   C1374 +
               (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                  C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                     C152419 * C6260 +
                 (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                    C152542 -
                ((C17160 + C17161) * C152419 * C6262 +
                 (C17162 + C17163) * C152419 * C6261 +
                 (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
                  C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                     C152419 * C6260) *
                    C152326) *
                   C152583) *
                  C152527 +
              ((((C15287 + C15286) * C152419 * C6260 +
                 (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                    C152326 -
                (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                 (C14681 + C14680) * C152419 * C6260) *
                    C152542) *
                   C1373 +
               (((C14985 + C14984) * C152419 * C6260 +
                 (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                    C152542 -
                ((C16044 + C16045) * C152419 * C6262 +
                 (C16043 + C16042) * C152419 * C6261 +
                 (C16041 + C16040) * C152419 * C6260) *
                    C152326) *
                   C1374 +
               (((C17163 + C17162) * C152419 * C6260 +
                 (C17161 + C17160) * C152419 * C6261 +
                 (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
                  C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                     C152419 * C6262) *
                    C152326 -
                ((C14992 + C14993) * C152419 * C6262 +
                 (C14989 + C14988) * C152419 * C6261 +
                 (C14987 + C14986) * C152419 * C6260) *
                    C152542) *
                   C152583) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2973 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C2975 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C152221 * C152527 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C2974 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C2973 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C2975 +
           ((C18470 + C18469) * C152419 * C6260 +
            (C18468 + C18467) * C152419 * C6261 +
            (C14621 * C2595 + C18457 + C18457 + C152557 * C2611 +
             C14623 * C2602 + C18458 + C18458 + C152461 * C2618) *
                C152419 * C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152542 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C1373 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C38788 + C38789) * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C1374 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C152542 -
            ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
              C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                 C23222 +
             (C38789 + C38788) * C23221 + C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C1373 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C1374 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2973 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C2975 -
           ((C14623 * C26241 + C40074 + C40074 + C152461 * C26245 +
             C14621 * C10052 + C40075 + C40075 + C152557 * C10058) *
                C23222 +
            (C14623 * C9344 + C18666 + C18666 + C152461 * C9350 +
             C14621 * C3129 + C18665 + C18665 + C152557 * C3137) *
                C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C152221 * C152527 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C2974 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C2973 -
           ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
            (C15289 + C15288) * C23220) *
               C152165 * C2975 +
           ((C18470 + C18469) * C23220 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C23221 +
            (C14621 * C10053 + C40576 + C40576 + C152557 * C10059 +
             C14623 * C26242 + C40577 + C40577 + C152461 * C26246) *
                C23222) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152542 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C152221 * C829 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152326 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152542) *
              C152221 * C830 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152542 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C152326) *
              C152221 * C831 +
          ((C62215 * C601 + C62848 + C62848 + C62211 * C625 + C62217 * C608 +
            C62849 + C62849 + C62212 * C632 + C62219 * C2595 + C62850 + C62850 +
            C62213 * C2611 + C62221 * C2602 + C62851 + C62851 +
            C62214 * C2618) *
               C152419 * C152165 * C152326 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152542 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C1373 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152542) *
               C1374 +
           ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
             C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
             C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
             C62214 * C10058) *
                C152419 * C152165 * C152542 -
            (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
             C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
             C62217 * C1653 + C63446 + C63446 + C62212 * C1677 +
             C62215 * C1652 + C63447 + C63447 + C62211 * C1676) *
                C152419 * C152165 * C152326) *
               C152583) *
              C152527 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152542) *
               C1373 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152542 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C1374 +
           ((C62215 * C1651 + C63780 + C63780 + C62211 * C1675 +
             C62217 * C1654 + C63781 + C63781 + C62212 * C1678 +
             C62219 * C10053 + C63782 + C63782 + C62213 * C10059 +
             C62221 * C26242 + C63783 + C63783 + C62214 * C26246) *
                C152419 * C152165 * C152326 -
            (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
             C62219 * C1654 + C62403 + C62403 + C62213 * C1678 +
             C62217 * C1651 + C62404 + C62404 + C62212 * C1675 + C62215 * C361 +
             C62405 + C62405 + C62211 * C385) *
                C152419 * C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C2973 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C2974 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C2975 -
           (C62221 * C48656 + C64295 + C64295 + C62214 * C48660 +
            C62219 * C17921 + C64296 + C64296 + C62213 * C17927 +
            C62217 * C2599 + C64297 + C64297 + C62212 * C2615 + C62215 * C2598 +
            C64298 + C64298 + C62211 * C2614) *
               C152419 * C152165 * C152599) *
              C152221 * C152527 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C2974 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C2973 -
           (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
            C62219 * C2600 + C62573 + C62573 + C62213 * C2616 + C62217 * C2597 +
            C62574 + C62574 + C62212 * C2613 + C62215 * C606 + C62575 + C62575 +
            C62211 * C630) *
               C152419 * C152165 * C2975 +
           (C62215 * C2597 + C64631 + C64631 + C62211 * C2613 + C62217 * C2600 +
            C64632 + C64632 + C62212 * C2616 + C62219 * C17922 + C64633 +
            C64633 + C62213 * C17928 + C62221 * C48657 + C64634 + C64634 +
            C62214 * C48661) *
               C152419 * C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C152221 * C129 -
          (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
           (C14681 + C14680) * C152419 * C6260) *
              C152239 * C152221 * C130 +
          (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
           C14695 * C6262) *
              C152239 * C152221 * C131 -
          ((C14688 + C14689) * C152419 * C6262 +
           (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
              C152239 * C152221 * C132 +
          (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
           (C14621 * C142 + C14658 + C14658 + C152557 * C158 + C14623 * C975 +
            C14659 + C14659 + C152461 * C977) *
               C152419 * C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152627 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152613 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 +
            (C14990 + C14991) * C152419 * C6262) *
               C152239 * C152613 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152627 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152627 -
           ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
             C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152613 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1373 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1374 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1374 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1373 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C1373 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C1374 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C1461 -
          (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
           (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 + C14621 * C359 +
            C14927 + C14927 + C152557 * C383) *
               C152419 * C6260) *
              C152239 * C1462 +
          ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C152419 * C6260 +
           (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
              C152239 * C1463 -
          ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
            C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
               C152419 * C6262 +
           (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
            C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
               C152419 * C6261 +
           (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
            C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
               C152419 * C6260) *
              C152239 * C1464 +
          ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
            C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
               C152419 * C6260 +
           (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
            C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
               C152419 * C6261 +
           (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
            C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
               C152419 * C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2359 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152221 * C152624 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C2360 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C2359 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152586) *
              C152221 * C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C2359 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C2360 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2359 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152627 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C2360 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C2359 -
           ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
             C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                C152419 * C6262 +
            (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
             C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152586) *
              C152613 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C2359 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C2360 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C2359 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C2359 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C2360 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152627 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C2360 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C2359 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C152613 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C2359 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C2360 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C152221 * C129 -
          (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
           C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
           C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
              C152419 * C152165 * C152239 * C152221 * C130 +
          (C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
           C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
           C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
              C152419 * C152165 * C152239 * C152221 * C131 -
          (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
           C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
           C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
              C152419 * C152165 * C152239 * C152221 * C132 +
          (C62215 * C140 + C62240 + C62240 + C62211 * C156 + C62217 * C609 +
           C62241 + C62241 + C62212 * C633 + C62219 * C610 + C62242 + C62242 +
           C62213 * C634 + C62221 * C2977 + C62243 + C62243 + C62214 * C2979) *
              C152419 * C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C353 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152613 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C354 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C152624 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C1374 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C152609 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C1461 -
          (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
           C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 + C62392 +
           C62212 * C1191 + C62215 * C359 + C62393 + C62393 + C62211 * C383) *
              C152419 * C152165 * C152239 * C1462 +
          (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
           C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 + C62396 +
           C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
           C62214 * C10058) *
              C152419 * C152165 * C152239 * C1463 -
          (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
           C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
           C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 + C63289 +
           C62211 * C1486) *
              C152419 * C152165 * C152239 * C1464 +
          (C62215 * C1471 + C63290 + C63290 + C62211 * C1487 + C62217 * C8769 +
           C63291 + C63291 + C62212 * C8775 + C62219 * C24963 + C63292 +
           C63292 + C62213 * C24967 + C62221 * C33899 + C63293 + C63293 +
           C62214 * C33901) *
              C152419 * C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C2359 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C2360 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C152221 * C152624 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C2360 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C2359 -
           (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
            C62219 * C2600 + C62573 + C62573 + C62213 * C2616 + C62217 * C2597 +
            C62574 + C62574 + C62212 * C2613 + C62215 * C606 + C62575 + C62575 +
            C62211 * C630) *
               C152419 * C152165 * C152586) *
              C152221 * C152609 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C2359 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C2360 +
           (C62215 * C607 + C62580 + C62580 + C62211 * C631 + C62217 * C2596 +
            C62581 + C62581 + C62212 * C2612 + C62219 * C2601 + C62582 +
            C62582 + C62213 * C2617 + C62221 * C17923 + C62583 + C62583 +
            C62214 * C17929) *
               C152419 * C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C2359 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C2360 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C152627 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C2360 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C2359 -
           (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
            C62219 * C9344 + C63441 + C63441 + C62213 * C9350 + C62217 * C3129 +
            C63442 + C63442 + C62212 * C3137 + C62215 * C1648 + C63443 +
            C63443 + C62211 * C1672) *
               C152419 * C152165 * C152586) *
              C152613 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C2359 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C2360 +
           (C62215 * C1653 + C63448 + C63448 + C62211 * C1677 +
            C62217 * C10052 + C63449 + C63449 + C62212 * C10058 +
            C62219 * C26241 + C63450 + C63450 + C62213 * C26245 +
            C62221 * C40068 + C63451 + C63451 + C62214 * C40072) *
               C152419 * C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C4281 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C152541 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C4281 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C152541 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C4281 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C152541 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C4281) *
               C152284) *
              C152198 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C4281) *
               C152541 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C4281 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152284) *
              C152207 +
          (((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
             C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
             C62213 * C631 + C62221 * C2596 + C62235 + C62235 +
             C62214 * C2612) *
                C152419 * C152165 * C4281 -
            (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 +
             C62219 * C2596 + C62577 + C62577 + C62213 * C2612 + C62217 * C607 +
             C62578 + C62578 + C62212 * C631 + C62215 * C602 + C62579 + C62579 +
             C62211 * C626) *
                C152419 * C152165 * C152326) *
               C152541 +
           ((C62215 * C1181 + C63054 + C63054 + C62211 * C1193 +
             C62217 * C1646 + C63055 + C63055 + C62212 * C1670 +
             C62219 * C3131 + C63056 + C63056 + C62213 * C3139 +
             C62221 * C9346 + C63057 + C63057 + C62214 * C9352) *
                C152419 * C152165 * C152326 -
            (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 +
             C62219 * C1646 + C62407 + C62407 + C62213 * C1670 +
             C62217 * C1181 + C62408 + C62408 + C62212 * C1193 + C62215 * C357 +
             C62409 + C62409 + C62211 * C381) *
                C152419 * C152165 * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152322 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152329 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C23220 +
             (C38784 + C38785) * C23221 + C38792 * C23222) *
                C152165 * C4953) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152329 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152322 -
            ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
             (C38785 + C38784) * C23220) *
                C152165 * C4953) *
               C152284) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152329 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152322 -
            ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
             (C15289 + C15288) * C23220) *
                C152165 * C4953) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152322 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152329 +
            ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C23222) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152322 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152329 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C152419 * C6260 +
             (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                C4953) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152329 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152322 -
            ((C18251 + C18252) * C152419 * C6262 +
             (C18253 + C18254) * C152419 * C6261 +
             (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
              C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                 C152419 * C6260) *
                C4953) *
               C152284) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152329 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152322 -
            ((C15294 + C15295) * C152419 * C6262 +
             (C15291 + C15290) * C152419 * C6261 +
             (C15289 + C15288) * C152419 * C6260) *
                C4953) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152322 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152329 +
            ((C18254 + C18253) * C152419 * C6260 +
             (C18252 + C18251) * C152419 * C6261 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152419 * C6262) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152322 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152329 +
            (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
             C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
             C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
             C62214 * C17927) *
                C152419 * C152165 * C4953) *
               C152541 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152329 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152322 -
            (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
             C62219 * C9344 + C63441 + C63441 + C62213 * C9350 +
             C62217 * C3129 + C63442 + C63442 + C62212 * C3137 +
             C62215 * C1648 + C63443 + C63443 + C62211 * C1672) *
                C152419 * C152165 * C4953) *
               C152284) *
              C3415 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152329 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152322 -
            (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
             C62219 * C2600 + C62573 + C62573 + C62213 * C2616 +
             C62217 * C2597 + C62574 + C62574 + C62212 * C2613 + C62215 * C606 +
             C62575 + C62575 + C62211 * C630) *
                C152419 * C152165 * C4953) *
               C152541 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152322 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152329 +
            (C62215 * C1647 + C64497 + C64497 + C62211 * C1671 +
             C62217 * C3130 + C64498 + C64498 + C62212 * C3138 +
             C62219 * C9345 + C64499 + C64499 + C62213 * C9351 +
             C62221 * C49388 + C64500 + C64500 + C62214 * C49390) *
                C152419 * C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C4281 -
               (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                 C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                    C152419 * C6260) *
                   C152326) *
                  C152221 * C152633 +
              (((C15287 + C15286) * C152419 * C6260 +
                (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                   C152326 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C4281) *
                  C152221 * C152626 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C4281 -
               ((C15714 + C15715) * C152419 * C6262 +
                (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                   C152326) *
                  C152221 * C152611 +
              ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
                (C14621 * C611 + C15707 + C15707 + C152557 * C635 +
                 C14623 * C612 + C15708 + C15708 + C152461 * C636) *
                    C152419 * C6262) *
                   C152326 -
               ((C14688 + C14689) * C152419 * C6262 +
                (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
                   C4281) *
                  C152221 * C152587) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                  C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                     C152419 * C6260 +
                 (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                    C4281 -
                (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                 (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                  C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                     C152419 * C6260) *
                    C152326) *
                   C152627 +
               (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                  C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                     C152419 * C6260 +
                 (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                    C152326 -
                (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                 (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                  C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                     C152419 * C6260) *
                    C4281) *
                   C152613 +
               (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                  C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                     C152419 * C6260 +
                 (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                    C4281 -
                ((C17160 + C17161) * C152419 * C6262 +
                 (C17162 + C17163) * C152419 * C6261 +
                 (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
                  C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                     C152419 * C6260) *
                    C152326) *
                   C152583) *
                  C3415 +
              ((((C15287 + C15286) * C152419 * C6260 +
                 (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                    C152326 -
                (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                 (C14681 + C14680) * C152419 * C6260) *
                    C4281) *
                   C152627 +
               (((C14985 + C14984) * C152419 * C6260 +
                 (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                    C4281 -
                ((C16044 + C16045) * C152419 * C6262 +
                 (C16043 + C16042) * C152419 * C6261 +
                 (C16041 + C16040) * C152419 * C6260) *
                    C152326) *
                   C152613 +
               (((C17163 + C17162) * C152419 * C6260 +
                 (C17161 + C17160) * C152419 * C6261 +
                 (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
                  C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                     C152419 * C6262) *
                    C152326 -
                ((C14992 + C14993) * C152419 * C6262 +
                 (C14989 + C14988) * C152419 * C6261 +
                 (C14987 + C14986) * C152419 * C6260) *
                    C4281) *
                   C152583) *
                  C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152635 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152621 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C152221 * C3415 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152632 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152635 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152621 +
           ((C18470 + C18469) * C152419 * C6260 +
            (C18468 + C18467) * C152419 * C6261 +
            (C14621 * C2595 + C18457 + C18457 + C152557 * C2611 +
             C14623 * C2602 + C18458 + C18458 + C152461 * C2618) *
                C152419 * C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C4281 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152627 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152613 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C4281 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152627 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152613 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152635 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152621 -
           ((C40790 + C40791) * C23222 + (C40792 + C40793) * C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C152221 * C3415 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152632 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152635 -
           ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
            (C15289 + C15288) * C23220) *
               C152165 * C152621 +
           ((C18470 + C18469) * C23220 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C23221 +
            (C14621 * C10053 + C40576 + C40576 + C152557 * C10059 +
             C14623 * C26242 + C40577 + C40577 + C152461 * C26246) *
                C23222) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C4281 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C152221 * C152633 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152326 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C4281) *
              C152221 * C152626 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C4281 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C152326) *
              C152221 * C152611 +
          ((C62215 * C601 + C62848 + C62848 + C62211 * C625 + C62217 * C608 +
            C62849 + C62849 + C62212 * C632 + C62219 * C2595 + C62850 + C62850 +
            C62213 * C2611 + C62221 * C2602 + C62851 + C62851 +
            C62214 * C2618) *
               C152419 * C152165 * C152326 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C4281 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C152627 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C4281) *
               C152613 +
           ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
             C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
             C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
             C62214 * C10058) *
                C152419 * C152165 * C4281 -
            (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
             C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
             C62217 * C1653 + C63446 + C63446 + C62212 * C1677 +
             C62215 * C1652 + C63447 + C63447 + C62211 * C1676) *
                C152419 * C152165 * C152326) *
               C152583) *
              C3415 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C4281) *
               C152627 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C4281 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152613 +
           ((C62215 * C1651 + C63780 + C63780 + C62211 * C1675 +
             C62217 * C1654 + C63781 + C63781 + C62212 * C1678 +
             C62219 * C10053 + C63782 + C63782 + C62213 * C10059 +
             C62221 * C26242 + C63783 + C63783 + C62214 * C26246) *
                C152419 * C152165 * C152326 -
            (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
             C62219 * C1654 + C62403 + C62403 + C62213 * C1678 +
             C62217 * C1651 + C62404 + C62404 + C62212 * C1675 + C62215 * C361 +
             C62405 + C62405 + C62211 * C385) *
                C152419 * C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152635 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152632 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152621 -
           (C62221 * C48656 + C64295 + C64295 + C62214 * C48660 +
            C62219 * C17921 + C64296 + C64296 + C62213 * C17927 +
            C62217 * C2599 + C64297 + C64297 + C62212 * C2615 + C62215 * C2598 +
            C64298 + C64298 + C62211 * C2614) *
               C152419 * C152165 * C152599) *
              C152221 * C3415 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152632 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152635 -
           (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
            C62219 * C2600 + C62573 + C62573 + C62213 * C2616 + C62217 * C2597 +
            C62574 + C62574 + C62212 * C2613 + C62215 * C606 + C62575 + C62575 +
            C62211 * C630) *
               C152419 * C152165 * C152621 +
           (C62215 * C2597 + C64631 + C64631 + C62211 * C2613 + C62217 * C2600 +
            C64632 + C64632 + C62212 * C2616 + C62219 * C17922 + C64633 +
            C64633 + C62213 * C17928 + C62221 * C48657 + C64634 + C64634 +
            C62214 * C48661) *
               C152419 * C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152322 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C4953) *
              C152221 * C152198 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152329 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152322 -
           ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
            (C15289 + C15288) * C23220) *
               C152165 * C4953) *
              C152221 * C152207 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152322 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152329 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152322 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C4953) *
              C152221 * C152198 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152329 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152322 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C4953) *
              C152221 * C152207 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152322 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152329 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152322 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152329 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C4953) *
              C152221 * C152198 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152329 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152322 -
           (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
            C62219 * C2600 + C62573 + C62573 + C62213 * C2616 + C62217 * C2597 +
            C62574 + C62574 + C62212 * C2613 + C62215 * C606 + C62575 + C62575 +
            C62211 * C630) *
               C152419 * C152165 * C4953) *
              C152221 * C152207 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152322 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C152329 +
           (C62215 * C607 + C62580 + C62580 + C62211 * C631 + C62217 * C2596 +
            C62581 + C62581 + C62212 * C2612 + C62219 * C2601 + C62582 +
            C62582 + C62213 * C2617 + C62221 * C17923 + C62583 + C62583 +
            C62214 * C17929) *
               C152419 * C152165 * C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152627 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152613 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C4281 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C152583) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C152627 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152613 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C4281 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152221 * C152633 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152326 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C4281) *
              C152221 * C152626 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C4281 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152326) *
              C152221 * C152611 +
          ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
            (C14621 * C611 + C15707 + C15707 + C152557 * C635 + C14623 * C612 +
             C15708 + C15708 + C152461 * C636) *
                C152419 * C6262) *
               C152326 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C4281 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152627 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152613 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C4281 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152627 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152613 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C4281 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C152221 * C152633 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152326 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C4281) *
              C152221 * C152626 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C4281 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C152326) *
              C152221 * C152611 +
          ((C62215 * C601 + C62848 + C62848 + C62211 * C625 + C62217 * C608 +
            C62849 + C62849 + C62212 * C632 + C62219 * C2595 + C62850 + C62850 +
            C62213 * C2611 + C62221 * C2602 + C62851 + C62851 +
            C62214 * C2618) *
               C152419 * C152165 * C152326 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C4281 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C152627 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C4281) *
               C152613 +
           ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
             C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
             C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
             C62214 * C10058) *
                C152419 * C152165 * C4281 -
            (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
             C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
             C62217 * C1653 + C63446 + C63446 + C62212 * C1677 +
             C62215 * C1652 + C63447 + C63447 + C62211 * C1676) *
                C152419 * C152165 * C152326) *
               C152583) *
              C3415 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C4281) *
               C152627 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C4281 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152613 +
           ((C62215 * C1651 + C63780 + C63780 + C62211 * C1675 +
             C62217 * C1654 + C63781 + C63781 + C62212 * C1678 +
             C62219 * C10053 + C63782 + C63782 + C62213 * C10059 +
             C62221 * C26242 + C63783 + C63783 + C62214 * C26246) *
                C152419 * C152165 * C152326 -
            (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
             C62219 * C1654 + C62403 + C62403 + C62213 * C1678 +
             C62217 * C1651 + C62404 + C62404 + C62212 * C1675 + C62215 * C361 +
             C62405 + C62405 + C62211 * C385) *
                C152419 * C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1823 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1824 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C1825 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152239 * C152593) *
              C152527 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1824 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1823 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C1825 +
           ((C16851 + C16850) * C152419 * C6260 +
            (C16849 + C16848) * C152419 * C6261 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C152419 * C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152541 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152284) *
              C829 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152284 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152541) *
              C830 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152541 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152284) *
              C831 +
          ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
            (C14621 * C366 + C15499 + C15499 + C152557 * C390 + C14623 * C1184 +
             C15500 + C15500 + C152461 * C1196) *
                C152419 * C6262) *
               C152239 * C152284 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152541 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C829 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152541 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1823 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1824 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C1825 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C152527 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C1824 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1823 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C1825 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152541 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152284) *
              C829 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152541) *
              C830 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C152541 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152284) *
              C831 +
          ((C62215 * C356 + C62714 + C62714 + C62211 * C380 + C62217 * C1182 +
            C62715 + C62715 + C62212 * C1194 + C62219 * C1645 + C62716 +
            C62716 + C62213 * C1669 + C62221 * C3132 + C62717 + C62717 +
            C62214 * C3140) *
               C152419 * C152165 * C152239 * C152284 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C1823 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C1824 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C1825 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C152239 * C152593) *
              C152527 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C1824 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C1823 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C1825 +
           (C62215 * C1469 + C63582 + C63582 + C62211 * C1485 + C62217 * C2198 +
            C63583 + C63583 + C62212 * C2206 + C62219 * C8037 + C63584 +
            C63584 + C62213 * C8043 + C62221 * C26939 + C63585 + C63585 +
            C62214 * C26943) *
               C152419 * C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152542 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C1823 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152326 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152542) *
              C1824 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152542 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152326) *
              C1825 +
          (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
             C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                C152419 * C6260 +
            (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
             C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                C152419 * C6261 +
            (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
             C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                C152419 * C6262) *
               C152326 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C152284) *
              C353 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C354 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C152542 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C152541 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            ((C38157 + C38158) * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
              C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                 C23222) *
                C152165 * C152326 -
            ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             (C17163 + C17162) * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             (C16851 + C16850) * C23222) *
                C152165 * C152542 -
            ((C14623 * C8037 + C17361 + C17361 + C152461 * C8043 +
              C14621 * C2198 + C17360 + C17360 + C152557 * C2206) *
                 C23222 +
             (C17162 + C17163) * C23221 + (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C152542 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C152541 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C1823 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152542) *
              C1824 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152542 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C1825 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152542 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C152541 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152542) *
               C152284) *
              C353 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152542) *
               C152541 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152542 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C152284) *
              C354 +
          (((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
             C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
             C62213 * C631 + C62221 * C2596 + C62235 + C62235 +
             C62214 * C2612) *
                C152419 * C152165 * C152542 -
            (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 +
             C62219 * C2596 + C62577 + C62577 + C62213 * C2612 + C62217 * C607 +
             C62578 + C62578 + C62212 * C631 + C62215 * C602 + C62579 + C62579 +
             C62211 * C626) *
                C152419 * C152165 * C152326) *
               C152541 +
           ((C62215 * C1181 + C63054 + C63054 + C62211 * C1193 +
             C62217 * C1646 + C63055 + C63055 + C62212 * C1670 +
             C62219 * C3131 + C63056 + C63056 + C62213 * C3139 +
             C62221 * C9346 + C63057 + C63057 + C62214 * C9352) *
                C152419 * C152165 * C152326 -
            (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 +
             C62219 * C1646 + C62407 + C62407 + C62213 * C1670 +
             C62217 * C1181 + C62408 + C62408 + C62212 * C1193 + C62215 * C357 +
             C62409 + C62409 + C62211 * C381) *
                C152419 * C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152542 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C1823 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152326 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152542) *
              C1824 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152542 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C152326) *
              C1825 +
          ((C62215 * C2197 + C63914 + C63914 + C62211 * C2205 + C62217 * C8036 +
            C63915 + C63915 + C62212 * C8042 + C62219 * C26938 + C63916 +
            C63916 + C62213 * C26942 + C62221 * C33441 + C63917 + C63917 +
            C62214 * C33443) *
               C152419 * C152165 * C152326 -
           (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
            C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
            C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 +
            C63289 + C62211 * C1486) *
               C152419 * C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                   C152419 * C6260 +
               (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                  C152239 * C152221 * C129 -
              (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
               (C14681 + C14680) * C152419 * C6260) *
                  C152239 * C152221 * C130 +
              (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
               C14695 * C6262) *
                  C152239 * C152221 * C131 -
              ((C14688 + C14689) * C152419 * C6262 +
               (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
                  C152239 * C152221 * C132 +
              (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
               (C14621 * C142 + C14658 + C14658 + C152557 * C158 +
                C14623 * C975 + C14659 + C14659 + C152461 * C977) *
                   C152419 * C6262) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C152627 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C152613 +
               ((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152239 * C152583) *
                  C353 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 +
                (C14990 + C14991) * C152419 * C6262) *
                   C152239 * C152613 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C152627 -
               ((C14992 + C14993) * C152419 * C6262 +
                (C14989 + C14988) * C152419 * C6261 +
                (C14987 + C14986) * C152419 * C6260) *
                   C152239 * C152583) *
                  C354 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152239 * C152627 -
               ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
                 C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                    C152419 * C6262 +
                (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                   C152239 * C152613 +
               (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
                (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
                 C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                    C152419 * C6262) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152628 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152221 * C353 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 +
            (C15292 + C15293) * C152419 * C6262) *
               C152615 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152628 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152586) *
              C152221 * C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152628 -
           ((C14623 * C610 + C15256 + C15256 + C152461 * C634 + C14621 * C609 +
             C15257 + C15257 + C152557 * C633) *
                C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152615 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1373 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1374 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1374 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1373 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C1373 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C1374 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C1461 -
          (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
           (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 + C14621 * C359 +
            C14927 + C14927 + C152557 * C383) *
               C152419 * C6260) *
              C152239 * C1462 +
          ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C152419 * C6260 +
           (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
              C152239 * C1463 -
          ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
            C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
               C152419 * C6262 +
           (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
            C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
               C152419 * C6261 +
           (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
            C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
               C152419 * C6260) *
              C152239 * C1464 +
          ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
            C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
               C152419 * C6260 +
           (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
            C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
               C152419 * C6261 +
           (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
            C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
               C152419 * C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152628 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C1373 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152615 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152628 -
           ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
             C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                C152419 * C6262 +
            (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
             C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152586) *
              C1374 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152628 -
           ((C14623 * C1655 + C16624 + C16624 + C152461 * C1679 +
             C14621 * C1650 + C16625 + C16625 + C152557 * C1674) *
                C152419 * C6262 +
            (C14623 * C1654 + C16626 + C16626 + C152461 * C1678 +
             C14621 * C1651 + C16627 + C16627 + C152557 * C1675) *
                C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C14621 * C1648 + C16623 + C16623 + C152557 * C1672 +
             C14623 * C3129 + C16622 + C16622 + C152461 * C3137) *
                C23221 +
            (C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C23222) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152615 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152628 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152628 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152615 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C1373 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            (C38788 + C38789) * C23222) *
               C152165 * C152615 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152628 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C1374 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152628 -
           ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
             C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                C23222 +
            (C38789 + C38788) * C23221 + C38745 * C23220) *
               C152165 * C152615 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C152221 * C129 -
          (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
           C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
           C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
              C152419 * C152165 * C152239 * C152221 * C130 +
          (C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
           C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
           C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
              C152419 * C152165 * C152239 * C152221 * C131 -
          (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
           C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
           C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
              C152419 * C152165 * C152239 * C152221 * C132 +
          (C62215 * C140 + C62240 + C62240 + C62211 * C156 + C62217 * C609 +
           C62241 + C62241 + C62212 * C633 + C62219 * C610 + C62242 + C62242 +
           C62213 * C634 + C62221 * C2977 + C62243 + C62243 + C62214 * C2979) *
              C152419 * C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C353 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152613 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C354 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152628 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152615 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C152221 * C353 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152615 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152628 -
           (C62221 * C17922 + C62572 + C62572 + C62214 * C17928 +
            C62219 * C2600 + C62573 + C62573 + C62213 * C2616 + C62217 * C2597 +
            C62574 + C62574 + C62212 * C2613 + C62215 * C606 + C62575 + C62575 +
            C62211 * C630) *
               C152419 * C152165 * C152586) *
              C152221 * C354 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152628 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C152615 +
           (C62215 * C607 + C62580 + C62580 + C62211 * C631 + C62217 * C2596 +
            C62581 + C62581 + C62212 * C2612 + C62219 * C2601 + C62582 +
            C62582 + C62213 * C2617 + C62221 * C17923 + C62583 + C62583 +
            C62214 * C17929) *
               C152419 * C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C152624 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C1374 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C152609 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C1461 -
          (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
           C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 + C62392 +
           C62212 * C1191 + C62215 * C359 + C62393 + C62393 + C62211 * C383) *
              C152419 * C152165 * C152239 * C1462 +
          (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
           C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 + C62396 +
           C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
           C62214 * C10058) *
              C152419 * C152165 * C152239 * C1463 -
          (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
           C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
           C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 + C63289 +
           C62211 * C1486) *
              C152419 * C152165 * C152239 * C1464 +
          (C62215 * C1471 + C63290 + C63290 + C62211 * C1487 + C62217 * C8769 +
           C63291 + C63291 + C62212 * C8775 + C62219 * C24963 + C63292 +
           C63292 + C62213 * C24967 + C62221 * C33899 + C63293 + C63293 +
           C62214 * C33901) *
              C152419 * C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152628 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152615 +
           (C62215 * C605 + C62564 + C62564 + C62211 * C629 + C62217 * C2598 +
            C62565 + C62565 + C62212 * C2614 + C62219 * C2599 + C62566 +
            C62566 + C62213 * C2615 + C62221 * C17921 + C62567 + C62567 +
            C62214 * C17927) *
               C152419 * C152165 * C152586) *
              C1373 +
          ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 + C62217 * C1648 +
            C63047 + C63047 + C62212 * C1672 + C62219 * C3129 + C63048 +
            C63048 + C62213 * C3137 + C62221 * C9344 + C63049 + C63049 +
            C62214 * C9350) *
               C152419 * C152165 * C152615 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152628 -
           (C62221 * C40067 + C63440 + C63440 + C62214 * C40071 +
            C62219 * C9344 + C63441 + C63441 + C62213 * C9350 + C62217 * C3129 +
            C63442 + C63442 + C62212 * C3137 + C62215 * C1648 + C63443 +
            C63443 + C62211 * C1672) *
               C152419 * C152165 * C152586) *
              C1374 +
          ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152628 -
           (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
            C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
            C62217 * C1653 + C63446 + C63446 + C62212 * C1677 + C62215 * C1652 +
            C63447 + C63447 + C62211 * C1676) *
               C152419 * C152165 * C152615 +
           (C62215 * C1653 + C63448 + C63448 + C62211 * C1677 +
            C62217 * C10052 + C63449 + C63449 + C62212 * C10058 +
            C62219 * C26241 + C63450 + C63450 + C62213 * C26245 +
            C62221 * C40068 + C63451 + C63451 + C62214 * C40072) *
               C152419 * C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C1373 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C1374 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C152542 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C152583) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C1373 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C1374 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152542 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152221 * C829 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152326 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152542) *
              C152221 * C830 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152542 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152326) *
              C152221 * C831 +
          ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
            (C14621 * C611 + C15707 + C15707 + C152557 * C635 + C14623 * C612 +
             C15708 + C15708 + C152461 * C636) *
                C152419 * C6262) *
               C152326 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152542 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C1373 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C38788 + C38789) * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C1374 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C152542 -
            ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
              C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                 C23222 +
             (C38789 + C38788) * C23221 + C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C1373 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C1374 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152542 -
           (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 + C62219 * C2598 +
            C62561 + C62561 + C62213 * C2614 + C62217 * C605 + C62562 + C62562 +
            C62212 * C629 + C62215 * C604 + C62563 + C62563 + C62211 * C628) *
               C152419 * C152165 * C152326) *
              C152221 * C829 +
          ((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
            C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 + C62570 +
            C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
            C62214 * C2616) *
               C152419 * C152165 * C152326 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152542) *
              C152221 * C830 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152542 -
           (C62221 * C2601 + C62576 + C62576 + C62214 * C2617 + C62219 * C2596 +
            C62577 + C62577 + C62213 * C2612 + C62217 * C607 + C62578 + C62578 +
            C62212 * C631 + C62215 * C602 + C62579 + C62579 + C62211 * C626) *
               C152419 * C152165 * C152326) *
              C152221 * C831 +
          ((C62215 * C601 + C62848 + C62848 + C62211 * C625 + C62217 * C608 +
            C62849 + C62849 + C62212 * C632 + C62219 * C2595 + C62850 + C62850 +
            C62213 * C2611 + C62221 * C2602 + C62851 + C62851 +
            C62214 * C2618) *
               C152419 * C152165 * C152326 -
           (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
            C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
            C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
               C152419 * C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
             C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
             C62213 * C629 + C62221 * C2598 + C62227 + C62227 +
             C62214 * C2614) *
                C152419 * C152165 * C152542 -
            (C62221 * C2599 + C62560 + C62560 + C62214 * C2615 +
             C62219 * C2598 + C62561 + C62561 + C62213 * C2614 + C62217 * C605 +
             C62562 + C62562 + C62212 * C629 + C62215 * C604 + C62563 + C62563 +
             C62211 * C628) *
                C152419 * C152165 * C152326) *
               C1373 +
           ((C62215 * C1179 + C63046 + C63046 + C62211 * C1191 +
             C62217 * C1648 + C63047 + C63047 + C62212 * C1672 +
             C62219 * C3129 + C63048 + C63048 + C62213 * C3137 +
             C62221 * C9344 + C63049 + C63049 + C62214 * C9350) *
                C152419 * C152165 * C152326 -
            (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 +
             C62219 * C1648 + C62391 + C62391 + C62213 * C1672 +
             C62217 * C1179 + C62392 + C62392 + C62212 * C1191 + C62215 * C359 +
             C62393 + C62393 + C62211 * C383) *
                C152419 * C152165 * C152542) *
               C1374 +
           ((C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
             C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
             C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
             C62214 * C10058) *
                C152419 * C152165 * C152542 -
            (C62221 * C26241 + C63444 + C63444 + C62214 * C26245 +
             C62219 * C10052 + C63445 + C63445 + C62213 * C10058 +
             C62217 * C1653 + C63446 + C63446 + C62212 * C1677 +
             C62215 * C1652 + C63447 + C63447 + C62211 * C1676) *
                C152419 * C152165 * C152326) *
               C152583) *
              C152527 +
          (((C62215 * C603 + C62568 + C62568 + C62211 * C627 + C62217 * C606 +
             C62569 + C62569 + C62212 * C630 + C62219 * C2597 + C62570 +
             C62570 + C62213 * C2613 + C62221 * C2600 + C62571 + C62571 +
             C62214 * C2616) *
                C152419 * C152165 * C152326 -
            (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
             C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
             C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
                C152419 * C152165 * C152542) *
               C1373 +
           ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
             C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
             C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
             C62214 * C3138) *
                C152419 * C152165 * C152542 -
            (C62221 * C9345 + C63050 + C63050 + C62214 * C9351 +
             C62219 * C3130 + C63051 + C63051 + C62213 * C3138 +
             C62217 * C1647 + C63052 + C63052 + C62212 * C1671 +
             C62215 * C1180 + C63053 + C63053 + C62211 * C1192) *
                C152419 * C152165 * C152326) *
               C1374 +
           ((C62215 * C1651 + C63780 + C63780 + C62211 * C1675 +
             C62217 * C1654 + C63781 + C63781 + C62212 * C1678 +
             C62219 * C10053 + C63782 + C63782 + C62213 * C10059 +
             C62221 * C26242 + C63783 + C63783 + C62214 * C26246) *
                C152419 * C152165 * C152326 -
            (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
             C62219 * C1654 + C62403 + C62403 + C62213 * C1678 +
             C62217 * C1651 + C62404 + C62404 + C62212 * C1675 + C62215 * C361 +
             C62405 + C62405 + C62211 * C385) *
                C152419 * C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152627 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152613 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 +
            (C14990 + C14991) * C152419 * C6262) *
               C152239 * C152613 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152627 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152627 -
           ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
             C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152613 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C152221 * C129 -
          (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
           (C14681 + C14680) * C152419 * C6260) *
              C152239 * C152221 * C130 +
          (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
           C14695 * C6262) *
              C152239 * C152221 * C131 -
          ((C14688 + C14689) * C152419 * C6262 +
           (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
              C152239 * C152221 * C132 +
          (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
           (C14621 * C142 + C14658 + C14658 + C152557 * C158 + C14623 * C975 +
            C14659 + C14659 + C152461 * C977) *
               C152419 * C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1373 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1374 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1374 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1373 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C1373 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C1374 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C1461 -
          (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
           (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 + C14621 * C359 +
            C14927 + C14927 + C152557 * C383) *
               C152419 * C6260) *
              C152239 * C1462 +
          ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C152419 * C6260 +
           (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
              C152239 * C1463 -
          ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
            C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
               C152419 * C6262 +
           (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
            C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
               C152419 * C6261 +
           (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
            C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
               C152419 * C6260) *
              C152239 * C1464 +
          ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
            C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
               C152419 * C6260 +
           (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
            C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
               C152419 * C6261 +
           (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
            C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
               C152419 * C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C152221 * C129 -
          (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
           C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
           C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
              C152419 * C152165 * C152239 * C152221 * C130 +
          (C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
           C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
           C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
              C152419 * C152165 * C152239 * C152221 * C131 -
          (C62221 * C2595 + C62236 + C62236 + C62214 * C2611 + C62219 * C608 +
           C62237 + C62237 + C62213 * C632 + C62217 * C601 + C62238 + C62238 +
           C62212 * C625 + C62215 * C139 + C62239 + C62239 + C62211 * C155) *
              C152419 * C152165 * C152239 * C152221 * C132 +
          (C62215 * C140 + C62240 + C62240 + C62211 * C156 + C62217 * C609 +
           C62241 + C62241 + C62212 * C633 + C62219 * C610 + C62242 + C62242 +
           C62213 * C634 + C62221 * C2977 + C62243 + C62243 + C62214 * C2979) *
              C152419 * C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C353 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C152613 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C354 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C152627 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C152613 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
            C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
            C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
            C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 +
            C62392 + C62212 * C1191 + C62215 * C359 + C62393 + C62393 +
            C62211 * C383) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
            C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 +
            C62396 + C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
            C62214 * C10058) *
               C152419 * C152165 * C152239 * C152583) *
              C152624 +
          ((C62215 * C358 + C62398 + C62398 + C62211 * C382 + C62217 * C1180 +
            C62399 + C62399 + C62212 * C1192 + C62219 * C1647 + C62400 +
            C62400 + C62213 * C1671 + C62221 * C3130 + C62401 + C62401 +
            C62214 * C3138) *
               C152419 * C152165 * C152239 * C1374 -
           (C62221 * C2597 + C62228 + C62228 + C62214 * C2613 + C62219 * C606 +
            C62229 + C62229 + C62213 * C630 + C62217 * C603 + C62230 + C62230 +
            C62212 * C627 + C62215 * C137 + C62231 + C62231 + C62211 * C153) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C10053 + C62402 + C62402 + C62214 * C10059 +
            C62219 * C1654 + C62403 + C62403 + C62213 * C1678 + C62217 * C1651 +
            C62404 + C62404 + C62212 * C1675 + C62215 * C361 + C62405 + C62405 +
            C62211 * C385) *
               C152419 * C152165 * C152239 * C152583) *
              C152609 +
          ((C62215 * C138 + C62232 + C62232 + C62211 * C154 + C62217 * C602 +
            C62233 + C62233 + C62212 * C626 + C62219 * C607 + C62234 + C62234 +
            C62213 * C631 + C62221 * C2596 + C62235 + C62235 + C62214 * C2612) *
               C152419 * C152165 * C152239 * C1373 -
           (C62221 * C3131 + C62406 + C62406 + C62214 * C3139 + C62219 * C1646 +
            C62407 + C62407 + C62213 * C1670 + C62217 * C1181 + C62408 +
            C62408 + C62212 * C1193 + C62215 * C357 + C62409 + C62409 +
            C62211 * C381) *
               C152419 * C152165 * C152239 * C1374 +
           (C62215 * C362 + C62410 + C62410 + C62211 * C386 + C62217 * C1650 +
            C62411 + C62411 + C62212 * C1674 + C62219 * C1655 + C62412 +
            C62412 + C62213 * C1679 + C62221 * C10054 + C62413 + C62413 +
            C62214 * C10060) *
               C152419 * C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C62215 * C136 + C62224 + C62224 + C62211 * C152 + C62217 * C604 +
           C62225 + C62225 + C62212 * C628 + C62219 * C605 + C62226 + C62226 +
           C62213 * C629 + C62221 * C2598 + C62227 + C62227 + C62214 * C2614) *
              C152419 * C152165 * C152239 * C1461 -
          (C62221 * C3129 + C62390 + C62390 + C62214 * C3137 + C62219 * C1648 +
           C62391 + C62391 + C62213 * C1672 + C62217 * C1179 + C62392 + C62392 +
           C62212 * C1191 + C62215 * C359 + C62393 + C62393 + C62211 * C383) *
              C152419 * C152165 * C152239 * C1462 +
          (C62215 * C360 + C62394 + C62394 + C62211 * C384 + C62217 * C1652 +
           C62395 + C62395 + C62212 * C1676 + C62219 * C1653 + C62396 + C62396 +
           C62213 * C1677 + C62221 * C10052 + C62397 + C62397 +
           C62214 * C10058) *
              C152419 * C152165 * C152239 * C1463 -
          (C62221 * C26938 + C63286 + C63286 + C62214 * C26942 +
           C62219 * C8036 + C63287 + C63287 + C62213 * C8042 + C62217 * C2197 +
           C63288 + C63288 + C62212 * C2205 + C62215 * C1470 + C63289 + C63289 +
           C62211 * C1486) *
              C152419 * C152165 * C152239 * C1464 +
          (C62215 * C1471 + C63290 + C63290 + C62211 * C1487 + C62217 * C8769 +
           C63291 + C63291 + C62212 * C8775 + C62219 * C24963 + C63292 +
           C63292 + C62213 * C24967 + C62221 * C33899 + C63293 + C63293 +
           C62214 * C33901) *
              C152419 * C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[225] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152280 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152287 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C3759) *
                       C152198 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C152287 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152280 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C3759) *
                       C152207 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C152280 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152287 +
                    (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                     (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                      C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                         C152419 * C67858) *
                        C152239 * C3759) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[226] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C152542 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152326) *
                        C152280 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152326 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C152542) *
                        C152287 +
                    (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                       C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                          C152419 * C152606 +
                      (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                         C152542 -
                     ((C97656 + C97657) * C152419 * C67858 +
                      (C97658 + C97659) * C152419 * C152570 +
                      (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                       C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                          C152419 * C152606) *
                         C152326) *
                        C3759) *
                       C3415 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152326 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C152542) *
                        C152280 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C152542 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152326) *
                        C152287 +
                    (((C97659 + C97658) * C152419 * C152606 +
                      (C97657 + C97656) * C152419 * C152570 +
                      (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
                       C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                          C152419 * C67858) *
                         C152326 -
                     ((C95488 + C95489) * C152419 * C67858 +
                      (C95485 + C95484) * C152419 * C152570 +
                      (C95483 + C95482) * C152419 * C152606) *
                         C152542) *
                        C3759) *
                       C152204)) /
                 (p * q * std::sqrt(p + q));
    d2ee[227] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152634 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152630 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152618 -
                    ((C97344 + C97345) * C152419 * C67858 +
                     (C97346 + C97347) * C152419 * C152570 +
                     (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
                      C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                         C152419 * C152606) *
                        C152239 * C152593) *
                       C3415 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C152630 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152634 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152618 +
                    ((C97347 + C97346) * C152419 * C152606 +
                     (C97345 + C97344) * C152419 * C152570 +
                     (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
                      C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                         C152419 * C67858) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C3275 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152284) *
                       C152633 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C152284 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C3275) *
                       C152626 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C3275 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152284) *
                       C152611 +
                   ((C95997 * C152606 + (C96003 + C96002) * C152419 * C152570 +
                     (C95117 * C366 + C95995 + C95995 + C95115 * C390 +
                      C95119 * C1184 + C95996 + C95996 + C152461 * C1196) *
                         C152419 * C67858) *
                        C152239 * C152284 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C152239 * C3275) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C152628 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152615 +
                     ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                       C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                          C152419 * C152606 +
                      (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                         C152586) *
                        C3275 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152615 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C152628 -
                     ((C98738 + C98739) * C152419 * C67858 +
                      (C98740 + C98741) * C152419 * C152570 +
                      (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
                       C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                          C152419 * C152606) *
                         C152586) *
                        C152284) *
                       C3415 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152615 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C152628 -
                     ((C95790 + C95791) * C152419 * C67858 +
                      (C95787 + C95786) * C152419 * C152570 +
                      (C95785 + C95784) * C152419 * C152606) *
                         C152586) *
                        C3275 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C152628 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152615 +
                     ((C98741 + C98740) * C152419 * C152606 +
                      (C98739 + C98738) * C152419 * C152570 +
                      (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
                       C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                          C152419 * C67858) *
                         C152586) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[228] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152419 * C152606 +
             (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                C152542 -
            (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152419 * C152606) *
                C152326) *
               C3275 +
           (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
              C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                 C152419 * C152606 +
             (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                C152326 -
            (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
             (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
              C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                 C152419 * C152606) *
                C152542) *
               C152284) *
              C152198 +
          ((((C95783 + C95782) * C152419 * C152606 +
             (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                C152326 -
            (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
             (C95177 + C95176) * C152419 * C152606) *
                C152542) *
               C3275 +
           (((C95481 + C95480) * C152419 * C152606 +
             (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                C152542 -
            ((C96540 + C96541) * C152419 * C67858 +
             (C96539 + C96538) * C152419 * C152570 +
             (C96537 + C96536) * C152419 * C152606) *
                C152326) *
               C152284) *
              C152207 +
          (((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
             C95191 * C67858) *
                C152542 -
            ((C96210 + C96211) * C152419 * C67858 +
             (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                C152326) *
               C3275 +
           ((C96543 * C152606 + (C96541 + C96540) * C152419 * C152570 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152419 * C67858) *
                C152326 -
            ((C96002 + C96003) * C152419 * C67858 +
             (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[229] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C3275 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152284) *
                       C152633 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C152284 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C3275) *
                       C152626 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C3275 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152284) *
                       C152611 +
                   ((C95997 * C152606 + (C96003 + C96002) * C152419 * C152570 +
                     (C95117 * C366 + C95995 + C95995 + C95115 * C390 +
                      C95119 * C1184 + C95996 + C95996 + C152461 * C1196) *
                         C152419 * C67858) *
                        C152239 * C152284 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C152239 * C3275) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152634 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152630 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152618 -
                    ((C97344 + C97345) * C152419 * C67858 +
                     (C97346 + C97347) * C152419 * C152570 +
                     (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
                      C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                         C152419 * C152606) *
                        C152239 * C152593) *
                       C3415 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C152630 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152634 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152618 +
                    ((C97347 + C97346) * C152419 * C152606 +
                     (C97345 + C97344) * C152419 * C152570 +
                     (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
                      C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                         C152419 * C67858) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[230] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C4281 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152326) *
                        C152280 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152326 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C4281) *
                        C152287 +
                    (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                       C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                          C152419 * C152606 +
                      (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                         C4281 -
                     ((C97656 + C97657) * C152419 * C67858 +
                      (C97658 + C97659) * C152419 * C152570 +
                      (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                       C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                          C152419 * C152606) *
                         C152326) *
                        C3759) *
                       C152527 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152326 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C4281) *
                        C152280 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C4281 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152326) *
                        C152287 +
                    (((C97659 + C97658) * C152419 * C152606 +
                      (C97657 + C97656) * C152419 * C152570 +
                      (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
                       C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                          C152419 * C67858) *
                         C152326 -
                     ((C95488 + C95489) * C152419 * C67858 +
                      (C95485 + C95484) * C152419 * C152570 +
                      (C95483 + C95482) * C152419 * C152606) *
                         C4281) *
                        C3759) *
                       C152204)) /
                 (p * q * std::sqrt(p + q));
    d2ee[231] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152322 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152329 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C4953) *
                       C152280 +
                   (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                      C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                         C152419 * C152606 +
                     (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                        C152329 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152322 -
                    ((C98738 + C98739) * C152419 * C67858 +
                     (C98740 + C98741) * C152419 * C152570 +
                     (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
                      C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                         C152419 * C152606) *
                        C4953) *
                       C152287 +
                   (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152322 -
                    ((C97656 + C97657) * C152419 * C67858 +
                     (C97658 + C97659) * C152419 * C152570 +
                     (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                      C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                         C152419 * C152606) *
                        C152329 +
                    ((C95117 * C1653 + C97126 + C97126 + C95115 * C1677 +
                      C95119 * C10052 + C97127 + C97127 + C152461 * C10058) *
                         C152419 * C152606 +
                     (C95117 * C1654 + C97128 + C97128 + C95115 * C1678 +
                      C95119 * C10053 + C97129 + C97129 + C152461 * C10059) *
                         C152419 * C152570 +
                     (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
                      C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                         C152419 * C67858) *
                        C4953) *
                       C3759) *
                  C152193) /
                 (p * q * std::sqrt(p + q));
    d2ee[232] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C4281 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C152326) *
              C152634 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C152326 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C4281) *
              C152630 +
          (((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
             C95425 + C95425 + C152461 * C1676) *
                C152419 * C152606 +
            (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
               C4281 -
           ((C97656 + C97657) * C152419 * C67858 +
            (C97658 + C97659) * C152419 * C152570 +
            (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
             C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                C152419 * C152606) *
               C152326) *
              C152618 +
          (((C95117 * C2197 + C97854 + C97854 + C95115 * C2205 +
             C95119 * C8036 + C97855 + C97855 + C152461 * C8042) *
                C152419 * C152606 +
            (C95117 * C2198 + C97856 + C97856 + C95115 * C2206 +
             C95119 * C8037 + C97857 + C97857 + C152461 * C8043) *
                C152419 * C152570 +
            (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
             C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                C152419 * C67858) *
               C152326 -
           ((C97344 + C97345) * C152419 * C67858 +
            (C97346 + C97347) * C152419 * C152570 +
            (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
             C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                C152419 * C152606) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152419 * C152606 +
             (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                C4281 -
            (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152419 * C152606) *
                C152326) *
               C3275 +
           (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
              C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                 C152419 * C152606 +
             (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                C152326 -
            (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
             (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
              C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                 C152419 * C152606) *
                C4281) *
               C152284) *
              C152624 +
          ((((C95783 + C95782) * C152419 * C152606 +
             (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                C152326 -
            (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
             (C95177 + C95176) * C152419 * C152606) *
                C4281) *
               C3275 +
           (((C95481 + C95480) * C152419 * C152606 +
             (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                C4281 -
            ((C96540 + C96541) * C152419 * C67858 +
             (C96539 + C96538) * C152419 * C152570 +
             (C96537 + C96536) * C152419 * C152606) *
                C152326) *
               C152284) *
              C152609 +
          (((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
             C95191 * C67858) *
                C4281 -
            ((C96210 + C96211) * C152419 * C67858 +
             (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                C152326) *
               C3275 +
           ((C96543 * C152606 + (C96541 + C96540) * C152419 * C152570 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152419 * C67858) *
                C152326 -
            ((C96002 + C96003) * C152419 * C67858 +
             (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C152635 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C152632 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152419 * C152606 +
            (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
               C152621 -
           ((C98954 + C98955) * C152419 * C67858 +
            (C98956 + C98957) * C152419 * C152570 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C152419 * C152606) *
               C152599) *
              C3275 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C152632 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C152635 -
           ((C98738 + C98739) * C152419 * C67858 +
            (C98740 + C98741) * C152419 * C152570 +
            (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
             C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                C152419 * C152606) *
               C152621 +
           ((C95117 * C3129 + C99152 + C99152 + C95115 * C3137 +
             C95119 * C9344 + C99153 + C99153 + C152461 * C9350) *
                C152419 * C152606 +
            (C95117 * C3130 + C99154 + C99154 + C95115 * C3138 +
             C95119 * C9345 + C99155 + C99155 + C152461 * C9351) *
                C152419 * C152570 +
            (C95117 * C3131 + C99156 + C99156 + C95115 * C3139 +
             C95119 * C9346 + C99157 + C99157 + C152461 * C9352) *
                C152419 * C67858) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[233] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C152322 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152329 +
                     ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                       C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                          C152419 * C152606 +
                      (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                         C4953) *
                        C3275 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152329 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C152322 -
                     ((C98738 + C98739) * C152419 * C67858 +
                      (C98740 + C98741) * C152419 * C152570 +
                      (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
                       C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                          C152419 * C152606) *
                         C4953) *
                        C152284) *
                       C152527 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152329 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C152322 -
                     ((C95790 + C95791) * C152419 * C67858 +
                      (C95787 + C95786) * C152419 * C152570 +
                      (C95785 + C95784) * C152419 * C152606) *
                         C4953) *
                        C3275 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C152322 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152329 +
                     ((C98741 + C98740) * C152419 * C152606 +
                      (C98739 + C98738) * C152419 * C152570 +
                      (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
                       C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                          C152419 * C67858) *
                         C4953) *
                        C152284) *
                       C152204)) /
                 (p * q * std::sqrt(p + q));
    d2ee[234] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152419 * C152606 +
             (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                C4281 -
            (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152419 * C152606) *
                C152326) *
               C3275 +
           (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
              C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                 C152419 * C152606 +
             (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                C152326 -
            (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
             (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
              C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                 C152419 * C152606) *
                C4281) *
               C152284) *
              C152624 +
          ((((C95783 + C95782) * C152419 * C152606 +
             (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                C152326 -
            (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
             (C95177 + C95176) * C152419 * C152606) *
                C4281) *
               C3275 +
           (((C95481 + C95480) * C152419 * C152606 +
             (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                C4281 -
            ((C96540 + C96541) * C152419 * C67858 +
             (C96539 + C96538) * C152419 * C152570 +
             (C96537 + C96536) * C152419 * C152606) *
                C152326) *
               C152284) *
              C152609 +
          (((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
             C95191 * C67858) *
                C4281 -
            ((C96210 + C96211) * C152419 * C67858 +
             (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                C152326) *
               C3275 +
           ((C96543 * C152606 + (C96541 + C96540) * C152419 * C152570 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152419 * C67858) *
                C152326 -
            ((C96002 + C96003) * C152419 * C67858 +
             (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C4281 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C152326) *
              C152634 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C152326 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C4281) *
              C152630 +
          (((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
             C95425 + C95425 + C152461 * C1676) *
                C152419 * C152606 +
            (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
               C4281 -
           ((C97656 + C97657) * C152419 * C67858 +
            (C97658 + C97659) * C152419 * C152570 +
            (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
             C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                C152419 * C152606) *
               C152326) *
              C152618 +
          (((C95117 * C2197 + C97854 + C97854 + C95115 * C2205 +
             C95119 * C8036 + C97855 + C97855 + C152461 * C8042) *
                C152419 * C152606 +
            (C95117 * C2198 + C97856 + C97856 + C95115 * C2206 +
             C95119 * C8037 + C97857 + C97857 + C152461 * C8043) *
                C152419 * C152570 +
            (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
             C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                C152419 * C67858) *
               C152326 -
           ((C97344 + C97345) * C152419 * C67858 +
            (C97346 + C97347) * C152419 * C152570 +
            (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
             C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                C152419 * C152606) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[235] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C1823 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C1824 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C1825 -
                    ((C97344 + C97345) * C152419 * C67858 +
                     (C97346 + C97347) * C152419 * C152570 +
                     (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
                      C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                         C152419 * C152606) *
                        C152239 * C152593) *
                       C152527 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C1824 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C1823 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C1825 +
                    ((C97347 + C97346) * C152419 * C152606 +
                     (C97345 + C97344) * C152419 * C152570 +
                     (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
                      C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                         C152419 * C67858) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152541 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152284) *
                       C829 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C152284 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152541) *
                       C830 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C152541 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152284) *
                       C831 +
                   ((C95997 * C152606 + (C96003 + C96002) * C152419 * C152570 +
                     (C95117 * C366 + C95995 + C95995 + C95115 * C390 +
                      C95119 * C1184 + C95996 + C95996 + C152461 * C1196) *
                         C152419 * C67858) *
                        C152239 * C152284 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C152239 * C152541) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C2359 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C2360 +
                     ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                       C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                          C152419 * C152606 +
                      (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                         C152586) *
                        C152541 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C2360 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C2359 -
                     ((C98738 + C98739) * C152419 * C67858 +
                      (C98740 + C98741) * C152419 * C152570 +
                      (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
                       C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                          C152419 * C152606) *
                         C152586) *
                        C152284) *
                       C152527 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C2360 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C2359 -
                     ((C95790 + C95791) * C152419 * C67858 +
                      (C95787 + C95786) * C152419 * C152570 +
                      (C95785 + C95784) * C152419 * C152606) *
                         C152586) *
                        C152541 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C2359 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C2360 +
                     ((C98741 + C98740) * C152419 * C152606 +
                      (C98739 + C98738) * C152419 * C152570 +
                      (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
                       C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                          C152419 * C67858) *
                         C152586) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[236] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C152542 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C152326) *
              C1823 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C152326 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C152542) *
              C1824 +
          (((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
             C95425 + C95425 + C152461 * C1676) *
                C152419 * C152606 +
            (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
               C152542 -
           ((C97656 + C97657) * C152419 * C67858 +
            (C97658 + C97659) * C152419 * C152570 +
            (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
             C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                C152419 * C152606) *
               C152326) *
              C1825 +
          (((C95117 * C2197 + C97854 + C97854 + C95115 * C2205 +
             C95119 * C8036 + C97855 + C97855 + C152461 * C8042) *
                C152419 * C152606 +
            (C95117 * C2198 + C97856 + C97856 + C95115 * C2206 +
             C95119 * C8037 + C97857 + C97857 + C152461 * C8043) *
                C152419 * C152570 +
            (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
             C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                C152419 * C67858) *
               C152326 -
           ((C97344 + C97345) * C152419 * C67858 +
            (C97346 + C97347) * C152419 * C152570 +
            (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
             C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                C152419 * C152606) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152419 * C152606 +
             (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                C152542 -
            (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152419 * C152606) *
                C152326) *
               C152541 +
           (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
              C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                 C152419 * C152606 +
             (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                C152326 -
            (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
             (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
              C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                 C152419 * C152606) *
                C152542) *
               C152284) *
              C353 +
          ((((C95783 + C95782) * C152419 * C152606 +
             (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                C152326 -
            (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
             (C95177 + C95176) * C152419 * C152606) *
                C152542) *
               C152541 +
           (((C95481 + C95480) * C152419 * C152606 +
             (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                C152542 -
            ((C96540 + C96541) * C152419 * C67858 +
             (C96539 + C96538) * C152419 * C152570 +
             (C96537 + C96536) * C152419 * C152606) *
                C152326) *
               C152284) *
              C354 +
          (((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
             C95191 * C67858) *
                C152542 -
            ((C96210 + C96211) * C152419 * C67858 +
             (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                C152326) *
               C152541 +
           ((C96543 * C152606 + (C96541 + C96540) * C152419 * C152570 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152419 * C67858) *
                C152326 -
            ((C96002 + C96003) * C152419 * C67858 +
             (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C2973 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C2974 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152419 * C152606 +
            (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
               C2975 -
           ((C98954 + C98955) * C152419 * C67858 +
            (C98956 + C98957) * C152419 * C152570 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C152419 * C152606) *
               C152599) *
              C152541 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C2974 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C2973 -
           ((C98738 + C98739) * C152419 * C67858 +
            (C98740 + C98741) * C152419 * C152570 +
            (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
             C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                C152419 * C152606) *
               C2975 +
           ((C95117 * C3129 + C99152 + C99152 + C95115 * C3137 +
             C95119 * C9344 + C99153 + C99153 + C152461 * C9350) *
                C152419 * C152606 +
            (C95117 * C3130 + C99154 + C99154 + C95115 * C3138 +
             C95119 * C9345 + C99155 + C99155 + C152461 * C9351) *
                C152419 * C152570 +
            (C95117 * C3131 + C99156 + C99156 + C95115 * C3139 +
             C95119 * C9346 + C99157 + C99157 + C152461 * C9352) *
                C152419 * C67858) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[237] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                   C152419 * C152606 +
               (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                  C152239 * C152221 * C129 -
              (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
               (C95177 + C95176) * C152419 * C152606) *
                  C152239 * C152221 * C130 +
              (C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
               C95191 * C67858) *
                  C152239 * C152221 * C131 -
              ((C95184 + C95185) * C152419 * C67858 +
               (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                  C152239 * C152221 * C132 +
              (C95191 * C152606 + (C95185 + C95184) * C152419 * C152570 +
               (C95117 * C142 + C95154 + C95154 + C95115 * C158 +
                C95119 * C975 + C95155 + C95155 + C152461 * C977) *
                   C152419 * C67858) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                 C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                    C152419 * C152606 +
                (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                   C152239 * C152627 -
               (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                 C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                    C152419 * C152606) *
                   C152239 * C152613 +
               ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                 C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                    C152419 * C152606 +
                (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                   C152239 * C152583) *
                  C353 +
              (((C95481 + C95480) * C152419 * C152606 +
                (C95479 + C95478) * C152419 * C152570 +
                (C95486 + C95487) * C152419 * C67858) *
                   C152239 * C152613 -
               (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                (C95177 + C95176) * C152419 * C152606) *
                   C152239 * C152627 -
               ((C95488 + C95489) * C152419 * C67858 +
                (C95485 + C95484) * C152419 * C152570 +
                (C95483 + C95482) * C152419 * C152606) *
                   C152239 * C152583) *
                  C354 +
              ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                C95191 * C67858) *
                   C152239 * C152627 -
               ((C95119 * C1183 + C95450 + C95450 + C152461 * C1195 +
                 C95117 * C364 + C95451 + C95451 + C95115 * C388) *
                    C152419 * C67858 +
                (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                   C152239 * C152613 +
               (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                 C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                    C152419 * C67858) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C152628 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C152615 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152419 * C152606 +
            (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
               C152586) *
              C152221 * C353 +
          (((C95783 + C95782) * C152419 * C152606 +
            (C95781 + C95780) * C152419 * C152570 +
            (C95788 + C95789) * C152419 * C67858) *
               C152615 -
           (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
            (C95177 + C95176) * C152419 * C152606) *
               C152628 -
           ((C95790 + C95791) * C152419 * C67858 +
            (C95787 + C95786) * C152419 * C152570 +
            (C95785 + C95784) * C152419 * C152606) *
               C152586) *
              C152221 * C354 +
          ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
            C95191 * C67858) *
               C152628 -
           ((C95119 * C610 + C95752 + C95752 + C152461 * C634 + C95117 * C609 +
             C95753 + C95753 + C95115 * C633) *
                C152419 * C67858 +
            (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
               C152615 +
           (C95795 * C152606 + (C95791 + C95790) * C152419 * C152570 +
            (C95117 * C610 + C95754 + C95754 + C95115 * C634 + C95119 * C2977 +
             C95755 + C95755 + C152461 * C2979) *
                C152419 * C67858) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C152239 * C1373 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C152239 * C1374 +
           ((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
             C95425 + C95425 + C152461 * C1676) *
                C152419 * C152606 +
            (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
               C152239 * C152583) *
              C152624 +
          (((C95481 + C95480) * C152419 * C152606 +
            (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
               C152239 * C1374 -
           (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
            (C95177 + C95176) * C152419 * C152606) *
               C152239 * C1373 -
           ((C95488 + C95489) * C152419 * C67858 +
            (C95485 + C95484) * C152419 * C152570 +
            (C95483 + C95482) * C152419 * C152606) *
               C152239 * C152583) *
              C152609 +
          ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
            C95191 * C67858) *
               C152239 * C1373 -
           ((C96002 + C96003) * C152419 * C67858 +
            (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
               C152239 * C1374 +
           (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
            (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
             C95453 + C95453 + C152461 * C2047) *
                C152419 * C67858) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152419 * C152606 +
           (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
              C152239 * C1461 -
          (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
           (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 + C95117 * C359 +
            C95423 + C95423 + C95115 * C383) *
               C152419 * C152606) *
              C152239 * C1462 +
          ((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
            C95425 + C95425 + C152461 * C1676) *
               C152419 * C152606 +
           (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
              C152239 * C1463 -
          ((C95119 * C2199 + C96884 + C96884 + C152461 * C2207 +
            C95117 * C1468 + C96885 + C96885 + C95115 * C1484) *
               C152419 * C67858 +
           (C95119 * C2198 + C96886 + C96886 + C152461 * C2206 +
            C95117 * C1469 + C96887 + C96887 + C95115 * C1485) *
               C152419 * C152570 +
           (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
            C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
               C152419 * C152606) *
              C152239 * C1464 +
          ((C95117 * C1471 + C96890 + C96890 + C95115 * C1487 + C95119 * C8769 +
            C96891 + C96891 + C152461 * C8775) *
               C152419 * C152606 +
           (C95117 * C1472 + C96892 + C96892 + C95115 * C1488 + C95119 * C8770 +
            C96893 + C96893 + C152461 * C8776) *
               C152419 * C152570 +
           (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 + C95119 * C8771 +
            C96895 + C96895 + C152461 * C8777) *
               C152419 * C67858) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C152628 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C152615 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152419 * C152606 +
            (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
               C152586) *
              C1373 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C152615 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C152628 -
           ((C95119 * C3131 + C97114 + C97114 + C152461 * C3139 +
             C95117 * C1646 + C97115 + C97115 + C95115 * C1670) *
                C152419 * C67858 +
            (C95119 * C3130 + C97116 + C97116 + C152461 * C3138 +
             C95117 * C1647 + C97117 + C97117 + C95115 * C1671) *
                C152419 * C152570 +
            (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
             C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                C152419 * C152606) *
               C152586) *
              C1374 +
          (((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
             C95425 + C95425 + C152461 * C1676) *
                C152419 * C152606 +
            (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
               C152628 -
           ((C95119 * C1655 + C97120 + C97120 + C152461 * C1679 +
             C95117 * C1650 + C97121 + C97121 + C95115 * C1674) *
                C152419 * C67858 +
            (C95119 * C1654 + C97122 + C97122 + C152461 * C1678 +
             C95117 * C1651 + C97123 + C97123 + C95115 * C1675) *
                C152419 * C152570 +
            (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
             C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                C152419 * C152606) *
               C152615 +
           ((C95117 * C1653 + C97126 + C97126 + C95115 * C1677 +
             C95119 * C10052 + C97127 + C97127 + C152461 * C10058) *
                C152419 * C152606 +
            (C95117 * C1654 + C97128 + C97128 + C95115 * C1678 +
             C95119 * C10053 + C97129 + C97129 + C152461 * C10059) *
                C152419 * C152570 +
            (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
             C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                C152419 * C67858) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C2359 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C2360 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152419 * C152606 +
            (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
               C152586) *
              C152221 * C152624 +
          (((C95783 + C95782) * C152419 * C152606 +
            (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
               C2360 -
           (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
            (C95177 + C95176) * C152419 * C152606) *
               C2359 -
           ((C95790 + C95791) * C152419 * C67858 +
            (C95787 + C95786) * C152419 * C152570 +
            (C95785 + C95784) * C152419 * C152606) *
               C152586) *
              C152221 * C152609 +
          ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
            C95191 * C67858) *
               C2359 -
           ((C96210 + C96211) * C152419 * C67858 +
            (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
               C2360 +
           (C95795 * C152606 + (C95791 + C95790) * C152419 * C152570 +
            (C95117 * C610 + C95754 + C95754 + C95115 * C634 + C95119 * C2977 +
             C95755 + C95755 + C152461 * C2979) *
                C152419 * C67858) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C2359 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C2360 +
           ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152419 * C152606 +
            (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
               C152586) *
              C152627 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C2360 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C2359 -
           ((C95119 * C3131 + C97114 + C97114 + C152461 * C3139 +
             C95117 * C1646 + C97115 + C97115 + C95115 * C1670) *
                C152419 * C67858 +
            (C95119 * C3130 + C97116 + C97116 + C152461 * C3138 +
             C95117 * C1647 + C97117 + C97117 + C95115 * C1671) *
                C152419 * C152570 +
            (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
             C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                C152419 * C152606) *
               C152586) *
              C152613 +
          (((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
             C95425 + C95425 + C152461 * C1676) *
                C152419 * C152606 +
            (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
               C2359 -
           ((C97656 + C97657) * C152419 * C67858 +
            (C97658 + C97659) * C152419 * C152570 +
            (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
             C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                C152419 * C152606) *
               C2360 +
           ((C95117 * C1653 + C97126 + C97126 + C95115 * C1677 +
             C95119 * C10052 + C97127 + C97127 + C152461 * C10058) *
                C152419 * C152606 +
            (C95117 * C1654 + C97128 + C97128 + C95115 * C1678 +
             C95119 * C10053 + C97129 + C97129 + C152461 * C10059) *
                C152419 * C152570 +
            (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
             C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                C152419 * C67858) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
            C95123 + C95123 + C152461 * C628) *
               C152419 * C152606 +
           (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
              C2590 -
          (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
           (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
            C95725 + C95725 + C95115 * C628) *
               C152419 * C152606) *
              C2591 +
          ((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
            C95727 + C95727 + C152461 * C2614) *
               C152419 * C152606 +
           (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
              C2592 -
          ((C95119 * C2601 + C98418 + C98418 + C152461 * C2617 +
            C95117 * C2596 + C98419 + C98419 + C95115 * C2612) *
               C152419 * C67858 +
           (C95119 * C2600 + C98420 + C98420 + C152461 * C2616 +
            C95117 * C2597 + C98421 + C98421 + C95115 * C2613) *
               C152419 * C152570 +
           (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
            C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
               C152419 * C152606) *
              C2593 +
          ((C95117 * C2599 + C98424 + C98424 + C95115 * C2615 +
            C95119 * C17921 + C98425 + C98425 + C152461 * C17927) *
               C152419 * C152606 +
           (C95117 * C2600 + C98426 + C98426 + C95115 * C2616 +
            C95119 * C17922 + C98427 + C98427 + C152461 * C17928) *
               C152419 * C152570 +
           (C95117 * C2601 + C98428 + C98428 + C95115 * C2617 +
            C95119 * C17923 + C98429 + C98429 + C152461 * C17929) *
               C152419 * C67858) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[238] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C152542 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152326) *
                        C1373 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152326 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C152542) *
                        C1374 +
                    (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                       C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                          C152419 * C152606 +
                      (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                         C152542 -
                     ((C97656 + C97657) * C152419 * C67858 +
                      (C97658 + C97659) * C152419 * C152570 +
                      (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                       C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                          C152419 * C152606) *
                         C152326) *
                        C152583) *
                       C152527 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152326 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C152542) *
                        C1373 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C152542 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152326) *
                        C1374 +
                    (((C97659 + C97658) * C152419 * C152606 +
                      (C97657 + C97656) * C152419 * C152570 +
                      (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
                       C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                          C152419 * C67858) *
                         C152326 -
                     ((C95488 + C95489) * C152419 * C67858 +
                      (C95485 + C95484) * C152419 * C152570 +
                      (C95483 + C95482) * C152419 * C152606) *
                         C152542) *
                        C152583) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152542 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152326) *
                       C152221 * C829 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C152326 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152542) *
                       C152221 * C830 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152542 -
                    ((C96210 + C96211) * C152419 * C67858 +
                     (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                        C152326) *
                       C152221 * C831 +
                   ((C96205 * C152606 + (C96211 + C96210) * C152419 * C152570 +
                     (C95117 * C611 + C96203 + C96203 + C95115 * C635 +
                      C95119 * C612 + C96204 + C96204 + C152461 * C636) *
                         C152419 * C67858) *
                        C152326 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C152542) *
                       C152221 * C152587)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C2973 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C2974 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C2975 -
                    ((C98954 + C98955) * C152419 * C67858 +
                     (C98956 + C98957) * C152419 * C152570 +
                     (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
                      C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                         C152419 * C152606) *
                        C152599) *
                       C152221 * C152527 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C2974 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C2973 -
                    ((C95790 + C95791) * C152419 * C67858 +
                     (C95787 + C95786) * C152419 * C152570 +
                     (C95785 + C95784) * C152419 * C152606) *
                        C2975 +
                    ((C98957 + C98956) * C152419 * C152606 +
                     (C98955 + C98954) * C152419 * C152570 +
                     (C95117 * C2595 + C98944 + C98944 + C95115 * C2611 +
                      C95119 * C2602 + C98945 + C98945 + C152461 * C2618) *
                         C152419 * C67858) *
                        C152599) *
                       C152221 * C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[239] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152627 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152613 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152583) *
                       C353 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 +
                     (C95486 + C95487) * C152419 * C67858) *
                        C152239 * C152613 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152627 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152583) *
                       C354 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C152627 -
                    ((C95119 * C1183 + C95450 + C95450 + C152461 * C1195 +
                      C95117 * C364 + C95451 + C95451 + C95115 * C388) *
                         C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152613 +
                    (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                     (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                      C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                         C152419 * C67858) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                     C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                        C152419 * C152606 +
                    (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                       C152239 * C152221 * C129 -
                   (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                    (C95177 + C95176) * C152419 * C152606) *
                       C152239 * C152221 * C130 +
                   (C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                    C95191 * C67858) *
                       C152239 * C152221 * C131 -
                   ((C95184 + C95185) * C152419 * C67858 +
                    (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                       C152239 * C152221 * C132 +
                   (C95191 * C152606 + (C95185 + C95184) * C152419 * C152570 +
                    (C95117 * C142 + C95154 + C95154 + C95115 * C158 +
                     C95119 * C975 + C95155 + C95155 + C152461 * C977) *
                        C152419 * C67858) *
                       C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C1373 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C1374 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152583) *
                       C152624 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C1374 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C1373 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152583) *
                       C152609 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C1373 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C1374 +
                    (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                     (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                      C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                         C152419 * C67858) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                     C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                        C152419 * C152606 +
                    (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                       C152239 * C1461 -
                   (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                    (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                     C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                        C152419 * C152606) *
                       C152239 * C1462 +
                   ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                     C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                        C152419 * C152606 +
                    (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                       C152239 * C1463 -
                   ((C95119 * C2199 + C96884 + C96884 + C152461 * C2207 +
                     C95117 * C1468 + C96885 + C96885 + C95115 * C1484) *
                        C152419 * C67858 +
                    (C95119 * C2198 + C96886 + C96886 + C152461 * C2206 +
                     C95117 * C1469 + C96887 + C96887 + C95115 * C1485) *
                        C152419 * C152570 +
                    (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
                     C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                        C152419 * C152606) *
                       C152239 * C1464 +
                   ((C95117 * C1471 + C96890 + C96890 + C95115 * C1487 +
                     C95119 * C8769 + C96891 + C96891 + C152461 * C8775) *
                        C152419 * C152606 +
                    (C95117 * C1472 + C96892 + C96892 + C95115 * C1488 +
                     C95119 * C8770 + C96893 + C96893 + C152461 * C8776) *
                        C152419 * C152570 +
                    (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
                     C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                        C152419 * C67858) *
                       C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C2359 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C2360 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C152586) *
                       C152221 * C152624 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C2360 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C2359 -
                    ((C95790 + C95791) * C152419 * C67858 +
                     (C95787 + C95786) * C152419 * C152570 +
                     (C95785 + C95784) * C152419 * C152606) *
                        C152586) *
                       C152221 * C152609 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C2359 -
                    ((C96210 + C96211) * C152419 * C67858 +
                     (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                        C2360 +
                    (C95795 * C152606 + (C95791 + C95790) * C152419 * C152570 +
                     (C95117 * C610 + C95754 + C95754 + C95115 * C634 +
                      C95119 * C2977 + C95755 + C95755 + C152461 * C2979) *
                         C152419 * C67858) *
                        C152586) *
                       C152221 * C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C2359 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C2360 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C152586) *
                       C152627 +
                   (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                      C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                         C152419 * C152606 +
                     (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                        C2360 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C2359 -
                    ((C95119 * C3131 + C97114 + C97114 + C152461 * C3139 +
                      C95117 * C1646 + C97115 + C97115 + C95115 * C1670) *
                         C152419 * C67858 +
                     (C95119 * C3130 + C97116 + C97116 + C152461 * C3138 +
                      C95117 * C1647 + C97117 + C97117 + C95115 * C1671) *
                         C152419 * C152570 +
                     (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
                      C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                         C152419 * C152606) *
                        C152586) *
                       C152613 +
                   (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C2359 -
                    ((C97656 + C97657) * C152419 * C67858 +
                     (C97658 + C97659) * C152419 * C152570 +
                     (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                      C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                         C152419 * C152606) *
                        C2360 +
                    ((C95117 * C1653 + C97126 + C97126 + C95115 * C1677 +
                      C95119 * C10052 + C97127 + C97127 + C152461 * C10058) *
                         C152419 * C152606 +
                     (C95117 * C1654 + C97128 + C97128 + C95115 * C1678 +
                      C95119 * C10053 + C97129 + C97129 + C152461 * C10059) *
                         C152419 * C152570 +
                     (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
                      C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                         C152419 * C67858) *
                        C152586) *
                       C152583) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[240] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152419 * C152606 +
             (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                C4281 -
            (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152419 * C152606) *
                C152326) *
               C152541 +
           (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
              C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                 C152419 * C152606 +
             (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                C152326 -
            (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
             (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
              C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                 C152419 * C152606) *
                C4281) *
               C152284) *
              C152198 +
          ((((C95783 + C95782) * C152419 * C152606 +
             (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                C152326 -
            (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
             (C95177 + C95176) * C152419 * C152606) *
                C4281) *
               C152541 +
           (((C95481 + C95480) * C152419 * C152606 +
             (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                C4281 -
            ((C96540 + C96541) * C152419 * C67858 +
             (C96539 + C96538) * C152419 * C152570 +
             (C96537 + C96536) * C152419 * C152606) *
                C152326) *
               C152284) *
              C152207 +
          (((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
             C95191 * C67858) *
                C4281 -
            ((C96210 + C96211) * C152419 * C67858 +
             (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                C152326) *
               C152541 +
           ((C96543 * C152606 + (C96541 + C96540) * C152419 * C152570 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152419 * C67858) *
                C152326 -
            ((C96002 + C96003) * C152419 * C67858 +
             (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[241] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C152322 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152329 +
                     ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                       C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                          C152419 * C152606 +
                      (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                         C4953) *
                        C152541 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152329 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C152322 -
                     ((C98738 + C98739) * C152419 * C67858 +
                      (C98740 + C98741) * C152419 * C152570 +
                      (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
                       C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                          C152419 * C152606) *
                         C4953) *
                        C152284) *
                       C3415 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152329 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C152322 -
                     ((C95790 + C95791) * C152419 * C67858 +
                      (C95787 + C95786) * C152419 * C152570 +
                      (C95785 + C95784) * C152419 * C152606) *
                         C4953) *
                        C152541 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C152322 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152329 +
                     ((C98741 + C98740) * C152419 * C152606 +
                      (C98739 + C98738) * C152419 * C152570 +
                      (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
                       C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                          C152419 * C67858) *
                         C4953) *
                        C152284) *
                       C152204)) /
                 (p * q * std::sqrt(p + q));
    d2ee[242] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C4281 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152326) *
                        C152627 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152326 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C4281) *
                        C152613 +
                    (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                       C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                          C152419 * C152606 +
                      (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                         C4281 -
                     ((C97656 + C97657) * C152419 * C67858 +
                      (C97658 + C97659) * C152419 * C152570 +
                      (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                       C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                          C152419 * C152606) *
                         C152326) *
                        C152583) *
                       C3415 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152326 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C4281) *
                        C152627 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C4281 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152326) *
                        C152613 +
                    (((C97659 + C97658) * C152419 * C152606 +
                      (C97657 + C97656) * C152419 * C152570 +
                      (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
                       C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                          C152419 * C67858) *
                         C152326 -
                     ((C95488 + C95489) * C152419 * C67858 +
                      (C95485 + C95484) * C152419 * C152570 +
                      (C95483 + C95482) * C152419 * C152606) *
                         C4281) *
                        C152583) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C4281 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152326) *
                       C152221 * C152633 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C152326 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C4281) *
                       C152221 * C152626 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C4281 -
                    ((C96210 + C96211) * C152419 * C67858 +
                     (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                        C152326) *
                       C152221 * C152611 +
                   ((C96205 * C152606 + (C96211 + C96210) * C152419 * C152570 +
                     (C95117 * C611 + C96203 + C96203 + C95115 * C635 +
                      C95119 * C612 + C96204 + C96204 + C152461 * C636) *
                         C152419 * C67858) *
                        C152326 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C4281) *
                       C152221 * C152587)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152635 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152632 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C152621 -
                    ((C98954 + C98955) * C152419 * C67858 +
                     (C98956 + C98957) * C152419 * C152570 +
                     (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
                      C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                         C152419 * C152606) *
                        C152599) *
                       C152221 * C3415 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C152632 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152635 -
                    ((C95790 + C95791) * C152419 * C67858 +
                     (C95787 + C95786) * C152419 * C152570 +
                     (C95785 + C95784) * C152419 * C152606) *
                        C152621 +
                    ((C98957 + C98956) * C152419 * C152606 +
                     (C98955 + C98954) * C152419 * C152570 +
                     (C95117 * C2595 + C98944 + C98944 + C95115 * C2611 +
                      C95119 * C2602 + C98945 + C98945 + C152461 * C2618) *
                         C152419 * C67858) *
                        C152599) *
                       C152221 * C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[243] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152322 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152329 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C4953) *
                       C152221 * C152198 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C152329 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152322 -
                    ((C95790 + C95791) * C152419 * C67858 +
                     (C95787 + C95786) * C152419 * C152570 +
                     (C95785 + C95784) * C152419 * C152606) *
                        C4953) *
                       C152221 * C152207 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152322 -
                    ((C96210 + C96211) * C152419 * C67858 +
                     (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                        C152329 +
                    (C95795 * C152606 + (C95791 + C95790) * C152419 * C152570 +
                     (C95117 * C610 + C95754 + C95754 + C95115 * C634 +
                      C95119 * C2977 + C95755 + C95755 + C152461 * C2979) *
                         C152419 * C67858) *
                        C4953) *
                       C152221 * C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[244] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C4281 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152326) *
                       C152221 * C152633 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C152326 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C4281) *
                       C152221 * C152626 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C4281 -
                    ((C96210 + C96211) * C152419 * C67858 +
                     (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                        C152326) *
                       C152221 * C152611 +
                   ((C96205 * C152606 + (C96211 + C96210) * C152419 * C152570 +
                     (C95117 * C611 + C96203 + C96203 + C95115 * C635 +
                      C95119 * C612 + C96204 + C96204 + C152461 * C636) *
                         C152419 * C67858) *
                        C152326 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C4281) *
                       C152221 * C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C4281 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152326) *
                        C152627 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152326 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C4281) *
                        C152613 +
                    (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                       C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                          C152419 * C152606 +
                      (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                         C4281 -
                     ((C97656 + C97657) * C152419 * C67858 +
                      (C97658 + C97659) * C152419 * C152570 +
                      (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                       C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                          C152419 * C152606) *
                         C152326) *
                        C152583) *
                       C3415 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152326 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C4281) *
                        C152627 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C4281 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152326) *
                        C152613 +
                    (((C97659 + C97658) * C152419 * C152606 +
                      (C97657 + C97656) * C152419 * C152570 +
                      (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
                       C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                          C152419 * C67858) *
                         C152326 -
                     ((C95488 + C95489) * C152419 * C67858 +
                      (C95485 + C95484) * C152419 * C152570 +
                      (C95483 + C95482) * C152419 * C152606) *
                         C4281) *
                        C152583) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[245] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152541 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152284) *
                       C829 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C152284 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152541) *
                       C830 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C152541 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152284) *
                       C831 +
                   ((C95997 * C152606 + (C96003 + C96002) * C152419 * C152570 +
                     (C95117 * C366 + C95995 + C95995 + C95115 * C390 +
                      C95119 * C1184 + C95996 + C95996 + C152461 * C1196) *
                         C152419 * C67858) *
                        C152239 * C152284 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C152239 * C152541) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C1823 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C1824 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C1825 -
                    ((C97344 + C97345) * C152419 * C67858 +
                     (C97346 + C97347) * C152419 * C152570 +
                     (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
                      C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                         C152419 * C152606) *
                        C152239 * C152593) *
                       C152527 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C1824 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C1823 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C1825 +
                    ((C97347 + C97346) * C152419 * C152606 +
                     (C97345 + C97344) * C152419 * C152570 +
                     (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
                      C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                         C152419 * C67858) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[246] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152419 * C152606 +
             (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                C152542 -
            (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152419 * C152606) *
                C152326) *
               C152541 +
           (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
              C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                 C152419 * C152606 +
             (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                C152326 -
            (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
             (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
              C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                 C152419 * C152606) *
                C152542) *
               C152284) *
              C353 +
          ((((C95783 + C95782) * C152419 * C152606 +
             (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                C152326 -
            (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
             (C95177 + C95176) * C152419 * C152606) *
                C152542) *
               C152541 +
           (((C95481 + C95480) * C152419 * C152606 +
             (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                C152542 -
            ((C96540 + C96541) * C152419 * C67858 +
             (C96539 + C96538) * C152419 * C152570 +
             (C96537 + C96536) * C152419 * C152606) *
                C152326) *
               C152284) *
              C354 +
          (((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
             C95191 * C67858) *
                C152542 -
            ((C96210 + C96211) * C152419 * C67858 +
             (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                C152326) *
               C152541 +
           ((C96543 * C152606 + (C96541 + C96540) * C152419 * C152570 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152419 * C67858) *
                C152326 -
            ((C96002 + C96003) * C152419 * C67858 +
             (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152419 * C152606 +
            (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
               C152542 -
           (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152419 * C152606) *
               C152326) *
              C1823 +
          (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
             C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                C152419 * C152606 +
            (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
               C152326 -
           (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
            (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
             C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                C152419 * C152606) *
               C152542) *
              C1824 +
          (((C95117 * C360 + C95424 + C95424 + C95115 * C384 + C95119 * C1652 +
             C95425 + C95425 + C152461 * C1676) *
                C152419 * C152606 +
            (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
               C152542 -
           ((C97656 + C97657) * C152419 * C67858 +
            (C97658 + C97659) * C152419 * C152570 +
            (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
             C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                C152419 * C152606) *
               C152326) *
              C1825 +
          (((C95117 * C2197 + C97854 + C97854 + C95115 * C2205 +
             C95119 * C8036 + C97855 + C97855 + C152461 * C8042) *
                C152419 * C152606 +
            (C95117 * C2198 + C97856 + C97856 + C95115 * C2206 +
             C95119 * C8037 + C97857 + C97857 + C152461 * C8043) *
                C152419 * C152570 +
            (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
             C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                C152419 * C67858) *
               C152326 -
           ((C97344 + C97345) * C152419 * C67858 +
            (C97346 + C97347) * C152419 * C152570 +
            (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
             C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                C152419 * C152606) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[247] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152627 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152613 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152583) *
                       C353 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 +
                     (C95486 + C95487) * C152419 * C67858) *
                        C152239 * C152613 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152627 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152583) *
                       C354 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C152627 -
                    ((C95119 * C1183 + C95450 + C95450 + C152461 * C1195 +
                      C95117 * C364 + C95451 + C95451 + C95115 * C388) *
                         C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152613 +
                    (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                     (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                      C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                         C152419 * C67858) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                     C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                        C152419 * C152606 +
                    (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                       C152239 * C152221 * C129 -
                   (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                    (C95177 + C95176) * C152419 * C152606) *
                       C152239 * C152221 * C130 +
                   (C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                    C95191 * C67858) *
                       C152239 * C152221 * C131 -
                   ((C95184 + C95185) * C152419 * C67858 +
                    (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                       C152239 * C152221 * C132 +
                   (C95191 * C152606 + (C95185 + C95184) * C152419 * C152570 +
                    (C95117 * C142 + C95154 + C95154 + C95115 * C158 +
                     C95119 * C975 + C95155 + C95155 + C152461 * C977) *
                        C152419 * C67858) *
                       C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152628 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152615 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C152586) *
                       C152221 * C353 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 +
                     (C95788 + C95789) * C152419 * C67858) *
                        C152615 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152628 -
                    ((C95790 + C95791) * C152419 * C67858 +
                     (C95787 + C95786) * C152419 * C152570 +
                     (C95785 + C95784) * C152419 * C152606) *
                        C152586) *
                       C152221 * C354 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152628 -
                    ((C95119 * C610 + C95752 + C95752 + C152461 * C634 +
                      C95117 * C609 + C95753 + C95753 + C95115 * C633) *
                         C152419 * C67858 +
                     (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                        C152615 +
                    (C95795 * C152606 + (C95791 + C95790) * C152419 * C152570 +
                     (C95117 * C610 + C95754 + C95754 + C95115 * C634 +
                      C95119 * C2977 + C95755 + C95755 + C152461 * C2979) *
                         C152419 * C67858) *
                        C152586) *
                       C152221 * C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C1373 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C1374 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152583) *
                       C152624 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C1374 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C1373 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152583) *
                       C152609 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C1373 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C1374 +
                    (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                     (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                      C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                         C152419 * C67858) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                     C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                        C152419 * C152606 +
                    (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                       C152239 * C1461 -
                   (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                    (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                     C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                        C152419 * C152606) *
                       C152239 * C1462 +
                   ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                     C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                        C152419 * C152606 +
                    (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                       C152239 * C1463 -
                   ((C95119 * C2199 + C96884 + C96884 + C152461 * C2207 +
                     C95117 * C1468 + C96885 + C96885 + C95115 * C1484) *
                        C152419 * C67858 +
                    (C95119 * C2198 + C96886 + C96886 + C152461 * C2206 +
                     C95117 * C1469 + C96887 + C96887 + C95115 * C1485) *
                        C152419 * C152570 +
                    (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
                     C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                        C152419 * C152606) *
                       C152239 * C1464 +
                   ((C95117 * C1471 + C96890 + C96890 + C95115 * C1487 +
                     C95119 * C8769 + C96891 + C96891 + C152461 * C8775) *
                        C152419 * C152606 +
                    (C95117 * C1472 + C96892 + C96892 + C95115 * C1488 +
                     C95119 * C8770 + C96893 + C96893 + C152461 * C8776) *
                        C152419 * C152570 +
                    (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
                     C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                        C152419 * C67858) *
                       C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152628 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152615 +
                    ((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
                      C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                         C152419 * C152606 +
                     (C95784 + C95785) * C152419 * C152570 + C95795 * C67858) *
                        C152586) *
                       C1373 +
                   (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                      C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                         C152419 * C152606 +
                     (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                        C152615 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152628 -
                    ((C95119 * C3131 + C97114 + C97114 + C152461 * C3139 +
                      C95117 * C1646 + C97115 + C97115 + C95115 * C1670) *
                         C152419 * C67858 +
                     (C95119 * C3130 + C97116 + C97116 + C152461 * C3138 +
                      C95117 * C1647 + C97117 + C97117 + C95115 * C1671) *
                         C152419 * C152570 +
                     (C95119 * C3129 + C97118 + C97118 + C152461 * C3137 +
                      C95117 * C1648 + C97119 + C97119 + C95115 * C1672) *
                         C152419 * C152606) *
                        C152586) *
                       C1374 +
                   (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152628 -
                    ((C95119 * C1655 + C97120 + C97120 + C152461 * C1679 +
                      C95117 * C1650 + C97121 + C97121 + C95115 * C1674) *
                         C152419 * C67858 +
                     (C95119 * C1654 + C97122 + C97122 + C152461 * C1678 +
                      C95117 * C1651 + C97123 + C97123 + C95115 * C1675) *
                         C152419 * C152570 +
                     (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                      C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                         C152419 * C152606) *
                        C152615 +
                    ((C95117 * C1653 + C97126 + C97126 + C95115 * C1677 +
                      C95119 * C10052 + C97127 + C97127 + C152461 * C10058) *
                         C152419 * C152606 +
                     (C95117 * C1654 + C97128 + C97128 + C95115 * C1678 +
                      C95119 * C10053 + C97129 + C97129 + C152461 * C10059) *
                         C152419 * C152570 +
                     (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
                      C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                         C152419 * C67858) *
                        C152586) *
                       C152583) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[248] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152542 -
                    (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                     (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                      C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                         C152419 * C152606) *
                        C152326) *
                       C152221 * C829 +
                   (((C95783 + C95782) * C152419 * C152606 +
                     (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                        C152326 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152542) *
                       C152221 * C830 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152542 -
                    ((C96210 + C96211) * C152419 * C67858 +
                     (C95789 + C95788) * C152419 * C152570 + C95794 * C152606) *
                        C152326) *
                       C152221 * C831 +
                   ((C96205 * C152606 + (C96211 + C96210) * C152419 * C152570 +
                     (C95117 * C611 + C96203 + C96203 + C95115 * C635 +
                      C95119 * C612 + C96204 + C96204 + C152461 * C636) *
                         C152419 * C67858) *
                        C152326 -
                    ((C95184 + C95185) * C152419 * C67858 +
                     (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                        C152542) *
                       C152221 * C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                       C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                          C152419 * C152606 +
                      (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                         C152542 -
                     (C95794 * C67858 + (C95782 + C95783) * C152419 * C152570 +
                      (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
                       C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                          C152419 * C152606) *
                         C152326) *
                        C1373 +
                    (((C95117 * C1179 + C96502 + C96502 + C95115 * C1191 +
                       C95119 * C1648 + C96503 + C96503 + C152461 * C1672) *
                          C152419 * C152606 +
                      (C96536 + C96537) * C152419 * C152570 + C96543 * C67858) *
                         C152326 -
                     (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                      (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                       C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                          C152419 * C152606) *
                         C152542) *
                        C1374 +
                    (((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                       C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                          C152419 * C152606 +
                      (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                         C152542 -
                     ((C97656 + C97657) * C152419 * C67858 +
                      (C97658 + C97659) * C152419 * C152570 +
                      (C95119 * C1653 + C97124 + C97124 + C152461 * C1677 +
                       C95117 * C1652 + C97125 + C97125 + C95115 * C1676) *
                          C152419 * C152606) *
                         C152326) *
                        C152583) *
                       C152527 +
                   ((((C95783 + C95782) * C152419 * C152606 +
                      (C95781 + C95780) * C152419 * C152570 + C96205 * C67858) *
                         C152326 -
                     (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                      (C95177 + C95176) * C152419 * C152606) *
                         C152542) *
                        C1373 +
                    (((C95481 + C95480) * C152419 * C152606 +
                      (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                         C152542 -
                     ((C96540 + C96541) * C152419 * C67858 +
                      (C96539 + C96538) * C152419 * C152570 +
                      (C96537 + C96536) * C152419 * C152606) *
                         C152326) *
                        C1374 +
                    (((C97659 + C97658) * C152419 * C152606 +
                      (C97657 + C97656) * C152419 * C152570 +
                      (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
                       C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                          C152419 * C67858) *
                         C152326 -
                     ((C95488 + C95489) * C152419 * C67858 +
                      (C95485 + C95484) * C152419 * C152570 +
                      (C95483 + C95482) * C152419 * C152606) *
                         C152542) *
                        C152583) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[249] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                     C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                        C152419 * C152606 +
                    (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                       C152239 * C152221 * C129 -
                   (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                    (C95177 + C95176) * C152419 * C152606) *
                       C152239 * C152221 * C130 +
                   (C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                    C95191 * C67858) *
                       C152239 * C152221 * C131 -
                   ((C95184 + C95185) * C152419 * C67858 +
                    (C95183 + C95182) * C152419 * C152570 + C95190 * C152606) *
                       C152239 * C152221 * C132 +
                   (C95191 * C152606 + (C95185 + C95184) * C152419 * C152570 +
                    (C95117 * C142 + C95154 + C95154 + C95115 * C158 +
                     C95119 * C975 + C95155 + C95155 + C152461 * C977) *
                        C152419 * C67858) *
                       C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C152627 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C152613 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152583) *
                       C353 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 +
                     (C95486 + C95487) * C152419 * C67858) *
                        C152239 * C152613 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C152627 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152583) *
                       C354 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C152627 -
                    ((C95119 * C1183 + C95450 + C95450 + C152461 * C1195 +
                      C95117 * C364 + C95451 + C95451 + C95115 * C388) *
                         C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C152613 +
                    (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                     (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                      C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                         C152419 * C67858) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                      C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                         C152419 * C152606 +
                     (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                        C152239 * C1373 -
                    (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                     (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                      C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                         C152419 * C152606) *
                        C152239 * C1374 +
                    ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                      C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                         C152419 * C152606 +
                     (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                        C152239 * C152583) *
                       C152624 +
                   (((C95481 + C95480) * C152419 * C152606 +
                     (C95479 + C95478) * C152419 * C152570 + C95997 * C67858) *
                        C152239 * C1374 -
                    (C95190 * C67858 + (C95179 + C95178) * C152419 * C152570 +
                     (C95177 + C95176) * C152419 * C152606) *
                        C152239 * C1373 -
                    ((C95488 + C95489) * C152419 * C67858 +
                     (C95485 + C95484) * C152419 * C152570 +
                     (C95483 + C95482) * C152419 * C152606) *
                        C152239 * C152583) *
                       C152609 +
                   ((C95189 * C152606 + (C95181 + C95180) * C152419 * C152570 +
                     C95191 * C67858) *
                        C152239 * C1373 -
                    ((C96002 + C96003) * C152419 * C67858 +
                     (C95487 + C95486) * C152419 * C152570 + C95492 * C152606) *
                        C152239 * C1374 +
                    (C95493 * C152606 + (C95489 + C95488) * C152419 * C152570 +
                     (C95117 * C365 + C95452 + C95452 + C95115 * C389 +
                      C95119 * C2045 + C95453 + C95453 + C152461 * C2047) *
                         C152419 * C67858) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                     C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                        C152419 * C152606 +
                    (C95176 + C95177) * C152419 * C152570 + C95189 * C67858) *
                       C152239 * C1461 -
                   (C95492 * C67858 + (C95480 + C95481) * C152419 * C152570 +
                    (C95119 * C1179 + C95422 + C95422 + C152461 * C1191 +
                     C95117 * C359 + C95423 + C95423 + C95115 * C383) *
                        C152419 * C152606) *
                       C152239 * C1462 +
                   ((C95117 * C360 + C95424 + C95424 + C95115 * C384 +
                     C95119 * C1652 + C95425 + C95425 + C152461 * C1676) *
                        C152419 * C152606 +
                    (C95482 + C95483) * C152419 * C152570 + C95493 * C67858) *
                       C152239 * C1463 -
                   ((C95119 * C2199 + C96884 + C96884 + C152461 * C2207 +
                     C95117 * C1468 + C96885 + C96885 + C95115 * C1484) *
                        C152419 * C67858 +
                    (C95119 * C2198 + C96886 + C96886 + C152461 * C2206 +
                     C95117 * C1469 + C96887 + C96887 + C95115 * C1485) *
                        C152419 * C152570 +
                    (C95119 * C2197 + C96888 + C96888 + C152461 * C2205 +
                     C95117 * C1470 + C96889 + C96889 + C95115 * C1486) *
                        C152419 * C152606) *
                       C152239 * C1464 +
                   ((C95117 * C1471 + C96890 + C96890 + C95115 * C1487 +
                     C95119 * C8769 + C96891 + C96891 + C152461 * C8775) *
                        C152419 * C152606 +
                    (C95117 * C1472 + C96892 + C96892 + C95115 * C1488 +
                     C95119 * C8770 + C96893 + C96893 + C152461 * C8776) *
                        C152419 * C152570 +
                    (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
                     C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                        C152419 * C67858) *
                       C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152280 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152287 +
           (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152239 * C3759) *
              C152198 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152287 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152280 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            (C106349 * C152435 + C104043 * C152555) * C76068) *
               C152239 * C3759) *
              C152207 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C152280 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152287 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C3759) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C152280 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152542) *
               C152287 +
           ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                 C76068 +
             (C104049 * C152555 + C106348 * C152435) * C152170) *
                C152542 -
            (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                 C76068) *
                C152326) *
               C3759) *
              C3415 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152542) *
               C152280 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152287 +
           (((C106736 * C152555 + (C106747 + C106746) * C152435) * C76068 +
             ((C97657 + C97656) * C152555 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
             (C106349 * C152435 + C104043 * C152555) * C76068) *
                C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152634 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152630 +
           (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152239 * C152618 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C152239 * C152593) *
              C3415 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152630 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152634 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            (C106349 * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152618 +
           ((C106348 * C152555 + (C105753 + C105752) * C152435) * C76068 +
            ((C97345 + C97344) * C152555 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C3275 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152284) *
              C152633 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C3275) *
              C152626 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C3275 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152284) *
              C152611 +
          (((C95990 * C152555 + (C95489 + C95488) * C152435) * C76068 +
            ((C96003 + C96002) * C152555 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152628 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152615 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C152555 +
              (C106082 + C106083) * C152435) *
                 C76068 +
             ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
                C152586) *
               C3275 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152615 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152628 -
            (((C106086 + C106087) * C152435 + C108153 * C152555) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                 C76068) *
                C152586) *
               C152284) *
              C3415 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152615 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152628 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C152555) * C76068) *
                C152586) *
               C3275 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152628 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152615 +
            ((C108152 * C152555 + (C106087 + C106086) * C152435) * C76068 +
             ((C98739 + C98738) * C152555 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C3275 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152542) *
               C152284) *
              C152198 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152542) *
               C3275 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152284) *
              C152207 +
          ((((C95186 * C152555 + C104050 * C152435) * C76068 +
             ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                C152542 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                 C152170 +
             (C105263 * C152435 + C95792 * C152555) * C76068) *
                C152326) *
               C3275 +
           (((C96542 * C152555 + (C97657 + C97656) * C152435) * C76068 +
             ((C96541 + C96540) * C152555 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
             (C104051 * C152435 + C95490 * C152555) * C76068) *
                C152542) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C3275 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152284) *
              C152633 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C3275) *
              C152626 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C3275 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152284) *
              C152611 +
          (((C95990 * C152555 + (C95489 + C95488) * C152435) * C76068 +
            ((C96003 + C96002) * C152555 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152634 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152630 +
           (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152239 * C152618 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C152239 * C152593) *
              C3415 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152630 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152634 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            (C106349 * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152618 +
           ((C106348 * C152555 + (C105753 + C105752) * C152435) * C76068 +
            ((C97345 + C97344) * C152555 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C152280 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C4281) *
               C152287 +
           ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                 C76068 +
             (C104049 * C152555 + C106348 * C152435) * C152170) *
                C4281 -
            (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                 C76068) *
                C152326) *
               C3759) *
              C152527 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C4281) *
               C152280 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152287 +
           (((C106736 * C152555 + (C106747 + C106746) * C152435) * C76068 +
             ((C97657 + C97656) * C152555 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
             (C106349 * C152435 + C104043 * C152555) * C76068) *
                C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152322 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152329 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
               C4953) *
              C152280 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C152329 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152322 -
           (((C106086 + C106087) * C152435 + C108153 * C152555) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                C76068) *
               C4953) *
              C152287 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152322 -
           (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                C76068) *
               C152329 +
           (((C106089 + C106088) * C152555 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C76068 +
            ((C106087 + C106086) * C152555 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C4953) *
              C3759) *
         C152193) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C152634 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C4281) *
              C152630 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C4281 -
           (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                C76068) *
               C152326) *
              C152618 +
          ((((C107019 + C107018) * C152555 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C76068 +
            ((C106747 + C106746) * C152555 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C3275 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C4281) *
               C152284) *
              C152624 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C4281) *
               C3275 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152284) *
              C152609 +
          ((((C95186 * C152555 + C104050 * C152435) * C76068 +
             ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                C4281 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                 C152170 +
             (C105263 * C152435 + C95792 * C152555) * C76068) *
                C152326) *
               C3275 +
           (((C96542 * C152555 + (C97657 + C97656) * C152435) * C76068 +
             ((C96541 + C96540) * C152555 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
             (C104051 * C152435 + C95490 * C152555) * C76068) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152635 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152632 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
               C152621 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C152555) *
                C152170 +
            ((C108692 + C108693) * C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C152555) *
                C76068) *
               C152599) *
              C3275 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C152632 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152635 -
           (((C106086 + C106087) * C152435 + C108153 * C152555) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                C76068) *
               C152621 +
           (((C108693 + C108692) * C152555 +
             (C95117 * C10052 + C108684 + C108684 + C95115 * C10058 +
              C95119 * C26241 + C108685 + C108685 + C152461 * C26245) *
                 C152435) *
                C76068 +
            ((C108421 + C108420) * C152555 +
             (C95117 * C10053 + C108686 + C108686 + C95115 * C10059 +
              C95119 * C26242 + C108687 + C108687 + C152461 * C26246) *
                 C152435) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152322 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152329 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C152555 +
              (C106082 + C106083) * C152435) *
                 C76068 +
             ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
                C4953) *
               C3275 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152329 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152322 -
            (((C106086 + C106087) * C152435 + C108153 * C152555) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                 C76068) *
                C4953) *
               C152284) *
              C152527 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152329 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152322 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C152555) * C76068) *
                C4953) *
               C3275 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152322 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152329 +
            ((C108152 * C152555 + (C106087 + C106086) * C152435) * C76068 +
             ((C98739 + C98738) * C152555 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C3275 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C4281) *
               C152284) *
              C152624 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C4281) *
               C3275 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152284) *
              C152609 +
          ((((C95186 * C152555 + C104050 * C152435) * C76068 +
             ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                C4281 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                 C152170 +
             (C105263 * C152435 + C95792 * C152555) * C76068) *
                C152326) *
               C3275 +
           (((C96542 * C152555 + (C97657 + C97656) * C152435) * C76068 +
             ((C96541 + C96540) * C152555 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
             (C104051 * C152435 + C95490 * C152555) * C76068) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C152634 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C4281) *
              C152630 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C4281 -
           (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                C76068) *
               C152326) *
              C152618 +
          ((((C107019 + C107018) * C152555 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C76068 +
            ((C106747 + C106746) * C152555 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C1823 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C1824 +
           (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152239 * C1825 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C152239 * C152593) *
              C152527 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C1824 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C1823 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            (C106349 * C152435 + C104043 * C152555) * C76068) *
               C152239 * C1825 +
           ((C106348 * C152555 + (C105753 + C105752) * C152435) * C76068 +
            ((C97345 + C97344) * C152555 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152541 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152284) *
              C829 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152541) *
              C830 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C152541 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152284) *
              C831 +
          (((C95990 * C152555 + (C95489 + C95488) * C152435) * C76068 +
            ((C96003 + C96002) * C152555 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C2359 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C2360 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C152555 +
              (C106082 + C106083) * C152435) *
                 C76068 +
             ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
                C152586) *
               C152541 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C2360 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C2359 -
            (((C106086 + C106087) * C152435 + C108153 * C152555) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                 C76068) *
                C152586) *
               C152284) *
              C152527 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C2360 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C2359 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C152555) * C76068) *
                C152586) *
               C152541 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C2359 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C2360 +
            ((C108152 * C152555 + (C106087 + C106086) * C152435) * C76068 +
             ((C98739 + C98738) * C152555 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152542 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C1823 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152542) *
              C1824 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152542 -
           (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                C76068) *
               C152326) *
              C1825 +
          ((((C107019 + C107018) * C152555 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C76068 +
            ((C106747 + C106746) * C152555 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C152541 +
           ((((C105269 + C105268) * C152555 +
              (C95117 * C1652 + C97125 + C97125 + C95115 * C1676 +
               C95119 * C1653 + C97124 + C97124 + C152461 * C1677) *
                  C152435) *
                 C76068 +
             (C105262 * C152555 + (C97659 + C97658) * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152542) *
               C152284) *
              C353 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152542) *
               C152541 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             ((C97658 + C97659) * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152284) *
              C354 +
          ((((C95186 * C152555 + C104050 * C152435) * C76068 +
             ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                C152542 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                 C152170 +
             (C105263 * C152435 + C95792 * C152555) * C76068) *
                C152326) *
               C152541 +
           (((C96542 * C152555 + (C97657 + C97656) * C152435) * C76068 +
             ((C96541 + C96540) * C152555 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
             (C104051 * C152435 + C95490 * C152555) * C76068) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C2973 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C2974 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
               C2975 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C152555) *
                C152170 +
            ((C108692 + C108693) * C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C152555) *
                C76068) *
               C152599) *
              C152541 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C2974 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C2973 -
           (((C106086 + C106087) * C152435 + C108153 * C152555) * C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                C76068) *
               C2975 +
           (((C108693 + C108692) * C152555 +
             (C95117 * C10052 + C108684 + C108684 + C95115 * C10058 +
              C95119 * C26241 + C108685 + C108685 + C152461 * C26245) *
                 C152435) *
                C76068 +
            ((C108421 + C108420) * C152555 +
             (C95117 * C10053 + C108686 + C108686 + C95115 * C10059 +
              C95119 * C26242 + C108687 + C108687 + C152461 * C26246) *
                 C152435) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                 C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                    C152555 +
                (C95117 * C359 + C95423 + C95423 + C95115 * C383 +
                 C95119 * C1179 + C95422 + C95422 + C152461 * C1191) *
                    C152435) *
                   C76068 +
               ((C95176 + C95177) * C152555 + (C95481 + C95480) * C152435) *
                   C152170) *
                  C152239 * C152221 * C129 -
              ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
               ((C95480 + C95481) * C152435 + (C95177 + C95176) * C152555) *
                   C76068) *
                  C152239 * C152221 * C130 +
              ((C95186 * C152555 + (C95479 + C95478) * C152435) * C76068 +
               ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                  C152239 * C152221 * C131 -
              (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                   C152170 +
               ((C95487 + C95486) * C152435 + C95187 * C152555) * C76068) *
                  C152239 * C152221 * C132 +
              ((C95188 * C152555 + (C96003 + C96002) * C152435) * C76068 +
               ((C95185 + C95184) * C152555 +
                (C95117 * C366 + C95995 + C95995 + C95115 * C390 +
                 C95119 * C1184 + C95996 + C95996 + C152461 * C1196) *
                    C152435) *
                   C152170) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 +
                  C95119 * C604 + C95123 + C95123 + C152461 * C628) *
                     C152555 +
                 (C104060 + C104061) * C152435) *
                    C76068 +
                ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                   C152239 * C152627 -
               ((C104043 * C152435 + C104044 * C152555) * C152170 +
                ((C104062 + C104063) * C152435 +
                 (C104061 + C104060) * C152555) *
                    C76068) *
                   C152239 * C152613 +
               (((C104063 + C104062) * C152555 +
                 (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
                  C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                     C152435) *
                    C76068 +
                (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
                   C152239 * C152583) *
                  C353 +
              (((C104042 * C152555 + C104049 * C152435) * C76068 +
                (C104050 * C152555 + C95491 * C152435) * C152170) *
                   C152239 * C152613 -
               ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
                (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                   C152239 * C152627 -
               (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
                ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
                   C152239 * C152583) *
                  C354 +
              (((C95186 * C152555 + C104050 * C152435) * C76068 +
                ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                   C152239 * C152627 -
               (((C95488 + C95489) * C152435 + (C95487 + C95486) * C152555) *
                    C152170 +
                (C104051 * C152435 + C95490 * C152555) * C76068) *
                   C152239 * C152613 +
               ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
                ((C95489 + C95488) * C152555 +
                 (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
                  C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                     C152435) *
                    C152170) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152628 -
           (((C96537 + C96536) * C152435 + (C95782 + C95783) * C152555) *
                C152170 +
            ((C95119 * C1648 + C96503 + C96503 + C152461 * C1672 +
              C95117 * C1179 + C96502 + C96502 + C95115 * C1191) *
                 C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C95117 * C1648 + C97119 + C97119 + C95115 * C1672 +
              C95119 * C3129 + C97118 + C97118 + C152461 * C3137) *
                 C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C152221 * C353 +
          ((((C95783 + C95782) * C152555 + (C96536 + C96537) * C152435) *
                C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152615 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152628 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                C152170 +
            ((C98740 + C98741) * C152435 + (C95785 + C95784) * C152555) *
                C76068) *
               C152586) *
              C152221 * C354 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152628 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            ((C96539 + C96538) * C152435 + C95792 * C152555) * C76068) *
               C152615 +
           ((C95793 * C152555 + (C98739 + C98738) * C152435) * C76068 +
            ((C95791 + C95790) * C152555 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C1374 +
           (((C104063 + C104062) * C152555 +
             (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
              C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                 C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C1374 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C104060 + C104061) * C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C152555) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
               C76068) *
              C152239 * C1462 +
          (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
               C76068 +
           (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + (C97346 + C97347) * C152555) *
               C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
               C76068) *
              C152239 * C1464 +
          (((C105755 + C105754) * C152555 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C76068 +
           ((C105753 + C105752) * C152555 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152628 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C1373 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + (C97659 + C97658) * C152435) * C152170) *
               C152615 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152628 -
           (((C106086 + C106087) * C152435 + (C98740 + C98741) * C152555) *
                C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                C76068) *
               C152586) *
              C1374 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152628 -
           (((C95119 * C8037 + C97857 + C97857 + C152461 * C8043 +
              C95117 * C2198 + C97856 + C97856 + C95115 * C2206) *
                 C152435 +
             (C97658 + C97659) * C152555) *
                C152170 +
            ((C95119 * C8036 + C97855 + C97855 + C152461 * C8042 +
              C95117 * C2197 + C97854 + C97854 + C95115 * C2205) *
                 C152435 +
             (C106085 + C106084) * C152555) *
                C76068) *
               C152615 +
           (((C106089 + C106088) * C152555 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C76068 +
            ((C106087 + C106086) * C152555 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C152221 * C152624 +
          ((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C2360 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C2359 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                C152170 +
            ((C98740 + C98741) * C152435 + (C95785 + C95784) * C152555) *
                C76068) *
               C152586) *
              C152221 * C152609 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C2359 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            (C105263 * C152435 + C95792 * C152555) * C76068) *
               C2360 +
           ((C95793 * C152555 + (C98739 + C98738) * C152435) * C76068 +
            ((C95791 + C95790) * C152555 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C152627 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C2360 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C2359 -
           (((C106086 + C106087) * C152435 + (C98740 + C98741) * C152555) *
                C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                C76068) *
               C152586) *
              C152613 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C2359 -
           (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                C76068) *
               C2360 +
           (((C106089 + C106088) * C152555 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C76068 +
            ((C106087 + C106086) * C152555 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C104060 + C104061) * C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
              C2590 -
          ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
           ((C105268 + C105269) * C152435 +
            (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
             C95725 + C95725 + C95115 * C628) *
                C152555) *
               C76068) *
              C2591 +
          (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
             C95727 + C95727 + C152461 * C2614) *
                C152555 +
            (C106082 + C106083) * C152435) *
               C76068 +
           ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
               C152170) *
              C2592 -
          (((C95119 * C9345 + C99155 + C99155 + C152461 * C9351 +
             C95117 * C3130 + C99154 + C99154 + C95115 * C3138) *
                C152435 +
            (C98956 + C98957) * C152555) *
               C152170 +
           ((C95119 * C9344 + C99153 + C99153 + C152461 * C9350 +
             C95117 * C3129 + C99152 + C99152 + C95115 * C3137) *
                C152435 +
            (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
             C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                C152555) *
               C76068) *
              C2593 +
          (((C95117 * C2599 + C98424 + C98424 + C95115 * C2615 +
             C95119 * C17921 + C98425 + C98425 + C152461 * C17927) *
                C152555 +
            (C95117 * C9344 + C107762 + C107762 + C95115 * C9350 +
             C95119 * C40067 + C107763 + C107763 + C152461 * C40071) *
                C152435) *
               C76068 +
           ((C95117 * C2600 + C98426 + C98426 + C95115 * C2616 +
             C95119 * C17922 + C98427 + C98427 + C152461 * C17928) *
                C152555 +
            (C95117 * C9345 + C107764 + C107764 + C95115 * C9351 +
             C95119 * C49388 + C107765 + C107765 + C152461 * C49390) *
                C152435) *
               C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C1373 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152542) *
               C1374 +
           ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                 C76068 +
             (C104049 * C152555 + C106348 * C152435) * C152170) *
                C152542 -
            (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
             ((C95119 * C8036 + C97855 + C97855 + C152461 * C8042 +
               C95117 * C2197 + C97854 + C97854 + C95115 * C2205) *
                  C152435 +
              (C106085 + C106084) * C152555) *
                 C76068) *
                C152326) *
               C152583) *
              C152527 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152542) *
               C1373 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C1374 +
           (((C106736 * C152555 + (C106747 + C106746) * C152435) * C76068 +
             ((C97657 + C97656) * C152555 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
             (C106349 * C152435 + C104043 * C152555) * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152542 -
           (((C96537 + C96536) * C152435 + (C95782 + C95783) * C152555) *
                C152170 +
            ((C95119 * C1648 + C96503 + C96503 + C152461 * C1672 +
              C95117 * C1179 + C96502 + C96502 + C95115 * C1191) *
                 C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C152221 * C829 +
          ((((C95783 + C95782) * C152555 + (C96536 + C96537) * C152435) *
                C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152542) *
              C152221 * C830 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152542 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            ((C96539 + C96538) * C152435 + C95792 * C152555) * C76068) *
               C152326) *
              C152221 * C831 +
          (((C96198 * C152555 + (C96541 + C96540) * C152435) * C76068 +
            ((C96211 + C96210) * C152555 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C2973 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C2974 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
               C2975 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C152555) *
                C152170 +
            ((C95119 * C9344 + C99153 + C99153 + C152461 * C9350 +
              C95117 * C3129 + C99152 + C99152 + C95115 * C3137) *
                 C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C152555) *
                C76068) *
               C152599) *
              C152221 * C152527 +
          ((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C2974 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C2973 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C152555) * C76068) *
               C2975 +
           (((C98957 + C98956) * C152555 + (C108421 + C108420) * C152435) *
                C76068 +
            ((C98955 + C98954) * C152555 +
             (C95117 * C3131 + C99156 + C99156 + C95115 * C3139 +
              C95119 * C9346 + C99157 + C99157 + C152461 * C9352) *
                 C152435) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152627 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152613 +
           (((C104063 + C104062) * C152555 +
             (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
              C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                 C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152613 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152627 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152583) *
              C354 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C152627 -
           (((C95488 + C95489) * C152435 + (C95487 + C95486) * C152555) *
                C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152613 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C95117 * C359 + C95423 + C95423 + C95115 * C383 + C95119 * C1179 +
             C95422 + C95422 + C152461 * C1191) *
                C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + (C95481 + C95480) * C152435) *
               C152170) *
              C152239 * C152221 * C129 -
          ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
           ((C95480 + C95481) * C152435 + (C95177 + C95176) * C152555) *
               C76068) *
              C152239 * C152221 * C130 +
          ((C95186 * C152555 + (C95479 + C95478) * C152435) * C76068 +
           ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
              C152239 * C152221 * C131 -
          (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
               C152170 +
           ((C95487 + C95486) * C152435 + C95187 * C152555) * C76068) *
              C152239 * C152221 * C132 +
          ((C95188 * C152555 + (C96003 + C96002) * C152435) * C76068 +
           ((C95185 + C95184) * C152555 +
            (C95117 * C366 + C95995 + C95995 + C95115 * C390 + C95119 * C1184 +
             C95996 + C95996 + C152461 * C1196) *
                C152435) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C1374 +
           (((C104063 + C104062) * C152555 +
             (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
              C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                 C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C1374 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C104060 + C104061) * C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C152555) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
               C76068) *
              C152239 * C1462 +
          (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
               C76068 +
           (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + (C97346 + C97347) * C152555) *
               C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
               C76068) *
              C152239 * C1464 +
          (((C105755 + C105754) * C152555 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C76068 +
           ((C105753 + C105752) * C152555 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C152221 * C152624 +
          ((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C2360 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C2359 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                C152170 +
            ((C98740 + C98741) * C152435 + (C95785 + C95784) * C152555) *
                C76068) *
               C152586) *
              C152221 * C152609 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C2359 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            (C105263 * C152435 + C95792 * C152555) * C76068) *
               C2360 +
           ((C95793 * C152555 + (C98739 + C98738) * C152435) * C76068 +
            ((C95791 + C95790) * C152555 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C2359 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C2360 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C152627 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C2360 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C2359 -
           (((C106086 + C106087) * C152435 + (C98740 + C98741) * C152555) *
                C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                C76068) *
               C152586) *
              C152613 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C2359 -
           (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                C76068) *
               C2360 +
           (((C106089 + C106088) * C152555 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C76068 +
            ((C106087 + C106086) * C152555 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C152541 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C4281) *
               C152284) *
              C152198 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C4281) *
               C152541 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152284) *
              C152207 +
          ((((C95186 * C152555 + C104050 * C152435) * C76068 +
             ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                C4281 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                 C152170 +
             (C105263 * C152435 + C95792 * C152555) * C76068) *
                C152326) *
               C152541 +
           (((C96542 * C152555 + (C97657 + C97656) * C152435) * C76068 +
             ((C96541 + C96540) * C152555 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
             (C104051 * C152435 + C95490 * C152555) * C76068) *
                C4281) *
               C152284) *
              C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152322 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152329 +
            (((C95117 * C605 + C95726 + C95726 + C95115 * C629 +
               C95119 * C2598 + C95727 + C95727 + C152461 * C2614) *
                  C152555 +
              (C106082 + C106083) * C152435) *
                 C76068 +
             ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
                C4953) *
               C152541 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152329 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152322 -
            (((C106086 + C106087) * C152435 + C108153 * C152555) * C152170 +
             ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                 C76068) *
                C4953) *
               C152284) *
              C3415 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152329 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152322 -
            (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                 C152170 +
             (C108153 * C152435 + (C95785 + C95784) * C152555) * C76068) *
                C4953) *
               C152541 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152322 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152329 +
            ((C108152 * C152555 + (C106087 + C106086) * C152435) * C76068 +
             ((C98739 + C98738) * C152555 +
              (C95117 * C1655 + C97130 + C97130 + C95115 * C1679 +
               C95119 * C10054 + C97131 + C97131 + C152461 * C10060) *
                  C152435) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C152627 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C4281) *
               C152613 +
           ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                 C76068 +
             (C104049 * C152555 + C106348 * C152435) * C152170) *
                C4281 -
            (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                 C76068) *
                C152326) *
               C152583) *
              C3415 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C4281) *
               C152627 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152613 +
           (((C106736 * C152555 + (C106747 + C106746) * C152435) * C76068 +
             ((C97657 + C97656) * C152555 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
             (C106349 * C152435 + C104043 * C152555) * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C152221 * C152633 +
          ((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C4281 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            (C105263 * C152435 + C95792 * C152555) * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C96198 * C152555 + (C96541 + C96540) * C152435) * C76068 +
            ((C96211 + C96210) * C152555 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152635 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152632 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
               C152621 -
           (((C108420 + C108421) * C152435 + (C98956 + C98957) * C152555) *
                C152170 +
            ((C108692 + C108693) * C152435 +
             (C95119 * C2599 + C98422 + C98422 + C152461 * C2615 +
              C95117 * C2598 + C98423 + C98423 + C95115 * C2614) *
                 C152555) *
                C76068) *
               C152599) *
              C152221 * C3415 +
          ((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152632 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152635 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C152555) * C76068) *
               C152621 +
           (((C98957 + C98956) * C152555 + (C108421 + C108420) * C152435) *
                C76068 +
            ((C98955 + C98954) * C152555 +
             (C95117 * C3131 + C99156 + C99156 + C95115 * C3139 +
              C95119 * C9346 + C99157 + C99157 + C152461 * C9352) *
                 C152435) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152322 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152329 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + C108152 * C152435) * C152170) *
               C4953) *
              C152221 * C152198 +
          ((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152329 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152322 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                C152170 +
            (C108153 * C152435 + (C95785 + C95784) * C152555) * C76068) *
               C4953) *
              C152221 * C152207 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152322 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            (C105263 * C152435 + C95792 * C152555) * C76068) *
               C152329 +
           ((C95793 * C152555 + (C98739 + C98738) * C152435) * C76068 +
            ((C95791 + C95790) * C152555 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C4953) *
              C152221 * C3762)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C4281 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C152221 * C152633 +
          ((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C4281 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            (C105263 * C152435 + C95792 * C152555) * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C96198 * C152555 + (C96541 + C96540) * C152435) * C76068 +
            ((C96211 + C96210) * C152555 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C4281 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C152627 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C4281) *
               C152613 +
           ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                 C76068 +
             (C104049 * C152555 + C106348 * C152435) * C152170) *
                C4281 -
            (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
             ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                 C76068) *
                C152326) *
               C152583) *
              C3415 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C4281) *
               C152627 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C4281 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152613 +
           (((C106736 * C152555 + (C106747 + C106746) * C152435) * C76068 +
             ((C97657 + C97656) * C152555 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
             (C106349 * C152435 + C104043 * C152555) * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152541 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152284) *
              C829 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152284 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152541) *
              C830 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C152541 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152284) *
              C831 +
          (((C95990 * C152555 + (C95489 + C95488) * C152435) * C76068 +
            ((C96003 + C96002) * C152555 +
             (C95117 * C365 + C95452 + C95452 + C95115 * C389 + C95119 * C2045 +
              C95453 + C95453 + C152461 * C2047) *
                 C152435) *
                C152170) *
               C152239 * C152284 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C1823 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C1824 +
           (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152239 * C1825 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C152239 * C152593) *
              C152527 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C1824 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C1823 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            (C106349 * C152435 + C104043 * C152555) * C76068) *
               C152239 * C1825 +
           ((C106348 * C152555 + (C105753 + C105752) * C152435) * C76068 +
            ((C97345 + C97344) * C152555 +
             (C95117 * C1473 + C96894 + C96894 + C95115 * C1489 +
              C95119 * C8771 + C96895 + C96895 + C152461 * C8777) *
                 C152435) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C152541 +
           ((((C105269 + C105268) * C152555 +
              (C95117 * C1652 + C97125 + C97125 + C95115 * C1676 +
               C95119 * C1653 + C97124 + C97124 + C152461 * C1677) *
                  C152435) *
                 C76068 +
             (C105262 * C152555 + (C97659 + C97658) * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152542) *
               C152284) *
              C353 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152542) *
               C152541 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             ((C97658 + C97659) * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C152284) *
              C354 +
          ((((C95186 * C152555 + C104050 * C152435) * C76068 +
             ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
                C152542 -
            (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                 C152170 +
             (C105263 * C152435 + C95792 * C152555) * C76068) *
                C152326) *
               C152541 +
           (((C96542 * C152555 + (C97657 + C97656) * C152435) * C76068 +
             ((C96541 + C96540) * C152555 +
              (C95117 * C1649 + C97646 + C97646 + C95115 * C1673 +
               C95119 * C1656 + C97647 + C97647 + C152461 * C1680) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
             (C104051 * C152435 + C95490 * C152555) * C76068) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152542 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C1823 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + C106736 * C152435) * C152170) *
               C152326 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152542) *
              C1824 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + C106348 * C152435) * C152170) *
               C152542 -
           (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
            ((C107018 + C107019) * C152435 + (C106085 + C106084) * C152555) *
                C76068) *
               C152326) *
              C1825 +
          ((((C107019 + C107018) * C152555 +
             (C95117 * C8769 + C107010 + C107010 + C95115 * C8775 +
              C95119 * C24963 + C107011 + C107011 + C152461 * C24967) *
                 C152435) *
                C76068 +
            ((C106747 + C106746) * C152555 +
             (C95117 * C8770 + C107012 + C107012 + C95115 * C8776 +
              C95119 * C24964 + C107013 + C107013 + C152461 * C24968) *
                 C152435) *
                C152170) *
               C152326 -
           (((C105752 + C105753) * C152435 + C106349 * C152555) * C152170 +
            ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
                C76068) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152627 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152613 +
           (((C104063 + C104062) * C152555 +
             (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
              C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                 C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152613 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152627 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152583) *
              C354 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C152627 -
           (((C95488 + C95489) * C152435 + (C95487 + C95486) * C152555) *
                C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152613 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C95117 * C359 + C95423 + C95423 + C95115 * C383 + C95119 * C1179 +
             C95422 + C95422 + C152461 * C1191) *
                C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + (C95481 + C95480) * C152435) *
               C152170) *
              C152239 * C152221 * C129 -
          ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
           ((C95480 + C95481) * C152435 + (C95177 + C95176) * C152555) *
               C76068) *
              C152239 * C152221 * C130 +
          ((C95186 * C152555 + (C95479 + C95478) * C152435) * C76068 +
           ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
              C152239 * C152221 * C131 -
          (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
               C152170 +
           ((C95487 + C95486) * C152435 + C95187 * C152555) * C76068) *
              C152239 * C152221 * C132 +
          ((C95188 * C152555 + (C96003 + C96002) * C152435) * C76068 +
           ((C95185 + C95184) * C152555 +
            (C95117 * C366 + C95995 + C95995 + C95115 * C390 + C95119 * C1184 +
             C95996 + C95996 + C152461 * C1196) *
                C152435) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152628 -
           (((C96537 + C96536) * C152435 + (C95782 + C95783) * C152555) *
                C152170 +
            ((C95119 * C1648 + C96503 + C96503 + C152461 * C1672 +
              C95117 * C1179 + C96502 + C96502 + C95115 * C1191) *
                 C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C95117 * C1648 + C97119 + C97119 + C95115 * C1672 +
              C95119 * C3129 + C97118 + C97118 + C152461 * C3137) *
                 C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C152221 * C353 +
          ((((C95783 + C95782) * C152555 + (C96536 + C96537) * C152435) *
                C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152615 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152628 -
           (((C98738 + C98739) * C152435 + (C95787 + C95786) * C152555) *
                C152170 +
            ((C98740 + C98741) * C152435 + (C95785 + C95784) * C152555) *
                C76068) *
               C152586) *
              C152221 * C354 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152628 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            ((C96539 + C96538) * C152435 + C95792 * C152555) * C76068) *
               C152615 +
           ((C95793 * C152555 + (C98739 + C98738) * C152435) * C76068 +
            ((C95791 + C95790) * C152555 +
             (C95117 * C1645 + C98728 + C98728 + C95115 * C1669 +
              C95119 * C3132 + C98729 + C98729 + C152461 * C3140) *
                 C152435) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C1374 +
           (((C104063 + C104062) * C152555 +
             (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
              C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                 C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C1374 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C104060 + C104061) * C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C152555) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
               C76068) *
              C152239 * C1462 +
          (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
               C76068 +
           (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + (C97346 + C97347) * C152555) *
               C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
               C76068) *
              C152239 * C1464 +
          (((C105755 + C105754) * C152555 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C76068 +
           ((C105753 + C105752) * C152555 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152628 -
           ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
            ((C105268 + C105269) * C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152615 +
           (((C95117 * C605 + C95726 + C95726 + C95115 * C629 + C95119 * C2598 +
              C95727 + C95727 + C152461 * C2614) *
                 C152555 +
             (C106082 + C106083) * C152435) *
                C76068 +
            ((C95784 + C95785) * C152555 + (C98741 + C98740) * C152435) *
                C152170) *
               C152586) *
              C1373 +
          ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                C76068 +
            (C105262 * C152555 + (C97659 + C97658) * C152435) * C152170) *
               C152615 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152628 -
           (((C106086 + C106087) * C152435 + (C98740 + C98741) * C152555) *
                C152170 +
            ((C106088 + C106089) * C152435 + (C106083 + C106082) * C152555) *
                C76068) *
               C152586) *
              C1374 +
          ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152628 -
           (((C95119 * C8037 + C97857 + C97857 + C152461 * C8043 +
              C95117 * C2198 + C97856 + C97856 + C95115 * C2206) *
                 C152435 +
             (C97658 + C97659) * C152555) *
                C152170 +
            ((C95119 * C8036 + C97855 + C97855 + C152461 * C8042 +
              C95117 * C2197 + C97854 + C97854 + C95115 * C2205) *
                 C152435 +
             (C106085 + C106084) * C152555) *
                C76068) *
               C152615 +
           (((C106089 + C106088) * C152555 +
             (C95117 * C8036 + C106062 + C106062 + C95115 * C8042 +
              C95119 * C26938 + C106063 + C106063 + C152461 * C26942) *
                 C152435) *
                C76068 +
            ((C106087 + C106086) * C152555 +
             (C95117 * C8037 + C106064 + C106064 + C95115 * C8043 +
              C95119 * C26939 + C106065 + C106065 + C152461 * C26943) *
                 C152435) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152542 -
           (((C96537 + C96536) * C152435 + (C95782 + C95783) * C152555) *
                C152170 +
            ((C95119 * C1648 + C96503 + C96503 + C152461 * C1672 +
              C95117 * C1179 + C96502 + C96502 + C95115 * C1191) *
                 C152435 +
             (C95119 * C605 + C95724 + C95724 + C152461 * C629 + C95117 * C604 +
              C95725 + C95725 + C95115 * C628) *
                 C152555) *
                C76068) *
               C152326) *
              C152221 * C829 +
          ((((C95783 + C95782) * C152555 + (C96536 + C96537) * C152435) *
                C76068 +
            ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
               C152326 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152542) *
              C152221 * C830 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152542 -
           (((C96540 + C96541) * C152435 + (C95789 + C95788) * C152555) *
                C152170 +
            ((C96539 + C96538) * C152435 + C95792 * C152555) * C76068) *
               C152326) *
              C152221 * C831 +
          (((C96198 * C152555 + (C96541 + C96540) * C152435) * C76068 +
            ((C96211 + C96210) * C152555 +
             (C95117 * C1183 + C96522 + C96522 + C95115 * C1195 +
              C95119 * C2821 + C96523 + C96523 + C152461 * C2823) *
                 C152435) *
                C152170) *
               C152326 -
           (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
                C152170 +
            (C104612 * C152435 + C95187 * C152555) * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
               C95123 + C95123 + C152461 * C628) *
                  C152555 +
              (C104060 + C104061) * C152435) *
                 C76068 +
             ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
                C152542 -
            ((C105257 * C152435 + (C95782 + C95783) * C152555) * C152170 +
             ((C105268 + C105269) * C152435 +
              (C95119 * C605 + C95724 + C95724 + C152461 * C629 +
               C95117 * C604 + C95725 + C95725 + C95115 * C628) *
                  C152555) *
                 C76068) *
                C152326) *
               C1373 +
           ((((C105269 + C105268) * C152555 + (C106084 + C106085) * C152435) *
                 C76068 +
             (C105262 * C152555 + C106736 * C152435) * C152170) *
                C152326 -
            ((C104043 * C152435 + C104044 * C152555) * C152170 +
             ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                 C76068) *
                C152542) *
               C1374 +
           ((((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
                 C76068 +
             (C104049 * C152555 + C106348 * C152435) * C152170) *
                C152542 -
            (((C106746 + C106747) * C152435 + C106741 * C152555) * C152170 +
             ((C95119 * C8036 + C97855 + C97855 + C152461 * C8042 +
               C95117 * C2197 + C97854 + C97854 + C95115 * C2205) *
                  C152435 +
              (C106085 + C106084) * C152555) *
                 C76068) *
                C152326) *
               C152583) *
              C152527 +
          (((((C95783 + C95782) * C152555 + C105262 * C152435) * C76068 +
             ((C95781 + C95780) * C152555 + C96542 * C152435) * C152170) *
                C152326 -
            ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
             (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
                C152542) *
               C1373 +
           (((C104042 * C152555 + C104049 * C152435) * C76068 +
             (C104050 * C152555 + C95491 * C152435) * C152170) *
                C152542 -
            (((C97656 + C97657) * C152435 + C105263 * C152555) * C152170 +
             (C106741 * C152435 + C105257 * C152555) * C76068) *
                C152326) *
               C1374 +
           (((C106736 * C152555 + (C106747 + C106746) * C152435) * C76068 +
             ((C97657 + C97656) * C152555 +
              (C95117 * C2199 + C97858 + C97858 + C95115 * C2207 +
               C95119 * C8038 + C97859 + C97859 + C152461 * C8044) *
                  C152435) *
                 C152170) *
                C152326 -
            (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
             (C106349 * C152435 + C104043 * C152555) * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C95117 * C359 + C95423 + C95423 + C95115 * C383 + C95119 * C1179 +
             C95422 + C95422 + C152461 * C1191) *
                C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + (C95481 + C95480) * C152435) *
               C152170) *
              C152239 * C152221 * C129 -
          ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
           ((C95480 + C95481) * C152435 + (C95177 + C95176) * C152555) *
               C76068) *
              C152239 * C152221 * C130 +
          ((C95186 * C152555 + (C95479 + C95478) * C152435) * C76068 +
           ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
              C152239 * C152221 * C131 -
          (((C96002 + C96003) * C152435 + (C95183 + C95182) * C152555) *
               C152170 +
           ((C95487 + C95486) * C152435 + C95187 * C152555) * C76068) *
              C152239 * C152221 * C132 +
          ((C95188 * C152555 + (C96003 + C96002) * C152435) * C76068 +
           ((C95185 + C95184) * C152555 +
            (C95117 * C366 + C95995 + C95995 + C95115 * C390 + C95119 * C1184 +
             C95996 + C95996 + C152461 * C1196) *
                C152435) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C152627 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C152613 +
           (((C104063 + C104062) * C152555 +
             (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
              C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                 C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C152613 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C152627 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152583) *
              C354 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C152627 -
           (((C95488 + C95489) * C152435 + (C95487 + C95486) * C152555) *
                C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C152613 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
              C95123 + C95123 + C152461 * C628) *
                 C152555 +
             (C104060 + C104061) * C152435) *
                C76068 +
            ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
               C152239 * C1373 -
           ((C104043 * C152435 + C104044 * C152555) * C152170 +
            ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
                C76068) *
               C152239 * C1374 +
           (((C104063 + C104062) * C152555 +
             (C95117 * C1470 + C96889 + C96889 + C95115 * C1486 +
              C95119 * C2197 + C96888 + C96888 + C152461 * C2205) *
                 C152435) *
                C76068 +
            (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C104042 * C152555 + C104049 * C152435) * C76068 +
            (C104050 * C152555 + C95491 * C152435) * C152170) *
               C152239 * C1374 -
           ((C95490 * C152435 + (C95179 + C95178) * C152555) * C152170 +
            (C104044 * C152435 + (C95177 + C95176) * C152555) * C76068) *
               C152239 * C1373 -
           (((C97344 + C97345) * C152435 + C104051 * C152555) * C152170 +
            ((C97346 + C97347) * C152435 + C104043 * C152555) * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C95186 * C152555 + C104050 * C152435) * C76068 +
            ((C95181 + C95180) * C152555 + C95990 * C152435) * C152170) *
               C152239 * C1373 -
           (((C95488 + C95489) * C152435 + C104612 * C152555) * C152170 +
            (C104051 * C152435 + C95490 * C152555) * C76068) *
               C152239 * C1374 +
           ((C95491 * C152555 + (C97345 + C97344) * C152435) * C76068 +
            ((C95489 + C95488) * C152555 +
             (C95117 * C1467 + C97334 + C97334 + C95115 * C1483 +
              C95119 * C2200 + C97335 + C97335 + C152461 * C2208) *
                 C152435) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C95117 * C136 + C95122 + C95122 + C95115 * C152 + C95119 * C604 +
             C95123 + C95123 + C152461 * C628) *
                C152555 +
            (C104060 + C104061) * C152435) *
               C76068 +
           ((C95176 + C95177) * C152555 + C104042 * C152435) * C152170) *
              C152239 * C1461 -
          ((C104043 * C152435 + C104044 * C152555) * C152170 +
           ((C104062 + C104063) * C152435 + (C104061 + C104060) * C152555) *
               C76068) *
              C152239 * C1462 +
          (((C104063 + C104062) * C152555 + (C105750 + C105751) * C152435) *
               C76068 +
           (C104049 * C152555 + (C97347 + C97346) * C152435) * C152170) *
              C152239 * C1463 -
          (((C105752 + C105753) * C152435 + (C97346 + C97347) * C152555) *
               C152170 +
           ((C105754 + C105755) * C152435 + (C105751 + C105750) * C152555) *
               C76068) *
              C152239 * C1464 +
          (((C105755 + C105754) * C152555 +
            (C95117 * C7786 + C105734 + C105734 + C95115 * C7792 +
             C95119 * C25670 + C105735 + C105735 + C152461 * C25674) *
                C152435) *
               C76068 +
           ((C105753 + C105752) * C152555 +
            (C95117 * C7787 + C105736 + C105736 + C95115 * C7793 +
             C95119 * C25671 + C105737 + C105737 + C152461 * C25675) *
                C152435) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[275] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152280 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152287 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C3759) *
                       C152198 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152287 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152280 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C3759) *
                       C152207 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C152280 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152287 +
                    ((C115096 + C115095 + C115094) * C152419 * C76068 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152419 * C152170) *
                        C152239 * C3759) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[276] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C152419 * C76068 +
             (C114783 + C114784 + C114785) * C152419 * C152170) *
                C152542 -
            ((C115387 + C115388 + C115389) * C152419 * C152170 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C152419 * C76068) *
                C152326) *
               C152280 +
           (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
              C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
              C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                 C152419 * C76068 +
             (C116149 + C116150 + C116151) * C152419 * C152170) *
                C152326 -
            ((C115085 + C115086 + C115087) * C152419 * C152170 +
             (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
              C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
              C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                 C152419 * C76068) *
                C152542) *
               C152287 +
           (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
              C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
              C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                 C152419 * C76068 +
             (C115088 + C115089 + C115090) * C152419 * C152170) *
                C152542 -
            ((C117260 + C117261 + C117262) * C152419 * C152170 +
             (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                 C152419 * C76068) *
                C152326) *
               C3759) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C152419 * C76068 +
             (C115393 + C115394 + C115395) * C152419 * C152170) *
                C152326 -
            ((C114786 + C114787 + C114788) * C152419 * C152170 +
             (C114785 + C114784 + C114783) * C152419 * C76068) *
                C152542) *
               C152280 +
           (((C115087 + C115086 + C115085) * C152419 * C76068 +
             (C115091 + C115092 + C115093) * C152419 * C152170) *
                C152542 -
            ((C116152 + C116153 + C116154) * C152419 * C152170 +
             (C116151 + C116150 + C116149) * C152419 * C76068) *
                C152326) *
               C152287 +
           (((C117262 + C117261 + C117260) * C152419 * C76068 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C115094 + C115095 + C115096) * C152419 * C152170 +
             (C115090 + C115089 + C115088) * C152419 * C76068) *
                C152542) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[277] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152634 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152630 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152618 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C152239 * C152593) *
                       C3415 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152630 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152634 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152618 +
                    ((C116954 + C116953 + C116952) * C152419 * C76068 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152419 * C152170) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C3275 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152284) *
                       C152633 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C3275) *
                       C152626 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C3275 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152284) *
                       C152611 +
                   (((C115610 + C115609 + C115608) * C152419 * C76068 +
                     (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                      C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                      C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                         C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114792 + C114793 + C114794) * C152419 * C152170 +
                     (C114791 + C114790 + C114789) * C152419 * C76068) *
                        C152239 * C3275) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C152628 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152615 +
                     ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                       C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                       C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                          C152419 * C76068 +
                      (C115390 + C115391 + C115392) * C152419 * C152170) *
                         C152586) *
                        C3275 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152615 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C152628 -
                     ((C118338 + C118339 + C118340) * C152419 * C152170 +
                      (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                       C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                       C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                          C152419 * C76068) *
                         C152586) *
                        C152284) *
                       C3415 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152615 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C152628 -
                     ((C115396 + C115397 + C115398) * C152419 * C152170 +
                      (C115392 + C115391 + C115390) * C152419 * C76068) *
                         C152586) *
                        C3275 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C152628 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152615 +
                     ((C118340 + C118339 + C118338) * C152419 * C76068 +
                      (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
                       C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
                       C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                          C152419 * C152170) *
                         C152586) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[278] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C152542 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152326) *
                        C3275 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152326 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C152542) *
                        C152284) *
                       C152198 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152326 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C152542) *
                        C3275 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C152542 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152326) *
                        C152284) *
                       C152207 +
                   ((((C114788 + C114787 + C114786) * C152419 * C76068 +
                      (C114789 + C114790 + C114791) * C152419 * C152170) *
                         C152542 -
                     ((C115820 + C115821 + C115822) * C152419 * C152170 +
                      (C115395 + C115394 + C115393) * C152419 * C76068) *
                         C152326) *
                        C3275 +
                    (((C116154 + C116153 + C116152) * C152419 * C76068 +
                      (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
                       C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
                       C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                          C152419 * C152170) *
                         C152326 -
                     ((C115608 + C115609 + C115610) * C152419 * C152170 +
                      (C115093 + C115092 + C115091) * C152419 * C76068) *
                         C152542) *
                        C152284) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[279] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C3275 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152284) *
                       C152633 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C3275) *
                       C152626 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C3275 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152284) *
                       C152611 +
                   (((C115610 + C115609 + C115608) * C152419 * C76068 +
                     (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                      C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                      C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                         C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114792 + C114793 + C114794) * C152419 * C152170 +
                     (C114791 + C114790 + C114789) * C152419 * C76068) *
                        C152239 * C3275) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152634 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152630 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152618 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C152239 * C152593) *
                       C3415 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152630 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152634 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152618 +
                    ((C116954 + C116953 + C116952) * C152419 * C76068 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152419 * C152170) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[280] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C152419 * C76068 +
             (C114783 + C114784 + C114785) * C152419 * C152170) *
                C4281 -
            ((C115387 + C115388 + C115389) * C152419 * C152170 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C152419 * C76068) *
                C152326) *
               C152280 +
           (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
              C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
              C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                 C152419 * C76068 +
             (C116149 + C116150 + C116151) * C152419 * C152170) *
                C152326 -
            ((C115085 + C115086 + C115087) * C152419 * C152170 +
             (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
              C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
              C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                 C152419 * C76068) *
                C4281) *
               C152287 +
           (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
              C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
              C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                 C152419 * C76068 +
             (C115088 + C115089 + C115090) * C152419 * C152170) *
                C4281 -
            ((C117260 + C117261 + C117262) * C152419 * C152170 +
             (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                 C152419 * C76068) *
                C152326) *
               C3759) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C152419 * C76068 +
             (C115393 + C115394 + C115395) * C152419 * C152170) *
                C152326 -
            ((C114786 + C114787 + C114788) * C152419 * C152170 +
             (C114785 + C114784 + C114783) * C152419 * C76068) *
                C4281) *
               C152280 +
           (((C115087 + C115086 + C115085) * C152419 * C76068 +
             (C115091 + C115092 + C115093) * C152419 * C152170) *
                C4281 -
            ((C116152 + C116153 + C116154) * C152419 * C152170 +
             (C116151 + C116150 + C116149) * C152419 * C76068) *
                C152326) *
               C152287 +
           (((C117262 + C117261 + C117260) * C152419 * C76068 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C115094 + C115095 + C115096) * C152419 * C152170 +
             (C115090 + C115089 + C115088) * C152419 * C76068) *
                C4281) *
               C3759) *
              C152204)) /
        (p * q * std::sqrt(p + q));
    d2ee[281] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152322 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152329 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C4953) *
                       C152280 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C152329 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152322 -
                    ((C118338 + C118339 + C118340) * C152419 * C152170 +
                     (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                      C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                      C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                         C152419 * C76068) *
                        C4953) *
                       C152287 +
                   (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152322 -
                    ((C117260 + C117261 + C117262) * C152419 * C152170 +
                     (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
                      C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
                      C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                         C152419 * C76068) *
                        C152329 +
                    ((C114710 * C1653 + C116737 + C116737 + C152623 * C1677 +
                      C114712 * C10052 + C116738 + C116738 + C152605 * C10058 +
                      C114714 * C26241 + C116739 + C116739 + C114709 * C26245) *
                         C152419 * C76068 +
                     (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
                      C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
                      C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                         C152419 * C152170) *
                        C4953) *
                       C3759) *
                  C152193) /
                 (p * q * std::sqrt(p + q));
    d2ee[282] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C4281 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152326) *
                       C152634 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C152326 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C4281) *
                       C152630 +
                   (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C4281 -
                    ((C117260 + C117261 + C117262) * C152419 * C152170 +
                     (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
                      C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
                      C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                         C152419 * C76068) *
                        C152326) *
                       C152618 +
                   (((C114710 * C2197 + C117457 + C117457 + C152623 * C2205 +
                      C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
                      C114714 * C26938 + C117459 + C117459 + C114709 * C26942) *
                         C152419 * C76068 +
                     (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
                      C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
                      C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                         C152419 * C152170) *
                        C152326 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C4281) *
                       C152593) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C4281 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152326) *
                        C3275 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152326 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C4281) *
                        C152284) *
                       C152624 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152326 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C4281) *
                        C3275 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C4281 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152326) *
                        C152284) *
                       C152609 +
                   ((((C114788 + C114787 + C114786) * C152419 * C76068 +
                      (C114789 + C114790 + C114791) * C152419 * C152170) *
                         C4281 -
                     ((C115820 + C115821 + C115822) * C152419 * C152170 +
                      (C115395 + C115394 + C115393) * C152419 * C76068) *
                         C152326) *
                        C3275 +
                    (((C116154 + C116153 + C116152) * C152419 * C76068 +
                      (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
                       C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
                       C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                          C152419 * C152170) *
                         C152326 -
                     ((C115608 + C115609 + C115610) * C152419 * C152170 +
                      (C115093 + C115092 + C115091) * C152419 * C76068) *
                         C4281) *
                        C152284) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152635 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152632 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C152621 -
                    ((C118550 + C118551 + C118552) * C152419 * C152170 +
                     (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
                      C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
                      C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                         C152419 * C76068) *
                        C152599) *
                       C3275 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C152632 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152635 -
                    ((C118338 + C118339 + C118340) * C152419 * C152170 +
                     (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                      C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                      C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                         C152419 * C76068) *
                        C152621 +
                    ((C114710 * C3129 + C118747 + C118747 + C152623 * C3137 +
                      C114712 * C9344 + C118748 + C118748 + C152605 * C9350 +
                      C114714 * C40067 + C118749 + C118749 + C114709 * C40071) *
                         C152419 * C76068 +
                     (C114710 * C3130 + C118750 + C118750 + C152623 * C3138 +
                      C114712 * C9345 + C118751 + C118751 + C152605 * C9351 +
                      C114714 * C49388 + C118752 + C118752 + C114709 * C49390) *
                         C152419 * C152170) *
                        C152599) *
                       C152284) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[283] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C152322 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152329 +
                     ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                       C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                       C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                          C152419 * C76068 +
                      (C115390 + C115391 + C115392) * C152419 * C152170) *
                         C4953) *
                        C3275 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152329 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C152322 -
                     ((C118338 + C118339 + C118340) * C152419 * C152170 +
                      (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                       C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                       C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                          C152419 * C76068) *
                         C4953) *
                        C152284) *
                       C152527 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152329 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C152322 -
                     ((C115396 + C115397 + C115398) * C152419 * C152170 +
                      (C115392 + C115391 + C115390) * C152419 * C76068) *
                         C4953) *
                        C3275 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C152322 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152329 +
                     ((C118340 + C118339 + C118338) * C152419 * C76068 +
                      (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
                       C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
                       C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                          C152419 * C152170) *
                         C4953) *
                        C152284) *
                       C152204)) /
                 (p * q * std::sqrt(p + q));
    d2ee[284] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C4281 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152326) *
                        C3275 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152326 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C4281) *
                        C152284) *
                       C152624 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152326 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C4281) *
                        C3275 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C4281 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152326) *
                        C152284) *
                       C152609 +
                   ((((C114788 + C114787 + C114786) * C152419 * C76068 +
                      (C114789 + C114790 + C114791) * C152419 * C152170) *
                         C4281 -
                     ((C115820 + C115821 + C115822) * C152419 * C152170 +
                      (C115395 + C115394 + C115393) * C152419 * C76068) *
                         C152326) *
                        C3275 +
                    (((C116154 + C116153 + C116152) * C152419 * C76068 +
                      (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
                       C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
                       C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                          C152419 * C152170) *
                         C152326 -
                     ((C115608 + C115609 + C115610) * C152419 * C152170 +
                      (C115093 + C115092 + C115091) * C152419 * C76068) *
                         C4281) *
                        C152284) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C4281 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152326) *
                       C152634 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C152326 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C4281) *
                       C152630 +
                   (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C4281 -
                    ((C117260 + C117261 + C117262) * C152419 * C152170 +
                     (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
                      C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
                      C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                         C152419 * C76068) *
                        C152326) *
                       C152618 +
                   (((C114710 * C2197 + C117457 + C117457 + C152623 * C2205 +
                      C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
                      C114714 * C26938 + C117459 + C117459 + C114709 * C26942) *
                         C152419 * C76068 +
                     (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
                      C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
                      C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                         C152419 * C152170) *
                        C152326 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C4281) *
                       C152593) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[285] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C1823 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C1824 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C1825 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C152239 * C152593) *
                       C152527 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C1824 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C1823 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C1825 +
                    ((C116954 + C116953 + C116952) * C152419 * C76068 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152419 * C152170) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152541 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152284) *
                       C829 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152541) *
                       C830 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C152541 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152284) *
                       C831 +
                   (((C115610 + C115609 + C115608) * C152419 * C76068 +
                     (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                      C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                      C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                         C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114792 + C114793 + C114794) * C152419 * C152170 +
                     (C114791 + C114790 + C114789) * C152419 * C76068) *
                        C152239 * C152541) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C2359 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C2360 +
                     ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                       C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                       C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                          C152419 * C76068 +
                      (C115390 + C115391 + C115392) * C152419 * C152170) *
                         C152586) *
                        C152541 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C2360 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C2359 -
                     ((C118338 + C118339 + C118340) * C152419 * C152170 +
                      (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                       C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                       C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                          C152419 * C76068) *
                         C152586) *
                        C152284) *
                       C152527 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C2360 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C2359 -
                     ((C115396 + C115397 + C115398) * C152419 * C152170 +
                      (C115392 + C115391 + C115390) * C152419 * C76068) *
                         C152586) *
                        C152541 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C2359 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C2360 +
                     ((C118340 + C118339 + C118338) * C152419 * C76068 +
                      (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
                       C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
                       C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                          C152419 * C152170) *
                         C152586) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[286] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152542 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152326) *
                       C1823 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C152326 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152542) *
                       C1824 +
                   (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152542 -
                    ((C117260 + C117261 + C117262) * C152419 * C152170 +
                     (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
                      C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
                      C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                         C152419 * C76068) *
                        C152326) *
                       C1825 +
                   (((C114710 * C2197 + C117457 + C117457 + C152623 * C2205 +
                      C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
                      C114714 * C26938 + C117459 + C117459 + C114709 * C26942) *
                         C152419 * C76068 +
                     (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
                      C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
                      C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                         C152419 * C152170) *
                        C152326 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C152542) *
                       C152593) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C152542 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152326) *
                        C152541 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152326 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C152542) *
                        C152284) *
                       C353 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152326 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C152542) *
                        C152541 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C152542 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152326) *
                        C152284) *
                       C354 +
                   ((((C114788 + C114787 + C114786) * C152419 * C76068 +
                      (C114789 + C114790 + C114791) * C152419 * C152170) *
                         C152542 -
                     ((C115820 + C115821 + C115822) * C152419 * C152170 +
                      (C115395 + C115394 + C115393) * C152419 * C76068) *
                         C152326) *
                        C152541 +
                    (((C116154 + C116153 + C116152) * C152419 * C76068 +
                      (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
                       C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
                       C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                          C152419 * C152170) *
                         C152326 -
                     ((C115608 + C115609 + C115610) * C152419 * C152170 +
                      (C115093 + C115092 + C115091) * C152419 * C76068) *
                         C152542) *
                        C152284) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C2973 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C2974 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C2975 -
                    ((C118550 + C118551 + C118552) * C152419 * C152170 +
                     (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
                      C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
                      C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                         C152419 * C76068) *
                        C152599) *
                       C152541 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C2974 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C2973 -
                    ((C118338 + C118339 + C118340) * C152419 * C152170 +
                     (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                      C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                      C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                         C152419 * C76068) *
                        C2975 +
                    ((C114710 * C3129 + C118747 + C118747 + C152623 * C3137 +
                      C114712 * C9344 + C118748 + C118748 + C152605 * C9350 +
                      C114714 * C40067 + C118749 + C118749 + C114709 * C40071) *
                         C152419 * C76068 +
                     (C114710 * C3130 + C118750 + C118750 + C152623 * C3138 +
                      C114712 * C9345 + C118751 + C118751 + C152605 * C9351 +
                      C114714 * C49388 + C118752 + C118752 + C114709 * C49390) *
                         C152419 * C152170) *
                        C152599) *
                       C152284) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                   C152419 * C76068 +
               (C114783 + C114784 + C114785) * C152419 * C152170) *
                  C152239 * C152221 * C129 -
              ((C114786 + C114787 + C114788) * C152419 * C152170 +
               (C114785 + C114784 + C114783) * C152419 * C76068) *
                  C152239 * C152221 * C130 +
              ((C114788 + C114787 + C114786) * C152419 * C76068 +
               (C114789 + C114790 + C114791) * C152419 * C152170) *
                  C152239 * C152221 * C131 -
              ((C114792 + C114793 + C114794) * C152419 * C152170 +
               (C114791 + C114790 + C114789) * C152419 * C76068) *
                  C152239 * C152221 * C132 +
              ((C114794 + C114793 + C114792) * C152419 * C76068 +
               (C114710 * C141 + C114756 + C114756 + C152623 * C157 +
                C114712 * C611 + C114757 + C114757 + C152605 * C635 +
                C114714 * C612 + C114758 + C114758 + C114709 * C636) *
                   C152419 * C152170) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                 C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                 C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                    C152419 * C76068 +
                (C114783 + C114784 + C114785) * C152419 * C152170) *
                   C152239 * C152627 -
               ((C115085 + C115086 + C115087) * C152419 * C152170 +
                (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                 C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                 C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                    C152419 * C76068) *
                   C152239 * C152613 +
               ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                 C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                 C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                    C152419 * C76068 +
                (C115088 + C115089 + C115090) * C152419 * C152170) *
                   C152239 * C152583) *
                  C353 +
              (((C115087 + C115086 + C115085) * C152419 * C76068 +
                (C115091 + C115092 + C115093) * C152419 * C152170) *
                   C152239 * C152613 -
               ((C114786 + C114787 + C114788) * C152419 * C152170 +
                (C114785 + C114784 + C114783) * C152419 * C76068) *
                   C152239 * C152627 -
               ((C115094 + C115095 + C115096) * C152419 * C152170 +
                (C115090 + C115089 + C115088) * C152419 * C76068) *
                   C152239 * C152583) *
                  C354 +
              (((C114788 + C114787 + C114786) * C152419 * C76068 +
                (C114789 + C114790 + C114791) * C152419 * C152170) *
                   C152239 * C152627 -
               ((C114714 * C1645 + C115055 + C115055 + C114709 * C1669 +
                 C114712 * C1182 + C115056 + C115056 + C152605 * C1194 +
                 C114710 * C356 + C115057 + C115057 + C152623 * C380) *
                    C152419 * C152170 +
                (C115093 + C115092 + C115091) * C152419 * C76068) *
                   C152239 * C152613 +
               ((C115096 + C115095 + C115094) * C152419 * C76068 +
                (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                 C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                 C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                    C152419 * C152170) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C152628 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C152615 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C152419 * C76068 +
            (C115390 + C115391 + C115392) * C152419 * C152170) *
               C152586) *
              C152221 * C353 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C152615 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C152628 -
           ((C115396 + C115397 + C115398) * C152419 * C152170 +
            (C115392 + C115391 + C115390) * C152419 * C76068) *
               C152586) *
              C152221 * C354 +
          (((C114788 + C114787 + C114786) * C152419 * C76068 +
            (C114789 + C114790 + C114791) * C152419 * C152170) *
               C152628 -
           ((C114714 * C2595 + C115357 + C115357 + C114709 * C2611 +
             C114712 * C608 + C115358 + C115358 + C152605 * C632 +
             C114710 * C601 + C115359 + C115359 + C152623 * C625) *
                C152419 * C152170 +
            (C115395 + C115394 + C115393) * C152419 * C76068) *
               C152615 +
           ((C115398 + C115397 + C115396) * C152419 * C76068 +
            (C114710 * C608 + C115360 + C115360 + C152623 * C632 +
             C114712 * C2595 + C115361 + C115361 + C152605 * C2611 +
             C114714 * C2602 + C115362 + C115362 + C114709 * C2618) *
                C152419 * C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C152239 * C1373 -
           ((C115085 + C115086 + C115087) * C152419 * C152170 +
            (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
             C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
             C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                C152419 * C76068) *
               C152239 * C1374 +
           ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
             C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
             C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                C152419 * C76068 +
            (C115088 + C115089 + C115090) * C152419 * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C115087 + C115086 + C115085) * C152419 * C76068 +
            (C115091 + C115092 + C115093) * C152419 * C152170) *
               C152239 * C1374 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C152239 * C1373 -
           ((C115094 + C115095 + C115096) * C152419 * C152170 +
            (C115090 + C115089 + C115088) * C152419 * C76068) *
               C152239 * C152583) *
              C152609 +
          (((C114788 + C114787 + C114786) * C152419 * C76068 +
            (C114789 + C114790 + C114791) * C152419 * C152170) *
               C152239 * C1373 -
           ((C115608 + C115609 + C115610) * C152419 * C152170 +
            (C115093 + C115092 + C115091) * C152419 * C76068) *
               C152239 * C1374 +
           ((C115096 + C115095 + C115094) * C152419 * C76068 +
            (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
             C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
             C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                C152419 * C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
            C114712 * C604 + C114718 + C114718 + C152605 * C628 +
            C114714 * C605 + C114719 + C114719 + C114709 * C629) *
               C152419 * C76068 +
           (C114783 + C114784 + C114785) * C152419 * C152170) *
              C152239 * C1461 -
          ((C115085 + C115086 + C115087) * C152419 * C152170 +
           (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
            C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
            C114710 * C359 + C115024 + C115024 + C152623 * C383) *
               C152419 * C76068) *
              C152239 * C1462 +
          ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
            C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
            C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
               C152419 * C76068 +
           (C115088 + C115089 + C115090) * C152419 * C152170) *
              C152239 * C1463 -
          ((C114714 * C8037 + C116495 + C116495 + C114709 * C8043 +
            C114712 * C2198 + C116496 + C116496 + C152605 * C2206 +
            C114710 * C1469 + C116497 + C116497 + C152623 * C1485) *
               C152419 * C152170 +
           (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
            C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
            C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
               C152419 * C76068) *
              C152239 * C1464 +
          ((C114710 * C1471 + C116501 + C116501 + C152623 * C1487 +
            C114712 * C8769 + C116502 + C116502 + C152605 * C8775 +
            C114714 * C24963 + C116503 + C116503 + C114709 * C24967) *
               C152419 * C76068 +
           (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
            C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
            C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
               C152419 * C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C152628 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C152615 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C152419 * C76068 +
            (C115390 + C115391 + C115392) * C152419 * C152170) *
               C152586) *
              C1373 +
          (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
             C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
             C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                C152419 * C76068 +
            (C116149 + C116150 + C116151) * C152419 * C152170) *
               C152615 -
           ((C115085 + C115086 + C115087) * C152419 * C152170 +
            (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
             C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
             C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                C152419 * C76068) *
               C152628 -
           ((C114714 * C9345 + C116725 + C116725 + C114709 * C9351 +
             C114712 * C3130 + C116726 + C116726 + C152605 * C3138 +
             C114710 * C1647 + C116727 + C116727 + C152623 * C1671) *
                C152419 * C152170 +
            (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
             C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
             C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                C152419 * C76068) *
               C152586) *
              C1374 +
          (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
             C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
             C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                C152419 * C76068 +
            (C115088 + C115089 + C115090) * C152419 * C152170) *
               C152628 -
           ((C114714 * C10053 + C116731 + C116731 + C114709 * C10059 +
             C114712 * C1654 + C116732 + C116732 + C152605 * C1678 +
             C114710 * C1651 + C116733 + C116733 + C152623 * C1675) *
                C152419 * C152170 +
            (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
             C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
             C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                C152419 * C76068) *
               C152615 +
           ((C114710 * C1653 + C116737 + C116737 + C152623 * C1677 +
             C114712 * C10052 + C116738 + C116738 + C152605 * C10058 +
             C114714 * C26241 + C116739 + C116739 + C114709 * C26245) *
                C152419 * C76068 +
            (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
             C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
             C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                C152419 * C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C2359 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C2360 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C152419 * C76068 +
            (C115390 + C115391 + C115392) * C152419 * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C2360 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C2359 -
           ((C115396 + C115397 + C115398) * C152419 * C152170 +
            (C115392 + C115391 + C115390) * C152419 * C76068) *
               C152586) *
              C152221 * C152609 +
          (((C114788 + C114787 + C114786) * C152419 * C76068 +
            (C114789 + C114790 + C114791) * C152419 * C152170) *
               C2359 -
           ((C115820 + C115821 + C115822) * C152419 * C152170 +
            (C115395 + C115394 + C115393) * C152419 * C76068) *
               C2360 +
           ((C115398 + C115397 + C115396) * C152419 * C76068 +
            (C114710 * C608 + C115360 + C115360 + C152623 * C632 +
             C114712 * C2595 + C115361 + C115361 + C152605 * C2611 +
             C114714 * C2602 + C115362 + C115362 + C114709 * C2618) *
                C152419 * C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C2359 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C2360 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C152419 * C76068 +
            (C115390 + C115391 + C115392) * C152419 * C152170) *
               C152586) *
              C152627 +
          (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
             C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
             C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                C152419 * C76068 +
            (C116149 + C116150 + C116151) * C152419 * C152170) *
               C2360 -
           ((C115085 + C115086 + C115087) * C152419 * C152170 +
            (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
             C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
             C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                C152419 * C76068) *
               C2359 -
           ((C114714 * C9345 + C116725 + C116725 + C114709 * C9351 +
             C114712 * C3130 + C116726 + C116726 + C152605 * C3138 +
             C114710 * C1647 + C116727 + C116727 + C152623 * C1671) *
                C152419 * C152170 +
            (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
             C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
             C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                C152419 * C76068) *
               C152586) *
              C152613 +
          (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
             C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
             C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                C152419 * C76068 +
            (C115088 + C115089 + C115090) * C152419 * C152170) *
               C2359 -
           ((C117260 + C117261 + C117262) * C152419 * C152170 +
            (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
             C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
             C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                C152419 * C76068) *
               C2360 +
           ((C114710 * C1653 + C116737 + C116737 + C152623 * C1677 +
             C114712 * C10052 + C116738 + C116738 + C152605 * C10058 +
             C114714 * C26241 + C116739 + C116739 + C114709 * C26245) *
                C152419 * C76068 +
            (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
             C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
             C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                C152419 * C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
            C114712 * C604 + C114718 + C114718 + C152605 * C628 +
            C114714 * C605 + C114719 + C114719 + C114709 * C629) *
               C152419 * C76068 +
           (C114783 + C114784 + C114785) * C152419 * C152170) *
              C2590 -
          ((C115387 + C115388 + C115389) * C152419 * C152170 +
           (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
            C114712 * C605 + C115325 + C115325 + C152605 * C629 +
            C114710 * C604 + C115326 + C115326 + C152623 * C628) *
               C152419 * C76068) *
              C2591 +
          ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
            C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
            C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
               C152419 * C76068 +
           (C115390 + C115391 + C115392) * C152419 * C152170) *
              C2592 -
          ((C114714 * C17922 + C118021 + C118021 + C114709 * C17928 +
            C114712 * C2600 + C118022 + C118022 + C152605 * C2616 +
            C114710 * C2597 + C118023 + C118023 + C152623 * C2613) *
               C152419 * C152170 +
           (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
            C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
            C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
               C152419 * C76068) *
              C2593 +
          ((C114710 * C2599 + C118027 + C118027 + C152623 * C2615 +
            C114712 * C17921 + C118028 + C118028 + C152605 * C17927 +
            C114714 * C48656 + C118029 + C118029 + C114709 * C48660) *
               C152419 * C76068 +
           (C114710 * C2600 + C118030 + C118030 + C152623 * C2616 +
            C114712 * C17922 + C118031 + C118031 + C152605 * C17928 +
            C114714 * C48657 + C118032 + C118032 + C114709 * C48661) *
               C152419 * C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C152419 * C76068 +
             (C114783 + C114784 + C114785) * C152419 * C152170) *
                C152542 -
            ((C115387 + C115388 + C115389) * C152419 * C152170 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C152419 * C76068) *
                C152326) *
               C1373 +
           (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
              C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
              C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                 C152419 * C76068 +
             (C116149 + C116150 + C116151) * C152419 * C152170) *
                C152326 -
            ((C115085 + C115086 + C115087) * C152419 * C152170 +
             (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
              C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
              C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                 C152419 * C76068) *
                C152542) *
               C1374 +
           (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
              C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
              C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                 C152419 * C76068 +
             (C115088 + C115089 + C115090) * C152419 * C152170) *
                C152542 -
            ((C117260 + C117261 + C117262) * C152419 * C152170 +
             (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                 C152419 * C76068) *
                C152326) *
               C152583) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C152419 * C76068 +
             (C115393 + C115394 + C115395) * C152419 * C152170) *
                C152326 -
            ((C114786 + C114787 + C114788) * C152419 * C152170 +
             (C114785 + C114784 + C114783) * C152419 * C76068) *
                C152542) *
               C1373 +
           (((C115087 + C115086 + C115085) * C152419 * C76068 +
             (C115091 + C115092 + C115093) * C152419 * C152170) *
                C152542 -
            ((C116152 + C116153 + C116154) * C152419 * C152170 +
             (C116151 + C116150 + C116149) * C152419 * C76068) *
                C152326) *
               C1374 +
           (((C117262 + C117261 + C117260) * C152419 * C76068 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C115094 + C115095 + C115096) * C152419 * C152170 +
             (C115090 + C115089 + C115088) * C152419 * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C152542 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C152326) *
              C152221 * C829 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C152326 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C152542) *
              C152221 * C830 +
          (((C114788 + C114787 + C114786) * C152419 * C76068 +
            (C114789 + C114790 + C114791) * C152419 * C152170) *
               C152542 -
           ((C115820 + C115821 + C115822) * C152419 * C152170 +
            (C115395 + C115394 + C115393) * C152419 * C76068) *
               C152326) *
              C152221 * C831 +
          (((C115822 + C115821 + C115820) * C152419 * C76068 +
            (C114710 * C609 + C115811 + C115811 + C152623 * C633 +
             C114712 * C610 + C115812 + C115812 + C152605 * C634 +
             C114714 * C2977 + C115813 + C115813 + C114709 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C114792 + C114793 + C114794) * C152419 * C152170 +
            (C114791 + C114790 + C114789) * C152419 * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C2973 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C2974 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C152419 * C76068 +
            (C115390 + C115391 + C115392) * C152419 * C152170) *
               C2975 -
           ((C118550 + C118551 + C118552) * C152419 * C152170 +
            (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
             C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
             C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                C152419 * C76068) *
               C152599) *
              C152221 * C152527 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C2974 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C2973 -
           ((C115396 + C115397 + C115398) * C152419 * C152170 +
            (C115392 + C115391 + C115390) * C152419 * C76068) *
               C2975 +
           ((C118552 + C118551 + C118550) * C152419 * C76068 +
            (C114710 * C2596 + C118541 + C118541 + C152623 * C2612 +
             C114712 * C2601 + C118542 + C118542 + C152605 * C2617 +
             C114714 * C17923 + C118543 + C118543 + C114709 * C17929) *
                C152419 * C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152627 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152613 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152583) *
                       C353 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152613 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152627 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152583) *
                       C354 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C152627 -
                    ((C114714 * C1645 + C115055 + C115055 + C114709 * C1669 +
                      C114712 * C1182 + C115056 + C115056 + C152605 * C1194 +
                      C114710 * C356 + C115057 + C115057 + C152623 * C380) *
                         C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152613 +
                    ((C115096 + C115095 + C115094) * C152419 * C76068 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152419 * C152170) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C152419 * C76068 +
                    (C114783 + C114784 + C114785) * C152419 * C152170) *
                       C152239 * C152221 * C129 -
                   ((C114786 + C114787 + C114788) * C152419 * C152170 +
                    (C114785 + C114784 + C114783) * C152419 * C76068) *
                       C152239 * C152221 * C130 +
                   ((C114788 + C114787 + C114786) * C152419 * C76068 +
                    (C114789 + C114790 + C114791) * C152419 * C152170) *
                       C152239 * C152221 * C131 -
                   ((C114792 + C114793 + C114794) * C152419 * C152170 +
                    (C114791 + C114790 + C114789) * C152419 * C76068) *
                       C152239 * C152221 * C132 +
                   ((C114794 + C114793 + C114792) * C152419 * C76068 +
                    (C114710 * C141 + C114756 + C114756 + C152623 * C157 +
                     C114712 * C611 + C114757 + C114757 + C152605 * C635 +
                     C114714 * C612 + C114758 + C114758 + C114709 * C636) *
                        C152419 * C152170) *
                       C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C1373 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C1374 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152583) *
                       C152624 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C1374 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C1373 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152583) *
                       C152609 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C1373 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C1374 +
                    ((C115096 + C115095 + C115094) * C152419 * C76068 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152419 * C152170) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C152419 * C76068 +
                    (C114783 + C114784 + C114785) * C152419 * C152170) *
                       C152239 * C1461 -
                   ((C115085 + C115086 + C115087) * C152419 * C152170 +
                    (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                     C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                     C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                        C152419 * C76068) *
                       C152239 * C1462 +
                   ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                     C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                     C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                        C152419 * C76068 +
                    (C115088 + C115089 + C115090) * C152419 * C152170) *
                       C152239 * C1463 -
                   ((C114714 * C8037 + C116495 + C116495 + C114709 * C8043 +
                     C114712 * C2198 + C116496 + C116496 + C152605 * C2206 +
                     C114710 * C1469 + C116497 + C116497 + C152623 * C1485) *
                        C152419 * C152170 +
                    (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                     C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                     C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                        C152419 * C76068) *
                       C152239 * C1464 +
                   ((C114710 * C1471 + C116501 + C116501 + C152623 * C1487 +
                     C114712 * C8769 + C116502 + C116502 + C152605 * C8775 +
                     C114714 * C24963 + C116503 + C116503 + C114709 * C24967) *
                        C152419 * C76068 +
                    (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
                     C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
                     C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
                        C152419 * C152170) *
                       C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C2359 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C2360 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C152586) *
                       C152221 * C152624 +
                   (((C115389 + C115388 + C115387) * C152419 * C76068 +
                     (C115393 + C115394 + C115395) * C152419 * C152170) *
                        C2360 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C2359 -
                    ((C115396 + C115397 + C115398) * C152419 * C152170 +
                     (C115392 + C115391 + C115390) * C152419 * C76068) *
                        C152586) *
                       C152221 * C152609 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C2359 -
                    ((C115820 + C115821 + C115822) * C152419 * C152170 +
                     (C115395 + C115394 + C115393) * C152419 * C76068) *
                        C2360 +
                    ((C115398 + C115397 + C115396) * C152419 * C76068 +
                     (C114710 * C608 + C115360 + C115360 + C152623 * C632 +
                      C114712 * C2595 + C115361 + C115361 + C152605 * C2611 +
                      C114714 * C2602 + C115362 + C115362 + C114709 * C2618) *
                         C152419 * C152170) *
                        C152586) *
                       C152221 * C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C2359 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C2360 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C152586) *
                       C152627 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C2360 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C2359 -
                    ((C114714 * C9345 + C116725 + C116725 + C114709 * C9351 +
                      C114712 * C3130 + C116726 + C116726 + C152605 * C3138 +
                      C114710 * C1647 + C116727 + C116727 + C152623 * C1671) *
                         C152419 * C152170 +
                     (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                      C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                      C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                         C152419 * C76068) *
                        C152586) *
                       C152613 +
                   (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C2359 -
                    ((C117260 + C117261 + C117262) * C152419 * C152170 +
                     (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
                      C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
                      C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                         C152419 * C76068) *
                        C2360 +
                    ((C114710 * C1653 + C116737 + C116737 + C152623 * C1677 +
                      C114712 * C10052 + C116738 + C116738 + C152605 * C10058 +
                      C114714 * C26241 + C116739 + C116739 + C114709 * C26245) *
                         C152419 * C76068 +
                     (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
                      C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
                      C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                         C152419 * C152170) *
                        C152586) *
                       C152583) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[290] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C4281 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152326) *
                        C152541 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152326 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C4281) *
                        C152284) *
                       C152198 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152326 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C4281) *
                        C152541 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C4281 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152326) *
                        C152284) *
                       C152207 +
                   ((((C114788 + C114787 + C114786) * C152419 * C76068 +
                      (C114789 + C114790 + C114791) * C152419 * C152170) *
                         C4281 -
                     ((C115820 + C115821 + C115822) * C152419 * C152170 +
                      (C115395 + C115394 + C115393) * C152419 * C76068) *
                         C152326) *
                        C152541 +
                    (((C116154 + C116153 + C116152) * C152419 * C76068 +
                      (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
                       C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
                       C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                          C152419 * C152170) *
                         C152326 -
                     ((C115608 + C115609 + C115610) * C152419 * C152170 +
                      (C115093 + C115092 + C115091) * C152419 * C76068) *
                         C4281) *
                        C152284) *
                       C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[291] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C152322 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152329 +
                     ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                       C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                       C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                          C152419 * C76068 +
                      (C115390 + C115391 + C115392) * C152419 * C152170) *
                         C4953) *
                        C152541 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152329 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C152322 -
                     ((C118338 + C118339 + C118340) * C152419 * C152170 +
                      (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                       C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                       C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                          C152419 * C76068) *
                         C4953) *
                        C152284) *
                       C3415 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152329 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C152322 -
                     ((C115396 + C115397 + C115398) * C152419 * C152170 +
                      (C115392 + C115391 + C115390) * C152419 * C76068) *
                         C4953) *
                        C152541 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C152322 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152329 +
                     ((C118340 + C118339 + C118338) * C152419 * C76068 +
                      (C114710 * C1646 + C118329 + C118329 + C152623 * C1670 +
                       C114712 * C3131 + C118330 + C118330 + C152605 * C3139 +
                       C114714 * C9346 + C118331 + C118331 + C114709 * C9352) *
                          C152419 * C152170) *
                         C4953) *
                        C152284) *
                       C152204)) /
                 (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C152419 * C76068 +
             (C114783 + C114784 + C114785) * C152419 * C152170) *
                C4281 -
            ((C115387 + C115388 + C115389) * C152419 * C152170 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C152419 * C76068) *
                C152326) *
               C152627 +
           (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
              C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
              C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                 C152419 * C76068 +
             (C116149 + C116150 + C116151) * C152419 * C152170) *
                C152326 -
            ((C115085 + C115086 + C115087) * C152419 * C152170 +
             (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
              C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
              C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                 C152419 * C76068) *
                C4281) *
               C152613 +
           (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
              C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
              C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                 C152419 * C76068 +
             (C115088 + C115089 + C115090) * C152419 * C152170) *
                C4281 -
            ((C117260 + C117261 + C117262) * C152419 * C152170 +
             (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                 C152419 * C76068) *
                C152326) *
               C152583) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C152419 * C76068 +
             (C115393 + C115394 + C115395) * C152419 * C152170) *
                C152326 -
            ((C114786 + C114787 + C114788) * C152419 * C152170 +
             (C114785 + C114784 + C114783) * C152419 * C76068) *
                C4281) *
               C152627 +
           (((C115087 + C115086 + C115085) * C152419 * C76068 +
             (C115091 + C115092 + C115093) * C152419 * C152170) *
                C4281 -
            ((C116152 + C116153 + C116154) * C152419 * C152170 +
             (C116151 + C116150 + C116149) * C152419 * C76068) *
                C152326) *
               C152613 +
           (((C117262 + C117261 + C117260) * C152419 * C76068 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C115094 + C115095 + C115096) * C152419 * C152170 +
             (C115090 + C115089 + C115088) * C152419 * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C4281 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C152326) *
              C152221 * C152633 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C152326 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C114788 + C114787 + C114786) * C152419 * C76068 +
            (C114789 + C114790 + C114791) * C152419 * C152170) *
               C4281 -
           ((C115820 + C115821 + C115822) * C152419 * C152170 +
            (C115395 + C115394 + C115393) * C152419 * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C115822 + C115821 + C115820) * C152419 * C76068 +
            (C114710 * C609 + C115811 + C115811 + C152623 * C633 +
             C114712 * C610 + C115812 + C115812 + C152605 * C634 +
             C114714 * C2977 + C115813 + C115813 + C114709 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C114792 + C114793 + C114794) * C152419 * C152170 +
            (C114791 + C114790 + C114789) * C152419 * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C152635 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C152632 +
           ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
             C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
             C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                C152419 * C76068 +
            (C115390 + C115391 + C115392) * C152419 * C152170) *
               C152621 -
           ((C118550 + C118551 + C118552) * C152419 * C152170 +
            (C114714 * C17921 + C118024 + C118024 + C114709 * C17927 +
             C114712 * C2599 + C118025 + C118025 + C152605 * C2615 +
             C114710 * C2598 + C118026 + C118026 + C152623 * C2614) *
                C152419 * C76068) *
               C152599) *
              C152221 * C3415 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C152632 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C152635 -
           ((C115396 + C115397 + C115398) * C152419 * C152170 +
            (C115392 + C115391 + C115390) * C152419 * C76068) *
               C152621 +
           ((C118552 + C118551 + C118550) * C152419 * C76068 +
            (C114710 * C2596 + C118541 + C118541 + C152623 * C2612 +
             C114712 * C2601 + C118542 + C118542 + C152605 * C2617 +
             C114714 * C17923 + C118543 + C118543 + C114709 * C17929) *
                C152419 * C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152322 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152329 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C4953) *
                       C152221 * C152198 +
                   (((C115389 + C115388 + C115387) * C152419 * C76068 +
                     (C115393 + C115394 + C115395) * C152419 * C152170) *
                        C152329 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152322 -
                    ((C115396 + C115397 + C115398) * C152419 * C152170 +
                     (C115392 + C115391 + C115390) * C152419 * C76068) *
                        C4953) *
                       C152221 * C152207 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152322 -
                    ((C115820 + C115821 + C115822) * C152419 * C152170 +
                     (C115395 + C115394 + C115393) * C152419 * C76068) *
                        C152329 +
                    ((C115398 + C115397 + C115396) * C152419 * C76068 +
                     (C114710 * C608 + C115360 + C115360 + C152623 * C632 +
                      C114712 * C2595 + C115361 + C115361 + C152605 * C2611 +
                      C114714 * C2602 + C115362 + C115362 + C114709 * C2618) *
                         C152419 * C152170) *
                        C4953) *
                       C152221 * C3762)) /
                 (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C4281 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C152326) *
              C152221 * C152633 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C152326 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C4281) *
              C152221 * C152626 +
          (((C114788 + C114787 + C114786) * C152419 * C76068 +
            (C114789 + C114790 + C114791) * C152419 * C152170) *
               C4281 -
           ((C115820 + C115821 + C115822) * C152419 * C152170 +
            (C115395 + C115394 + C115393) * C152419 * C76068) *
               C152326) *
              C152221 * C152611 +
          (((C115822 + C115821 + C115820) * C152419 * C76068 +
            (C114710 * C609 + C115811 + C115811 + C152623 * C633 +
             C114712 * C610 + C115812 + C115812 + C152605 * C634 +
             C114714 * C2977 + C115813 + C115813 + C114709 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C114792 + C114793 + C114794) * C152419 * C152170 +
            (C114791 + C114790 + C114789) * C152419 * C76068) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C152419 * C76068 +
             (C114783 + C114784 + C114785) * C152419 * C152170) *
                C4281 -
            ((C115387 + C115388 + C115389) * C152419 * C152170 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C152419 * C76068) *
                C152326) *
               C152627 +
           (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
              C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
              C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                 C152419 * C76068 +
             (C116149 + C116150 + C116151) * C152419 * C152170) *
                C152326 -
            ((C115085 + C115086 + C115087) * C152419 * C152170 +
             (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
              C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
              C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                 C152419 * C76068) *
                C4281) *
               C152613 +
           (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
              C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
              C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                 C152419 * C76068 +
             (C115088 + C115089 + C115090) * C152419 * C152170) *
                C4281 -
            ((C117260 + C117261 + C117262) * C152419 * C152170 +
             (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                 C152419 * C76068) *
                C152326) *
               C152583) *
              C3415 +
          ((((C115389 + C115388 + C115387) * C152419 * C76068 +
             (C115393 + C115394 + C115395) * C152419 * C152170) *
                C152326 -
            ((C114786 + C114787 + C114788) * C152419 * C152170 +
             (C114785 + C114784 + C114783) * C152419 * C76068) *
                C4281) *
               C152627 +
           (((C115087 + C115086 + C115085) * C152419 * C76068 +
             (C115091 + C115092 + C115093) * C152419 * C152170) *
                C4281 -
            ((C116152 + C116153 + C116154) * C152419 * C152170 +
             (C116151 + C116150 + C116149) * C152419 * C76068) *
                C152326) *
               C152613 +
           (((C117262 + C117261 + C117260) * C152419 * C76068 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C115094 + C115095 + C115096) * C152419 * C152170 +
             (C115090 + C115089 + C115088) * C152419 * C76068) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152541 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152284) *
                       C829 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152541) *
                       C830 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C152541 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152284) *
                       C831 +
                   (((C115610 + C115609 + C115608) * C152419 * C76068 +
                     (C114710 * C364 + C115599 + C115599 + C152623 * C388 +
                      C114712 * C1183 + C115600 + C115600 + C152605 * C1195 +
                      C114714 * C2821 + C115601 + C115601 + C114709 * C2823) *
                         C152419 * C152170) *
                        C152239 * C152284 -
                    ((C114792 + C114793 + C114794) * C152419 * C152170 +
                     (C114791 + C114790 + C114789) * C152419 * C76068) *
                        C152239 * C152541) *
                       C152587)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C1823 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C1824 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C1825 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C152239 * C152593) *
                       C152527 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C1824 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C1823 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C1825 +
                    ((C116954 + C116953 + C116952) * C152419 * C76068 +
                     (C114710 * C1468 + C116943 + C116943 + C152623 * C1484 +
                      C114712 * C2199 + C116944 + C116944 + C152605 * C2207 +
                      C114714 * C8038 + C116945 + C116945 + C114709 * C8044) *
                         C152419 * C152170) *
                        C152239 * C152593) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[296] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                       C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                       C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                          C152419 * C76068 +
                      (C114783 + C114784 + C114785) * C152419 * C152170) *
                         C152542 -
                     ((C115387 + C115388 + C115389) * C152419 * C152170 +
                      (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                       C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                       C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                          C152419 * C76068) *
                         C152326) *
                        C152541 +
                    (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                       C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                       C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                          C152419 * C76068 +
                      (C116149 + C116150 + C116151) * C152419 * C152170) *
                         C152326 -
                     ((C115085 + C115086 + C115087) * C152419 * C152170 +
                      (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                       C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                       C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                          C152419 * C76068) *
                         C152542) *
                        C152284) *
                       C353 +
                   ((((C115389 + C115388 + C115387) * C152419 * C76068 +
                      (C115393 + C115394 + C115395) * C152419 * C152170) *
                         C152326 -
                     ((C114786 + C114787 + C114788) * C152419 * C152170 +
                      (C114785 + C114784 + C114783) * C152419 * C76068) *
                         C152542) *
                        C152541 +
                    (((C115087 + C115086 + C115085) * C152419 * C76068 +
                      (C115091 + C115092 + C115093) * C152419 * C152170) *
                         C152542 -
                     ((C116152 + C116153 + C116154) * C152419 * C152170 +
                      (C116151 + C116150 + C116149) * C152419 * C76068) *
                         C152326) *
                        C152284) *
                       C354 +
                   ((((C114788 + C114787 + C114786) * C152419 * C76068 +
                      (C114789 + C114790 + C114791) * C152419 * C152170) *
                         C152542 -
                     ((C115820 + C115821 + C115822) * C152419 * C152170 +
                      (C115395 + C115394 + C115393) * C152419 * C76068) *
                         C152326) *
                        C152541 +
                    (((C116154 + C116153 + C116152) * C152419 * C76068 +
                      (C114710 * C1182 + C116134 + C116134 + C152623 * C1194 +
                       C114712 * C1645 + C116135 + C116135 + C152605 * C1669 +
                       C114714 * C3132 + C116136 + C116136 + C114709 * C3140) *
                          C152419 * C152170) *
                         C152326 -
                     ((C115608 + C115609 + C115610) * C152419 * C152170 +
                      (C115093 + C115092 + C115091) * C152419 * C76068) *
                         C152542) *
                        C152284) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152542 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152326) *
                       C1823 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C152326 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152542) *
                       C1824 +
                   (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152542 -
                    ((C117260 + C117261 + C117262) * C152419 * C152170 +
                     (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
                      C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
                      C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                         C152419 * C76068) *
                        C152326) *
                       C1825 +
                   (((C114710 * C2197 + C117457 + C117457 + C152623 * C2205 +
                      C114712 * C8036 + C117458 + C117458 + C152605 * C8042 +
                      C114714 * C26938 + C117459 + C117459 + C114709 * C26942) *
                         C152419 * C76068 +
                     (C114710 * C2198 + C117460 + C117460 + C152623 * C2206 +
                      C114712 * C8037 + C117461 + C117461 + C152605 * C8043 +
                      C114714 * C26939 + C117462 + C117462 + C114709 * C26943) *
                         C152419 * C152170) *
                        C152326 -
                    ((C116952 + C116953 + C116954) * C152419 * C152170 +
                     (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                      C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                      C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                         C152419 * C76068) *
                        C152542) *
                       C152593) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[297] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152627 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152613 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152583) *
                       C353 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152613 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152627 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152583) *
                       C354 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C152627 -
                    ((C114714 * C1645 + C115055 + C115055 + C114709 * C1669 +
                      C114712 * C1182 + C115056 + C115056 + C152605 * C1194 +
                      C114710 * C356 + C115057 + C115057 + C152623 * C380) *
                         C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152613 +
                    ((C115096 + C115095 + C115094) * C152419 * C76068 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152419 * C152170) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C152419 * C76068 +
                    (C114783 + C114784 + C114785) * C152419 * C152170) *
                       C152239 * C152221 * C129 -
                   ((C114786 + C114787 + C114788) * C152419 * C152170 +
                    (C114785 + C114784 + C114783) * C152419 * C76068) *
                       C152239 * C152221 * C130 +
                   ((C114788 + C114787 + C114786) * C152419 * C76068 +
                    (C114789 + C114790 + C114791) * C152419 * C152170) *
                       C152239 * C152221 * C131 -
                   ((C114792 + C114793 + C114794) * C152419 * C152170 +
                    (C114791 + C114790 + C114789) * C152419 * C76068) *
                       C152239 * C152221 * C132 +
                   ((C114794 + C114793 + C114792) * C152419 * C76068 +
                    (C114710 * C141 + C114756 + C114756 + C152623 * C157 +
                     C114712 * C611 + C114757 + C114757 + C152605 * C635 +
                     C114714 * C612 + C114758 + C114758 + C114709 * C636) *
                        C152419 * C152170) *
                       C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152628 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152615 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C152586) *
                       C152221 * C353 +
                   (((C115389 + C115388 + C115387) * C152419 * C76068 +
                     (C115393 + C115394 + C115395) * C152419 * C152170) *
                        C152615 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152628 -
                    ((C115396 + C115397 + C115398) * C152419 * C152170 +
                     (C115392 + C115391 + C115390) * C152419 * C76068) *
                        C152586) *
                       C152221 * C354 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152628 -
                    ((C114714 * C2595 + C115357 + C115357 + C114709 * C2611 +
                      C114712 * C608 + C115358 + C115358 + C152605 * C632 +
                      C114710 * C601 + C115359 + C115359 + C152623 * C625) *
                         C152419 * C152170 +
                     (C115395 + C115394 + C115393) * C152419 * C76068) *
                        C152615 +
                    ((C115398 + C115397 + C115396) * C152419 * C76068 +
                     (C114710 * C608 + C115360 + C115360 + C152623 * C632 +
                      C114712 * C2595 + C115361 + C115361 + C152605 * C2611 +
                      C114714 * C2602 + C115362 + C115362 + C114709 * C2618) *
                         C152419 * C152170) *
                        C152586) *
                       C152221 * C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C1373 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C1374 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152583) *
                       C152624 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C1374 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C1373 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152583) *
                       C152609 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C1373 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C1374 +
                    ((C115096 + C115095 + C115094) * C152419 * C76068 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152419 * C152170) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C152419 * C76068 +
                    (C114783 + C114784 + C114785) * C152419 * C152170) *
                       C152239 * C1461 -
                   ((C115085 + C115086 + C115087) * C152419 * C152170 +
                    (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                     C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                     C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                        C152419 * C76068) *
                       C152239 * C1462 +
                   ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                     C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                     C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                        C152419 * C76068 +
                    (C115088 + C115089 + C115090) * C152419 * C152170) *
                       C152239 * C1463 -
                   ((C114714 * C8037 + C116495 + C116495 + C114709 * C8043 +
                     C114712 * C2198 + C116496 + C116496 + C152605 * C2206 +
                     C114710 * C1469 + C116497 + C116497 + C152623 * C1485) *
                        C152419 * C152170 +
                    (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                     C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                     C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                        C152419 * C76068) *
                       C152239 * C1464 +
                   ((C114710 * C1471 + C116501 + C116501 + C152623 * C1487 +
                     C114712 * C8769 + C116502 + C116502 + C152605 * C8775 +
                     C114714 * C24963 + C116503 + C116503 + C114709 * C24967) *
                        C152419 * C76068 +
                    (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
                     C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
                     C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
                        C152419 * C152170) *
                       C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152628 -
                    ((C115387 + C115388 + C115389) * C152419 * C152170 +
                     (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
                      C114712 * C605 + C115325 + C115325 + C152605 * C629 +
                      C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                         C152419 * C76068) *
                        C152615 +
                    ((C114710 * C605 + C115327 + C115327 + C152623 * C629 +
                      C114712 * C2598 + C115328 + C115328 + C152605 * C2614 +
                      C114714 * C2599 + C115329 + C115329 + C114709 * C2615) *
                         C152419 * C76068 +
                     (C115390 + C115391 + C115392) * C152419 * C152170) *
                        C152586) *
                       C1373 +
                   (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
                      C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
                      C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                         C152419 * C76068 +
                     (C116149 + C116150 + C116151) * C152419 * C152170) *
                        C152615 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152628 -
                    ((C114714 * C9345 + C116725 + C116725 + C114709 * C9351 +
                      C114712 * C3130 + C116726 + C116726 + C152605 * C3138 +
                      C114710 * C1647 + C116727 + C116727 + C152623 * C1671) *
                         C152419 * C152170 +
                     (C114714 * C9344 + C116728 + C116728 + C114709 * C9350 +
                      C114712 * C3129 + C116729 + C116729 + C152605 * C3137 +
                      C114710 * C1648 + C116730 + C116730 + C152623 * C1672) *
                         C152419 * C76068) *
                        C152586) *
                       C1374 +
                   (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152628 -
                    ((C114714 * C10053 + C116731 + C116731 + C114709 * C10059 +
                      C114712 * C1654 + C116732 + C116732 + C152605 * C1678 +
                      C114710 * C1651 + C116733 + C116733 + C152623 * C1675) *
                         C152419 * C152170 +
                     (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
                      C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
                      C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                         C152419 * C76068) *
                        C152615 +
                    ((C114710 * C1653 + C116737 + C116737 + C152623 * C1677 +
                      C114712 * C10052 + C116738 + C116738 + C152605 * C10058 +
                      C114714 * C26241 + C116739 + C116739 + C114709 * C26245) *
                         C152419 * C76068 +
                     (C114710 * C1654 + C116740 + C116740 + C152623 * C1678 +
                      C114712 * C10053 + C116741 + C116741 + C152605 * C10059 +
                      C114714 * C26242 + C116742 + C116742 + C114709 * C26246) *
                         C152419 * C152170) *
                        C152586) *
                       C152583) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
             C114712 * C604 + C114718 + C114718 + C152605 * C628 +
             C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                C152419 * C76068 +
            (C114783 + C114784 + C114785) * C152419 * C152170) *
               C152542 -
           ((C115387 + C115388 + C115389) * C152419 * C152170 +
            (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
             C114712 * C605 + C115325 + C115325 + C152605 * C629 +
             C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                C152419 * C76068) *
               C152326) *
              C152221 * C829 +
          (((C115389 + C115388 + C115387) * C152419 * C76068 +
            (C115393 + C115394 + C115395) * C152419 * C152170) *
               C152326 -
           ((C114786 + C114787 + C114788) * C152419 * C152170 +
            (C114785 + C114784 + C114783) * C152419 * C76068) *
               C152542) *
              C152221 * C830 +
          (((C114788 + C114787 + C114786) * C152419 * C76068 +
            (C114789 + C114790 + C114791) * C152419 * C152170) *
               C152542 -
           ((C115820 + C115821 + C115822) * C152419 * C152170 +
            (C115395 + C115394 + C115393) * C152419 * C76068) *
               C152326) *
              C152221 * C831 +
          (((C115822 + C115821 + C115820) * C152419 * C76068 +
            (C114710 * C609 + C115811 + C115811 + C152623 * C633 +
             C114712 * C610 + C115812 + C115812 + C152605 * C634 +
             C114714 * C2977 + C115813 + C115813 + C114709 * C2979) *
                C152419 * C152170) *
               C152326 -
           ((C114792 + C114793 + C114794) * C152419 * C152170 +
            (C114791 + C114790 + C114789) * C152419 * C76068) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
              C114712 * C604 + C114718 + C114718 + C152605 * C628 +
              C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                 C152419 * C76068 +
             (C114783 + C114784 + C114785) * C152419 * C152170) *
                C152542 -
            ((C115387 + C115388 + C115389) * C152419 * C152170 +
             (C114714 * C2598 + C115324 + C115324 + C114709 * C2614 +
              C114712 * C605 + C115325 + C115325 + C152605 * C629 +
              C114710 * C604 + C115326 + C115326 + C152623 * C628) *
                 C152419 * C76068) *
                C152326) *
               C1373 +
           (((C114710 * C1179 + C116113 + C116113 + C152623 * C1191 +
              C114712 * C1648 + C116114 + C116114 + C152605 * C1672 +
              C114714 * C3129 + C116115 + C116115 + C114709 * C3137) *
                 C152419 * C76068 +
             (C116149 + C116150 + C116151) * C152419 * C152170) *
                C152326 -
            ((C115085 + C115086 + C115087) * C152419 * C152170 +
             (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
              C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
              C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                 C152419 * C76068) *
                C152542) *
               C1374 +
           (((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
              C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
              C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                 C152419 * C76068 +
             (C115088 + C115089 + C115090) * C152419 * C152170) *
                C152542 -
            ((C117260 + C117261 + C117262) * C152419 * C152170 +
             (C114714 * C10052 + C116734 + C116734 + C114709 * C10058 +
              C114712 * C1653 + C116735 + C116735 + C152605 * C1677 +
              C114710 * C1652 + C116736 + C116736 + C152623 * C1676) *
                 C152419 * C76068) *
                C152326) *
               C152583) *
              C152527 +
          ((((C115389 + C115388 + C115387) * C152419 * C76068 +
             (C115393 + C115394 + C115395) * C152419 * C152170) *
                C152326 -
            ((C114786 + C114787 + C114788) * C152419 * C152170 +
             (C114785 + C114784 + C114783) * C152419 * C76068) *
                C152542) *
               C1373 +
           (((C115087 + C115086 + C115085) * C152419 * C76068 +
             (C115091 + C115092 + C115093) * C152419 * C152170) *
                C152542 -
            ((C116152 + C116153 + C116154) * C152419 * C152170 +
             (C116151 + C116150 + C116149) * C152419 * C76068) *
                C152326) *
               C1374 +
           (((C117262 + C117261 + C117260) * C152419 * C76068 +
             (C114710 * C1650 + C117251 + C117251 + C152623 * C1674 +
              C114712 * C1655 + C117252 + C117252 + C152605 * C1679 +
              C114714 * C10054 + C117253 + C117253 + C114709 * C10060) *
                 C152419 * C152170) *
                C152326 -
            ((C115094 + C115095 + C115096) * C152419 * C152170 +
             (C115090 + C115089 + C115088) * C152419 * C76068) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C152419 * C76068 +
                    (C114783 + C114784 + C114785) * C152419 * C152170) *
                       C152239 * C152221 * C129 -
                   ((C114786 + C114787 + C114788) * C152419 * C152170 +
                    (C114785 + C114784 + C114783) * C152419 * C76068) *
                       C152239 * C152221 * C130 +
                   ((C114788 + C114787 + C114786) * C152419 * C76068 +
                    (C114789 + C114790 + C114791) * C152419 * C152170) *
                       C152239 * C152221 * C131 -
                   ((C114792 + C114793 + C114794) * C152419 * C152170 +
                    (C114791 + C114790 + C114789) * C152419 * C76068) *
                       C152239 * C152221 * C132 +
                   ((C114794 + C114793 + C114792) * C152419 * C76068 +
                    (C114710 * C141 + C114756 + C114756 + C152623 * C157 +
                     C114712 * C611 + C114757 + C114757 + C152605 * C635 +
                     C114714 * C612 + C114758 + C114758 + C114709 * C636) *
                        C152419 * C152170) *
                       C152239 * C152221 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C152627 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C152613 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152583) *
                       C353 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C152613 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C152627 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152583) *
                       C354 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C152627 -
                    ((C114714 * C1645 + C115055 + C115055 + C114709 * C1669 +
                      C114712 * C1182 + C115056 + C115056 + C152605 * C1194 +
                      C114710 * C356 + C115057 + C115057 + C152623 * C380) *
                         C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C152613 +
                    ((C115096 + C115095 + C115094) * C152419 * C76068 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152419 * C152170) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                      C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                      C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                         C152419 * C76068 +
                     (C114783 + C114784 + C114785) * C152419 * C152170) *
                        C152239 * C1373 -
                    ((C115085 + C115086 + C115087) * C152419 * C152170 +
                     (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                      C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                      C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                         C152419 * C76068) *
                        C152239 * C1374 +
                    ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                      C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                      C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                         C152419 * C76068 +
                     (C115088 + C115089 + C115090) * C152419 * C152170) *
                        C152239 * C152583) *
                       C152624 +
                   (((C115087 + C115086 + C115085) * C152419 * C76068 +
                     (C115091 + C115092 + C115093) * C152419 * C152170) *
                        C152239 * C1374 -
                    ((C114786 + C114787 + C114788) * C152419 * C152170 +
                     (C114785 + C114784 + C114783) * C152419 * C76068) *
                        C152239 * C1373 -
                    ((C115094 + C115095 + C115096) * C152419 * C152170 +
                     (C115090 + C115089 + C115088) * C152419 * C76068) *
                        C152239 * C152583) *
                       C152609 +
                   (((C114788 + C114787 + C114786) * C152419 * C76068 +
                     (C114789 + C114790 + C114791) * C152419 * C152170) *
                        C152239 * C1373 -
                    ((C115608 + C115609 + C115610) * C152419 * C152170 +
                     (C115093 + C115092 + C115091) * C152419 * C76068) *
                        C152239 * C1374 +
                    ((C115096 + C115095 + C115094) * C152419 * C76068 +
                     (C114710 * C363 + C115058 + C115058 + C152623 * C387 +
                      C114712 * C1649 + C115059 + C115059 + C152605 * C1673 +
                      C114714 * C1656 + C115060 + C115060 + C114709 * C1680) *
                         C152419 * C152170) *
                        C152239 * C152583) *
                       C152577)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C114710 * C136 + C114717 + C114717 + C152623 * C152 +
                     C114712 * C604 + C114718 + C114718 + C152605 * C628 +
                     C114714 * C605 + C114719 + C114719 + C114709 * C629) *
                        C152419 * C76068 +
                    (C114783 + C114784 + C114785) * C152419 * C152170) *
                       C152239 * C1461 -
                   ((C115085 + C115086 + C115087) * C152419 * C152170 +
                    (C114714 * C1648 + C115022 + C115022 + C114709 * C1672 +
                     C114712 * C1179 + C115023 + C115023 + C152605 * C1191 +
                     C114710 * C359 + C115024 + C115024 + C152623 * C383) *
                        C152419 * C76068) *
                       C152239 * C1462 +
                   ((C114710 * C360 + C115025 + C115025 + C152623 * C384 +
                     C114712 * C1652 + C115026 + C115026 + C152605 * C1676 +
                     C114714 * C1653 + C115027 + C115027 + C114709 * C1677) *
                        C152419 * C76068 +
                    (C115088 + C115089 + C115090) * C152419 * C152170) *
                       C152239 * C1463 -
                   ((C114714 * C8037 + C116495 + C116495 + C114709 * C8043 +
                     C114712 * C2198 + C116496 + C116496 + C152605 * C2206 +
                     C114710 * C1469 + C116497 + C116497 + C152623 * C1485) *
                        C152419 * C152170 +
                    (C114714 * C8036 + C116498 + C116498 + C114709 * C8042 +
                     C114712 * C2197 + C116499 + C116499 + C152605 * C2205 +
                     C114710 * C1470 + C116500 + C116500 + C152623 * C1486) *
                        C152419 * C76068) *
                       C152239 * C1464 +
                   ((C114710 * C1471 + C116501 + C116501 + C152623 * C1487 +
                     C114712 * C8769 + C116502 + C116502 + C152605 * C8775 +
                     C114714 * C24963 + C116503 + C116503 + C114709 * C24967) *
                        C152419 * C76068 +
                    (C114710 * C1472 + C116504 + C116504 + C152623 * C1488 +
                     C114712 * C8770 + C116505 + C116505 + C152605 * C8776 +
                     C114714 * C24964 + C116506 + C116506 + C114709 * C24968) *
                        C152419 * C152170) *
                       C152239 * C1465) *
                  C152193) /
                     (p * q * std::sqrt(p + q));
    d2ee[300] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152280 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152287 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C3759) *
              C152198 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152287 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152280 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C3759) *
              C152207 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152280 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152287 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152280 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152287 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C3759) *
              C152198 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152287 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152280 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C3759) *
              C152207 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152280 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152287 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152280 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C152287 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152542 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C3759) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C152280 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152287 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152280 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152287 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C152542 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C3759) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C152280 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152287 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152634 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152630 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152618 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152239 * C152593) *
              C3415 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152630 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152634 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152618 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 * C126) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C3275 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152284) *
              C152633 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152284 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C3275) *
              C152626 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C3275 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152284) *
              C152611 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
               C152239 * C152284 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
               C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152628 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152615 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152586) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152615 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152628 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C152586) *
               C152284) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152615 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152628 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152628 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152615 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C3275 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C152633 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C3275 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152634 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152630 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152618 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C3415 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152630 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152634 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152618 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152628 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152615 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C152586) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152615 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152628 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C152586) *
               C152284) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152615 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152628 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C152586) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152628 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152615 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C152284) *
              C152198 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C152207 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152284) *
              C152198 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C152542 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C3275 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C3275 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152284) *
              C152633 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152284 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C3275) *
              C152626 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C3275 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152284) *
              C152611 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
               C152239 * C152284 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
               C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152634 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152630 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152618 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152239 * C152593) *
              C3415 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152630 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152634 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152618 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 * C126) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C3275 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C152633 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C3275) *
              C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C3275 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C152611 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152634 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152630 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152618 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C3415 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152630 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152634 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152618 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152280 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152287 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C3759) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152280 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152287 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152280 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152287 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C4281 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C3759) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152280 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152287 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152322 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152280 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152329 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152322 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C4953) *
              C152287 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152322 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152329 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152322 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C4953) *
              C152280 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152329 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152322 -
           ((C26540 + C26541 + C26542) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C4953) *
              C152287 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152322 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152329 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152634 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152326 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C4281) *
              C152630 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C4281 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152326) *
              C152618 +
          (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 * C126) *
               C152326 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152284) *
              C152624 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C152609 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152635 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152621 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C3275 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152632 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152635 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152621 +
           ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152419 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152449 * C3138) * C152419 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152449 * C3139) * C152419 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152419 * C126) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152284) *
              C152624 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C4281 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C3275 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152634 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C4281) *
              C152630 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C4281 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C152618 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152635 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152621 -
           ((C26744 + C26739 + C26740) * C152170 +
            (C26951 * C23222 + C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C3275 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152632 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152635 -
           ((C26540 + C26541 + C26542) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152621 +
           ((C10069 * C23220 + C26951 * C23221 +
             (C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C23222) *
                C152518 +
            (C9856 * C23220 + C26743 * C23221 +
             (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C23222) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152322 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152329 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152322 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C4953) *
               C152284) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152329 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152322 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152322 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152329 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152322 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C4953) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152329 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152322 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C4953) *
               C152284) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152329 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152322 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C4953) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152322 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152329 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C3275 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152284) *
              C152624 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C3275 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C152609 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C3275 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152634 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152326 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C4281) *
              C152630 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C4281 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152326) *
              C152618 +
          (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 * C126) *
               C152326 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C3275 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152284) *
              C152624 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C3275 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152609 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C4281 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C3275 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152634 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C4281) *
              C152630 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C4281 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C152618 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1823 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1824 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C1825 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152239 * C152593) *
              C152527 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1824 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1823 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C1825 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 * C126) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152541 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152284) *
              C829 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152284 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152541) *
              C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152541 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152284) *
              C831 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
               C152239 * C152284 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
               C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C2359 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C2360 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C152586) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C2360 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C2359 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C152586) *
               C152284) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C2359 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C2360 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152541 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C829 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152541) *
              C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152541 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C831 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1823 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1824 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C1825 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C152527 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1824 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1823 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C1825 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C2359 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C152586) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C2360 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C2359 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C152586) *
               C152284) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C2360 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C2359 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C152586) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C2359 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C2360 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152542 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C1823 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152326 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152542) *
              C1824 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152542 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152326) *
              C1825 +
          (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 * C126) *
               C152326 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C152284) *
              C353 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C354 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C152541 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C152541 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2974 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C2973 -
           (C2841 * C126 + C2842 * C125 + C2843 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C2975 +
           ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152419 * C123 +
            (C134 * C3130 + C3143 + C3143 + C152449 * C3138) * C152419 * C124 +
            (C134 * C3131 + C3144 + C3144 + C152449 * C3139) * C152419 * C125 +
            (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152419 * C126) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152284) *
              C353 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C152542 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C152541 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C1823 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152542) *
              C1824 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152542 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C1825 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2973 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C2975 -
           ((C26744 + C26739 + C26740) * C152170 +
            (C26951 * C23222 + C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C152541 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C2974 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C2973 -
           ((C26540 + C26541 + C26542) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C2975 +
           ((C10069 * C23220 + C26951 * C23221 +
             (C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C23222) *
                C152518 +
            (C9856 * C23220 + C26743 * C23221 +
             (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C23222) *
                C152170) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
               C199 * C124 + C200 * C125 + C201 * C126) *
                  C152239 * C152221 * C129 -
              (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                  C152239 * C152221 * C130 +
              (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                  C152239 * C152221 * C131 -
              (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) *
                  C152239 * C152221 * C132 +
              (C202 * C123 + C203 * C124 + C204 * C125 +
               (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
                C199 * C124 + C200 * C125 + C201 * C126) *
                   C152239 * C152627 -
               (C445 * C126 + C446 * C125 + C447 * C124 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                   C152239 * C152613 +
               ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
                C448 * C124 + C449 * C125 + C450 * C126) *
                   C152239 * C152583) *
                  C353 +
              ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) *
                   C152239 * C152613 -
               (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) *
                   C152239 * C152627 -
               (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) *
                   C152239 * C152583) *
                  C354 +
              ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) *
                   C152239 * C152627 -
               ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
                C451 * C125 + C445 * C124 + C446 * C123) *
                   C152239 * C152613 +
               (C449 * C123 + C450 * C124 + C452 * C125 +
                (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152628 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152221 * C353 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152615 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152628 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
              C152221 * C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152628 -
           ((C134 * C611 + C664 + C664 + C152449 * C635) * C152419 * C126 +
            C696 * C125 + C690 * C124 + C691 * C123) *
               C152615 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1374 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C152624 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
              C152239 * C1462 +
          ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152239 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
              C152239 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 * C126) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152628 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C1373 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152615 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152628 -
           ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152586) *
              C1374 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152628 -
           ((C134 * C1649 + C1686 + C1686 + C152449 * C1673) * C152419 * C126 +
            (C134 * C1650 + C1687 + C1687 + C152449 * C1674) * C152419 * C125 +
            (C134 * C1651 + C1688 + C1688 + C152449 * C1675) * C152419 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152615 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152221 * C152624 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
              C152221 * C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152627 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2360 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C2359 -
           ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152586) *
              C152613 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C2359 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C2360 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C2590 -
          (C690 * C126 + C691 * C125 + C692 * C124 +
           (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
              C2591 +
          ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
           C693 * C124 + C694 * C125 + C695 * C126) *
              C2592 -
          ((C134 * C2595 + C2620 + C2620 + C152449 * C2611) * C152419 * C126 +
           (C134 * C2596 + C2621 + C2621 + C152449 * C2612) * C152419 * C125 +
           (C134 * C2597 + C2622 + C2622 + C152449 * C2613) * C152419 * C124 +
           (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
              C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C152419 * C123 +
           (C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C152419 * C124 +
           (C134 * C2601 + C2626 + C2626 + C152449 * C2617) * C152419 * C125 +
           (C134 * C2602 + C2627 + C2627 + C152449 * C2618) * C152419 * C126) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C353 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152615 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152628 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152628 -
           ((C2062 * C23222 + C1222 * C23221 + C682 * C23220) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152615 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C1373 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152615 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152628 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C1374 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152628 -
           (((C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C23222 +
             C8573 * C23221 + C2064 * C23220) *
                C152170 +
            ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
             C8786 * C23221 + C8070 * C23220) *
                C152518) *
               C152615 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C2360 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C2359 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C2359 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C2360 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152627 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C2360 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C2359 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C152613 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C2359 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C2360 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C2590 -
          ((C23686 + C23687 + C23688) * C152170 +
           (C8070 * C23222 + C7446 * C23221 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
               C152518) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
            C8069 * C23221 + C8073 * C23222) *
               C152518 +
           (C23689 + C23690 + C23691) * C152170) *
              C2592 -
          (((C134 * C10053 + C10065 + C10065 + C152449 * C10059) * C23222 +
            C9856 * C23221 + C2996 * C23220) *
               C152170 +
           ((C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C23222 +
            C10069 * C23221 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
               C152518) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C23220 +
            (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C23221 +
            (C134 * C26241 + C26248 + C26248 + C152449 * C26245) * C23222) *
               C152518 +
           ((C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C23220 +
            (C134 * C9345 + C9355 + C9355 + C152449 * C9351) * C23221 +
            (C134 * C26242 + C26249 + C26249 + C152449 * C26246) * C23222) *
               C152170) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C1373 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C1374 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152542 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C152583) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C1373 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C1374 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152542 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152221 * C829 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
              C152221 * C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
              C152221 * C831 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
               C152326 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2973 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C2975 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C152221 * C152527 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2974 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2973 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C2975 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152449 * C2979) * C152419 * C126) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C829 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152542) *
              C152221 * C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152542 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C831 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C1373 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C1374 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C152542 -
            ((C25476 + C25471 + C25472) * C152170 +
             ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
              C8786 * C23221 + C8070 * C23220) *
                 C152518) *
                C152326) *
               C152583) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C1373 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C1374 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2973 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C2975 -
           ((C26744 + C26739 + C26740) * C152170 +
            ((C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C23222 +
             C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C152221 * C152527 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C2974 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C2973 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C2975 +
           ((C26740 + C26739 + C26744) * C152518 +
            (C2995 * C23220 + C9855 * C23221 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C23222) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152627 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152613 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152613 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152627 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152627 -
           ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152239 * C152613 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C152221 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
              C152221 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
              C152221 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
              C152221 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1374 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C152624 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
              C152239 * C1462 +
          ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152239 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
              C152239 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 * C126) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152221 * C152624 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C2360 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C2359 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
              C152221 * C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C2359 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C2360 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C2359 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152627 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C2360 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C2359 -
           ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152586) *
              C152613 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C2359 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C2360 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C152624 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C2360 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C2359 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C2359 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C2360 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C2359 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152627 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C2360 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C2359 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C152613 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C2359 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C2360 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152284) *
              C152198 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C152207 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C152541 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152284) *
              C152198 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C152207 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C4281 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C152541 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152322 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
             C693 * C124 + C694 * C125 + C695 * C126) *
                C4953) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152329 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152322 -
            (C2841 * C126 + C2842 * C125 + C2843 * C124 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 *
                 C123) *
                C4953) *
               C152284) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152329 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152322 -
            (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152322 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152329 +
            (C2843 * C123 + C2842 * C124 + C2841 * C125 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152419 *
                 C126) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152322 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
              C8069 * C23221 + C8073 * C23222) *
                 C152518 +
             (C23689 + C23690 + C23691) * C152170) *
                C4953) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152329 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152322 -
            ((C26540 + C26541 + C26542) * C152170 +
             (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
                C4953) *
               C152284) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152329 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152322 -
            ((C23695 + C23696 + C23697) * C152170 +
             (C23691 + C23690 + C23689) * C152518) *
                C4953) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152322 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152329 +
            ((C26542 + C26541 + C26540) * C152518 +
             (C2839 * C23220 + C8071 * C23221 +
              (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C23222) *
                 C152170) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152627 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152613 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C152583) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152627 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152613 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152221 * C152633 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
              C152221 * C152626 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
              C152221 * C152611 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
               C152326 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152635 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152621 -
           (C2997 * C126 + C2998 * C125 + C2999 * C124 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152419 * C123) *
               C152599) *
              C152221 * C3415 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152632 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152635 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152621 +
           (C2999 * C123 + C2998 * C124 + C2997 * C125 +
            (C134 * C2977 + C2987 + C2987 + C152449 * C2979) * C152419 * C126) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C152633 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C4281 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152627 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152613 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C4281 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C152583) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152627 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152613 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152635 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152621 -
           ((C26744 + C26739 + C26740) * C152170 +
            (C26951 * C23222 + C10069 * C23221 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C23220) *
                C152518) *
               C152599) *
              C152221 * C3415 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152632 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152635 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152621 +
           ((C26740 + C26739 + C26744) * C152518 +
            (C2995 * C23220 + C9855 * C23221 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C23222) *
                C152170) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152322 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C4953) *
              C152221 * C152198 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152329 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152322 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C4953) *
              C152221 * C152207 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152322 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152329 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152322 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C4953) *
              C152221 * C152198 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152329 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152322 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C4953) *
              C152221 * C152207 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152322 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152329 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C4281 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152221 * C152633 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
              C152221 * C152626 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C4281 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
              C152221 * C152611 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
               C152326 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C4281 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152627 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C4281) *
               C152613 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C4281 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C152583) *
              C3415 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C4281) *
               C152627 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C4281 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152613 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C4281 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C152633 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C4281) *
              C152221 * C152626 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C4281 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C152611 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C4281 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152627 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C4281) *
               C152613 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C4281 -
            ((C25476 + C25471 + C25472) * C152170 +
             (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
                C152326) *
               C152583) *
              C3415 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C4281) *
               C152627 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C4281 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152613 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152541 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152284) *
              C829 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152284 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152541) *
              C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152541 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C152284) *
              C831 +
          ((C445 * C123 + C451 * C124 + C843 * C125 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152419 * C126) *
               C152239 * C152284 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
               C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1823 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1824 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C1825 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152239 * C152593) *
              C152527 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1824 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1823 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C1825 +
           (C1851 * C123 + C1850 * C124 + C1849 * C125 +
            (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152419 * C126) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152541 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152284) *
              C829 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152284 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152541) *
              C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152541 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152284) *
              C831 +
          (((C23894 + C23893 + C23892) * C152518 +
            (C443 * C23220 + C444 * C23221 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C23222) *
                C152170) *
               C152239 * C152284 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1823 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1824 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C1825 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152239 * C152593) *
              C152527 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1824 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1823 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C1825 +
           ((C25178 + C25177 + C25176) * C152518 +
            (C1847 * C23220 + C7816 * C23221 +
             (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C23222) *
                C152170) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C152541 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C152284) *
              C353 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C152541 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C152284) *
              C354 +
          (((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
            (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
               C152541 +
           ((C1225 * C123 + C1226 * C124 + C1227 * C125 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152419 *
                 C126) *
                C152326 -
            (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152542 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C1823 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152326 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152542) *
              C1824 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152542 -
           (C2065 * C126 + C2066 * C125 + C2067 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152326) *
              C1825 +
          (((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152419 * C123 +
            (C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152419 * C124 +
            (C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152419 * C125 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152419 * C126) *
               C152326 -
           (C1849 * C126 + C1850 * C125 + C1851 * C124 +
            (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C152541 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C152284) *
              C353 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C152541 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C152284) *
              C354 +
          ((((C23231 + C23230 + C23229) * C152518 +
             (C23232 + C23233 + C23234) * C152170) *
                C152542 -
            ((C24089 + C24090 + C24091) * C152170 +
             (C23694 + C23693 + C23692) * C152518) *
                C152326) *
               C152541 +
           (((C24387 + C24386 + C24385) * C152518 +
             (C1222 * C23220 + C2062 * C23221 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C23222) *
                 C152170) *
                C152326 -
            ((C23892 + C23893 + C23894) * C152170 +
             (C23464 + C23463 + C23462) * C152518) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C1823 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152326 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152542) *
              C1824 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152542 -
           ((C25476 + C25471 + C25472) * C152170 +
            (C25683 * C23222 + C8786 * C23221 + C8070 * C23220) * C152518) *
               C152326) *
              C1825 +
          (((C8786 * C23220 + C25683 * C23221 +
             (C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C23222) *
                C152518 +
            (C8573 * C23220 + C25475 * C23221 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C23222) *
                C152170) *
               C152326 -
           ((C25176 + C25177 + C25178) * C152170 +
            (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152627 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152613 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152613 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152627 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152627 -
           ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152239 * C152613 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C152221 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
              C152221 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
              C152221 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
              C152221 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152628 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C152221 * C353 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152615 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152628 -
           (C697 * C126 + C695 * C125 + C694 * C124 + C693 * C123) * C152586) *
              C152221 * C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152628 -
           ((C134 * C611 + C664 + C664 + C152449 * C635) * C152419 * C126 +
            C696 * C125 + C690 * C124 + C691 * C123) *
               C152615 +
           (C694 * C123 + C695 * C124 + C697 * C125 +
            (C134 * C612 + C665 + C665 + C152449 * C636) * C152419 * C126) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1374 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C152624 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
              C152239 * C1462 +
          ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152239 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
              C152239 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 * C126) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152628 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C152419 * C123 +
            C693 * C124 + C694 * C125 + C695 * C126) *
               C152586) *
              C1373 +
          (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
            C1224 * C124 + C1225 * C125 + C1226 * C126) *
               C152615 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152628 -
           ((C134 * C1645 + C1682 + C1682 + C152449 * C1669) * C152419 * C126 +
            (C134 * C1646 + C1683 + C1683 + C152449 * C1670) * C152419 * C125 +
            (C134 * C1647 + C1684 + C1684 + C152449 * C1671) * C152419 * C124 +
            (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152419 * C123) *
               C152586) *
              C1374 +
          (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152628 -
           ((C134 * C1649 + C1686 + C1686 + C152449 * C1673) * C152419 * C126 +
            (C134 * C1650 + C1687 + C1687 + C152449 * C1674) * C152419 * C125 +
            (C134 * C1651 + C1688 + C1688 + C152449 * C1675) * C152419 * C124 +
            (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 * C123) *
               C152615 +
           ((C134 * C1653 + C1690 + C1690 + C152449 * C1677) * C152419 * C123 +
            (C134 * C1654 + C1691 + C1691 + C152449 * C1678) * C152419 * C124 +
            (C134 * C1655 + C1692 + C1692 + C152449 * C1679) * C152419 * C125 +
            (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152419 * C126) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C152221 * C353 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152615 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152628 -
           ((C23695 + C23696 + C23697) * C152170 +
            (C23691 + C23690 + C23689) * C152518) *
               C152586) *
              C152221 * C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152628 -
           ((C2062 * C23222 + C1222 * C23221 + C682 * C23220) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152615 +
           ((C23697 + C23696 + C23695) * C152518 +
            (C687 * C23220 + C2838 * C23221 +
             (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C23222) *
                C152170) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152628 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C23220 +
             C8069 * C23221 + C8073 * C23222) *
                C152518 +
            (C23689 + C23690 + C23691) * C152170) *
               C152586) *
              C1373 +
          (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
            (C24382 + C24383 + C24384) * C152170) *
               C152615 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152628 -
           ((C24980 * C23222 + C8072 * C23221 + C2840 * C23220) * C152170 +
            (C24981 * C23222 + C8073 * C23221 + C8069 * C23220) * C152518) *
               C152586) *
              C1374 +
          (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152628 -
           (((C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C23222 +
             C8573 * C23221 + C2064 * C23220) *
                C152170 +
            ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
             C8786 * C23221 + C8070 * C23220) *
                C152518) *
               C152615 +
           ((C8073 * C23220 + C24981 * C23221 +
             (C134 * C24963 + C24974 + C24974 + C152449 * C24967) * C23222) *
                C152518 +
            (C8072 * C23220 + C24980 * C23221 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C23222) *
                C152170) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152542 -
           (C690 * C126 + C691 * C125 + C692 * C124 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
               C152326) *
              C152221 * C829 +
          ((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
              C152221 * C830 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152542 -
           (C985 * C126 + C696 * C125 + C690 * C124 + C691 * C123) * C152326) *
              C152221 * C831 +
          ((C690 * C123 + C696 * C124 + C985 * C125 +
            (C134 * C975 + C981 + C981 + C152449 * C977) * C152419 * C126) *
               C152326 -
           (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
             C199 * C124 + C200 * C125 + C201 * C126) *
                C152542 -
            (C690 * C126 + C691 * C125 + C692 * C124 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152419 * C123) *
                C152326) *
               C1373 +
           (((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152419 * C123 +
             C1224 * C124 + C1225 * C125 + C1226 * C126) *
                C152326 -
            (C445 * C126 + C446 * C125 + C447 * C124 +
             (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
                C152542) *
               C1374 +
           (((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
             C448 * C124 + C449 * C125 + C450 * C126) *
                C152542 -
            (C2065 * C126 + C2066 * C125 + C2067 * C124 +
             (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152419 *
                 C123) *
                C152326) *
               C152583) *
              C152527 +
          (((C692 * C123 + C691 * C124 + C690 * C125 + C696 * C126) * C152326 -
            (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152542) *
               C1373 +
           ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152542 -
            (C1227 * C126 + C1226 * C125 + C1225 * C124 + C1224 * C123) *
                C152326) *
               C1374 +
           ((C2067 * C123 + C2066 * C124 + C2065 * C125 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152419 *
                 C126) *
                C152326 -
            (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152542 -
           ((C23686 + C23687 + C23688) * C152170 +
            (C8070 * C23222 + C7446 * C23221 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                C152518) *
               C152326) *
              C152221 * C829 +
          (((C23688 + C23687 + C23686) * C152518 +
            (C23692 + C23693 + C23694) * C152170) *
               C152326 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152542) *
              C152221 * C830 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152542 -
           ((C24089 + C24090 + C24091) * C152170 +
            (C23694 + C23693 + C23692) * C152518) *
               C152326) *
              C152221 * C831 +
          (((C24091 + C24090 + C24089) * C152518 +
            (C688 * C23220 + C1223 * C23221 +
             (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C23222) *
                C152170) *
               C152326 -
           ((C23235 + C23236 + C23237) * C152170 +
            (C23234 + C23233 + C23232) * C152518) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
              C6517 * C23221 + C6518 * C23222) *
                 C152518 +
             (C23226 + C23227 + C23228) * C152170) *
                C152542 -
            ((C23686 + C23687 + C23688) * C152170 +
             (C8070 * C23222 + C7446 * C23221 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C23220) *
                 C152518) *
                C152326) *
               C1373 +
           (((C7446 * C23220 + C8070 * C23221 + C8786 * C23222) * C152518 +
             (C24382 + C24383 + C24384) * C152170) *
                C152326 -
            ((C23456 + C23457 + C23458) * C152170 +
             (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
                C152542) *
               C1374 +
           (((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
             (C23459 + C23460 + C23461) * C152170) *
                C152542 -
            ((C25476 + C25471 + C25472) * C152170 +
             ((C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C23222 +
              C8786 * C23221 + C8070 * C23220) *
                 C152518) *
                C152326) *
               C152583) *
              C152527 +
          ((((C23688 + C23687 + C23686) * C152518 +
             (C23692 + C23693 + C23694) * C152170) *
                C152326 -
            ((C23229 + C23230 + C23231) * C152170 +
             (C23228 + C23227 + C23226) * C152518) *
                C152542) *
               C1373 +
           (((C23458 + C23457 + C23456) * C152518 +
             (C23462 + C23463 + C23464) * C152170) *
                C152542 -
            ((C24385 + C24386 + C24387) * C152170 +
             (C24384 + C24383 + C24382) * C152518) *
                C152326) *
               C1374 +
           (((C25472 + C25471 + C25476) * C152518 +
             (C2063 * C23220 + C8572 * C23221 +
              (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C23222) *
                 C152170) *
                C152326 -
            ((C23465 + C23466 + C23467) * C152170 +
             (C23461 + C23460 + C23459) * C152518) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C152221 * C129 -
          (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
              C152221 * C130 +
          (C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
              C152221 * C131 -
          (C204 * C126 + C203 * C125 + C202 * C124 + C201 * C123) * C152239 *
              C152221 * C132 +
          (C202 * C123 + C203 * C124 + C204 * C125 +
           (C134 * C143 + C180 + C180 + C152449 * C159) * C152419 * C126) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C152627 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C152613 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C353 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C152613 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C152627 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C354 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C152627 -
           ((C134 * C366 + C419 + C419 + C152449 * C390) * C152419 * C126 +
            C451 * C125 + C445 * C124 + C446 * C123) *
               C152239 * C152613 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
            C199 * C124 + C200 * C125 + C201 * C126) *
               C152239 * C1373 -
           (C445 * C126 + C446 * C125 + C447 * C124 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
               C152239 * C1374 +
           ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
            C448 * C124 + C449 * C125 + C450 * C126) *
               C152239 * C152583) *
              C152624 +
          ((C447 * C123 + C446 * C124 + C445 * C125 + C451 * C126) * C152239 *
               C1374 -
           (C202 * C126 + C201 * C125 + C200 * C124 + C199 * C123) * C152239 *
               C1373 -
           (C452 * C126 + C450 * C125 + C449 * C124 + C448 * C123) * C152239 *
               C152583) *
              C152609 +
          ((C200 * C123 + C201 * C124 + C202 * C125 + C203 * C126) * C152239 *
               C1373 -
           (C843 * C126 + C451 * C125 + C445 * C124 + C446 * C123) * C152239 *
               C1374 +
           (C449 * C123 + C450 * C124 + C452 * C125 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C152419 * C126) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C152419 * C123 +
           C199 * C124 + C200 * C125 + C201 * C126) *
              C152239 * C1461 -
          (C445 * C126 + C446 * C125 + C447 * C124 +
           (C134 * C359 + C402 + C402 + C152449 * C383) * C152419 * C123) *
              C152239 * C1462 +
          ((C134 * C360 + C403 + C403 + C152449 * C384) * C152419 * C123 +
           C448 * C124 + C449 * C125 + C450 * C126) *
              C152239 * C1463 -
          ((C134 * C1467 + C1492 + C1492 + C152449 * C1483) * C152419 * C126 +
           (C134 * C1468 + C1493 + C1493 + C152449 * C1484) * C152419 * C125 +
           (C134 * C1469 + C1494 + C1494 + C152449 * C1485) * C152419 * C124 +
           (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152419 * C123) *
              C152239 * C1464 +
          ((C134 * C1471 + C1496 + C1496 + C152449 * C1487) * C152419 * C123 +
           (C134 * C1472 + C1497 + C1497 + C152449 * C1488) * C152419 * C124 +
           (C134 * C1473 + C1498 + C1498 + C152449 * C1489) * C152419 * C125 +
           (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152419 * C126) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C152221 * C129 -
          ((C23229 + C23230 + C23231) * C152170 +
           (C23228 + C23227 + C23226) * C152518) *
              C152239 * C152221 * C130 +
          ((C23231 + C23230 + C23229) * C152518 +
           (C23232 + C23233 + C23234) * C152170) *
              C152239 * C152221 * C131 -
          ((C23235 + C23236 + C23237) * C152170 +
           (C23234 + C23233 + C23232) * C152518) *
              C152239 * C152221 * C132 +
          ((C23237 + C23236 + C23235) * C152518 +
           (C197 * C23220 + C842 * C23221 +
            (C134 * C367 + C420 + C420 + C152449 * C391) * C23222) *
               C152170) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C152627 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C152613 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C353 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C152613 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C152627 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C354 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C152627 -
           ((C1846 * C23222 + C442 * C23221 + C437 * C23220) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C152613 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
             C6517 * C23221 + C6518 * C23222) *
                C152518 +
            (C23226 + C23227 + C23228) * C152170) *
               C152239 * C1373 -
           ((C23456 + C23457 + C23458) * C152170 +
            (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
               C152239 * C1374 +
           ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
            (C23459 + C23460 + C23461) * C152170) *
               C152239 * C152583) *
              C152624 +
          (((C23458 + C23457 + C23456) * C152518 +
            (C23462 + C23463 + C23464) * C152170) *
               C152239 * C1374 -
           ((C23229 + C23230 + C23231) * C152170 +
            (C23228 + C23227 + C23226) * C152518) *
               C152239 * C1373 -
           ((C23465 + C23466 + C23467) * C152170 +
            (C23461 + C23460 + C23459) * C152518) *
               C152239 * C152583) *
              C152609 +
          (((C23231 + C23230 + C23229) * C152518 +
            (C23232 + C23233 + C23234) * C152170) *
               C152239 * C1373 -
           ((C23892 + C23893 + C23894) * C152170 +
            (C23464 + C23463 + C23462) * C152518) *
               C152239 * C1374 +
           ((C23467 + C23466 + C23465) * C152518 +
            (C442 * C23220 + C1846 * C23221 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C23222) *
                C152170) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C23220 +
            C6517 * C23221 + C6518 * C23222) *
               C152518 +
           (C23226 + C23227 + C23228) * C152170) *
              C152239 * C1461 -
          ((C23456 + C23457 + C23458) * C152170 +
           (C7815 * C23222 + C6518 * C23221 + C6517 * C23220) * C152518) *
              C152239 * C1462 +
          ((C6518 * C23220 + C7815 * C23221 + C7818 * C23222) * C152518 +
           (C23459 + C23460 + C23461) * C152170) *
              C152239 * C1463 -
          ((C24744 * C23222 + C7817 * C23221 + C1848 * C23220) * C152170 +
           (C24745 * C23222 + C7818 * C23221 + C7815 * C23220) * C152518) *
              C152239 * C1464 +
          ((C7818 * C23220 + C24745 * C23221 +
            (C134 * C24727 + C24738 + C24738 + C152449 * C24731) * C23222) *
               C152518 +
           (C7817 * C23220 + C24744 * C23221 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C23222) *
               C152170) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[325] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152280 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152287 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C3759) *
              C152198 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152287 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152280 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C3759) *
              C152207 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152280 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152287 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152280 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152287 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C3759) *
              C152198 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152287 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152280 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C3759) *
              C152207 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152280 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152287 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[326] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152280 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C152287 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C152542 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             (C8786 * C152435 + C8070 * C152555) * C6260) *
                C152326) *
               C3759) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C152280 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152287 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152280 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152287 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C152542 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C3759) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C152280 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152287 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[327] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152634 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152630 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152618 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152239 * C152593) *
              C3415 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152630 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152634 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152618 +
           ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
            (C1846 * C152555 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C3275 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152284) *
              C152633 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152284 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C3275) *
              C152626 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C3275 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152284) *
              C152611 +
          ((C6945 * C6260 + (C6947 + C6946) * C6261 +
            (C842 * C152555 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C6262) *
               C152239 * C152284 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152628 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152615 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C152586) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152615 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152628 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C152586) *
               C152284) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152615 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152628 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C152586) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152628 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152615 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C3275 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C152633 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C3275 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152634 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152630 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152618 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C3415 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152630 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152634 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152618 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152628 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152615 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C152586) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152615 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152628 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C152586) *
               C152284) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152615 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152628 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C152586) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152628 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152615 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[328] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C152284) *
              C152198 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                C152542 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C3275 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152284) *
              C152198 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C152542 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[329] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C3275 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152284) *
              C152633 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152284 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C3275) *
              C152626 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C3275 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152284) *
              C152611 +
          ((C6945 * C6260 + (C6947 + C6946) * C6261 +
            (C842 * C152555 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C6262) *
               C152239 * C152284 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152634 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152630 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152618 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152239 * C152593) *
              C3415 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152630 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152634 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152618 +
           ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
            (C1846 * C152555 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C3275 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C152633 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C3275 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152634 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152630 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152618 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C3415 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152630 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152634 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152618 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[330] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152280 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152287 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C4281 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             (C8786 * C152435 + C8070 * C152555) * C6260) *
                C152326) *
               C3759) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C152280 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152287 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152280 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152287 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C4281 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C3759) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152280 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152287 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[331] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152322 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C4953) *
              C152280 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152329 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152322 -
           ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C4953) *
              C152287 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152322 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152329 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152322 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C4953) *
              C152280 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152329 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152322 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C4953) *
              C152287 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152322 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152329 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[332] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C4281 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152634 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152326 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C4281) *
              C152630 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C4281 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152326) *
              C152618 +
          (((C8786 * C152555 +
             (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                C6260 +
            (C8573 * C152555 +
             (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                C6261 +
            (C8572 * C152555 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C6262) *
               C152326 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152284) *
              C152624 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C152609 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C3275 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152635 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152621 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C3275 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152632 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152635 -
           ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152621 +
           ((C10069 * C152555 +
             (C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C152435) *
                C6260 +
            (C9856 * C152555 +
             (C134 * C10053 + C10065 + C10065 + C152449 * C10059) * C152435) *
                C6261 +
            (C9855 * C152555 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C152435) *
                C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C4281 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152634 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C4281) *
              C152630 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C4281 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C152618 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152635 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152621 -
           (C33908 * C31464 + C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C3275 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152632 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152635 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152621 +
           (C10069 * C31461 + C26951 * C31462 + C33908 * C31463 +
            (C134 * C33899 + C33905 + C33905 + C152449 * C33901) * C31464) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[333] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152322 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C4953) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152329 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152322 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C4953) *
               C152284) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152329 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152322 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C4953) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152322 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152329 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152322 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C4953) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152329 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152322 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C4953) *
               C152284) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152329 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152322 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C4953) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152322 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152329 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[334] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C3275 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152284) *
              C152624 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C3275 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C152609 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C3275 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C4281 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152634 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152326 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C4281) *
              C152630 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C4281 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152326) *
              C152618 +
          (((C8786 * C152555 +
             (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                C6260 +
            (C8573 * C152555 +
             (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                C6261 +
            (C8572 * C152555 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C6262) *
               C152326 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C3275 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C4281 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C3275 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152634 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C4281) *
              C152630 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C4281 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C152618 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[335] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1823 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1824 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C1825 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152239 * C152593) *
              C152527 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1824 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1823 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C1825 +
           ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
            (C1846 * C152555 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152541 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152284) *
              C829 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152284 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152541) *
              C830 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152541 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152284) *
              C831 +
          ((C6945 * C6260 + (C6947 + C6946) * C6261 +
            (C842 * C152555 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C6262) *
               C152239 * C152284 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C2359 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C2360 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C152586) *
               C152541 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C2360 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C2359 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C152586) *
               C152284) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C2360 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C2359 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C152586) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C2359 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C2360 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152541 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C829 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152541 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1823 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1824 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C1825 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C152527 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1824 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1823 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C1825 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C2359 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C2360 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C152586) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C2360 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C2359 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C152586) *
               C152284) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C2360 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C2359 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C152586) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C2359 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C2360 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[336] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152542 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C1823 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152326 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152542) *
              C1824 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152542 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152326) *
              C1825 +
          (((C8786 * C152555 +
             (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                C6260 +
            (C8573 * C152555 +
             (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                C6261 +
            (C8572 * C152555 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C6262) *
               C152326 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152541 +
           (((C7446 * C152555 +
              (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152435) *
                 C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C152284) *
              C353 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C354 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                C152542 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C152541 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2973 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C2975 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C152541 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C2974 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C2973 -
           ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C2975 +
           ((C10069 * C152555 +
             (C134 * C10052 + C10064 + C10064 + C152449 * C10058) * C152435) *
                C6260 +
            (C9856 * C152555 +
             (C134 * C10053 + C10065 + C10065 + C152449 * C10059) * C152435) *
                C6261 +
            (C9855 * C152555 +
             (C134 * C10054 + C10066 + C10066 + C152449 * C10060) * C152435) *
                C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152284) *
              C353 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C152542 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C1823 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152542) *
              C1824 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152542 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C1825 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2973 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C2975 -
           (C33908 * C31464 + C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C152541 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C2974 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C2973 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C2975 +
           (C10069 * C31461 + C26951 * C31462 + C33908 * C31463 +
            (C134 * C33899 + C33905 + C33905 + C152449 * C33901) * C31464) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[337] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
                   C6260 +
               (C6264 + C6265) * C6261 + C6274 * C6262) *
                  C152239 * C152221 * C129 -
              (C6275 * C6262 + (C6267 + C6266) * C6261 +
               (C6265 + C6264) * C6260) *
                  C152239 * C152221 * C130 +
              (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                  C152239 * C152221 * C131 -
              ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 +
               C6275 * C6260) *
                  C152239 * C152221 * C132 +
              (C6276 * C6260 + (C6273 + C6272) * C6261 +
               (C198 * C152555 +
                (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
                   C6262) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
                 C6517 * C152435) *
                    C6260 +
                (C6264 + C6265) * C6261 + C6274 * C6262) *
                   C152239 * C152627 -
               (C6512 * C6262 + (C6499 + C6500) * C6261 +
                (C6518 * C152435 + C6517 * C152555) * C6260) *
                   C152239 * C152613 +
               ((C6518 * C152555 +
                 (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                    C6260 +
                (C6503 + C6504) * C6261 + C6514 * C6262) *
                   C152239 * C152583) *
                  C353 +
              (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
                (C6507 + C6508) * C6262) *
                   C152239 * C152613 -
               (C6275 * C6262 + (C6267 + C6266) * C6261 +
                (C6265 + C6264) * C6260) *
                   C152239 * C152627 -
               ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
                (C6504 + C6503) * C6260) *
                   C152239 * C152583) *
                  C354 +
              ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                   C152239 * C152627 -
               ((C444 * C152435 + C443 * C152555) * C6262 +
                (C6508 + C6507) * C6261 + C6512 * C6260) *
                   C152239 * C152613 +
               (C6514 * C6260 + (C6510 + C6509) * C6261 +
                (C444 * C152555 +
                 (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                    C6262) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152628 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152221 * C353 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
            (C6745 + C6746) * C6262) *
               C152615 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152628 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152586) *
              C152221 * C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152628 -
           ((C1223 * C152435 + C688 * C152555) * C6262 +
            (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152615 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1373 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1374 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1374 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1373 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C1373 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C1374 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C1461 -
          (C6512 * C6262 + (C6499 + C6500) * C6261 +
           (C6518 * C152435 + C6517 * C152555) * C6260) *
              C152239 * C1462 +
          ((C6518 * C152555 + C7815 * C152435) * C6260 +
           (C6503 + C6504) * C6261 + C6514 * C6262) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C152555) * C6262 +
           (C7817 * C152435 + C1848 * C152555) * C6261 +
           (C7818 * C152435 + C7815 * C152555) * C6260) *
              C152239 * C1464 +
          ((C7818 * C152555 +
            (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
               C6260 +
           (C7817 * C152555 +
            (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
               C6261 +
           (C7816 * C152555 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152628 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C1373 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152615 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152628 -
           ((C8071 * C152435 + C2839 * C152555) * C6262 +
            (C8072 * C152435 + C2840 * C152555) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152586) *
              C1374 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152628 -
           (((C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152435 +
             C2063 * C152555) *
                C6262 +
            ((C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152435 +
             C2064 * C152555) *
                C6261 +
            ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
             C8070 * C152555) *
                C6260) *
               C152615 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2359 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152221 * C152624 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C2360 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C2359 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152586) *
              C152221 * C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C2359 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C2360 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2359 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152627 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C2360 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C2359 -
           ((C8071 * C152435 + C2839 * C152555) * C6262 +
            (C8072 * C152435 + C2840 * C152555) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152586) *
              C152613 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C2359 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C2360 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C2590 -
          (C6749 * C6262 + (C6739 + C6740) * C6261 +
           (C7446 * C152435 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
               C6260) *
              C2591 +
          (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
            C8069 * C152435) *
               C6260 +
           (C6741 + C6742) * C6261 + C6750 * C6262) *
              C2592 -
          (((C134 * C3131 + C3144 + C3144 + C152449 * C3139) * C152435 +
            C2995 * C152555) *
               C6262 +
           ((C134 * C3130 + C3143 + C3143 + C152449 * C3138) * C152435 +
            C2996 * C152555) *
               C6261 +
           ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152435 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
               C6260) *
              C2593 +
          (((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C152555 +
            (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C152435) *
               C6260 +
           ((C134 * C2600 + C2625 + C2625 + C152449 * C2616) * C152555 +
            (C134 * C9345 + C9355 + C9355 + C152449 * C9351) * C152435) *
               C6261 +
           ((C134 * C2601 + C2626 + C2626 + C152449 * C2617) * C152555 +
            (C134 * C9346 + C9356 + C9356 + C152449 * C9352) * C152435) *
               C6262) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C353 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152615 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152628 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152628 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152615 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C1373 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152615 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152628 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C1374 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152628 -
           ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
            C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
               C152165 * C152615 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C152624 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C2360 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C2359 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C2359 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C2360 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152627 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C2360 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C2359 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C152613 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C2359 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C2360 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C2590 -
          (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
           (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
              C152165 * C2591 +
          ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
           C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
              C152165 * C2592 -
          ((C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C31464 +
           C26951 * C31463 + C10069 * C31462 +
           (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
              C152165 * C2593 +
          ((C134 * C2599 + C2624 + C2624 + C152449 * C2615) * C31461 +
           (C134 * C9344 + C9354 + C9354 + C152449 * C9350) * C31462 +
           (C134 * C26241 + C26248 + C26248 + C152449 * C26245) * C31463 +
           (C134 * C33441 + C33445 + C33445 + C152449 * C33443) * C31464) *
              C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[338] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C1373 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C1374 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C152542 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
              C8070 * C152555) *
                 C6260) *
                C152326) *
               C152583) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C1373 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C1374 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152542 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152221 * C829 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152326 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152542) *
              C152221 * C830 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152542 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152326) *
              C152221 * C831 +
          ((C7142 * C6260 + (C7144 + C7143) * C6261 +
            (C984 * C152555 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C6262) *
               C152326 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2973 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2974 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C2975 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            ((C134 * C3129 + C3142 + C3142 + C152449 * C3137) * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C152221 * C152527 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C2974 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C2973 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C2975 +
           ((C9850 + C9858) * C6260 + (C9847 + C9857) * C6261 +
            (C2994 * C152555 +
             (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152435) *
                C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C829 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152542 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C1373 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C1374 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C152542 -
            ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
             C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C1373 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C1374 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2973 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2974 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C2975 -
           ((C134 * C26938 + C26947 + C26947 + C152449 * C26942) * C31464 +
            C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C152221 * C152527 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C2974 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C2973 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C2975 +
           (C2996 * C31461 + C9856 * C31462 + C26743 * C31463 +
            (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C31464) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[339] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152627 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152613 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
            (C6507 + C6508) * C6262) *
               C152239 * C152613 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152627 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152627 -
           ((C444 * C152435 + C443 * C152555) * C6262 +
            (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152613 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C152221 * C129 -
          (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
              C152239 * C152221 * C130 +
          (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
              C152221 * C131 -
          ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
              C152239 * C152221 * C132 +
          (C6276 * C6260 + (C6273 + C6272) * C6261 +
           (C198 * C152555 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1373 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1374 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1374 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1373 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C1373 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C1374 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C1461 -
          (C6512 * C6262 + (C6499 + C6500) * C6261 +
           (C6518 * C152435 + C6517 * C152555) * C6260) *
              C152239 * C1462 +
          ((C6518 * C152555 + C7815 * C152435) * C6260 +
           (C6503 + C6504) * C6261 + C6514 * C6262) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C152555) * C6262 +
           (C7817 * C152435 + C1848 * C152555) * C6261 +
           (C7818 * C152435 + C7815 * C152555) * C6260) *
              C152239 * C1464 +
          ((C7818 * C152555 +
            (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
               C6260 +
           (C7817 * C152555 +
            (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
               C6261 +
           (C7816 * C152555 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2359 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152221 * C152624 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C2360 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C2359 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152586) *
              C152221 * C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C2359 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C2360 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C2359 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C2360 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152627 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C2360 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C2359 -
           ((C8071 * C152435 + C2839 * C152555) * C6262 +
            (C8072 * C152435 + C2840 * C152555) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152586) *
              C152613 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C2359 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C2360 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C152624 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C2360 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C2359 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C2359 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C2360 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C2359 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C2360 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152627 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C2360 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C2359 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C152613 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C2359 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C2360 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[340] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152541 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152284) *
              C152198 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C152541 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152284) *
              C152198 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C4281 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[341] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152322 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152329 +
            (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
              C8069 * C152435) *
                 C6260 +
             (C6741 + C6742) * C6261 + C6750 * C6262) *
                C4953) *
               C152541 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152329 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152322 -
            ((C9647 + C9648) * C6262 + (C9649 + C9650) * C6261 +
             (C8073 * C152435 + C8069 * C152555) * C6260) *
                C4953) *
               C152284) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152329 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152322 -
            ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
             (C6742 + C6741) * C6260) *
                C4953) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152322 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152329 +
            ((C9650 + C9649) * C6260 + (C9648 + C9647) * C6261 +
             (C2838 * C152555 +
              (C134 * C1656 + C1693 + C1693 + C152449 * C1680) * C152435) *
                 C6262) *
                C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152322 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152329 +
            ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
             C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
                C152165 * C4953) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152329 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152322 -
            (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
             C8069 * C31461) *
                C152165 * C4953) *
               C152284) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152329 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152322 -
            (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 +
             C685 * C31461) *
                C152165 * C4953) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152322 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152329 +
            (C2840 * C31461 + C8072 * C31462 + C24980 * C31463 +
             (C134 * C24964 + C24975 + C24975 + C152449 * C24968) * C31464) *
                C152165 * C4953) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[342] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152627 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152613 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C4281 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             (C8786 * C152435 + C8070 * C152555) * C6260) *
                C152326) *
               C152583) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C152627 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152613 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C4281 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152221 * C152633 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152326 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C4281) *
              C152221 * C152626 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152326) *
              C152221 * C152611 +
          ((C7142 * C6260 + (C7144 + C7143) * C6261 +
            (C984 * C152555 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C6262) *
               C152326 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152635 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152632 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152621 -
           ((C9857 + C9847) * C6262 + (C9858 + C9850) * C6261 +
            (C10069 * C152435 +
             (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C152555) *
                C6260) *
               C152599) *
              C152221 * C3415 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152632 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152635 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152621 +
           ((C9850 + C9858) * C6260 + (C9847 + C9857) * C6261 +
            (C2994 * C152555 +
             (C134 * C3132 + C3145 + C3145 + C152449 * C3140) * C152435) *
                C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C152633 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C4281 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152627 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152613 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C4281 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152627 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152613 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152635 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152632 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152621 -
           (C33908 * C31464 + C26951 * C31463 + C10069 * C31462 +
            (C134 * C2598 + C2623 + C2623 + C152449 * C2614) * C31461) *
               C152165 * C152599) *
              C152221 * C3415 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152632 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152635 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152621 +
           (C2996 * C31461 + C9856 * C31462 + C26743 * C31463 +
            (C134 * C26939 + C26948 + C26948 + C152449 * C26943) * C31464) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[343] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152322 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152329 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C4953) *
              C152221 * C152198 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152329 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152322 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C4953) *
              C152221 * C152207 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152322 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152329 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152322 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152329 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C4953) *
              C152221 * C152198 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152329 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152322 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C4953) *
              C152221 * C152207 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152322 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152329 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[344] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C4281 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152221 * C152633 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152326 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C4281) *
              C152221 * C152626 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C4281 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152326) *
              C152221 * C152611 +
          ((C7142 * C6260 + (C7144 + C7143) * C6261 +
            (C984 * C152555 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C6262) *
               C152326 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C4281 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152627 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C4281) *
               C152613 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C4281 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             (C8786 * C152435 + C8070 * C152555) * C6260) *
                C152326) *
               C152583) *
              C3415 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C4281) *
               C152627 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C4281 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152613 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C4281 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C152633 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C4281 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C4281 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152627 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C4281) *
               C152613 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C4281 -
            (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
             C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C4281) *
               C152627 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C4281 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152613 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[345] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152541 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152284) *
              C829 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C152284 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152541) *
              C830 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152541 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152284) *
              C831 +
          ((C6945 * C6260 + (C6947 + C6946) * C6261 +
            (C842 * C152555 +
             (C134 * C367 + C420 + C420 + C152449 * C391) * C152435) *
                C6262) *
               C152239 * C152284 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1823 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1824 +
           ((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C1825 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152239 * C152593) *
              C152527 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1824 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1823 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C1825 +
           ((C8271 + C8270) * C6260 + (C8269 + C8268) * C6261 +
            (C1846 * C152555 +
             (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C152435) *
                C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152541 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152284) *
              C829 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152284 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152541 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C437 * C31461 + C442 * C31462 + C1846 * C31463 +
            (C134 * C1474 + C1499 + C1499 + C152449 * C1490) * C31464) *
               C152165 * C152239 * C152284 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1823 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1824 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C1825 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152239 * C152593) *
              C152527 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1824 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1823 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C1825 +
           (C1848 * C31461 + C7817 * C31462 + C24744 * C31463 +
            (C134 * C24728 + C24739 + C24739 + C152449 * C24732) * C31464) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[346] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C152541 +
           (((C7446 * C152555 +
              (C134 * C1652 + C1689 + C1689 + C152449 * C1676) * C152435) *
                 C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C152284) *
              C353 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C152541 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C152284) *
              C354 +
          (((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) *
                C152542 -
            ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 +
             C6749 * C6260) *
                C152326) *
               C152541 +
           ((C7444 * C6260 + (C7442 + C7441) * C6261 +
             (C1223 * C152555 +
              (C134 * C2045 + C2055 + C2055 + C152449 * C2047) * C152435) *
                 C6262) *
                C152326 -
            ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 +
             C6512 * C6260) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152542 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C1823 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152326 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152542) *
              C1824 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152542 -
           ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
            (C8786 * C152435 + C8070 * C152555) * C6260) *
               C152326) *
              C1825 +
          (((C8786 * C152555 +
             (C134 * C8769 + C8781 + C8781 + C152449 * C8775) * C152435) *
                C6260 +
            (C8573 * C152555 +
             (C134 * C8770 + C8782 + C8782 + C152449 * C8776) * C152435) *
                C6261 +
            (C8572 * C152555 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C152435) *
                C6262) *
               C152326 -
           ((C8268 + C8269) * C6262 + (C8270 + C8271) * C6261 +
            (C7818 * C152435 + C7815 * C152555) * C6260) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C152284) *
              C353 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C152541 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
                C152165 * C152542 -
            (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
                C152165 * C152326) *
               C152541 +
           ((C1221 * C31461 + C2063 * C31462 + C8572 * C31463 +
             (C134 * C8771 + C8783 + C8783 + C152449 * C8777) * C31464) *
                C152165 * C152326 -
            (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C1823 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152326 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152542) *
              C1824 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152542 -
           (C33067 * C31464 + C25683 * C31463 + C8786 * C31462 +
            C8070 * C31461) *
               C152165 * C152326) *
              C1825 +
          ((C8786 * C31461 + C25683 * C31462 + C33067 * C31463 +
            (C134 * C33058 + C33064 + C33064 + C152449 * C33060) * C31464) *
               C152165 * C152326 -
           (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
            C7815 * C31461) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[347] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152627 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152613 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
            (C6507 + C6508) * C6262) *
               C152239 * C152613 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152627 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152627 -
           ((C444 * C152435 + C443 * C152555) * C6262 +
            (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152613 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C152221 * C129 -
          (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
              C152239 * C152221 * C130 +
          (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
              C152221 * C131 -
          ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
              C152239 * C152221 * C132 +
          (C6276 * C6260 + (C6273 + C6272) * C6261 +
           (C198 * C152555 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152628 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             (C134 * C1648 + C1685 + C1685 + C152449 * C1672) * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C152221 * C353 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
            (C6745 + C6746) * C6262) *
               C152615 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152628 -
           ((C6747 + C6748) * C6262 + (C6744 + C6743) * C6261 +
            (C6742 + C6741) * C6260) *
               C152586) *
              C152221 * C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152628 -
           ((C1223 * C152435 + C688 * C152555) * C6262 +
            (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152615 +
           (C6750 * C6260 + (C6748 + C6747) * C6261 +
            (C689 * C152555 +
             (C134 * C2821 + C2831 + C2831 + C152449 * C2823) * C152435) *
                C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1373 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1374 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1374 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1373 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C1373 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C1374 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C1461 -
          (C6512 * C6262 + (C6499 + C6500) * C6261 +
           (C6518 * C152435 + C6517 * C152555) * C6260) *
              C152239 * C1462 +
          ((C6518 * C152555 + C7815 * C152435) * C6260 +
           (C6503 + C6504) * C6261 + C6514 * C6262) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C152555) * C6262 +
           (C7817 * C152435 + C1848 * C152555) * C6261 +
           (C7818 * C152435 + C7815 * C152555) * C6260) *
              C152239 * C1464 +
          ((C7818 * C152555 +
            (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
               C6260 +
           (C7817 * C152555 +
            (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
               C6261 +
           (C7816 * C152555 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152628 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            (C7446 * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152615 +
           (((C134 * C605 + C648 + C648 + C152449 * C629) * C152555 +
             C8069 * C152435) *
                C6260 +
            (C6741 + C6742) * C6261 + C6750 * C6262) *
               C152586) *
              C1373 +
          (((C7446 * C152555 + C8070 * C152435) * C6260 +
            (C7437 + C7438) * C6261 + C7444 * C6262) *
               C152615 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152628 -
           ((C8071 * C152435 + C2839 * C152555) * C6262 +
            (C8072 * C152435 + C2840 * C152555) * C6261 +
            (C8073 * C152435 + C8069 * C152555) * C6260) *
               C152586) *
              C1374 +
          (((C6518 * C152555 + C7815 * C152435) * C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152628 -
           (((C134 * C2199 + C2212 + C2212 + C152449 * C2207) * C152435 +
             C2063 * C152555) *
                C6262 +
            ((C134 * C2198 + C2211 + C2211 + C152449 * C2206) * C152435 +
             C2064 * C152555) *
                C6261 +
            ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
             C8070 * C152555) *
                C6260) *
               C152615 +
           ((C8073 * C152555 +
             (C134 * C8036 + C8056 + C8056 + C152449 * C8042) * C152435) *
                C6260 +
            (C8072 * C152555 +
             (C134 * C8037 + C8057 + C8057 + C152449 * C8043) * C152435) *
                C6261 +
            (C8071 * C152555 +
             (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C152435) *
                C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C152221 * C353 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152615 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152628 -
           (C24980 * C31464 + C8072 * C31463 + C2840 * C31462 + C685 * C31461) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152628 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152615 +
           (C686 * C31461 + C2839 * C31462 + C8071 * C31463 +
            (C134 * C8038 + C8058 + C8058 + C152449 * C8044) * C31464) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152628 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152615 +
           ((C134 * C605 + C648 + C648 + C152449 * C629) * C31461 +
            C8069 * C31462 + C8073 * C31463 + C24981 * C31464) *
               C152165 * C152586) *
              C1373 +
          ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
            C25683 * C31464) *
               C152165 * C152615 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152628 -
           (C32604 * C31464 + C24981 * C31463 + C8073 * C31462 +
            C8069 * C31461) *
               C152165 * C152586) *
              C1374 +
          ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152628 -
           ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
            C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
               C152165 * C152615 +
           (C8073 * C31461 + C24981 * C31462 + C32604 * C31463 +
            (C134 * C32595 + C32601 + C32601 + C152449 * C32597) * C31464) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[348] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152542 -
           (C6749 * C6262 + (C6739 + C6740) * C6261 +
            ((C134 * C1179 + C1198 + C1198 + C152449 * C1191) * C152435 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                C6260) *
               C152326) *
              C152221 * C829 +
          (((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 + C7142 * C6262) *
               C152326 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152542) *
              C152221 * C830 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152542 -
           ((C7143 + C7144) * C6262 + (C6746 + C6745) * C6261 + C6749 * C6260) *
               C152326) *
              C152221 * C831 +
          ((C7142 * C6260 + (C7144 + C7143) * C6261 +
            (C984 * C152555 +
             (C134 * C1184 + C1211 + C1211 + C152449 * C1196) * C152435) *
                C6262) *
               C152326 -
           ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
              C6517 * C152435) *
                 C6260 +
             (C6264 + C6265) * C6261 + C6274 * C6262) *
                C152542 -
            (C6749 * C6262 + (C6739 + C6740) * C6261 +
             (C7446 * C152435 +
              (C134 * C604 + C647 + C647 + C152449 * C628) * C152555) *
                 C6260) *
                C152326) *
               C1373 +
           (((C7446 * C152555 + C8070 * C152435) * C6260 +
             (C7437 + C7438) * C6261 + C7444 * C6262) *
                C152326 -
            (C6512 * C6262 + (C6499 + C6500) * C6261 +
             (C6518 * C152435 + C6517 * C152555) * C6260) *
                C152542) *
               C1374 +
           (((C6518 * C152555 + C7815 * C152435) * C6260 +
             (C6503 + C6504) * C6261 + C6514 * C6262) *
                C152542 -
            ((C8574 + C8564) * C6262 + (C8575 + C8567) * C6261 +
             ((C134 * C2197 + C2210 + C2210 + C152449 * C2205) * C152435 +
              C8070 * C152555) *
                 C6260) *
                C152326) *
               C152583) *
              C152527 +
          ((((C6740 + C6739) * C6260 + (C6738 + C6737) * C6261 +
             C7142 * C6262) *
                C152326 -
            (C6275 * C6262 + (C6267 + C6266) * C6261 +
             (C6265 + C6264) * C6260) *
                C152542) *
               C1373 +
           (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
             C6945 * C6262) *
                C152542 -
            ((C7441 + C7442) * C6262 + (C7440 + C7439) * C6261 +
             (C7438 + C7437) * C6260) *
                C152326) *
               C1374 +
           (((C8567 + C8575) * C6260 + (C8564 + C8574) * C6261 +
             (C2062 * C152555 +
              (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C152435) *
                 C6262) *
                C152326 -
            ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
             (C6504 + C6503) * C6260) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152542 -
           (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
            (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
               C152165 * C152326) *
              C152221 * C829 +
          ((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
               C152165 * C152326 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152542 -
           (C8572 * C31464 + C2063 * C31463 + C1221 * C31462 + C683 * C31461) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C682 * C31461 + C1222 * C31462 + C2062 * C31463 +
            (C134 * C2200 + C2213 + C2213 + C152449 * C2208) * C31464) *
               C152165 * C152326 -
           (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
             C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
                C152165 * C152542 -
            (C8786 * C31464 + C8070 * C31463 + C7446 * C31462 +
             (C134 * C604 + C647 + C647 + C152449 * C628) * C31461) *
                C152165 * C152326) *
               C1373 +
           ((C7446 * C31461 + C8070 * C31462 + C8786 * C31463 +
             C25683 * C31464) *
                C152165 * C152326 -
            (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 +
             C6517 * C31461) *
                C152165 * C152542) *
               C1374 +
           ((C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
             C24745 * C31464) *
                C152165 * C152542 -
            ((C134 * C25670 + C25679 + C25679 + C152449 * C25674) * C31464 +
             C25683 * C31463 + C8786 * C31462 + C8070 * C31461) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          (((C684 * C31461 + C1220 * C31462 + C2064 * C31463 + C8573 * C31464) *
                C152165 * C152326 -
            (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
                C152165 * C152542) *
               C1373 +
           ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
                C152165 * C152542 -
            (C25475 * C31464 + C8573 * C31463 + C2064 * C31462 +
             C1220 * C31461) *
                C152165 * C152326) *
               C1374 +
           ((C2064 * C31461 + C8573 * C31462 + C25475 * C31463 +
             (C134 * C25671 + C25680 + C25680 + C152449 * C25675) * C31464) *
                C152165 * C152326 -
            (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 +
             C440 * C31461) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[349] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            (C134 * C359 + C402 + C402 + C152449 * C383) * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C152221 * C129 -
          (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
              C152239 * C152221 * C130 +
          (C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
              C152221 * C131 -
          ((C6272 + C6273) * C6262 + (C6271 + C6270) * C6261 + C6275 * C6260) *
              C152239 * C152221 * C132 +
          (C6276 * C6260 + (C6273 + C6272) * C6261 +
           (C198 * C152555 +
            (C134 * C833 + C839 + C839 + C152449 * C835) * C152435) *
               C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C152627 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C152613 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 +
            (C6507 + C6508) * C6262) *
               C152239 * C152613 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C152627 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C354 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C152627 -
           ((C444 * C152435 + C443 * C152555) * C6262 +
            (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C152613 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
             C6517 * C152435) *
                C6260 +
            (C6264 + C6265) * C6261 + C6274 * C6262) *
               C152239 * C1373 -
           (C6512 * C6262 + (C6499 + C6500) * C6261 +
            (C6518 * C152435 + C6517 * C152555) * C6260) *
               C152239 * C1374 +
           ((C6518 * C152555 +
             (C134 * C1470 + C1495 + C1495 + C152449 * C1486) * C152435) *
                C6260 +
            (C6503 + C6504) * C6261 + C6514 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C6500 + C6499) * C6260 + (C6498 + C6497) * C6261 + C6945 * C6262) *
               C152239 * C1374 -
           (C6275 * C6262 + (C6267 + C6266) * C6261 + (C6265 + C6264) * C6260) *
               C152239 * C1373 -
           ((C6509 + C6510) * C6262 + (C6506 + C6505) * C6261 +
            (C6504 + C6503) * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C6274 * C6260 + (C6269 + C6268) * C6261 + C6276 * C6262) * C152239 *
               C1373 -
           ((C6946 + C6947) * C6262 + (C6508 + C6507) * C6261 + C6512 * C6260) *
               C152239 * C1374 +
           (C6514 * C6260 + (C6510 + C6509) * C6261 +
            (C444 * C152555 +
             (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C152435) *
                C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C152555 +
            C6517 * C152435) *
               C6260 +
           (C6264 + C6265) * C6261 + C6274 * C6262) *
              C152239 * C1461 -
          (C6512 * C6262 + (C6499 + C6500) * C6261 +
           (C6518 * C152435 + C6517 * C152555) * C6260) *
              C152239 * C1462 +
          ((C6518 * C152555 + C7815 * C152435) * C6260 +
           (C6503 + C6504) * C6261 + C6514 * C6262) *
              C152239 * C1463 -
          ((C7816 * C152435 + C1847 * C152555) * C6262 +
           (C7817 * C152435 + C1848 * C152555) * C6261 +
           (C7818 * C152435 + C7815 * C152555) * C6260) *
              C152239 * C1464 +
          ((C7818 * C152555 +
            (C134 * C7786 + C7804 + C7804 + C152449 * C7792) * C152435) *
               C6260 +
           (C7817 * C152555 +
            (C134 * C7787 + C7805 + C7805 + C152449 * C7793) * C152435) *
               C6261 +
           (C7816 * C152555 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C152435) *
               C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C152221 * C129 -
          (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
              C152165 * C152239 * C152221 * C130 +
          (C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
              C152165 * C152239 * C152221 * C131 -
          (C1846 * C31464 + C442 * C31463 + C437 * C31462 + C195 * C31461) *
              C152165 * C152239 * C152221 * C132 +
          (C196 * C31461 + C443 * C31462 + C444 * C31463 +
           (C134 * C1829 + C1839 + C1839 + C152449 * C1831) * C31464) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C152627 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C152613 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C353 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C152613 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C152627 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C152627 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C152613 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
            C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
               C152165 * C152239 * C1373 -
           (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
               C152165 * C152239 * C1374 +
           (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 +
            C24745 * C31464) *
               C152165 * C152239 * C152583) *
              C152624 +
          ((C439 * C31461 + C440 * C31462 + C1848 * C31463 + C7817 * C31464) *
               C152165 * C152239 * C1374 -
           (C1848 * C31464 + C440 * C31463 + C439 * C31462 + C193 * C31461) *
               C152165 * C152239 * C1373 -
           (C24744 * C31464 + C7817 * C31463 + C1848 * C31462 + C440 * C31461) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C194 * C31461 + C438 * C31462 + C441 * C31463 + C1847 * C31464) *
               C152165 * C152239 * C1373 -
           (C7816 * C31464 + C1847 * C31463 + C441 * C31462 + C438 * C31461) *
               C152165 * C152239 * C1374 +
           (C441 * C31461 + C1847 * C31462 + C7816 * C31463 +
            (C134 * C7788 + C7806 + C7806 + C152449 * C7794) * C31464) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C136 + C161 + C161 + C152449 * C152) * C31461 +
           C6517 * C31462 + C6518 * C31463 + C7815 * C31464) *
              C152165 * C152239 * C1461 -
          (C7818 * C31464 + C7815 * C31463 + C6518 * C31462 + C6517 * C31461) *
              C152165 * C152239 * C1462 +
          (C6518 * C31461 + C7815 * C31462 + C7818 * C31463 + C24745 * C31464) *
              C152165 * C152239 * C1463 -
          (C32449 * C31464 + C24745 * C31463 + C7818 * C31462 +
           C7815 * C31461) *
              C152165 * C152239 * C1464 +
          (C7818 * C31461 + C24745 * C31462 + C32449 * C31463 +
           (C134 * C32440 + C32446 + C32446 + C152449 * C32442) * C31464) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152280 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152287 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C3759) *
              C152198 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152287 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152280 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C3759) *
              C152207 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152280 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152287 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152280 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152287 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C3759) *
              C152198 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152287 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152280 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C3759) *
              C152207 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152280 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152287 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C3759) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152280 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C152287 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C152542 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C3759) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C152280 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152287 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152280 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152287 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C152542 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C3759) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C152280 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152287 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C152542) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152634 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152630 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152618 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152239 * C152593) *
              C3415 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152630 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152634 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152618 +
           ((C16851 + C16850) * C152419 * C6260 +
            (C16849 + C16848) * C152419 * C6261 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C152419 * C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C3275 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152284) *
              C152633 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152284 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C3275) *
              C152626 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C3275 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152284) *
              C152611 +
          ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
            (C14621 * C366 + C15499 + C15499 + C152557 * C390 + C14623 * C1184 +
             C15500 + C15500 + C152461 * C1196) *
                C152419 * C6262) *
               C152239 * C152284 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152628 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152615 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C152419 * C6260 +
             (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                C152586) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152615 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152628 -
            ((C18251 + C18252) * C152419 * C6262 +
             (C18253 + C18254) * C152419 * C6261 +
             (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
              C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                 C152419 * C6260) *
                C152586) *
               C152284) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152615 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152628 -
            ((C15294 + C15295) * C152419 * C6262 +
             (C15291 + C15290) * C152419 * C6261 +
             (C15289 + C15288) * C152419 * C6260) *
                C152586) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152628 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152615 +
            ((C18254 + C18253) * C152419 * C6260 +
             (C18252 + C18251) * C152419 * C6261 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152419 * C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C3275 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C152633 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C3275 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152634 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152630 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C152618 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C3415 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152630 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152634 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C152618 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152628 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152615 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C23220 +
             (C38784 + C38785) * C23221 + C38792 * C23222) *
                C152165 * C152586) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152615 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152628 -
            ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
             (C38785 + C38784) * C23220) *
                C152165 * C152586) *
               C152284) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152615 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152628 -
            ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
             (C15289 + C15288) * C23220) *
                C152165 * C152586) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152628 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152615 +
            ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C23222) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C152542 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C3275 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C152542 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C3275 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C152542) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C3275 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152284) *
              C152633 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152284 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C3275) *
              C152626 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C3275 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152284) *
              C152611 +
          ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
            (C14621 * C366 + C15499 + C15499 + C152557 * C390 + C14623 * C1184 +
             C15500 + C15500 + C152461 * C1196) *
                C152419 * C6262) *
               C152239 * C152284 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152634 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152630 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152618 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152239 * C152593) *
              C3415 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152630 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152634 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152618 +
           ((C16851 + C16850) * C152419 * C6260 +
            (C16849 + C16848) * C152419 * C6261 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C152419 * C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C3275 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C152633 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C3275) *
              C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C3275 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C152611 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C3275) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152634 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152630 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C152618 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C3415 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C152630 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152634 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C152618 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152280 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152287 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C4281 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C3759) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C152280 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152287 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152280 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152287 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C4281 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C3759) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152280 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152287 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C4281) *
               C3759) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152322 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C4953) *
              C152280 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152329 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152322 -
           ((C18251 + C18252) * C152419 * C6262 +
            (C18253 + C18254) * C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C4953) *
              C152287 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152322 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152329 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152322 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C4953) *
              C152280 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152329 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152322 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C4953) *
              C152287 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152322 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152329 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C4953) *
              C3759) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C4281 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152634 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152326 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C4281) *
              C152630 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C4281 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152326) *
              C152618 +
          (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
             C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                C152419 * C6260 +
            (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
             C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                C152419 * C6261 +
            (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
             C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                C152419 * C6262) *
               C152326 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152284) *
              C152624 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C152609 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C4281 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C3275 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152635 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152621 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C3275 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152632 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152635 -
           ((C18251 + C18252) * C152419 * C6262 +
            (C18253 + C18254) * C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152621 +
           ((C14621 * C3129 + C18665 + C18665 + C152557 * C3137 +
             C14623 * C9344 + C18666 + C18666 + C152461 * C9350) *
                C152419 * C6260 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C152419 * C6261 +
            (C14621 * C3131 + C18669 + C18669 + C152557 * C3139 +
             C14623 * C9346 + C18670 + C18670 + C152461 * C9352) *
                C152419 * C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C4281 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C3275 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152634 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C4281) *
              C152630 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C4281 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C152618 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152635 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152621 -
           ((C40790 + C40791) * C23222 + (C40792 + C40793) * C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C3275 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152632 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152635 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152621 +
           ((C40793 + C40792) * C23220 + (C40791 + C40790) * C23221 +
            (C14621 * C26938 + C40780 + C40780 + C152557 * C26942 +
             C14623 * C33441 + C40781 + C40781 + C152461 * C33443) *
                C23222) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[358] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                       C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                          C152419 * C6260 +
                      (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                         C152322 -
                     (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                      (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                       C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                          C152419 * C6260) *
                         C152329 +
                     ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                       C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                          C152419 * C6260 +
                      (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                         C4953) *
                        C3275 +
                    (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                       C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                          C152419 * C6260 +
                      (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                         C152329 -
                     (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                      (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                       C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                          C152419 * C6260) *
                         C152322 -
                     ((C18251 + C18252) * C152419 * C6262 +
                      (C18253 + C18254) * C152419 * C6261 +
                      (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
                       C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                          C152419 * C6260) *
                         C4953) *
                        C152284) *
                       C152527 +
                   ((((C15287 + C15286) * C152419 * C6260 +
                      (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                         C152329 -
                     (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                      (C14681 + C14680) * C152419 * C6260) *
                         C152322 -
                     ((C15294 + C15295) * C152419 * C6262 +
                      (C15291 + C15290) * C152419 * C6261 +
                      (C15289 + C15288) * C152419 * C6260) *
                         C4953) *
                        C3275 +
                    (((C14985 + C14984) * C152419 * C6260 +
                      (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                         C152322 -
                     ((C16044 + C16045) * C152419 * C6262 +
                      (C16043 + C16042) * C152419 * C6261 +
                      (C16041 + C16040) * C152419 * C6260) *
                         C152329 +
                     ((C18254 + C18253) * C152419 * C6260 +
                      (C18252 + C18251) * C152419 * C6261 +
                      (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
                       C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                          C152419 * C6262) *
                         C4953) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                       C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                          C23220 +
                      (C37238 + C37239) * C23221 + C37244 * C23222) *
                         C152165 * C152322 -
                     (C38745 * C23222 + (C38159 + C38160) * C23221 +
                      (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                       C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                          C23220) *
                         C152165 * C152329 +
                     ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                       C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                          C23220 +
                      (C38784 + C38785) * C23221 + C38792 * C23222) *
                         C152165 * C4953) *
                        C3275 +
                    (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
                      C39497 * C23222) *
                         C152165 * C152329 -
                     (C38501 * C23222 + (C37241 + C37240) * C23221 +
                      (C37239 + C37238) * C23220) *
                         C152165 * C152322 -
                     ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
                      (C38785 + C38784) * C23220) *
                         C152165 * C4953) *
                        C152284) *
                       C152527 +
                   ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
                      C39290 * C23222) *
                         C152165 * C152329 -
                     (C37225 * C23222 + (C14984 + C14985) * C23221 +
                      (C14681 + C14680) * C23220) *
                         C152165 * C152322 -
                     ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
                      (C15289 + C15288) * C23220) *
                         C152165 * C4953) *
                        C3275 +
                    (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
                      C38987 * C23222) *
                         C152165 * C152322 -
                     ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
                      (C16041 + C16040) * C23220) *
                         C152165 * C152329 +
                     ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
                      (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
                       C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                          C23222) *
                         C152165 * C4953) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C3275 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152284) *
              C152624 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C3275 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C152609 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C4281 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C3275 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C4281 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152634 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152326 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C4281) *
              C152630 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C4281 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152326) *
              C152618 +
          (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
             C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                C152419 * C6260 +
            (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
             C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                C152419 * C6261 +
            (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
             C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                C152419 * C6262) *
               C152326 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C3275 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152284) *
              C152624 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C3275 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152609 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C4281 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C3275 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C4281) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152634 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C4281) *
              C152630 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C4281 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C152618 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C4281) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1823 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1824 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C1825 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152239 * C152593) *
              C152527 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1824 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1823 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C1825 +
           ((C16851 + C16850) * C152419 * C6260 +
            (C16849 + C16848) * C152419 * C6261 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C152419 * C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152541 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152284) *
              C829 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152284 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152541) *
              C830 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152541 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152284) *
              C831 +
          ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
            (C14621 * C366 + C15499 + C15499 + C152557 * C390 + C14623 * C1184 +
             C15500 + C15500 + C152461 * C1196) *
                C152419 * C6262) *
               C152239 * C152284 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C2359 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C2360 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C152419 * C6260 +
             (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                C152586) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C2360 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C2359 -
            ((C18251 + C18252) * C152419 * C6262 +
             (C18253 + C18254) * C152419 * C6261 +
             (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
              C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                 C152419 * C6260) *
                C152586) *
               C152284) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C2360 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C2359 -
            ((C15294 + C15295) * C152419 * C6262 +
             (C15291 + C15290) * C152419 * C6261 +
             (C15289 + C15288) * C152419 * C6260) *
                C152586) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C2359 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C2360 +
            ((C18254 + C18253) * C152419 * C6260 +
             (C18252 + C18251) * C152419 * C6261 +
             (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
              C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                 C152419 * C6262) *
                C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152541 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C829 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152541 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1823 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1824 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C1825 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C152527 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C1824 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1823 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C1825 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C2359 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C2360 +
            ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
              C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                 C23220 +
             (C38784 + C38785) * C23221 + C38792 * C23222) *
                C152165 * C152586) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C2360 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C2359 -
            ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
             (C38785 + C38784) * C23220) *
                C152165 * C152586) *
               C152284) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C2360 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C2359 -
            ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
             (C15289 + C15288) * C23220) *
                C152165 * C152586) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C2359 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C2360 +
            ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
             (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
              C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                 C23222) *
                C152165 * C152586) *
               C152284) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152542 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C1823 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152326 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152542) *
              C1824 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152542 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152326) *
              C1825 +
          (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
             C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                C152419 * C6260 +
            (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
             C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                C152419 * C6261 +
            (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
             C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                C152419 * C6262) *
               C152326 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C152284) *
              C353 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C354 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C152542 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C152541 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2973 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C2975 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C152541 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C2974 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C2973 -
           ((C18251 + C18252) * C152419 * C6262 +
            (C18253 + C18254) * C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C2975 +
           ((C14621 * C3129 + C18665 + C18665 + C152557 * C3137 +
             C14623 * C9344 + C18666 + C18666 + C152461 * C9350) *
                C152419 * C6260 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C152419 * C6261 +
            (C14621 * C3131 + C18669 + C18669 + C152557 * C3139 +
             C14623 * C9346 + C18670 + C18670 + C152461 * C9352) *
                C152419 * C6262) *
               C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            ((C38157 + C38158) * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
              C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                 C23222) *
                C152165 * C152326 -
            ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             (C17163 + C17162) * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             (C16851 + C16850) * C23222) *
                C152165 * C152542 -
            ((C14623 * C8037 + C17361 + C17361 + C152461 * C8043 +
              C14621 * C2198 + C17360 + C17360 + C152557 * C2206) *
                 C23222 +
             (C17162 + C17163) * C23221 + (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C152542 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C152541 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C1823 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152542) *
              C1824 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152542 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C1825 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2973 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C2975 -
           ((C40790 + C40791) * C23222 + (C40792 + C40793) * C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C152541 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C2974 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C2973 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C2975 +
           ((C40793 + C40792) * C23220 + (C40791 + C40790) * C23221 +
            (C14621 * C26938 + C40780 + C40780 + C152557 * C26942 +
             C14623 * C33441 + C40781 + C40781 + C152461 * C33443) *
                C23222) *
               C152165 * C152599) *
              C152284) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                   C152419 * C6260 +
               (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                  C152239 * C152221 * C129 -
              (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
               (C14681 + C14680) * C152419 * C6260) *
                  C152239 * C152221 * C130 +
              (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
               C14695 * C6262) *
                  C152239 * C152221 * C131 -
              ((C14688 + C14689) * C152419 * C6262 +
               (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
                  C152239 * C152221 * C132 +
              (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
               (C14621 * C142 + C14658 + C14658 + C152557 * C158 +
                C14623 * C975 + C14659 + C14659 + C152461 * C977) *
                   C152419 * C6262) *
                  C152239 * C152221 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                 C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                    C152419 * C6260 +
                (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                   C152239 * C152627 -
               (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                 C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                    C152419 * C6260) *
                   C152239 * C152613 +
               ((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
                 C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                    C152419 * C6260 +
                (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                   C152239 * C152583) *
                  C353 +
              (((C14985 + C14984) * C152419 * C6260 +
                (C14983 + C14982) * C152419 * C6261 +
                (C14990 + C14991) * C152419 * C6262) *
                   C152239 * C152613 -
               (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                (C14681 + C14680) * C152419 * C6260) *
                   C152239 * C152627 -
               ((C14992 + C14993) * C152419 * C6262 +
                (C14989 + C14988) * C152419 * C6261 +
                (C14987 + C14986) * C152419 * C6260) *
                   C152239 * C152583) *
                  C354 +
              ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
                C14695 * C6262) *
                   C152239 * C152627 -
               ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
                 C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                    C152419 * C6262 +
                (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                   C152239 * C152613 +
               (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
                (C14621 * C365 + C14956 + C14956 + C152557 * C389 +
                 C14623 * C2045 + C14957 + C14957 + C152461 * C2047) *
                    C152419 * C6262) *
                   C152239 * C152583) *
                  C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152628 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152221 * C353 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 +
            (C15292 + C15293) * C152419 * C6262) *
               C152615 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152628 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152586) *
              C152221 * C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152628 -
           ((C14623 * C610 + C15256 + C15256 + C152461 * C634 + C14621 * C609 +
             C15257 + C15257 + C152557 * C633) *
                C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152615 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1373 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1374 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1374 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1373 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C1373 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C1374 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C1461 -
          (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
           (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 + C14621 * C359 +
            C14927 + C14927 + C152557 * C383) *
               C152419 * C6260) *
              C152239 * C1462 +
          ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C152419 * C6260 +
           (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
              C152239 * C1463 -
          ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
            C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
               C152419 * C6262 +
           (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
            C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
               C152419 * C6261 +
           (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
            C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
               C152419 * C6260) *
              C152239 * C1464 +
          ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
            C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
               C152419 * C6260 +
           (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
            C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
               C152419 * C6261 +
           (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
            C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
               C152419 * C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152628 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C1373 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152615 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152628 -
           ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
             C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                C152419 * C6262 +
            (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
             C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152586) *
              C1374 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152628 -
           ((C14623 * C1655 + C16624 + C16624 + C152461 * C1679 +
             C14621 * C1650 + C16625 + C16625 + C152557 * C1674) *
                C152419 * C6262 +
            (C14623 * C1654 + C16626 + C16626 + C152461 * C1678 +
             C14621 * C1651 + C16627 + C16627 + C152557 * C1675) *
                C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2359 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152221 * C152624 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C2360 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C2359 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152586) *
              C152221 * C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C2359 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C2360 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2359 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152627 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C2360 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C2359 -
           ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
             C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                C152419 * C6262 +
            (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
             C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152586) *
              C152613 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C2359 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C2590 -
          (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
           (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
            C15229 + C15229 + C152557 * C628) *
               C152419 * C6260) *
              C2591 +
          ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
            C15231 + C15231 + C152461 * C2614) *
               C152419 * C6260 +
           (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
              C2592 -
          ((C14623 * C2601 + C17931 + C17931 + C152461 * C2617 +
            C14621 * C2596 + C17932 + C17932 + C152557 * C2612) *
               C152419 * C6262 +
           (C14623 * C2600 + C17933 + C17933 + C152461 * C2616 +
            C14621 * C2597 + C17934 + C17934 + C152557 * C2613) *
               C152419 * C6261 +
           (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
            C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
               C152419 * C6260) *
              C2593 +
          ((C14621 * C2599 + C17937 + C17937 + C152557 * C2615 +
            C14623 * C17921 + C17938 + C17938 + C152461 * C17927) *
               C152419 * C6260 +
           (C14621 * C2600 + C17939 + C17939 + C152557 * C2616 +
            C14623 * C17922 + C17940 + C17940 + C152461 * C17928) *
               C152419 * C6261 +
           (C14621 * C2601 + C17941 + C17941 + C152557 * C2617 +
            C14623 * C17923 + C17942 + C17942 + C152461 * C17929) *
               C152419 * C6262) *
              C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C14621 * C1648 + C16623 + C16623 + C152557 * C1672 +
             C14623 * C3129 + C16622 + C16622 + C152461 * C3137) *
                C23221 +
            (C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C23222) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152615 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152628 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152628 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152615 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C1373 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            (C38788 + C38789) * C23222) *
               C152165 * C152615 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152628 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C1374 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152628 -
           ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
             C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                C23222 +
            (C38789 + C38788) * C23221 + C38745 * C23220) *
               C152165 * C152615 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C2360 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C2359 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C2359 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C2360 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152627 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C2360 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C2359 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C152613 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C2359 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C2360 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C2590 -
          (C38745 * C23222 + (C38159 + C38160) * C23221 +
           (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
            C15229 + C15229 + C152557 * C628) *
               C23220) *
              C152165 * C2591 +
          ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
            C15231 + C15231 + C152461 * C2614) *
               C23220 +
           (C38784 + C38785) * C23221 + C38792 * C23222) *
              C152165 * C2592 -
          ((C14623 * C26241 + C40074 + C40074 + C152461 * C26245 +
            C14621 * C10052 + C40075 + C40075 + C152557 * C10058) *
               C23222 +
           (C14623 * C9344 + C18666 + C18666 + C152461 * C9350 +
            C14621 * C3129 + C18665 + C18665 + C152557 * C3137) *
               C23221 +
           (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
            C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
               C23220) *
              C152165 * C2593 +
          ((C14621 * C2599 + C17937 + C17937 + C152557 * C2615 +
            C14623 * C17921 + C17938 + C17938 + C152461 * C17927) *
               C23220 +
           (C14621 * C9344 + C40076 + C40076 + C152557 * C9350 +
            C14623 * C40067 + C40077 + C40077 + C152461 * C40071) *
               C23221 +
           (C14621 * C26241 + C40078 + C40078 + C152557 * C26245 +
            C14623 * C40068 + C40079 + C40079 + C152461 * C40072) *
               C23222) *
              C152165 * C2594) *
         C152221 * C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C1373 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C1374 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C152542 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C152583) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C1373 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C1374 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152542 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152221 * C829 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152326 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152542) *
              C152221 * C830 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152542 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152326) *
              C152221 * C831 +
          ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
            (C14621 * C611 + C15707 + C15707 + C152557 * C635 + C14623 * C612 +
             C15708 + C15708 + C152461 * C636) *
                C152419 * C6262) *
               C152326 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2973 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C2975 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C152221 * C152527 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C2974 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C2973 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C2975 +
           ((C18470 + C18469) * C152419 * C6260 +
            (C18468 + C18467) * C152419 * C6261 +
            (C14621 * C2595 + C18457 + C18457 + C152557 * C2611 +
             C14623 * C2602 + C18458 + C18458 + C152461 * C2618) *
                C152419 * C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152542 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C1373 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C38788 + C38789) * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C1374 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C152542 -
            ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
              C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                 C23222 +
             (C38789 + C38788) * C23221 + C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C1373 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C1374 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2973 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2974 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C2975 -
           ((C14623 * C26241 + C40074 + C40074 + C152461 * C26245 +
             C14621 * C10052 + C40075 + C40075 + C152557 * C10058) *
                C23222 +
            (C14623 * C9344 + C18666 + C18666 + C152461 * C9350 +
             C14621 * C3129 + C18665 + C18665 + C152557 * C3137) *
                C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C152221 * C152527 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C2974 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C2973 -
           ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
            (C15289 + C15288) * C23220) *
               C152165 * C2975 +
           ((C18470 + C18469) * C23220 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C23221 +
            (C14621 * C10053 + C40576 + C40576 + C152557 * C10059 +
             C14623 * C26242 + C40577 + C40577 + C152461 * C26246) *
                C23222) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152627 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152613 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 +
            (C14990 + C14991) * C152419 * C6262) *
               C152239 * C152613 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152627 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152627 -
           ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
             C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152613 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C152221 * C129 -
          (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
           (C14681 + C14680) * C152419 * C6260) *
              C152239 * C152221 * C130 +
          (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
           C14695 * C6262) *
              C152239 * C152221 * C131 -
          ((C14688 + C14689) * C152419 * C6262 +
           (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
              C152239 * C152221 * C132 +
          (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
           (C14621 * C142 + C14658 + C14658 + C152557 * C158 + C14623 * C975 +
            C14659 + C14659 + C152461 * C977) *
               C152419 * C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1373 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1374 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1374 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1373 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C1373 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C1374 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C1461 -
          (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
           (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 + C14621 * C359 +
            C14927 + C14927 + C152557 * C383) *
               C152419 * C6260) *
              C152239 * C1462 +
          ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C152419 * C6260 +
           (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
              C152239 * C1463 -
          ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
            C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
               C152419 * C6262 +
           (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
            C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
               C152419 * C6261 +
           (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
            C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
               C152419 * C6260) *
              C152239 * C1464 +
          ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
            C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
               C152419 * C6260 +
           (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
            C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
               C152419 * C6261 +
           (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
            C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
               C152419 * C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2359 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152221 * C152624 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C2360 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C2359 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152586) *
              C152221 * C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C2359 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C2360 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C2359 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152627 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C2360 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C2359 -
           ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
             C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                C152419 * C6262 +
            (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
             C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152586) *
              C152613 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C2359 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C2360 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152221 * C152624 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C2360 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C2359 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C2359 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C2360 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C2359 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C2360 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C152627 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C2360 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C2359 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C152613 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C2359 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C2360 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C152207 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C4281 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C152541 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152284) *
              C152198 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C152207 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C4281 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C152541 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C4281) *
               C152284) *
              C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                       C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                          C152419 * C6260 +
                      (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                         C152322 -
                     (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
                      (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                       C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                          C152419 * C6260) *
                         C152329 +
                     ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                       C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                          C152419 * C6260 +
                      (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
                         C4953) *
                        C152541 +
                    (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
                       C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                          C152419 * C6260 +
                      (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                         C152329 -
                     (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
                      (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
                       C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                          C152419 * C6260) *
                         C152322 -
                     ((C18251 + C18252) * C152419 * C6262 +
                      (C18253 + C18254) * C152419 * C6261 +
                      (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
                       C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                          C152419 * C6260) *
                         C4953) *
                        C152284) *
                       C3415 +
                   ((((C15287 + C15286) * C152419 * C6260 +
                      (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                         C152329 -
                     (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
                      (C14681 + C14680) * C152419 * C6260) *
                         C152322 -
                     ((C15294 + C15295) * C152419 * C6262 +
                      (C15291 + C15290) * C152419 * C6261 +
                      (C15289 + C15288) * C152419 * C6260) *
                         C4953) *
                        C152541 +
                    (((C14985 + C14984) * C152419 * C6260 +
                      (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                         C152322 -
                     ((C16044 + C16045) * C152419 * C6262 +
                      (C16043 + C16042) * C152419 * C6261 +
                      (C16041 + C16040) * C152419 * C6260) *
                         C152329 +
                     ((C18254 + C18253) * C152419 * C6260 +
                      (C18252 + C18251) * C152419 * C6261 +
                      (C14621 * C1645 + C18241 + C18241 + C152557 * C1669 +
                       C14623 * C3132 + C18242 + C18242 + C152461 * C3140) *
                          C152419 * C6262) *
                         C4953) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 +
                       C14623 * C604 + C14627 + C14627 + C152461 * C628) *
                          C23220 +
                      (C37238 + C37239) * C23221 + C37244 * C23222) *
                         C152165 * C152322 -
                     (C38745 * C23222 + (C38159 + C38160) * C23221 +
                      (C14623 * C605 + C15228 + C15228 + C152461 * C629 +
                       C14621 * C604 + C15229 + C15229 + C152557 * C628) *
                          C23220) *
                         C152165 * C152329 +
                     ((C14621 * C605 + C15230 + C15230 + C152557 * C629 +
                       C14623 * C2598 + C15231 + C15231 + C152461 * C2614) *
                          C23220 +
                      (C38784 + C38785) * C23221 + C38792 * C23222) *
                         C152165 * C4953) *
                        C152541 +
                    (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
                      C39497 * C23222) *
                         C152165 * C152329 -
                     (C38501 * C23222 + (C37241 + C37240) * C23221 +
                      (C37239 + C37238) * C23220) *
                         C152165 * C152322 -
                     ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
                      (C38785 + C38784) * C23220) *
                         C152165 * C4953) *
                        C152284) *
                       C3415 +
                   ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
                      C39290 * C23222) *
                         C152165 * C152329 -
                     (C37225 * C23222 + (C14984 + C14985) * C23221 +
                      (C14681 + C14680) * C23220) *
                         C152165 * C152322 -
                     ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
                      (C15289 + C15288) * C23220) *
                         C152165 * C4953) *
                        C152541 +
                    (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
                      C38987 * C23222) *
                         C152165 * C152322 -
                     ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
                      (C16041 + C16040) * C23220) *
                         C152165 * C152329 +
                     ((C18254 + C18253) * C23220 + (C40381 + C40380) * C23221 +
                      (C14621 * C8037 + C40374 + C40374 + C152557 * C8043 +
                       C14623 * C26939 + C40375 + C40375 + C152461 * C26943) *
                          C23222) *
                         C152165 * C4953) *
                        C152284) *
                       C152204)) /
                     (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152627 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152613 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C4281 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C152583) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C152627 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152613 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C4281 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152221 * C152633 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152326 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C4281) *
              C152221 * C152626 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C4281 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152326) *
              C152221 * C152611 +
          ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
            (C14621 * C611 + C15707 + C15707 + C152557 * C635 + C14623 * C612 +
             C15708 + C15708 + C152461 * C636) *
                C152419 * C6262) *
               C152326 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152635 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152621 -
           ((C18467 + C18468) * C152419 * C6262 +
            (C18469 + C18470) * C152419 * C6261 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C152419 * C6260) *
               C152599) *
              C152221 * C3415 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152632 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152635 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152621 +
           ((C18470 + C18469) * C152419 * C6260 +
            (C18468 + C18467) * C152419 * C6261 +
            (C14621 * C2595 + C18457 + C18457 + C152557 * C2611 +
             C14623 * C2602 + C18458 + C18458 + C152461 * C2618) *
                C152419 * C6262) *
               C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C4281 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152627 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152613 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C4281 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152627 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152613 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152635 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152632 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152621 -
           ((C40790 + C40791) * C23222 + (C40792 + C40793) * C23221 +
            (C14623 * C2599 + C17935 + C17935 + C152461 * C2615 +
             C14621 * C2598 + C17936 + C17936 + C152557 * C2614) *
                C23220) *
               C152165 * C152599) *
              C152221 * C3415 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152632 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152635 -
           ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
            (C15289 + C15288) * C23220) *
               C152165 * C152621 +
           ((C18470 + C18469) * C23220 +
            (C14621 * C3130 + C18667 + C18667 + C152557 * C3138 +
             C14623 * C9345 + C18668 + C18668 + C152461 * C9351) *
                C23221 +
            (C14621 * C10053 + C40576 + C40576 + C152557 * C10059 +
             C14623 * C26242 + C40577 + C40577 + C152461 * C26246) *
                C23222) *
               C152165 * C152599) *
              C152221 * C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152322 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C4953) *
              C152221 * C152198 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152329 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152322 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C4953) *
              C152221 * C152207 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152322 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152329 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152322 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152329 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C4953) *
              C152221 * C152198 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152329 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152322 -
           ((C40380 + C40381) * C23222 + (C18253 + C18254) * C23221 +
            (C15289 + C15288) * C23220) *
               C152165 * C4953) *
              C152221 * C152207 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152322 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152329 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C4953) *
              C152221 * C3762)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C4281 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152221 * C152633 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152326 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C4281) *
              C152221 * C152626 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C4281 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152326) *
              C152221 * C152611 +
          ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
            (C14621 * C611 + C15707 + C15707 + C152557 * C635 + C14623 * C612 +
             C15708 + C15708 + C152461 * C636) *
                C152419 * C6262) *
               C152326 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C4281 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152627 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C4281) *
               C152613 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C4281 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C152583) *
              C3415 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C4281) *
               C152627 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C4281 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152613 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C4281 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C152633 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            C39290 * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C4281) *
              C152221 * C152626 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C4281 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C152611 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C4281) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C4281 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152627 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             C39497 * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C4281) *
               C152613 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C4281 -
            ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
             C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C3415 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C4281) *
               C152627 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C4281 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152613 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C4281) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152541 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152284) *
              C829 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C152284 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152541) *
              C830 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152541 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152284) *
              C831 +
          ((C15501 * C6260 + (C15507 + C15506) * C152419 * C6261 +
            (C14621 * C366 + C15499 + C15499 + C152557 * C390 + C14623 * C1184 +
             C15500 + C15500 + C152461 * C1196) *
                C152419 * C6262) *
               C152239 * C152284 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1823 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1824 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C1825 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152239 * C152593) *
              C152527 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1824 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1823 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C1825 +
           ((C16851 + C16850) * C152419 * C6260 +
            (C16849 + C16848) * C152419 * C6261 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C152419 * C6262) *
               C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152541 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152284) *
              C829 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152284 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152541) *
              C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152541 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152284) *
              C831 +
          ((C15494 * C23220 + (C14993 + C14992) * C23221 +
            (C14621 * C1467 + C16838 + C16838 + C152557 * C1483 +
             C14623 * C2200 + C16839 + C16839 + C152461 * C2208) *
                C23222) *
               C152165 * C152239 * C152284 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152239 * C152541) *
              C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1823 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1824 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152239 * C1825 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152239 * C152593) *
              C152527 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            C38987 * C23222) *
               C152165 * C152239 * C1824 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1823 -
           ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
            C37225 * C23220) *
               C152165 * C152239 * C1825 +
           (C38987 * C23220 + (C38999 + C38998) * C23221 +
            (C14621 * C7787 + C38992 + C38992 + C152557 * C7793 +
             C14623 * C25671 + C38993 + C38993 + C152461 * C25675) *
                C23222) *
               C152165 * C152239 * C152593) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C152541 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C152284) *
              C353 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C152541 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C152284) *
              C354 +
          (((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
             C14695 * C6262) *
                C152542 -
            ((C15714 + C15715) * C152419 * C6262 +
             (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
                C152326) *
               C152541 +
           ((C16047 * C6260 + (C16045 + C16044) * C152419 * C6261 +
             (C14621 * C1183 + C16026 + C16026 + C152557 * C1195 +
              C14623 * C2821 + C16027 + C16027 + C152461 * C2823) *
                 C152419 * C6262) *
                C152326 -
            ((C15506 + C15507) * C152419 * C6262 +
             (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
                C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152542 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C1823 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152326 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152542) *
              C1824 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152542 -
           ((C17160 + C17161) * C152419 * C6262 +
            (C17162 + C17163) * C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152326) *
              C1825 +
          (((C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
             C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                C152419 * C6260 +
            (C14621 * C2198 + C17360 + C17360 + C152557 * C2206 +
             C14623 * C8037 + C17361 + C17361 + C152461 * C8043) *
                C152419 * C6261 +
            (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
             C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                C152419 * C6262) *
               C152326 -
           ((C16848 + C16849) * C152419 * C6262 +
            (C16850 + C16851) * C152419 * C6261 +
            (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
             C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
                C152419 * C6260) *
               C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            ((C38157 + C38158) * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C152541 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C14621 * C2197 + C17358 + C17358 + C152557 * C2205 +
              C14623 * C8036 + C17359 + C17359 + C152461 * C8042) *
                 C23222) *
                C152165 * C152326 -
            ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C152284) *
              C353 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             (C17163 + C17162) * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C152541 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             (C16851 + C16850) * C23222) *
                C152165 * C152542 -
            ((C14623 * C8037 + C17361 + C17361 + C152461 * C8043 +
              C14621 * C2198 + C17360 + C17360 + C152557 * C2206) *
                 C23222 +
             (C17162 + C17163) * C23221 + (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C152284) *
              C354 +
          (((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
                C152165 * C152542 -
            ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
             C15296 * C23220) *
                C152165 * C152326) *
               C152541 +
           ((C16046 * C23220 + (C17161 + C17160) * C23221 +
             (C14621 * C2199 + C17362 + C17362 + C152557 * C2207 +
              C14623 * C8038 + C17363 + C17363 + C152461 * C8044) *
                 C23222) *
                C152165 * C152326 -
            ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
             C14994 * C23220) *
                C152165 * C152542) *
               C152284) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C1823 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            C39497 * C23222) *
               C152165 * C152326 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152542) *
              C1824 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152542 -
           ((C39508 + C39509) * C23222 + (C38789 + C38788) * C23221 +
            C38745 * C23220) *
               C152165 * C152326) *
              C1825 +
          ((C39497 * C23220 + (C39509 + C39508) * C23221 +
            (C14621 * C25670 + C39502 + C39502 + C152557 * C25674 +
             C14623 * C32595 + C39503 + C39503 + C152461 * C32597) *
                C23222) *
               C152165 * C152326 -
           ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
            C38501 * C23220) *
               C152165 * C152542) *
              C152593) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152627 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152613 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 +
            (C14990 + C14991) * C152419 * C6262) *
               C152239 * C152613 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152627 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152627 -
           ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
             C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152613 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C152221 * C129 -
          (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
           (C14681 + C14680) * C152419 * C6260) *
              C152239 * C152221 * C130 +
          (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
           C14695 * C6262) *
              C152239 * C152221 * C131 -
          ((C14688 + C14689) * C152419 * C6262 +
           (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
              C152239 * C152221 * C132 +
          (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
           (C14621 * C142 + C14658 + C14658 + C152557 * C158 + C14623 * C975 +
            C14659 + C14659 + C152461 * C977) *
               C152419 * C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152628 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C152221 * C353 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 +
            (C15292 + C15293) * C152419 * C6262) *
               C152615 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152628 -
           ((C15294 + C15295) * C152419 * C6262 +
            (C15291 + C15290) * C152419 * C6261 +
            (C15289 + C15288) * C152419 * C6260) *
               C152586) *
              C152221 * C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152628 -
           ((C14623 * C610 + C15256 + C15256 + C152461 * C634 + C14621 * C609 +
             C15257 + C15257 + C152557 * C633) *
                C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152615 +
           (C15299 * C6260 + (C15295 + C15294) * C152419 * C6261 +
            (C14621 * C610 + C15258 + C15258 + C152557 * C634 + C14623 * C2977 +
             C15259 + C15259 + C152461 * C2979) *
                C152419 * C6262) *
               C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1373 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1374 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1374 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1373 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C1373 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C1374 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C1461 -
          (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
           (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 + C14621 * C359 +
            C14927 + C14927 + C152557 * C383) *
               C152419 * C6260) *
              C152239 * C1462 +
          ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C152419 * C6260 +
           (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
              C152239 * C1463 -
          ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
            C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
               C152419 * C6262 +
           (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
            C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
               C152419 * C6261 +
           (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
            C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
               C152419 * C6260) *
              C152239 * C1464 +
          ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
            C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
               C152419 * C6260 +
           (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
            C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
               C152419 * C6261 +
           (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
            C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
               C152419 * C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152628 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C152419 * C6260 +
            (C15288 + C15289) * C152419 * C6261 + C15299 * C6262) *
               C152586) *
              C1373 +
          (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
             C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                C152419 * C6260 +
            (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
               C152615 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152628 -
           ((C14623 * C3131 + C16618 + C16618 + C152461 * C3139 +
             C14621 * C1646 + C16619 + C16619 + C152557 * C1670) *
                C152419 * C6262 +
            (C14623 * C3130 + C16620 + C16620 + C152461 * C3138 +
             C14621 * C1647 + C16621 + C16621 + C152557 * C1671) *
                C152419 * C6261 +
            (C14623 * C3129 + C16622 + C16622 + C152461 * C3137 +
             C14621 * C1648 + C16623 + C16623 + C152557 * C1672) *
                C152419 * C6260) *
               C152586) *
              C1374 +
          (((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152628 -
           ((C14623 * C1655 + C16624 + C16624 + C152461 * C1679 +
             C14621 * C1650 + C16625 + C16625 + C152557 * C1674) *
                C152419 * C6262 +
            (C14623 * C1654 + C16626 + C16626 + C152461 * C1678 +
             C14621 * C1651 + C16627 + C16627 + C152557 * C1675) *
                C152419 * C6261 +
            (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C152419 * C6260) *
               C152615 +
           ((C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C152419 * C6260 +
            (C14621 * C1654 + C16632 + C16632 + C152557 * C1678 +
             C14623 * C10053 + C16633 + C16633 + C152461 * C10059) *
                C152419 * C6261 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C152419 * C6262) *
               C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C14621 * C1648 + C16623 + C16623 + C152557 * C1672 +
             C14623 * C3129 + C16622 + C16622 + C152461 * C3137) *
                C23221 +
            (C14621 * C1653 + C16630 + C16630 + C152557 * C1677 +
             C14623 * C10052 + C16631 + C16631 + C152461 * C10058) *
                C23222) *
               C152165 * C152586) *
              C152221 * C353 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152615 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152628 -
           ((C14623 * C10053 + C16633 + C16633 + C152461 * C10059 +
             C14621 * C1654 + C16632 + C16632 + C152557 * C1678) *
                C23222 +
            (C18253 + C18254) * C23221 + (C15289 + C15288) * C23220) *
               C152165 * C152586) *
              C152221 * C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152628 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152615 +
           (C15297 * C23220 + (C18252 + C18251) * C23221 +
            (C14621 * C1655 + C16634 + C16634 + C152557 * C1679 +
             C14623 * C10054 + C16635 + C16635 + C152461 * C10060) *
                C23222) *
               C152165 * C152586) *
              C152221 * C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152628 -
           (C38745 * C23222 + (C38159 + C38160) * C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152615 +
           ((C14621 * C605 + C15230 + C15230 + C152557 * C629 + C14623 * C2598 +
             C15231 + C15231 + C152461 * C2614) *
                C23220 +
            (C38784 + C38785) * C23221 + C38792 * C23222) *
               C152165 * C152586) *
              C1373 +
          (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
            (C38788 + C38789) * C23222) *
               C152165 * C152615 -
           (C38501 * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152628 -
           ((C38790 + C38791) * C23222 + (C38787 + C38786) * C23221 +
            (C38785 + C38784) * C23220) *
               C152165 * C152586) *
              C1374 +
          ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
               C152165 * C152628 -
           ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
             C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                C23222 +
            (C38789 + C38788) * C23221 + C38745 * C23220) *
               C152165 * C152615 +
           (C38792 * C23220 + (C38791 + C38790) * C23221 +
            (C14621 * C24963 + C38766 + C38766 + C152557 * C24967 +
             C14623 * C33899 + C38767 + C38767 + C152461 * C33901) *
                C23222) *
               C152165 * C152586) *
              C152583) *
         C152193) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152542 -
           (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C152419 * C6260) *
               C152326) *
              C152221 * C829 +
          (((C15287 + C15286) * C152419 * C6260 +
            (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
               C152326 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152542) *
              C152221 * C830 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152542 -
           ((C15714 + C15715) * C152419 * C6262 +
            (C15293 + C15292) * C152419 * C6261 + C15298 * C6260) *
               C152326) *
              C152221 * C831 +
          ((C15709 * C6260 + (C15715 + C15714) * C152419 * C6261 +
            (C14621 * C611 + C15707 + C15707 + C152557 * C635 + C14623 * C612 +
             C15708 + C15708 + C152461 * C636) *
                C152419 * C6262) *
               C152326 -
           ((C14688 + C14689) * C152419 * C6262 +
            (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
               C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C152419 * C6260 +
             (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
                C152542 -
            (C15298 * C6262 + (C15286 + C15287) * C152419 * C6261 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C152419 * C6260) *
                C152326) *
               C1373 +
           (((C14621 * C1179 + C16006 + C16006 + C152557 * C1191 +
              C14623 * C1648 + C16007 + C16007 + C152461 * C1672) *
                 C152419 * C6260 +
             (C16040 + C16041) * C152419 * C6261 + C16047 * C6262) *
                C152326 -
            (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
             (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
              C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                 C152419 * C6260) *
                C152542) *
               C1374 +
           (((C14621 * C360 + C14928 + C14928 + C152557 * C384 +
              C14623 * C1652 + C14929 + C14929 + C152461 * C1676) *
                 C152419 * C6260 +
             (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
                C152542 -
            ((C17160 + C17161) * C152419 * C6262 +
             (C17162 + C17163) * C152419 * C6261 +
             (C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
              C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                 C152419 * C6260) *
                C152326) *
               C152583) *
              C152527 +
          ((((C15287 + C15286) * C152419 * C6260 +
             (C15285 + C15284) * C152419 * C6261 + C15709 * C6262) *
                C152326 -
            (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
             (C14681 + C14680) * C152419 * C6260) *
                C152542) *
               C1373 +
           (((C14985 + C14984) * C152419 * C6260 +
             (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
                C152542 -
            ((C16044 + C16045) * C152419 * C6262 +
             (C16043 + C16042) * C152419 * C6261 +
             (C16041 + C16040) * C152419 * C6260) *
                C152326) *
               C1374 +
           (((C17163 + C17162) * C152419 * C6260 +
             (C17161 + C17160) * C152419 * C6261 +
             (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
              C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                 C152419 * C6262) *
                C152326 -
            ((C14992 + C14993) * C152419 * C6262 +
             (C14989 + C14988) * C152419 * C6261 +
             (C14987 + C14986) * C152419 * C6260) *
                C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152542 -
           ((C14623 * C1653 + C16628 + C16628 + C152461 * C1677 +
             C14621 * C1652 + C16629 + C16629 + C152557 * C1676) *
                C23222 +
            (C14623 * C1648 + C16007 + C16007 + C152461 * C1672 +
             C14621 * C1179 + C16006 + C16006 + C152557 * C1191) *
                C23221 +
            (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
             C15229 + C15229 + C152557 * C628) *
                C23220) *
               C152165 * C152326) *
              C152221 * C829 +
          (((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
            (C17163 + C17162) * C23222) *
               C152165 * C152326 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152542) *
              C152221 * C830 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152542 -
           ((C17160 + C17161) * C23222 + (C16043 + C16042) * C23221 +
            C15296 * C23220) *
               C152165 * C152326) *
              C152221 * C831 +
          ((C15702 * C23220 + (C16045 + C16044) * C23221 +
            (C14621 * C1649 + C17150 + C17150 + C152557 * C1673 +
             C14623 * C1656 + C17151 + C17151 + C152461 * C1680) *
                C23222) *
               C152165 * C152326 -
           ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
            C14691 * C23220) *
               C152165 * C152542) *
              C152221 * C152587)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
              C14627 + C14627 + C152461 * C628) *
                 C23220 +
             (C37238 + C37239) * C23221 + C37244 * C23222) *
                C152165 * C152542 -
            (C38745 * C23222 + (C38159 + C38160) * C23221 +
             (C14623 * C605 + C15228 + C15228 + C152461 * C629 + C14621 * C604 +
              C15229 + C15229 + C152557 * C628) *
                 C23220) *
                C152165 * C152326) *
               C1373 +
           (((C38160 + C38159) * C23220 + (C38158 + C38157) * C23221 +
             (C38788 + C38789) * C23222) *
                C152165 * C152326 -
            (C38501 * C23222 + (C37241 + C37240) * C23221 +
             (C37239 + C37238) * C23220) *
                C152165 * C152542) *
               C1374 +
           ((C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
                C152165 * C152542 -
            ((C14623 * C24963 + C38764 + C38764 + C152461 * C24967 +
              C14621 * C8769 + C38765 + C38765 + C152557 * C8775) *
                 C23222 +
             (C38789 + C38788) * C23221 + C38745 * C23220) *
                C152165 * C152326) *
               C152583) *
              C152527 +
          ((((C15287 + C15286) * C23220 + (C16040 + C16041) * C23221 +
             C39290 * C23222) *
                C152165 * C152326 -
            (C37225 * C23222 + (C14984 + C14985) * C23221 +
             (C14681 + C14680) * C23220) *
                C152165 * C152542) *
               C1373 +
           (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
             C38987 * C23222) *
                C152165 * C152542 -
            ((C39301 + C39302) * C23222 + (C17162 + C17163) * C23221 +
             (C16041 + C16040) * C23220) *
                C152165 * C152326) *
               C1374 +
           ((C39290 * C23220 + (C39302 + C39301) * C23221 +
             (C14621 * C8770 + C39295 + C39295 + C152557 * C8776 +
              C14623 * C24964 + C39296 + C39296 + C152461 * C24968) *
                 C23222) *
                C152165 * C152326 -
            ((C38998 + C38999) * C23222 + (C16850 + C16851) * C23221 +
             C37225 * C23220) *
                C152165 * C152542) *
               C152583) *
              C152204)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C152221 * C129 -
          (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
           (C14681 + C14680) * C152419 * C6260) *
              C152239 * C152221 * C130 +
          (C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
           C14695 * C6262) *
              C152239 * C152221 * C131 -
          ((C14688 + C14689) * C152419 * C6262 +
           (C14687 + C14686) * C152419 * C6261 + C14694 * C6260) *
              C152239 * C152221 * C132 +
          (C14695 * C6260 + (C14689 + C14688) * C152419 * C6261 +
           (C14621 * C142 + C14658 + C14658 + C152557 * C158 + C14623 * C975 +
            C14659 + C14659 + C152461 * C977) *
               C152419 * C6262) *
              C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C152627 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C152613 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 +
            (C14990 + C14991) * C152419 * C6262) *
               C152239 * C152613 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C152627 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C354 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C152627 -
           ((C14623 * C1183 + C14954 + C14954 + C152461 * C1195 +
             C14621 * C364 + C14955 + C14955 + C152557 * C388) *
                C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C152613 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C152419 * C6260 +
            (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
               C152239 * C1373 -
           (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
            (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 +
             C14621 * C359 + C14927 + C14927 + C152557 * C383) *
                C152419 * C6260) *
               C152239 * C1374 +
           ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
             C14929 + C14929 + C152461 * C1676) *
                C152419 * C6260 +
            (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
               C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C152419 * C6260 +
            (C14983 + C14982) * C152419 * C6261 + C15501 * C6262) *
               C152239 * C1374 -
           (C14694 * C6262 + (C14683 + C14682) * C152419 * C6261 +
            (C14681 + C14680) * C152419 * C6260) *
               C152239 * C1373 -
           ((C14992 + C14993) * C152419 * C6262 +
            (C14989 + C14988) * C152419 * C6261 +
            (C14987 + C14986) * C152419 * C6260) *
               C152239 * C152583) *
              C152609 +
          ((C14693 * C6260 + (C14685 + C14684) * C152419 * C6261 +
            C14695 * C6262) *
               C152239 * C1373 -
           ((C15506 + C15507) * C152419 * C6262 +
            (C14991 + C14990) * C152419 * C6261 + C14996 * C6260) *
               C152239 * C1374 +
           (C14997 * C6260 + (C14993 + C14992) * C152419 * C6261 +
            (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
             C14957 + C14957 + C152461 * C2047) *
                C152419 * C6262) *
               C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C152419 * C6260 +
           (C14680 + C14681) * C152419 * C6261 + C14693 * C6262) *
              C152239 * C1461 -
          (C14996 * C6262 + (C14984 + C14985) * C152419 * C6261 +
           (C14623 * C1179 + C14926 + C14926 + C152461 * C1191 + C14621 * C359 +
            C14927 + C14927 + C152557 * C383) *
               C152419 * C6260) *
              C152239 * C1462 +
          ((C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C152419 * C6260 +
           (C14986 + C14987) * C152419 * C6261 + C14997 * C6262) *
              C152239 * C1463 -
          ((C14623 * C2199 + C16388 + C16388 + C152461 * C2207 +
            C14621 * C1468 + C16389 + C16389 + C152557 * C1484) *
               C152419 * C6262 +
           (C14623 * C2198 + C16390 + C16390 + C152461 * C2206 +
            C14621 * C1469 + C16391 + C16391 + C152557 * C1485) *
               C152419 * C6261 +
           (C14623 * C2197 + C16392 + C16392 + C152461 * C2205 +
            C14621 * C1470 + C16393 + C16393 + C152557 * C1486) *
               C152419 * C6260) *
              C152239 * C1464 +
          ((C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
            C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
               C152419 * C6260 +
           (C14621 * C1472 + C16396 + C16396 + C152557 * C1488 +
            C14623 * C8770 + C16397 + C16397 + C152461 * C8776) *
               C152419 * C6261 +
           (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
            C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
               C152419 * C6262) *
              C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C14621 * C359 + C14927 + C14927 + C152557 * C383 + C14623 * C1179 +
            C14926 + C14926 + C152461 * C1191) *
               C23221 +
           (C14621 * C360 + C14928 + C14928 + C152557 * C384 + C14623 * C1652 +
            C14929 + C14929 + C152461 * C1676) *
               C23222) *
              C152165 * C152239 * C152221 * C129 -
          ((C14987 + C14986) * C23222 + (C14984 + C14985) * C23221 +
           (C14681 + C14680) * C23220) *
              C152165 * C152239 * C152221 * C130 +
          (C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
              C152165 * C152239 * C152221 * C131 -
          ((C14992 + C14993) * C23222 + (C14991 + C14990) * C23221 +
           C14691 * C23220) *
              C152165 * C152239 * C152221 * C132 +
          (C14692 * C23220 + (C15507 + C15506) * C23221 +
           (C14621 * C365 + C14956 + C14956 + C152557 * C389 + C14623 * C2045 +
            C14957 + C14957 + C152461 * C2047) *
               C23222) *
              C152165 * C152239 * C152221 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C152627 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C152613 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C353 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C152613 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C152627 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C354 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C152627 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C152613 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
             C14627 + C14627 + C152461 * C628) *
                C23220 +
            (C37238 + C37239) * C23221 + C37244 * C23222) *
               C152165 * C152239 * C1373 -
           ((C37242 + C37243) * C23222 + (C37241 + C37240) * C23221 +
            (C37239 + C37238) * C23220) *
               C152165 * C152239 * C1374 +
           (C37244 * C23220 + (C37243 + C37242) * C23221 +
            (C14621 * C1471 + C16394 + C16394 + C152557 * C1487 +
             C14623 * C8769 + C16395 + C16395 + C152461 * C8775) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152624 +
          (((C14985 + C14984) * C23220 + (C14986 + C14987) * C23221 +
            (C16851 + C16850) * C23222) *
               C152165 * C152239 * C1374 -
           (C37225 * C23222 + (C14984 + C14985) * C23221 +
            (C14681 + C14680) * C23220) *
               C152165 * C152239 * C1373 -
           ((C14623 * C8770 + C16397 + C16397 + C152461 * C8776 +
             C14621 * C1472 + C16396 + C16396 + C152557 * C1488) *
                C23222 +
            (C16850 + C16851) * C23221 + C37225 * C23220) *
               C152165 * C152239 * C152583) *
              C152609 +
          ((C14690 * C23220 + (C14983 + C14982) * C23221 + C14995 * C23222) *
               C152165 * C152239 * C1373 -
           ((C16848 + C16849) * C23222 + (C14989 + C14988) * C23221 +
            C14994 * C23220) *
               C152165 * C152239 * C1374 +
           (C14995 * C23220 + (C16849 + C16848) * C23221 +
            (C14621 * C1473 + C16398 + C16398 + C152557 * C1489 +
             C14623 * C8771 + C16399 + C16399 + C152461 * C8777) *
                C23222) *
               C152165 * C152239 * C152583) *
              C152577)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C14621 * C136 + C14626 + C14626 + C152557 * C152 + C14623 * C604 +
            C14627 + C14627 + C152461 * C628) *
               C23220 +
           (C37238 + C37239) * C23221 + C37244 * C23222) *
              C152165 * C152239 * C1461 -
          (C38501 * C23222 + (C37241 + C37240) * C23221 +
           (C37239 + C37238) * C23220) *
              C152165 * C152239 * C1462 +
          (C37244 * C23220 + (C37243 + C37242) * C23221 + C38526 * C23222) *
              C152165 * C152239 * C1463 -
          ((C38524 + C38525) * C23222 + (C38523 + C38522) * C23221 +
           C38501 * C23220) *
              C152165 * C152239 * C1464 +
          (C38526 * C23220 + (C38525 + C38524) * C23221 +
           (C14621 * C24727 + C38512 + C38512 + C152557 * C24731 +
            C14623 * C33058 + C38513 + C38513 + C152461 * C33060) *
               C23222) *
              C152165 * C152239 * C1465) *
         C152193) /
            (p * q * std::sqrt(p + q));
}
