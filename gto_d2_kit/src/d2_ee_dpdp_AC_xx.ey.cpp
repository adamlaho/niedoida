/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdp_AC_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2121_13_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49938 = 0 * ae;
    const double C49937 = ae * be;
    const double C49936 = 0 * be;
    const double C49935 = ae + be;
    const double C49934 = 0 * be;
    const double C49933 = xA - xB;
    const double C49984 = 0 * ce;
    const double C49983 = ce * de;
    const double C49982 = 0 * de;
    const double C49981 = ce + de;
    const double C49980 = 0 * de;
    const double C49979 = xC - xD;
    const double C50064 = p + q;
    const double C50063 = p * q;
    const double C50069 = xP - xQ;
    const double C50068 = bs[2];
    const double C50078 = ae * ce;
    const double C50074 = bs[3];
    const double C50087 = bs[4];
    const double C50108 = bs[5];
    const double C50150 = bs[6];
    const double C50219 = bs[7];
    const double C50300 = yP - yQ;
    const double C50347 = zP - zQ;
    const double C125 = bs[0];
    const double C50909 = yC - yD;
    const double C50914 = zC - zD;
    const double C51009 = yA - yB;
    const double C51014 = zA - zB;
    const double C49943 = C49938 / C49935;
    const double C49940 = 2 * C49935;
    const double C49939 = std::pow(C49935, 2);
    const double C49942 = C49937 * C49933;
    const double C49941 = C49933 * C49936;
    const double C50859 = C49933 * be;
    const double C50858 = C49933 * ae;
    const double C50857 = std::pow(C49933, 2);
    const double C49989 = C49984 / C49981;
    const double C49986 = 2 * C49981;
    const double C49985 = std::pow(C49981, 2);
    const double C50070 = C49981 * C49935;
    const double C49988 = C49983 * C49979;
    const double C49987 = C49979 * C49982;
    const double C50878 = C49979 * de;
    const double C50877 = C49979 * ce;
    const double C50876 = std::pow(C49979, 2);
    const double C50065 = 2 * C50063;
    const double C50079 = C50069 * ae;
    const double C50077 = std::pow(C50069, 2);
    const double C50075 = C50069 * ce;
    const double C50395 = std::pow(C50300, 2);
    const double C50442 = std::pow(C50347, 2);
    const double C50923 = std::pow(C50909, 2);
    const double C50937 = C50909 * de;
    const double C50936 = C50909 * ce;
    const double C50949 = std::pow(C50914, 2);
    const double C50961 = C50914 * de;
    const double C50960 = C50914 * ce;
    const double C51023 = std::pow(C51009, 2);
    const double C51037 = C51009 * be;
    const double C51036 = C51009 * ae;
    const double C51049 = std::pow(C51014, 2);
    const double C51061 = C51014 * be;
    const double C51060 = C51014 * ae;
    const double C50867 = std::pow(C49940, -1);
    const double C51169 = std::pow(C49940, -2);
    const double C49944 = 2 * C49939;
    const double C51148 = 4 * C49939;
    const double C49945 = C49941 / C49935;
    const double C50860 = C50857 * C49937;
    const double C50886 = std::pow(C49986, -1);
    const double C51156 = std::pow(C49986, -2);
    const double C49990 = 2 * C49985;
    const double C51155 = 4 * C49985;
    const double C49991 = C49987 / C49981;
    const double C50879 = C50876 * C49983;
    const double C50067 = C50065 / C50064;
    const double C146 =
        (-((std::pow(xP - xQ, 2) * bs[2] * std::pow(C50065 / C50064, 2) -
            (bs[1] * C50065) / C50064) *
           ae * ce) /
         C49981) /
        C49935;
    const double C126 = -(C50069 * bs[1] * C50065) / C50064;
    const double C263 = -(C50300 * bs[1] * C50065) / C50064;
    const double C387 = -(C50347 * bs[1] * C50065) / C50064;
    const double C50082 = C50074 * C50079;
    const double C50093 = C50087 * C50079;
    const double C50117 = C50108 * C50079;
    const double C50165 = C50150 * C50079;
    const double C50240 = C50219 * C50079;
    const double C132 = (-(bs[1] * C50079 * C50065) / C50064) / C49935;
    const double C50089 = C50077 * C50087;
    const double C50112 = C50077 * C50108;
    const double C50159 = C50077 * C50150;
    const double C50233 = C50077 * C50219;
    const double C50081 = C50074 * C50075;
    const double C50090 = C50087 * C50075;
    const double C50113 = C50108 * C50075;
    const double C50161 = C50150 * C50075;
    const double C50236 = C50219 * C50075;
    const double C136 = (bs[1] * C50075 * C50065) / (C50064 * C49981);
    const double C50924 = C50923 * C49983;
    const double C50950 = C50949 * C49983;
    const double C51024 = C51023 * C49937;
    const double C51050 = C51049 * C49937;
    const double C49950 = C49936 / C49944;
    const double C49948 = C49934 / C49944;
    const double C49947 = 0 - C49945;
    const double C50861 = C50860 / C49935;
    const double C49996 = C49982 / C49990;
    const double C49994 = C49980 / C49990;
    const double C49993 = 0 - C49991;
    const double C50880 = C50879 / C49981;
    const double C50071 = std::pow(C50067, 2);
    const double C50073 = -C50067;
    const double C50088 = std::pow(C50067, 4);
    const double C50151 = std::pow(C50067, 6);
    const double C50925 = C50924 / C49981;
    const double C50951 = C50950 / C49981;
    const double C51025 = C51024 / C49935;
    const double C51051 = C51050 / C49935;
    const double C49952 = C49947 * ae;
    const double C50862 = -C50861;
    const double C49998 = C49993 * ce;
    const double C50881 = -C50880;
    const double C50076 = C50068 * C50071;
    const double C147 =
        (-(C50071 * C50068 * C50069 * ae * ce) / C49981) / C49935 -
        (ae * C50071 * C50068 * C50069 * ce) / C50070 -
        (C50069 *
         (C50068 * C50071 +
          std::pow(C50069, 2) * bs[3] * std::pow(-C50067, 3)) *
         ae * ce) /
            C50070;
    const double C133 = (C50069 * C50071 * C50068 * C50079) / C49935 -
                        (ae * bs[1] * C50065) / (C50064 * C49935);
    const double C137 = (ce * bs[1] * C50065) / (C50064 * C49981) -
                        (C50069 * C50071 * C50068 * C50075) / C49981;
    const double C272 = -(C50300 * C50071 * C50068 * C50075) / C49981;
    const double C273 = (C50300 * C50071 * C50068 * C50079) / C49935;
    const double C396 = -(C50347 * C50071 * C50068 * C50075) / C49981;
    const double C397 = (C50347 * C50071 * C50068 * C50079) / C49935;
    const double C50080 = std::pow(C50073, 3);
    const double C50109 = std::pow(C50073, 5);
    const double C50220 = std::pow(C50073, 7);
    const double C50097 = C50088 * C50093;
    const double C50096 = C50088 * C50090;
    const double C50095 = C50089 * C50088;
    const double C50107 = C50087 * C50088;
    const double C50173 = C50151 * C50165;
    const double C50170 = C50151 * C50161;
    const double C50169 = C50159 * C50151;
    const double C50218 = C50150 * C50151;
    const double C50926 = -C50925;
    const double C50952 = -C50951;
    const double C51026 = -C51025;
    const double C51052 = -C51051;
    const double C49955 = C49952 / C49935;
    const double C50863 = std::exp(C50862);
    const double C50001 = C49998 / C49981;
    const double C50882 = std::exp(C50881);
    const double C127 = C50076 * C50077 - (bs[1] * C50065) / C50064;
    const double C259 = C50300 * C50069 * C50076;
    const double C383 = C50347 * C50069 * C50076;
    const double C512 = C50076 * C50395 - (bs[1] * C50065) / C50064;
    const double C718 = C50347 * C50300 * C50076;
    const double C851 = C50076 * C50442 - (bs[1] * C50065) / C50064;
    const double C50084 = C50080 * C50082;
    const double C50083 = C50080 * C50081;
    const double C50086 = C50074 * C50080;
    const double C280 =
        (-(C50300 * (C50076 + C50077 * C50074 * C50080) * C50078) / C49981) /
        C49935;
    const double C404 =
        (-(C50347 * (C50076 + C50077 * C50074 * C50080) * C50078) / C49981) /
        C49935;
    const double C50124 = C50109 * C50117;
    const double C50121 = C50109 * C50113;
    const double C50120 = C50112 * C50109;
    const double C50149 = C50108 * C50109;
    const double C50249 = C50220 * C50240;
    const double C50246 = C50220 * C50236;
    const double C50245 = C50233 * C50220;
    const double C50100 = C50069 * C50097;
    const double C50105 = C50097 * ce;
    const double C50663 = C50300 * C50097;
    const double C50099 = C50069 * C50096;
    const double C50106 = ae * C50096;
    const double C50657 = C50300 * C50096;
    const double C50118 = C50107 * ae;
    const double C50116 = C50107 * C50077;
    const double C50115 = C50069 * C50107;
    const double C50114 = C50107 * ce;
    const double C50816 = C50107 * C50395;
    const double C50825 = C50300 * C50107;
    const double C50842 = C50107 * C50442;
    const double C50849 = C50347 * C50107;
    const double C50181 = C50069 * C50173;
    const double C50216 = C50173 * ce;
    const double C50323 = C50300 * C50173;
    const double C50370 = C50347 * C50173;
    const double C50404 = C50173 * C50395;
    const double C50451 = C50173 * C50442;
    const double C50178 = C50069 * C50170;
    const double C50217 = ae * C50170;
    const double C50324 = C50300 * C50170;
    const double C50371 = C50347 * C50170;
    const double C50405 = C50170 * C50395;
    const double C50452 = C50170 * C50442;
    const double C50241 = C50218 * ae;
    const double C50239 = C50218 * C50077;
    const double C50238 = C50069 * C50218;
    const double C50237 = C50218 * ce;
    const double C50927 = std::exp(C50926);
    const double C50953 = std::exp(C50952);
    const double C51027 = std::exp(C51026);
    const double C51053 = std::exp(C51052);
    const double C49957 = C49955 - C49948;
    const double C10749 = C50863 * C273;
    const double C13045 = C50863 * C397;
    const double C49946 = C49942 * C50863;
    const double C50864 = C50863 * C50858;
    const double C50868 = C50867 * C50863;
    const double C51144 = C50863 / C49940;
    const double C51143 = C50863 * C50859;
    const double C2173 = C51169 * C50863;
    const double C50003 = C50001 - C49994;
    const double C49992 = C49988 * C50882;
    const double C50883 = C50882 * C50877;
    const double C50887 = C50886 * C50882;
    const double C51151 = C50882 / C49986;
    const double C51150 = C50882 * C50878;
    const double C253 = C51156 * C50882;
    const double C134 =
        (C50071 * C50068 * C50079 + C50069 * (C50069 * C50084 + C50076 * ae) +
         C50069 * C50076 * ae) /
        C49935;
    const double C265 = (C50300 * (C50069 * C50084 + C50076 * ae)) / C49935;
    const double C389 = (C50347 * (C50069 * C50084 + C50076 * ae)) / C49935;
    const double C517 = (C50071 * C50068 * C50079 + C50084 * C50395) / C49935;
    const double C615 =
        (2 * C50300 * C50084 + C50300 * (C50084 + C50097 * C50395)) / C49935;
    const double C726 = (C50347 * C50300 * C50084) / C49935;
    const double C741 = (C50347 * (C50084 + C50097 * C50395)) / C49935;
    const double C856 = (C50071 * C50068 * C50079 + C50084 * C50442) / C49935;
    const double C980 = (C50300 * C50084 + C50300 * C50097 * C50442) / C49935;
    const double C1066 =
        (2 * C50347 * C50084 + C50347 * (C50084 + C50097 * C50442)) / C49935;
    const double C148 =
        (-(ae * (C50069 * C50083 + C50076 * ce)) / C49981) / C49935 -
        ((C50076 + C50077 * C50074 * C50080) * C50078) / C50070 -
        ((C50069 * C50084 + C50076 * ae) * ce) / C50070 +
        C50069 * ((-(C50084 * ce) / C49981) / C49935 - (ae * C50083) / C50070 -
                  (C50069 *
                   (C50074 * C50080 + C50077 * bs[4] * std::pow(C50067, 4)) *
                   C50078) /
                      C50070);
    const double C138 = -(C50069 * (C50069 * C50083 + C50076 * ce) +
                          C50071 * C50068 * C50075 + C50069 * C50076 * ce) /
                        C49981;
    const double C271 = -(C50300 * (C50069 * C50083 + C50076 * ce)) / C49981;
    const double C395 = -(C50347 * (C50069 * C50083 + C50076 * ce)) / C49981;
    const double C521 = -(C50083 * C50395 + C50071 * C50068 * C50075) / C49981;
    const double C611 = (-2 * C50300 * C50083) / C49981 -
                        (C50300 * (C50096 * C50395 + C50083)) / C49981;
    const double C730 = -(C50347 * C50300 * C50083) / C49981;
    const double C737 = -(C50347 * (C50096 * C50395 + C50083)) / C49981;
    const double C860 = -(C50083 * C50442 + C50071 * C50068 * C50075) / C49981;
    const double C976 = -(C50300 * C50096 * C50442 + C50300 * C50083) / C49981;
    const double C1062 = (-2 * C50347 * C50083) / C49981 -
                         (C50347 * (C50096 * C50442 + C50083)) / C49981;
    const double C50094 = C50086 * ae;
    const double C50092 = C50069 * C50086;
    const double C50091 = C50086 * ce;
    const double C50098 = C50086 + C50095;
    const double C50808 = C50300 * C50086;
    const double C128 =
        2 * C50069 * C50076 + C50069 * (C50076 + C50086 * C50077);
    const double C260 = C50300 * (C50076 + C50086 * C50077);
    const double C384 = C50347 * (C50076 + C50086 * C50077);
    const double C607 =
        2 * C50300 * C50076 + C50300 * (C50076 + C50086 * C50395);
    const double C725 = C50347 * (C50076 + C50086 * C50395);
    const double C972 = C50300 * C50076 + C50300 * C50086 * C50442;
    const double C1058 =
        2 * C50347 * C50076 + C50347 * (C50076 + C50086 * C50442);
    const double C2807 =
        3 * (C50076 + C50086 * C50395) +
        C50300 * (2 * C50300 * C50086 + C50300 * (C50086 + C50107 * C50395));
    const double C2983 =
        C50347 * (2 * C50300 * C50086 + C50300 * (C50086 + C50107 * C50395));
    const double C3323 =
        C50076 + C50086 * C50395 + (C50086 + C50107 * C50395) * C50442;
    const double C6201 =
        3 * (C50076 + C50086 * C50442) +
        C50347 * (2 * C50347 * C50086 + C50347 * (C50086 + C50107 * C50442));
    const double C10751 = C50863 * C280;
    const double C13047 = C50863 * C404;
    const double C50129 = C50069 * C50124;
    const double C50147 = C50124 * ce;
    const double C50306 = C50300 * C50124;
    const double C50353 = C50347 * C50124;
    const double C50680 = C50124 * C50395;
    const double C50726 = C50124 * C50442;
    const double C2813 =
        (3 * (C50084 + C50097 * C50395) +
         C50300 * (2 * C50300 * C50097 + C50300 * (C50097 + C50124 * C50395))) /
        C49935;
    const double C2989 =
        (C50347 * (2 * C50300 * C50097 + C50300 * (C50097 + C50124 * C50395))) /
        C49935;
    const double C3329 =
        (C50084 + C50097 * C50395 + (C50097 + C50124 * C50395) * C50442) /
        C49935;
    const double C6207 =
        (3 * (C50084 + C50097 * C50442) +
         C50347 * (2 * C50347 * C50097 + C50347 * (C50097 + C50124 * C50442))) /
        C49935;
    const double C50128 = C50069 * C50121;
    const double C50148 = ae * C50121;
    const double C50307 = C50300 * C50121;
    const double C50354 = C50347 * C50121;
    const double C50674 = C50121 * C50395;
    const double C50720 = C50121 * C50442;
    const double C2810 =
        (-3 * (C50096 * C50395 + C50083)) / C49981 +
        C50300 * ((-2 * C50300 * C50096) / C49981 -
                  (C50300 * (C50121 * C50395 + C50096)) / C49981);
    const double C2986 =
        C50347 * ((-2 * C50300 * C50096) / C49981 -
                  (C50300 * (C50121 * C50395 + C50096)) / C49981);
    const double C3326 =
        -((C50121 * C50395 + C50096) * C50442 + C50096 * C50395 + C50083) /
        C49981;
    const double C6204 =
        (-3 * (C50096 * C50442 + C50083)) / C49981 +
        C50347 * ((-2 * C50347 * C50096) / C49981 -
                  (C50347 * (C50121 * C50442 + C50096)) / C49981);
    const double C50127 = C50107 + C50120;
    const double C50166 = C50149 * ae;
    const double C50164 = C50149 * C50077;
    const double C50163 = C50069 * C50149;
    const double C50162 = C50149 * ce;
    const double C50177 = C50149 + C50169;
    const double C50826 = C50149 * C50395;
    const double C50845 = C50300 * C50149;
    const double C50850 = C50149 * C50442;
    const double C50258 = C50069 * C50249;
    const double C50255 = C50069 * C50246;
    const double C50254 = C50218 + C50245;
    const double C50110 = C50105 / C49981;
    const double C50111 = C50106 / C50070;
    const double C50123 = C50086 + C50116;
    const double C50125 = C50115 * ae;
    const double C50122 = C50115 * ce;
    const double C50153 = 2 * C50115;
    const double C50806 = C50300 * C50115;
    const double C50817 = C50086 + C50816;
    const double C50827 = 2 * C50825;
    const double C50843 = C50086 + C50842;
    const double C50851 = 2 * C50849;
    const double C50231 = C50216 / C49981;
    const double C50328 = C50323 * ce;
    const double C50487 = C50347 * C50323;
    const double C50732 = C50323 * C50442;
    const double C50375 = C50370 * ce;
    const double C50407 = C50124 + C50404;
    const double C50454 = C50124 + C50451;
    const double C50232 = C50217 / C50070;
    const double C50329 = ae * C50324;
    const double C50488 = C50347 * C50324;
    const double C50729 = C50324 * C50442;
    const double C50376 = ae * C50371;
    const double C50408 = C50405 + C50121;
    const double C50455 = C50452 + C50121;
    const double C50248 = C50149 + C50239;
    const double C50250 = C50238 * ae;
    const double C50247 = C50238 * ce;
    const double C50938 = C50927 * C50936;
    const double C50941 = C50886 * C50927;
    const double C51160 = C50927 * C50937;
    const double C51159 = C50927 / C49986;
    const double C509 = C51156 * C50927;
    const double C50962 = C50953 * C50960;
    const double C50965 = C50886 * C50953;
    const double C51165 = C50953 * C50961;
    const double C51164 = C50953 / C49986;
    const double C850 = C51156 * C50953;
    const double C51038 = C51027 * C51036;
    const double C51041 = C50867 * C51027;
    const double C51173 = C51027 * C51037;
    const double C51172 = C51027 / C49940;
    const double C7789 = C51169 * C51027;
    const double C51062 = C51053 * C51060;
    const double C51065 = C50867 * C51053;
    const double C51178 = C51053 * C51061;
    const double C51177 = C51053 / C49940;
    const double C15547 = C51169 * C51053;
    const double C49951 = C49946 / C49939;
    const double C49949 = 2 * C49946;
    const double C51146 = C50864 / C49944;
    const double C51145 = C50864 * C50859;
    const double C51142 = C50864 / C49935;
    const double C50871 = C50868 * C50859;
    const double C108 = C50868 / C51148;
    const double C22937 = C50868 / C49940;
    const double C2171 = (C50863 * std::pow(C50859, 2)) / C49939 + C51144;
    const double C51182 = C51143 / C49935;
    const double C2172 = (-2 * C50867 * C51143) / C49935;
    const double C49997 = C49992 / C49985;
    const double C49995 = 2 * C49992;
    const double C51153 = C50883 / C49990;
    const double C51152 = C50883 * C50878;
    const double C51149 = C50883 / C49981;
    const double C50890 = C50887 * C50878;
    const double C112 = C50887 / C51155;
    const double C1171 = C50887 / C49986;
    const double C251 = (C50882 * std::pow(C50878, 2)) / C49985 + C51151;
    const double C51185 = C51150 / C49981;
    const double C252 = (-2 * C50886 * C51150) / C49981;
    const double C7942 = C50868 * C265;
    const double C10753 = C50863 * C265;
    const double C25908 = C50868 * C265;
    const double C13049 = C50863 * C389;
    const double C15844 = C50868 * C389;
    const double C29045 = C50868 * C389;
    const double C10761 = C50863 * C517;
    const double C10773 = C50863 * C615;
    const double C11253 = C50863 * C726;
    const double C11249 = C50863 * C741;
    const double C13623 = C50863 * C856;
    const double C11477 = C50863 * C980;
    const double C13928 = C50863 * C1066;
    const double C50103 = C50100 + C50094;
    const double C513 = C50069 * C50076 + C50092 * C50395;
    const double C606 =
        2 * C50300 * C50092 + C50300 * (C50092 + C50115 * C50395);
    const double C719 = C50347 * C50300 * C50092;
    const double C724 = C50347 * (C50092 + C50115 * C50395);
    const double C852 = C50069 * C50076 + C50092 * C50442;
    const double C971 = C50300 * C50092 + C50300 * C50115 * C50442;
    const double C1057 =
        2 * C50347 * C50092 + C50347 * (C50092 + C50115 * C50442);
    const double C50102 = C50099 + C50091;
    const double C50101 = C50098 * C50078;
    const double C3451 =
        2 * C50347 * C50808 + C50347 * (C50808 + C50300 * C50107 * C50442);
    const double C13919 =
        3 * (C50808 + C50825 * C50442) +
        C50347 * (2 * C50347 * C50825 +
                  C50347 * (C50825 + C50300 * C50149 * C50442));
    const double C50133 = C50129 + C50118;
    const double C50157 = C50147 / C49981;
    const double C50309 = C50306 * ce;
    const double C50701 = 2 * C50306;
    const double C3457 =
        (2 * C50347 * C50663 + C50347 * (C50663 + C50306 * C50442)) / C49935;
    const double C13923 =
        (3 * (C50663 + C50306 * C50442) +
         C50347 * (2 * C50347 * C50306 + C50347 * (C50306 + C50323 * C50442))) /
        C49935;
    const double C50356 = C50353 * ce;
    const double C50741 = 2 * C50353;
    const double C50681 = C50097 + C50680;
    const double C50727 = C50097 + C50726;
    const double C11033 = C50863 * C2813;
    const double C11245 = C50863 * C2989;
    const double C11481 = C50863 * C3329;
    const double C19506 = C50863 * C6207;
    const double C50132 = C50128 + C50114;
    const double C50158 = C50148 / C50070;
    const double C50310 = ae * C50307;
    const double C50695 = -2 * C50307;
    const double C3454 = (-2 * C50347 * C50657) / C49981 -
                         (C50347 * (C50307 * C50442 + C50657)) / C49981;
    const double C13922 =
        (-3 * (C50307 * C50442 + C50657)) / C49981 +
        C50347 * ((-2 * C50347 * C50307) / C49981 -
                  (C50347 * (C50324 * C50442 + C50307)) / C49981);
    const double C50357 = ae * C50354;
    const double C50735 = -2 * C50354;
    const double C50675 = C50674 + C50096;
    const double C50721 = C50720 + C50096;
    const double C50131 = C50127 * C50078;
    const double C50189 = C50181 + C50166;
    const double C50172 = C50107 + C50164;
    const double C50174 = C50163 * ae;
    const double C50171 = C50163 * ce;
    const double C50223 = 2 * C50163;
    const double C50813 = C50163 * C50395;
    const double C50837 = C50300 * C50163;
    const double C50839 = C50163 * C50442;
    const double C2806 =
        3 * (C50092 + C50115 * C50395) +
        C50300 * (2 * C50300 * C50115 + C50300 * (C50115 + C50163 * C50395));
    const double C2982 =
        C50347 * (2 * C50300 * C50115 + C50300 * (C50115 + C50163 * C50395));
    const double C3322 =
        C50092 + C50115 * C50395 + (C50115 + C50163 * C50395) * C50442;
    const double C6200 =
        3 * (C50092 + C50115 * C50442) +
        C50347 * (2 * C50347 * C50115 + C50347 * (C50115 + C50163 * C50442));
    const double C50186 = C50178 + C50162;
    const double C50185 = C50177 * C50078;
    const double C50828 = C50107 + C50826;
    const double C50846 = C50845 * C50442;
    const double C50852 = C50107 + C50850;
    const double C50266 = C50258 + C50241;
    const double C50263 = C50255 + C50237;
    const double C50262 = C50254 * C50078;
    const double C50119 = -C50110;
    const double C129 = 3 * (C50076 + C50086 * C50077) +
                        C50069 * (2 * C50092 + C50069 * C50123);
    const double C261 = C50300 * (2 * C50092 + C50069 * C50123);
    const double C385 = C50347 * (2 * C50092 + C50069 * C50123);
    const double C514 = C50076 + C50086 * C50077 + C50123 * C50395;
    const double C720 = C50347 * C50300 * C50123;
    const double C853 = C50076 + C50086 * C50077 + C50123 * C50442;
    const double C3450 =
        2 * C50347 * C50806 + C50347 * (C50806 + C50300 * C50163 * C50442);
    const double C8436 =
        4 * (2 * C50808 + C50300 * C50817) +
        C50300 * (3 * C50817 + C50300 * (2 * C50300 * C50107 +
                                         C50300 * (C50107 + C50149 * C50395)));
    const double C8610 =
        C50347 * (3 * C50817 + C50300 * (2 * C50300 * C50107 +
                                         C50300 * (C50107 + C50149 * C50395)));
    const double C8951 =
        2 * C50808 + C50300 * C50817 +
        (2 * C50300 * C50107 + C50300 * (C50107 + C50149 * C50395)) * C50442;
    const double C9081 =
        2 * C50347 * C50817 +
        C50347 * (C50817 + (C50107 + C50149 * C50395) * C50442);
    const double C16755 =
        4 * (2 * C50347 * C50086 + C50347 * C50843) +
        C50347 * (3 * C50843 + C50347 * (2 * C50347 * C50107 +
                                         C50347 * (C50107 + C50149 * C50442)));
    const double C50244 = -C50231;
    const double C50333 = C50328 / C49981;
    const double C50490 = C50487 * ce;
    const double C50733 = C50306 + C50732;
    const double C50380 = C50375 / C49981;
    const double C50410 = C50407 * ce;
    const double C50702 = C50300 * C50407;
    const double C50457 = C50454 * ce;
    const double C50742 = C50347 * C50454;
    const double C50334 = C50329 / C50070;
    const double C50491 = ae * C50488;
    const double C50730 = C50729 + C50307;
    const double C50381 = C50376 / C50070;
    const double C50411 = ae * C50408;
    const double C50696 = C50300 * C50408;
    const double C50458 = ae * C50455;
    const double C50736 = C50347 * C50455;
    const double C50259 = C50248 * ae;
    const double C50257 = C50069 * C50248;
    const double C50256 = C50248 * ce;
    const double C51162 = C50938 / C49990;
    const double C51161 = C50938 * C50937;
    const double C51157 = C50938 / C49981;
    const double C50944 = C50941 * C50937;
    const double C602 = C50941 / C51155;
    const double C1279 = C50941 / C49986;
    const double C51188 = C51160 / C49981;
    const double C508 = (-2 * C50886 * C51160) / C49981;
    const double C507 = (C50927 * std::pow(C50937, 2)) / C49985 + C51159;
    const double C51167 = C50962 / C49990;
    const double C51166 = C50962 * C50961;
    const double C51158 = C50962 / C49981;
    const double C50968 = C50965 * C50961;
    const double C1054 = C50965 / C51155;
    const double C1746 = C50965 / C49986;
    const double C51191 = C51165 / C49981;
    const double C849 = (-2 * C50886 * C51165) / C49981;
    const double C848 = (C50953 * std::pow(C50961, 2)) / C49985 + C51164;
    const double C51175 = C51038 / C49944;
    const double C51174 = C51038 * C51037;
    const double C51170 = C51038 / C49935;
    const double C51044 = C51041 * C51037;
    const double C10647 = C51041 / C51148;
    const double C25755 = C51041 / C49940;
    const double C51194 = C51173 / C49935;
    const double C7788 = (-2 * C50867 * C51173) / C49935;
    const double C7787 = (C51027 * std::pow(C51037, 2)) / C49939 + C51172;
    const double C51180 = C51062 / C49944;
    const double C51179 = C51062 * C51061;
    const double C51171 = C51062 / C49935;
    const double C51068 = C51065 * C51061;
    const double C21076 = C51065 / C51148;
    const double C38498 = C51065 / C49940;
    const double C51197 = C51178 / C49935;
    const double C15546 = (-2 * C50867 * C51178) / C49935;
    const double C15545 = (C51053 * std::pow(C51061, 2)) / C49939 + C51177;
    const double C49954 = C49943 - C49951;
    const double C49953 = C49933 * C49949;
    const double C2178 =
        ((-C49949 / C49935) / C49940 - (0 * be) / C49935) / C49940 -
        (0 * be) / C49935;
    const double C10648 = -C49949 / C49935;
    const double C25757 = (-C49949 / C49935) / C49940 - (0 * be) / C49935;
    const double C51183 = C51145 / C49939;
    const double C7964 = C51142 * C517;
    const double C7950 = C51142 * C265;
    const double C7944 = C51142 * C280;
    const double C7940 = C51142 * C273;
    const double C8318 = C51142 * C615;
    const double C8449 = C51142 * C2813;
    const double C8635 = C51142 * C2989;
    const double C8633 = C51142 * C726;
    const double C8625 = C51142 * C741;
    const double C8968 = C51142 * C3329;
    const double C8960 = C51142 * C980;
    const double C15866 = C51142 * C856;
    const double C15852 = C51142 * C389;
    const double C15846 = C51142 * C404;
    const double C15842 = C51142 * C397;
    const double C16464 = C51142 * C1066;
    const double C16766 = C51142 * C6207;
    const double C51147 = C50871 / C49935;
    const double C2343 = C2171 * C265;
    const double C2333 = C2171 * C280;
    const double C2327 = C2171 * C273;
    const double C2689 = C2171 * C517;
    const double C2819 = C2171 * C615;
    const double C3007 = C2171 * C741;
    const double C3005 = C2171 * C726;
    const double C3335 = C2171 * C980;
    const double C5347 = C2171 * C389;
    const double C5337 = C2171 * C404;
    const double C5331 = C2171 * C397;
    const double C5937 = C2171 * C856;
    const double C6213 = C2171 * C1066;
    const double C25751 = -C51182;
    const double C2329 = C2172 * C265;
    const double C5333 = C2172 * C389;
    const double C50000 = C49989 - C49997;
    const double C49999 = C49979 * C49995;
    const double C258 =
        ((-C49995 / C49981) / C49986 - (0 * de) / C49981) / C49986 -
        (0 * de) / C49981;
    const double C603 = -C49995 / C49981;
    const double C1281 = (-C49995 / C49981) / C49986 - (0 * de) / C49981;
    const double C51186 = C51152 / C49985;
    const double C51154 = C50890 / C49981;
    const double C1275 = -C51185;
    const double C135 = (2 * (C50069 * C50084 + C50076 * ae) +
                         C50069 * (C50084 + C50069 * C50103 + C50092 * ae) +
                         (C50076 + C50086 * C50077) * ae) /
                        C49935;
    const double C266 =
        (C50300 * (C50084 + C50069 * C50103 + C50092 * ae)) / C49935;
    const double C390 =
        (C50347 * (C50084 + C50069 * C50103 + C50092 * ae)) / C49935;
    const double C518 =
        (C50069 * C50084 + C50076 * ae + C50103 * C50395) / C49935;
    const double C727 = (C50347 * C50300 * C50103) / C49935;
    const double C857 =
        (C50069 * C50084 + C50076 * ae + C50103 * C50442) / C49935;
    const double C139 =
        (-2 * (C50069 * C50083 + C50076 * ce)) / C49981 -
        (C50069 * (C50069 * C50102 + C50083 + C50092 * ce)) / C49981 -
        ((C50076 + C50086 * C50077) * ce) / C49981;
    const double C270 =
        -(C50300 * (C50069 * C50102 + C50083 + C50092 * ce)) / C49981;
    const double C394 =
        -(C50347 * (C50069 * C50102 + C50083 + C50092 * ce)) / C49981;
    const double C522 =
        -(C50102 * C50395 + C50069 * C50083 + C50076 * ce) / C49981;
    const double C731 = -(C50347 * C50300 * C50102) / C49981;
    const double C861 =
        -(C50102 * C50442 + C50069 * C50083 + C50076 * ce) / C49981;
    const double C149 =
        2 * ((-(C50084 * ce) / C49981) / C49935 - (ae * C50083) / C50070 -
             (C50069 * C50101) / C50070) -
        (ae * (C50069 * C50102 + C50083 + C50092 * ce)) / C50070 -
        ((C50084 + C50069 * C50103 + C50092 * ae) * ce) / C50070 +
        C50069 *
            ((-(ae * C50102) / C49981) / C49935 - C50101 / C50070 -
             (C50103 * ce) / C50070 +
             C50069 *
                 ((-(C50097 * ce) / C49981) / C49935 - (ae * C50096) / C50070 -
                  (C50069 *
                   (C50087 * C50088 + C50077 * bs[5] * std::pow(C50073, 5)) *
                   C50078) /
                      C50070));
    const double C279 = (-(C50300 * C50084 * ce) / C49981) / C49935 -
                        (ae * C50300 * C50083) / C50070 -
                        (C50069 * C50300 * C50101) / C50070;
    const double C403 = (-(C50347 * C50084 * ce) / C49981) / C49935 -
                        (ae * C50347 * C50083) / C50070 -
                        (C50069 * C50347 * C50101) / C50070;
    const double C527 = (-(C50101 * std::pow(C50300, 2)) / C49981) / C49935 -
                        ((C50076 + C50077 * C50074 * C50080) * C50078) / C50070;
    const double C742 = (-(C50347 * C50300 * C50101) / C49981) / C49935;
    const double C866 = (-(C50101 * std::pow(C50347, 2)) / C49981) / C49935 -
                        ((C50076 + C50077 * C50074 * C50080) * C50078) / C50070;
    const double C50136 = C50069 * C50133;
    const double C50154 = 2 * C50133;
    const double C50146 = C50133 * ce;
    const double C50661 = C50300 * C50133;
    const double C614 =
        (2 * C50300 * C50103 + C50300 * (C50103 + C50133 * C50395)) / C49935;
    const double C740 = (C50347 * (C50103 + C50133 * C50395)) / C49935;
    const double C979 = (C50300 * C50103 + C50300 * C50133 * C50442) / C49935;
    const double C1065 =
        (2 * C50347 * C50103 + C50347 * (C50103 + C50133 * C50442)) / C49935;
    const double C50168 = -C50157;
    const double C50312 = C50309 / C49981;
    const double C13806 = C50863 * C3457;
    const double C16638 = C51142 * C3457;
    const double C19389 = C50863 * C13923;
    const double C50359 = C50356 / C49981;
    const double C8440 =
        (4 * (2 * C50663 + C50300 * C50681) +
         C50300 * (3 * C50681 + C50300 * (2 * C50306 + C50300 * C50407))) /
        C49935;
    const double C8614 =
        (C50347 * (3 * C50681 + C50300 * (2 * C50306 + C50300 * C50407))) /
        C49935;
    const double C8955 = (2 * C50663 + C50300 * C50681 +
                          (2 * C50306 + C50300 * C50407) * C50442) /
                         C49935;
    const double C9085 =
        (2 * C50347 * C50681 + C50347 * (C50681 + C50407 * C50442)) / C49935;
    const double C13921 =
        (3 * (C50681 + C50407 * C50442) +
         C50347 * (2 * C50347 * C50407 +
                   C50347 * (C50407 + (C50173 + C50249 * C50395) * C50442))) /
        C49935;
    const double C16759 =
        (4 * (2 * C50347 * C50097 + C50347 * C50727) +
         C50347 * (3 * C50727 + C50347 * (2 * C50353 + C50347 * C50454))) /
        C49935;
    const double C50135 = C50069 * C50132;
    const double C50152 = -2 * C50132;
    const double C50144 = ae * C50132;
    const double C50655 = C50300 * C50132;
    const double C610 = (-2 * C50300 * C50102) / C49981 -
                        (C50300 * (C50132 * C50395 + C50102)) / C49981;
    const double C736 = -(C50347 * (C50132 * C50395 + C50102)) / C49981;
    const double C975 = -(C50300 * C50132 * C50442 + C50300 * C50102) / C49981;
    const double C1061 = (-2 * C50347 * C50102) / C49981 -
                         (C50347 * (C50132 * C50442 + C50102)) / C49981;
    const double C50313 = C50310 / C50070;
    const double C50697 = C50695 / C49981;
    const double C50360 = C50357 / C50070;
    const double C50737 = C50735 / C49981;
    const double C8438 =
        4 * ((-2 * C50657) / C49981 - (C50300 * C50675) / C49981) +
        C50300 *
            ((-3 * C50675) / C49981 +
             C50300 * ((-2 * C50307) / C49981 - (C50300 * C50408) / C49981));
    const double C8612 =
        C50347 *
        ((-3 * C50675) / C49981 +
         C50300 * ((-2 * C50307) / C49981 - (C50300 * C50408) / C49981));
    const double C8953 =
        (-2 * C50657) / C49981 - (C50300 * C50675) / C49981 +
        ((-2 * C50307) / C49981 - (C50300 * C50408) / C49981) * C50442;
    const double C9083 = (-2 * C50347 * C50675) / C49981 -
                         (C50347 * (C50408 * C50442 + C50675)) / C49981;
    const double C13920 =
        (-3 * (C50408 * C50442 + C50675)) / C49981 +
        C50347 * ((-2 * C50347 * C50408) / C49981 -
                  (C50347 * ((C50246 * C50395 + C50170) * C50442 + C50408)) /
                      C49981);
    const double C16757 =
        4 * ((-2 * C50347 * C50096) / C49981 - (C50347 * C50721) / C49981) +
        C50347 *
            ((-3 * C50721) / C49981 +
             C50347 * ((-2 * C50354) / C49981 - (C50347 * C50455) / C49981));
    const double C50134 = C50069 * C50131;
    const double C50145 = C50131 / C50070;
    const double C50301 = C50300 * C50131;
    const double C50348 = C50347 * C50131;
    const double C528 =
        (-((C50084 + C50097 * C50395) * ce) / C49981) / C49935 -
        (ae * (C50096 * C50395 + C50083)) / C50070 +
        C50069 * ((-(C50131 * C50395) / C49981) / C49935 - C50101 / C50070);
    const double C619 =
        (-2 * C50300 * C50101) / C50070 +
        C50300 * ((-(C50131 * C50395) / C49981) / C49935 - C50101 / C50070);
    const double C749 =
        C50347 * ((-(C50131 * C50395) / C49981) / C49935 - C50101 / C50070);
    const double C867 =
        (-((C50084 + C50097 * C50442) * ce) / C49981) / C49935 -
        (ae * (C50096 * C50442 + C50083)) / C50070 +
        C50069 * ((-(C50131 * C50442) / C49981) / C49935 - C50101 / C50070);
    const double C1070 =
        (-2 * C50347 * C50101) / C50070 +
        C50347 * ((-(C50131 * C50442) / C49981) / C49935 - C50101 / C50070);
    const double C50193 = C50069 * C50189;
    const double C50226 = 2 * C50189;
    const double C50215 = C50189 * ce;
    const double C50322 = C50300 * C50189;
    const double C50369 = C50347 * C50189;
    const double C50677 = C50189 * C50395;
    const double C50723 = C50189 * C50442;
    const double C2812 =
        (3 * (C50103 + C50133 * C50395) +
         C50300 * (2 * C50300 * C50133 + C50300 * (C50133 + C50189 * C50395))) /
        C49935;
    const double C2988 =
        (C50347 * (2 * C50300 * C50133 + C50300 * (C50133 + C50189 * C50395))) /
        C49935;
    const double C3328 =
        (C50103 + C50133 * C50395 + (C50133 + C50189 * C50395) * C50442) /
        C49935;
    const double C6206 =
        (3 * (C50103 + C50133 * C50442) +
         C50347 * (2 * C50347 * C50133 + C50347 * (C50133 + C50189 * C50442))) /
        C49935;
    const double C50182 = C50172 * ae;
    const double C50180 = C50069 * C50172;
    const double C50179 = C50172 * ce;
    const double C50224 = 3 * C50172;
    const double C50804 = C50300 * C50172;
    const double C605 =
        2 * C50300 * C50123 + C50300 * (C50123 + C50172 * C50395);
    const double C723 = C50347 * (C50123 + C50172 * C50395);
    const double C970 = C50300 * C50123 + C50300 * C50172 * C50442;
    const double C1056 =
        2 * C50347 * C50123 + C50347 * (C50123 + C50172 * C50442);
    const double C2805 =
        3 * (C50123 + C50172 * C50395) +
        C50300 * (2 * C50300 * C50172 + C50300 * (C50172 + C50248 * C50395));
    const double C2981 =
        C50347 * (2 * C50300 * C50172 + C50300 * (C50172 + C50248 * C50395));
    const double C3321 =
        C50123 + C50172 * C50395 + (C50172 + C50248 * C50395) * C50442;
    const double C6199 =
        3 * (C50123 + C50172 * C50442) +
        C50347 * (2 * C50347 * C50172 + C50347 * (C50172 + C50248 * C50442));
    const double C50814 = C50115 + C50813;
    const double C16630 =
        3 * (C50806 + C50837 * C50442) +
        C50347 * (2 * C50347 * C50837 +
                  C50347 * (C50837 + C50300 * C50238 * C50442));
    const double C50840 = C50115 + C50839;
    const double C50192 = C50069 * C50186;
    const double C50222 = -2 * C50186;
    const double C50213 = ae * C50186;
    const double C50320 = C50300 * C50186;
    const double C50367 = C50347 * C50186;
    const double C50671 = C50186 * C50395;
    const double C50717 = C50186 * C50442;
    const double C2809 =
        (-3 * (C50132 * C50395 + C50102)) / C49981 +
        C50300 * ((-2 * C50300 * C50132) / C49981 -
                  (C50300 * (C50186 * C50395 + C50132)) / C49981);
    const double C2985 =
        C50347 * ((-2 * C50300 * C50132) / C49981 -
                  (C50300 * (C50186 * C50395 + C50132)) / C49981);
    const double C3325 =
        -((C50186 * C50395 + C50132) * C50442 + C50132 * C50395 + C50102) /
        C49981;
    const double C6203 =
        (-3 * (C50132 * C50442 + C50102)) / C49981 +
        C50347 * ((-2 * C50347 * C50132) / C49981 -
                  (C50347 * (C50186 * C50442 + C50132)) / C49981);
    const double C50191 = C50069 * C50185;
    const double C50214 = C50185 / C50070;
    const double C50308 = C50300 * C50185;
    const double C50355 = C50347 * C50185;
    const double C50398 = C50185 * C50395;
    const double C50445 = C50185 * C50442;
    const double C50829 = C50300 * C50828;
    const double C13918 =
        3 * (C50817 + C50828 * C50442) +
        C50347 * (2 * C50347 * C50828 +
                  C50347 * (C50828 + (C50149 + C50218 * C50395) * C50442));
    const double C50847 = C50825 + C50846;
    const double C50853 = C50347 * C50852;
    const double C50272 = C50069 * C50266;
    const double C50269 = C50069 * C50263;
    const double C50268 = C50069 * C50262;
    const double C50325 = C50300 * C50262;
    const double C50372 = C50347 * C50262;
    const double C50406 = C50262 * C50395;
    const double C50453 = C50262 * C50442;
    const double C50126 = C50119 / C49935;
    const double C50253 = C50244 / C49935;
    const double C50337 = -C50333;
    const double C50493 = C50490 / C49981;
    const double C19500 =
        (4 * (2 * C50347 * C50306 + C50347 * C50733) +
         C50347 * (3 * C50733 +
                   C50347 * (2 * C50487 +
                             C50347 * (C50323 + C50300 * C50249 * C50442)))) /
        C49935;
    const double C50384 = -C50380;
    const double C50413 = C50410 / C49981;
    const double C50703 = C50701 + C50702;
    const double C50460 = C50457 / C49981;
    const double C50743 = C50741 + C50742;
    const double C50494 = C50491 / C50070;
    const double C19499 =
        4 * ((-2 * C50347 * C50307) / C49981 - (C50347 * C50730) / C49981) +
        C50347 * ((-3 * C50730) / C49981 +
                  C50347 * ((-2 * C50488) / C49981 -
                            (C50347 * (C50300 * C50246 * C50442 + C50324)) /
                                C49981));
    const double C50414 = C50411 / C50070;
    const double C50698 = C50696 / C49981;
    const double C50461 = C50458 / C50070;
    const double C50738 = C50736 / C49981;
    const double C50265 = C50223 + C50257;
    const double C50264 = C50256 / C49981;
    const double C51189 = C51161 / C49985;
    const double C51163 = C50944 / C49981;
    const double C1172 = -C51188;
    const double C51192 = C51166 / C49985;
    const double C51168 = C50968 / C49981;
    const double C1514 = -C51191;
    const double C51195 = C51174 / C49939;
    const double C51176 = C51044 / C49935;
    const double C22938 = -C51194;
    const double C51198 = C51179 / C49939;
    const double C51181 = C51068 / C49935;
    const double C32266 = -C51197;
    const double C7971 = C49954 * C514;
    const double C7965 = C49954 * C513;
    const double C7957 = C49954 * C261;
    const double C7947 = C49954 * C260;
    const double C7945 = C49954 * C271;
    const double C7941 = C49954 * C259;
    const double C8315 = C49954 * C606;
    const double C8450 = C49954 * C2806;
    const double C8636 = C49954 * C2982;
    const double C8630 = C49954 * C719;
    const double C8622 = C49954 * C724;
    const double C8969 = C49954 * C3322;
    const double C8961 = C49954 * C971;
    const double C9584 = C49954 * C720;
    const double C15873 = C49954 * C853;
    const double C15867 = C49954 * C852;
    const double C15859 = C49954 * C385;
    const double C15849 = C49954 * C384;
    const double C15847 = C49954 * C395;
    const double C15843 = C49954 * C383;
    const double C16461 = C49954 * C1057;
    const double C16639 = C49954 * C3450;
    const double C16767 = C49954 * C6200;
    const double C120 =
        (C49954 / C49940 - (0 * be) / C49935) / C49940 - (0 * be) / C49935;
    const double C22942 = C49954 / C49940 - (0 * be) / C49935;
    const double C49956 = C49953 / C49935;
    const double C2338 = C2178 * C261;
    const double C2330 = C2178 * C260;
    const double C2684 = C2178 * C514;
    const double C3000 = C2178 * C720;
    const double C5342 = C2178 * C385;
    const double C5334 = C2178 * C384;
    const double C5932 = C2178 * C853;
    const double C10776 = C10648 * C606;
    const double C10774 = C10648 * C611;
    const double C10772 = C10648 * C607;
    const double C10768 = C10648 * C514;
    const double C10764 = C10648 * C513;
    const double C10762 = C10648 * C521;
    const double C10760 = C10648 * C512;
    const double C10756 = C10648 * C260;
    const double C10754 = C10648 * C271;
    const double C10752 = C10648 * C259;
    const double C10750 = C10648 * C272;
    const double C10748 = C10648 * C263;
    const double C11032 = C10648 * C2807;
    const double C11030 = C10648 * C2810;
    const double C11028 = C10648 * C2806;
    const double C11128 = C10648 * C8436;
    const double C11254 = C10648 * C8610;
    const double C11252 = C10648 * C718;
    const double C11250 = C10648 * C730;
    const double C11248 = C10648 * C725;
    const double C11246 = C10648 * C737;
    const double C11244 = C10648 * C2983;
    const double C11242 = C10648 * C2986;
    const double C11484 = C10648 * C8951;
    const double C11482 = C10648 * C3326;
    const double C11480 = C10648 * C3323;
    const double C11478 = C10648 * C976;
    const double C11476 = C10648 * C972;
    const double C11948 = C10648 * C2982;
    const double C11942 = C10648 * C724;
    const double C11936 = C10648 * C719;
    const double C12878 = C10648 * C720;
    const double C13052 = C10648 * C384;
    const double C13050 = C10648 * C395;
    const double C13048 = C10648 * C383;
    const double C13046 = C10648 * C396;
    const double C13044 = C10648 * C387;
    const double C13632 = C10648 * C3322;
    const double C13626 = C10648 * C971;
    const double C13622 = C10648 * C851;
    const double C13620 = C10648 * C860;
    const double C13618 = C10648 * C852;
    const double C13809 = C10648 * C9081;
    const double C13807 = C10648 * C3454;
    const double C13805 = C10648 * C3451;
    const double C13929 = C10648 * C1062;
    const double C13927 = C10648 * C1058;
    const double C18665 = C10648 * C853;
    const double C19217 = C10648 * C3450;
    const double C19211 = C10648 * C1057;
    const double C19390 = C10648 * C13922;
    const double C19388 = C10648 * C13919;
    const double C19507 = C10648 * C6204;
    const double C19505 = C10648 * C6201;
    const double C21648 = C10648 * C6200;
    const double C21836 = C10648 * C16755;
    const double C25937 = C25757 * C514;
    const double C25931 = C25757 * C513;
    const double C25923 = C25757 * C261;
    const double C25913 = C25757 * C260;
    const double C25911 = C25757 * C271;
    const double C25907 = C25757 * C259;
    const double C26281 = C25757 * C606;
    const double C26408 = C25757 * C2806;
    const double C26586 = C25757 * C2982;
    const double C26580 = C25757 * C719;
    const double C26572 = C25757 * C724;
    const double C26911 = C25757 * C3322;
    const double C26903 = C25757 * C971;
    const double C27518 = C25757 * C720;
    const double C29060 = C25757 * C385;
    const double C29050 = C25757 * C384;
    const double C29048 = C25757 * C395;
    const double C29044 = C25757 * C383;
    const double C29813 = C25757 * C852;
    const double C29807 = C25757 * C853;
    const double C30041 = C25757 * C3450;
    const double C30189 = C25757 * C1057;
    const double C39617 = C25757 * C6200;
    const double C51200 = C51144 - C51183;
    const double C51184 = C51146 - C51147;
    const double C25930 = C25751 * C517;
    const double C25916 = C25751 * C265;
    const double C25910 = C25751 * C280;
    const double C25906 = C25751 * C273;
    const double C26284 = C25751 * C615;
    const double C26407 = C25751 * C2813;
    const double C26585 = C25751 * C2989;
    const double C26583 = C25751 * C726;
    const double C26575 = C25751 * C741;
    const double C26910 = C25751 * C3329;
    const double C26902 = C25751 * C980;
    const double C29053 = C25751 * C389;
    const double C29047 = C25751 * C404;
    const double C29043 = C25751 * C397;
    const double C29816 = C25751 * C856;
    const double C30040 = C25751 * C3457;
    const double C30188 = C25751 * C1066;
    const double C39616 = C25751 * C6207;
    const double C124 =
        (C50000 / C49986 - (0 * de) / C49981) / C49986 - (0 * de) / C49981;
    const double C1176 = C50000 / C49986 - (0 * de) / C49981;
    const double C50002 = C49999 / C49981;
    const double C51201 = C51151 - C51186;
    const double C51187 = C51153 - C51154;
    const double C2351 = C2171 * C266;
    const double C2341 = C2172 * C266;
    const double C2331 = C2173 * C266;
    const double C7956 = C51142 * C266;
    const double C7948 = C50868 * C266;
    const double C10757 = C50863 * C266;
    const double C23095 = C22937 * C266;
    const double C25922 = C25751 * C266;
    const double C25914 = C50868 * C266;
    const double C5355 = C2171 * C390;
    const double C5345 = C2172 * C390;
    const double C5335 = C2173 * C390;
    const double C13053 = C50863 * C390;
    const double C15858 = C51142 * C390;
    const double C15850 = C50868 * C390;
    const double C29059 = C25751 * C390;
    const double C29051 = C50868 * C390;
    const double C32566 = C22937 * C390;
    const double C2687 = C2172 * C518;
    const double C2673 = C2171 * C518;
    const double C7974 = C51142 * C518;
    const double C7966 = C50868 * C518;
    const double C10765 = C50863 * C518;
    const double C25940 = C25751 * C518;
    const double C25932 = C50868 * C518;
    const double C3003 = C2172 * C727;
    const double C3949 = C2171 * C727;
    const double C8631 = C50868 * C727;
    const double C9583 = C51142 * C727;
    const double C11937 = C50863 * C727;
    const double C26581 = C50868 * C727;
    const double C27517 = C25751 * C727;
    const double C5935 = C2172 * C857;
    const double C5921 = C2171 * C857;
    const double C13619 = C50863 * C857;
    const double C15876 = C51142 * C857;
    const double C15868 = C50868 * C857;
    const double C29814 = C50868 * C857;
    const double C29806 = C25751 * C857;
    const double C2336 = C2178 * C270;
    const double C7951 = C49954 * C270;
    const double C10758 = C10648 * C270;
    const double C25917 = C25757 * C270;
    const double C5340 = C2178 * C394;
    const double C13054 = C10648 * C394;
    const double C15853 = C49954 * C394;
    const double C29054 = C25757 * C394;
    const double C7969 = C49954 * C522;
    const double C10766 = C10648 * C522;
    const double C25935 = C25757 * C522;
    const double C8626 = C49954 * C731;
    const double C11940 = C10648 * C731;
    const double C26576 = C25757 * C731;
    const double C13624 = C10648 * C861;
    const double C15871 = C49954 * C861;
    const double C29809 = C25757 * C861;
    const double C2349 = C2171 * C279;
    const double C2335 = C2172 * C279;
    const double C7954 = C51142 * C279;
    const double C7946 = C50868 * C279;
    const double C10755 = C50863 * C279;
    const double C25920 = C25751 * C279;
    const double C25912 = C50868 * C279;
    const double C5353 = C2171 * C403;
    const double C5339 = C2172 * C403;
    const double C13051 = C50863 * C403;
    const double C15856 = C51142 * C403;
    const double C15848 = C50868 * C403;
    const double C29057 = C25751 * C403;
    const double C29049 = C50868 * C403;
    const double C2683 = C2171 * C527;
    const double C7968 = C51142 * C527;
    const double C10763 = C50863 * C527;
    const double C25934 = C25751 * C527;
    const double C2999 = C2171 * C742;
    const double C8629 = C51142 * C742;
    const double C11251 = C50863 * C742;
    const double C26579 = C25751 * C742;
    const double C5931 = C2171 * C866;
    const double C13621 = C50863 * C866;
    const double C15870 = C51142 * C866;
    const double C29812 = C25751 * C866;
    const double C50139 = C50097 + C50136;
    const double C50156 = C50146 / C50070;
    const double C2821 = C2172 * C614;
    const double C8316 = C50868 * C614;
    const double C8308 = C51142 * C614;
    const double C10777 = C50863 * C614;
    const double C26282 = C50868 * C614;
    const double C26274 = C25751 * C614;
    const double C3009 = C2172 * C740;
    const double C8623 = C50868 * C740;
    const double C9591 = C51142 * C740;
    const double C11943 = C50863 * C740;
    const double C26573 = C50868 * C740;
    const double C27525 = C25751 * C740;
    const double C3337 = C2172 * C979;
    const double C8962 = C50868 * C979;
    const double C13627 = C50863 * C979;
    const double C17268 = C51142 * C979;
    const double C26904 = C50868 * C979;
    const double C29822 = C25751 * C979;
    const double C6215 = C2172 * C1065;
    const double C16462 = C50868 * C1065;
    const double C16454 = C51142 * C1065;
    const double C19212 = C50863 * C1065;
    const double C30190 = C50868 * C1065;
    const double C39345 = C25751 * C1065;
    const double C50176 = C50168 / C49935;
    const double C50315 = -C50312;
    const double C50362 = -C50359;
    const double C11129 = C50863 * C8440;
    const double C11255 = C50863 * C8614;
    const double C11485 = C50863 * C8955;
    const double C13810 = C50863 * C9085;
    const double C21837 = C50863 * C16759;
    const double C50138 = C50135 + C50096;
    const double C50160 = C50152 / C49981;
    const double C50155 = C50144 / C49981;
    const double C8311 = C49954 * C610;
    const double C10778 = C10648 * C610;
    const double C26277 = C25757 * C610;
    const double C8618 = C49954 * C736;
    const double C11946 = C10648 * C736;
    const double C26568 = C25757 * C736;
    const double C8965 = C49954 * C975;
    const double C13630 = C10648 * C975;
    const double C26907 = C25757 * C975;
    const double C16457 = C49954 * C1061;
    const double C19215 = C10648 * C1061;
    const double C30193 = C25757 * C1061;
    const double C11130 = C10648 * C8438;
    const double C11256 = C10648 * C8612;
    const double C11486 = C10648 * C8953;
    const double C13811 = C10648 * C9083;
    const double C21838 = C10648 * C16757;
    const double C50137 = C50134 / C50070;
    const double C529 =
        (-(C50131 * C50395) / C49981) / C49935 - C50101 / C50070 -
        (ae * (C50132 * C50395 + C50102)) / C50070 -
        ((C50103 + C50133 * C50395) * ce) / C50070 +
        C50069 * ((-((C50097 + C50124 * C50395) * ce) / C49981) / C49935 -
                  (ae * (C50121 * C50395 + C50096)) / C50070 +
                  C50069 * ((-(C50185 * C50395) / C49981) / C49935 - C50145));
    const double C868 =
        (-(C50131 * C50442) / C49981) / C49935 - C50101 / C50070 -
        (ae * (C50132 * C50442 + C50102)) / C50070 -
        ((C50103 + C50133 * C50442) * ce) / C50070 +
        C50069 * ((-((C50097 + C50124 * C50442) * ce) / C49981) / C49935 -
                  (ae * (C50121 * C50442 + C50096)) / C50070 +
                  C50069 * ((-(C50185 * C50442) / C49981) / C49935 - C50145));
    const double C278 =
        (-(ae * C50300 * C50102) / C49981) / C49935 -
        (C50300 * C50101) / C50070 - (C50300 * C50103 * ce) / C50070 +
        C50069 * ((-(C50300 * C50097 * ce) / C49981) / C49935 -
                  (ae * C50300 * C50096) / C50070 - (C50069 * C50301) / C50070);
    const double C743 = (-(C50347 * C50300 * C50097 * ce) / C49981) / C49935 -
                        (ae * C50347 * C50300 * C50096) / C50070 -
                        (C50069 * C50347 * C50301) / C50070;
    const double C984 =
        (-(C50301 * C50442) / C49981) / C49935 - (C50300 * C50101) / C50070;
    const double C402 =
        (-(ae * C50347 * C50102) / C49981) / C49935 -
        (C50347 * C50101) / C50070 - (C50347 * C50103 * ce) / C50070 +
        C50069 * ((-(C50347 * C50097 * ce) / C49981) / C49935 -
                  (ae * C50347 * C50096) / C50070 - (C50069 * C50348) / C50070);
    const double C2691 = C2171 * C528;
    const double C2681 = C2172 * C528;
    const double C7978 = C51142 * C528;
    const double C7970 = C50868 * C528;
    const double C10767 = C50863 * C528;
    const double C25944 = C25751 * C528;
    const double C25936 = C50868 * C528;
    const double C2825 = C2171 * C619;
    const double C8314 = C51142 * C619;
    const double C10775 = C50863 * C619;
    const double C26280 = C25751 * C619;
    const double C3013 = C2171 * C749;
    const double C8621 = C51142 * C749;
    const double C11247 = C50863 * C749;
    const double C26571 = C25751 * C749;
    const double C5939 = C2171 * C867;
    const double C5929 = C2172 * C867;
    const double C13625 = C50863 * C867;
    const double C15880 = C51142 * C867;
    const double C15872 = C50868 * C867;
    const double C29818 = C25751 * C867;
    const double C29810 = C50868 * C867;
    const double C6219 = C2171 * C1070;
    const double C13930 = C50863 * C1070;
    const double C16460 = C51142 * C1070;
    const double C30192 = C25751 * C1070;
    const double C50196 = C50124 + C50193;
    const double C50230 = C50215 / C50070;
    const double C50327 = C50322 * ce;
    const double C3456 =
        (2 * C50347 * C50661 + C50347 * (C50661 + C50322 * C50442)) / C49935;
    const double C16632 =
        (3 * (C50661 + C50322 * C50442) +
         C50347 * (2 * C50347 * C50322 +
                   C50347 * (C50322 + C50300 * C50266 * C50442))) /
        C49935;
    const double C50374 = C50369 * ce;
    const double C50678 = C50133 + C50677;
    const double C50724 = C50133 + C50723;
    const double C8451 = C50868 * C2812;
    const double C11029 = C50863 * C2812;
    const double C26409 = C50868 * C2812;
    const double C8637 = C50868 * C2988;
    const double C11949 = C50863 * C2988;
    const double C26587 = C50868 * C2988;
    const double C8970 = C50868 * C3328;
    const double C13633 = C50863 * C3328;
    const double C26912 = C50868 * C3328;
    const double C16768 = C50868 * C6206;
    const double C21649 = C50863 * C6206;
    const double C39618 = C50868 * C6206;
    const double C50188 = C50153 + C50180;
    const double C50187 = C50179 / C49981;
    const double C3449 =
        2 * C50347 * C50804 + C50347 * (C50804 + C50300 * C50248 * C50442);
    const double C2822 = C2178 * C605;
    const double C8309 = C49954 * C605;
    const double C10780 = C10648 * C605;
    const double C26275 = C25757 * C605;
    const double C3010 = C2178 * C723;
    const double C9592 = C49954 * C723;
    const double C12886 = C10648 * C723;
    const double C27526 = C25757 * C723;
    const double C3338 = C2178 * C970;
    const double C17269 = C49954 * C970;
    const double C18507 = C10648 * C970;
    const double C29823 = C25757 * C970;
    const double C6216 = C2178 * C1056;
    const double C16455 = C49954 * C1056;
    const double C21278 = C10648 * C1056;
    const double C39346 = C25757 * C1056;
    const double C8435 =
        4 * (2 * C50806 + C50300 * C50814) +
        C50300 * (3 * C50814 + C50300 * (2 * C50300 * C50163 +
                                         C50300 * (C50163 + C50238 * C50395)));
    const double C8609 =
        C50347 * (3 * C50814 + C50300 * (2 * C50300 * C50163 +
                                         C50300 * (C50163 + C50238 * C50395)));
    const double C8950 =
        2 * C50806 + C50300 * C50814 +
        (2 * C50300 * C50163 + C50300 * (C50163 + C50238 * C50395)) * C50442;
    const double C9080 =
        2 * C50347 * C50814 +
        C50347 * (C50814 + (C50163 + C50238 * C50395) * C50442);
    const double C16754 =
        4 * (2 * C50347 * C50115 + C50347 * C50840) +
        C50347 * (3 * C50840 + C50347 * (2 * C50347 * C50163 +
                                         C50347 * (C50163 + C50238 * C50442)));
    const double C50195 = C50192 + C50121;
    const double C50235 = C50222 / C49981;
    const double C50229 = C50213 / C49981;
    const double C50326 = ae * C50320;
    const double C3453 = (-2 * C50347 * C50655) / C49981 -
                         (C50347 * (C50320 * C50442 + C50655)) / C49981;
    const double C16631 =
        (-3 * (C50320 * C50442 + C50655)) / C49981 +
        C50347 * ((-2 * C50347 * C50320) / C49981 -
                  (C50347 * (C50300 * C50263 * C50442 + C50320)) / C49981);
    const double C50373 = ae * C50367;
    const double C50672 = C50671 + C50132;
    const double C50718 = C50717 + C50132;
    const double C8454 = C49954 * C2809;
    const double C11034 = C10648 * C2809;
    const double C26412 = C25757 * C2809;
    const double C8640 = C49954 * C2985;
    const double C11952 = C10648 * C2985;
    const double C26590 = C25757 * C2985;
    const double C8973 = C49954 * C3325;
    const double C13636 = C10648 * C3325;
    const double C26915 = C25757 * C3325;
    const double C16771 = C49954 * C6203;
    const double C21652 = C10648 * C6203;
    const double C39621 = C25757 * C6203;
    const double C50194 = C50191 / C50070;
    const double C50311 = C50069 * C50308;
    const double C50321 = C50308 / C50070;
    const double C50423 = -2 * C50308;
    const double C50434 = C50347 * C50308;
    const double C744 = (-(ae * C50347 * C50300 * C50132) / C49981) / C49935 -
                        (C50347 * C50301) / C50070 -
                        (C50347 * C50300 * C50133 * ce) / C50070 +
                        C50069 * ((-(C50347 * C50306 * ce) / C49981) / C49935 -
                                  (ae * C50347 * C50307) / C50070 -
                                  (C50069 * C50347 * C50308) / C50070);
    const double C983 =
        (-((C50300 * C50097 + C50306 * C50442) * ce) / C49981) / C49935 -
        (ae * (C50307 * C50442 + C50300 * C50096)) / C50070 +
        C50069 * ((-(C50308 * C50442) / C49981) / C49935 - C50301 / C50070);
    const double C3460 =
        (-2 * C50347 * C50301) / C50070 +
        C50347 * ((-(C50308 * C50442) / C49981) / C49935 - C50301 / C50070);
    const double C50358 = C50069 * C50355;
    const double C50368 = C50355 / C50070;
    const double C50479 = -2 * C50355;
    const double C50399 = C50398 / C49981;
    const double C50446 = C50445 / C49981;
    const double C50830 = C50827 + C50829;
    const double C19498 =
        4 * (2 * C50347 * C50825 + C50347 * C50847) +
        C50347 * (3 * C50847 +
                  C50347 * (2 * C50347 * C50845 +
                            C50347 * (C50845 + C50300 * C50218 * C50442)));
    const double C50854 = C50851 + C50853;
    const double C50278 = C50173 + C50272;
    const double C50275 = C50269 + C50170;
    const double C50274 = C50268 / C50070;
    const double C50330 = C50069 * C50325;
    const double C50470 = C50325 * C50442;
    const double C50489 = C50347 * C50325;
    const double C50377 = C50069 * C50372;
    const double C50409 = C50406 / C49981;
    const double C50456 = C50453 / C49981;
    const double C50130 = C50126 - C50111;
    const double C50261 = C50253 - C50232;
    const double C50339 = C50337 / C49935;
    const double C50496 = -C50493;
    const double C50386 = C50384 / C49935;
    const double C50416 = -C50413;
    const double C11117 =
        (5 * (3 * C50681 + C50300 * C50703) +
         C50300 * (4 * C50703 +
                   C50300 * (3 * C50407 +
                             C50300 * (2 * C50323 +
                                       C50300 * (C50173 + C50249 * C50395))))) /
        C49935;
    const double C11239 =
        (C50347 * (4 * C50703 +
                   C50300 * (3 * C50407 +
                             C50300 * (2 * C50323 +
                                       C50300 * (C50173 + C50249 * C50395))))) /
        C49935;
    const double C11473 =
        (3 * C50681 + C50300 * C50703 +
         (3 * C50407 +
          C50300 * (2 * C50323 + C50300 * (C50173 + C50249 * C50395))) *
             C50442) /
        C49935;
    const double C11567 =
        (2 * C50347 * C50703 +
         C50347 * (C50703 + (2 * C50323 + C50300 * (C50173 + C50249 * C50395)) *
                                C50442)) /
        C49935;
    const double C50463 = -C50460;
    const double C21831 =
        (5 * (3 * C50727 + C50347 * C50743) +
         C50347 * (4 * C50743 +
                   C50347 * (3 * C50454 +
                             C50347 * (2 * C50370 +
                                       C50347 * (C50173 + C50249 * C50442))))) /
        C49935;
    const double C50699 = C50697 - C50698;
    const double C50739 = C50737 - C50738;
    const double C50273 = C50265 * ae;
    const double C50271 = C50069 * C50265;
    const double C50270 = C50265 * ce;
    const double C51202 = C51159 - C51189;
    const double C51190 = C51162 - C51163;
    const double C51203 = C51164 - C51192;
    const double C51193 = C51167 - C51168;
    const double C51204 = C51172 - C51195;
    const double C51196 = C51175 - C51176;
    const double C51205 = C51177 - C51198;
    const double C51199 = C51180 - C51181;
    const double C7988 = C7941 + C7942;
    const double C15890 = C15843 + C15844;
    const double C23102 = C22942 * C261;
    const double C23100 = C22942 * C270;
    const double C23094 = C22942 * C260;
    const double C23448 = C22942 * C514;
    const double C23574 = C22942 * C605;
    const double C23750 = C22942 * C723;
    const double C23740 = C22942 * C720;
    const double C24066 = C22942 * C970;
    const double C32573 = C22942 * C385;
    const double C32571 = C22942 * C394;
    const double C32565 = C22942 * C384;
    const double C33163 = C22942 * C853;
    const double C33435 = C22942 * C1056;
    const double C49958 = C50863 - C49956;
    const double C10796 = C10772 + C10773;
    const double C10790 = C10760 + C10761;
    const double C10786 = C10752 + C10753;
    const double C10785 = C10750 + C10751;
    const double C10784 = C10748 + C10749;
    const double C11040 = C11032 + C11033;
    const double C11263 = C11252 + C11253;
    const double C11261 = C11248 + C11249;
    const double C11259 = C11244 + C11245;
    const double C11490 = C11480 + C11481;
    const double C11488 = C11476 + C11477;
    const double C13058 = C13048 + C13049;
    const double C13057 = C13046 + C13047;
    const double C13056 = C13044 + C13045;
    const double C13640 = C13622 + C13623;
    const double C13813 = C13805 + C13806;
    const double C13931 = C13927 + C13928;
    const double C19395 = C19388 + C19389;
    const double C19510 = C19505 + C19506;
    const double C25954 = C25907 + C25908;
    const double C29067 = C29044 + C29045;
    const double C23115 = C51200 * C266;
    const double C23113 = C51200 * C279;
    const double C23107 = C51200 * C265;
    const double C23097 = C51200 * C280;
    const double C23091 = C51200 * C273;
    const double C23455 = C51200 * C528;
    const double C23453 = C51200 * C517;
    const double C23447 = C51200 * C527;
    const double C23437 = C51200 * C518;
    const double C23577 = C51200 * C619;
    const double C23571 = C51200 * C615;
    const double C23753 = C51200 * C749;
    const double C23747 = C51200 * C741;
    const double C23745 = C51200 * C726;
    const double C23739 = C51200 * C742;
    const double C24063 = C51200 * C980;
    const double C24665 = C51200 * C727;
    const double C32586 = C51200 * C390;
    const double C32584 = C51200 * C403;
    const double C32578 = C51200 * C389;
    const double C32568 = C51200 * C404;
    const double C32562 = C51200 * C397;
    const double C33170 = C51200 * C867;
    const double C33168 = C51200 * C856;
    const double C33162 = C51200 * C866;
    const double C33152 = C51200 * C857;
    const double C33438 = C51200 * C1070;
    const double C33432 = C51200 * C1066;
    const double C105 = (C51142 - C51182) / C49940 - (C51200 * C50859) / C49935;
    const double C23105 = C51184 * C266;
    const double C23099 = C51184 * C279;
    const double C23093 = C51184 * C265;
    const double C23451 = C51184 * C518;
    const double C23445 = C51184 * C528;
    const double C23573 = C51184 * C614;
    const double C23749 = C51184 * C740;
    const double C23743 = C51184 * C727;
    const double C24065 = C51184 * C979;
    const double C32576 = C51184 * C390;
    const double C32570 = C51184 * C403;
    const double C32564 = C51184 * C389;
    const double C33166 = C51184 * C857;
    const double C33160 = C51184 * C867;
    const double C33434 = C51184 * C1065;
    const double C106 =
        (2 * C50868 + C51200) / C49940 - (C51184 * C50859) / C49935;
    const double C107 = C51184 / C49940 - C50871 / C49944;
    const double C50004 = C50882 - C50002;
    const double C109 = (C51149 - C51185) / C49986 - (C51201 * C50878) / C49981;
    const double C110 =
        (2 * C50887 + C51201) / C49986 - (C51187 * C50878) / C49981;
    const double C111 = C51187 / C49986 - C50890 / C49990;
    const double C2364 = C2330 + C2331;
    const double C7991 = C7947 + C7948;
    const double C10788 = C10756 + C10757;
    const double C25957 = C25913 + C25914;
    const double C5368 = C5334 + C5335;
    const double C13060 = C13052 + C13053;
    const double C15893 = C15849 + C15850;
    const double C29070 = C29050 + C29051;
    const double C8000 = C7965 + C7966;
    const double C10792 = C10764 + C10765;
    const double C25966 = C25931 + C25932;
    const double C8648 = C8630 + C8631;
    const double C11954 = C11936 + C11937;
    const double C26598 = C26580 + C26581;
    const double C13638 = C13618 + C13619;
    const double C15902 = C15867 + C15868;
    const double C29833 = C29813 + C29814;
    const double C7990 = C7945 + C7946;
    const double C10787 = C10754 + C10755;
    const double C25956 = C25911 + C25912;
    const double C13059 = C13050 + C13051;
    const double C15892 = C15847 + C15848;
    const double C29069 = C29048 + C29049;
    const double C10791 = C10762 + C10763;
    const double C11262 = C11250 + C11251;
    const double C13639 = C13620 + C13621;
    const double C50142 = C50139 + C50125;
    const double C8331 = C8315 + C8316;
    const double C10798 = C10776 + C10777;
    const double C26297 = C26281 + C26282;
    const double C8644 = C8622 + C8623;
    const double C11956 = C11942 + C11943;
    const double C26594 = C26572 + C26573;
    const double C8976 = C8961 + C8962;
    const double C13642 = C13626 + C13627;
    const double C26918 = C26903 + C26904;
    const double C16477 = C16461 + C16462;
    const double C19225 = C19211 + C19212;
    const double C30196 = C30189 + C30190;
    const double C50184 = C50176 - C50158;
    const double C50316 = C50315 / C49935;
    const double C50363 = C50362 / C49935;
    const double C11136 = C11128 + C11129;
    const double C11264 = C11254 + C11255;
    const double C11492 = C11484 + C11485;
    const double C13815 = C13809 + C13810;
    const double C21841 = C21836 + C21837;
    const double C50141 = C50138 + C50122;
    const double C50167 = -C50155;
    const double C2693 = C2172 * C529;
    const double C2679 = C2173 * C529;
    const double C7984 = C51142 * C529;
    const double C7976 = C50868 * C529;
    const double C10771 = C50863 * C529;
    const double C23457 = C51184 * C529;
    const double C23443 = C22937 * C529;
    const double C25950 = C25751 * C529;
    const double C25942 = C50868 * C529;
    const double C5941 = C2172 * C868;
    const double C5927 = C2173 * C868;
    const double C15886 = C51142 * C868;
    const double C15878 = C50868 * C868;
    const double C18668 = C50863 * C868;
    const double C29820 = C50868 * C868;
    const double C33172 = C51184 * C868;
    const double C33158 = C22937 * C868;
    const double C38797 = C25751 * C868;
    const double C2357 = C2171 * C278;
    const double C2347 = C2172 * C278;
    const double C2337 = C2173 * C278;
    const double C7960 = C51142 * C278;
    const double C7952 = C50868 * C278;
    const double C10759 = C50863 * C278;
    const double C23121 = C51200 * C278;
    const double C23111 = C51184 * C278;
    const double C23101 = C22937 * C278;
    const double C25926 = C25751 * C278;
    const double C25918 = C50868 * C278;
    const double C2997 = C2172 * C743;
    const double C3955 = C2171 * C743;
    const double C8627 = C50868 * C743;
    const double C9587 = C51142 * C743;
    const double C11941 = C50863 * C743;
    const double C23737 = C51184 * C743;
    const double C24671 = C51200 * C743;
    const double C26577 = C50868 * C743;
    const double C27521 = C25751 * C743;
    const double C3341 = C2171 * C984;
    const double C8964 = C51142 * C984;
    const double C11479 = C50863 * C984;
    const double C24069 = C51200 * C984;
    const double C26906 = C25751 * C984;
    const double C5361 = C2171 * C402;
    const double C5351 = C2172 * C402;
    const double C5341 = C2173 * C402;
    const double C13055 = C50863 * C402;
    const double C15862 = C51142 * C402;
    const double C15854 = C50868 * C402;
    const double C29063 = C25751 * C402;
    const double C29055 = C50868 * C402;
    const double C32592 = C51200 * C402;
    const double C32582 = C51184 * C402;
    const double C32572 = C22937 * C402;
    const double C8002 = C7969 + C7970;
    const double C10793 = C10766 + C10767;
    const double C25968 = C25935 + C25936;
    const double C10797 = C10774 + C10775;
    const double C11260 = C11246 + C11247;
    const double C13641 = C13624 + C13625;
    const double C15904 = C15871 + C15872;
    const double C29831 = C29809 + C29810;
    const double C13932 = C13929 + C13930;
    const double C50199 = C50196 + C50174;
    const double C50332 = C50327 / C50070;
    const double C16640 = C50868 * C3456;
    const double C19218 = C50863 * C3456;
    const double C30042 = C50868 * C3456;
    const double C50379 = C50374 / C50070;
    const double C8439 =
        (4 * (2 * C50661 + C50300 * C50678) +
         C50300 *
             (3 * C50678 +
              C50300 * (2 * C50322 + C50300 * (C50189 + C50266 * C50395)))) /
        C49935;
    const double C8613 =
        (C50347 *
         (3 * C50678 +
          C50300 * (2 * C50322 + C50300 * (C50189 + C50266 * C50395)))) /
        C49935;
    const double C8954 =
        (2 * C50661 + C50300 * C50678 +
         (2 * C50322 + C50300 * (C50189 + C50266 * C50395)) * C50442) /
        C49935;
    const double C9084 =
        (2 * C50347 * C50678 +
         C50347 * (C50678 + (C50189 + C50266 * C50395) * C50442)) /
        C49935;
    const double C16758 =
        (4 * (2 * C50347 * C50133 + C50347 * C50724) +
         C50347 *
             (3 * C50724 +
              C50347 * (2 * C50369 + C50347 * (C50189 + C50266 * C50442)))) /
        C49935;
    const double C8460 = C8450 + C8451;
    const double C11038 = C11028 + C11029;
    const double C26418 = C26408 + C26409;
    const double C8651 = C8636 + C8637;
    const double C11958 = C11948 + C11949;
    const double C26601 = C26586 + C26587;
    const double C8980 = C8969 + C8970;
    const double C13644 = C13632 + C13633;
    const double C26922 = C26911 + C26912;
    const double C16776 = C16767 + C16768;
    const double C21655 = C21648 + C21649;
    const double C39626 = C39617 + C39618;
    const double C130 = 4 * (2 * C50092 + C50069 * C50123) +
                        C50069 * (3 * C50123 + C50069 * C50188);
    const double C262 = C50300 * (3 * C50123 + C50069 * C50188);
    const double C386 = C50347 * (3 * C50123 + C50069 * C50188);
    const double C515 = 2 * C50092 + C50069 * C50123 + C50188 * C50395;
    const double C604 =
        2 * C50300 * C50188 + C50300 * (C50188 + C50265 * C50395);
    const double C721 = C50347 * C50300 * C50188;
    const double C722 = C50347 * (C50188 + C50265 * C50395);
    const double C854 = 2 * C50092 + C50069 * C50123 + C50188 * C50442;
    const double C969 = C50300 * C50188 + C50300 * C50265 * C50442;
    const double C1055 =
        2 * C50347 * C50188 + C50347 * (C50188 + C50265 * C50442);
    const double C50198 = C50195 + C50171;
    const double C50243 = -C50229;
    const double C50331 = C50326 / C49981;
    const double C16643 = C49954 * C3453;
    const double C19221 = C10648 * C3453;
    const double C30045 = C25757 * C3453;
    const double C50378 = C50373 / C49981;
    const double C8437 =
        4 * ((-2 * C50655) / C49981 - (C50300 * C50672) / C49981) +
        C50300 * ((-3 * C50672) / C49981 +
                  C50300 * ((-2 * C50320) / C49981 -
                            (C50300 * (C50263 * C50395 + C50186)) / C49981));
    const double C8611 =
        C50347 * ((-3 * C50672) / C49981 +
                  C50300 * ((-2 * C50320) / C49981 -
                            (C50300 * (C50263 * C50395 + C50186)) / C49981));
    const double C8952 = (-2 * C50655) / C49981 - (C50300 * C50672) / C49981 +
                         ((-2 * C50320) / C49981 -
                          (C50300 * (C50263 * C50395 + C50186)) / C49981) *
                             C50442;
    const double C9082 =
        (-2 * C50347 * C50672) / C49981 -
        (C50347 * ((C50263 * C50395 + C50186) * C50442 + C50672)) / C49981;
    const double C16756 =
        4 * ((-2 * C50347 * C50132) / C49981 - (C50347 * C50718) / C49981) +
        C50347 * ((-3 * C50718) / C49981 +
                  C50347 * ((-2 * C50367) / C49981 -
                            (C50347 * (C50263 * C50442 + C50186)) / C49981));
    const double C50314 = C50311 / C50070;
    const double C50425 = C50423 / C50070;
    const double C2995 = C2173 * C744;
    const double C3957 = C2172 * C744;
    const double C9589 = C50868 * C744;
    const double C12881 = C50863 * C744;
    const double C23735 = C22937 * C744;
    const double C24673 = C51184 * C744;
    const double C27523 = C50868 * C744;
    const double C28841 = C25751 * C744;
    const double C41426 = C51142 * C744;
    const double C3343 = C2172 * C983;
    const double C8966 = C50868 * C983;
    const double C13631 = C50863 * C983;
    const double C17272 = C51142 * C983;
    const double C24071 = C51184 * C983;
    const double C26908 = C50868 * C983;
    const double C29826 = C25751 * C983;
    const double C13808 = C50863 * C3460;
    const double C16642 = C51142 * C3460;
    const double C30044 = C25751 * C3460;
    const double C50361 = C50358 / C50070;
    const double C50481 = C50479 / C50070;
    const double C50400 = -C50399;
    const double C50447 = -C50446;
    const double C11115 =
        5 * (3 * C50817 + C50300 * C50830) +
        C50300 * (4 * C50830 +
                  C50300 * (3 * C50828 +
                            C50300 * (2 * C50300 * C50149 +
                                      C50300 * (C50149 + C50218 * C50395))));
    const double C11237 =
        C50347 * (4 * C50830 +
                  C50300 * (3 * C50828 +
                            C50300 * (2 * C50300 * C50149 +
                                      C50300 * (C50149 + C50218 * C50395))));
    const double C11471 =
        3 * C50817 + C50300 * C50830 +
        (3 * C50828 +
         C50300 * (2 * C50300 * C50149 + C50300 * (C50149 + C50218 * C50395))) *
            C50442;
    const double C11565 =
        2 * C50347 * C50830 +
        C50347 * (C50830 +
                  (2 * C50300 * C50149 + C50300 * (C50149 + C50218 * C50395)) *
                      C50442);
    const double C21829 =
        5 * (3 * C50843 + C50347 * C50854) +
        C50347 * (4 * C50854 +
                  C50347 * (3 * C50852 +
                            C50347 * (2 * C50347 * C50149 +
                                      C50347 * (C50149 + C50218 * C50442))));
    const double C50281 = C50278 + C50250;
    const double C50280 = C50275 + C50247;
    const double C50335 = C50330 / C50070;
    const double C50471 = C50470 / C49981;
    const double C50492 = C50069 * C50489;
    const double C50382 = C50377 / C50070;
    const double C50412 = -C50409;
    const double C50459 = -C50456;
    const double C50140 = C50130 - C50137;
    const double C50279 = C50261 - C50274;
    const double C50341 = C50339 - C50334;
    const double C50497 = C50496 / C49935;
    const double C50388 = C50386 - C50381;
    const double C50418 = C50416 / C49935;
    const double C50465 = C50463 / C49935;
    const double C11116 =
        5 * ((-3 * C50675) / C49981 + C50300 * C50699) +
        C50300 * (4 * C50699 +
                  C50300 * ((-3 * C50408) / C49981 +
                            C50300 * ((-2 * C50324) / C49981 -
                                      (C50300 * (C50246 * C50395 + C50170)) /
                                          C49981)));
    const double C11238 =
        C50347 *
        (4 * C50699 +
         C50300 * ((-3 * C50408) / C49981 +
                   C50300 * ((-2 * C50324) / C49981 -
                             (C50300 * (C50246 * C50395 + C50170)) / C49981)));
    const double C11472 =
        (-3 * C50675) / C49981 + C50300 * C50699 +
        ((-3 * C50408) / C49981 +
         C50300 * ((-2 * C50324) / C49981 -
                   (C50300 * (C50246 * C50395 + C50170)) / C49981)) *
            C50442;
    const double C11566 =
        2 * C50347 * C50699 +
        C50347 * (C50699 + ((-2 * C50324) / C49981 -
                            (C50300 * (C50246 * C50395 + C50170)) / C49981) *
                               C50442);
    const double C21830 =
        5 * ((-3 * C50721) / C49981 + C50347 * C50739) +
        C50347 * (4 * C50739 +
                  C50347 * ((-3 * C50455) / C49981 +
                            C50347 * ((-2 * C50371) / C49981 -
                                      (C50347 * (C50246 * C50442 + C50170)) /
                                          C49981)));
    const double C50277 = C50224 + C50271;
    const double C50276 = C50270 / C49981;
    const double C599 = (C51157 - C51188) / C49986 - (C51202 * C50937) / C49981;
    const double C600 =
        (2 * C50941 + C51202) / C49986 - (C51190 * C50937) / C49981;
    const double C601 = C51190 / C49986 - C50944 / C49990;
    const double C1051 =
        (C51158 - C51191) / C49986 - (C51203 * C50961) / C49981;
    const double C1052 =
        (2 * C50965 + C51203) / C49986 - (C51193 * C50961) / C49981;
    const double C1053 = C51193 / C49986 - C50968 / C49990;
    const double C10644 =
        (C51170 - C51194) / C49940 - (C51204 * C51037) / C49935;
    const double C10645 =
        (2 * C51041 + C51204) / C49940 - (C51196 * C51037) / C49935;
    const double C10646 = C51196 / C49940 - C51044 / C49944;
    const double C21073 =
        (C51171 - C51197) / C49940 - (C51205 * C51061) / C49935;
    const double C21074 =
        (2 * C51065 + C51205) / C49940 - (C51199 * C51061) / C49935;
    const double C21075 = C51199 / C49940 - C51068 / C49944;
    const double C23128 = C23094 + C23095;
    const double C32599 = C32565 + C32566;
    const double C49959 = C49958 * ae;
    const double C2176 =
        ((-C49934 / C49935) / C49940 - (C49947 * be) / C49935) / C49940 -
        ((C49933 * ((-C49936 / C49935) / C49940 - (C49958 * be) / C49935) +
          C25751) *
         be) /
            C49935 +
        (-C49949 / C49935) / C49940 - (0 * be) / C49935;
    const double C2177 =
        ((-C49936 / C49935) / C49940 - (C49958 * be) / C49935) / C49940 -
        ((C49933 * ((-C49949 / C49935) / C49940 - (0 * be) / C49935) + C50868) *
         be) /
            C49935;
    const double C25756 = (-C49936 / C49935) / C49940 - (C49958 * be) / C49935;
    const double C11124 = C10796 * C603;
    const double C11122 = C10790 * C603;
    const double C11018 = C10786 * C50000;
    const double C11786 = C10786 * C1281;
    const double C10803 = C10785 * C251;
    const double C11017 = C10785 * C51149;
    const double C11121 = C10785 * C50882;
    const double C11669 = C10785 * C51201;
    const double C11785 = C10785 * C1275;
    const double C11120 = C10784 * C603;
    const double C11127 = C11040 * C603;
    const double C11271 = C11263 * C603;
    const double C11269 = C11261 * C603;
    const double C11267 = C11259 * C603;
    const double C11496 = C11490 * C603;
    const double C11494 = C11488 * C603;
    const double C13616 = C13058 * C50000;
    const double C14438 = C13058 * C1281;
    const double C13063 = C13057 * C251;
    const double C13463 = C13057 * C50882;
    const double C13615 = C13057 * C51149;
    const double C14437 = C13057 * C1275;
    const double C14604 = C13057 * C51201;
    const double C13462 = C13056 * C603;
    const double C13802 = C13640 * C603;
    const double C13817 = C13813 * C603;
    const double C13933 = C13931 * C603;
    const double C19399 = C19395 * C603;
    const double C19513 = C19510 * C603;
    const double C50005 = C50004 * ce;
    const double C256 =
        ((-C49980 / C49981) / C49986 - (C49993 * de) / C49981) / C49986 -
        ((C49979 * ((-C49982 / C49981) / C49986 - (C50004 * de) / C49981) +
          C1275) *
         de) /
            C49981 +
        (-C49995 / C49981) / C49986 - (0 * de) / C49981;
    const double C257 =
        ((-C49982 / C49981) / C49986 - (C50004 * de) / C49981) / C49986 -
        ((C49979 * ((-C49995 / C49981) / C49986 - (0 * de) / C49981) + C50887) *
         de) /
            C49981;
    const double C1280 = (-C49982 / C49981) / C49986 - (C50004 * de) / C49981;
    const double C10806 = C10788 * C258;
    const double C11672 = C10788 * C1176;
    const double C13066 = C13060 * C258;
    const double C14607 = C13060 * C1176;
    const double C11022 = C10792 * C50000;
    const double C11790 = C10792 * C1281;
    const double C11960 = C11954 * C1281;
    const double C12422 = C11954 * C50000;
    const double C13646 = C13638 * C50000;
    const double C14949 = C13638 * C1281;
    const double C10805 = C10787 * C252;
    const double C11019 = C10787 * C50887;
    const double C11671 = C10787 * C51187;
    const double C11787 = C10787 * C50887;
    const double C13065 = C13059 * C252;
    const double C13617 = C13059 * C50887;
    const double C14439 = C13059 * C50887;
    const double C14606 = C13059 * C51187;
    const double C10809 = C10791 * C251;
    const double C11021 = C10791 * C51149;
    const double C11123 = C10791 * C50882;
    const double C11675 = C10791 * C51201;
    const double C11789 = C10791 * C1275;
    const double C11270 = C11262 * C50882;
    const double C11938 = C11262 * C1275;
    const double C12423 = C11262 * C51149;
    const double C12875 = C11262 * C251;
    const double C14082 = C11262 * C51201;
    const double C13647 = C13639 * C51149;
    const double C13801 = C13639 * C50882;
    const double C14950 = C13639 * C1275;
    const double C18662 = C13639 * C251;
    const double C20164 = C13639 * C51201;
    const double C140 = (3 * (C50084 + C50069 * C50103 + C50092 * ae) +
                         C50069 * (2 * C50103 + C50069 * C50142 + C50123 * ae) +
                         (2 * C50092 + C50069 * C50123) * ae) /
                        C49935;
    const double C267 =
        (C50300 * (2 * C50103 + C50069 * C50142 + C50123 * ae)) / C49935;
    const double C391 =
        (C50347 * (2 * C50103 + C50069 * C50142 + C50123 * ae)) / C49935;
    const double C519 =
        (C50084 + C50069 * C50103 + C50092 * ae + C50142 * C50395) / C49935;
    const double C728 = (C50347 * C50300 * C50142) / C49935;
    const double C858 =
        (C50084 + C50069 * C50103 + C50092 * ae + C50142 * C50442) / C49935;
    const double C11026 = C10798 * C50000;
    const double C11794 = C10798 * C1281;
    const double C11962 = C11956 * C1281;
    const double C12426 = C11956 * C50000;
    const double C13650 = C13642 * C50000;
    const double C14443 = C13642 * C1281;
    const double C19231 = C19225 * C50000;
    const double C20511 = C19225 * C1281;
    const double C50197 = C50184 - C50194;
    const double C50317 = C50316 - C50313;
    const double C50364 = C50363 - C50360;
    const double C11138 = C11136 * C603;
    const double C11272 = C11264 * C603;
    const double C11498 = C11492 * C603;
    const double C13819 = C13815 * C603;
    const double C21843 = C21841 * C603;
    const double C277 =
        2 * ((-(C50300 * C50097 * ce) / C49981) / C49935 -
             (ae * C50300 * C50096) / C50070 - (C50069 * C50301) / C50070) -
        (ae * C50300 * C50141) / C50070 - (C50300 * C50142 * ce) / C50070 +
        C50069 * ((-(ae * C50300 * C50132) / C49981) / C49935 -
                  C50301 / C50070 - (C50300 * C50133 * ce) / C50070 +
                  C50069 * ((-(C50300 * C50124 * ce) / C49981) / C49935 -
                            (ae * C50300 * C50121) / C50070 -
                            (C50069 * C50300 * C50185) / C50070));
    const double C401 =
        2 * ((-(C50347 * C50097 * ce) / C49981) / C49935 -
             (ae * C50347 * C50096) / C50070 - (C50069 * C50348) / C50070) -
        (ae * C50347 * C50141) / C50070 - (C50347 * C50142 * ce) / C50070 +
        C50069 * ((-(ae * C50347 * C50132) / C49981) / C49935 -
                  C50348 / C50070 - (C50347 * C50133 * ce) / C50070 +
                  C50069 * ((-(C50347 * C50124 * ce) / C49981) / C49935 -
                            (ae * C50347 * C50121) / C50070 -
                            (C50069 * C50347 * C50185) / C50070));
    const double C141 =
        (-3 * (C50069 * C50102 + C50083 + C50092 * ce)) / C49981 +
        C50069 * ((-2 * C50102) / C49981 - (C50069 * C50141) / C49981 -
                  (C50123 * ce) / C49981) -
        ((2 * C50092 + C50069 * C50123) * ce) / C49981;
    const double C269 =
        C50300 * ((-2 * C50102) / C49981 - (C50069 * C50141) / C49981 -
                  (C50123 * ce) / C49981);
    const double C393 =
        C50347 * ((-2 * C50102) / C49981 - (C50069 * C50141) / C49981 -
                  (C50123 * ce) / C49981);
    const double C523 =
        -(C50141 * C50395 + C50069 * C50102 + C50083 + C50092 * ce) / C49981;
    const double C732 = -(C50347 * C50300 * C50141) / C49981;
    const double C862 =
        -(C50141 * C50442 + C50069 * C50102 + C50083 + C50092 * ce) / C49981;
    const double C50175 = C50167 / C49935;
    const double C2367 = C2336 + C2337;
    const double C7993 = C7951 + C7952;
    const double C10789 = C10758 + C10759;
    const double C23131 = C23100 + C23101;
    const double C25959 = C25917 + C25918;
    const double C8646 = C8626 + C8627;
    const double C11955 = C11940 + C11941;
    const double C26596 = C26576 + C26577;
    const double C11489 = C11478 + C11479;
    const double C5371 = C5340 + C5341;
    const double C13061 = C13054 + C13055;
    const double C15895 = C15853 + C15854;
    const double C29072 = C29054 + C29055;
    const double C32602 = C32571 + C32572;
    const double C10811 = C10793 * C252;
    const double C11023 = C10793 * C50887;
    const double C11677 = C10793 * C51187;
    const double C11791 = C10793 * C50887;
    const double C10815 = C10797 * C251;
    const double C11025 = C10797 * C51149;
    const double C11125 = C10797 * C50882;
    const double C11681 = C10797 * C51201;
    const double C11793 = C10797 * C1275;
    const double C11268 = C11260 * C50882;
    const double C11944 = C11260 * C1275;
    const double C12427 = C11260 * C51149;
    const double C12883 = C11260 * C251;
    const double C14088 = C11260 * C51201;
    const double C13649 = C13641 * C50887;
    const double C14952 = C13641 * C50887;
    const double C18664 = C13641 * C252;
    const double C20166 = C13641 * C51187;
    const double C13934 = C13932 * C50882;
    const double C19213 = C13932 * C51149;
    const double C20512 = C13932 * C1275;
    const double C21275 = C13932 * C251;
    const double C22270 = C13932 * C51201;
    const double C50202 = C50069 * C50199;
    const double C50225 = 3 * C50199;
    const double C50212 = C50199 * ce;
    const double C50659 = C50300 * C50199;
    const double C613 =
        (2 * C50300 * C50142 + C50300 * (C50142 + C50199 * C50395)) / C49935;
    const double C739 = (C50347 * (C50142 + C50199 * C50395)) / C49935;
    const double C978 = (C50300 * C50142 + C50300 * C50199 * C50442) / C49935;
    const double C1064 =
        (2 * C50347 * C50142 + C50347 * (C50142 + C50199 * C50442)) / C49935;
    const double C16649 = C16639 + C16640;
    const double C19227 = C19217 + C19218;
    const double C30052 = C30041 + C30042;
    const double C11044 = C11038 * C50000;
    const double C11796 = C11038 * C1281;
    const double C11964 = C11958 * C1281;
    const double C12430 = C11958 * C50000;
    const double C13652 = C13644 * C50000;
    const double C14447 = C13644 * C1281;
    const double C21658 = C21655 * C50000;
    const double C22505 = C21655 * C1281;
    const double C2354 = C2178 * C262;
    const double C23118 = C22942 * C262;
    const double C5358 = C2178 * C386;
    const double C32589 = C22942 * C386;
    const double C2676 = C2178 * C515;
    const double C7981 = C49954 * C515;
    const double C23440 = C22942 * C515;
    const double C25947 = C25757 * C515;
    const double C3952 = C2178 * C721;
    const double C24668 = C22942 * C721;
    const double C28838 = C25757 * C721;
    const double C41423 = C49954 * C721;
    const double C5924 = C2178 * C854;
    const double C15883 = C49954 * C854;
    const double C33155 = C22942 * C854;
    const double C38794 = C25757 * C854;
    const double C50201 = C50069 * C50198;
    const double C50221 = -3 * C50198;
    const double C50211 = ae * C50198;
    const double C745 =
        2 * ((-(C50347 * C50306 * ce) / C49981) / C49935 -
             (ae * C50347 * C50307) / C50070 - (C50069 * C50434) / C50070) -
        (ae * C50347 * C50300 * C50198) / C50070 -
        (C50347 * C50300 * C50199 * ce) / C50070 +
        C50069 * ((-(ae * C50347 * C50320) / C49981) / C49935 -
                  C50434 / C50070 - (C50347 * C50322 * ce) / C50070 +
                  C50069 * ((-(C50347 * C50323 * ce) / C49981) / C49935 -
                            (ae * C50347 * C50324) / C50070 -
                            (C50069 * C50347 * C50325) / C50070));
    const double C50653 = C50300 * C50198;
    const double C609 = (-2 * C50300 * C50141) / C49981 -
                        (C50300 * (C50198 * C50395 + C50141)) / C49981;
    const double C735 = -(C50347 * (C50198 * C50395 + C50141)) / C49981;
    const double C974 = -(C50300 * C50198 * C50442 + C50300 * C50141) / C49981;
    const double C1060 = (-2 * C50347 * C50141) / C49981 -
                         (C50347 * (C50198 * C50442 + C50141)) / C49981;
    const double C50252 = C50243 / C49935;
    const double C50336 = -C50331;
    const double C50383 = -C50378;
    const double C8978 = C8965 + C8966;
    const double C13643 = C13630 + C13631;
    const double C26920 = C26907 + C26908;
    const double C13814 = C13807 + C13808;
    const double C50401 = C50400 / C49935;
    const double C50448 = C50447 / C49935;
    const double C50284 = C50069 * C50281;
    const double C2811 =
        (3 * (C50142 + C50199 * C50395) +
         C50300 * (2 * C50300 * C50199 + C50300 * (C50199 + C50281 * C50395))) /
        C49935;
    const double C2987 =
        (C50347 * (2 * C50300 * C50199 + C50300 * (C50199 + C50281 * C50395))) /
        C49935;
    const double C3327 =
        (C50142 + C50199 * C50395 + (C50199 + C50281 * C50395) * C50442) /
        C49935;
    const double C6205 =
        (3 * (C50142 + C50199 * C50442) +
         C50347 * (2 * C50347 * C50199 + C50347 * (C50199 + C50281 * C50442))) /
        C49935;
    const double C50283 = C50069 * C50280;
    const double C2808 =
        (-3 * (C50198 * C50395 + C50141)) / C49981 +
        C50300 * ((-2 * C50300 * C50198) / C49981 -
                  (C50300 * (C50280 * C50395 + C50198)) / C49981);
    const double C2984 =
        C50347 * ((-2 * C50300 * C50198) / C49981 -
                  (C50300 * (C50280 * C50395 + C50198)) / C49981);
    const double C3324 =
        -((C50280 * C50395 + C50198) * C50442 + C50198 * C50395 + C50141) /
        C49981;
    const double C6202 =
        (-3 * (C50198 * C50442 + C50141)) / C49981 +
        C50347 * ((-2 * C50347 * C50198) / C49981 -
                  (C50347 * (C50280 * C50442 + C50198)) / C49981);
    const double C50472 = -C50471;
    const double C50495 = C50492 / C50070;
    const double C50415 = C50412 / C49935;
    const double C50462 = C50459 / C49935;
    const double C150 =
        3 * ((-(ae * C50102) / C49981) / C49935 - C50101 / C50070 -
             (C50103 * ce) / C50070 + C50069 * C50140) +
        (((-2 * C50102) / C49981 - (C50069 * C50141) / C49981 -
          (C50123 * ce) / C49981) *
         ae) /
            C49935 -
        ((2 * C50103 + C50069 * C50142 + C50123 * ae) * ce) / C50070 +
        C50069 * (2 * C50140 - (ae * C50141) / C50070 - (C50142 * ce) / C50070 +
                  C50069 * ((-(ae * C50132) / C49981) / C49935 -
                            C50131 / C50070 - (C50133 * ce) / C50070 +
                            C50069 * ((-(C50124 * ce) / C49981) / C49935 -
                                      (ae * C50121) / C50070 -
                                      (C50069 *
                                       (C50108 * C50109 +
                                        C50077 * bs[6] * std::pow(C50067, 6)) *
                                       C50078) /
                                          C50070)));
    const double C50282 = C50069 * C50279;
    const double C50343 = C50341 - C50335;
    const double C50498 = C50497 - C50494;
    const double C50390 = C50388 - C50382;
    const double C50420 = C50418 - C50414;
    const double C50467 = C50465 - C50461;
    const double C131 = 5 * (3 * C50123 + C50069 * C50188) +
                        C50069 * (4 * C50188 + C50069 * C50277);
    const double C264 = C50300 * (4 * C50188 + C50069 * C50277);
    const double C388 = C50347 * (4 * C50188 + C50069 * C50277);
    const double C516 = 3 * C50123 + C50069 * C50188 + C50277 * C50395;
    const double C855 = 3 * C50123 + C50069 * C50188 + C50277 * C50442;
    const double C1412 = C50347 * C50300 * C50277;
    const double C49960 = C49959 / C49935;
    const double C2356 = C2176 * C270;
    const double C2350 = C2176 * C260;
    const double C2348 = C2176 * C271;
    const double C2342 = C2176 * C259;
    const double C2332 = C2176 * C272;
    const double C2326 = C2176 * C263;
    const double C2690 = C2176 * C522;
    const double C2688 = C2176 * C512;
    const double C2682 = C2176 * C521;
    const double C2672 = C2176 * C513;
    const double C2824 = C2176 * C611;
    const double C2818 = C2176 * C607;
    const double C3012 = C2176 * C737;
    const double C3006 = C2176 * C725;
    const double C3004 = C2176 * C718;
    const double C2998 = C2176 * C730;
    const double C3340 = C2176 * C976;
    const double C3334 = C2176 * C972;
    const double C3954 = C2176 * C731;
    const double C3948 = C2176 * C719;
    const double C5360 = C2176 * C394;
    const double C5354 = C2176 * C384;
    const double C5352 = C2176 * C395;
    const double C5346 = C2176 * C383;
    const double C5336 = C2176 * C396;
    const double C5330 = C2176 * C387;
    const double C5938 = C2176 * C861;
    const double C5936 = C2176 * C851;
    const double C5930 = C2176 * C860;
    const double C5920 = C2176 * C852;
    const double C6218 = C2176 * C1062;
    const double C6212 = C2176 * C1058;
    const double C2352 = C2177 * C261;
    const double C2346 = C2177 * C270;
    const double C2340 = C2177 * C260;
    const double C2334 = C2177 * C271;
    const double C2328 = C2177 * C259;
    const double C2686 = C2177 * C513;
    const double C2680 = C2177 * C522;
    const double C2674 = C2177 * C514;
    const double C2826 = C2177 * C610;
    const double C2820 = C2177 * C606;
    const double C3014 = C2177 * C736;
    const double C3008 = C2177 * C724;
    const double C3002 = C2177 * C719;
    const double C2996 = C2177 * C731;
    const double C3342 = C2177 * C975;
    const double C3336 = C2177 * C971;
    const double C3950 = C2177 * C720;
    const double C5356 = C2177 * C385;
    const double C5350 = C2177 * C394;
    const double C5344 = C2177 * C384;
    const double C5338 = C2177 * C395;
    const double C5332 = C2177 * C383;
    const double C5934 = C2177 * C852;
    const double C5928 = C2177 * C861;
    const double C5922 = C2177 * C853;
    const double C6220 = C2177 * C1061;
    const double C6214 = C2177 * C1057;
    const double C25945 = C25756 * C514;
    const double C25943 = C25756 * C522;
    const double C25939 = C25756 * C513;
    const double C25933 = C25756 * C521;
    const double C25929 = C25756 * C512;
    const double C25925 = C25756 * C270;
    const double C25921 = C25756 * C260;
    const double C25919 = C25756 * C271;
    const double C25915 = C25756 * C259;
    const double C25909 = C25756 * C272;
    const double C25905 = C25756 * C263;
    const double C26285 = C25756 * C610;
    const double C26283 = C25756 * C607;
    const double C26279 = C25756 * C611;
    const double C26273 = C25756 * C606;
    const double C26410 = C25756 * C2810;
    const double C26406 = C25756 * C2807;
    const double C26588 = C25756 * C2986;
    const double C26584 = C25756 * C2983;
    const double C26582 = C25756 * C718;
    const double C26578 = C25756 * C730;
    const double C26574 = C25756 * C725;
    const double C26570 = C25756 * C737;
    const double C26913 = C25756 * C3326;
    const double C26909 = C25756 * C3323;
    const double C26905 = C25756 * C976;
    const double C26901 = C25756 * C972;
    const double C27528 = C25756 * C736;
    const double C27524 = C25756 * C724;
    const double C27520 = C25756 * C731;
    const double C27516 = C25756 * C719;
    const double C28836 = C25756 * C720;
    const double C29062 = C25756 * C394;
    const double C29058 = C25756 * C384;
    const double C29056 = C25756 * C395;
    const double C29052 = C25756 * C383;
    const double C29046 = C25756 * C396;
    const double C29042 = C25756 * C387;
    const double C29825 = C25756 * C975;
    const double C29821 = C25756 * C971;
    const double C29817 = C25756 * C861;
    const double C29815 = C25756 * C851;
    const double C29811 = C25756 * C860;
    const double C29805 = C25756 * C852;
    const double C30043 = C25756 * C3454;
    const double C30039 = C25756 * C3451;
    const double C30191 = C25756 * C1062;
    const double C30187 = C25756 * C1058;
    const double C38792 = C25756 * C853;
    const double C39348 = C25756 * C1061;
    const double C39344 = C25756 * C1057;
    const double C39619 = C25756 * C6204;
    const double C39615 = C25756 * C6201;
    const double C50006 = C50005 / C49981;
    const double C10814 = C10796 * C256;
    const double C10808 = C10790 * C256;
    const double C10802 = C10784 * C256;
    const double C12882 = C11261 * C256;
    const double C12874 = C11263 * C256;
    const double C13062 = C13056 * C256;
    const double C18503 = C11488 * C256;
    const double C18661 = C13640 * C256;
    const double C21274 = C13931 * C256;
    const double C10816 = C10798 * C257;
    const double C10810 = C10792 * C257;
    const double C10804 = C10786 * C257;
    const double C12884 = C11956 * C257;
    const double C12876 = C11954 * C257;
    const double C13064 = C13058 * C257;
    const double C18505 = C13642 * C257;
    const double C18663 = C13638 * C257;
    const double C21276 = C19225 * C257;
    const double C11798 = C11040 * C1280;
    const double C11792 = C10796 * C1280;
    const double C11788 = C10790 * C1280;
    const double C11784 = C10784 * C1280;
    const double C11951 = C11259 * C1280;
    const double C11945 = C11261 * C1280;
    const double C11939 = C11263 * C1280;
    const double C14449 = C11490 * C1280;
    const double C14445 = C11488 * C1280;
    const double C14436 = C13056 * C1280;
    const double C14951 = C13640 * C1280;
    const double C20011 = C13813 * C1280;
    const double C20513 = C13931 * C1280;
    const double C22507 = C19510 * C1280;
    const double C11132 = C11122 + C11123;
    const double C13466 = C11270 + C11271;
    const double C13464 = C11271 + C11270;
    const double C19384 = C13802 + C13801;
    const double C2353 = C2172 * C267;
    const double C2339 = C2173 * C267;
    const double C7958 = C50868 * C267;
    const double C23117 = C51184 * C267;
    const double C23103 = C22937 * C267;
    const double C25924 = C50868 * C267;
    const double C5357 = C2172 * C391;
    const double C5343 = C2173 * C391;
    const double C15860 = C50868 * C391;
    const double C29061 = C50868 * C391;
    const double C32588 = C51184 * C391;
    const double C32574 = C22937 * C391;
    const double C2685 = C2173 * C519;
    const double C2675 = C2172 * C519;
    const double C7980 = C51142 * C519;
    const double C7972 = C50868 * C519;
    const double C10769 = C50863 * C519;
    const double C23449 = C22937 * C519;
    const double C23439 = C51184 * C519;
    const double C25946 = C25751 * C519;
    const double C25938 = C50868 * C519;
    const double C3001 = C2173 * C728;
    const double C3951 = C2172 * C728;
    const double C9585 = C50868 * C728;
    const double C12879 = C50863 * C728;
    const double C23741 = C22937 * C728;
    const double C24667 = C51184 * C728;
    const double C27519 = C50868 * C728;
    const double C28837 = C25751 * C728;
    const double C41422 = C51142 * C728;
    const double C5933 = C2173 * C858;
    const double C5923 = C2172 * C858;
    const double C15882 = C51142 * C858;
    const double C15874 = C50868 * C858;
    const double C18666 = C50863 * C858;
    const double C29808 = C50868 * C858;
    const double C33164 = C22937 * C858;
    const double C33154 = C51184 * C858;
    const double C38793 = C25751 * C858;
    const double C50200 = C50069 * C50197;
    const double C50210 = 2 * C50197;
    const double C50318 = C50317 - C50314;
    const double C50365 = C50364 - C50361;
    const double C2359 = C2172 * C277;
    const double C2345 = C2173 * C277;
    const double C7962 = C50868 * C277;
    const double C23123 = C51184 * C277;
    const double C23109 = C22937 * C277;
    const double C25928 = C50868 * C277;
    const double C5363 = C2172 * C401;
    const double C5349 = C2173 * C401;
    const double C15864 = C50868 * C401;
    const double C29065 = C50868 * C401;
    const double C32594 = C51184 * C401;
    const double C32580 = C22937 * C401;
    const double C2358 = C2177 * C269;
    const double C2344 = C2178 * C269;
    const double C7961 = C49954 * C269;
    const double C23108 = C22942 * C269;
    const double C25927 = C25757 * C269;
    const double C5362 = C2177 * C393;
    const double C5348 = C2178 * C393;
    const double C15863 = C49954 * C393;
    const double C29064 = C25757 * C393;
    const double C32579 = C22942 * C393;
    const double C2692 = C2177 * C523;
    const double C2678 = C2178 * C523;
    const double C7975 = C49954 * C523;
    const double C10770 = C10648 * C523;
    const double C23442 = C22942 * C523;
    const double C25949 = C25756 * C523;
    const double C25941 = C25757 * C523;
    const double C2994 = C2178 * C732;
    const double C3956 = C2177 * C732;
    const double C9588 = C49954 * C732;
    const double C12880 = C10648 * C732;
    const double C23734 = C22942 * C732;
    const double C27522 = C25757 * C732;
    const double C28840 = C25756 * C732;
    const double C5940 = C2177 * C862;
    const double C5926 = C2178 * C862;
    const double C15877 = C49954 * C862;
    const double C18667 = C10648 * C862;
    const double C29819 = C25757 * C862;
    const double C33157 = C22942 * C862;
    const double C38796 = C25756 * C862;
    const double C50183 = C50175 - C50145;
    const double C10807 = C10789 * C253;
    const double C11673 = C10789 * C1171;
    const double C11961 = C11955 * C50887;
    const double C12425 = C11955 * C50887;
    const double C12877 = C11955 * C252;
    const double C14084 = C11955 * C51187;
    const double C11495 = C11489 * C50882;
    const double C13628 = C11489 * C51149;
    const double C14444 = C11489 * C1275;
    const double C18504 = C11489 * C251;
    const double C19662 = C11489 * C51201;
    const double C13067 = C13061 * C253;
    const double C14608 = C13061 * C1171;
    const double C11135 = C11125 + C11124;
    const double C11133 = C11124 + C11125;
    const double C11275 = C11268 + C11269;
    const double C13315 = C11269 + C11268;
    const double C19504 = C13934 + C13933;
    const double C21760 = C13933 + C13934;
    const double C50205 = C50154 + C50202;
    const double C50228 = C50212 / C50070;
    const double C3455 =
        (2 * C50347 * C50659 + C50347 * (C50659 + C50300 * C50281 * C50442)) /
        C49935;
    const double C2823 = C2173 * C613;
    const double C8310 = C50868 * C613;
    const double C10781 = C50863 * C613;
    const double C23575 = C22937 * C613;
    const double C26276 = C50868 * C613;
    const double C3011 = C2173 * C739;
    const double C9593 = C50868 * C739;
    const double C12887 = C50863 * C739;
    const double C23751 = C22937 * C739;
    const double C27527 = C50868 * C739;
    const double C3339 = C2173 * C978;
    const double C17270 = C50868 * C978;
    const double C18508 = C50863 * C978;
    const double C24067 = C22937 * C978;
    const double C29824 = C50868 * C978;
    const double C6217 = C2173 * C1064;
    const double C16456 = C50868 * C1064;
    const double C21279 = C50863 * C1064;
    const double C33436 = C22937 * C1064;
    const double C39347 = C50868 * C1064;
    const double C19233 = C19227 * C50000;
    const double C20009 = C19227 * C1281;
    const double C50204 = C50201 / C49981;
    const double C50234 = C50221 / C49981;
    const double C50227 = C50211 / C50070;
    const double C3959 = C2173 * C745;
    const double C24675 = C22937 * C745;
    const double C28843 = C50868 * C745;
    const double C41428 = C50868 * C745;
    const double C3452 =
        (-2 * C50347 * C50653) / C49981 -
        (C50347 * (C50300 * C50280 * C50442 + C50653)) / C49981;
    const double C2828 = C2178 * C609;
    const double C8321 = C49954 * C609;
    const double C10782 = C10648 * C609;
    const double C23580 = C22942 * C609;
    const double C26287 = C25757 * C609;
    const double C3016 = C2178 * C735;
    const double C9596 = C49954 * C735;
    const double C12888 = C10648 * C735;
    const double C23756 = C22942 * C735;
    const double C27530 = C25757 * C735;
    const double C3344 = C2178 * C974;
    const double C17273 = C49954 * C974;
    const double C18509 = C10648 * C974;
    const double C24072 = C22942 * C974;
    const double C29827 = C25757 * C974;
    const double C6222 = C2178 * C1060;
    const double C16467 = C49954 * C1060;
    const double C21280 = C10648 * C1060;
    const double C33441 = C22942 * C1060;
    const double C39350 = C25757 * C1060;
    const double C50260 = C50252 - C50214;
    const double C50338 = C50336 / C49935;
    const double C50385 = C50383 / C49935;
    const double C13651 = C13643 * C50887;
    const double C14446 = C13643 * C50887;
    const double C18506 = C13643 * C252;
    const double C19664 = C13643 * C51187;
    const double C13818 = C13814 * C50882;
    const double C19219 = C13814 * C51149;
    const double C20010 = C13814 * C1275;
    const double C50402 = C50401 - C50145;
    const double C50449 = C50448 - C50145;
    const double C50287 = C50226 + C50284;
    const double C50286 = C50283 / C49981;
    const double C50473 = C50472 / C49935;
    const double C50417 = C50415 - C50214;
    const double C50464 = C50462 - C50214;
    const double C50344 = C50069 * C50343;
    const double C50499 = C50498 - C50495;
    const double C50391 = C50069 * C50390;
    const double C49961 = C49960 - C49950;
    const double C2377 = C2356 + C2357;
    const double C2374 = C2350 + C2351;
    const double C2373 = C2348 + C2349;
    const double C2370 = C2342 + C2343;
    const double C2365 = C2332 + C2333;
    const double C2362 = C2326 + C2327;
    const double C2705 = C2690 + C2691;
    const double C2704 = C2688 + C2689;
    const double C2701 = C2682 + C2683;
    const double C2696 = C2672 + C2673;
    const double C2833 = C2824 + C2825;
    const double C2830 = C2818 + C2819;
    const double C3027 = C3012 + C3013;
    const double C3024 = C3006 + C3007;
    const double C3023 = C3004 + C3005;
    const double C3020 = C2998 + C2999;
    const double C3349 = C3340 + C3341;
    const double C3346 = C3334 + C3335;
    const double C3963 = C3954 + C3955;
    const double C3960 = C3948 + C3949;
    const double C5381 = C5360 + C5361;
    const double C5378 = C5354 + C5355;
    const double C5377 = C5352 + C5353;
    const double C5374 = C5346 + C5347;
    const double C5369 = C5336 + C5337;
    const double C5366 = C5330 + C5331;
    const double C5953 = C5938 + C5939;
    const double C5952 = C5936 + C5937;
    const double C5949 = C5930 + C5931;
    const double C5944 = C5920 + C5921;
    const double C6227 = C6218 + C6219;
    const double C6224 = C6212 + C6213;
    const double C2372 = C2346 + C2347;
    const double C2369 = C2340 + C2341;
    const double C2366 = C2334 + C2335;
    const double C2363 = C2328 + C2329;
    const double C2703 = C2686 + C2687;
    const double C2700 = C2680 + C2681;
    const double C2831 = C2820 + C2821;
    const double C3025 = C3008 + C3009;
    const double C3022 = C3002 + C3003;
    const double C3019 = C2996 + C2997;
    const double C3350 = C3342 + C3343;
    const double C3347 = C3336 + C3337;
    const double C5376 = C5350 + C5351;
    const double C5373 = C5344 + C5345;
    const double C5370 = C5338 + C5339;
    const double C5367 = C5332 + C5333;
    const double C5951 = C5934 + C5935;
    const double C5948 = C5928 + C5929;
    const double C6225 = C6214 + C6215;
    const double C25972 = C25943 + C25944;
    const double C25970 = C25939 + C25940;
    const double C25967 = C25933 + C25934;
    const double C25965 = C25929 + C25930;
    const double C25963 = C25925 + C25926;
    const double C25961 = C25921 + C25922;
    const double C25960 = C25919 + C25920;
    const double C25958 = C25915 + C25916;
    const double C25955 = C25909 + C25910;
    const double C25953 = C25905 + C25906;
    const double C26298 = C26283 + C26284;
    const double C26296 = C26279 + C26280;
    const double C26293 = C26273 + C26274;
    const double C26417 = C26406 + C26407;
    const double C26600 = C26584 + C26585;
    const double C26599 = C26582 + C26583;
    const double C26597 = C26578 + C26579;
    const double C26595 = C26574 + C26575;
    const double C26593 = C26570 + C26571;
    const double C26921 = C26909 + C26910;
    const double C26919 = C26905 + C26906;
    const double C26917 = C26901 + C26902;
    const double C27536 = C27524 + C27525;
    const double C27534 = C27520 + C27521;
    const double C27532 = C27516 + C27517;
    const double C29076 = C29062 + C29063;
    const double C29074 = C29058 + C29059;
    const double C29073 = C29056 + C29057;
    const double C29071 = C29052 + C29053;
    const double C29068 = C29046 + C29047;
    const double C29066 = C29042 + C29043;
    const double C29839 = C29825 + C29826;
    const double C29837 = C29821 + C29822;
    const double C29835 = C29817 + C29818;
    const double C29834 = C29815 + C29816;
    const double C29832 = C29811 + C29812;
    const double C29829 = C29805 + C29806;
    const double C30053 = C30043 + C30044;
    const double C30051 = C30039 + C30040;
    const double C30197 = C30191 + C30192;
    const double C30195 = C30187 + C30188;
    const double C39356 = C39344 + C39345;
    const double C39625 = C39615 + C39616;
    const double C50007 = C50006 - C49996;
    const double C11801 = C11792 + C11793;
    const double C11800 = C11788 + C11789;
    const double C14239 = C11945 + C11944;
    const double C14442 = C11944 + C11945;
    const double C14441 = C11938 + C11939;
    const double C14440 = C11939 + C11938;
    const double C20509 = C14951 + C14950;
    const double C22504 = C20513 + C20512;
    const double C19394 = C19384 * C51170;
    const double C21759 = C19384 * C51027;
    const double C48356 = C19384 * C22938;
    const double C2375 = C2352 + C2353;
    const double C2368 = C2338 + C2339;
    const double C7996 = C7957 + C7958;
    const double C23132 = C23102 + C23103;
    const double C25962 = C25923 + C25924;
    const double C5379 = C5356 + C5357;
    const double C5372 = C5342 + C5343;
    const double C15898 = C15859 + C15860;
    const double C29075 = C29060 + C29061;
    const double C32603 = C32573 + C32574;
    const double C2702 = C2684 + C2685;
    const double C2697 = C2674 + C2675;
    const double C8003 = C7971 + C7972;
    const double C10794 = C10768 + C10769;
    const double C23466 = C23448 + C23449;
    const double C25973 = C25945 + C25946;
    const double C25969 = C25937 + C25938;
    const double C3021 = C3000 + C3001;
    const double C3961 = C3950 + C3951;
    const double C9599 = C9584 + C9585;
    const double C12890 = C12878 + C12879;
    const double C23761 = C23740 + C23741;
    const double C27533 = C27518 + C27519;
    const double C28844 = C28836 + C28837;
    const double C5950 = C5932 + C5933;
    const double C5945 = C5922 + C5923;
    const double C15905 = C15873 + C15874;
    const double C18669 = C18665 + C18666;
    const double C29830 = C29807 + C29808;
    const double C33181 = C33163 + C33164;
    const double C38800 = C38792 + C38793;
    const double C2378 = C2358 + C2359;
    const double C2371 = C2344 + C2345;
    const double C7998 = C7961 + C7962;
    const double C23135 = C23108 + C23109;
    const double C25964 = C25927 + C25928;
    const double C5382 = C5362 + C5363;
    const double C5375 = C5348 + C5349;
    const double C15900 = C15863 + C15864;
    const double C29077 = C29064 + C29065;
    const double C32606 = C32579 + C32580;
    const double C2706 = C2692 + C2693;
    const double C2699 = C2678 + C2679;
    const double C8005 = C7975 + C7976;
    const double C10795 = C10770 + C10771;
    const double C23463 = C23442 + C23443;
    const double C25975 = C25949 + C25950;
    const double C25971 = C25941 + C25942;
    const double C3018 = C2994 + C2995;
    const double C3964 = C3956 + C3957;
    const double C9601 = C9588 + C9589;
    const double C12891 = C12880 + C12881;
    const double C23758 = C23734 + C23735;
    const double C27535 = C27522 + C27523;
    const double C28846 = C28840 + C28841;
    const double C5954 = C5940 + C5941;
    const double C5947 = C5926 + C5927;
    const double C15907 = C15877 + C15878;
    const double C18670 = C18667 + C18668;
    const double C29836 = C29819 + C29820;
    const double C33178 = C33157 + C33158;
    const double C38802 = C38796 + C38797;
    const double C50190 = C50183 - C50156;
    const double C13803 = C11494 + C11495;
    const double C13800 = C11495 + C11494;
    const double C20008 = C14444 + C14445;
    const double C20007 = C14445 + C14444;
    const double C19509 = C19504 * C51170;
    const double C21835 = C19504 * C51027;
    const double C48461 = C19504 * C22938;
    const double C21763 = C21760 * C51027;
    const double C50207 = C50205 + C50182;
    const double C2832 = C2822 + C2823;
    const double C8328 = C8309 + C8310;
    const double C10800 = C10780 + C10781;
    const double C23584 = C23574 + C23575;
    const double C26294 = C26275 + C26276;
    const double C3026 = C3010 + C3011;
    const double C9603 = C9592 + C9593;
    const double C12892 = C12886 + C12887;
    const double C23766 = C23750 + C23751;
    const double C27537 = C27526 + C27527;
    const double C3348 = C3338 + C3339;
    const double C17276 = C17269 + C17270;
    const double C18511 = C18507 + C18508;
    const double C24076 = C24066 + C24067;
    const double C29838 = C29823 + C29824;
    const double C6226 = C6216 + C6217;
    const double C16474 = C16455 + C16456;
    const double C21282 = C21278 + C21279;
    const double C33445 = C33435 + C33436;
    const double C39357 = C39346 + C39347;
    const double C50206 = C50160 - C50204;
    const double C50242 = C50210 - C50227;
    const double C50267 = C50260 - C50230;
    const double C50340 = C50338 - C50321;
    const double C50387 = C50385 - C50368;
    const double C19387 = C13817 + C13818;
    const double C19386 = C13818 + C13817;
    const double C530 =
        2 * ((-((C50097 + C50124 * C50395) * ce) / C49981) / C49935 -
             (ae * (C50121 * C50395 + C50096)) / C50070 + C50069 * C50402) -
        (ae * (C50198 * C50395 + C50141)) / C50070 -
        ((C50142 + C50199 * C50395) * ce) / C50070 +
        C50069 *
            (C50402 - (ae * (C50186 * C50395 + C50132)) / C50070 -
             ((C50133 + C50189 * C50395) * ce) / C50070 +
             C50069 *
                 ((-((C50124 + C50173 * C50395) * ce) / C49981) / C49935 -
                  (ae * (C50170 * C50395 + C50121)) / C50070 +
                  C50069 * ((-(C50262 * C50395) / C49981) / C49935 - C50214)));
    const double C618 =
        (((-2 * C50300 * C50096) / C49981 -
          (C50300 * (C50121 * C50395 + C50096)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50300 * C50097 + C50300 * (C50097 + C50124 * C50395)) * ce) /
            C50070 +
        C50069 * ((-2 * C50301) / C50070 + C50300 * C50402);
    const double C748 =
        (-(C50347 * (C50097 + C50124 * C50395) * ce) / C49981) / C49935 -
        (ae * C50347 * (C50121 * C50395 + C50096)) / C50070 +
        C50069 * C50347 * C50402;
    const double C2816 =
        3 * ((-(C50131 * C50395) / C49981) / C49935 - C50101 / C50070) +
        C50300 * ((-2 * C50301) / C50070 + C50300 * C50402);
    const double C2992 = C50347 * ((-2 * C50301) / C50070 + C50300 * C50402);
    const double C3332 = (-(C50131 * C50395) / C49981) / C49935 -
                         C50101 / C50070 + C50402 * C50442;
    const double C869 =
        2 * ((-((C50097 + C50124 * C50442) * ce) / C49981) / C49935 -
             (ae * (C50121 * C50442 + C50096)) / C50070 + C50069 * C50449) -
        (ae * (C50198 * C50442 + C50141)) / C50070 -
        ((C50142 + C50199 * C50442) * ce) / C50070 +
        C50069 *
            (C50449 - (ae * (C50186 * C50442 + C50132)) / C50070 -
             ((C50133 + C50189 * C50442) * ce) / C50070 +
             C50069 *
                 ((-((C50124 + C50173 * C50442) * ce) / C49981) / C49935 -
                  (ae * (C50170 * C50442 + C50121)) / C50070 +
                  C50069 * ((-(C50262 * C50442) / C49981) / C49935 - C50214)));
    const double C1069 =
        (((-2 * C50347 * C50096) / C49981 -
          (C50347 * (C50121 * C50442 + C50096)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50097 + C50347 * (C50097 + C50124 * C50442)) * ce) /
            C50070 +
        C50069 * ((-2 * C50348) / C50070 + C50347 * C50449);
    const double C6210 =
        3 * ((-(C50131 * C50442) / C49981) / C49935 - C50101 / C50070) +
        C50347 * ((-2 * C50348) / C50070 + C50347 * C50449);
    const double C50290 = C50287 + C50259;
    const double C50289 = C50235 - C50286;
    const double C50474 = C50473 - C50321;
    const double C50419 = C50069 * C50417;
    const double C50424 = C50300 * C50417;
    const double C50436 = C50347 * C50417;
    const double C3330 =
        C50402 + C50417 * C50442 -
        (ae *
         ((C50263 * C50395 + C50186) * C50442 + C50186 * C50395 + C50132)) /
            C50070 -
        ((C50133 + C50189 * C50395 + (C50189 + C50266 * C50395) * C50442) *
         ce) /
            C50070 +
        C50069 *
            ((-((C50407 + (C50173 + C50249 * C50395) * C50442) * ce) / C49981) /
                 C49935 -
             (ae * ((C50246 * C50395 + C50170) * C50442 + C50408)) / C50070 +
             C50069 *
                 (C50417 +
                  ((-((C50219 * C50220 + C50077 * bs[8] * std::pow(C50067, 8)) *
                      C50078 * C50395) /
                    C49981) /
                       C49935 -
                   C50262 / C50070) *
                      C50442));
    const double C3331 =
        (-((C50097 + C50124 * C50395 + C50407 * C50442) * ce) / C49981) /
            C49935 -
        (ae * (C50408 * C50442 + C50121 * C50395 + C50096)) / C50070 +
        C50069 * (C50402 + C50417 * C50442);
    const double C8615 =
        (C50347 *
         ((-3 * C50408) / C49981 +
          C50300 * ((-2 * C50324) / C49981 -
                    (C50300 * (C50246 * C50395 + C50170)) / C49981)) *
         ae) /
            C49935 -
        (C50347 *
         (3 * C50407 +
          C50300 * (2 * C50323 + C50300 * (C50173 + C50249 * C50395))) *
         ce) /
            C50070 +
        C50069 * C50347 *
            (3 * C50417 +
             C50300 * ((-2 * C50325) / C50070 +
                       C50300 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50395) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070)));
    const double C9087 =
        2 * C50347 * C50402 + C50347 * (C50402 + C50417 * C50442);
    const double C50466 = C50069 * C50464;
    const double C50480 = C50347 * C50464;
    const double C7983 = C49961 * C523;
    const double C7979 = C49961 * C514;
    const double C7977 = C49961 * C522;
    const double C7973 = C49961 * C513;
    const double C7967 = C49961 * C521;
    const double C7963 = C49961 * C512;
    const double C7959 = C49961 * C270;
    const double C7955 = C49961 * C260;
    const double C7953 = C49961 * C271;
    const double C7949 = C49961 * C259;
    const double C7943 = C49961 * C272;
    const double C7939 = C49961 * C263;
    const double C8319 = C49961 * C610;
    const double C8317 = C49961 * C607;
    const double C8313 = C49961 * C611;
    const double C8307 = C49961 * C606;
    const double C8452 = C49961 * C2810;
    const double C8448 = C49961 * C2807;
    const double C8638 = C49961 * C2986;
    const double C8634 = C49961 * C2983;
    const double C8632 = C49961 * C718;
    const double C8628 = C49961 * C730;
    const double C8624 = C49961 * C725;
    const double C8620 = C49961 * C737;
    const double C8971 = C49961 * C3326;
    const double C8967 = C49961 * C3323;
    const double C8963 = C49961 * C976;
    const double C8959 = C49961 * C972;
    const double C9594 = C49961 * C736;
    const double C9590 = C49961 * C724;
    const double C9586 = C49961 * C731;
    const double C9582 = C49961 * C719;
    const double C15885 = C49961 * C862;
    const double C15881 = C49961 * C853;
    const double C15879 = C49961 * C861;
    const double C15875 = C49961 * C852;
    const double C15869 = C49961 * C860;
    const double C15865 = C49961 * C851;
    const double C15861 = C49961 * C394;
    const double C15857 = C49961 * C384;
    const double C15855 = C49961 * C395;
    const double C15851 = C49961 * C383;
    const double C15845 = C49961 * C396;
    const double C15841 = C49961 * C387;
    const double C16465 = C49961 * C1061;
    const double C16463 = C49961 * C1058;
    const double C16459 = C49961 * C1062;
    const double C16453 = C49961 * C1057;
    const double C16641 = C49961 * C3454;
    const double C16637 = C49961 * C3451;
    const double C16769 = C49961 * C6204;
    const double C16765 = C49961 * C6201;
    const double C17271 = C49961 * C975;
    const double C17267 = C49961 * C971;
    const double C41425 = C49961 * C732;
    const double C41421 = C49961 * C720;
    const double C117 =
        ((((0 - (C49933 * C49934) / C49935) * ae) / C49935 - (0 * be) / C49944 +
          C49936 / C49935) /
             C49940 -
         ((C49933 * C49957 + 0) * be) / C49935) /
            C49940 -
        ((C49933 * (C49957 / C49940 -
                    ((C49933 * C49961 + C51142) * be) / C49935 + C49954) +
          C51200) *
         be) /
            C49935 +
        C49961 / C49940 - ((C49933 * C49954 + C50868) * be) / C49935;
    const double C118 =
        (C49957 / C49940 - ((C49933 * C49961 + C51142) * be) / C49935 +
         C49954) /
            C49940 -
        ((C49933 *
              (C49961 / C49940 - ((C49933 * C49954 + C50868) * be) / C49935) +
          C51184) *
         be) /
            C49935 +
        2 * (C49954 / C49940 - (0 * be) / C49935);
    const double C119 =
        (C49961 / C49940 - ((C49933 * C49954 + C50868) * be) / C49935) /
            C49940 -
        ((C49933 * (C49954 / C49940 - (0 * be) / C49935) + C22937) * be) /
            C49935;
    const double C22940 =
        C49957 / C49940 - ((C49933 * C49961 + C51142) * be) / C49935 + C49954;
    const double C22941 =
        C49961 / C49940 - ((C49933 * C49954 + C50868) * be) / C49935;
    const double C26270 = C25967 + C25968;
    const double C26269 = C25965 + C25966;
    const double C26405 = C26297 + C26298;
    const double C29599 = C26598 + C26599;
    const double C29596 = C26599 + C26598;
    const double C29598 = C26596 + C26597;
    const double C29597 = C26597 + C26596;
    const double C26605 = C26594 + C26595;
    const double C29600 = C26595 + C26594;
    const double C30038 = C26919 + C26920;
    const double C30035 = C26920 + C26919;
    const double C30037 = C26917 + C26918;
    const double C30036 = C26918 + C26917;
    const double C39340 = C29834 + C29833;
    const double C39341 = C29832 + C29831;
    const double C39614 = C30196 + C30195;
    const double C11024 = C10796 * C50007;
    const double C11020 = C10790 * C50007;
    const double C11016 = C10784 * C50007;
    const double C11046 = C11040 * C50007;
    const double C12432 = C11259 * C50007;
    const double C12428 = C11261 * C50007;
    const double C12424 = C11263 * C50007;
    const double C13635 = C11490 * C50007;
    const double C13629 = C11488 * C50007;
    const double C13614 = C13056 * C50007;
    const double C13648 = C13640 * C50007;
    const double C19220 = C13813 * C50007;
    const double C19214 = C13931 * C50007;
    const double C21651 = C19510 * C50007;
    const double C121 =
        ((((0 - (C49979 * C49980) / C49981) * ce) / C49981 - (0 * de) / C49990 +
          C49982 / C49981) /
             C49986 -
         ((C49979 * C50003 + 0) * de) / C49981) /
            C49986 -
        ((C49979 * (C50003 / C49986 -
                    ((C49979 * C50007 + C51149) * de) / C49981 + C50000) +
          C51201) *
         de) /
            C49981 +
        C50007 / C49986 - ((C49979 * C50000 + C50887) * de) / C49981;
    const double C122 =
        (C50003 / C49986 - ((C49979 * C50007 + C51149) * de) / C49981 +
         C50000) /
            C49986 -
        ((C49979 *
              (C50007 / C49986 - ((C49979 * C50000 + C50887) * de) / C49981) +
          C51187) *
         de) /
            C49981 +
        2 * (C50000 / C49986 - (0 * de) / C49981);
    const double C123 =
        (C50007 / C49986 - ((C49979 * C50000 + C50887) * de) / C49981) /
            C49986 -
        ((C49979 * (C50000 / C49986 - (0 * de) / C49981) + C1171) * de) /
            C49981;
    const double C1174 =
        C50003 / C49986 - ((C49979 * C50007 + C51149) * de) / C49981 + C50000;
    const double C1175 =
        C50007 / C49986 - ((C49979 * C50000 + C50887) * de) / C49981;
    const double C11803 = C11801 - C11794;
    const double C11802 = C11800 - C11790;
    const double C14240 = C14239 - C11962;
    const double C14453 = C11962 - C14442;
    const double C14452 = C11960 - C14441;
    const double C14451 = C14440 - C11960;
    const double C20515 = C20509 - C14949;
    const double C22509 = C22504 - C20511;
    const double C10812 = C10794 * C258;
    const double C11678 = C10794 * C1176;
    const double C26271 = C25969 + C25970;
    const double C12894 = C12890 * C258;
    const double C14085 = C12890 * C1176;
    const double C30849 = C27532 + C27533;
    const double C30847 = C27533 + C27532;
    const double C18671 = C18669 * C258;
    const double C20167 = C18669 * C1176;
    const double C39342 = C29830 + C29829;
    const double C10813 = C10795 * C253;
    const double C11679 = C10795 * C1171;
    const double C26272 = C25971 + C25972;
    const double C12895 = C12891 * C253;
    const double C14086 = C12891 * C1171;
    const double C30852 = C27534 + C27535;
    const double C30848 = C27535 + C27534;
    const double C18672 = C18670 * C253;
    const double C20168 = C18670 * C1171;
    const double C39343 = C29836 + C29835;
    const double C50203 = C50190 + C50200;
    const double C19385 = C13803 * C51041;
    const double C48357 = C13803 * C51041;
    const double C19393 = C13800 * C51170;
    const double C21762 = C13800 * C51027;
    const double C48359 = C13800 * C22938;
    const double C20014 = C14443 - C20008;
    const double C20013 = C20007 - C14443;
    const double C142 = (4 * (2 * C50103 + C50069 * C50142 + C50123 * ae) +
                         C50069 * (3 * C50142 + C50069 * C50207 + C50188 * ae) +
                         (3 * C50123 + C50069 * C50188) * ae) /
                        C49935;
    const double C268 =
        (C50300 * (3 * C50142 + C50069 * C50207 + C50188 * ae)) / C49935;
    const double C392 =
        (C50347 * (3 * C50142 + C50069 * C50207 + C50188 * ae)) / C49935;
    const double C520 =
        (2 * C50103 + C50069 * C50142 + C50123 * ae + C50207 * C50395) / C49935;
    const double C729 = (C50347 * C50300 * C50207) / C49935;
    const double C859 =
        (2 * C50103 + C50069 * C50142 + C50123 * ae + C50207 * C50442) / C49935;
    const double C10818 = C10800 * C258;
    const double C11684 = C10800 * C1176;
    const double C12896 = C12892 * C258;
    const double C14091 = C12892 * C1176;
    const double C18513 = C18511 * C258;
    const double C19665 = C18511 * C1176;
    const double C21284 = C21282 * C258;
    const double C22273 = C21282 * C1176;
    const double C50208 = C50206 - C50187;
    const double C50251 = C50242 - C50228;
    const double C50285 = C50267 + C50282;
    const double C50342 = C50340 - C50332;
    const double C50389 = C50387 - C50379;
    const double C19503 = C19386 * C51041;
    const double C21761 = C19386 * C51027;
    const double C48460 = C19386 * C51041;
    const double C2695 = C2173 * C530;
    const double C7986 = C50868 * C530;
    const double C23459 = C22937 * C530;
    const double C25952 = C50868 * C530;
    const double C2827 = C2172 * C618;
    const double C8320 = C51142 * C618;
    const double C8312 = C50868 * C618;
    const double C10779 = C50863 * C618;
    const double C23579 = C51184 * C618;
    const double C26286 = C25751 * C618;
    const double C26278 = C50868 * C618;
    const double C3015 = C2172 * C748;
    const double C8619 = C50868 * C748;
    const double C9595 = C51142 * C748;
    const double C11947 = C50863 * C748;
    const double C23755 = C51184 * C748;
    const double C26569 = C50868 * C748;
    const double C27529 = C25751 * C748;
    const double C8453 = C51142 * C2816;
    const double C11031 = C50863 * C2816;
    const double C26411 = C25751 * C2816;
    const double C8639 = C51142 * C2992;
    const double C11243 = C50863 * C2992;
    const double C26589 = C25751 * C2992;
    const double C8972 = C51142 * C3332;
    const double C11483 = C50863 * C3332;
    const double C26914 = C25751 * C3332;
    const double C5943 = C2173 * C869;
    const double C15888 = C50868 * C869;
    const double C33174 = C22937 * C869;
    const double C38799 = C50868 * C869;
    const double C6221 = C2172 * C1069;
    const double C16466 = C51142 * C1069;
    const double C16458 = C50868 * C1069;
    const double C19216 = C50863 * C1069;
    const double C30194 = C50868 * C1069;
    const double C33440 = C51184 * C1069;
    const double C39349 = C25751 * C1069;
    const double C16770 = C51142 * C6210;
    const double C19508 = C50863 * C6210;
    const double C39620 = C25751 * C6210;
    const double C50293 = C50069 * C50290;
    const double C612 =
        (2 * C50300 * C50207 + C50300 * (C50207 + C50290 * C50395)) / C49935;
    const double C738 = (C50347 * (C50207 + C50290 * C50395)) / C49935;
    const double C977 = (C50300 * C50207 + C50300 * C50290 * C50442) / C49935;
    const double C1063 =
        (2 * C50347 * C50207 + C50347 * (C50207 + C50290 * C50442)) / C49935;
    const double C50292 = C50289 - C50264;
    const double C981 =
        2 * ((-((C50306 + C50323 * C50442) * ce) / C49981) / C49935 -
             (ae * (C50324 * C50442 + C50307)) / C50070 + C50069 * C50474) -
        (ae * (C50300 * C50280 * C50442 + C50300 * C50198)) / C50070 -
        ((C50300 * C50199 + C50300 * C50281 * C50442) * ce) / C50070 +
        C50069 *
            (C50474 - (ae * (C50300 * C50263 * C50442 + C50320)) / C50070 -
             ((C50322 + C50300 * C50266 * C50442) * ce) / C50070 +
             C50069 * ((-((C50323 + C50300 * C50249 * C50442) * ce) / C49981) /
                           C49935 -
                       (ae * (C50300 * C50246 * C50442 + C50324)) / C50070 +
                       C50069 * ((-(C50300 *
                                    (C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50442) /
                                  C49981) /
                                     C49935 -
                                 C50325 / C50070)));
    const double C982 =
        (-(C50308 * C50442) / C49981) / C49935 - C50301 / C50070 -
        (ae * (C50320 * C50442 + C50300 * C50132)) / C50070 -
        ((C50300 * C50133 + C50322 * C50442) * ce) / C50070 +
        C50069 * ((-((C50306 + C50323 * C50442) * ce) / C49981) / C49935 -
                  (ae * (C50324 * C50442 + C50307)) / C50070 + C50069 * C50474);
    const double C3458 =
        (-2 * C50434) / C50070 + C50347 * C50474 +
        (((-2 * C50347 * C50320) / C49981 -
          (C50347 * (C50300 * C50263 * C50442 + C50320)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50322 + C50347 * (C50322 + C50300 * C50266 * C50442)) *
         ce) /
            C50070 +
        C50069 *
            ((((-2 * C50488) / C49981 -
               (C50347 * (C50300 * C50246 * C50442 + C50324)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50487 + C50347 * (C50323 + C50300 * C50249 * C50442)) *
              ce) /
                 C50070 +
             C50069 * ((-2 * C50489) / C50070 +
                       C50347 * ((-(C50300 *
                                    (C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50442) /
                                  C49981) /
                                     C49935 -
                                 C50325 / C50070)));
    const double C3459 =
        (((-2 * C50347 * C50307) / C49981 -
          (C50347 * (C50324 * C50442 + C50307)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50306 + C50347 * (C50306 + C50323 * C50442)) * ce) /
            C50070 +
        C50069 * ((-2 * C50434) / C50070 + C50347 * C50474);
    const double C13925 =
        3 * ((-(C50308 * C50442) / C49981) / C49935 - C50301 / C50070) +
        C50347 * ((-2 * C50434) / C50070 + C50347 * C50474);
    const double C16633 =
        (((-3 * (C50324 * C50442 + C50307)) / C49981 +
          C50347 * ((-2 * C50488) / C49981 -
                    (C50347 * (C50300 * C50246 * C50442 + C50324)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50306 + C50323 * C50442) +
          C50347 *
              (2 * C50487 + C50347 * (C50323 + C50300 * C50249 * C50442))) *
         ce) /
            C50070 +
        C50069 *
            (3 * C50474 +
             C50347 * ((-2 * C50489) / C50070 +
                       C50347 * ((-(C50300 *
                                    (C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50442) /
                                  C49981) /
                                     C49935 -
                                 C50325 / C50070)));
    const double C19501 =
        4 * ((-2 * C50434) / C50070 + C50347 * C50474) +
        C50347 *
            (3 * C50474 +
             C50347 * ((-2 * C50489) / C50070 +
                       C50347 * ((-(C50300 *
                                    (C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50442) /
                                  C49981) /
                                     C49935 -
                                 C50325 / C50070)));
    const double C50421 = C50420 + C50419;
    const double C50426 = C50425 + C50424;
    const double C746 =
        2 * ((-(C50347 * C50407 * ce) / C49981) / C49935 -
             (ae * C50347 * C50408) / C50070 + C50069 * C50436) -
        (ae * C50347 * (C50280 * C50395 + C50198)) / C50070 -
        (C50347 * (C50199 + C50281 * C50395) * ce) / C50070 +
        C50069 *
            (C50436 - (ae * C50347 * (C50263 * C50395 + C50186)) / C50070 -
             (C50347 * (C50189 + C50266 * C50395) * ce) / C50070 +
             C50069 * ((-(C50347 * (C50173 + C50249 * C50395) * ce) / C49981) /
                           C49935 -
                       (ae * C50347 * (C50246 * C50395 + C50170)) / C50070 +
                       C50069 * C50347 *
                           ((-((C50219 * C50220 +
                                C50077 * bs[8] * std::pow(C50067, 8)) *
                               C50078 * C50395) /
                             C49981) /
                                C49935 -
                            C50262 / C50070)));
    const double C747 =
        C50347 * C50402 - (ae * C50347 * (C50186 * C50395 + C50132)) / C50070 -
        (C50347 * (C50133 + C50189 * C50395) * ce) / C50070 +
        C50069 * ((-(C50347 * C50407 * ce) / C49981) / C49935 -
                  (ae * C50347 * C50408) / C50070 + C50069 * C50436);
    const double C9086 =
        (((-2 * C50347 * C50408) / C49981 -
          (C50347 * ((C50246 * C50395 + C50170) * C50442 + C50408)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50407 +
          C50347 * (C50407 + (C50173 + C50249 * C50395) * C50442)) *
         ce) /
            C50070 +
        C50069 *
            (2 * C50436 +
             C50347 *
                 (C50417 +
                  ((-((C50219 * C50220 + C50077 * bs[8] * std::pow(C50067, 8)) *
                      C50078 * C50395) /
                    C49981) /
                       C49935 -
                   C50262 / C50070) *
                      C50442));
    const double C13924 =
        3 * (C50402 + C50417 * C50442) +
        C50347 *
            (2 * C50436 +
             C50347 *
                 (C50417 +
                  ((-((C50219 * C50220 + C50077 * bs[8] * std::pow(C50067, 8)) *
                      C50078 * C50395) /
                    C49981) /
                       C49935 -
                   C50262 / C50070) *
                      C50442));
    const double C8974 = C50868 * C3331;
    const double C13637 = C50863 * C3331;
    const double C26916 = C50868 * C3331;
    const double C13812 = C50863 * C9087;
    const double C50468 = C50467 + C50466;
    const double C50482 = C50481 + C50480;
    const double C8009 = C7983 + C7984;
    const double C8007 = C7979 + C7980;
    const double C8006 = C7977 + C7978;
    const double C8004 = C7973 + C7974;
    const double C8001 = C7967 + C7968;
    const double C7999 = C7963 + C7964;
    const double C7997 = C7959 + C7960;
    const double C7995 = C7955 + C7956;
    const double C7994 = C7953 + C7954;
    const double C7992 = C7949 + C7950;
    const double C7989 = C7943 + C7944;
    const double C7987 = C7939 + C7940;
    const double C8332 = C8317 + C8318;
    const double C8330 = C8313 + C8314;
    const double C8327 = C8307 + C8308;
    const double C8459 = C8448 + C8449;
    const double C8650 = C8634 + C8635;
    const double C8649 = C8632 + C8633;
    const double C8647 = C8628 + C8629;
    const double C8645 = C8624 + C8625;
    const double C8643 = C8620 + C8621;
    const double C8979 = C8967 + C8968;
    const double C8977 = C8963 + C8964;
    const double C8975 = C8959 + C8960;
    const double C9602 = C9590 + C9591;
    const double C9600 = C9586 + C9587;
    const double C9598 = C9582 + C9583;
    const double C15911 = C15885 + C15886;
    const double C15909 = C15881 + C15882;
    const double C15908 = C15879 + C15880;
    const double C15906 = C15875 + C15876;
    const double C15903 = C15869 + C15870;
    const double C15901 = C15865 + C15866;
    const double C15899 = C15861 + C15862;
    const double C15897 = C15857 + C15858;
    const double C15896 = C15855 + C15856;
    const double C15894 = C15851 + C15852;
    const double C15891 = C15845 + C15846;
    const double C15889 = C15841 + C15842;
    const double C16478 = C16463 + C16464;
    const double C16476 = C16459 + C16460;
    const double C16473 = C16453 + C16454;
    const double C16650 = C16641 + C16642;
    const double C16648 = C16637 + C16638;
    const double C16775 = C16765 + C16766;
    const double C17277 = C17271 + C17272;
    const double C17275 = C17267 + C17268;
    const double C41431 = C41425 + C41426;
    const double C41429 = C41421 + C41422;
    const double C23120 = C22940 * C270;
    const double C23114 = C22940 * C260;
    const double C23112 = C22940 * C271;
    const double C23106 = C22940 * C259;
    const double C23096 = C22940 * C272;
    const double C23090 = C22940 * C263;
    const double C23454 = C22940 * C522;
    const double C23452 = C22940 * C512;
    const double C23446 = C22940 * C521;
    const double C23436 = C22940 * C513;
    const double C23576 = C22940 * C611;
    const double C23570 = C22940 * C607;
    const double C23752 = C22940 * C737;
    const double C23746 = C22940 * C725;
    const double C23744 = C22940 * C718;
    const double C23738 = C22940 * C730;
    const double C24068 = C22940 * C976;
    const double C24062 = C22940 * C972;
    const double C24670 = C22940 * C731;
    const double C24664 = C22940 * C719;
    const double C32591 = C22940 * C394;
    const double C32585 = C22940 * C384;
    const double C32583 = C22940 * C395;
    const double C32577 = C22940 * C383;
    const double C32567 = C22940 * C396;
    const double C32561 = C22940 * C387;
    const double C33169 = C22940 * C861;
    const double C33167 = C22940 * C851;
    const double C33161 = C22940 * C860;
    const double C33151 = C22940 * C852;
    const double C33437 = C22940 * C1062;
    const double C33431 = C22940 * C1058;
    const double C23122 = C22941 * C269;
    const double C23116 = C22941 * C261;
    const double C23110 = C22941 * C270;
    const double C23104 = C22941 * C260;
    const double C23098 = C22941 * C271;
    const double C23092 = C22941 * C259;
    const double C23456 = C22941 * C523;
    const double C23450 = C22941 * C513;
    const double C23444 = C22941 * C522;
    const double C23438 = C22941 * C514;
    const double C23578 = C22941 * C610;
    const double C23572 = C22941 * C606;
    const double C23754 = C22941 * C736;
    const double C23748 = C22941 * C724;
    const double C23742 = C22941 * C719;
    const double C23736 = C22941 * C731;
    const double C24070 = C22941 * C975;
    const double C24064 = C22941 * C971;
    const double C24672 = C22941 * C732;
    const double C24666 = C22941 * C720;
    const double C32593 = C22941 * C393;
    const double C32587 = C22941 * C385;
    const double C32581 = C22941 * C394;
    const double C32575 = C22941 * C384;
    const double C32569 = C22941 * C395;
    const double C32563 = C22941 * C383;
    const double C33171 = C22941 * C862;
    const double C33165 = C22941 * C852;
    const double C33159 = C22941 * C861;
    const double C33153 = C22941 * C853;
    const double C33439 = C22941 * C1061;
    const double C33433 = C22941 * C1057;
    const double C26290 = C26270 * C51149;
    const double C26403 = C26270 * C50882;
    const double C27316 = C26270 * C1275;
    const double C26289 = C26269 * C50007;
    const double C26402 = C26269 * C603;
    const double C27315 = C26269 * C1280;
    const double C26416 = C26405 * C603;
    const double C29605 = C29599 * C603;
    const double C30851 = C29599 * C1280;
    const double C31773 = C29599 * C50007;
    const double C29602 = C29596 * C603;
    const double C30845 = C29596 * C1280;
    const double C31767 = C29596 * C50007;
    const double C29604 = C29598 * C50882;
    const double C30850 = C29598 * C1275;
    const double C31772 = C29598 * C51149;
    const double C29603 = C29597 * C50882;
    const double C30846 = C29597 * C1275;
    const double C31768 = C29597 * C51149;
    const double C26607 = C26605 * C603;
    const double C29606 = C29600 * C603;
    const double C30050 = C30038 * C50882;
    const double C30047 = C30035 * C50882;
    const double C30049 = C30037 * C603;
    const double C30048 = C30036 * C603;
    const double C39352 = C39340 * C50007;
    const double C39510 = C39340 * C603;
    const double C40603 = C39340 * C1280;
    const double C39353 = C39341 * C51149;
    const double C39511 = C39341 * C50882;
    const double C40604 = C39341 * C1275;
    const double C39624 = C39614 * C603;
    const double C11037 = C11024 + C11025;
    const double C11036 = C11020 + C11021;
    const double C13214 = C12428 + C12427;
    const double C15149 = C12427 + C12428;
    const double C15148 = C12423 + C12424;
    const double C15147 = C12424 + C12423;
    const double C19210 = C13629 + C13628;
    const double C20713 = C13628 + C13629;
    const double C19209 = C13648 + C13647;
    const double C21647 = C19214 + C19213;
    const double C11680 = C10796 * C1174;
    const double C11674 = C10790 * C1174;
    const double C11668 = C10784 * C1174;
    const double C14087 = C11261 * C1174;
    const double C14081 = C11263 * C1174;
    const double C14603 = C13056 * C1174;
    const double C19661 = C11488 * C1174;
    const double C20163 = C13640 * C1174;
    const double C22269 = C13931 * C1174;
    const double C11682 = C10798 * C1175;
    const double C11676 = C10792 * C1175;
    const double C11670 = C10786 * C1175;
    const double C14089 = C11956 * C1175;
    const double C14083 = C11954 * C1175;
    const double C14605 = C13058 * C1175;
    const double C19663 = C13642 * C1175;
    const double C20165 = C13638 * C1175;
    const double C22271 = C19225 * C1175;
    const double C11804 = C11802 - C11791;
    const double C14455 = C14452 + C11961;
    const double C14454 = C14451 - C11961;
    const double C20516 = C20515 - C14952;
    const double C26291 = C26271 * C50000;
    const double C27317 = C26271 * C1281;
    const double C30856 = C30849 * C1281;
    const double C31771 = C30849 * C50000;
    const double C30854 = C30847 * C1281;
    const double C31769 = C30847 * C50000;
    const double C39354 = C39342 * C50000;
    const double C40605 = C39342 * C1281;
    const double C26292 = C26272 * C50887;
    const double C27318 = C26272 * C50887;
    const double C30858 = C30852 * C50887;
    const double C31774 = C30852 * C50887;
    const double C30855 = C30848 * C50887;
    const double C31770 = C30848 * C50887;
    const double C39355 = C39343 * C50887;
    const double C40606 = C39343 * C50887;
    const double C19398 = C19394 + C19385;
    const double C48360 = C48356 + C48357;
    const double C20016 = C20014 + C14446;
    const double C20015 = C20013 - C14446;
    const double C2355 = C2173 * C268;
    const double C23119 = C22937 * C268;
    const double C5359 = C2173 * C392;
    const double C32590 = C22937 * C392;
    const double C2677 = C2173 * C520;
    const double C7982 = C50868 * C520;
    const double C23441 = C22937 * C520;
    const double C25948 = C50868 * C520;
    const double C3953 = C2173 * C729;
    const double C24669 = C22937 * C729;
    const double C28839 = C50868 * C729;
    const double C41424 = C50868 * C729;
    const double C5925 = C2173 * C859;
    const double C15884 = C50868 * C859;
    const double C33156 = C22937 * C859;
    const double C38795 = C50868 * C859;
    const double C151 =
        4 * (2 * C50140 - (ae * C50141) / C50070 - (C50142 * ce) / C50070 +
             C50069 * C50203) +
        (((-3 * C50141) / C49981 + C50069 * C50208 - (C50188 * ce) / C49981) *
         ae) /
            C49935 -
        ((3 * C50142 + C50069 * C50207 + C50188 * ae) * ce) / C50070 +
        C50069 *
            (3 * C50203 + (C50208 * ae) / C49935 - (C50207 * ce) / C50070 +
             C50069 *
                 (2 * C50197 - (ae * C50198) / C50070 - (C50199 * ce) / C50070 +
                  C50069 * ((-(ae * C50186) / C49981) / C49935 -
                            C50185 / C50070 - (C50189 * ce) / C50070 +
                            C50069 * ((-(C50173 * ce) / C49981) / C49935 -
                                      (ae * C50170) / C50070 -
                                      (C50069 *
                                       (C50150 * C50151 +
                                        C50077 * bs[7] * std::pow(C50073, 7)) *
                                       C50078) /
                                          C50070))));
    const double C281 =
        3 * ((-(ae * C50300 * C50132) / C49981) / C49935 - C50301 / C50070 -
             (C50300 * C50133 * ce) / C50070 + C50069 * C50318) +
        (C50300 * C50208 * ae) / C49935 - (C50300 * C50207 * ce) / C50070 +
        C50069 *
            (2 * C50318 - (ae * C50300 * C50198) / C50070 -
             (C50300 * C50199 * ce) / C50070 +
             C50069 * ((-(ae * C50300 * C50186) / C49981) / C49935 -
                       C50308 / C50070 - (C50300 * C50189 * ce) / C50070 +
                       C50069 * ((-(C50300 * C50173 * ce) / C49981) / C49935 -
                                 (ae * C50300 * C50170) / C50070 -
                                 (C50069 * C50300 * C50262) / C50070)));
    const double C405 =
        3 * ((-(ae * C50347 * C50132) / C49981) / C49935 - C50348 / C50070 -
             (C50347 * C50133 * ce) / C50070 + C50069 * C50365) +
        (C50347 * C50208 * ae) / C49935 - (C50347 * C50207 * ce) / C50070 +
        C50069 *
            (2 * C50365 - (ae * C50347 * C50198) / C50070 -
             (C50347 * C50199 * ce) / C50070 +
             C50069 * ((-(ae * C50347 * C50186) / C49981) / C49935 -
                       C50355 / C50070 - (C50347 * C50189 * ce) / C50070 +
                       C50069 * ((-(C50347 * C50173 * ce) / C49981) / C49935 -
                                 (ae * C50347 * C50170) / C50070 -
                                 (C50069 * C50347 * C50262) / C50070)));
    const double C143 =
        4 * ((-2 * C50102) / C49981 - (C50069 * C50141) / C49981 -
             (C50123 * ce) / C49981) +
        C50069 * ((-3 * C50141) / C49981 + C50069 * C50208 -
                  (C50188 * ce) / C49981) -
        ((3 * C50123 + C50069 * C50188) * ce) / C49981;
    const double C274 = C50300 * ((-3 * C50141) / C49981 + C50069 * C50208 -
                                  (C50188 * ce) / C49981);
    const double C398 = C50347 * ((-3 * C50141) / C49981 + C50069 * C50208 -
                                  (C50188 * ce) / C49981);
    const double C524 = (-2 * C50102) / C49981 - (C50069 * C50141) / C49981 -
                        (C50123 * ce) / C49981 + C50208 * C50395;
    const double C733 = C50347 * C50300 * C50208;
    const double C863 = (-2 * C50102) / C49981 - (C50069 * C50141) / C49981 -
                        (C50123 * ce) / C49981 + C50208 * C50442;
    const double C50288 = C50069 * C50285;
    const double C50345 = C50342 + C50344;
    const double C50392 = C50389 + C50391;
    const double C19512 = C19503 + C19509;
    const double C48462 = C48460 + C48461;
    const double C2834 = C2826 + C2827;
    const double C8333 = C8319 + C8320;
    const double C8329 = C8311 + C8312;
    const double C10799 = C10778 + C10779;
    const double C26299 = C26285 + C26286;
    const double C26295 = C26277 + C26278;
    const double C3028 = C3014 + C3015;
    const double C8642 = C8618 + C8619;
    const double C9604 = C9594 + C9595;
    const double C11957 = C11946 + C11947;
    const double C26592 = C26568 + C26569;
    const double C27538 = C27528 + C27529;
    const double C8461 = C8452 + C8453;
    const double C11039 = C11030 + C11031;
    const double C26419 = C26410 + C26411;
    const double C8652 = C8638 + C8639;
    const double C11258 = C11242 + C11243;
    const double C26602 = C26588 + C26589;
    const double C8981 = C8971 + C8972;
    const double C11491 = C11482 + C11483;
    const double C26923 = C26913 + C26914;
    const double C6228 = C6220 + C6221;
    const double C16479 = C16465 + C16466;
    const double C16475 = C16457 + C16458;
    const double C19226 = C19215 + C19216;
    const double C30198 = C30193 + C30194;
    const double C39358 = C39348 + C39349;
    const double C16777 = C16769 + C16770;
    const double C19511 = C19507 + C19508;
    const double C39627 = C39619 + C39620;
    const double C50295 = C50225 + C50293;
    const double C50294 = C50069 * C50292;
    const double C1415 =
        3 * ((-(ae * C50347 * C50320) / C49981) / C49935 - C50434 / C50070 -
             (C50347 * C50322 * ce) / C50070 + C50069 * C50499) +
        (C50347 * C50300 * C50292 * ae) / C49935 -
        (C50347 * C50300 * C50290 * ce) / C50070 +
        C50069 *
            (2 * C50499 - (ae * C50347 * C50300 * C50280) / C50070 -
             (C50347 * C50300 * C50281 * ce) / C50070 +
             C50069 *
                 ((-(ae * C50347 * C50300 * C50263) / C49981) / C49935 -
                  C50489 / C50070 - (C50347 * C50300 * C50266 * ce) / C50070 +
                  C50069 *
                      ((-(C50347 * C50300 * C50249 * ce) / C49981) / C49935 -
                       (ae * C50347 * C50300 * C50246) / C50070 -
                       (C50069 * C50347 * C50300 *
                        (C50219 * C50220 +
                         C50077 * bs[8] * std::pow(C50067, 8)) *
                        C50078) /
                           C50070)));
    const double C608 =
        2 * C50300 * C50208 + C50300 * (C50208 + C50292 * C50395);
    const double C734 = C50347 * (C50208 + C50292 * C50395);
    const double C973 = C50300 * C50208 + C50300 * C50292 * C50442;
    const double C1059 =
        2 * C50347 * C50208 + C50347 * (C50208 + C50292 * C50442);
    const double C3345 = C2173 * C982;
    const double C17274 = C50868 * C982;
    const double C18510 = C50863 * C982;
    const double C24073 = C22937 * C982;
    const double C29828 = C50868 * C982;
    const double C16644 = C50868 * C3459;
    const double C19222 = C50863 * C3459;
    const double C30046 = C50868 * C3459;
    const double C19391 = C50863 * C13925;
    const double C531 =
        3 * (C50402 - (ae * (C50186 * C50395 + C50132)) / C50070 -
             ((C50133 + C50189 * C50395) * ce) / C50070 + C50069 * C50421) +
        ((C50208 + C50292 * C50395) * ae) / C49935 -
        ((C50207 + C50290 * C50395) * ce) / C50070 +
        C50069 *
            (2 * C50421 - (ae * (C50280 * C50395 + C50198)) / C50070 -
             ((C50199 + C50281 * C50395) * ce) / C50070 +
             C50069 *
                 (C50417 - (ae * (C50263 * C50395 + C50186)) / C50070 -
                  ((C50189 + C50266 * C50395) * ce) / C50070 +
                  C50069 *
                      ((-((C50173 + C50249 * C50395) * ce) / C49981) / C49935 -
                       (ae * (C50246 * C50395 + C50170)) / C50070 +
                       C50069 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50395) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070))));
    const double C616 =
        2 * ((((-2 * C50307) / C49981 - (C50300 * C50408) / C49981) * ae) /
                 C49935 -
             ((2 * C50306 + C50300 * C50407) * ce) / C50070 + C50069 * C50426) +
        (((-2 * C50300 * C50198) / C49981 -
          (C50300 * (C50280 * C50395 + C50198)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50300 * C50199 + C50300 * (C50199 + C50281 * C50395)) * ce) /
            C50070 +
        C50069 *
            (C50426 +
             (((-2 * C50320) / C49981 -
               (C50300 * (C50263 * C50395 + C50186)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50322 + C50300 * (C50189 + C50266 * C50395)) * ce) /
                 C50070 +
             C50069 *
                 ((((-2 * C50324) / C49981 -
                    (C50300 * (C50246 * C50395 + C50170)) / C49981) *
                   ae) /
                      C49935 -
                  ((2 * C50323 + C50300 * (C50173 + C50249 * C50395)) * ce) /
                      C50070 +
                  C50069 *
                      ((-2 * C50325) / C50070 +
                       C50300 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50395) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070))));
    const double C617 =
        (-2 * C50301) / C50070 + C50300 * C50402 +
        (((-2 * C50300 * C50132) / C49981 -
          (C50300 * (C50186 * C50395 + C50132)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50300 * C50133 + C50300 * (C50133 + C50189 * C50395)) * ce) /
            C50070 +
        C50069 *
            ((((-2 * C50307) / C49981 - (C50300 * C50408) / C49981) * ae) /
                 C49935 -
             ((2 * C50306 + C50300 * C50407) * ce) / C50070 + C50069 * C50426);
    const double C2814 =
        3 * C50402 + C50300 * C50426 +
        (((-3 * (C50186 * C50395 + C50132)) / C49981 +
          C50300 * ((-2 * C50320) / C49981 -
                    (C50300 * (C50263 * C50395 + C50186)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50133 + C50189 * C50395) +
          C50300 * (2 * C50322 + C50300 * (C50189 + C50266 * C50395))) *
         ce) /
            C50070 +
        C50069 *
            ((((-3 * C50408) / C49981 +
               C50300 * ((-2 * C50324) / C49981 -
                         (C50300 * (C50246 * C50395 + C50170)) / C49981)) *
              ae) /
                 C49935 -
             ((3 * C50407 +
               C50300 * (2 * C50323 + C50300 * (C50173 + C50249 * C50395))) *
              ce) /
                 C50070 +
             C50069 *
                 (3 * C50417 +
                  C50300 *
                      ((-2 * C50325) / C50070 +
                       C50300 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50395) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070))));
    const double C2815 =
        (((-3 * (C50121 * C50395 + C50096)) / C49981 +
          C50300 * ((-2 * C50307) / C49981 - (C50300 * C50408) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50097 + C50124 * C50395) +
          C50300 * (2 * C50306 + C50300 * C50407)) *
         ce) /
            C50070 +
        C50069 * (3 * C50402 + C50300 * C50426);
    const double C2990 =
        C50347 * C50426 +
        (C50347 *
         ((-2 * C50320) / C49981 -
          (C50300 * (C50263 * C50395 + C50186)) / C49981) *
         ae) /
            C49935 -
        (C50347 * (2 * C50322 + C50300 * (C50189 + C50266 * C50395)) * ce) /
            C50070 +
        C50069 * ((C50347 *
                   ((-2 * C50324) / C49981 -
                    (C50300 * (C50246 * C50395 + C50170)) / C49981) *
                   ae) /
                      C49935 -
                  (C50347 * (2 * C50323 + C50300 * (C50173 + C50249 * C50395)) *
                   ce) /
                      C50070 +
                  C50069 * C50347 *
                      ((-2 * C50325) / C50070 +
                       C50300 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50395) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070)));
    const double C2991 =
        (C50347 * ((-2 * C50307) / C49981 - (C50300 * C50408) / C49981) * ae) /
            C49935 -
        (C50347 * (2 * C50306 + C50300 * C50407) * ce) / C50070 +
        C50069 * C50347 * C50426;
    const double C8441 =
        ((4 * ((-2 * C50307) / C49981 - (C50300 * C50408) / C49981) +
          C50300 *
              ((-3 * C50408) / C49981 +
               C50300 * ((-2 * C50324) / C49981 -
                         (C50300 * (C50246 * C50395 + C50170)) / C49981))) *
         ae) /
            C49935 -
        ((4 * (2 * C50306 + C50300 * C50407) +
          C50300 *
              (3 * C50407 +
               C50300 * (2 * C50323 + C50300 * (C50173 + C50249 * C50395)))) *
         ce) /
            C50070 +
        C50069 * (4 * C50426 +
                  C50300 * (3 * C50417 +
                            C50300 * ((-2 * C50325) / C50070 +
                                      C50300 * ((-((C50219 * C50220 +
                                                    C50077 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50078 * C50395) /
                                                 C49981) /
                                                    C49935 -
                                                C50262 / C50070))));
    const double C8442 = 4 * ((-2 * C50301) / C50070 + C50300 * C50402) +
                         C50300 * (3 * C50402 + C50300 * C50426);
    const double C8616 = C50347 * (3 * C50402 + C50300 * C50426);
    const double C8956 =
        (((-2 * C50307) / C49981 - (C50300 * C50408) / C49981 +
          ((-2 * C50324) / C49981 -
           (C50300 * (C50246 * C50395 + C50170)) / C49981) *
              C50442) *
         ae) /
            C49935 -
        ((2 * C50306 + C50300 * C50407 +
          (2 * C50323 + C50300 * (C50173 + C50249 * C50395)) * C50442) *
         ce) /
            C50070 +
        C50069 *
            (C50426 +
             ((-2 * C50325) / C50070 +
              C50300 *
                  ((-((C50219 * C50220 + C50077 * bs[8] * std::pow(C50067, 8)) *
                      C50078 * C50395) /
                    C49981) /
                       C49935 -
                   C50262 / C50070)) *
                 C50442);
    const double C8957 =
        (-2 * C50301) / C50070 + C50300 * C50402 + C50426 * C50442;
    const double C11118 =
        5 * (3 * C50402 + C50300 * C50426) +
        C50300 * (4 * C50426 +
                  C50300 * (3 * C50417 +
                            C50300 * ((-2 * C50325) / C50070 +
                                      C50300 * ((-((C50219 * C50220 +
                                                    C50077 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50078 * C50395) /
                                                 C49981) /
                                                    C49935 -
                                                C50262 / C50070))));
    const double C11240 =
        C50347 *
        (4 * C50426 +
         C50300 *
             (3 * C50417 +
              C50300 * ((-2 * C50325) / C50070 +
                        C50300 * ((-((C50219 * C50220 +
                                      C50077 * bs[8] * std::pow(C50067, 8)) *
                                     C50078 * C50395) /
                                   C49981) /
                                      C49935 -
                                  C50262 / C50070))));
    const double C11474 =
        3 * C50402 + C50300 * C50426 +
        (3 * C50417 +
         C50300 *
             ((-2 * C50325) / C50070 +
              C50300 *
                  ((-((C50219 * C50220 + C50077 * bs[8] * std::pow(C50067, 8)) *
                      C50078 * C50395) /
                    C49981) /
                       C49935 -
                   C50262 / C50070))) *
            C50442;
    const double C11568 =
        2 * C50347 * C50426 +
        C50347 *
            (C50426 +
             ((-2 * C50325) / C50070 +
              C50300 *
                  ((-((C50219 * C50220 + C50077 * bs[8] * std::pow(C50067, 8)) *
                      C50078 * C50395) /
                    C49981) /
                       C49935 -
                   C50262 / C50070)) *
                 C50442);
    const double C3017 = C2173 * C747;
    const double C9597 = C50868 * C747;
    const double C12889 = C50863 * C747;
    const double C23757 = C22937 * C747;
    const double C27531 = C50868 * C747;
    const double C8982 = C8973 + C8974;
    const double C13645 = C13636 + C13637;
    const double C26924 = C26915 + C26916;
    const double C13816 = C13811 + C13812;
    const double C870 =
        3 * (C50449 - (ae * (C50186 * C50442 + C50132)) / C50070 -
             ((C50133 + C50189 * C50442) * ce) / C50070 + C50069 * C50468) +
        ((C50208 + C50292 * C50442) * ae) / C49935 -
        ((C50207 + C50290 * C50442) * ce) / C50070 +
        C50069 *
            (2 * C50468 - (ae * (C50280 * C50442 + C50198)) / C50070 -
             ((C50199 + C50281 * C50442) * ce) / C50070 +
             C50069 *
                 (C50464 - (ae * (C50263 * C50442 + C50186)) / C50070 -
                  ((C50189 + C50266 * C50442) * ce) / C50070 +
                  C50069 *
                      ((-((C50173 + C50249 * C50442) * ce) / C49981) / C49935 -
                       (ae * (C50246 * C50442 + C50170)) / C50070 +
                       C50069 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50442) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070))));
    const double C1067 =
        2 * ((((-2 * C50354) / C49981 - (C50347 * C50455) / C49981) * ae) /
                 C49935 -
             ((2 * C50353 + C50347 * C50454) * ce) / C50070 + C50069 * C50482) +
        (((-2 * C50347 * C50198) / C49981 -
          (C50347 * (C50280 * C50442 + C50198)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50199 + C50347 * (C50199 + C50281 * C50442)) * ce) /
            C50070 +
        C50069 *
            (C50482 +
             (((-2 * C50367) / C49981 -
               (C50347 * (C50263 * C50442 + C50186)) / C49981) *
              ae) /
                 C49935 -
             ((2 * C50369 + C50347 * (C50189 + C50266 * C50442)) * ce) /
                 C50070 +
             C50069 *
                 ((((-2 * C50371) / C49981 -
                    (C50347 * (C50246 * C50442 + C50170)) / C49981) *
                   ae) /
                      C49935 -
                  ((2 * C50370 + C50347 * (C50173 + C50249 * C50442)) * ce) /
                      C50070 +
                  C50069 *
                      ((-2 * C50372) / C50070 +
                       C50347 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50442) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070))));
    const double C1068 =
        (-2 * C50348) / C50070 + C50347 * C50449 +
        (((-2 * C50347 * C50132) / C49981 -
          (C50347 * (C50186 * C50442 + C50132)) / C49981) *
         ae) /
            C49935 -
        ((2 * C50347 * C50133 + C50347 * (C50133 + C50189 * C50442)) * ce) /
            C50070 +
        C50069 *
            ((((-2 * C50354) / C49981 - (C50347 * C50455) / C49981) * ae) /
                 C49935 -
             ((2 * C50353 + C50347 * C50454) * ce) / C50070 + C50069 * C50482);
    const double C6208 =
        3 * C50449 + C50347 * C50482 +
        (((-3 * (C50186 * C50442 + C50132)) / C49981 +
          C50347 * ((-2 * C50367) / C49981 -
                    (C50347 * (C50263 * C50442 + C50186)) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50133 + C50189 * C50442) +
          C50347 * (2 * C50369 + C50347 * (C50189 + C50266 * C50442))) *
         ce) /
            C50070 +
        C50069 *
            ((((-3 * C50455) / C49981 +
               C50347 * ((-2 * C50371) / C49981 -
                         (C50347 * (C50246 * C50442 + C50170)) / C49981)) *
              ae) /
                 C49935 -
             ((3 * C50454 +
               C50347 * (2 * C50370 + C50347 * (C50173 + C50249 * C50442))) *
              ce) /
                 C50070 +
             C50069 *
                 (3 * C50464 +
                  C50347 *
                      ((-2 * C50372) / C50070 +
                       C50347 * ((-((C50219 * C50220 +
                                     C50077 * bs[8] * std::pow(C50067, 8)) *
                                    C50078 * C50442) /
                                  C49981) /
                                     C49935 -
                                 C50262 / C50070))));
    const double C6209 =
        (((-3 * (C50121 * C50442 + C50096)) / C49981 +
          C50347 * ((-2 * C50354) / C49981 - (C50347 * C50455) / C49981)) *
         ae) /
            C49935 -
        ((3 * (C50097 + C50124 * C50442) +
          C50347 * (2 * C50353 + C50347 * C50454)) *
         ce) /
            C50070 +
        C50069 * (3 * C50449 + C50347 * C50482);
    const double C16760 =
        ((4 * ((-2 * C50354) / C49981 - (C50347 * C50455) / C49981) +
          C50347 *
              ((-3 * C50455) / C49981 +
               C50347 * ((-2 * C50371) / C49981 -
                         (C50347 * (C50246 * C50442 + C50170)) / C49981))) *
         ae) /
            C49935 -
        ((4 * (2 * C50353 + C50347 * C50454) +
          C50347 *
              (3 * C50454 +
               C50347 * (2 * C50370 + C50347 * (C50173 + C50249 * C50442)))) *
         ce) /
            C50070 +
        C50069 * (4 * C50482 +
                  C50347 * (3 * C50464 +
                            C50347 * ((-2 * C50372) / C50070 +
                                      C50347 * ((-((C50219 * C50220 +
                                                    C50077 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50078 * C50442) /
                                                 C49981) /
                                                    C49935 -
                                                C50262 / C50070))));
    const double C16761 = 4 * ((-2 * C50348) / C50070 + C50347 * C50449) +
                          C50347 * (3 * C50449 + C50347 * C50482);
    const double C21832 =
        5 * (3 * C50449 + C50347 * C50482) +
        C50347 * (4 * C50482 +
                  C50347 * (3 * C50464 +
                            C50347 * ((-2 * C50372) / C50070 +
                                      C50347 * ((-((C50219 * C50220 +
                                                    C50077 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50078 * C50442) /
                                                 C49981) /
                                                    C49935 -
                                                C50262 / C50070))));
    const double C8306 = C8005 + C8006;
    const double C8305 = C8003 + C8004;
    const double C8304 = C8001 + C8002;
    const double C8303 = C7999 + C8000;
    const double C8447 = C8331 + C8332;
    const double C42148 = C8648 + C8649;
    const double C42145 = C8649 + C8648;
    const double C42147 = C8646 + C8647;
    const double C42146 = C8647 + C8646;
    const double C8655 = C8644 + C8645;
    const double C42149 = C8645 + C8644;
    const double C16645 = C8978 + C8977;
    const double C42549 = C8977 + C8978;
    const double C16646 = C8976 + C8975;
    const double C42548 = C8975 + C8976;
    const double C43336 = C9600 + C9601;
    const double C43332 = C9601 + C9600;
    const double C43333 = C9598 + C9599;
    const double C43331 = C9599 + C9598;
    const double C16452 = C15907 + C15908;
    const double C16451 = C15905 + C15906;
    const double C16450 = C15903 + C15904;
    const double C16449 = C15901 + C15902;
    const double C16764 = C16477 + C16478;
    const double C23141 = C23120 + C23121;
    const double C23138 = C23114 + C23115;
    const double C23137 = C23112 + C23113;
    const double C23134 = C23106 + C23107;
    const double C23129 = C23096 + C23097;
    const double C23126 = C23090 + C23091;
    const double C23469 = C23454 + C23455;
    const double C23468 = C23452 + C23453;
    const double C23465 = C23446 + C23447;
    const double C23460 = C23436 + C23437;
    const double C23585 = C23576 + C23577;
    const double C23582 = C23570 + C23571;
    const double C23767 = C23752 + C23753;
    const double C23764 = C23746 + C23747;
    const double C23763 = C23744 + C23745;
    const double C23760 = C23738 + C23739;
    const double C24077 = C24068 + C24069;
    const double C24074 = C24062 + C24063;
    const double C24679 = C24670 + C24671;
    const double C24676 = C24664 + C24665;
    const double C32612 = C32591 + C32592;
    const double C32609 = C32585 + C32586;
    const double C32608 = C32583 + C32584;
    const double C32605 = C32577 + C32578;
    const double C32600 = C32567 + C32568;
    const double C32597 = C32561 + C32562;
    const double C33184 = C33169 + C33170;
    const double C33183 = C33167 + C33168;
    const double C33180 = C33161 + C33162;
    const double C33175 = C33151 + C33152;
    const double C33446 = C33437 + C33438;
    const double C33443 = C33431 + C33432;
    const double C23142 = C23122 + C23123;
    const double C23139 = C23116 + C23117;
    const double C23136 = C23110 + C23111;
    const double C23133 = C23104 + C23105;
    const double C23130 = C23098 + C23099;
    const double C23127 = C23092 + C23093;
    const double C23470 = C23456 + C23457;
    const double C23467 = C23450 + C23451;
    const double C23464 = C23444 + C23445;
    const double C23461 = C23438 + C23439;
    const double C23586 = C23578 + C23579;
    const double C23583 = C23572 + C23573;
    const double C23768 = C23754 + C23755;
    const double C23765 = C23748 + C23749;
    const double C23762 = C23742 + C23743;
    const double C23759 = C23736 + C23737;
    const double C24078 = C24070 + C24071;
    const double C24075 = C24064 + C24065;
    const double C24680 = C24672 + C24673;
    const double C24677 = C24666 + C24667;
    const double C32613 = C32593 + C32594;
    const double C32610 = C32587 + C32588;
    const double C32607 = C32581 + C32582;
    const double C32604 = C32575 + C32576;
    const double C32601 = C32569 + C32570;
    const double C32598 = C32563 + C32564;
    const double C33185 = C33171 + C33172;
    const double C33182 = C33165 + C33166;
    const double C33179 = C33159 + C33160;
    const double C33176 = C33153 + C33154;
    const double C33447 = C33439 + C33440;
    const double C33444 = C33433 + C33434;
    const double C26301 = C26289 + C26290;
    const double C26414 = C26402 + C26403;
    const double C27319 = C27315 + C27316;
    const double C29609 = C29604 + C29605;
    const double C30857 = C30850 + C30851;
    const double C31776 = C31772 + C31773;
    const double C29608 = C29602 + C29603;
    const double C30853 = C30845 + C30846;
    const double C31775 = C31767 + C31768;
    const double C30056 = C30049 + C30050;
    const double C30055 = C30047 + C30048;
    const double C39360 = C39352 + C39353;
    const double C39513 = C39510 + C39511;
    const double C40607 = C40603 + C40604;
    const double C11043 = C11037 - C11026;
    const double C11042 = C11036 - C11022;
    const double C13215 = C13214 - C12426;
    const double C15152 = C12426 - C15149;
    const double C15151 = C12422 - C15148;
    const double C15150 = C15147 - C12422;
    const double C19224 = C19210 - C13650;
    const double C20714 = C13650 - C20713;
    const double C19223 = C19209 - C13646;
    const double C21654 = C21647 - C19231;
    const double C20517 = C20516 * C51170;
    const double C22503 = C20516 * C51027;
    const double C49435 = C20516 * C22938;
    const double C20510 = C20015 * C51041;
    const double C49436 = C20015 * C51041;
    const double C2376 = C2354 + C2355;
    const double C23140 = C23118 + C23119;
    const double C5380 = C5358 + C5359;
    const double C32611 = C32589 + C32590;
    const double C2698 = C2676 + C2677;
    const double C8008 = C7981 + C7982;
    const double C23462 = C23440 + C23441;
    const double C25974 = C25947 + C25948;
    const double C3962 = C3952 + C3953;
    const double C24678 = C24668 + C24669;
    const double C28845 = C28838 + C28839;
    const double C41430 = C41423 + C41424;
    const double C5946 = C5924 + C5925;
    const double C15910 = C15883 + C15884;
    const double C33177 = C33155 + C33156;
    const double C38801 = C38794 + C38795;
    const double C2361 = C2173 * C281;
    const double C23125 = C22937 * C281;
    const double C5365 = C2173 * C405;
    const double C32596 = C22937 * C405;
    const double C2360 = C2178 * C274;
    const double C23124 = C22942 * C274;
    const double C5364 = C2178 * C398;
    const double C32595 = C22942 * C398;
    const double C2694 = C2178 * C524;
    const double C7985 = C49954 * C524;
    const double C23458 = C22942 * C524;
    const double C25951 = C25757 * C524;
    const double C3958 = C2178 * C733;
    const double C24674 = C22942 * C733;
    const double C28842 = C25757 * C733;
    const double C41427 = C49954 * C733;
    const double C5942 = C2178 * C863;
    const double C15887 = C49954 * C863;
    const double C33173 = C22942 * C863;
    const double C38798 = C25757 * C863;
    const double C50291 = C50251 + C50288;
    const double C8446 = C8329 + C8330;
    const double C10817 = C10799 * C252;
    const double C11027 = C10799 * C50887;
    const double C11683 = C10799 * C51187;
    const double C11795 = C10799 * C50887;
    const double C26404 = C26295 + C26296;
    const double C8654 = C8642 + C8643;
    const double C42150 = C8643 + C8642;
    const double C11963 = C11957 * C50887;
    const double C12429 = C11957 * C50887;
    const double C12885 = C11957 * C252;
    const double C14090 = C11957 * C51187;
    const double C26604 = C26592 + C26593;
    const double C29601 = C26593 + C26592;
    const double C11045 = C11039 * C51149;
    const double C11126 = C11039 * C50882;
    const double C11797 = C11039 * C1275;
    const double C11266 = C11258 * C50882;
    const double C11950 = C11258 * C1275;
    const double C12431 = C11258 * C51149;
    const double C11497 = C11491 * C50882;
    const double C13634 = C11491 * C51149;
    const double C14448 = C11491 * C1275;
    const double C16763 = C16475 + C16476;
    const double C19232 = C19226 * C50887;
    const double C20514 = C19226 * C50887;
    const double C21277 = C19226 * C252;
    const double C22272 = C19226 * C51187;
    const double C39613 = C30198 + C30197;
    const double C19514 = C19511 * C50882;
    const double C21650 = C19511 * C51149;
    const double C22506 = C19511 * C1275;
    const double C50297 = C50295 + C50273;
    const double C50296 = C50234 + C50294;
    const double C3351 = C3344 + C3345;
    const double C17278 = C17273 + C17274;
    const double C18512 = C18509 + C18510;
    const double C24079 = C24072 + C24073;
    const double C29840 = C29827 + C29828;
    const double C16651 = C16643 + C16644;
    const double C19228 = C19221 + C19222;
    const double C30054 = C30045 + C30046;
    const double C19396 = C19390 + C19391;
    const double C2829 = C2173 * C617;
    const double C8322 = C50868 * C617;
    const double C10783 = C50863 * C617;
    const double C23581 = C22937 * C617;
    const double C26288 = C50868 * C617;
    const double C8455 = C50868 * C2815;
    const double C11035 = C50863 * C2815;
    const double C26413 = C50868 * C2815;
    const double C8641 = C50868 * C2991;
    const double C11953 = C50863 * C2991;
    const double C26591 = C50868 * C2991;
    const double C11131 = C50863 * C8442;
    const double C11257 = C50863 * C8616;
    const double C11487 = C50863 * C8957;
    const double C3029 = C3016 + C3017;
    const double C9605 = C9596 + C9597;
    const double C12893 = C12888 + C12889;
    const double C23769 = C23756 + C23757;
    const double C27539 = C27530 + C27531;
    const double C13653 = C13645 * C50887;
    const double C14450 = C13645 * C50887;
    const double C13820 = C13816 * C50882;
    const double C6223 = C2173 * C1068;
    const double C16468 = C50868 * C1068;
    const double C21281 = C50863 * C1068;
    const double C33442 = C22937 * C1068;
    const double C39351 = C50868 * C1068;
    const double C16772 = C50868 * C6209;
    const double C21653 = C50863 * C6209;
    const double C39622 = C50868 * C6209;
    const double C21839 = C50863 * C16761;
    const double C8326 = C8306 * C50887;
    const double C9384 = C8306 * C50887;
    const double C8325 = C8305 * C50000;
    const double C9383 = C8305 * C1281;
    const double C8324 = C8304 * C51149;
    const double C8445 = C8304 * C50882;
    const double C9382 = C8304 * C1275;
    const double C8323 = C8303 * C50007;
    const double C8444 = C8303 * C603;
    const double C9381 = C8303 * C1280;
    const double C8458 = C8447 * C603;
    const double C42154 = C42148 * C603;
    const double C43335 = C42148 * C1280;
    const double C44257 = C42148 * C50007;
    const double C42151 = C42145 * C603;
    const double C43329 = C42145 * C1280;
    const double C44251 = C42145 * C50007;
    const double C42153 = C42147 * C50882;
    const double C43334 = C42147 * C1275;
    const double C44256 = C42147 * C51149;
    const double C42152 = C42146 * C50882;
    const double C43330 = C42146 * C1275;
    const double C44252 = C42146 * C51149;
    const double C8657 = C8655 * C603;
    const double C42155 = C42149 * C603;
    const double C16652 = C16645 * C50882;
    const double C42551 = C42549 * C50882;
    const double C16653 = C16646 * C603;
    const double C42550 = C42548 * C603;
    const double C43342 = C43336 * C50887;
    const double C44258 = C43336 * C50887;
    const double C43339 = C43332 * C50887;
    const double C44254 = C43332 * C50887;
    const double C43340 = C43333 * C1281;
    const double C44255 = C43333 * C50000;
    const double C43338 = C43331 * C1281;
    const double C44253 = C43331 * C50000;
    const double C16472 = C16452 * C50887;
    const double C17768 = C16452 * C50887;
    const double C16471 = C16451 * C50000;
    const double C17767 = C16451 * C1281;
    const double C16470 = C16450 * C51149;
    const double C16636 = C16450 * C50882;
    const double C17766 = C16450 * C1275;
    const double C16469 = C16449 * C50007;
    const double C16635 = C16449 * C603;
    const double C17765 = C16449 * C1280;
    const double C16774 = C16764 * C603;
    const double C26302 = C26301 - C26291;
    const double C27320 = C27319 - C27317;
    const double C30860 = C30856 - C30857;
    const double C31778 = C31771 - C31776;
    const double C30859 = C30853 - C30854;
    const double C31777 = C31775 - C31769;
    const double C39512 = C30055 * C51027;
    const double C39361 = C39360 - C39354;
    const double C39514 = C39513 * C51027;
    const double C40608 = C40607 - C40605;
    const double C11048 = C11042 - C11023;
    const double C15154 = C15151 + C12425;
    const double C15153 = C15150 - C12425;
    const double C19230 = C19224 - C13651;
    const double C20715 = C20714 + C13651;
    const double C19229 = C19223 - C13649;
    const double C20518 = C20517 + C20510;
    const double C49437 = C49435 + C49436;
    const double C2379 = C2360 + C2361;
    const double C23143 = C23124 + C23125;
    const double C5383 = C5364 + C5365;
    const double C32614 = C32595 + C32596;
    const double C2707 = C2694 + C2695;
    const double C8010 = C7985 + C7986;
    const double C23471 = C23458 + C23459;
    const double C25976 = C25951 + C25952;
    const double C3965 = C3958 + C3959;
    const double C24681 = C24674 + C24675;
    const double C28847 = C28842 + C28843;
    const double C41432 = C41427 + C41428;
    const double C5955 = C5942 + C5943;
    const double C15912 = C15887 + C15888;
    const double C33186 = C33173 + C33174;
    const double C38803 = C38798 + C38799;
    const double C8457 = C8446 * C50882;
    const double C11049 = C11043 - C11027;
    const double C11805 = C11803 - C11795;
    const double C26415 = C26404 * C50882;
    const double C8656 = C8654 * C50882;
    const double C42156 = C42150 * C50882;
    const double C14241 = C14240 - C11963;
    const double C14456 = C14453 + C11963;
    const double C13216 = C13215 - C12429;
    const double C15155 = C15152 + C12429;
    const double C26606 = C26604 * C50882;
    const double C29607 = C29601 * C50882;
    const double C11134 = C11126 + C11127;
    const double C11274 = C11266 + C11267;
    const double C13467 = C11267 + C11266;
    const double C13465 = C11497 + C11496;
    const double C13804 = C11496 + C11497;
    const double C16773 = C16763 * C50882;
    const double C21657 = C21654 - C19232;
    const double C22510 = C22509 - C20514;
    const double C39623 = C39613 * C50882;
    const double C21834 = C19514 + C19513;
    const double C144 = (5 * (3 * C50142 + C50069 * C50207 + C50188 * ae) +
                         C50069 * (4 * C50207 + C50069 * C50297 + C50277 * ae) +
                         (4 * C50188 + C50069 * C50277) * ae) /
                        C49935;
    const double C275 =
        (C50300 * (4 * C50207 + C50069 * C50297 + C50277 * ae)) / C49935;
    const double C399 =
        (C50347 * (4 * C50207 + C50069 * C50297 + C50277 * ae)) / C49935;
    const double C525 =
        (3 * C50142 + C50069 * C50207 + C50188 * ae + C50297 * C50395) / C49935;
    const double C864 =
        (3 * C50142 + C50069 * C50207 + C50188 * ae + C50297 * C50442) / C49935;
    const double C1413 = (C50347 * C50300 * C50297) / C49935;
    const double C50298 = C50296 - C50276;
    const double C18514 = C18512 * C253;
    const double C19666 = C18512 * C1171;
    const double C19234 = C19228 * C50887;
    const double C20012 = C19228 * C50887;
    const double C19400 = C19396 * C50882;
    const double C2835 = C2828 + C2829;
    const double C8334 = C8321 + C8322;
    const double C10801 = C10782 + C10783;
    const double C23587 = C23580 + C23581;
    const double C26300 = C26287 + C26288;
    const double C8462 = C8454 + C8455;
    const double C11041 = C11034 + C11035;
    const double C26420 = C26412 + C26413;
    const double C8653 = C8640 + C8641;
    const double C11959 = C11952 + C11953;
    const double C26603 = C26590 + C26591;
    const double C11137 = C11130 + C11131;
    const double C11265 = C11256 + C11257;
    const double C11493 = C11486 + C11487;
    const double C12897 = C12893 * C253;
    const double C14092 = C12893 * C1171;
    const double C6229 = C6222 + C6223;
    const double C16480 = C16467 + C16468;
    const double C21283 = C21280 + C21281;
    const double C33448 = C33441 + C33442;
    const double C39359 = C39350 + C39351;
    const double C16778 = C16771 + C16772;
    const double C21656 = C21652 + C21653;
    const double C39628 = C39621 + C39622;
    const double C21842 = C21838 + C21839;
    const double C8335 = C8323 + C8324;
    const double C8456 = C8444 + C8445;
    const double C9385 = C9381 + C9382;
    const double C42158 = C42153 + C42154;
    const double C43341 = C43334 + C43335;
    const double C44260 = C44256 + C44257;
    const double C42157 = C42151 + C42152;
    const double C43337 = C43329 + C43330;
    const double C44259 = C44251 + C44252;
    const double C16655 = C16652 + C16653;
    const double C42552 = C42550 + C42551;
    const double C16481 = C16469 + C16470;
    const double C16647 = C16635 + C16636;
    const double C17769 = C17765 + C17766;
    const double C26303 = C26302 - C26292;
    const double C27321 = C27320 - C27318;
    const double C30862 = C30860 + C30858;
    const double C31780 = C31778 + C31774;
    const double C30861 = C30859 - C30855;
    const double C31779 = C31777 - C31770;
    const double C39362 = C39361 - C39355;
    const double C40609 = C40608 - C40606;
    const double C19236 = C19230 * C51041;
    const double C48208 = C19230 * C51041;
    const double C19235 = C19229 * C51170;
    const double C21646 = C19229 * C51027;
    const double C48207 = C19229 * C22938;
    const double C8463 = C8457 + C8458;
    const double C26421 = C26415 + C26416;
    const double C8658 = C8656 + C8657;
    const double C42159 = C42155 + C42156;
    const double C26608 = C26606 + C26607;
    const double C29610 = C29606 + C29607;
    const double C19392 = C13465 * C51041;
    const double C48358 = C13465 * C51041;
    const double C16779 = C16773 + C16774;
    const double C21660 = C21657 * C51027;
    const double C22511 = C22510 * C51027;
    const double C39629 = C39623 + C39624;
    const double C21840 = C21834 * C51027;
    const double C152 =
        5 * (3 * C50203 + (C50208 * ae) / C49935 - (C50207 * ce) / C50070 +
             C50069 * C50291) +
        ((4 * C50208 + C50069 * C50298 - (C50277 * ce) / C49981) * ae) /
            C49935 -
        ((4 * C50207 + C50069 * C50297 + C50277 * ae) * ce) / C50070 +
        C50069 *
            (4 * C50291 + (C50298 * ae) / C49935 - (C50297 * ce) / C50070 +
             C50069 *
                 (3 * C50285 + (C50292 * ae) / C49935 - (C50290 * ce) / C50070 +
                  C50069 *
                      (2 * C50279 - (ae * C50280) / C50070 -
                       (C50281 * ce) / C50070 +
                       C50069 *
                           ((-(ae * C50263) / C49981) / C49935 -
                            C50262 / C50070 - (C50266 * ce) / C50070 +
                            C50069 * ((-(C50249 * ce) / C49981) / C49935 -
                                      (ae * C50246) / C50070 -
                                      (C50069 *
                                       (C50219 * C50220 +
                                        C50077 * bs[8] * std::pow(C50067, 8)) *
                                       C50078) /
                                          C50070)))));
    const double C282 =
        4 * (2 * C50318 - (ae * C50300 * C50198) / C50070 -
             (C50300 * C50199 * ce) / C50070 + C50069 * C50345) +
        (C50300 * C50298 * ae) / C49935 - (C50300 * C50297 * ce) / C50070 +
        C50069 *
            (3 * C50345 + (C50300 * C50292 * ae) / C49935 -
             (C50300 * C50290 * ce) / C50070 +
             C50069 *
                 (2 * C50343 - (ae * C50300 * C50280) / C50070 -
                  (C50300 * C50281 * ce) / C50070 +
                  C50069 *
                      ((-(ae * C50300 * C50263) / C49981) / C49935 -
                       C50325 / C50070 - (C50300 * C50266 * ce) / C50070 +
                       C50069 * ((-(C50300 * C50249 * ce) / C49981) / C49935 -
                                 (ae * C50300 * C50246) / C50070 -
                                 (C50069 * C50300 *
                                  (C50219 * C50220 +
                                   C50077 * bs[8] * std::pow(C50067, 8)) *
                                  C50078) /
                                     C50070))));
    const double C406 =
        4 * (2 * C50365 - (ae * C50347 * C50198) / C50070 -
             (C50347 * C50199 * ce) / C50070 + C50069 * C50392) +
        (C50347 * C50298 * ae) / C49935 - (C50347 * C50297 * ce) / C50070 +
        C50069 *
            (3 * C50392 + (C50347 * C50292 * ae) / C49935 -
             (C50347 * C50290 * ce) / C50070 +
             C50069 *
                 (2 * C50390 - (ae * C50347 * C50280) / C50070 -
                  (C50347 * C50281 * ce) / C50070 +
                  C50069 *
                      ((-(ae * C50347 * C50263) / C49981) / C49935 -
                       C50372 / C50070 - (C50347 * C50266 * ce) / C50070 +
                       C50069 * ((-(C50347 * C50249 * ce) / C49981) / C49935 -
                                 (ae * C50347 * C50246) / C50070 -
                                 (C50069 * C50347 *
                                  (C50219 * C50220 +
                                   C50077 * bs[8] * std::pow(C50067, 8)) *
                                  C50078) /
                                     C50070))));
    const double C145 =
        5 * ((-3 * C50141) / C49981 + C50069 * C50208 -
             (C50188 * ce) / C49981) +
        C50069 * (4 * C50208 + C50069 * C50298 - (C50277 * ce) / C49981) -
        ((4 * C50188 + C50069 * C50277) * ce) / C49981;
    const double C276 =
        C50300 * (4 * C50208 + C50069 * C50298 - (C50277 * ce) / C49981);
    const double C400 =
        C50347 * (4 * C50208 + C50069 * C50298 - (C50277 * ce) / C49981);
    const double C526 = (-3 * C50141) / C49981 + C50069 * C50208 -
                        (C50188 * ce) / C49981 + C50298 * C50395;
    const double C865 = (-3 * C50141) / C49981 + C50069 * C50208 -
                        (C50188 * ce) / C49981 + C50298 * C50442;
    const double C1414 = C50347 * C50300 * C50298;
    const double C10819 = C10801 * C253;
    const double C11685 = C10801 * C1171;
    const double C11047 = C11041 * C50887;
    const double C11799 = C11041 * C50887;
    const double C11965 = C11959 * C50887;
    const double C12433 = C11959 * C50887;
    const double C11139 = C11137 * C50882;
    const double C11273 = C11265 * C50882;
    const double C11499 = C11493 * C50882;
    const double C21285 = C21283 * C253;
    const double C22274 = C21283 * C1171;
    const double C21659 = C21656 * C50887;
    const double C22508 = C21656 * C50887;
    const double C21844 = C21842 * C50882;
    const double C8336 = C8335 - C8325;
    const double C9386 = C9385 - C9383;
    const double C43344 = C43340 - C43341;
    const double C44262 = C44255 - C44260;
    const double C43343 = C43337 - C43338;
    const double C44261 = C44259 - C44253;
    const double C16656 = C16655 * C51027;
    const double C16482 = C16481 - C16471;
    const double C16654 = C16647 * C51027;
    const double C17770 = C17769 - C17767;
    const double C39363 = C39362 * C51027;
    const double C40610 = C40609 * C51027;
    const double C19237 = C19235 + C19236;
    const double C48209 = C48207 + C48208;
    const double C19397 = C19392 + C19393;
    const double C48361 = C48358 + C48359;
    const double C16780 = C16779 * C51027;
    const double C39630 = C39629 * C51027;
    const double C8337 = C8336 - C8326;
    const double C9387 = C9386 - C9384;
    const double C43346 = C43344 + C43342;
    const double C44264 = C44262 + C44258;
    const double C43345 = C43343 - C43339;
    const double C44263 = C44261 - C44254;
    const double C16483 = C16482 - C16472;
    const double C17771 = C17770 - C17768;
    const double C16484 = C16483 * C51027;
    const double C17772 = C17771 * C51027;
    d2ee[0] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C1174 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C51201 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C1175 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C51187 +
                   (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                    C51184 * C135 + C22942 * C129 + C22937 * C140) *
                       C1176 +
                   (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                    C51184 * C149 + C22942 * C141 + C22937 * C150) *
                       C1171) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C1174 +
                   (C23129 + C23130 + C23131) * C51201 -
                   (C23132 + C23133 + C23134) * C1175 -
                   (C23135 + C23136 + C23137) * C51187 +
                   (C23138 + C23139 + C23140) * C1176 +
                   (C23141 + C23142 + C23143) * C1171) *
                      C51041) *
                     C51053 * C50953 * C1172 +
                 (((C23134 + C23133 + C23132) * C1175 -
                   ((C23131 + C23130 + C23129) * C51201 +
                    (C23128 + C23127 + C23126) * C1174) +
                   (C23137 + C23136 + C23135) * C51187 -
                   (C23140 + C23139 + C23138) * C1176 -
                   (C23143 + C23142 + C23141) * C1171) *
                      C22938 +
                  ((C23460 + C23461 + C23462) * C1175 -
                   ((C23463 + C23464 + C23465) * C51201 +
                    (C23466 + C23467 + C23468) * C1174) +
                   (C23469 + C23470 + C23471) * C51187 -
                   (C22942 * C516 + C22937 * C525 + C22941 * C515 +
                    C51184 * C520 + C22940 * C514 + C51200 * C519) *
                       C1176 -
                   (C22942 * C526 + C22937 * C531 + C22941 * C524 +
                    C51184 * C530 + C22940 * C523 + C51200 * C529) *
                       C1171) *
                      C51041) *
                     C51053 * C50953 * C50941)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C1280 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C1275 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C1281 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C50887) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C1280 +
                   (C23129 + C23130 + C23131) * C1275 -
                   (C23132 + C23133 + C23134) * C1281 -
                   (C23135 + C23136 + C23137) * C50887) *
                      C51041) *
                     C51053 * C50953 * C51202 +
                 (((C23134 + C23133 + C23132) * C1281 -
                   ((C23131 + C23130 + C23129) * C1275 +
                    (C23128 + C23127 + C23126) * C1280) +
                   (C23137 + C23136 + C23135) * C50887) *
                      C22938 +
                  ((C23460 + C23461 + C23462) * C1281 -
                   ((C23463 + C23464 + C23465) * C1275 +
                    (C23466 + C23467 + C23468) * C1280) +
                   (C23469 + C23470 + C23471) * C50887) *
                      C51041) *
                     C51053 * C50953 * C51190 +
                 (((C23468 + C23467 + C23466) * C1280 +
                   (C23465 + C23464 + C23463) * C1275 -
                   (C23462 + C23461 + C23460) * C1281 -
                   (C23471 + C23470 + C23469) * C50887) *
                      C22938 +
                  ((C23582 + C23583 + C23584) * C1280 +
                   (C23585 + C23586 + C23587) * C1275 -
                   (C22942 * C604 + C22937 * C612 + C22941 * C605 +
                    C51184 * C613 + C22940 * C606 + C51200 * C614) *
                       C1281 -
                   (C22942 * C608 + C22937 * C616 + C22941 * C609 +
                    C51184 * C617 + C22940 * C610 + C51200 * C618) *
                       C50887) *
                      C51041) *
                     C51053 * C50953 * C1279)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C1280 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C1275 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C1281 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C50887) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C1280 +
                    (C23129 + C23130 + C23131) * C1275 -
                    (C23132 + C23133 + C23134) * C1281 -
                    (C23135 + C23136 + C23137) * C50887) *
                       C51041) *
                      C51053 * C51158 +
                  (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                     C51184 * C390 + C22942 * C385 + C22937 * C391) *
                        C1281 -
                    ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                      C51184 * C403 + C22940 * C396 + C51200 * C404) *
                         C1275 +
                     (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                      C51184 * C389 + C22940 * C387 + C51200 * C397) *
                         C1280) +
                    (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                     C51184 * C402 + C22942 * C393 + C22937 * C401) *
                        C50887) *
                       C22938 +
                   ((C24676 + C24677 + C24678) * C1281 -
                    ((C23758 + C23759 + C23760) * C1275 +
                     (C23761 + C23762 + C23763) * C1280) +
                    (C24679 + C24680 + C24681) * C50887) *
                       C51041) *
                      C51053 * C50965) *
                     C1172 +
                 ((((C23134 + C23133 + C23132) * C1281 -
                    ((C23131 + C23130 + C23129) * C1275 +
                     (C23128 + C23127 + C23126) * C1280) +
                    (C23137 + C23136 + C23135) * C50887) *
                       C22938 +
                   ((C23460 + C23461 + C23462) * C1281 -
                    ((C23463 + C23464 + C23465) * C1275 +
                     (C23466 + C23467 + C23468) * C1280) +
                    (C23469 + C23470 + C23471) * C50887) *
                       C51041) *
                      C51053 * C51158 +
                  (((C23763 + C23762 + C23761) * C1280 +
                    (C23760 + C23759 + C23758) * C1275 -
                    (C24678 + C24677 + C24676) * C1281 -
                    (C24681 + C24680 + C24679) * C50887) *
                       C22938 +
                   ((C23764 + C23765 + C23766) * C1280 +
                    (C23767 + C23768 + C23769) * C1275 -
                    (C22942 * C722 + C22937 * C738 + C22941 * C723 +
                     C51184 * C739 + C22940 * C724 + C51200 * C740) *
                        C1281 -
                    (C22942 * C734 + C22937 * C746 + C22941 * C735 +
                     C51184 * C747 + C22940 * C736 + C51200 * C748) *
                        C50887) *
                       C51041) *
                      C51053 * C50965) *
                     C50941)) /
               (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C50007 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C51149 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C50000 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C50887) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C50007 +
                    (C23129 + C23130 + C23131) * C51149 -
                    (C23132 + C23133 + C23134) * C50000 -
                    (C23135 + C23136 + C23137) * C50887) *
                       C51041) *
                      C51053 * C1514 +
                  (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                     C51184 * C390 + C22942 * C385 + C22937 * C391) *
                        C50000 -
                    ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                      C51184 * C403 + C22940 * C396 + C51200 * C404) *
                         C51149 +
                     (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                      C51184 * C389 + C22940 * C387 + C51200 * C397) *
                         C50007) +
                    (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                     C51184 * C402 + C22942 * C393 + C22937 * C401) *
                        C50887) *
                       C22938 +
                   ((C24676 + C24677 + C24678) * C50000 -
                    ((C23758 + C23759 + C23760) * C51149 +
                     (C23761 + C23762 + C23763) * C50007) +
                    (C24679 + C24680 + C24681) * C50887) *
                       C51041) *
                      C51053 * C50965) *
                     C1172 +
                 ((((C23134 + C23133 + C23132) * C50000 -
                    ((C23131 + C23130 + C23129) * C51149 +
                     (C23128 + C23127 + C23126) * C50007) +
                    (C23137 + C23136 + C23135) * C50887) *
                       C22938 +
                   ((C23460 + C23461 + C23462) * C50000 -
                    ((C23463 + C23464 + C23465) * C51149 +
                     (C23466 + C23467 + C23468) * C50007) +
                    (C23469 + C23470 + C23471) * C50887) *
                       C51041) *
                      C51053 * C1514 +
                  (((C23763 + C23762 + C23761) * C50007 +
                    (C23760 + C23759 + C23758) * C51149 -
                    (C24678 + C24677 + C24676) * C50000 -
                    (C24681 + C24680 + C24679) * C50887) *
                       C22938 +
                   ((C23764 + C23765 + C23766) * C50007 +
                    (C23767 + C23768 + C23769) * C51149 -
                    (C22942 * C722 + C22937 * C738 + C22941 * C723 +
                     C51184 * C739 + C22940 * C724 + C51200 * C740) *
                        C50000 -
                    (C22942 * C734 + C22937 * C746 + C22941 * C735 +
                     C51184 * C747 + C22940 * C736 + C51200 * C748) *
                        C50887) *
                       C51041) *
                      C51053 * C50965) *
                     C50941)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C603 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C50882) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C603 +
                    (C23129 + C23130 + C23131) * C50882) *
                       C51041) *
                      C51053 * C1514 -
                  (((C23758 + C23759 + C23760) * C50882 +
                    (C23761 + C23762 + C23763) * C603) *
                       C51041 +
                   ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                     C51184 * C403 + C22940 * C396 + C51200 * C404) *
                        C50882 +
                    (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                     C51184 * C389 + C22940 * C387 + C51200 * C397) *
                        C603) *
                       C22938) *
                      C51053 * C50965) *
                     C51202 +
                 ((((C23763 + C23762 + C23761) * C603 +
                    (C23760 + C23759 + C23758) * C50882) *
                       C22938 +
                   ((C23764 + C23765 + C23766) * C603 +
                    (C23767 + C23768 + C23769) * C50882) *
                       C51041) *
                      C51053 * C50965 -
                  (((C23463 + C23464 + C23465) * C50882 +
                    (C23466 + C23467 + C23468) * C603) *
                       C51041 +
                   ((C23131 + C23130 + C23129) * C50882 +
                    (C23128 + C23127 + C23126) * C603) *
                       C22938) *
                      C51053 * C1514) *
                     C51190 +
                 ((((C23468 + C23467 + C23466) * C603 +
                    (C23465 + C23464 + C23463) * C50882) *
                       C22938 +
                   ((C23582 + C23583 + C23584) * C603 +
                    (C23585 + C23586 + C23587) * C50882) *
                       C51041) *
                      C51053 * C1514 -
                  (((C22942 * C2984 + C22937 * C2990 + C22941 * C2985 +
                     C51184 * C2991 + C22940 * C2986 + C51200 * C2992) *
                        C50882 +
                    (C22942 * C2981 + C22937 * C2987 + C22941 * C2982 +
                     C51184 * C2988 + C22940 * C2983 + C51200 * C2989) *
                        C603) *
                       C51041 +
                   ((C23769 + C23768 + C23767) * C50882 +
                    (C23766 + C23765 + C23764) * C603) *
                       C22938) *
                      C51053 * C50965) *
                     C1279)) /
               (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C603 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C50882) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C603 +
                    (C23129 + C23130 + C23131) * C50882) *
                       C51041) *
                      C51053 * C51203 -
                  (((C23758 + C23759 + C23760) * C50882 +
                    (C23761 + C23762 + C23763) * C603) *
                       C51041 +
                   ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                     C51184 * C403 + C22940 * C396 + C51200 * C404) *
                        C50882 +
                    (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                     C51184 * C389 + C22940 * C387 + C51200 * C397) *
                        C603) *
                       C22938) *
                      C51053 * C51193 +
                  (((C22940 * C851 + C51200 * C856 + C22941 * C852 +
                     C51184 * C857 + C22942 * C853 + C22937 * C858) *
                        C603 +
                    (C22940 * C860 + C51200 * C866 + C22941 * C861 +
                     C51184 * C867 + C22942 * C862 + C22937 * C868) *
                        C50882) *
                       C22938 +
                   ((C24074 + C24075 + C24076) * C603 +
                    (C24077 + C24078 + C24079) * C50882) *
                       C51041) *
                      C51053 * C1746) *
                     C1172 +
                 ((((C23763 + C23762 + C23761) * C603 +
                    (C23760 + C23759 + C23758) * C50882) *
                       C22938 +
                   ((C23764 + C23765 + C23766) * C603 +
                    (C23767 + C23768 + C23769) * C50882) *
                       C51041) *
                      C51053 * C51193 -
                  (((C23463 + C23464 + C23465) * C50882 +
                    (C23466 + C23467 + C23468) * C603) *
                       C51041 +
                   ((C23131 + C23130 + C23129) * C50882 +
                    (C23128 + C23127 + C23126) * C603) *
                       C22938) *
                      C51053 * C51203 -
                  (((C22942 * C3324 + C22937 * C3330 + C22941 * C3325 +
                     C51184 * C3331 + C22940 * C3326 + C51200 * C3332) *
                        C50882 +
                    (C22942 * C3321 + C22937 * C3327 + C22941 * C3322 +
                     C51184 * C3328 + C22940 * C3323 + C51200 * C3329) *
                        C603) *
                       C51041 +
                   ((C24079 + C24078 + C24077) * C50882 +
                    (C24076 + C24075 + C24074) * C603) *
                       C22938) *
                      C51053 * C1746) *
                     C50941)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C50007 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C51149 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C50000 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C50887) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C50007 +
                   (C23129 + C23130 + C23131) * C51149 -
                   (C23132 + C23133 + C23134) * C50000 -
                   (C23135 + C23136 + C23137) * C50887) *
                      C51041) *
                     C51053 * C50953 * C507 +
                 (((C23134 + C23133 + C23132) * C50000 -
                   ((C23131 + C23130 + C23129) * C51149 +
                    (C23128 + C23127 + C23126) * C50007) +
                   (C23137 + C23136 + C23135) * C50887) *
                      C22938 +
                  ((C23460 + C23461 + C23462) * C50000 -
                   ((C23463 + C23464 + C23465) * C51149 +
                    (C23466 + C23467 + C23468) * C50007) +
                   (C23469 + C23470 + C23471) * C50887) *
                      C51041) *
                     C51053 * C50953 * C508 +
                 (((C23468 + C23467 + C23466) * C50007 +
                   (C23465 + C23464 + C23463) * C51149 -
                   (C23462 + C23461 + C23460) * C50000 -
                   (C23471 + C23470 + C23469) * C50887) *
                      C22938 +
                  ((C22940 * C607 + C51200 * C615 + C22941 * C606 +
                    C51184 * C614 + C22942 * C605 + C22937 * C613) *
                       C50007 +
                   (C22940 * C611 + C51200 * C619 + C22941 * C610 +
                    C51184 * C618 + C22942 * C609 + C22937 * C617) *
                       C51149 -
                   (C22942 * C604 + C22937 * C612 + C22941 * C605 +
                    C51184 * C613 + C22940 * C606 + C51200 * C614) *
                       C50000 -
                   (C22942 * C608 + C22937 * C616 + C22941 * C609 +
                    C51184 * C617 + C22940 * C610 + C51200 * C618) *
                       C50887) *
                      C51041) *
                     C51053 * C50953 * C509)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                   C51184 * C133 + C22942 * C127 + C22937 * C134) *
                      C121 +
                  (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                   C51184 * C147 + C22942 * C138 + C22937 * C148) *
                      C109 -
                  (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                   C51184 * C134 + C22940 * C126 + C51200 * C133) *
                      C122 -
                  (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                   C51184 * C148 + C22940 * C137 + C51200 * C147) *
                      C110 +
                  (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                   C51184 * C135 + C22942 * C129 + C22937 * C140) *
                      C123 +
                  (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                   C51184 * C149 + C22942 * C141 + C22937 * C150) *
                      C111 -
                  (C22942 * C130 + C22937 * C142 + C22941 * C129 +
                   C51184 * C140 + C22940 * C128 + C51200 * C135) *
                      C124 -
                  (C22942 * C143 + C22937 * C151 + C22941 * C141 +
                   C51184 * C150 + C22940 * C139 + C51200 * C149) *
                      C112) *
                     C22938 +
                 ((C22940 * C263 + C51200 * C273 + C22941 * C259 +
                   C51184 * C265 + C22942 * C260 + C22937 * C266) *
                      C121 +
                  (C22940 * C272 + C51200 * C280 + C22941 * C271 +
                   C51184 * C279 + C22942 * C270 + C22937 * C278) *
                      C109 -
                  (C22942 * C261 + C22937 * C267 + C22941 * C260 +
                   C51184 * C266 + C22940 * C259 + C51200 * C265) *
                      C122 -
                  (C22942 * C269 + C22937 * C277 + C22941 * C270 +
                   C51184 * C278 + C22940 * C271 + C51200 * C279) *
                      C110 +
                  (C22940 * C260 + C51200 * C266 + C22941 * C261 +
                   C51184 * C267 + C22942 * C262 + C22937 * C268) *
                      C123 +
                  (C22940 * C270 + C51200 * C278 + C22941 * C269 +
                   C51184 * C277 + C22942 * C274 + C22937 * C281) *
                      C111 -
                  (C22942 * C264 + C22937 * C275 + C22941 * C262 +
                   C51184 * C268 + C22940 * C261 + C51200 * C267) *
                      C124 -
                  (C22942 * C276 + C22937 * C282 + C22941 * C274 +
                   C51184 * C281 + C22940 * C269 + C51200 * C277) *
                      C112) *
                     C51041) *
                C51053 * C50953 * C50927) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C50007 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C51149 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C50000 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C50887) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C50007 +
                   (C23129 + C23130 + C23131) * C51149 -
                   (C23132 + C23133 + C23134) * C50000 -
                   (C23135 + C23136 + C23137) * C50887) *
                      C51041) *
                     C51053 * C848 +
                 (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                    C51184 * C390 + C22942 * C385 + C22937 * C391) *
                       C50000 -
                   ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                     C51184 * C403 + C22940 * C396 + C51200 * C404) *
                        C51149 +
                    (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                     C51184 * C389 + C22940 * C387 + C51200 * C397) *
                        C50007) +
                   (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                    C51184 * C402 + C22942 * C393 + C22937 * C401) *
                       C50887) *
                      C22938 +
                  ((C22940 * C719 + C51200 * C727 + C22941 * C720 +
                    C51184 * C728 + C22942 * C721 + C22937 * C729) *
                       C50000 -
                   ((C23758 + C23759 + C23760) * C51149 +
                    (C23761 + C23762 + C23763) * C50007) +
                   (C22940 * C731 + C51200 * C743 + C22941 * C732 +
                    C51184 * C744 + C22942 * C733 + C22937 * C745) *
                       C50887) *
                      C51041) *
                     C51053 * C849 +
                 (((C22940 * C851 + C51200 * C856 + C22941 * C852 +
                    C51184 * C857 + C22942 * C853 + C22937 * C858) *
                       C50007 +
                   (C22940 * C860 + C51200 * C866 + C22941 * C861 +
                    C51184 * C867 + C22942 * C862 + C22937 * C868) *
                       C51149 -
                   (C22942 * C854 + C22937 * C859 + C22941 * C853 +
                    C51184 * C858 + C22940 * C852 + C51200 * C857) *
                       C50000 -
                   (C22942 * C863 + C22937 * C869 + C22941 * C862 +
                    C51184 * C868 + C22940 * C861 + C51200 * C867) *
                       C50887) *
                      C22938 +
                  ((C22940 * C972 + C51200 * C980 + C22941 * C971 +
                    C51184 * C979 + C22942 * C970 + C22937 * C978) *
                       C50007 +
                   (C22940 * C976 + C51200 * C984 + C22941 * C975 +
                    C51184 * C983 + C22942 * C974 + C22937 * C982) *
                       C51149 -
                   (C22942 * C969 + C22937 * C977 + C22941 * C970 +
                    C51184 * C978 + C22940 * C971 + C51200 * C979) *
                       C50000 -
                   (C22942 * C973 + C22937 * C981 + C22941 * C974 +
                    C51184 * C982 + C22940 * C975 + C51200 * C983) *
                       C50887) *
                      C51041) *
                     C51053 * C850) *
                C50927) /
                   (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C603 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C50882) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C603 +
                   (C23129 + C23130 + C23131) * C50882) *
                      C51041) *
                     C51053 * C50953 * C599 -
                 (((C23463 + C23464 + C23465) * C50882 +
                   (C23466 + C23467 + C23468) * C603) *
                      C51041 +
                  ((C23131 + C23130 + C23129) * C50882 +
                   (C23128 + C23127 + C23126) * C603) *
                      C22938) *
                     C51053 * C50953 * C600 +
                 (((C23468 + C23467 + C23466) * C603 +
                   (C23465 + C23464 + C23463) * C50882) *
                      C22938 +
                  ((C23582 + C23583 + C23584) * C603 +
                   (C23585 + C23586 + C23587) * C50882) *
                      C51041) *
                     C51053 * C50953 * C601 -
                 (((C22942 * C2808 + C22937 * C2814 + C22941 * C2809 +
                    C51184 * C2815 + C22940 * C2810 + C51200 * C2816) *
                       C50882 +
                   (C22942 * C2805 + C22937 * C2811 + C22941 * C2806 +
                    C51184 * C2812 + C22940 * C2807 + C51200 * C2813) *
                       C603) *
                      C51041 +
                  ((C23587 + C23586 + C23585) * C50882 +
                   (C23584 + C23583 + C23582) * C603) *
                      C22938) *
                     C51053 * C50953 * C602)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C256 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C251 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C257 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C252 +
                   (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                    C51184 * C135 + C22942 * C129 + C22937 * C140) *
                       C258 +
                   (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                    C51184 * C149 + C22942 * C141 + C22937 * C150) *
                       C253) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C256 +
                   (C23129 + C23130 + C23131) * C251 -
                   (C23132 + C23133 + C23134) * C257 -
                   (C23135 + C23136 + C23137) * C252 +
                   (C23138 + C23139 + C23140) * C258 +
                   (C23141 + C23142 + C23143) * C253) *
                      C51041) *
                     C51053 * C50953 * C51157 +
                 (((C23134 + C23133 + C23132) * C257 -
                   ((C23131 + C23130 + C23129) * C251 +
                    (C23128 + C23127 + C23126) * C256) +
                   (C23137 + C23136 + C23135) * C252 -
                   (C23140 + C23139 + C23138) * C258 -
                   (C23143 + C23142 + C23141) * C253) *
                      C22938 +
                  ((C22940 * C513 + C51200 * C518 + C22941 * C514 +
                    C51184 * C519 + C22942 * C515 + C22937 * C520) *
                       C257 -
                   ((C22942 * C523 + C22937 * C529 + C22941 * C522 +
                     C51184 * C528 + C22940 * C521 + C51200 * C527) *
                        C251 +
                    (C22942 * C514 + C22937 * C519 + C22941 * C513 +
                     C51184 * C518 + C22940 * C512 + C51200 * C517) *
                        C256) +
                   (C22940 * C522 + C51200 * C528 + C22941 * C523 +
                    C51184 * C529 + C22942 * C524 + C22937 * C530) *
                       C252 -
                   (C22942 * C516 + C22937 * C525 + C22941 * C515 +
                    C51184 * C520 + C22940 * C514 + C51200 * C519) *
                       C258 -
                   (C22942 * C526 + C22937 * C531 + C22941 * C524 +
                    C51184 * C530 + C22940 * C523 + C51200 * C529) *
                       C253) *
                      C51041) *
                     C51053 * C50953 * C50941)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C603 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C50882) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C603 +
                    (C23129 + C23130 + C23131) * C50882) *
                       C51041) *
                      C51053 * C848 -
                  (((C23758 + C23759 + C23760) * C50882 +
                    (C23761 + C23762 + C23763) * C603) *
                       C51041 +
                   ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                     C51184 * C403 + C22940 * C396 + C51200 * C404) *
                        C50882 +
                    (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                     C51184 * C389 + C22940 * C387 + C51200 * C397) *
                        C603) *
                       C22938) *
                      C51053 * C849 +
                  (((C22940 * C851 + C51200 * C856 + C22941 * C852 +
                     C51184 * C857 + C22942 * C853 + C22937 * C858) *
                        C603 +
                    (C22940 * C860 + C51200 * C866 + C22941 * C861 +
                     C51184 * C867 + C22942 * C862 + C22937 * C868) *
                        C50882) *
                       C22938 +
                   ((C24074 + C24075 + C24076) * C603 +
                    (C24077 + C24078 + C24079) * C50882) *
                       C51041) *
                      C51053 * C850) *
                     C51157 +
                 ((((C23763 + C23762 + C23761) * C603 +
                    (C23760 + C23759 + C23758) * C50882) *
                       C22938 +
                   ((C23764 + C23765 + C23766) * C603 +
                    (C23767 + C23768 + C23769) * C50882) *
                       C51041) *
                      C51053 * C849 -
                  (((C23463 + C23464 + C23465) * C50882 +
                    (C23466 + C23467 + C23468) * C603) *
                       C51041 +
                   ((C23131 + C23130 + C23129) * C50882 +
                    (C23128 + C23127 + C23126) * C603) *
                       C22938) *
                      C51053 * C848 -
                  (((C22942 * C3324 + C22937 * C3330 + C22941 * C3325 +
                     C51184 * C3331 + C22940 * C3326 + C51200 * C3332) *
                        C50882 +
                    (C22942 * C3321 + C22937 * C3327 + C22941 * C3322 +
                     C51184 * C3328 + C22940 * C3323 + C51200 * C3329) *
                        C603) *
                       C51041 +
                   ((C24079 + C24078 + C24077) * C50882 +
                    (C24076 + C24075 + C24074) * C603) *
                       C22938) *
                      C51053 * C850) *
                     C50941)) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C603 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C50882) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C603 +
                    (C23129 + C23130 + C23131) * C50882) *
                       C51041) *
                      C51053 * C51158 -
                  (((C23758 + C23759 + C23760) * C50882 +
                    (C23761 + C23762 + C23763) * C603) *
                       C51041 +
                   ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                     C51184 * C403 + C22940 * C396 + C51200 * C404) *
                        C50882 +
                    (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                     C51184 * C389 + C22940 * C387 + C51200 * C397) *
                        C603) *
                       C22938) *
                      C51053 * C50965) *
                     C507 +
                 ((((C23763 + C23762 + C23761) * C603 +
                    (C23760 + C23759 + C23758) * C50882) *
                       C22938 +
                   ((C23764 + C23765 + C23766) * C603 +
                    (C23767 + C23768 + C23769) * C50882) *
                       C51041) *
                      C51053 * C50965 -
                  (((C23463 + C23464 + C23465) * C50882 +
                    (C23466 + C23467 + C23468) * C603) *
                       C51041 +
                   ((C23131 + C23130 + C23129) * C50882 +
                    (C23128 + C23127 + C23126) * C603) *
                       C22938) *
                      C51053 * C51158) *
                     C508 +
                 ((((C23468 + C23467 + C23466) * C603 +
                    (C23465 + C23464 + C23463) * C50882) *
                       C22938 +
                   ((C23582 + C23583 + C23584) * C603 +
                    (C23585 + C23586 + C23587) * C50882) *
                       C51041) *
                      C51053 * C51158 -
                  (((C22942 * C2984 + C22937 * C2990 + C22941 * C2985 +
                     C51184 * C2991 + C22940 * C2986 + C51200 * C2992) *
                        C50882 +
                    (C22942 * C2981 + C22937 * C2987 + C22941 * C2982 +
                     C51184 * C2988 + C22940 * C2983 + C51200 * C2989) *
                        C603) *
                       C51041 +
                   ((C23769 + C23768 + C23767) * C50882 +
                    (C23766 + C23765 + C23764) * C603) *
                       C22938) *
                      C51053 * C50965) *
                     C509)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C256 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C251 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C257 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C252 +
                   (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                    C51184 * C135 + C22942 * C129 + C22937 * C140) *
                       C258 +
                   (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                    C51184 * C149 + C22942 * C141 + C22937 * C150) *
                       C253) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C256 +
                   (C23129 + C23130 + C23131) * C251 -
                   (C23132 + C23133 + C23134) * C257 -
                   (C23135 + C23136 + C23137) * C252 +
                   (C23138 + C23139 + C23140) * C258 +
                   (C23141 + C23142 + C23143) * C253) *
                      C51041) *
                     C51053 * C51158 +
                 (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                    C51184 * C390 + C22942 * C385 + C22937 * C391) *
                       C257 -
                   ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                     C51184 * C403 + C22940 * C396 + C51200 * C404) *
                        C251 +
                    (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                     C51184 * C389 + C22940 * C387 + C51200 * C397) *
                        C256) +
                   (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                    C51184 * C402 + C22942 * C393 + C22937 * C401) *
                       C252 -
                   (C22942 * C386 + C22937 * C392 + C22941 * C385 +
                    C51184 * C391 + C22940 * C384 + C51200 * C390) *
                       C258 -
                   (C22942 * C398 + C22937 * C405 + C22941 * C393 +
                    C51184 * C401 + C22940 * C394 + C51200 * C402) *
                       C253) *
                      C22938 +
                  ((C22940 * C719 + C51200 * C727 + C22941 * C720 +
                    C51184 * C728 + C22942 * C721 + C22937 * C729) *
                       C257 -
                   ((C22942 * C732 + C22937 * C744 + C22941 * C731 +
                     C51184 * C743 + C22940 * C730 + C51200 * C742) *
                        C251 +
                    (C22942 * C720 + C22937 * C728 + C22941 * C719 +
                     C51184 * C727 + C22940 * C718 + C51200 * C726) *
                        C256) +
                   (C22940 * C731 + C51200 * C743 + C22941 * C732 +
                    C51184 * C744 + C22942 * C733 + C22937 * C745) *
                       C252 -
                   (C22942 * C1412 + C22937 * C1413 + C22941 * C721 +
                    C51184 * C729 + C22940 * C720 + C51200 * C728) *
                       C258 -
                   (C22942 * C1414 + C22937 * C1415 + C22941 * C733 +
                    C51184 * C745 + C22940 * C732 + C51200 * C744) *
                       C253) *
                      C51041) *
                     C51053 * C50965) *
                C50927) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C603 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C50882) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C603 +
                   (C23129 + C23130 + C23131) * C50882) *
                      C51041) *
                     C51053 * C1051 -
                 (((C23758 + C23759 + C23760) * C50882 +
                   (C23761 + C23762 + C23763) * C603) *
                      C51041 +
                  ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                    C51184 * C403 + C22940 * C396 + C51200 * C404) *
                       C50882 +
                   (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                    C51184 * C389 + C22940 * C387 + C51200 * C397) *
                       C603) *
                      C22938) *
                     C51053 * C1052 +
                 (((C22940 * C851 + C51200 * C856 + C22941 * C852 +
                    C51184 * C857 + C22942 * C853 + C22937 * C858) *
                       C603 +
                   (C22940 * C860 + C51200 * C866 + C22941 * C861 +
                    C51184 * C867 + C22942 * C862 + C22937 * C868) *
                       C50882) *
                      C22938 +
                  ((C24074 + C24075 + C24076) * C603 +
                   (C24077 + C24078 + C24079) * C50882) *
                      C51041) *
                     C51053 * C1053 -
                 (((C22942 * C3452 + C22937 * C3458 + C22941 * C3453 +
                    C51184 * C3459 + C22940 * C3454 + C51200 * C3460) *
                       C50882 +
                   (C22942 * C3449 + C22937 * C3455 + C22941 * C3450 +
                    C51184 * C3456 + C22940 * C3451 + C51200 * C3457) *
                       C603) *
                      C51041 +
                  ((C22942 * C1060 + C22937 * C1068 + C22941 * C1061 +
                    C51184 * C1069 + C22940 * C1062 + C51200 * C1070) *
                       C50882 +
                   (C22942 * C1056 + C22937 * C1064 + C22941 * C1057 +
                    C51184 * C1065 + C22940 * C1058 + C51200 * C1066) *
                       C603) *
                      C22938) *
                     C51053 * C1054) *
                C50927) /
                   (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C1174 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C51201 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C1175 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C51187 +
                   (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                    C51184 * C135 + C22942 * C129 + C22937 * C140) *
                       C1176 +
                   (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                    C51184 * C149 + C22942 * C141 + C22937 * C150) *
                       C1171) *
                      C22938 +
                  ((C23126 + C23127 + C23128) * C1174 +
                   (C23129 + C23130 + C23131) * C51201 -
                   (C23132 + C23133 + C23134) * C1175 -
                   (C23135 + C23136 + C23137) * C51187 +
                   (C23138 + C23139 + C23140) * C1176 +
                   (C23141 + C23142 + C23143) * C1171) *
                      C51041) *
                     C51053 * C1514 +
                 (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                    C51184 * C390 + C22942 * C385 + C22937 * C391) *
                       C1175 -
                   ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                     C51184 * C403 + C22940 * C396 + C51200 * C404) *
                        C51201 +
                    (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                     C51184 * C389 + C22940 * C387 + C51200 * C397) *
                        C1174) +
                   (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                    C51184 * C402 + C22942 * C393 + C22937 * C401) *
                       C51187 -
                   (C22942 * C386 + C22937 * C392 + C22941 * C385 +
                    C51184 * C391 + C22940 * C384 + C51200 * C390) *
                       C1176 -
                   (C22942 * C398 + C22937 * C405 + C22941 * C393 +
                    C51184 * C401 + C22940 * C394 + C51200 * C402) *
                       C1171) *
                      C22938 +
                  ((C24676 + C24677 + C24678) * C1175 -
                   ((C23758 + C23759 + C23760) * C51201 +
                    (C23761 + C23762 + C23763) * C1174) +
                   (C24679 + C24680 + C24681) * C51187 -
                   (C22942 * C1412 + C22937 * C1413 + C22941 * C721 +
                    C51184 * C729 + C22940 * C720 + C51200 * C728) *
                       C1176 -
                   (C22942 * C1414 + C22937 * C1415 + C22941 * C733 +
                    C51184 * C745 + C22940 * C732 + C51200 * C744) *
                       C1171) *
                      C51041) *
                     C51053 * C50965) *
                C50927) /
               (p * q * std::sqrt(p + q));
    d2ee[10] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C1280 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C1275 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C1281 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C50887) *
                        C22938 +
                    ((C23126 + C23127 + C23128) * C1280 +
                     (C23129 + C23130 + C23131) * C1275 -
                     (C23132 + C23133 + C23134) * C1281 -
                     (C23135 + C23136 + C23137) * C50887) *
                        C51041) *
                       C51053 * C1514 +
                   (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                      C51184 * C390 + C22942 * C385 + C22937 * C391) *
                         C1281 -
                     ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                       C51184 * C403 + C22940 * C396 + C51200 * C404) *
                          C1275 +
                      (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                       C51184 * C389 + C22940 * C387 + C51200 * C397) *
                          C1280) +
                     (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                      C51184 * C402 + C22942 * C393 + C22937 * C401) *
                         C50887) *
                        C22938 +
                    ((C24676 + C24677 + C24678) * C1281 -
                     ((C23758 + C23759 + C23760) * C1275 +
                      (C23761 + C23762 + C23763) * C1280) +
                     (C24679 + C24680 + C24681) * C50887) *
                        C51041) *
                       C51053 * C50965) *
                      C51157 +
                  ((((C23134 + C23133 + C23132) * C1281 -
                     ((C23131 + C23130 + C23129) * C1275 +
                      (C23128 + C23127 + C23126) * C1280) +
                     (C23137 + C23136 + C23135) * C50887) *
                        C22938 +
                    ((C23460 + C23461 + C23462) * C1281 -
                     ((C23463 + C23464 + C23465) * C1275 +
                      (C23466 + C23467 + C23468) * C1280) +
                     (C23469 + C23470 + C23471) * C50887) *
                        C51041) *
                       C51053 * C1514 +
                   (((C23763 + C23762 + C23761) * C1280 +
                     (C23760 + C23759 + C23758) * C1275 -
                     (C24678 + C24677 + C24676) * C1281 -
                     (C24681 + C24680 + C24679) * C50887) *
                        C22938 +
                    ((C23764 + C23765 + C23766) * C1280 +
                     (C23767 + C23768 + C23769) * C1275 -
                     (C22942 * C722 + C22937 * C738 + C22941 * C723 +
                      C51184 * C739 + C22940 * C724 + C51200 * C740) *
                         C1281 -
                     (C22942 * C734 + C22937 * C746 + C22941 * C735 +
                      C51184 * C747 + C22940 * C736 + C51200 * C748) *
                         C50887) *
                        C51041) *
                       C51053 * C50965) *
                      C50941)) /
                (p * q * std::sqrt(p + q));
    d2ee[11] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C1280 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C1275 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C1281 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C50887) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C1280 +
                    (C23129 + C23130 + C23131) * C1275 -
                    (C23132 + C23133 + C23134) * C1281 -
                    (C23135 + C23136 + C23137) * C50887) *
                       C51041) *
                      C51053 * C51203 +
                  (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                     C51184 * C390 + C22942 * C385 + C22937 * C391) *
                        C1281 -
                    ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                      C51184 * C403 + C22940 * C396 + C51200 * C404) *
                         C1275 +
                     (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                      C51184 * C389 + C22940 * C387 + C51200 * C397) *
                         C1280) +
                    (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                     C51184 * C402 + C22942 * C393 + C22937 * C401) *
                        C50887) *
                       C22938 +
                   ((C24676 + C24677 + C24678) * C1281 -
                    ((C23758 + C23759 + C23760) * C1275 +
                     (C23761 + C23762 + C23763) * C1280) +
                    (C24679 + C24680 + C24681) * C50887) *
                       C51041) *
                      C51053 * C51193 +
                  (((C22940 * C851 + C51200 * C856 + C22941 * C852 +
                     C51184 * C857 + C22942 * C853 + C22937 * C858) *
                        C1280 +
                    (C22940 * C860 + C51200 * C866 + C22941 * C861 +
                     C51184 * C867 + C22942 * C862 + C22937 * C868) *
                        C1275 -
                    (C22942 * C854 + C22937 * C859 + C22941 * C853 +
                     C51184 * C858 + C22940 * C852 + C51200 * C857) *
                        C1281 -
                    (C22942 * C863 + C22937 * C869 + C22941 * C862 +
                     C51184 * C868 + C22940 * C861 + C51200 * C867) *
                        C50887) *
                       C22938 +
                   ((C24074 + C24075 + C24076) * C1280 +
                    (C24077 + C24078 + C24079) * C1275 -
                    (C22942 * C969 + C22937 * C977 + C22941 * C970 +
                     C51184 * C978 + C22940 * C971 + C51200 * C979) *
                        C1281 -
                    (C22942 * C973 + C22937 * C981 + C22941 * C974 +
                     C51184 * C982 + C22940 * C975 + C51200 * C983) *
                        C50887) *
                       C51041) *
                      C51053 * C1746) *
                 C50927) /
                (p * q * std::sqrt(p + q));
    d2ee[12] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                    C51184 * C133 + C22942 * C127 + C22937 * C134) *
                       C121 +
                   (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                    C51184 * C147 + C22942 * C138 + C22937 * C148) *
                       C109 -
                   (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                    C51184 * C134 + C22940 * C126 + C51200 * C133) *
                       C122 -
                   (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                    C51184 * C148 + C22940 * C137 + C51200 * C147) *
                       C110 +
                   (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                    C51184 * C135 + C22942 * C129 + C22937 * C140) *
                       C123 +
                   (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                    C51184 * C149 + C22942 * C141 + C22937 * C150) *
                       C111 -
                   (C22942 * C130 + C22937 * C142 + C22941 * C129 +
                    C51184 * C140 + C22940 * C128 + C51200 * C135) *
                       C124 -
                   (C22942 * C143 + C22937 * C151 + C22941 * C141 +
                    C51184 * C150 + C22940 * C139 + C51200 * C149) *
                       C112) *
                      C22938 +
                  ((C22940 * C263 + C51200 * C273 + C22941 * C259 +
                    C51184 * C265 + C22942 * C260 + C22937 * C266) *
                       C121 +
                   (C22940 * C272 + C51200 * C280 + C22941 * C271 +
                    C51184 * C279 + C22942 * C270 + C22937 * C278) *
                       C109 -
                   (C22942 * C261 + C22937 * C267 + C22941 * C260 +
                    C51184 * C266 + C22940 * C259 + C51200 * C265) *
                       C122 -
                   (C22942 * C269 + C22937 * C277 + C22941 * C270 +
                    C51184 * C278 + C22940 * C271 + C51200 * C279) *
                       C110 +
                   (C22940 * C260 + C51200 * C266 + C22941 * C261 +
                    C51184 * C267 + C22942 * C262 + C22937 * C268) *
                       C123 +
                   (C22940 * C270 + C51200 * C278 + C22941 * C269 +
                    C51184 * C277 + C22942 * C274 + C22937 * C281) *
                       C111 -
                   (C22942 * C264 + C22937 * C275 + C22941 * C262 +
                    C51184 * C268 + C22940 * C261 + C51200 * C267) *
                       C124 -
                   (C22942 * C276 + C22937 * C282 + C22941 * C274 +
                    C51184 * C281 + C22940 * C269 + C51200 * C277) *
                       C112) *
                      C51041) *
                 C51053 * C50953 * C50927) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C50007 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C51149 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C50000 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C50887) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C50007 +
                    (C23129 + C23130 + C23131) * C51149 -
                    (C23132 + C23133 + C23134) * C50000 -
                    (C23135 + C23136 + C23137) * C50887) *
                       C51041) *
                      C51053 * C50953 * C507 +
                  (((C23134 + C23133 + C23132) * C50000 -
                    ((C23131 + C23130 + C23129) * C51149 +
                     (C23128 + C23127 + C23126) * C50007) +
                    (C23137 + C23136 + C23135) * C50887) *
                       C22938 +
                   ((C23460 + C23461 + C23462) * C50000 -
                    ((C23463 + C23464 + C23465) * C51149 +
                     (C23466 + C23467 + C23468) * C50007) +
                    (C23469 + C23470 + C23471) * C50887) *
                       C51041) *
                      C51053 * C50953 * C508 +
                  (((C23468 + C23467 + C23466) * C50007 +
                    (C23465 + C23464 + C23463) * C51149 -
                    (C23462 + C23461 + C23460) * C50000 -
                    (C23471 + C23470 + C23469) * C50887) *
                       C22938 +
                   ((C22940 * C607 + C51200 * C615 + C22941 * C606 +
                     C51184 * C614 + C22942 * C605 + C22937 * C613) *
                        C50007 +
                    (C22940 * C611 + C51200 * C619 + C22941 * C610 +
                     C51184 * C618 + C22942 * C609 + C22937 * C617) *
                        C51149 -
                    (C22942 * C604 + C22937 * C612 + C22941 * C605 +
                     C51184 * C613 + C22940 * C606 + C51200 * C614) *
                        C50000 -
                    (C22942 * C608 + C22937 * C616 + C22941 * C609 +
                     C51184 * C617 + C22940 * C610 + C51200 * C618) *
                        C50887) *
                       C51041) *
                      C51053 * C50953 * C509)) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C256 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C251 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C257 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C252 +
                    (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                     C51184 * C135 + C22942 * C129 + C22937 * C140) *
                        C258 +
                    (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                     C51184 * C149 + C22942 * C141 + C22937 * C150) *
                        C253) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C256 +
                    (C23129 + C23130 + C23131) * C251 -
                    (C23132 + C23133 + C23134) * C257 -
                    (C23135 + C23136 + C23137) * C252 +
                    (C23138 + C23139 + C23140) * C258 +
                    (C23141 + C23142 + C23143) * C253) *
                       C51041) *
                      C51053 * C50953 * C51157 +
                  (((C23134 + C23133 + C23132) * C257 -
                    ((C23131 + C23130 + C23129) * C251 +
                     (C23128 + C23127 + C23126) * C256) +
                    (C23137 + C23136 + C23135) * C252 -
                    (C23140 + C23139 + C23138) * C258 -
                    (C23143 + C23142 + C23141) * C253) *
                       C22938 +
                   ((C22940 * C513 + C51200 * C518 + C22941 * C514 +
                     C51184 * C519 + C22942 * C515 + C22937 * C520) *
                        C257 -
                    ((C22942 * C523 + C22937 * C529 + C22941 * C522 +
                      C51184 * C528 + C22940 * C521 + C51200 * C527) *
                         C251 +
                     (C22942 * C514 + C22937 * C519 + C22941 * C513 +
                      C51184 * C518 + C22940 * C512 + C51200 * C517) *
                         C256) +
                    (C22940 * C522 + C51200 * C528 + C22941 * C523 +
                     C51184 * C529 + C22942 * C524 + C22937 * C530) *
                        C252 -
                    (C22942 * C516 + C22937 * C525 + C22941 * C515 +
                     C51184 * C520 + C22940 * C514 + C51200 * C519) *
                        C258 -
                    (C22942 * C526 + C22937 * C531 + C22941 * C524 +
                     C51184 * C530 + C22940 * C523 + C51200 * C529) *
                        C253) *
                       C51041) *
                      C51053 * C50953 * C50941)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C603 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C50882) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C603 +
                    (C23129 + C23130 + C23131) * C50882) *
                       C51041) *
                      C51053 * C50953 * C599 -
                  (((C23463 + C23464 + C23465) * C50882 +
                    (C23466 + C23467 + C23468) * C603) *
                       C51041 +
                   ((C23131 + C23130 + C23129) * C50882 +
                    (C23128 + C23127 + C23126) * C603) *
                       C22938) *
                      C51053 * C50953 * C600 +
                  (((C23468 + C23467 + C23466) * C603 +
                    (C23465 + C23464 + C23463) * C50882) *
                       C22938 +
                   ((C23582 + C23583 + C23584) * C603 +
                    (C23585 + C23586 + C23587) * C50882) *
                       C51041) *
                      C51053 * C50953 * C601 -
                  (((C22942 * C2808 + C22937 * C2814 + C22941 * C2809 +
                     C51184 * C2815 + C22940 * C2810 + C51200 * C2816) *
                        C50882 +
                    (C22942 * C2805 + C22937 * C2811 + C22941 * C2806 +
                     C51184 * C2812 + C22940 * C2807 + C51200 * C2813) *
                        C603) *
                       C51041 +
                   ((C23587 + C23586 + C23585) * C50882 +
                    (C23584 + C23583 + C23582) * C603) *
                       C22938) *
                      C51053 * C50953 * C602)) /
                    (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C256 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C251 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C257 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C252 +
                    (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                     C51184 * C135 + C22942 * C129 + C22937 * C140) *
                        C258 +
                    (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                     C51184 * C149 + C22942 * C141 + C22937 * C150) *
                        C253) *
                       C22938 +
                   ((C23126 + C23127 + C23128) * C256 +
                    (C23129 + C23130 + C23131) * C251 -
                    (C23132 + C23133 + C23134) * C257 -
                    (C23135 + C23136 + C23137) * C252 +
                    (C23138 + C23139 + C23140) * C258 +
                    (C23141 + C23142 + C23143) * C253) *
                       C51041) *
                      C51053 * C51158 +
                  (((C22940 * C383 + C51200 * C389 + C22941 * C384 +
                     C51184 * C390 + C22942 * C385 + C22937 * C391) *
                        C257 -
                    ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                      C51184 * C403 + C22940 * C396 + C51200 * C404) *
                         C251 +
                     (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                      C51184 * C389 + C22940 * C387 + C51200 * C397) *
                         C256) +
                    (C22940 * C395 + C51200 * C403 + C22941 * C394 +
                     C51184 * C402 + C22942 * C393 + C22937 * C401) *
                        C252 -
                    (C22942 * C386 + C22937 * C392 + C22941 * C385 +
                     C51184 * C391 + C22940 * C384 + C51200 * C390) *
                        C258 -
                    (C22942 * C398 + C22937 * C405 + C22941 * C393 +
                     C51184 * C401 + C22940 * C394 + C51200 * C402) *
                        C253) *
                       C22938 +
                   ((C22940 * C719 + C51200 * C727 + C22941 * C720 +
                     C51184 * C728 + C22942 * C721 + C22937 * C729) *
                        C257 -
                    ((C22942 * C732 + C22937 * C744 + C22941 * C731 +
                      C51184 * C743 + C22940 * C730 + C51200 * C742) *
                         C251 +
                     (C22942 * C720 + C22937 * C728 + C22941 * C719 +
                      C51184 * C727 + C22940 * C718 + C51200 * C726) *
                         C256) +
                    (C22940 * C731 + C51200 * C743 + C22941 * C732 +
                     C51184 * C744 + C22942 * C733 + C22937 * C745) *
                        C252 -
                    (C22942 * C1412 + C22937 * C1413 + C22941 * C721 +
                     C51184 * C729 + C22940 * C720 + C51200 * C728) *
                        C258 -
                    (C22942 * C1414 + C22937 * C1415 + C22941 * C733 +
                     C51184 * C745 + C22940 * C732 + C51200 * C744) *
                        C253) *
                       C51041) *
                      C51053 * C50965) *
                 C50927) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C603 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C50882) *
                        C22938 +
                    ((C23126 + C23127 + C23128) * C603 +
                     (C23129 + C23130 + C23131) * C50882) *
                        C51041) *
                       C51053 * C51158 -
                   (((C23758 + C23759 + C23760) * C50882 +
                     (C23761 + C23762 + C23763) * C603) *
                        C51041 +
                    ((C22942 * C394 + C22937 * C402 + C22941 * C395 +
                      C51184 * C403 + C22940 * C396 + C51200 * C404) *
                         C50882 +
                     (C22942 * C384 + C22937 * C390 + C22941 * C383 +
                      C51184 * C389 + C22940 * C387 + C51200 * C397) *
                         C603) *
                        C22938) *
                       C51053 * C50965) *
                      C507 +
                  ((((C23763 + C23762 + C23761) * C603 +
                     (C23760 + C23759 + C23758) * C50882) *
                        C22938 +
                    ((C23764 + C23765 + C23766) * C603 +
                     (C23767 + C23768 + C23769) * C50882) *
                        C51041) *
                       C51053 * C50965 -
                   (((C23463 + C23464 + C23465) * C50882 +
                     (C23466 + C23467 + C23468) * C603) *
                        C51041 +
                    ((C23131 + C23130 + C23129) * C50882 +
                     (C23128 + C23127 + C23126) * C603) *
                        C22938) *
                       C51053 * C51158) *
                      C508 +
                  ((((C23468 + C23467 + C23466) * C603 +
                     (C23465 + C23464 + C23463) * C50882) *
                        C22938 +
                    ((C23582 + C23583 + C23584) * C603 +
                     (C23585 + C23586 + C23587) * C50882) *
                        C51041) *
                       C51053 * C51158 -
                   (((C22942 * C2984 + C22937 * C2990 + C22941 * C2985 +
                      C51184 * C2991 + C22940 * C2986 + C51200 * C2992) *
                         C50882 +
                     (C22942 * C2981 + C22937 * C2987 + C22941 * C2982 +
                      C51184 * C2988 + C22940 * C2983 + C51200 * C2989) *
                         C603) *
                        C51041 +
                    ((C23769 + C23768 + C23767) * C50882 +
                     (C23766 + C23765 + C23764) * C603) *
                        C22938) *
                       C51053 * C50965) *
                      C509)) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1174 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51201 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1175 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C51187 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C1176 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C1171) *
               C51204 +
           ((C25953 + C25954) * C1174 + (C25955 + C25956) * C51201 -
            (C25957 + C25958) * C1175 - (C25959 + C25960) * C51187 +
            (C25961 + C25962) * C1176 + (C25963 + C25964) * C1171) *
               C51196 +
           (C26269 * C1174 + C26270 * C51201 - C26271 * C1175 -
            C26272 * C51187 + (C25973 + C25974) * C1176 +
            (C25975 + C25976) * C1171) *
               C25755) *
              C51053 * C50953 * C1172 +
          (((C25958 + C25957) * C1175 -
            ((C25956 + C25955) * C51201 + (C25954 + C25953) * C1174) +
            (C25960 + C25959) * C51187 - (C25962 + C25961) * C1176 -
            (C25964 + C25963) * C1171) *
               C51204 +
           ((C25970 + C25969) * C1175 -
            ((C25968 + C25967) * C51201 + (C25966 + C25965) * C1174) +
            (C25972 + C25971) * C51187 - (C25974 + C25973) * C1176 -
            (C25976 + C25975) * C1171) *
               C51196 +
           ((C26293 + C26294) * C1175 - (C26404 * C51201 + C26405 * C1174) +
            (C26299 + C26300) * C51187 -
            (C25757 * C604 + C50868 * C612 + C25756 * C605 + C25751 * C613) *
                C1176 -
            (C25757 * C608 + C50868 * C616 + C25756 * C609 + C25751 * C617) *
                C1171) *
               C25755) *
              C51053 * C50953 * C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1280 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C1275 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1281 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51204 +
           ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
            (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
               C51196 +
           C27321 * C25755) *
              C51053 * C50953 * C51202 +
          (((C25958 + C25957) * C1281 -
            ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
            (C25960 + C25959) * C50887) *
               C51204 +
           ((C25970 + C25969) * C1281 -
            ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
            (C25972 + C25971) * C50887) *
               C51196 +
           ((C26293 + C26294) * C1281 - (C26404 * C1275 + C26405 * C1280) +
            (C26299 + C26300) * C50887) *
               C25755) *
              C51053 * C50953 * C51190 +
          (C27321 * C51204 +
           ((C26298 + C26297) * C1280 + (C26296 + C26295) * C1275 -
            (C26294 + C26293) * C1281 - (C26300 + C26299) * C50887) *
               C51196 +
           ((C26417 + C26418) * C1280 + (C26419 + C26420) * C1275 -
            (C25757 * C2805 + C50868 * C2811 + C25756 * C2806 +
             C25751 * C2812) *
                C1281 -
            (C25757 * C2808 + C50868 * C2814 + C25756 * C2809 +
             C25751 * C2815) *
                C50887) *
               C25755) *
              C51053 * C50953 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51204 +
            ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
             (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                C51196 +
            C27321 * C25755) *
               C51053 * C51158 +
           (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                 C1281 -
             ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                  C1275 +
              (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                  C1280) +
             (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                 C50887) *
                C51204 +
            ((C27532 + C27533) * C1281 -
             ((C26596 + C26597) * C1275 + (C26598 + C26599) * C1280) +
             (C27534 + C27535) * C50887) *
                C51196 +
            ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
             (C27538 + C27539) * C50887) *
                C25755) *
               C51053 * C50965) *
              C1172 +
          ((((C25958 + C25957) * C1281 -
             ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
             (C25960 + C25959) * C50887) *
                C51204 +
            ((C25970 + C25969) * C1281 -
             ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
             (C25972 + C25971) * C50887) *
                C51196 +
            ((C26293 + C26294) * C1281 - (C26404 * C1275 + C26405 * C1280) +
             (C26299 + C26300) * C50887) *
                C25755) *
               C51053 * C51158 +
           (((C26599 + C26598) * C1280 + (C26597 + C26596) * C1275 -
             (C27533 + C27532) * C1281 - (C27535 + C27534) * C50887) *
                C51204 +
            ((C26595 + C26594) * C1280 + (C26593 + C26592) * C1275 -
             (C27537 + C27536) * C1281 - (C27539 + C27538) * C50887) *
                C51196 +
            ((C26600 + C26601) * C1280 + (C26602 + C26603) * C1275 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C1281 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C25755) *
               C51053 * C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51204 +
            ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
             (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                C51196 +
            C26303 * C25755) *
               C51053 * C1514 +
           (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                 C50000 -
             ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                  C51149 +
              (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                  C50007) +
             (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                 C50887) *
                C51204 +
            ((C27532 + C27533) * C50000 -
             ((C26596 + C26597) * C51149 + (C26598 + C26599) * C50007) +
             (C27534 + C27535) * C50887) *
                C51196 +
            ((C27536 + C27537) * C50000 - (C26604 * C51149 + C26605 * C50007) +
             (C27538 + C27539) * C50887) *
                C25755) *
               C51053 * C50965) *
              C1172 +
          ((((C25958 + C25957) * C50000 -
             ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
             (C25960 + C25959) * C50887) *
                C51204 +
            ((C25970 + C25969) * C50000 -
             ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
             (C25972 + C25971) * C50887) *
                C51196 +
            ((C26293 + C26294) * C50000 - (C26404 * C51149 + C26405 * C50007) +
             (C26299 + C26300) * C50887) *
                C25755) *
               C51053 * C1514 +
           (((C26599 + C26598) * C50007 + (C26597 + C26596) * C51149 -
             (C27533 + C27532) * C50000 - (C27535 + C27534) * C50887) *
                C51204 +
            ((C26595 + C26594) * C50007 + (C26593 + C26592) * C51149 -
             (C27537 + C27536) * C50000 - (C27539 + C27538) * C50887) *
                C51196 +
            ((C26600 + C26601) * C50007 + (C26602 + C26603) * C51149 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C50000 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C25755) *
               C51053 * C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51204 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
            C26414 * C25755) *
               C51053 * C1514 -
           (C26608 * C25755 +
            ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C51196 +
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C50882 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C603) *
                C51204) *
               C51053 * C50965) *
              C51202 +
          ((((C26599 + C26598) * C603 + (C26597 + C26596) * C50882) * C51204 +
            ((C26595 + C26594) * C603 + (C26593 + C26592) * C50882) * C51196 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C25755) *
               C51053 * C50965 -
           (C26421 * C25755 +
            ((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51196 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51204) *
               C51053 * C1514) *
              C51190 +
          ((C26414 * C51204 +
            ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51196 +
            ((C26417 + C26418) * C603 + (C26419 + C26420) * C50882) * C25755) *
               C51053 * C1514 -
           (((C25757 * C8611 + C50868 * C8615 + C25756 * C8612 +
              C25751 * C8616) *
                 C50882 +
             (C25757 * C8609 + C50868 * C8613 + C25756 * C8610 +
              C25751 * C8614) *
                 C603) *
                C25755 +
            ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51196 +
            C26608 * C51204) *
               C51053 * C50965) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51204 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
            C26414 * C25755) *
               C51053 * C51203 -
           (C26608 * C25755 +
            ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C51196 +
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C50882 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C603) *
                C51204) *
               C51053 * C51193 +
           (((C25756 * C851 + C25751 * C856 + C25757 * C852 + C50868 * C857) *
                 C603 +
             (C25756 * C860 + C25751 * C866 + C25757 * C861 + C50868 * C867) *
                 C50882) *
                C51204 +
            ((C26917 + C26918) * C603 + (C26919 + C26920) * C50882) * C51196 +
            ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C25755) *
               C51053 * C1746) *
              C1172 +
          ((((C26599 + C26598) * C603 + (C26597 + C26596) * C50882) * C51204 +
            ((C26595 + C26594) * C603 + (C26593 + C26592) * C50882) * C51196 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C25755) *
               C51053 * C51193 -
           (C26421 * C25755 +
            ((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51196 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51204) *
               C51053 * C51203 -
           (((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
              C25751 * C8957) *
                 C50882 +
             (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
              C25751 * C8955) *
                 C603) *
                C25755 +
            ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51196 +
            ((C26920 + C26919) * C50882 + (C26918 + C26917) * C603) * C51204) *
               C51053 * C1746) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C50007 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51149 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C50000 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51204 +
           ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
            (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
               C51196 +
           C26303 * C25755) *
              C51053 * C50953 * C507 +
          (((C25958 + C25957) * C50000 -
            ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
            (C25960 + C25959) * C50887) *
               C51204 +
           ((C25970 + C25969) * C50000 -
            ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
            (C25972 + C25971) * C50887) *
               C51196 +
           ((C26293 + C26294) * C50000 -
            ((C26295 + C26296) * C51149 + (C26297 + C26298) * C50007) +
            (C26299 + C26300) * C50887) *
               C25755) *
              C51053 * C50953 * C508 +
          (C26303 * C51204 +
           ((C26298 + C26297) * C50007 + (C26296 + C26295) * C51149 -
            (C26294 + C26293) * C50000 - (C26300 + C26299) * C50887) *
               C51196 +
           ((C25756 * C2807 + C25751 * C2813 + C25757 * C2806 +
             C50868 * C2812) *
                C50007 +
            (C25756 * C2810 + C25751 * C2816 + C25757 * C2809 +
             C50868 * C2815) *
                C51149 -
            (C25757 * C2805 + C50868 * C2811 + C25756 * C2806 +
             C25751 * C2812) *
                C50000 -
            (C25757 * C2808 + C50868 * C2814 + C25756 * C2809 +
             C25751 * C2815) *
                C50887) *
               C25755) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
               C121 +
           (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
               C109 -
           (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
               C122 -
           (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
               C110 +
           (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
               C123 +
           (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
               C111 -
           (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
               C124 -
           (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
               C112) *
              C51204 +
          ((C25756 * C263 + C25751 * C273 + C25757 * C259 + C50868 * C265) *
               C121 +
           (C25756 * C272 + C25751 * C280 + C25757 * C271 + C50868 * C279) *
               C109 -
           (C25757 * C260 + C50868 * C266 + C25756 * C259 + C25751 * C265) *
               C122 -
           (C25757 * C270 + C50868 * C278 + C25756 * C271 + C25751 * C279) *
               C110 +
           (C25756 * C260 + C25751 * C266 + C25757 * C261 + C50868 * C267) *
               C123 +
           (C25756 * C270 + C25751 * C278 + C25757 * C269 + C50868 * C277) *
               C111 -
           (C25757 * C262 + C50868 * C268 + C25756 * C261 + C25751 * C267) *
               C124 -
           (C25757 * C274 + C50868 * C281 + C25756 * C269 + C25751 * C277) *
               C112) *
              C51196 +
          ((C25756 * C512 + C25751 * C517 + C25757 * C513 + C50868 * C518) *
               C121 +
           (C25756 * C521 + C25751 * C527 + C25757 * C522 + C50868 * C528) *
               C109 -
           (C25757 * C514 + C50868 * C519 + C25756 * C513 + C25751 * C518) *
               C122 -
           (C25757 * C523 + C50868 * C529 + C25756 * C522 + C25751 * C528) *
               C110 +
           (C25756 * C514 + C25751 * C519 + C25757 * C515 + C50868 * C520) *
               C123 +
           (C25756 * C523 + C25751 * C529 + C25757 * C524 + C50868 * C530) *
               C111 -
           (C25757 * C516 + C50868 * C525 + C25756 * C515 + C25751 * C520) *
               C124 -
           (C25757 * C526 + C50868 * C531 + C25756 * C524 + C25751 * C530) *
               C112) *
              C25755) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C50007 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51149 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C50000 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51204 +
           ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
            (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
               C51196 +
           C26303 * C25755) *
              C51053 * C848 +
          (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                C50000 -
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C51149 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C50007) +
            (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                C50887) *
               C51204 +
           ((C25756 * C719 + C25751 * C727 + C25757 * C720 + C50868 * C728) *
                C50000 -
            ((C26596 + C26597) * C51149 + (C26598 + C26599) * C50007) +
            (C25756 * C731 + C25751 * C743 + C25757 * C732 + C50868 * C744) *
                C50887) *
               C51196 +
           ((C25756 * C724 + C25751 * C740 + C25757 * C723 + C50868 * C739) *
                C50000 -
            (C26604 * C51149 + C26605 * C50007) +
            (C25756 * C736 + C25751 * C748 + C25757 * C735 + C50868 * C747) *
                C50887) *
               C25755) *
              C51053 * C849 +
          (((C25756 * C851 + C25751 * C856 + C25757 * C852 + C50868 * C857) *
                C50007 +
            (C25756 * C860 + C25751 * C866 + C25757 * C861 + C50868 * C867) *
                C51149 -
            (C25757 * C853 + C50868 * C858 + C25756 * C852 + C25751 * C857) *
                C50000 -
            (C25757 * C862 + C50868 * C868 + C25756 * C861 + C25751 * C867) *
                C50887) *
               C51204 +
           ((C25756 * C972 + C25751 * C980 + C25757 * C971 + C50868 * C979) *
                C50007 +
            (C25756 * C976 + C25751 * C984 + C25757 * C975 + C50868 * C983) *
                C51149 -
            (C25757 * C970 + C50868 * C978 + C25756 * C971 + C25751 * C979) *
                C50000 -
            (C25757 * C974 + C50868 * C982 + C25756 * C975 + C25751 * C983) *
                C50887) *
               C51196 +
           ((C25756 * C3323 + C25751 * C3329 + C25757 * C3322 +
             C50868 * C3328) *
                C50007 +
            (C25756 * C3326 + C25751 * C3332 + C25757 * C3325 +
             C50868 * C3331) *
                C51149 -
            (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
             C25751 * C3328) *
                C50000 -
            (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
             C25751 * C3331) *
                C50887) *
               C25755) *
              C51053 * C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C603 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C50882) *
               C51204 +
           ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
           C26414 * C25755) *
              C51053 * C50953 * C599 -
          (C26421 * C25755 +
           ((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51196 +
           ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51204) *
              C51053 * C50953 * C600 +
          (C26414 * C51204 +
           ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51196 +
           ((C26417 + C26418) * C603 + (C26419 + C26420) * C50882) * C25755) *
              C51053 * C50953 * C601 -
          (((C25757 * C8437 + C50868 * C8441 + C25756 * C8438 +
             C25751 * C8442) *
                C50882 +
            (C25757 * C8435 + C50868 * C8439 + C25756 * C8436 +
             C25751 * C8440) *
                C603) *
               C25755 +
           ((C26420 + C26419) * C50882 + (C26418 + C26417) * C603) * C51196 +
           C26421 * C51204) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51204 +
           ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
            (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
            (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
               C51196 +
           ((C25965 + C25966) * C256 + (C25967 + C25968) * C251 -
            (C25969 + C25970) * C257 - (C25971 + C25972) * C252 +
            (C25973 + C25974) * C258 + (C25975 + C25976) * C253) *
               C25755) *
              C51053 * C50953 * C51157 +
          (((C25958 + C25957) * C257 -
            ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
            (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
            (C25964 + C25963) * C253) *
               C51204 +
           ((C25970 + C25969) * C257 -
            ((C25968 + C25967) * C251 + (C25966 + C25965) * C256) +
            (C25972 + C25971) * C252 - (C25974 + C25973) * C258 -
            (C25976 + C25975) * C253) *
               C51196 +
           ((C25756 * C606 + C25751 * C614 + C25757 * C605 + C50868 * C613) *
                C257 -
            ((C25757 * C610 + C50868 * C618 + C25756 * C611 + C25751 * C619) *
                 C251 +
             (C25757 * C606 + C50868 * C614 + C25756 * C607 + C25751 * C615) *
                 C256) +
            (C25756 * C610 + C25751 * C618 + C25757 * C609 + C50868 * C617) *
                C252 -
            (C25757 * C604 + C50868 * C612 + C25756 * C605 + C25751 * C613) *
                C258 -
            (C25757 * C608 + C50868 * C616 + C25756 * C609 + C25751 * C617) *
                C253) *
               C25755) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51204 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
            C26414 * C25755) *
               C51053 * C848 -
           (C26608 * C25755 +
            ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C51196 +
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C50882 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C603) *
                C51204) *
               C51053 * C849 +
           (((C25756 * C851 + C25751 * C856 + C25757 * C852 + C50868 * C857) *
                 C603 +
             (C25756 * C860 + C25751 * C866 + C25757 * C861 + C50868 * C867) *
                 C50882) *
                C51204 +
            ((C26917 + C26918) * C603 + (C26919 + C26920) * C50882) * C51196 +
            ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C25755) *
               C51053 * C850) *
              C51157 +
          ((((C26599 + C26598) * C603 + (C26597 + C26596) * C50882) * C51204 +
            ((C26595 + C26594) * C603 + (C26593 + C26592) * C50882) * C51196 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C25755) *
               C51053 * C849 -
           (C26421 * C25755 +
            ((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51196 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51204) *
               C51053 * C848 -
           (((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
              C25751 * C8957) *
                 C50882 +
             (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
              C25751 * C8955) *
                 C603) *
                C25755 +
            ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51196 +
            ((C26920 + C26919) * C50882 + (C26918 + C26917) * C603) * C51204) *
               C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51204 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
            C26414 * C25755) *
               C51053 * C51158 -
           (C26608 * C25755 +
            ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C51196 +
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C50882 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C603) *
                C51204) *
               C51053 * C50965) *
              C507 +
          ((((C26599 + C26598) * C603 + (C26597 + C26596) * C50882) * C51204 +
            ((C26595 + C26594) * C603 + (C26593 + C26592) * C50882) * C51196 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C25755) *
               C51053 * C50965 -
           (C26421 * C25755 +
            ((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51196 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51204) *
               C51053 * C51158) *
              C508 +
          ((C26414 * C51204 +
            ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51196 +
            ((C26417 + C26418) * C603 + (C26419 + C26420) * C50882) * C25755) *
               C51053 * C51158 -
           (((C25757 * C8611 + C50868 * C8615 + C25756 * C8612 +
              C25751 * C8616) *
                 C50882 +
             (C25757 * C8609 + C50868 * C8613 + C25756 * C8610 +
              C25751 * C8614) *
                 C603) *
                C25755 +
            ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51196 +
            C26608 * C51204) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51204 +
           ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
            (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
            (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
               C51196 +
           ((C25965 + C25966) * C256 + (C25967 + C25968) * C251 -
            (C25969 + C25970) * C257 - (C25971 + C25972) * C252 +
            (C25973 + C25974) * C258 + (C25975 + C25976) * C253) *
               C25755) *
              C51053 * C51158 +
          (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                C257 -
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C251 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C256) +
            (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                C252 -
            (C25757 * C385 + C50868 * C391 + C25756 * C384 + C25751 * C390) *
                C258 -
            (C25757 * C393 + C50868 * C401 + C25756 * C394 + C25751 * C402) *
                C253) *
               C51204 +
           ((C25756 * C719 + C25751 * C727 + C25757 * C720 + C50868 * C728) *
                C257 -
            ((C25757 * C731 + C50868 * C743 + C25756 * C730 + C25751 * C742) *
                 C251 +
             (C25757 * C719 + C50868 * C727 + C25756 * C718 + C25751 * C726) *
                 C256) +
            (C25756 * C731 + C25751 * C743 + C25757 * C732 + C50868 * C744) *
                C252 -
            (C25757 * C721 + C50868 * C729 + C25756 * C720 + C25751 * C728) *
                C258 -
            (C25757 * C733 + C50868 * C745 + C25756 * C732 + C25751 * C744) *
                C253) *
               C51196 +
           ((C25756 * C724 + C25751 * C740 + C25757 * C723 + C50868 * C739) *
                C257 -
            ((C25757 * C736 + C50868 * C748 + C25756 * C737 + C25751 * C749) *
                 C251 +
             (C25757 * C724 + C50868 * C740 + C25756 * C725 + C25751 * C741) *
                 C256) +
            (C25756 * C736 + C25751 * C748 + C25757 * C735 + C50868 * C747) *
                C252 -
            (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                C258 -
            (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                C253) *
               C25755) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C603 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C50882) *
               C51204 +
           ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
           C26414 * C25755) *
              C51053 * C1051 -
          (C26608 * C25755 +
           ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C51196 +
           ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                C50882 +
            (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                C603) *
               C51204) *
              C51053 * C1052 +
          (((C25756 * C851 + C25751 * C856 + C25757 * C852 + C50868 * C857) *
                C603 +
            (C25756 * C860 + C25751 * C866 + C25757 * C861 + C50868 * C867) *
                C50882) *
               C51204 +
           ((C26917 + C26918) * C603 + (C26919 + C26920) * C50882) * C51196 +
           ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C25755) *
              C51053 * C1053 -
          (((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
             C25751 * C9087) *
                C50882 +
            (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
             C25751 * C9085) *
                C603) *
               C25755 +
           ((C25757 * C3453 + C50868 * C3459 + C25756 * C3454 +
             C25751 * C3460) *
                C50882 +
            (C25757 * C3450 + C50868 * C3456 + C25756 * C3451 +
             C25751 * C3457) *
                C603) *
               C51196 +
           ((C25757 * C1061 + C50868 * C1069 + C25756 * C1062 +
             C25751 * C1070) *
                C50882 +
            (C25757 * C1057 + C50868 * C1065 + C25756 * C1058 +
             C25751 * C1066) *
                C603) *
               C51204) *
              C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1174 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51201 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1175 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C51187 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C1176 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C1171) *
               C51204 +
           ((C25953 + C25954) * C1174 + (C25955 + C25956) * C51201 -
            (C25957 + C25958) * C1175 - (C25959 + C25960) * C51187 +
            (C25961 + C25962) * C1176 + (C25963 + C25964) * C1171) *
               C51196 +
           (C26269 * C1174 + C26270 * C51201 - C26271 * C1175 -
            C26272 * C51187 + (C25973 + C25974) * C1176 +
            (C25975 + C25976) * C1171) *
               C25755) *
              C51053 * C1514 +
          (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                C1175 -
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C51201 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C1174) +
            (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                C51187 -
            (C25757 * C385 + C50868 * C391 + C25756 * C384 + C25751 * C390) *
                C1176 -
            (C25757 * C393 + C50868 * C401 + C25756 * C394 + C25751 * C402) *
                C1171) *
               C51204 +
           ((C27532 + C27533) * C1175 -
            ((C26596 + C26597) * C51201 + (C26598 + C26599) * C1174) +
            (C27534 + C27535) * C51187 -
            (C25757 * C721 + C50868 * C729 + C25756 * C720 + C25751 * C728) *
                C1176 -
            (C25757 * C733 + C50868 * C745 + C25756 * C732 + C25751 * C744) *
                C1171) *
               C51196 +
           ((C27536 + C27537) * C1175 - (C26604 * C51201 + C26605 * C1174) +
            (C27538 + C27539) * C51187 -
            (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                C1176 -
            (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                C1171) *
               C25755) *
              C51053 * C50965) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51204 +
            ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
             (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                C51196 +
            C27321 * C25755) *
               C51053 * C1514 +
           (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                 C1281 -
             ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                  C1275 +
              (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                  C1280) +
             (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                 C50887) *
                C51204 +
            ((C27532 + C27533) * C1281 -
             ((C26596 + C26597) * C1275 + (C26598 + C26599) * C1280) +
             (C27534 + C27535) * C50887) *
                C51196 +
            ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
             (C27538 + C27539) * C50887) *
                C25755) *
               C51053 * C50965) *
              C51157 +
          ((((C25958 + C25957) * C1281 -
             ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
             (C25960 + C25959) * C50887) *
                C51204 +
            ((C25970 + C25969) * C1281 -
             ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
             (C25972 + C25971) * C50887) *
                C51196 +
            ((C26293 + C26294) * C1281 - (C26404 * C1275 + C26405 * C1280) +
             (C26299 + C26300) * C50887) *
                C25755) *
               C51053 * C1514 +
           (((C26599 + C26598) * C1280 + (C26597 + C26596) * C1275 -
             (C27533 + C27532) * C1281 - (C27535 + C27534) * C50887) *
                C51204 +
            ((C26595 + C26594) * C1280 + (C26593 + C26592) * C1275 -
             (C27537 + C27536) * C1281 - (C27539 + C27538) * C50887) *
                C51196 +
            ((C26600 + C26601) * C1280 + (C26602 + C26603) * C1275 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C1281 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C25755) *
               C51053 * C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1280 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C1275 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1281 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51204 +
           ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
            (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
               C51196 +
           C27321 * C25755) *
              C51053 * C51203 +
          (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                C1281 -
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C1275 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C1280) +
            (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                C50887) *
               C51204 +
           ((C27532 + C27533) * C1281 -
            ((C26596 + C26597) * C1275 + (C26598 + C26599) * C1280) +
            (C27534 + C27535) * C50887) *
               C51196 +
           ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
            (C27538 + C27539) * C50887) *
               C25755) *
              C51053 * C51193 +
          (((C25756 * C851 + C25751 * C856 + C25757 * C852 + C50868 * C857) *
                C1280 +
            (C25756 * C860 + C25751 * C866 + C25757 * C861 + C50868 * C867) *
                C1275 -
            (C25757 * C853 + C50868 * C858 + C25756 * C852 + C25751 * C857) *
                C1281 -
            (C25757 * C862 + C50868 * C868 + C25756 * C861 + C25751 * C867) *
                C50887) *
               C51204 +
           ((C26917 + C26918) * C1280 + (C26919 + C26920) * C1275 -
            (C25757 * C970 + C50868 * C978 + C25756 * C971 + C25751 * C979) *
                C1281 -
            (C25757 * C974 + C50868 * C982 + C25756 * C975 + C25751 * C983) *
                C50887) *
               C51196 +
           ((C26921 + C26922) * C1280 + (C26923 + C26924) * C1275 -
            (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
             C25751 * C3328) *
                C1281 -
            (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
             C25751 * C3331) *
                C50887) *
               C25755) *
              C51053 * C1746) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
               C121 +
           (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
               C109 -
           (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
               C122 -
           (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
               C110 +
           (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
               C123 +
           (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
               C111 -
           (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
               C124 -
           (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
               C112) *
              C51204 +
          ((C25756 * C263 + C25751 * C273 + C25757 * C259 + C50868 * C265) *
               C121 +
           (C25756 * C272 + C25751 * C280 + C25757 * C271 + C50868 * C279) *
               C109 -
           (C25757 * C260 + C50868 * C266 + C25756 * C259 + C25751 * C265) *
               C122 -
           (C25757 * C270 + C50868 * C278 + C25756 * C271 + C25751 * C279) *
               C110 +
           (C25756 * C260 + C25751 * C266 + C25757 * C261 + C50868 * C267) *
               C123 +
           (C25756 * C270 + C25751 * C278 + C25757 * C269 + C50868 * C277) *
               C111 -
           (C25757 * C262 + C50868 * C268 + C25756 * C261 + C25751 * C267) *
               C124 -
           (C25757 * C274 + C50868 * C281 + C25756 * C269 + C25751 * C277) *
               C112) *
              C51196 +
          ((C25756 * C512 + C25751 * C517 + C25757 * C513 + C50868 * C518) *
               C121 +
           (C25756 * C521 + C25751 * C527 + C25757 * C522 + C50868 * C528) *
               C109 -
           (C25757 * C514 + C50868 * C519 + C25756 * C513 + C25751 * C518) *
               C122 -
           (C25757 * C523 + C50868 * C529 + C25756 * C522 + C25751 * C528) *
               C110 +
           (C25756 * C514 + C25751 * C519 + C25757 * C515 + C50868 * C520) *
               C123 +
           (C25756 * C523 + C25751 * C529 + C25757 * C524 + C50868 * C530) *
               C111 -
           (C25757 * C516 + C50868 * C525 + C25756 * C515 + C25751 * C520) *
               C124 -
           (C25757 * C526 + C50868 * C531 + C25756 * C524 + C25751 * C530) *
               C112) *
              C25755) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C50007 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51149 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C50000 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51204 +
           ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
            (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
               C51196 +
           C26303 * C25755) *
              C51053 * C50953 * C507 +
          (((C25958 + C25957) * C50000 -
            ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
            (C25960 + C25959) * C50887) *
               C51204 +
           ((C25970 + C25969) * C50000 -
            ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
            (C25972 + C25971) * C50887) *
               C51196 +
           ((C26293 + C26294) * C50000 -
            ((C26295 + C26296) * C51149 + (C26297 + C26298) * C50007) +
            (C26299 + C26300) * C50887) *
               C25755) *
              C51053 * C50953 * C508 +
          (C26303 * C51204 +
           ((C26298 + C26297) * C50007 + (C26296 + C26295) * C51149 -
            (C26294 + C26293) * C50000 - (C26300 + C26299) * C50887) *
               C51196 +
           ((C25756 * C2807 + C25751 * C2813 + C25757 * C2806 +
             C50868 * C2812) *
                C50007 +
            (C25756 * C2810 + C25751 * C2816 + C25757 * C2809 +
             C50868 * C2815) *
                C51149 -
            (C25757 * C2805 + C50868 * C2811 + C25756 * C2806 +
             C25751 * C2812) *
                C50000 -
            (C25757 * C2808 + C50868 * C2814 + C25756 * C2809 +
             C25751 * C2815) *
                C50887) *
               C25755) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51204 +
           ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
            (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
            (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
               C51196 +
           ((C25965 + C25966) * C256 + (C25967 + C25968) * C251 -
            (C25969 + C25970) * C257 - (C25971 + C25972) * C252 +
            (C25973 + C25974) * C258 + (C25975 + C25976) * C253) *
               C25755) *
              C51053 * C50953 * C51157 +
          (((C25958 + C25957) * C257 -
            ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
            (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
            (C25964 + C25963) * C253) *
               C51204 +
           ((C25970 + C25969) * C257 -
            ((C25968 + C25967) * C251 + (C25966 + C25965) * C256) +
            (C25972 + C25971) * C252 - (C25974 + C25973) * C258 -
            (C25976 + C25975) * C253) *
               C51196 +
           ((C25756 * C606 + C25751 * C614 + C25757 * C605 + C50868 * C613) *
                C257 -
            ((C25757 * C610 + C50868 * C618 + C25756 * C611 + C25751 * C619) *
                 C251 +
             (C25757 * C606 + C50868 * C614 + C25756 * C607 + C25751 * C615) *
                 C256) +
            (C25756 * C610 + C25751 * C618 + C25757 * C609 + C50868 * C617) *
                C252 -
            (C25757 * C604 + C50868 * C612 + C25756 * C605 + C25751 * C613) *
                C258 -
            (C25757 * C608 + C50868 * C616 + C25756 * C609 + C25751 * C617) *
                C253) *
               C25755) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C603 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C50882) *
               C51204 +
           ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
           C26414 * C25755) *
              C51053 * C50953 * C599 -
          (C26421 * C25755 +
           ((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51196 +
           ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51204) *
              C51053 * C50953 * C600 +
          (C26414 * C51204 +
           ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51196 +
           ((C26417 + C26418) * C603 + (C26419 + C26420) * C50882) * C25755) *
              C51053 * C50953 * C601 -
          (((C25757 * C8437 + C50868 * C8441 + C25756 * C8438 +
             C25751 * C8442) *
                C50882 +
            (C25757 * C8435 + C50868 * C8439 + C25756 * C8436 +
             C25751 * C8440) *
                C603) *
               C25755 +
           ((C26420 + C26419) * C50882 + (C26418 + C26417) * C603) * C51196 +
           C26421 * C51204) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51204 +
           ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
            (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
            (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
               C51196 +
           ((C25965 + C25966) * C256 + (C25967 + C25968) * C251 -
            (C25969 + C25970) * C257 - (C25971 + C25972) * C252 +
            (C25973 + C25974) * C258 + (C25975 + C25976) * C253) *
               C25755) *
              C51053 * C51158 +
          (((C25756 * C383 + C25751 * C389 + C25757 * C384 + C50868 * C390) *
                C257 -
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C251 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C256) +
            (C25756 * C395 + C25751 * C403 + C25757 * C394 + C50868 * C402) *
                C252 -
            (C25757 * C385 + C50868 * C391 + C25756 * C384 + C25751 * C390) *
                C258 -
            (C25757 * C393 + C50868 * C401 + C25756 * C394 + C25751 * C402) *
                C253) *
               C51204 +
           ((C25756 * C719 + C25751 * C727 + C25757 * C720 + C50868 * C728) *
                C257 -
            ((C25757 * C731 + C50868 * C743 + C25756 * C730 + C25751 * C742) *
                 C251 +
             (C25757 * C719 + C50868 * C727 + C25756 * C718 + C25751 * C726) *
                 C256) +
            (C25756 * C731 + C25751 * C743 + C25757 * C732 + C50868 * C744) *
                C252 -
            (C25757 * C721 + C50868 * C729 + C25756 * C720 + C25751 * C728) *
                C258 -
            (C25757 * C733 + C50868 * C745 + C25756 * C732 + C25751 * C744) *
                C253) *
               C51196 +
           ((C25756 * C724 + C25751 * C740 + C25757 * C723 + C50868 * C739) *
                C257 -
            ((C25757 * C736 + C50868 * C748 + C25756 * C737 + C25751 * C749) *
                 C251 +
             (C25757 * C724 + C50868 * C740 + C25756 * C725 + C25751 * C741) *
                 C256) +
            (C25756 * C736 + C25751 * C748 + C25757 * C735 + C50868 * C747) *
                C252 -
            (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                C258 -
            (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                C253) *
               C25755) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51204 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51196 +
            C26414 * C25755) *
               C51053 * C51158 -
           (C26608 * C25755 +
            ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C51196 +
            ((C25757 * C395 + C50868 * C403 + C25756 * C396 + C25751 * C404) *
                 C50882 +
             (C25757 * C383 + C50868 * C389 + C25756 * C387 + C25751 * C397) *
                 C603) *
                C51204) *
               C51053 * C50965) *
              C507 +
          ((((C26599 + C26598) * C603 + (C26597 + C26596) * C50882) * C51204 +
            ((C26595 + C26594) * C603 + (C26593 + C26592) * C50882) * C51196 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C25755) *
               C51053 * C50965 -
           (C26421 * C25755 +
            ((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51196 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51204) *
               C51053 * C51158) *
              C508 +
          ((C26414 * C51204 +
            ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51196 +
            ((C26417 + C26418) * C603 + (C26419 + C26420) * C50882) * C25755) *
               C51053 * C51158 -
           (((C25757 * C8611 + C50868 * C8615 + C25756 * C8612 +
              C25751 * C8616) *
                 C50882 +
             (C25757 * C8609 + C50868 * C8613 + C25756 * C8610 +
              C25751 * C8614) *
                 C603) *
                C25755 +
            ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51196 +
            C26608 * C51204) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1174 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51201 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1175 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C51187 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C1176 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C1171) *
                C22938 +
            ((C25953 + C25954) * C1174 + (C25955 + C25956) * C51201 -
             (C25957 + C25958) * C1175 - (C25959 + C25960) * C51187 +
             (C25961 + C25962) * C1176 + (C25963 + C25964) * C1171) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C1174 + (C29068 + C29069) * C51201 -
             (C29070 + C29071) * C1175 - (C29072 + C29073) * C51187 +
             (C29074 + C29075) * C1176 + (C29076 + C29077) * C1171) *
                C22938 +
            (C29596 * C1174 + C29597 * C51201 - (C27533 + C27532) * C1175 -
             (C27535 + C27534) * C51187 + (C28844 + C28845) * C1176 +
             (C28846 + C28847) * C1171) *
                C51041) *
               C51065) *
              C50953 * C1172 +
          ((((C25958 + C25957) * C1175 -
             ((C25956 + C25955) * C51201 + (C25954 + C25953) * C1174) +
             (C25960 + C25959) * C51187 - (C25962 + C25961) * C1176 -
             (C25964 + C25963) * C1171) *
                C22938 +
            ((C25970 + C25969) * C1175 -
             ((C25968 + C25967) * C51201 + (C25966 + C25965) * C1174) +
             (C25972 + C25971) * C51187 - (C25974 + C25973) * C1176 -
             (C25976 + C25975) * C1171) *
                C51041) *
               C51171 +
           (((C27532 + C27533) * C1175 - (C29598 * C51201 + C29599 * C1174) +
             (C27534 + C27535) * C51187 - (C28845 + C28844) * C1176 -
             (C28847 + C28846) * C1171) *
                C22938 +
            ((C27536 + C27537) * C1175 - (C26604 * C51201 + C26605 * C1174) +
             (C27538 + C27539) * C51187 -
             (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                 C1176 -
             (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                 C1171) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C22938 +
            ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
             (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
             (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                C22938 +
            (C29596 * C1280 + C29597 * C1275 - (C27533 + C27532) * C1281 -
             (C27535 + C27534) * C50887) *
                C51041) *
               C51065) *
              C50953 * C51202 +
          ((((C25958 + C25957) * C1281 -
             ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
             (C25960 + C25959) * C50887) *
                C22938 +
            ((C25970 + C25969) * C1281 -
             ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
             (C25972 + C25971) * C50887) *
                C51041) *
               C51171 +
           (((C27532 + C27533) * C1281 - (C29598 * C1275 + C29599 * C1280) +
             (C27534 + C27535) * C50887) *
                C22938 +
            ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
             (C27538 + C27539) * C50887) *
                C51041) *
               C51065) *
              C50953 * C51190 +
          ((C27321 * C22938 +
            ((C26298 + C26297) * C1280 + (C26296 + C26295) * C1275 -
             (C26294 + C26293) * C1281 - (C26300 + C26299) * C50887) *
                C51041) *
               C51171 +
           ((C29600 * C1280 + C29601 * C1275 - (C27537 + C27536) * C1281 -
             (C27539 + C27538) * C50887) *
                C22938 +
            ((C26600 + C26601) * C1280 + (C26602 + C26603) * C1275 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C1281 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C1280 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C1275 -
              (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                  C1281 -
              (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                  C50887) *
                 C22938 +
             ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
              (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                 C51041) *
                C51171 +
            (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
              (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                 C22938 +
             C30861 * C51041) *
                C51065) *
               C51158 +
           ((((C29071 + C29070) * C1281 -
              ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
              (C29073 + C29072) * C50887) *
                 C22938 +
             C30862 * C51041) *
                C51171 +
            (((C29829 + C29830) * C1281 -
              ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
              (C29835 + C29836) * C50887) *
                 C22938 +
             ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
              (C29839 + C29840) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C1172 +
          (((((C25958 + C25957) * C1281 -
              ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
              (C25960 + C25959) * C50887) *
                 C22938 +
             ((C25970 + C25969) * C1281 -
              ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
              (C25972 + C25971) * C50887) *
                 C51041) *
                C51171 +
            (C30862 * C22938 +
             ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
              (C27538 + C27539) * C50887) *
                 C51041) *
                C51065) *
               C51158 +
           ((C30861 * C22938 +
             (C29600 * C1280 + C29601 * C1275 - (C27537 + C27536) * C1281 -
              (C27539 + C27538) * C50887) *
                 C51041) *
                C51171 +
            ((C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
              (C29840 + C29839) * C50887) *
                 C22938 +
             ((C26921 + C26922) * C1280 + (C26923 + C26924) * C1275 -
              (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
               C25751 * C3328) *
                  C1281 -
              (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
               C25751 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C50007 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C51149 -
              (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                  C50000 -
              (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                  C50887) *
                 C22938 +
             ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
              (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                 C51041) *
                C51171 +
            (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
              (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                 C22938 +
             C31779 * C51041) *
                C51065) *
               C1514 +
           ((((C29071 + C29070) * C50000 -
              ((C29069 + C29068) * C51149 + (C29067 + C29066) * C50007) +
              (C29073 + C29072) * C50887) *
                 C22938 +
             C31780 * C51041) *
                C51171 +
            (((C29829 + C29830) * C50000 -
              ((C29831 + C29832) * C51149 + (C29833 + C29834) * C50007) +
              (C29835 + C29836) * C50887) *
                 C22938 +
             ((C29837 + C29838) * C50000 - (C30035 * C51149 + C30036 * C50007) +
              (C29839 + C29840) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C1172 +
          (((((C25958 + C25957) * C50000 -
              ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
              (C25960 + C25959) * C50887) *
                 C22938 +
             ((C25970 + C25969) * C50000 -
              ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
              (C25972 + C25971) * C50887) *
                 C51041) *
                C51171 +
            (C31780 * C22938 +
             ((C27536 + C27537) * C50000 - (C26604 * C51149 + C26605 * C50007) +
              (C27538 + C27539) * C50887) *
                 C51041) *
                C51065) *
               C1514 +
           ((C31779 * C22938 +
             (C29600 * C50007 + C29601 * C51149 - (C27537 + C27536) * C50000 -
              (C27539 + C27538) * C50887) *
                 C51041) *
                C51171 +
            ((C30037 * C50007 + C30038 * C51149 - (C29838 + C29837) * C50000 -
              (C29840 + C29839) * C50887) *
                 C22938 +
             ((C26921 + C26922) * C50007 + (C26923 + C26924) * C51149 -
              (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
               C25751 * C3328) *
                  C50000 -
              (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
               C25751 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C51171 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
             C29608 * C51041) *
                C51065) *
               C1514 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C22938) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C22938) *
                C51171) *
               C50965) *
              C51202 +
          (((C29608 * C22938 + C29610 * C51041) * C51171 +
            (C30056 * C22938 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C26608 * C51041 + C29609 * C22938) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C22938) *
                C51171) *
               C1514) *
              C51190 +
          (((C26414 * C22938 +
             ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
                C51171 +
            (C29610 * C22938 +
             ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
                C51065) *
               C1514 -
           ((((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
               C25751 * C8957) *
                  C50882 +
              (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
               C25751 * C8955) *
                  C603) *
                 C51041 +
             ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C22938) *
                C51065 +
            (((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51041 +
             C26608 * C22938) *
                C51171) *
               C50965) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C51171 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
             C29608 * C51041) *
                C51065) *
               C51203 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C22938) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C22938) *
                C51171) *
               C51193 +
           ((((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C22938 +
             C30056 * C51041) *
                C51171 +
            (((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C22938 +
             ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51041) *
                C51065) *
               C1746) *
              C1172 +
          (((C29608 * C22938 + C29610 * C51041) * C51171 +
            (C30056 * C22938 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C51193 -
           ((C26608 * C51041 + C29609 * C22938) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C22938) *
                C51171) *
               C51203 -
           ((((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
               C25751 * C9087) *
                  C50882 +
              (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
               C25751 * C9085) *
                  C603) *
                 C51041 +
             ((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C22938) *
                C51065 +
            (((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51041 +
             C30055 * C22938) *
                C51171) *
               C1746) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C22938 +
            ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
             (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
             (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                C22938 +
            ((C26599 + C26598) * C50007 + (C26597 + C26596) * C51149 -
             (C27533 + C27532) * C50000 - (C27535 + C27534) * C50887) *
                C51041) *
               C51065) *
              C50953 * C507 +
          ((((C25958 + C25957) * C50000 -
             ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
             (C25960 + C25959) * C50887) *
                C22938 +
            ((C25970 + C25969) * C50000 -
             ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
             (C25972 + C25971) * C50887) *
                C51041) *
               C51171 +
           (((C27532 + C27533) * C50000 -
             ((C26596 + C26597) * C51149 + (C26598 + C26599) * C50007) +
             (C27534 + C27535) * C50887) *
                C22938 +
            ((C27536 + C27537) * C50000 - (C26604 * C51149 + C26605 * C50007) +
             (C27538 + C27539) * C50887) *
                C51041) *
               C51065) *
              C50953 * C508 +
          ((C26303 * C22938 +
            ((C26298 + C26297) * C50007 + (C26296 + C26295) * C51149 -
             (C26294 + C26293) * C50000 - (C26300 + C26299) * C50887) *
                C51041) *
               C51171 +
           (((C26595 + C26594) * C50007 + (C26593 + C26592) * C51149 -
             (C27537 + C27536) * C50000 - (C27539 + C27538) * C50887) *
                C22938 +
            ((C26600 + C26601) * C50007 + (C26602 + C26603) * C51149 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C50000 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C121 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C109 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C122 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C110 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C123 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C111 -
            (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
                C124 -
            (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
                C112) *
               C22938 +
           ((C25953 + C25954) * C121 + (C25955 + C25956) * C109 -
            (C25957 + C25958) * C122 - (C25959 + C25960) * C110 +
            (C25961 + C25962) * C123 + (C25963 + C25964) * C111 -
            (C25757 * C262 + C50868 * C268 + C25756 * C261 + C25751 * C267) *
                C124 -
            (C25757 * C274 + C50868 * C281 + C25756 * C269 + C25751 * C277) *
                C112) *
               C51041) *
              C51171 +
          (((C25756 * C387 + C25751 * C397 + C25757 * C383 + C50868 * C389) *
                C121 +
            (C25756 * C396 + C25751 * C404 + C25757 * C395 + C50868 * C403) *
                C109 -
            (C25757 * C384 + C50868 * C390 + C25756 * C383 + C25751 * C389) *
                C122 -
            (C25757 * C394 + C50868 * C402 + C25756 * C395 + C25751 * C403) *
                C110 +
            (C25756 * C384 + C25751 * C390 + C25757 * C385 + C50868 * C391) *
                C123 +
            (C25756 * C394 + C25751 * C402 + C25757 * C393 + C50868 * C401) *
                C111 -
            (C25757 * C386 + C50868 * C392 + C25756 * C385 + C25751 * C391) *
                C124 -
            (C25757 * C398 + C50868 * C405 + C25756 * C393 + C25751 * C401) *
                C112) *
               C22938 +
           ((C26599 + C26598) * C121 + (C26597 + C26596) * C109 -
            (C27533 + C27532) * C122 - (C27535 + C27534) * C110 +
            (C25756 * C720 + C25751 * C728 + C25757 * C721 + C50868 * C729) *
                C123 +
            (C25756 * C732 + C25751 * C744 + C25757 * C733 + C50868 * C745) *
                C111 -
            (C25757 * C1412 + C50868 * C1413 + C25756 * C721 + C25751 * C729) *
                C124 -
            (C25757 * C1414 + C50868 * C1415 + C25756 * C733 + C25751 * C745) *
                C112) *
               C51041) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C22938 +
            ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
             (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
             (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                C22938 +
            (C29596 * C50007 + C29597 * C51149 - (C27533 + C27532) * C50000 -
             (C27535 + C27534) * C50887) *
                C51041) *
               C51065) *
              C848 +
          ((((C29071 + C29070) * C50000 -
             ((C29069 + C29068) * C51149 + (C29067 + C29066) * C50007) +
             (C29073 + C29072) * C50887) *
                C22938 +
            ((C27532 + C27533) * C50000 - (C29598 * C51149 + C29599 * C50007) +
             (C27534 + C27535) * C50887) *
                C51041) *
               C51171 +
           (((C29829 + C29830) * C50000 -
             ((C29831 + C29832) * C51149 + (C29833 + C29834) * C50007) +
             (C29835 + C29836) * C50887) *
                C22938 +
            ((C29837 + C29838) * C50000 -
             ((C26920 + C26919) * C51149 + (C26918 + C26917) * C50007) +
             (C29839 + C29840) * C50887) *
                C51041) *
               C51065) *
              C849 +
          ((((C29834 + C29833) * C50007 + (C29832 + C29831) * C51149 -
             (C29830 + C29829) * C50000 - (C29836 + C29835) * C50887) *
                C22938 +
            ((C26917 + C26918) * C50007 + (C26919 + C26920) * C51149 -
             (C29838 + C29837) * C50000 - (C29840 + C29839) * C50887) *
                C51041) *
               C51171 +
           (((C25756 * C1058 + C25751 * C1066 + C25757 * C1057 +
              C50868 * C1065) *
                 C50007 +
             (C25756 * C1062 + C25751 * C1070 + C25757 * C1061 +
              C50868 * C1069) *
                 C51149 -
             (C25757 * C1056 + C50868 * C1064 + C25756 * C1057 +
              C25751 * C1065) *
                 C50000 -
             (C25757 * C1060 + C50868 * C1068 + C25756 * C1061 +
              C25751 * C1069) *
                 C50887) *
                C22938 +
            ((C25756 * C3451 + C25751 * C3457 + C25757 * C3450 +
              C50868 * C3456) *
                 C50007 +
             (C25756 * C3454 + C25751 * C3460 + C25757 * C3453 +
              C50868 * C3459) *
                 C51149 -
             (C25757 * C3449 + C50868 * C3455 + C25756 * C3450 +
              C25751 * C3456) *
                 C50000 -
             (C25757 * C3452 + C50868 * C3458 + C25756 * C3453 +
              C25751 * C3459) *
                 C50887) *
                C51041) *
               C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C22938 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
               C51171 +
           (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
            ((C26599 + C26598) * C603 + (C26597 + C26596) * C50882) * C51041) *
               C51065) *
              C50953 * C599 -
          ((C26608 * C51041 +
            ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C22938) *
               C51065 +
           (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C22938) *
               C51171) *
              C50953 * C600 +
          ((C26414 * C22938 +
            ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
               C51171 +
           (((C26595 + C26594) * C603 + (C26593 + C26592) * C50882) * C22938 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
               C51065) *
              C50953 * C601 -
          ((((C25757 * C8611 + C50868 * C8615 + C25756 * C8612 +
              C25751 * C8616) *
                 C50882 +
             (C25757 * C8609 + C50868 * C8613 + C25756 * C8610 +
              C25751 * C8614) *
                 C603) *
                C51041 +
            ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C22938) *
               C51065 +
           (((C26420 + C26419) * C50882 + (C26418 + C26417) * C603) * C51041 +
            C26421 * C22938) *
               C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C51171 +
           (((C25756 * C387 + C25751 * C397 + C25757 * C383 + C50868 * C389) *
                 C256 +
             (C25756 * C396 + C25751 * C404 + C25757 * C395 + C50868 * C403) *
                 C251 -
             (C25757 * C384 + C50868 * C390 + C25756 * C383 + C25751 * C389) *
                 C257 -
             (C25757 * C394 + C50868 * C402 + C25756 * C395 + C25751 * C403) *
                 C252 +
             (C25756 * C384 + C25751 * C390 + C25757 * C385 + C50868 * C391) *
                 C258 +
             (C25756 * C394 + C25751 * C402 + C25757 * C393 + C50868 * C401) *
                 C253) *
                C22938 +
            ((C26599 + C26598) * C256 + (C26597 + C26596) * C251 -
             (C27533 + C27532) * C257 - (C27535 + C27534) * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C50953 * C51157 +
          ((((C25958 + C25957) * C257 -
             ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
             (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
             (C25964 + C25963) * C253) *
                C22938 +
            ((C25970 + C25969) * C257 -
             ((C25968 + C25967) * C251 + (C25966 + C25965) * C256) +
             (C25972 + C25971) * C252 - (C25974 + C25973) * C258 -
             (C25976 + C25975) * C253) *
                C51041) *
               C51171 +
           (((C27532 + C27533) * C257 -
             ((C26596 + C26597) * C251 + (C26598 + C26599) * C256) +
             (C27534 + C27535) * C252 - (C28845 + C28844) * C258 -
             (C28847 + C28846) * C253) *
                C22938 +
            ((C27536 + C27537) * C257 - (C26604 * C251 + C26605 * C256) +
             (C27538 + C27539) * C252 -
             (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                 C258 -
             (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                 C253) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C51171 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
             C29608 * C51041) *
                C51065) *
               C848 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C22938) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C22938) *
                C51171) *
               C849 +
           ((((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C22938 +
             C30056 * C51041) *
                C51171 +
            (((C25756 * C1058 + C25751 * C1066 + C25757 * C1057 +
               C50868 * C1065) *
                  C603 +
              (C25756 * C1062 + C25751 * C1070 + C25757 * C1061 +
               C50868 * C1069) *
                  C50882) *
                 C22938 +
             ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51041) *
                C51065) *
               C850) *
              C51157 +
          (((C29608 * C22938 + C29610 * C51041) * C51171 +
            (C30056 * C22938 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C849 -
           ((C26608 * C51041 + C29609 * C22938) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C22938) *
                C51171) *
               C848 -
           ((((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
               C25751 * C9087) *
                  C50882 +
              (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
               C25751 * C9085) *
                  C603) *
                 C51041 +
             ((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C22938) *
                C51065 +
            (((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51041 +
             C30055 * C22938) *
                C51171) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C51171 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
             C29608 * C51041) *
                C51065) *
               C51158 -
           ((((C26920 + C26919) * C50882 + (C26918 + C26917) * C603) * C51041 +
             ((C25757 * C861 + C50868 * C867 + C25756 * C860 + C25751 * C866) *
                  C50882 +
              (C25757 * C852 + C50868 * C857 + C25756 * C851 + C25751 * C856) *
                  C603) *
                 C22938) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C22938) *
                C51171) *
               C50965) *
              C507 +
          (((C29608 * C22938 + C29610 * C51041) * C51171 +
            (((C26917 + C26918) * C603 + (C26919 + C26920) * C50882) * C22938 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C26608 * C51041 + C29609 * C22938) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C22938) *
                C51171) *
               C51158) *
              C508 +
          (((C26414 * C22938 +
             ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
                C51171 +
            (C29610 * C22938 +
             ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
                C51065) *
               C51158 -
           ((((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
               C25751 * C8957) *
                  C50882 +
              (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
               C25751 * C8955) *
                  C603) *
                 C51041 +
             ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C22938) *
                C51065 +
            (((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51041 +
             C26608 * C22938) *
                C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
             (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
             (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
                C22938 +
            ((C26599 + C26598) * C256 + (C26597 + C26596) * C251 -
             (C27533 + C27532) * C257 - (C27535 + C27534) * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C51158 +
          ((((C29071 + C29070) * C257 -
             ((C29069 + C29068) * C251 + (C29067 + C29066) * C256) +
             (C29073 + C29072) * C252 - (C29075 + C29074) * C258 -
             (C29077 + C29076) * C253) *
                C22938 +
            ((C27532 + C27533) * C257 -
             ((C26596 + C26597) * C251 + (C26598 + C26599) * C256) +
             (C27534 + C27535) * C252 - (C28845 + C28844) * C258 -
             (C28847 + C28846) * C253) *
                C51041) *
               C51171 +
           (((C25756 * C852 + C25751 * C857 + C25757 * C853 + C50868 * C858) *
                 C257 -
             ((C25757 * C861 + C50868 * C867 + C25756 * C860 + C25751 * C866) *
                  C251 +
              (C25757 * C852 + C50868 * C857 + C25756 * C851 + C25751 * C856) *
                  C256) +
             (C25756 * C861 + C25751 * C867 + C25757 * C862 + C50868 * C868) *
                 C252 -
             (C25757 * C854 + C50868 * C859 + C25756 * C853 + C25751 * C858) *
                 C258 -
             (C25757 * C863 + C50868 * C869 + C25756 * C862 + C25751 * C868) *
                 C253) *
                C22938 +
            ((C25756 * C971 + C25751 * C979 + C25757 * C970 + C50868 * C978) *
                 C257 -
             ((C26920 + C26919) * C251 + (C26918 + C26917) * C256) +
             (C25756 * C975 + C25751 * C983 + C25757 * C974 + C50868 * C982) *
                 C252 -
             (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                 C258 -
             (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                 C253) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C22938 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
               C51171 +
           (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
            C29608 * C51041) *
               C51065) *
              C1051 -
          ((C30055 * C51041 +
            ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C22938) *
               C51065 +
           (C29609 * C51041 +
            ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C22938) *
               C51171) *
              C1052 +
          ((((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C22938 +
            C30056 * C51041) *
               C51171 +
           (((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C22938 +
            ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51041) *
               C51065) *
              C1053 -
          ((((C25757 * C16631 + C50868 * C16633 + C25756 * C13922 +
              C25751 * C13925) *
                 C50882 +
             (C25757 * C16630 + C50868 * C16632 + C25756 * C13919 +
              C25751 * C13923) *
                 C603) *
                C51041 +
            ((C25757 * C6203 + C50868 * C6209 + C25756 * C6204 +
              C25751 * C6210) *
                 C50882 +
             (C25757 * C6200 + C50868 * C6206 + C25756 * C6201 +
              C25751 * C6207) *
                 C603) *
                C22938) *
               C51065 +
           (((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C51041 +
            ((C30198 + C30197) * C50882 + (C30196 + C30195) * C603) * C22938) *
               C51171) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1174 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51201 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1175 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C51187 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C1176 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C1171) *
                C22938 +
            ((C25953 + C25954) * C1174 + (C25955 + C25956) * C51201 -
             (C25957 + C25958) * C1175 - (C25959 + C25960) * C51187 +
             (C25961 + C25962) * C1176 + (C25963 + C25964) * C1171) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C1174 + (C29068 + C29069) * C51201 -
             (C29070 + C29071) * C1175 - (C29072 + C29073) * C51187 +
             (C29074 + C29075) * C1176 + (C29076 + C29077) * C1171) *
                C22938 +
            (C29596 * C1174 + C29597 * C51201 - C30847 * C1175 -
             C30848 * C51187 + (C28844 + C28845) * C1176 +
             (C28846 + C28847) * C1171) *
                C51041) *
               C51065) *
              C1514 +
          ((((C29071 + C29070) * C1175 -
             ((C29069 + C29068) * C51201 + (C29067 + C29066) * C1174) +
             (C29073 + C29072) * C51187 - (C29075 + C29074) * C1176 -
             (C29077 + C29076) * C1171) *
                C22938 +
            (C30849 * C1175 - (C29598 * C51201 + C29599 * C1174) +
             C30852 * C51187 - (C28845 + C28844) * C1176 -
             (C28847 + C28846) * C1171) *
                C51041) *
               C51171 +
           (((C29829 + C29830) * C1175 -
             ((C29831 + C29832) * C51201 + (C29833 + C29834) * C1174) +
             (C29835 + C29836) * C51187 -
             (C25757 * C854 + C50868 * C859 + C25756 * C853 + C25751 * C858) *
                 C1176 -
             (C25757 * C863 + C50868 * C869 + C25756 * C862 + C25751 * C868) *
                 C1171) *
                C22938 +
            ((C29837 + C29838) * C1175 - (C30035 * C51201 + C30036 * C1174) +
             (C29839 + C29840) * C51187 -
             (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                 C1176 -
             (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                 C1171) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C1280 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C1275 -
              (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                  C1281 -
              (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                  C50887) *
                 C22938 +
             ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
              (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                 C51041) *
                C51171 +
            (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
              (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                 C22938 +
             C30861 * C51041) *
                C51065) *
               C1514 +
           ((((C29071 + C29070) * C1281 -
              ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
              (C29073 + C29072) * C50887) *
                 C22938 +
             C30862 * C51041) *
                C51171 +
            (((C29829 + C29830) * C1281 -
              ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
              (C29835 + C29836) * C50887) *
                 C22938 +
             ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
              (C29839 + C29840) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C51157 +
          (((((C25958 + C25957) * C1281 -
              ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
              (C25960 + C25959) * C50887) *
                 C22938 +
             ((C25970 + C25969) * C1281 -
              ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
              (C25972 + C25971) * C50887) *
                 C51041) *
                C51171 +
            (C30862 * C22938 +
             ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
              (C27538 + C27539) * C50887) *
                 C51041) *
                C51065) *
               C1514 +
           ((C30861 * C22938 +
             (C29600 * C1280 + C29601 * C1275 - (C27537 + C27536) * C1281 -
              (C27539 + C27538) * C50887) *
                 C51041) *
                C51171 +
            ((C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
              (C29840 + C29839) * C50887) *
                 C22938 +
             ((C26921 + C26922) * C1280 + (C26923 + C26924) * C1275 -
              (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
               C25751 * C3328) *
                  C1281 -
              (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
               C25751 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C22938 +
            ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
             (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
             (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                C22938 +
            C30861 * C51041) *
               C51065) *
              C51203 +
          ((((C29071 + C29070) * C1281 -
             ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
             (C29073 + C29072) * C50887) *
                C22938 +
            C30862 * C51041) *
               C51171 +
           (((C29829 + C29830) * C1281 -
             ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
             (C29835 + C29836) * C50887) *
                C22938 +
            ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
             (C29839 + C29840) * C50887) *
                C51041) *
               C51065) *
              C51193 +
          ((((C29834 + C29833) * C1280 + (C29832 + C29831) * C1275 -
             (C29830 + C29829) * C1281 - (C29836 + C29835) * C50887) *
                C22938 +
            (C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
             (C29840 + C29839) * C50887) *
                C51041) *
               C51171 +
           (((C30195 + C30196) * C1280 + (C30197 + C30198) * C1275 -
             (C25757 * C1056 + C50868 * C1064 + C25756 * C1057 +
              C25751 * C1065) *
                 C1281 -
             (C25757 * C1060 + C50868 * C1068 + C25756 * C1061 +
              C25751 * C1069) *
                 C50887) *
                C22938 +
            ((C30051 + C30052) * C1280 + (C30053 + C30054) * C1275 -
             (C25757 * C3449 + C50868 * C3455 + C25756 * C3450 +
              C25751 * C3456) *
                 C1281 -
             (C25757 * C3452 + C50868 * C3458 + C25756 * C3453 +
              C25751 * C3459) *
                 C50887) *
                C51041) *
               C51065) *
              C1746) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C121 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C109 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C122 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C110 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C123 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C111 -
            (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
                C124 -
            (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
                C112) *
               C22938 +
           ((C25953 + C25954) * C121 + (C25955 + C25956) * C109 -
            (C25957 + C25958) * C122 - (C25959 + C25960) * C110 +
            (C25961 + C25962) * C123 + (C25963 + C25964) * C111 -
            (C25757 * C262 + C50868 * C268 + C25756 * C261 + C25751 * C267) *
                C124 -
            (C25757 * C274 + C50868 * C281 + C25756 * C269 + C25751 * C277) *
                C112) *
               C51041) *
              C51171 +
          (((C25756 * C387 + C25751 * C397 + C25757 * C383 + C50868 * C389) *
                C121 +
            (C25756 * C396 + C25751 * C404 + C25757 * C395 + C50868 * C403) *
                C109 -
            (C25757 * C384 + C50868 * C390 + C25756 * C383 + C25751 * C389) *
                C122 -
            (C25757 * C394 + C50868 * C402 + C25756 * C395 + C25751 * C403) *
                C110 +
            (C25756 * C384 + C25751 * C390 + C25757 * C385 + C50868 * C391) *
                C123 +
            (C25756 * C394 + C25751 * C402 + C25757 * C393 + C50868 * C401) *
                C111 -
            (C25757 * C386 + C50868 * C392 + C25756 * C385 + C25751 * C391) *
                C124 -
            (C25757 * C398 + C50868 * C405 + C25756 * C393 + C25751 * C401) *
                C112) *
               C22938 +
           ((C26599 + C26598) * C121 + (C26597 + C26596) * C109 -
            (C27533 + C27532) * C122 - (C27535 + C27534) * C110 +
            (C25756 * C720 + C25751 * C728 + C25757 * C721 + C50868 * C729) *
                C123 +
            (C25756 * C732 + C25751 * C744 + C25757 * C733 + C50868 * C745) *
                C111 -
            (C25757 * C1412 + C50868 * C1413 + C25756 * C721 + C25751 * C729) *
                C124 -
            (C25757 * C1414 + C50868 * C1415 + C25756 * C733 + C25751 * C745) *
                C112) *
               C51041) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C22938 +
            ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
             (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
             (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                C22938 +
            ((C26599 + C26598) * C50007 + (C26597 + C26596) * C51149 -
             (C27533 + C27532) * C50000 - (C27535 + C27534) * C50887) *
                C51041) *
               C51065) *
              C50953 * C507 +
          ((((C25958 + C25957) * C50000 -
             ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
             (C25960 + C25959) * C50887) *
                C22938 +
            ((C25970 + C25969) * C50000 -
             ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
             (C25972 + C25971) * C50887) *
                C51041) *
               C51171 +
           (((C27532 + C27533) * C50000 -
             ((C26596 + C26597) * C51149 + (C26598 + C26599) * C50007) +
             (C27534 + C27535) * C50887) *
                C22938 +
            ((C27536 + C27537) * C50000 - (C26604 * C51149 + C26605 * C50007) +
             (C27538 + C27539) * C50887) *
                C51041) *
               C51065) *
              C50953 * C508 +
          ((C26303 * C22938 +
            ((C26298 + C26297) * C50007 + (C26296 + C26295) * C51149 -
             (C26294 + C26293) * C50000 - (C26300 + C26299) * C50887) *
                C51041) *
               C51171 +
           (((C26595 + C26594) * C50007 + (C26593 + C26592) * C51149 -
             (C27537 + C27536) * C50000 - (C27539 + C27538) * C50887) *
                C22938 +
            ((C26600 + C26601) * C50007 + (C26602 + C26603) * C51149 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C50000 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C51171 +
           (((C25756 * C387 + C25751 * C397 + C25757 * C383 + C50868 * C389) *
                 C256 +
             (C25756 * C396 + C25751 * C404 + C25757 * C395 + C50868 * C403) *
                 C251 -
             (C25757 * C384 + C50868 * C390 + C25756 * C383 + C25751 * C389) *
                 C257 -
             (C25757 * C394 + C50868 * C402 + C25756 * C395 + C25751 * C403) *
                 C252 +
             (C25756 * C384 + C25751 * C390 + C25757 * C385 + C50868 * C391) *
                 C258 +
             (C25756 * C394 + C25751 * C402 + C25757 * C393 + C50868 * C401) *
                 C253) *
                C22938 +
            ((C26599 + C26598) * C256 + (C26597 + C26596) * C251 -
             (C27533 + C27532) * C257 - (C27535 + C27534) * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C50953 * C51157 +
          ((((C25958 + C25957) * C257 -
             ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
             (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
             (C25964 + C25963) * C253) *
                C22938 +
            ((C25970 + C25969) * C257 -
             ((C25968 + C25967) * C251 + (C25966 + C25965) * C256) +
             (C25972 + C25971) * C252 - (C25974 + C25973) * C258 -
             (C25976 + C25975) * C253) *
                C51041) *
               C51171 +
           (((C27532 + C27533) * C257 -
             ((C26596 + C26597) * C251 + (C26598 + C26599) * C256) +
             (C27534 + C27535) * C252 - (C28845 + C28844) * C258 -
             (C28847 + C28846) * C253) *
                C22938 +
            ((C27536 + C27537) * C257 - (C26604 * C251 + C26605 * C256) +
             (C27538 + C27539) * C252 -
             (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                 C258 -
             (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                 C253) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C22938 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
               C51171 +
           (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
            ((C26599 + C26598) * C603 + (C26597 + C26596) * C50882) * C51041) *
               C51065) *
              C50953 * C599 -
          ((C26608 * C51041 +
            ((C26596 + C26597) * C50882 + (C26598 + C26599) * C603) * C22938) *
               C51065 +
           (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C22938) *
               C51171) *
              C50953 * C600 +
          ((C26414 * C22938 +
            ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
               C51171 +
           (((C26595 + C26594) * C603 + (C26593 + C26592) * C50882) * C22938 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
               C51065) *
              C50953 * C601 -
          ((((C25757 * C8611 + C50868 * C8615 + C25756 * C8612 +
              C25751 * C8616) *
                 C50882 +
             (C25757 * C8609 + C50868 * C8613 + C25756 * C8610 +
              C25751 * C8614) *
                 C603) *
                C51041 +
            ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C22938) *
               C51065 +
           (((C26420 + C26419) * C50882 + (C26418 + C26417) * C603) * C51041 +
            C26421 * C22938) *
               C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C51171 +
           (((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
             (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
             (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
                C22938 +
            ((C26599 + C26598) * C256 + (C26597 + C26596) * C251 -
             (C27533 + C27532) * C257 - (C27535 + C27534) * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C51158 +
          ((((C29071 + C29070) * C257 -
             ((C29069 + C29068) * C251 + (C29067 + C29066) * C256) +
             (C29073 + C29072) * C252 - (C29075 + C29074) * C258 -
             (C29077 + C29076) * C253) *
                C22938 +
            ((C27532 + C27533) * C257 -
             ((C26596 + C26597) * C251 + (C26598 + C26599) * C256) +
             (C27534 + C27535) * C252 - (C28845 + C28844) * C258 -
             (C28847 + C28846) * C253) *
                C51041) *
               C51171 +
           (((C25756 * C852 + C25751 * C857 + C25757 * C853 + C50868 * C858) *
                 C257 -
             ((C25757 * C861 + C50868 * C867 + C25756 * C860 + C25751 * C866) *
                  C251 +
              (C25757 * C852 + C50868 * C857 + C25756 * C851 + C25751 * C856) *
                  C256) +
             (C25756 * C861 + C25751 * C867 + C25757 * C862 + C50868 * C868) *
                 C252 -
             (C25757 * C854 + C50868 * C859 + C25756 * C853 + C25751 * C858) *
                 C258 -
             (C25757 * C863 + C50868 * C869 + C25756 * C862 + C25751 * C868) *
                 C253) *
                C22938 +
            ((C25756 * C971 + C25751 * C979 + C25757 * C970 + C50868 * C978) *
                 C257 -
             ((C26920 + C26919) * C251 + (C26918 + C26917) * C256) +
             (C25756 * C975 + C25751 * C983 + C25757 * C974 + C50868 * C982) *
                 C252 -
             (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                 C258 -
             (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                 C253) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C51171 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C22938 +
             C29608 * C51041) *
                C51065) *
               C51158 -
           ((((C26920 + C26919) * C50882 + (C26918 + C26917) * C603) * C51041 +
             ((C25757 * C861 + C50868 * C867 + C25756 * C860 + C25751 * C866) *
                  C50882 +
              (C25757 * C852 + C50868 * C857 + C25756 * C851 + C25751 * C856) *
                  C603) *
                 C22938) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C22938) *
                C51171) *
               C50965) *
              C507 +
          (((C29608 * C22938 + C29610 * C51041) * C51171 +
            (((C26917 + C26918) * C603 + (C26919 + C26920) * C50882) * C22938 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C26608 * C51041 + C29609 * C22938) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C22938) *
                C51171) *
               C51158) *
              C508 +
          (((C26414 * C22938 +
             ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
                C51171 +
            (C29610 * C22938 +
             ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
                C51065) *
               C51158 -
           ((((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
               C25751 * C8957) *
                  C50882 +
              (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
               C25751 * C8955) *
                  C603) *
                 C51041 +
             ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C22938) *
                C51065 +
            (((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51041 +
             C26608 * C22938) *
                C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1174 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51201 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1175 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C51187 +
             (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                 C1176 +
             (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                 C1171) *
                C22938 +
            ((C7987 + C7988) * C1174 + (C7989 + C7990) * C51201 -
             (C7991 + C7992) * C1175 - (C7993 + C7994) * C51187 +
             (C7995 + C7996) * C1176 + (C7997 + C7998) * C1171) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C1174 + (C15891 + C15892) * C51201 -
             (C15893 + C15894) * C1175 - (C15895 + C15896) * C51187 +
             (C15897 + C15898) * C1176 + (C15899 + C15900) * C1171) *
                C22938 +
            (C42145 * C1174 + C42146 * C51201 - (C9599 + C9598) * C1175 -
             (C9601 + C9600) * C51187 + (C41429 + C41430) * C1176 +
             (C41431 + C41432) * C1171) *
                C51041) *
               C51065) *
              C50953 * C1172 +
          ((((C7992 + C7991) * C1175 -
             ((C7990 + C7989) * C51201 + (C7988 + C7987) * C1174) +
             (C7994 + C7993) * C51187 - (C7996 + C7995) * C1176 -
             (C7998 + C7997) * C1171) *
                C22938 +
            ((C8004 + C8003) * C1175 -
             ((C8002 + C8001) * C51201 + (C8000 + C7999) * C1174) +
             (C8006 + C8005) * C51187 - (C8008 + C8007) * C1176 -
             (C8010 + C8009) * C1171) *
                C51041) *
               C32266 +
           (((C9598 + C9599) * C1175 - (C42147 * C51201 + C42148 * C1174) +
             (C9600 + C9601) * C51187 - (C41430 + C41429) * C1176 -
             (C41432 + C41431) * C1171) *
                C22938 +
            ((C9602 + C9603) * C1175 - (C8654 * C51201 + C8655 * C1174) +
             (C9604 + C9605) * C51187 -
             (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                 C1176 -
             (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                 C1171) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C22938 +
            ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
             (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
             (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
                C22938 +
            (C42145 * C1280 + C42146 * C1275 - (C9599 + C9598) * C1281 -
             (C9601 + C9600) * C50887) *
                C51041) *
               C51065) *
              C50953 * C51202 +
          ((((C7992 + C7991) * C1281 -
             ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
             (C7994 + C7993) * C50887) *
                C22938 +
            ((C8004 + C8003) * C1281 -
             ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
             (C8006 + C8005) * C50887) *
                C51041) *
               C32266 +
           (((C9598 + C9599) * C1281 - (C42147 * C1275 + C42148 * C1280) +
             (C9600 + C9601) * C50887) *
                C22938 +
            ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
             (C9604 + C9605) * C50887) *
                C51041) *
               C51065) *
              C50953 * C51190 +
          ((C9387 * C22938 +
            ((C8332 + C8331) * C1280 + (C8330 + C8329) * C1275 -
             (C8328 + C8327) * C1281 - (C8334 + C8333) * C50887) *
                C51041) *
               C32266 +
           ((C42149 * C1280 + C42150 * C1275 - (C9603 + C9602) * C1281 -
             (C9605 + C9604) * C50887) *
                C22938 +
            ((C8650 + C8651) * C1280 + (C8652 + C8653) * C1275 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C1281 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C1280 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C1275 -
              (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                  C1281 -
              (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                  C50887) *
                 C22938 +
             ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
              (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                 C51041) *
                C32266 +
            (((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
              (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
                 C22938 +
             C43345 * C51041) *
                C51065) *
               C51158 +
           ((((C15894 + C15893) * C1281 -
              ((C15892 + C15891) * C1275 + (C15890 + C15889) * C1280) +
              (C15896 + C15895) * C50887) *
                 C22938 +
             C43346 * C51041) *
                C32266 +
            (((C15906 + C15905) * C1281 -
              ((C15904 + C15903) * C1275 + (C15902 + C15901) * C1280) +
              (C15908 + C15907) * C50887) *
                 C22938 +
             ((C17275 + C17276) * C1281 - (C16645 * C1275 + C16646 * C1280) +
              (C17277 + C17278) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C1172 +
          (((((C7992 + C7991) * C1281 -
              ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
              (C7994 + C7993) * C50887) *
                 C22938 +
             ((C8004 + C8003) * C1281 -
              ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
              (C8006 + C8005) * C50887) *
                 C51041) *
                C32266 +
            (C43346 * C22938 +
             ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
              (C9604 + C9605) * C50887) *
                 C51041) *
                C51065) *
               C51158 +
           ((C43345 * C22938 +
             (C42149 * C1280 + C42150 * C1275 - (C9603 + C9602) * C1281 -
              (C9605 + C9604) * C50887) *
                 C51041) *
                C32266 +
            ((C42548 * C1280 + C42549 * C1275 - (C17276 + C17275) * C1281 -
              (C17278 + C17277) * C50887) *
                 C22938 +
             ((C8979 + C8980) * C1280 + (C8981 + C8982) * C1275 -
              (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
               C51142 * C3328) *
                  C1281 -
              (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
               C51142 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C50007 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C51149 -
              (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                  C50000 -
              (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                  C50887) *
                 C22938 +
             ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
              (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
                 C51041) *
                C32266 +
            (((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
              (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
                 C22938 +
             C44263 * C51041) *
                C51065) *
               C1514 +
           ((((C15894 + C15893) * C50000 -
              ((C15892 + C15891) * C51149 + (C15890 + C15889) * C50007) +
              (C15896 + C15895) * C50887) *
                 C22938 +
             C44264 * C51041) *
                C32266 +
            (((C15906 + C15905) * C50000 -
              ((C15904 + C15903) * C51149 + (C15902 + C15901) * C50007) +
              (C15908 + C15907) * C50887) *
                 C22938 +
             ((C17275 + C17276) * C50000 - (C16645 * C51149 + C16646 * C50007) +
              (C17277 + C17278) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C1172 +
          (((((C7992 + C7991) * C50000 -
              ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
              (C7994 + C7993) * C50887) *
                 C22938 +
             ((C8004 + C8003) * C50000 -
              ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
              (C8006 + C8005) * C50887) *
                 C51041) *
                C32266 +
            (C44264 * C22938 +
             ((C9602 + C9603) * C50000 - (C8654 * C51149 + C8655 * C50007) +
              (C9604 + C9605) * C50887) *
                 C51041) *
                C51065) *
               C1514 +
           ((C44263 * C22938 +
             (C42149 * C50007 + C42150 * C51149 - (C9603 + C9602) * C50000 -
              (C9605 + C9604) * C50887) *
                 C51041) *
                C32266 +
            ((C42548 * C50007 + C42549 * C51149 - (C17276 + C17275) * C50000 -
              (C17278 + C17277) * C50887) *
                 C22938 +
             ((C8979 + C8980) * C50007 + (C8981 + C8982) * C51149 -
              (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
               C51142 * C3328) *
                  C50000 -
              (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
               C51142 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C603 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
                C32266 +
            (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
             C42157 * C51041) *
                C51065) *
               C1514 -
           ((C16655 * C51041 +
             ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C22938) *
                C51065 +
            (C42158 * C51041 +
             ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C22938) *
                C32266) *
               C50965) *
              C51202 +
          (((C42157 * C22938 + C42159 * C51041) * C32266 +
            (C42552 * C22938 +
             ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C8658 * C51041 + C42158 * C22938) * C51065 +
            (((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C51041 +
             ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C22938) *
                C32266) *
               C1514) *
              C51190 +
          (((C8456 * C22938 +
             ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C51041) *
                C32266 +
            (C42159 * C22938 +
             ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C51041) *
                C51065) *
               C1514 -
           ((((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
               C51142 * C8957) *
                  C50882 +
              (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
               C51142 * C8955) *
                  C603) *
                 C51041 +
             ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C22938) *
                C51065 +
            (((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C51041 +
             C8658 * C22938) *
                C32266) *
               C50965) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C603 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
                C32266 +
            (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
             C42157 * C51041) *
                C51065) *
               C51203 -
           ((C16655 * C51041 +
             ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C22938) *
                C51065 +
            (C42158 * C51041 +
             ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C22938) *
                C32266) *
               C51193 +
           ((C16647 * C22938 + C42552 * C51041) * C32266 +
            (((C16478 + C16477) * C603 + (C16476 + C16475) * C50882) * C22938 +
             ((C16648 + C16649) * C603 + (C16650 + C16651) * C50882) * C51041) *
                C51065) *
               C1746) *
              C1172 +
          (((C42157 * C22938 + C42159 * C51041) * C32266 +
            (C42552 * C22938 +
             ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51041) *
                C51065) *
               C51193 -
           ((C8658 * C51041 + C42158 * C22938) * C51065 +
            (((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C51041 +
             ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C22938) *
                C32266) *
               C51203 -
           ((((C49954 * C9082 + C50868 * C9086 + C49961 * C9083 +
               C51142 * C9087) *
                  C50882 +
              (C49954 * C9080 + C50868 * C9084 + C49961 * C9081 +
               C51142 * C9085) *
                  C603) *
                 C51041 +
             ((C16651 + C16650) * C50882 + (C16649 + C16648) * C603) * C22938) *
                C51065 +
            (((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C51041 +
             C16655 * C22938) *
                C32266) *
               C1746) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C50007 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51149 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C50000 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C22938 +
            ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
             (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
             (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
                C22938 +
            ((C8649 + C8648) * C50007 + (C8647 + C8646) * C51149 -
             (C9599 + C9598) * C50000 - (C9601 + C9600) * C50887) *
                C51041) *
               C51065) *
              C50953 * C507 +
          ((((C7992 + C7991) * C50000 -
             ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
             (C7994 + C7993) * C50887) *
                C22938 +
            ((C8004 + C8003) * C50000 -
             ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
             (C8006 + C8005) * C50887) *
                C51041) *
               C32266 +
           (((C9598 + C9599) * C50000 -
             ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
             (C9600 + C9601) * C50887) *
                C22938 +
            ((C9602 + C9603) * C50000 - (C8654 * C51149 + C8655 * C50007) +
             (C9604 + C9605) * C50887) *
                C51041) *
               C51065) *
              C50953 * C508 +
          ((C8337 * C22938 +
            ((C8332 + C8331) * C50007 + (C8330 + C8329) * C51149 -
             (C8328 + C8327) * C50000 - (C8334 + C8333) * C50887) *
                C51041) *
               C32266 +
           (((C8645 + C8644) * C50007 + (C8643 + C8642) * C51149 -
             (C9603 + C9602) * C50000 - (C9605 + C9604) * C50887) *
                C22938 +
            ((C8650 + C8651) * C50007 + (C8652 + C8653) * C51149 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C50000 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C121 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C109 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C122 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C110 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C123 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C111 -
            (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
                C124 -
            (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
                C112) *
               C22938 +
           ((C7987 + C7988) * C121 + (C7989 + C7990) * C109 -
            (C7991 + C7992) * C122 - (C7993 + C7994) * C110 +
            (C7995 + C7996) * C123 + (C7997 + C7998) * C111 -
            (C49954 * C262 + C50868 * C268 + C49961 * C261 + C51142 * C267) *
                C124 -
            (C49954 * C274 + C50868 * C281 + C49961 * C269 + C51142 * C277) *
                C112) *
               C51041) *
              C32266 +
          (((C15889 + C15890) * C121 + (C15891 + C15892) * C109 -
            (C15893 + C15894) * C122 - (C15895 + C15896) * C110 +
            (C15897 + C15898) * C123 + (C15899 + C15900) * C111 -
            (C49954 * C386 + C50868 * C392 + C49961 * C385 + C51142 * C391) *
                C124 -
            (C49954 * C398 + C50868 * C405 + C49961 * C393 + C51142 * C401) *
                C112) *
               C22938 +
           ((C8649 + C8648) * C121 + (C8647 + C8646) * C109 -
            (C9599 + C9598) * C122 - (C9601 + C9600) * C110 +
            (C49961 * C720 + C51142 * C728 + C49954 * C721 + C50868 * C729) *
                C123 +
            (C49961 * C732 + C51142 * C744 + C49954 * C733 + C50868 * C745) *
                C111 -
            (C49954 * C1412 + C50868 * C1413 + C49961 * C721 + C51142 * C729) *
                C124 -
            (C49954 * C1414 + C50868 * C1415 + C49961 * C733 + C51142 * C745) *
                C112) *
               C51041) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C50007 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51149 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C50000 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C22938 +
            ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
             (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
             (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
                C22938 +
            (C42145 * C50007 + C42146 * C51149 - (C9599 + C9598) * C50000 -
             (C9601 + C9600) * C50887) *
                C51041) *
               C51065) *
              C848 +
          ((((C15894 + C15893) * C50000 -
             ((C15892 + C15891) * C51149 + (C15890 + C15889) * C50007) +
             (C15896 + C15895) * C50887) *
                C22938 +
            ((C9598 + C9599) * C50000 - (C42147 * C51149 + C42148 * C50007) +
             (C9600 + C9601) * C50887) *
                C51041) *
               C32266 +
           (((C15906 + C15905) * C50000 -
             ((C15904 + C15903) * C51149 + (C15902 + C15901) * C50007) +
             (C15908 + C15907) * C50887) *
                C22938 +
            ((C17275 + C17276) * C50000 - (C16645 * C51149 + C16646 * C50007) +
             (C17277 + C17278) * C50887) *
                C51041) *
               C51065) *
              C849 +
          ((C16483 * C22938 +
            ((C8975 + C8976) * C50007 + (C8977 + C8978) * C51149 -
             (C17276 + C17275) * C50000 - (C17278 + C17277) * C50887) *
                C51041) *
               C32266 +
           (((C16478 + C16477) * C50007 + (C16476 + C16475) * C51149 -
             (C16474 + C16473) * C50000 - (C16480 + C16479) * C50887) *
                C22938 +
            ((C16648 + C16649) * C50007 + (C16650 + C16651) * C51149 -
             (C49954 * C3449 + C50868 * C3455 + C49961 * C3450 +
              C51142 * C3456) *
                 C50000 -
             (C49954 * C3452 + C50868 * C3458 + C49961 * C3453 +
              C51142 * C3459) *
                 C50887) *
                C51041) *
               C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C22938 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
               C32266 +
           (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
            ((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C51041) *
               C51065) *
              C50953 * C599 -
          ((C8658 * C51041 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C22938) *
               C51065 +
           (((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C51041 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C22938) *
               C32266) *
              C50953 * C600 +
          ((C8456 * C22938 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C51041) *
               C32266 +
           (((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C22938 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C51041) *
               C51065) *
              C50953 * C601 -
          ((((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C51041 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C22938) *
               C51065 +
           (((C8462 + C8461) * C50882 + (C8460 + C8459) * C603) * C51041 +
            C8463 * C22938) *
               C32266) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C256 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C251 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C257 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C252 +
             (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                 C258 +
             (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
             (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
             (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C256 + (C15891 + C15892) * C251 -
             (C15893 + C15894) * C257 - (C15895 + C15896) * C252 +
             (C15897 + C15898) * C258 + (C15899 + C15900) * C253) *
                C22938 +
            ((C8649 + C8648) * C256 + (C8647 + C8646) * C251 -
             (C9599 + C9598) * C257 - (C9601 + C9600) * C252 +
             (C41429 + C41430) * C258 + (C41431 + C41432) * C253) *
                C51041) *
               C51065) *
              C50953 * C51157 +
          ((((C7992 + C7991) * C257 -
             ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
             (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
             (C7998 + C7997) * C253) *
                C22938 +
            ((C8004 + C8003) * C257 -
             ((C8002 + C8001) * C251 + (C8000 + C7999) * C256) +
             (C8006 + C8005) * C252 - (C8008 + C8007) * C258 -
             (C8010 + C8009) * C253) *
                C51041) *
               C32266 +
           (((C9598 + C9599) * C257 -
             ((C8646 + C8647) * C251 + (C8648 + C8649) * C256) +
             (C9600 + C9601) * C252 - (C41430 + C41429) * C258 -
             (C41432 + C41431) * C253) *
                C22938 +
            ((C9602 + C9603) * C257 - (C8654 * C251 + C8655 * C256) +
             (C9604 + C9605) * C252 -
             (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                 C258 -
             (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                 C253) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C603 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
                C32266 +
            (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
             C42157 * C51041) *
                C51065) *
               C848 -
           ((C16655 * C51041 +
             ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C22938) *
                C51065 +
            (C42158 * C51041 +
             ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C22938) *
                C32266) *
               C849 +
           ((C16647 * C22938 + C42552 * C51041) * C32266 +
            (((C16478 + C16477) * C603 + (C16476 + C16475) * C50882) * C22938 +
             ((C16648 + C16649) * C603 + (C16650 + C16651) * C50882) * C51041) *
                C51065) *
               C850) *
              C51157 +
          (((C42157 * C22938 + C42159 * C51041) * C32266 +
            (C42552 * C22938 +
             ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51041) *
                C51065) *
               C849 -
           ((C8658 * C51041 + C42158 * C22938) * C51065 +
            (((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C51041 +
             ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C22938) *
                C32266) *
               C848 -
           ((((C49954 * C9082 + C50868 * C9086 + C49961 * C9083 +
               C51142 * C9087) *
                  C50882 +
              (C49954 * C9080 + C50868 * C9084 + C49961 * C9081 +
               C51142 * C9085) *
                  C603) *
                 C51041 +
             ((C16651 + C16650) * C50882 + (C16649 + C16648) * C603) * C22938) *
                C51065 +
            (((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C51041 +
             C16655 * C22938) *
                C32266) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C603 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
                C32266 +
            (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
             C42157 * C51041) *
                C51065) *
               C51158 -
           ((C16655 * C51041 +
             ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C22938) *
                C51065 +
            (C42158 * C51041 +
             ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C22938) *
                C32266) *
               C50965) *
              C507 +
          (((C42157 * C22938 + C42159 * C51041) * C32266 +
            (((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C22938 +
             ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C8658 * C51041 + C42158 * C22938) * C51065 +
            (((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C51041 +
             ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C22938) *
                C32266) *
               C51158) *
              C508 +
          (((C8456 * C22938 +
             ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C51041) *
                C32266 +
            (C42159 * C22938 +
             ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C51041) *
                C51065) *
               C51158 -
           ((((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
               C51142 * C8957) *
                  C50882 +
              (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
               C51142 * C8955) *
                  C603) *
                 C51041 +
             ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C22938) *
                C51065 +
            (((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C51041 +
             C8658 * C22938) *
                C32266) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C256 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C251 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C257 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C252 +
             (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                 C258 +
             (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
             (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
             (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C256 + (C15891 + C15892) * C251 -
             (C15893 + C15894) * C257 - (C15895 + C15896) * C252 +
             (C15897 + C15898) * C258 + (C15899 + C15900) * C253) *
                C22938 +
            ((C8649 + C8648) * C256 + (C8647 + C8646) * C251 -
             (C9599 + C9598) * C257 - (C9601 + C9600) * C252 +
             (C41429 + C41430) * C258 + (C41431 + C41432) * C253) *
                C51041) *
               C51065) *
              C51158 +
          ((((C15894 + C15893) * C257 -
             ((C15892 + C15891) * C251 + (C15890 + C15889) * C256) +
             (C15896 + C15895) * C252 - (C15898 + C15897) * C258 -
             (C15900 + C15899) * C253) *
                C22938 +
            ((C9598 + C9599) * C257 -
             ((C8646 + C8647) * C251 + (C8648 + C8649) * C256) +
             (C9600 + C9601) * C252 - (C41430 + C41429) * C258 -
             (C41432 + C41431) * C253) *
                C51041) *
               C32266 +
           (((C15906 + C15905) * C257 -
             ((C15904 + C15903) * C251 + (C15902 + C15901) * C256) +
             (C15908 + C15907) * C252 - (C15910 + C15909) * C258 -
             (C15912 + C15911) * C253) *
                C22938 +
            ((C17275 + C17276) * C257 - (C16645 * C251 + C16646 * C256) +
             (C17277 + C17278) * C252 -
             (C49954 * C969 + C50868 * C977 + C49961 * C970 + C51142 * C978) *
                 C258 -
             (C49954 * C973 + C50868 * C981 + C49961 * C974 + C51142 * C982) *
                 C253) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C22938 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
               C32266 +
           (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
            C42157 * C51041) *
               C51065) *
              C1051 -
          ((C16655 * C51041 +
            ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C22938) *
               C51065 +
           (C42158 * C51041 +
            ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C22938) *
               C32266) *
              C1052 +
          ((C16647 * C22938 + C42552 * C51041) * C32266 +
           (((C16478 + C16477) * C603 + (C16476 + C16475) * C50882) * C22938 +
            ((C16648 + C16649) * C603 + (C16650 + C16651) * C50882) * C51041) *
               C51065) *
              C1053 -
          ((((C49954 * C16631 + C50868 * C16633 + C49961 * C13922 +
              C51142 * C13925) *
                 C50882 +
             (C49954 * C16630 + C50868 * C16632 + C49961 * C13919 +
              C51142 * C13923) *
                 C603) *
                C51041 +
            ((C16778 + C16777) * C50882 + (C16776 + C16775) * C603) * C22938) *
               C51065 +
           (((C16651 + C16650) * C50882 + (C16649 + C16648) * C603) * C51041 +
            C16779 * C22938) *
               C32266) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1174 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51201 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1175 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C51187 +
             (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                 C1176 +
             (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                 C1171) *
                C22938 +
            ((C7987 + C7988) * C1174 + (C7989 + C7990) * C51201 -
             (C7991 + C7992) * C1175 - (C7993 + C7994) * C51187 +
             (C7995 + C7996) * C1176 + (C7997 + C7998) * C1171) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C1174 + (C15891 + C15892) * C51201 -
             (C15893 + C15894) * C1175 - (C15895 + C15896) * C51187 +
             (C15897 + C15898) * C1176 + (C15899 + C15900) * C1171) *
                C22938 +
            (C42145 * C1174 + C42146 * C51201 - C43331 * C1175 -
             C43332 * C51187 + (C41429 + C41430) * C1176 +
             (C41431 + C41432) * C1171) *
                C51041) *
               C51065) *
              C1514 +
          ((((C15894 + C15893) * C1175 -
             ((C15892 + C15891) * C51201 + (C15890 + C15889) * C1174) +
             (C15896 + C15895) * C51187 - (C15898 + C15897) * C1176 -
             (C15900 + C15899) * C1171) *
                C22938 +
            (C43333 * C1175 - (C42147 * C51201 + C42148 * C1174) +
             C43336 * C51187 - (C41430 + C41429) * C1176 -
             (C41432 + C41431) * C1171) *
                C51041) *
               C32266 +
           (((C15906 + C15905) * C1175 -
             ((C15904 + C15903) * C51201 + (C15902 + C15901) * C1174) +
             (C15908 + C15907) * C51187 - (C15910 + C15909) * C1176 -
             (C15912 + C15911) * C1171) *
                C22938 +
            ((C17275 + C17276) * C1175 - (C16645 * C51201 + C16646 * C1174) +
             (C17277 + C17278) * C51187 -
             (C49954 * C969 + C50868 * C977 + C49961 * C970 + C51142 * C978) *
                 C1176 -
             (C49954 * C973 + C50868 * C981 + C49961 * C974 + C51142 * C982) *
                 C1171) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C1280 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C1275 -
              (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                  C1281 -
              (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                  C50887) *
                 C22938 +
             ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
              (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                 C51041) *
                C32266 +
            (((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
              (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
                 C22938 +
             C43345 * C51041) *
                C51065) *
               C1514 +
           ((((C15894 + C15893) * C1281 -
              ((C15892 + C15891) * C1275 + (C15890 + C15889) * C1280) +
              (C15896 + C15895) * C50887) *
                 C22938 +
             C43346 * C51041) *
                C32266 +
            (((C15906 + C15905) * C1281 -
              ((C15904 + C15903) * C1275 + (C15902 + C15901) * C1280) +
              (C15908 + C15907) * C50887) *
                 C22938 +
             ((C17275 + C17276) * C1281 - (C16645 * C1275 + C16646 * C1280) +
              (C17277 + C17278) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C51157 +
          (((((C7992 + C7991) * C1281 -
              ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
              (C7994 + C7993) * C50887) *
                 C22938 +
             ((C8004 + C8003) * C1281 -
              ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
              (C8006 + C8005) * C50887) *
                 C51041) *
                C32266 +
            (C43346 * C22938 +
             ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
              (C9604 + C9605) * C50887) *
                 C51041) *
                C51065) *
               C1514 +
           ((C43345 * C22938 +
             (C42149 * C1280 + C42150 * C1275 - (C9603 + C9602) * C1281 -
              (C9605 + C9604) * C50887) *
                 C51041) *
                C32266 +
            ((C42548 * C1280 + C42549 * C1275 - (C17276 + C17275) * C1281 -
              (C17278 + C17277) * C50887) *
                 C22938 +
             ((C8979 + C8980) * C1280 + (C8981 + C8982) * C1275 -
              (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
               C51142 * C3328) *
                  C1281 -
              (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
               C51142 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C22938 +
            ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
             (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
             (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
                C22938 +
            C43345 * C51041) *
               C51065) *
              C51203 +
          ((((C15894 + C15893) * C1281 -
             ((C15892 + C15891) * C1275 + (C15890 + C15889) * C1280) +
             (C15896 + C15895) * C50887) *
                C22938 +
            C43346 * C51041) *
               C32266 +
           (((C15906 + C15905) * C1281 -
             ((C15904 + C15903) * C1275 + (C15902 + C15901) * C1280) +
             (C15908 + C15907) * C50887) *
                C22938 +
            ((C17275 + C17276) * C1281 - (C16645 * C1275 + C16646 * C1280) +
             (C17277 + C17278) * C50887) *
                C51041) *
               C51065) *
              C51193 +
          ((C17771 * C22938 +
            (C42548 * C1280 + C42549 * C1275 - (C17276 + C17275) * C1281 -
             (C17278 + C17277) * C50887) *
                C51041) *
               C32266 +
           (((C16478 + C16477) * C1280 + (C16476 + C16475) * C1275 -
             (C16474 + C16473) * C1281 - (C16480 + C16479) * C50887) *
                C22938 +
            ((C16648 + C16649) * C1280 + (C16650 + C16651) * C1275 -
             (C49954 * C3449 + C50868 * C3455 + C49961 * C3450 +
              C51142 * C3456) *
                 C1281 -
             (C49954 * C3452 + C50868 * C3458 + C49961 * C3453 +
              C51142 * C3459) *
                 C50887) *
                C51041) *
               C51065) *
              C1746) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C121 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C109 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C122 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C110 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C123 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C111 -
            (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
                C124 -
            (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
                C112) *
               C22938 +
           ((C7987 + C7988) * C121 + (C7989 + C7990) * C109 -
            (C7991 + C7992) * C122 - (C7993 + C7994) * C110 +
            (C7995 + C7996) * C123 + (C7997 + C7998) * C111 -
            (C49954 * C262 + C50868 * C268 + C49961 * C261 + C51142 * C267) *
                C124 -
            (C49954 * C274 + C50868 * C281 + C49961 * C269 + C51142 * C277) *
                C112) *
               C51041) *
              C32266 +
          (((C15889 + C15890) * C121 + (C15891 + C15892) * C109 -
            (C15893 + C15894) * C122 - (C15895 + C15896) * C110 +
            (C15897 + C15898) * C123 + (C15899 + C15900) * C111 -
            (C49954 * C386 + C50868 * C392 + C49961 * C385 + C51142 * C391) *
                C124 -
            (C49954 * C398 + C50868 * C405 + C49961 * C393 + C51142 * C401) *
                C112) *
               C22938 +
           ((C8649 + C8648) * C121 + (C8647 + C8646) * C109 -
            (C9599 + C9598) * C122 - (C9601 + C9600) * C110 +
            (C49961 * C720 + C51142 * C728 + C49954 * C721 + C50868 * C729) *
                C123 +
            (C49961 * C732 + C51142 * C744 + C49954 * C733 + C50868 * C745) *
                C111 -
            (C49954 * C1412 + C50868 * C1413 + C49961 * C721 + C51142 * C729) *
                C124 -
            (C49954 * C1414 + C50868 * C1415 + C49961 * C733 + C51142 * C745) *
                C112) *
               C51041) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C50007 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51149 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C50000 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C22938 +
            ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
             (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
             (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
                C22938 +
            ((C8649 + C8648) * C50007 + (C8647 + C8646) * C51149 -
             (C9599 + C9598) * C50000 - (C9601 + C9600) * C50887) *
                C51041) *
               C51065) *
              C50953 * C507 +
          ((((C7992 + C7991) * C50000 -
             ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
             (C7994 + C7993) * C50887) *
                C22938 +
            ((C8004 + C8003) * C50000 -
             ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
             (C8006 + C8005) * C50887) *
                C51041) *
               C32266 +
           (((C9598 + C9599) * C50000 -
             ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
             (C9600 + C9601) * C50887) *
                C22938 +
            ((C9602 + C9603) * C50000 - (C8654 * C51149 + C8655 * C50007) +
             (C9604 + C9605) * C50887) *
                C51041) *
               C51065) *
              C50953 * C508 +
          ((C8337 * C22938 +
            ((C8332 + C8331) * C50007 + (C8330 + C8329) * C51149 -
             (C8328 + C8327) * C50000 - (C8334 + C8333) * C50887) *
                C51041) *
               C32266 +
           (((C8645 + C8644) * C50007 + (C8643 + C8642) * C51149 -
             (C9603 + C9602) * C50000 - (C9605 + C9604) * C50887) *
                C22938 +
            ((C8650 + C8651) * C50007 + (C8652 + C8653) * C51149 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C50000 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C256 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C251 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C257 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C252 +
             (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                 C258 +
             (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
             (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
             (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C256 + (C15891 + C15892) * C251 -
             (C15893 + C15894) * C257 - (C15895 + C15896) * C252 +
             (C15897 + C15898) * C258 + (C15899 + C15900) * C253) *
                C22938 +
            ((C8649 + C8648) * C256 + (C8647 + C8646) * C251 -
             (C9599 + C9598) * C257 - (C9601 + C9600) * C252 +
             (C41429 + C41430) * C258 + (C41431 + C41432) * C253) *
                C51041) *
               C51065) *
              C50953 * C51157 +
          ((((C7992 + C7991) * C257 -
             ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
             (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
             (C7998 + C7997) * C253) *
                C22938 +
            ((C8004 + C8003) * C257 -
             ((C8002 + C8001) * C251 + (C8000 + C7999) * C256) +
             (C8006 + C8005) * C252 - (C8008 + C8007) * C258 -
             (C8010 + C8009) * C253) *
                C51041) *
               C32266 +
           (((C9598 + C9599) * C257 -
             ((C8646 + C8647) * C251 + (C8648 + C8649) * C256) +
             (C9600 + C9601) * C252 - (C41430 + C41429) * C258 -
             (C41432 + C41431) * C253) *
                C22938 +
            ((C9602 + C9603) * C257 - (C8654 * C251 + C8655 * C256) +
             (C9604 + C9605) * C252 -
             (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                 C258 -
             (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                 C253) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C22938 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
               C32266 +
           (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
            ((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C51041) *
               C51065) *
              C50953 * C599 -
          ((C8658 * C51041 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C22938) *
               C51065 +
           (((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C51041 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C22938) *
               C32266) *
              C50953 * C600 +
          ((C8456 * C22938 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C51041) *
               C32266 +
           (((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C22938 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C51041) *
               C51065) *
              C50953 * C601 -
          ((((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C51041 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C22938) *
               C51065 +
           (((C8462 + C8461) * C50882 + (C8460 + C8459) * C603) * C51041 +
            C8463 * C22938) *
               C32266) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C256 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C251 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C257 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C252 +
             (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                 C258 +
             (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                 C253) *
                C22938 +
            ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
             (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
             (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
                C51041) *
               C32266 +
           (((C15889 + C15890) * C256 + (C15891 + C15892) * C251 -
             (C15893 + C15894) * C257 - (C15895 + C15896) * C252 +
             (C15897 + C15898) * C258 + (C15899 + C15900) * C253) *
                C22938 +
            ((C8649 + C8648) * C256 + (C8647 + C8646) * C251 -
             (C9599 + C9598) * C257 - (C9601 + C9600) * C252 +
             (C41429 + C41430) * C258 + (C41431 + C41432) * C253) *
                C51041) *
               C51065) *
              C51158 +
          ((((C15894 + C15893) * C257 -
             ((C15892 + C15891) * C251 + (C15890 + C15889) * C256) +
             (C15896 + C15895) * C252 - (C15898 + C15897) * C258 -
             (C15900 + C15899) * C253) *
                C22938 +
            ((C9598 + C9599) * C257 -
             ((C8646 + C8647) * C251 + (C8648 + C8649) * C256) +
             (C9600 + C9601) * C252 - (C41430 + C41429) * C258 -
             (C41432 + C41431) * C253) *
                C51041) *
               C32266 +
           (((C15906 + C15905) * C257 -
             ((C15904 + C15903) * C251 + (C15902 + C15901) * C256) +
             (C15908 + C15907) * C252 - (C15910 + C15909) * C258 -
             (C15912 + C15911) * C253) *
                C22938 +
            ((C17275 + C17276) * C257 - (C16645 * C251 + C16646 * C256) +
             (C17277 + C17278) * C252 -
             (C49954 * C969 + C50868 * C977 + C49961 * C970 + C51142 * C978) *
                 C258 -
             (C49954 * C973 + C50868 * C981 + C49961 * C974 + C51142 * C982) *
                 C253) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                  C603 +
              (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                  C50882) *
                 C22938 +
             ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C51041) *
                C32266 +
            (((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C22938 +
             C42157 * C51041) *
                C51065) *
               C51158 -
           ((C16655 * C51041 +
             ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C22938) *
                C51065 +
            (C42158 * C51041 +
             ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C22938) *
                C32266) *
               C50965) *
              C507 +
          (((C42157 * C22938 + C42159 * C51041) * C32266 +
            (((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C22938 +
             ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C8658 * C51041 + C42158 * C22938) * C51065 +
            (((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C51041 +
             ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C22938) *
                C32266) *
               C51158) *
              C508 +
          (((C8456 * C22938 +
             ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C51041) *
                C32266 +
            (C42159 * C22938 +
             ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C51041) *
                C51065) *
               C51158 -
           ((((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
               C51142 * C8957) *
                  C50882 +
              (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
               C51142 * C8955) *
                  C603) *
                 C51041 +
             ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C22938) *
                C51065 +
            (((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C51041 +
             C8658 * C22938) *
                C32266) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C51204 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C51196 +
            (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C25755) *
               C32266 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C51204 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C51196 +
            (C14087 + C14088 - C14089 - C14090 + C14091 + C14092) * C25755) *
               C51065) *
              C50953 * C1172 +
          (((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C51204 +
            (C11676 - (C11675 + C11674) + C11677 - C11678 - C11679) * C51196 +
            (C11682 - (C11681 + C11680) + C11683 - C11684 - C11685) * C25755) *
               C32266 +
           ((C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C51204 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C51196 +
            (C11958 * C1175 - (C11258 * C51201 + C11259 * C1174) +
             C11959 * C51187 - (C10648 * C2981 + C50863 * C2987) * C1176 -
             (C10648 * C2984 + C50863 * C2990) * C1171) *
                C25755) *
               C51065) *
              C50953 * C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51204 +
            (C11784 + C11785 - C11786 - C11787) * C51196 + C11804 * C25755) *
               C32266 +
           ((C14436 + C14437 - C14438 - C14439) * C51204 + C14454 * C51196 +
            C14241 * C25755) *
               C51065) *
              C50953 * C51202 +
          (((C11786 - (C11785 + C11784) + C11787) * C51204 +
            (C11790 - (C11789 + C11788) + C11791) * C51196 +
            (C11794 - (C11793 + C11792) + C11795) * C25755) *
               C32266 +
           (C14455 * C51204 + C14456 * C51196 +
            (C11964 - (C11950 + C11951) + C11965) * C25755) *
               C51065) *
              C50953 * C51190 +
          ((C11804 * C51204 + C11805 * C51196 +
            (C11798 + C11797 - C11796 - C11799) * C25755) *
               C32266 +
           (C14241 * C51204 + (C11951 + C11950 - C11964 - C11965) * C51196 +
            (C11264 * C1280 + C11265 * C1275 -
             (C10648 * C8609 + C50863 * C8613) * C1281 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C25755) *
               C51065) *
              C50953 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C51204 +
             (C11784 + C11785 - C11786 - C11787) * C51196 + C11804 * C25755) *
                C32266 +
            ((C14436 + C14437 - C14438 - C14439) * C51204 + C14454 * C51196 +
             C14241 * C25755) *
                C51065) *
               C51158 +
           (((C14438 - (C14437 + C14436) + C14439) * C51204 + C14455 * C51196 +
             C14456 * C25755) *
                C32266 +
            ((C14949 - (C14950 + C14951) + C14952) * C51204 + C20016 * C51196 +
             (C14447 - (C14448 + C14449) + C14450) * C25755) *
                C51065) *
               C50965) *
              C1172 +
          ((((C11786 - (C11785 + C11784) + C11787) * C51204 +
             (C11790 - (C11789 + C11788) + C11791) * C51196 +
             (C11794 - (C11793 + C11792) + C11795) * C25755) *
                C32266 +
            (C14455 * C51204 + C14456 * C51196 +
             (C11964 - (C11950 + C11951) + C11965) * C25755) *
                C51065) *
               C51158 +
           ((C14454 * C51204 + C14241 * C51196 +
             (C11951 + C11950 - C11964 - C11965) * C25755) *
                C32266 +
            (C20015 * C51204 + (C14449 + C14448 - C14447 - C14450) * C51196 +
             (C11492 * C1280 + C11493 * C1275 -
              (C10648 * C8950 + C50863 * C8954) * C1281 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C25755) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C50007 +
              (C10648 * C136 + C50863 * C146) * C51149 -
              (C10648 * C126 + C50863 * C133) * C50000 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C51204 +
             (C11016 + C11017 - C11018 - C11019) * C51196 + C11048 * C25755) *
                C32266 +
            ((C13614 + C13615 - C13616 - C13617) * C51204 + C15153 * C51196 +
             C13216 * C25755) *
                C51065) *
               C1514 +
           (((C13616 - (C13615 + C13614) + C13617) * C51204 + C15154 * C51196 +
             C15155 * C25755) *
                C32266 +
            ((C13646 - (C13647 + C13648) + C13649) * C51204 + C20715 * C51196 +
             (C13652 - (C13634 + C13635) + C13653) * C25755) *
                C51065) *
               C50965) *
              C1172 +
          ((((C11018 - (C11017 + C11016) + C11019) * C51204 +
             (C11022 - (C11021 + C11020) + C11023) * C51196 +
             (C11026 - (C11025 + C11024) + C11027) * C25755) *
                C32266 +
            (C15154 * C51204 + C15155 * C51196 +
             (C12430 - (C12431 + C12432) + C12433) * C25755) *
                C51065) *
               C1514 +
           ((C15153 * C51204 + C13216 * C51196 +
             (C12432 + C12431 - C12430 - C12433) * C25755) *
                C32266 +
            (C19230 * C51204 + (C13635 + C13634 - C13652 - C13653) * C51196 +
             (C11492 * C50007 + C11493 * C51149 -
              (C10648 * C8950 + C50863 * C8954) * C50000 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C25755) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51204 +
             (C11120 + C11121) * C51196 + C11132 * C25755) *
                C32266 +
            ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
                C51065) *
               C1514 -
           ((C13465 * C25755 + C13800 * C51196 + (C13801 + C13802) * C51204) *
                C51065 +
            (C11275 * C25755 + C13466 * C51196 + (C13463 + C13462) * C51204) *
                C32266) *
               C50965) *
              C51202 +
          (((C13464 * C51204 + C13315 * C51196 + C13467 * C25755) * C32266 +
            (C13803 * C51204 + C13804 * C51196 + (C11498 + C11499) * C25755) *
                C51065) *
               C50965 -
           ((C11274 * C25755 + C11275 * C51196 + C13466 * C51204) * C51065 +
            (C11135 * C25755 + (C11123 + C11122) * C51196 +
             (C11121 + C11120) * C51204) *
                C32266) *
               C1514) *
              C51190 +
          (((C11132 * C51204 + C11133 * C51196 + (C11127 + C11126) * C25755) *
                C32266 +
            (C13315 * C51204 + C13467 * C51196 + (C11272 + C11273) * C25755) *
                C51065) *
               C1514 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C25755 +
             (C11499 + C11498) * C51196 + C13465 * C51204) *
                C51065 +
            ((C11273 + C11272) * C25755 + C11274 * C51196 + C11275 * C51204) *
                C32266) *
               C50965) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51204 +
             (C11120 + C11121) * C51196 + C11132 * C25755) *
                C32266 +
            ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
                C51065) *
               C51203 -
           ((C13465 * C25755 + C13800 * C51196 + (C13801 + C13802) * C51204) *
                C51065 +
            (C11275 * C25755 + C13466 * C51196 + (C13463 + C13462) * C51204) *
                C32266) *
               C51193 +
           ((C19384 * C51204 + C13803 * C51196 + C13804 * C25755) * C32266 +
            (C21760 * C51204 + C19387 * C51196 + (C13819 + C13820) * C25755) *
                C51065) *
               C1746) *
              C1172 +
          (((C13464 * C51204 + C13315 * C51196 + C13467 * C25755) * C32266 +
            (C13803 * C51204 + C13804 * C51196 + (C11498 + C11499) * C25755) *
                C51065) *
               C51193 -
           ((C11274 * C25755 + C11275 * C51196 + C13466 * C51204) * C51065 +
            (C11135 * C25755 + (C11123 + C11122) * C51196 +
             (C11121 + C11120) * C51204) *
                C32266) *
               C51203 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C25755 +
             (C13820 + C13819) * C51196 + C19386 * C51204) *
                C51065 +
            ((C11499 + C11498) * C25755 + C13465 * C51196 + C13800 * C51204) *
                C32266) *
               C1746) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51204 +
            (C11016 + C11017 - C11018 - C11019) * C51196 + C11048 * C25755) *
               C32266 +
           ((C13614 + C13615 - C13616 - C13617) * C51204 + C15153 * C51196 +
            C13216 * C25755) *
               C51065) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C51204 +
            (C11022 - (C11021 + C11020) + C11023) * C51196 +
            (C11026 - (C11025 + C11024) + C11027) * C25755) *
               C32266 +
           (C15154 * C51204 + C15155 * C51196 +
            (C12430 - (C12431 + C12432) + C12433) * C25755) *
               C51065) *
              C50953 * C508 +
          ((C11048 * C51204 + C11049 * C51196 +
            (C11046 + C11045 - C11044 - C11047) * C25755) *
               C32266 +
           (C13216 * C51204 + (C12432 + C12431 - C12430 - C12433) * C51196 +
            (C11264 * C50007 + C11265 * C51149 -
             (C10648 * C8609 + C50863 * C8613) * C50000 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C25755) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C51204 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C51196 +
           (C10790 * C121 + C10791 * C109 - C10792 * C122 - C10793 * C110 +
            C10794 * C123 + C10795 * C111 -
            (C10648 * C515 + C50863 * C520) * C124 -
            (C10648 * C524 + C50863 * C530) * C112) *
               C25755) *
              C32266 +
          ((C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
            C13060 * C123 + C13061 * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C51204 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            C12890 * C123 + C12891 * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C51196 +
           (C11261 * C121 + C11260 * C109 - C11956 * C122 - C11957 * C110 +
            C12892 * C123 + C12893 * C111 -
            (C10648 * C722 + C50863 * C738) * C124 -
            (C10648 * C734 + C50863 * C746) * C112) *
               C25755) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51204 +
            (C11016 + C11017 - C11018 - C11019) * C51196 + C11048 * C25755) *
               C32266 +
           ((C13614 + C13615 - C13616 - C13617) * C51204 + C15153 * C51196 +
            C13216 * C25755) *
               C51065) *
              C848 +
          (((C13616 - (C13615 + C13614) + C13617) * C51204 + C15154 * C51196 +
            C15155 * C25755) *
               C32266 +
           ((C13646 - (C13647 + C13648) + C13649) * C51204 + C20715 * C51196 +
            (C13652 - (C13634 + C13635) + C13653) * C25755) *
               C51065) *
              C849 +
          ((C19229 * C51204 + C19230 * C51196 +
            (C13635 + C13634 - C13652 - C13653) * C25755) *
               C32266 +
           (C21657 * C51204 + (C19220 + C19219 - C19233 - C19234) * C51196 +
            (C13815 * C50007 + C13816 * C51149 -
             (C10648 * C9080 + C50863 * C9084) * C50000 -
             (C10648 * C9082 + C50863 * C9086) * C50887) *
                C25755) *
               C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51204 +
            (C11120 + C11121) * C51196 + C11132 * C25755) *
               C32266 +
           ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
               C51065) *
              C50953 * C599 -
          ((C11274 * C25755 + C11275 * C51196 + C13466 * C51204) * C51065 +
           (C11135 * C25755 + (C11123 + C11122) * C51196 +
            (C11121 + C11120) * C51204) *
               C32266) *
              C50953 * C600 +
          ((C11132 * C51204 + C11133 * C51196 + (C11127 + C11126) * C25755) *
               C32266 +
           (C13315 * C51204 + C13467 * C51196 + (C11272 + C11273) * C25755) *
               C51065) *
              C50953 * C601 -
          ((((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C25755 +
            (C11273 + C11272) * C51196 + C11274 * C51204) *
               C51065 +
           ((C11139 + C11138) * C25755 + C11134 * C51196 + C11135 * C51204) *
               C32266) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51204 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51196 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C25755) *
               C32266 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51204 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51196 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C25755) *
               C51065) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C51204 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C51196 +
            (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C25755) *
               C32266 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51204 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C51196 +
            (C11958 * C257 - (C11258 * C251 + C11259 * C256) + C11959 * C252 -
             (C10648 * C2981 + C50863 * C2987) * C258 -
             (C10648 * C2984 + C50863 * C2990) * C253) *
                C25755) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51204 +
             (C11120 + C11121) * C51196 + C11132 * C25755) *
                C32266 +
            ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
                C51065) *
               C848 -
           ((C13465 * C25755 + C13800 * C51196 + (C13801 + C13802) * C51204) *
                C51065 +
            (C11275 * C25755 + C13466 * C51196 + (C13463 + C13462) * C51204) *
                C32266) *
               C849 +
           ((C19384 * C51204 + C13803 * C51196 + C13804 * C25755) * C32266 +
            (C21760 * C51204 + C19387 * C51196 + (C13819 + C13820) * C25755) *
                C51065) *
               C850) *
              C51157 +
          (((C13464 * C51204 + C13315 * C51196 + C13467 * C25755) * C32266 +
            (C13803 * C51204 + C13804 * C51196 + (C11498 + C11499) * C25755) *
                C51065) *
               C849 -
           ((C11274 * C25755 + C11275 * C51196 + C13466 * C51204) * C51065 +
            (C11135 * C25755 + (C11123 + C11122) * C51196 +
             (C11121 + C11120) * C51204) *
                C32266) *
               C848 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C25755 +
             (C13820 + C13819) * C51196 + C19386 * C51204) *
                C51065 +
            ((C11499 + C11498) * C25755 + C13465 * C51196 + C13800 * C51204) *
                C32266) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51204 +
             (C11120 + C11121) * C51196 + C11132 * C25755) *
                C32266 +
            ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
                C51065) *
               C51158 -
           ((C13465 * C25755 + C13800 * C51196 + (C13801 + C13802) * C51204) *
                C51065 +
            (C11275 * C25755 + C13466 * C51196 + (C13463 + C13462) * C51204) *
                C32266) *
               C50965) *
              C507 +
          (((C13464 * C51204 + C13315 * C51196 + C13467 * C25755) * C32266 +
            (C13803 * C51204 + C13804 * C51196 + (C11498 + C11499) * C25755) *
                C51065) *
               C50965 -
           ((C11274 * C25755 + C11275 * C51196 + C13466 * C51204) * C51065 +
            (C11135 * C25755 + (C11123 + C11122) * C51196 +
             (C11121 + C11120) * C51204) *
                C32266) *
               C51158) *
              C508 +
          (((C11132 * C51204 + C11133 * C51196 + (C11127 + C11126) * C25755) *
                C32266 +
            (C13315 * C51204 + C13467 * C51196 + (C11272 + C11273) * C25755) *
                C51065) *
               C51158 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C25755 +
             (C11499 + C11498) * C51196 + C13465 * C51204) *
                C51065 +
            ((C11273 + C11272) * C25755 + C11274 * C51196 + C11275 * C51204) *
                C32266) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51204 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51196 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C25755) *
               C32266 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51204 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51196 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C25755) *
               C51065) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C51204 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51196 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C25755) *
               C32266 +
           ((C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C51204 +
            (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51196 +
            (C13644 * C257 - (C11491 * C251 + C11490 * C256) + C13645 * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C25755) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51204 +
            (C11120 + C11121) * C51196 + C11132 * C25755) *
               C32266 +
           ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
               C51065) *
              C1051 -
          ((C13465 * C25755 + C13800 * C51196 + (C13801 + C13802) * C51204) *
               C51065 +
           (C11275 * C25755 + C13466 * C51196 + (C13463 + C13462) * C51204) *
               C32266) *
              C1052 +
          ((C19384 * C51204 + C13803 * C51196 + C13804 * C25755) * C32266 +
           (C21760 * C51204 + C19387 * C51196 + (C13819 + C13820) * C25755) *
               C51065) *
              C1053 -
          ((((C10648 * C13920 + C50863 * C13924) * C50882 +
             (C10648 * C13918 + C50863 * C13921) * C603) *
                C25755 +
            (C19400 + C19399) * C51196 + C21834 * C51204) *
               C51065 +
           ((C13820 + C13819) * C25755 + C19386 * C51196 + C19504 * C51204) *
               C32266) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C51204 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C51196 +
            (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C25755) *
               C32266 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C51204 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C51196 +
            (C14087 + C14088 - C14089 - C14090 + C14091 + C14092) * C25755) *
               C51065) *
              C1514 +
          (((C14605 - (C14604 + C14603) + C14606 - C14607 - C14608) * C51204 +
            (C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C51196 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C25755) *
               C32266 +
           ((C20165 - (C20164 + C20163) + C20166 - C20167 - C20168) * C51204 +
            (C19663 - (C19662 + C19661) + C19664 - C19665 - C19666) * C51196 +
            (C13644 * C1175 - (C11491 * C51201 + C11490 * C1174) +
             C13645 * C51187 - (C10648 * C3321 + C50863 * C3327) * C1176 -
             (C10648 * C3324 + C50863 * C3330) * C1171) *
                C25755) *
               C51065) *
              C50965) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C51204 +
             (C11784 + C11785 - C11786 - C11787) * C51196 + C11804 * C25755) *
                C32266 +
            ((C14436 + C14437 - C14438 - C14439) * C51204 + C14454 * C51196 +
             C14241 * C25755) *
                C51065) *
               C1514 +
           (((C14438 - (C14437 + C14436) + C14439) * C51204 + C14455 * C51196 +
             C14456 * C25755) *
                C32266 +
            ((C14949 - (C14950 + C14951) + C14952) * C51204 + C20016 * C51196 +
             (C14447 - (C14448 + C14449) + C14450) * C25755) *
                C51065) *
               C50965) *
              C51157 +
          ((((C11786 - (C11785 + C11784) + C11787) * C51204 +
             (C11790 - (C11789 + C11788) + C11791) * C51196 +
             (C11794 - (C11793 + C11792) + C11795) * C25755) *
                C32266 +
            (C14455 * C51204 + C14456 * C51196 +
             (C11964 - (C11950 + C11951) + C11965) * C25755) *
                C51065) *
               C1514 +
           ((C14454 * C51204 + C14241 * C51196 +
             (C11951 + C11950 - C11964 - C11965) * C25755) *
                C32266 +
            (C20015 * C51204 + (C14449 + C14448 - C14447 - C14450) * C51196 +
             (C11492 * C1280 + C11493 * C1275 -
              (C10648 * C8950 + C50863 * C8954) * C1281 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C25755) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51204 +
            (C11784 + C11785 - C11786 - C11787) * C51196 + C11804 * C25755) *
               C32266 +
           ((C14436 + C14437 - C14438 - C14439) * C51204 + C14454 * C51196 +
            C14241 * C25755) *
               C51065) *
              C51203 +
          (((C14438 - (C14437 + C14436) + C14439) * C51204 + C14455 * C51196 +
            C14456 * C25755) *
               C32266 +
           ((C14949 - (C14950 + C14951) + C14952) * C51204 + C20016 * C51196 +
            (C14447 - (C14448 + C14449) + C14450) * C25755) *
               C51065) *
              C51193 +
          ((C20516 * C51204 + C20015 * C51196 +
            (C14449 + C14448 - C14447 - C14450) * C25755) *
               C32266 +
           (C22510 * C51204 + (C20011 + C20010 - C20009 - C20012) * C51196 +
            (C13815 * C1280 + C13816 * C1275 -
             (C10648 * C9080 + C50863 * C9084) * C1281 -
             (C10648 * C9082 + C50863 * C9086) * C50887) *
                C25755) *
               C51065) *
              C1746) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C51204 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C51196 +
           (C10790 * C121 + C10791 * C109 - C10792 * C122 - C10793 * C110 +
            C10794 * C123 + C10795 * C111 -
            (C10648 * C515 + C50863 * C520) * C124 -
            (C10648 * C524 + C50863 * C530) * C112) *
               C25755) *
              C32266 +
          ((C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
            C13060 * C123 + C13061 * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C51204 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            C12890 * C123 + C12891 * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C51196 +
           (C11261 * C121 + C11260 * C109 - C11956 * C122 - C11957 * C110 +
            C12892 * C123 + C12893 * C111 -
            (C10648 * C722 + C50863 * C738) * C124 -
            (C10648 * C734 + C50863 * C746) * C112) *
               C25755) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51204 +
            (C11016 + C11017 - C11018 - C11019) * C51196 + C11048 * C25755) *
               C32266 +
           ((C13614 + C13615 - C13616 - C13617) * C51204 + C15153 * C51196 +
            C13216 * C25755) *
               C51065) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C51204 +
            (C11022 - (C11021 + C11020) + C11023) * C51196 +
            (C11026 - (C11025 + C11024) + C11027) * C25755) *
               C32266 +
           (C15154 * C51204 + C15155 * C51196 +
            (C12430 - (C12431 + C12432) + C12433) * C25755) *
               C51065) *
              C50953 * C508 +
          ((C11048 * C51204 + C11049 * C51196 +
            (C11046 + C11045 - C11044 - C11047) * C25755) *
               C32266 +
           (C13216 * C51204 + (C12432 + C12431 - C12430 - C12433) * C51196 +
            (C11264 * C50007 + C11265 * C51149 -
             (C10648 * C8609 + C50863 * C8613) * C50000 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C25755) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51204 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51196 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C25755) *
               C32266 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51204 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51196 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C25755) *
               C51065) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C51204 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C51196 +
            (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C25755) *
               C32266 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51204 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C51196 +
            (C11958 * C257 - (C11258 * C251 + C11259 * C256) + C11959 * C252 -
             (C10648 * C2981 + C50863 * C2987) * C258 -
             (C10648 * C2984 + C50863 * C2990) * C253) *
                C25755) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51204 +
            (C11120 + C11121) * C51196 + C11132 * C25755) *
               C32266 +
           ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
               C51065) *
              C50953 * C599 -
          ((C11274 * C25755 + C11275 * C51196 + C13466 * C51204) * C51065 +
           (C11135 * C25755 + (C11123 + C11122) * C51196 +
            (C11121 + C11120) * C51204) *
               C32266) *
              C50953 * C600 +
          ((C11132 * C51204 + C11133 * C51196 + (C11127 + C11126) * C25755) *
               C32266 +
           (C13315 * C51204 + C13467 * C51196 + (C11272 + C11273) * C25755) *
               C51065) *
              C50953 * C601 -
          ((((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C25755 +
            (C11273 + C11272) * C51196 + C11274 * C51204) *
               C51065 +
           ((C11139 + C11138) * C25755 + C11134 * C51196 + C11135 * C51204) *
               C32266) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51204 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51196 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C25755) *
               C32266 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51204 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51196 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C25755) *
               C51065) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C51204 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51196 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C25755) *
               C32266 +
           ((C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C51204 +
            (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51196 +
            (C13644 * C257 - (C11491 * C251 + C11490 * C256) + C13645 * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C25755) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51204 +
             (C11120 + C11121) * C51196 + C11132 * C25755) *
                C32266 +
            ((C13462 + C13463) * C51204 + C13464 * C51196 + C13315 * C25755) *
                C51065) *
               C51158 -
           ((C13465 * C25755 + C13800 * C51196 + (C13801 + C13802) * C51204) *
                C51065 +
            (C11275 * C25755 + C13466 * C51196 + (C13463 + C13462) * C51204) *
                C32266) *
               C50965) *
              C507 +
          (((C13464 * C51204 + C13315 * C51196 + C13467 * C25755) * C32266 +
            (C13803 * C51204 + C13804 * C51196 + (C11498 + C11499) * C25755) *
                C51065) *
               C50965 -
           ((C11274 * C25755 + C11275 * C51196 + C13466 * C51204) * C51065 +
            (C11135 * C25755 + (C11123 + C11122) * C51196 +
             (C11121 + C11120) * C51204) *
                C32266) *
               C51158) *
              C508 +
          (((C11132 * C51204 + C11133 * C51196 + (C11127 + C11126) * C25755) *
                C32266 +
            (C13315 * C51204 + C13467 * C51196 + (C11272 + C11273) * C25755) *
                C51065) *
               C51158 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C25755 +
             (C11499 + C11498) * C51196 + C13465 * C51204) *
                C51065 +
            ((C11273 + C11272) * C25755 + C11274 * C51196 + C11275 * C51204) *
                C32266) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C22938 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C51041) *
               C51205 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C22938 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C51041) *
               C51199 +
           ((C20163 + C20164 - C20165 - C20166 + C20167 + C20168) * C22938 +
            (C19661 + C19662 - C19663 - C19664 + C19665 + C19666) * C51041) *
               C38498) *
              C50953 * C1172 +
          (((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C22938 +
            (C11676 - (C11675 + C11674) + C11677 - C11678 - C11679) * C51041) *
               C51205 +
           ((C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C22938 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C51041) *
               C51199 +
           ((C19663 - (C19662 + C19661) + C19664 - C19665 - C19666) * C22938 +
            (C13644 * C1175 - (C11491 * C51201 + C11490 * C1174) +
             C13645 * C51187 - (C10648 * C3321 + C50863 * C3327) * C1176 -
             (C10648 * C3324 + C50863 * C3330) * C1171) *
                C51041) *
               C38498) *
              C50953 * C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C22938 +
            (C11784 + C11785 - C11786 - C11787) * C51041) *
               C51205 +
           ((C14436 + C14437 - C14438 - C14439) * C22938 + C14454 * C51041) *
               C51199 +
           (C20516 * C22938 + C20015 * C51041) * C38498) *
              C50953 * C51202 +
          (((C11786 - (C11785 + C11784) + C11787) * C22938 +
            (C11790 - (C11789 + C11788) + C11791) * C51041) *
               C51205 +
           (C14455 * C22938 + C14456 * C51041) * C51199 +
           (C20016 * C22938 + (C14447 - (C14448 + C14449) + C14450) * C51041) *
               C38498) *
              C50953 * C51190 +
          ((C11804 * C22938 + C11805 * C51041) * C51205 +
           (C14241 * C22938 + (C11951 + C11950 - C11964 - C11965) * C51041) *
               C51199 +
           ((C14449 + C14448 - C14447 - C14450) * C22938 +
            (C11492 * C1280 + C11493 * C1275 -
             (C10648 * C8950 + C50863 * C8954) * C1281 -
             (C10648 * C8952 + C50863 * C8956) * C50887) *
                C51041) *
               C38498) *
              C50953 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C22938 +
             (C11784 + C11785 - C11786 - C11787) * C51041) *
                C51205 +
            ((C14436 + C14437 - C14438 - C14439) * C22938 + C14454 * C51041) *
                C51199 +
            (C20516 * C22938 + C20015 * C51041) * C38498) *
               C51158 +
           (((C14438 - (C14437 + C14436) + C14439) * C22938 + C14455 * C51041) *
                C51205 +
            ((C14949 - (C14950 + C14951) + C14952) * C22938 + C20016 * C51041) *
                C51199 +
            ((C20511 - (C20512 + C20513) + C20514) * C22938 +
             (C20009 - (C20010 + C20011) + C20012) * C51041) *
                C38498) *
               C50965) *
              C1172 +
          ((((C11786 - (C11785 + C11784) + C11787) * C22938 +
             (C11790 - (C11789 + C11788) + C11791) * C51041) *
                C51205 +
            (C14455 * C22938 + C14456 * C51041) * C51199 +
            (C20016 * C22938 + (C14447 - (C14448 + C14449) + C14450) * C51041) *
                C38498) *
               C51158 +
           ((C14454 * C22938 + C14241 * C51041) * C51205 +
            (C20015 * C22938 + (C14449 + C14448 - C14447 - C14450) * C51041) *
                C51199 +
            ((C20011 + C20010 - C20009 - C20012) * C22938 +
             (C13815 * C1280 + C13816 * C1275 -
              (C10648 * C9080 + C50863 * C9084) * C1281 -
              (C10648 * C9082 + C50863 * C9086) * C50887) *
                 C51041) *
                C38498) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C50007 +
              (C10648 * C136 + C50863 * C146) * C51149 -
              (C10648 * C126 + C50863 * C133) * C50000 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C22938 +
             (C11016 + C11017 - C11018 - C11019) * C51041) *
                C51205 +
            ((C13614 + C13615 - C13616 - C13617) * C22938 + C15153 * C51041) *
                C51199 +
            C48209 * C38498) *
               C1514 +
           (((C13616 - (C13615 + C13614) + C13617) * C22938 + C15154 * C51041) *
                C51205 +
            ((C13646 - (C13647 + C13648) + C13649) * C22938 + C20715 * C51041) *
                C51199 +
            ((C19231 - (C19213 + C19214) + C19232) * C22938 +
             (C19233 - (C19219 + C19220) + C19234) * C51041) *
                C38498) *
               C50965) *
              C1172 +
          ((((C11018 - (C11017 + C11016) + C11019) * C22938 +
             (C11022 - (C11021 + C11020) + C11023) * C51041) *
                C51205 +
            (C15154 * C22938 + C15155 * C51041) * C51199 +
            (C20715 * C22938 + (C13652 - (C13634 + C13635) + C13653) * C51041) *
                C38498) *
               C1514 +
           ((C15153 * C22938 + C13216 * C51041) * C51205 +
            (C19230 * C22938 + (C13635 + C13634 - C13652 - C13653) * C51041) *
                C51199 +
            ((C19220 + C19219 - C19233 - C19234) * C22938 +
             (C13815 * C50007 + C13816 * C51149 -
              (C10648 * C9080 + C50863 * C9084) * C50000 -
              (C10648 * C9082 + C50863 * C9086) * C50887) *
                 C51041) *
                C38498) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C22938 +
             (C11120 + C11121) * C51041) *
                C51205 +
            ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
            C48360 * C38498) *
               C1514 -
           (C48462 * C38498 +
            (C13800 * C51041 + (C13801 + C13802) * C22938) * C51199 +
            (C13466 * C51041 + (C13463 + C13462) * C22938) * C51205) *
               C50965) *
              C51202 +
          (((C13464 * C22938 + C13315 * C51041) * C51205 +
            (C13803 * C22938 + C13804 * C51041) * C51199 +
            (C19387 * C22938 + (C13819 + C13820) * C51041) * C38498) *
               C50965 -
           (C48361 * C38498 + (C11275 * C51041 + C13466 * C22938) * C51199 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C22938) *
                C51205) *
               C1514) *
              C51190 +
          (((C11132 * C22938 + C11133 * C51041) * C51205 +
            (C13315 * C22938 + C13467 * C51041) * C51199 +
            (C13804 * C22938 + (C11498 + C11499) * C51041) * C38498) *
               C1514 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C51041 +
             (C13820 + C13819) * C22938) *
                C38498 +
            ((C11499 + C11498) * C51041 + C13465 * C22938) * C51199 +
            (C11274 * C51041 + C11275 * C22938) * C51205) *
               C50965) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C22938 +
             (C11120 + C11121) * C51041) *
                C51205 +
            ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
            C48360 * C38498) *
               C51203 -
           (C48462 * C38498 +
            (C13800 * C51041 + (C13801 + C13802) * C22938) * C51199 +
            (C13466 * C51041 + (C13463 + C13462) * C22938) * C51205) *
               C51193 +
           (C48360 * C51205 + (C21760 * C22938 + C19387 * C51041) * C51199 +
            ((C19513 + C19514) * C22938 + (C19399 + C19400) * C51041) *
                C38498) *
               C1746) *
              C1172 +
          (((C13464 * C22938 + C13315 * C51041) * C51205 +
            (C13803 * C22938 + C13804 * C51041) * C51199 +
            (C19387 * C22938 + (C13819 + C13820) * C51041) * C38498) *
               C51193 -
           (C48361 * C38498 + (C11275 * C51041 + C13466 * C22938) * C51199 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C22938) *
                C51205) *
               C51203 -
           ((((C10648 * C13920 + C50863 * C13924) * C50882 +
              (C10648 * C13918 + C50863 * C13921) * C603) *
                 C51041 +
             (C19400 + C19399) * C22938) *
                C38498 +
            ((C13820 + C13819) * C51041 + C19386 * C22938) * C51199 +
            C48361 * C51205) *
               C1746) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C22938 +
            (C11016 + C11017 - C11018 - C11019) * C51041) *
               C51205 +
           ((C13614 + C13615 - C13616 - C13617) * C22938 + C15153 * C51041) *
               C51199 +
           (C19229 * C22938 + C19230 * C51041) * C38498) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C22938 +
            (C11022 - (C11021 + C11020) + C11023) * C51041) *
               C51205 +
           (C15154 * C22938 + C15155 * C51041) * C51199 +
           (C20715 * C22938 + (C13652 - (C13634 + C13635) + C13653) * C51041) *
               C38498) *
              C50953 * C508 +
          ((C11048 * C22938 + C11049 * C51041) * C51205 +
           (C13216 * C22938 + (C12432 + C12431 - C12430 - C12433) * C51041) *
               C51199 +
           ((C13635 + C13634 - C13652 - C13653) * C22938 +
            (C11492 * C50007 + C11493 * C51149 -
             (C10648 * C8950 + C50863 * C8954) * C50000 -
             (C10648 * C8952 + C50863 * C8956) * C50887) *
                C51041) *
               C38498) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C22938 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C51041) *
              C51205 +
          ((C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
            C13060 * C123 + C13061 * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C22938 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            C12890 * C123 + C12891 * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C51041) *
              C51199 +
          ((C13640 * C121 + C13639 * C109 - C13638 * C122 - C13641 * C110 +
            C18669 * C123 + C18670 * C111 -
            (C10648 * C854 + C50863 * C859) * C124 -
            (C10648 * C863 + C50863 * C869) * C112) *
               C22938 +
           (C11488 * C121 + C11489 * C109 - C13642 * C122 - C13643 * C110 +
            C18511 * C123 + C18512 * C111 -
            (C10648 * C969 + C50863 * C977) * C124 -
            (C10648 * C973 + C50863 * C981) * C112) *
               C51041) *
              C38498) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C22938 +
            (C11016 + C11017 - C11018 - C11019) * C51041) *
               C51205 +
           ((C13614 + C13615 - C13616 - C13617) * C22938 + C15153 * C51041) *
               C51199 +
           C48209 * C38498) *
              C848 +
          (((C13616 - (C13615 + C13614) + C13617) * C22938 + C15154 * C51041) *
               C51205 +
           ((C13646 - (C13647 + C13648) + C13649) * C22938 + C20715 * C51041) *
               C51199 +
           ((C19231 - (C19213 + C19214) + C19232) * C22938 +
            (C19233 - (C19219 + C19220) + C19234) * C51041) *
               C38498) *
              C849 +
          (C48209 * C51205 +
           (C21657 * C22938 + (C19220 + C19219 - C19233 - C19234) * C51041) *
               C51199 +
           ((C21651 + C21650 - C21658 - C21659) * C22938 +
            (C19395 * C50007 + C19396 * C51149 -
             (C10648 * C16630 + C50863 * C16632) * C50000 -
             (C10648 * C16631 + C50863 * C16633) * C50887) *
                C51041) *
               C38498) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C22938 +
            (C11120 + C11121) * C51041) *
               C51205 +
           ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
           (C19384 * C22938 + C13803 * C51041) * C38498) *
              C50953 * C599 -
          ((C13465 * C51041 + C13800 * C22938) * C38498 +
           (C11275 * C51041 + C13466 * C22938) * C51199 +
           ((C11123 + C11122) * C51041 + (C11121 + C11120) * C22938) * C51205) *
              C50953 * C600 +
          ((C11132 * C22938 + C11133 * C51041) * C51205 +
           (C13315 * C22938 + C13467 * C51041) * C51199 +
           (C13804 * C22938 + (C11498 + C11499) * C51041) * C38498) *
              C50953 * C601 -
          ((((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C51041 +
            (C11499 + C11498) * C22938) *
               C38498 +
           ((C11273 + C11272) * C51041 + C11274 * C22938) * C51199 +
           (C11134 * C51041 + C11135 * C22938) * C51205) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C22938 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C51205 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C22938 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C51199 +
           ((C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C22938 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C38498) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C22938 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C51041) *
               C51205 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C22938 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C51041) *
               C51199 +
           ((C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C22938 +
            (C13644 * C257 - (C11491 * C251 + C11490 * C256) + C13645 * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C51041) *
               C38498) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C22938 +
             (C11120 + C11121) * C51041) *
                C51205 +
            ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
            C48360 * C38498) *
               C848 -
           ((C19386 * C51041 + C19504 * C22938) * C38498 +
            (C13800 * C51041 + (C13801 + C13802) * C22938) * C51199 +
            (C13466 * C51041 + (C13463 + C13462) * C22938) * C51205) *
               C849 +
           (C48360 * C51205 + (C21760 * C22938 + C19387 * C51041) * C51199 +
            ((C19513 + C19514) * C22938 + (C19399 + C19400) * C51041) *
                C38498) *
               C850) *
              C51157 +
          (((C13464 * C22938 + C13315 * C51041) * C51205 +
            (C13803 * C22938 + C13804 * C51041) * C51199 +
            (C19387 * C22938 + (C13819 + C13820) * C51041) * C38498) *
               C849 -
           (C48361 * C38498 + (C11275 * C51041 + C13466 * C22938) * C51199 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C22938) *
                C51205) *
               C848 -
           ((((C10648 * C13920 + C50863 * C13924) * C50882 +
              (C10648 * C13918 + C50863 * C13921) * C603) *
                 C51041 +
             (C19400 + C19399) * C22938) *
                C38498 +
            ((C13820 + C13819) * C51041 + C19386 * C22938) * C51199 +
            C48361 * C51205) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C22938 +
             (C11120 + C11121) * C51041) *
                C51205 +
            ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
            (C19384 * C22938 + C13803 * C51041) * C38498) *
               C51158 -
           ((C19386 * C51041 + C19504 * C22938) * C38498 +
            (C13800 * C51041 + (C13801 + C13802) * C22938) * C51199 +
            (C13466 * C51041 + (C13463 + C13462) * C22938) * C51205) *
               C50965) *
              C507 +
          (((C13464 * C22938 + C13315 * C51041) * C51205 +
            (C13803 * C22938 + C13804 * C51041) * C51199 +
            (C19387 * C22938 + (C13819 + C13820) * C51041) * C38498) *
               C50965 -
           ((C13465 * C51041 + C13800 * C22938) * C38498 +
            (C11275 * C51041 + C13466 * C22938) * C51199 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C22938) *
                C51205) *
               C51158) *
              C508 +
          (((C11132 * C22938 + C11133 * C51041) * C51205 +
            (C13315 * C22938 + C13467 * C51041) * C51199 +
            (C13804 * C22938 + (C11498 + C11499) * C51041) * C38498) *
               C51158 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C51041 +
             (C13820 + C13819) * C22938) *
                C38498 +
            ((C11499 + C11498) * C51041 + C13465 * C22938) * C51199 +
            (C11274 * C51041 + C11275 * C22938) * C51205) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C22938 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C51205 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C22938 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C51199 +
           ((C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C22938 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C38498) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C22938 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51041) *
               C51205 +
           ((C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C22938 +
            (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51041) *
               C51199 +
           ((C21276 - (C21275 + C21274) + C21277 - C21284 - C21285) * C22938 +
            (C19227 * C257 - (C13814 * C251 + C13813 * C256) + C19228 * C252 -
             (C10648 * C3449 + C50863 * C3455) * C258 -
             (C10648 * C3452 + C50863 * C3458) * C253) *
                C51041) *
               C38498) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C22938 +
            (C11120 + C11121) * C51041) *
               C51205 +
           ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
           C48360 * C38498) *
              C1051 -
          (C48462 * C38498 +
           (C13800 * C51041 + (C13801 + C13802) * C22938) * C51199 +
           (C13466 * C51041 + (C13463 + C13462) * C22938) * C51205) *
              C1052 +
          (C48360 * C51205 + (C21760 * C22938 + C19387 * C51041) * C51199 +
           ((C19513 + C19514) * C22938 + (C19399 + C19400) * C51041) * C38498) *
              C1053 -
          ((((C10648 * C19499 + C50863 * C19501) * C50882 +
             (C10648 * C19498 + C50863 * C19500) * C603) *
                C51041 +
            (C21844 + C21843) * C22938) *
               C38498 +
           ((C19400 + C19399) * C51041 + C21834 * C22938) * C51199 +
           C48462 * C51205) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C22938 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C51041) *
               C51205 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C22938 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C51041) *
               C51199 +
           ((C20163 + C20164 - C20165 - C20166 + C20167 + C20168) * C22938 +
            (C19661 + C19662 - C19663 - C19664 + C19665 + C19666) * C51041) *
               C38498) *
              C1514 +
          (((C14605 - (C14604 + C14603) + C14606 - C14607 - C14608) * C22938 +
            (C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C51041) *
               C51205 +
           ((C20165 - (C20164 + C20163) + C20166 - C20167 - C20168) * C22938 +
            (C19663 - (C19662 + C19661) + C19664 - C19665 - C19666) * C51041) *
               C51199 +
           ((C22271 - (C22270 + C22269) + C22272 - C22273 - C22274) * C22938 +
            (C19227 * C1175 - (C13814 * C51201 + C13813 * C1174) +
             C19228 * C51187 - (C10648 * C3449 + C50863 * C3455) * C1176 -
             (C10648 * C3452 + C50863 * C3458) * C1171) *
                C51041) *
               C38498) *
              C50965) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C22938 +
             (C11784 + C11785 - C11786 - C11787) * C51041) *
                C51205 +
            ((C14436 + C14437 - C14438 - C14439) * C22938 + C14454 * C51041) *
                C51199 +
            (C20516 * C22938 + C20015 * C51041) * C38498) *
               C1514 +
           (((C14438 - (C14437 + C14436) + C14439) * C22938 + C14455 * C51041) *
                C51205 +
            ((C14949 - (C14950 + C14951) + C14952) * C22938 + C20016 * C51041) *
                C51199 +
            ((C20511 - (C20512 + C20513) + C20514) * C22938 +
             (C20009 - (C20010 + C20011) + C20012) * C51041) *
                C38498) *
               C50965) *
              C51157 +
          ((((C11786 - (C11785 + C11784) + C11787) * C22938 +
             (C11790 - (C11789 + C11788) + C11791) * C51041) *
                C51205 +
            (C14455 * C22938 + C14456 * C51041) * C51199 +
            (C20016 * C22938 + (C14447 - (C14448 + C14449) + C14450) * C51041) *
                C38498) *
               C1514 +
           ((C14454 * C22938 + C14241 * C51041) * C51205 +
            (C20015 * C22938 + (C14449 + C14448 - C14447 - C14450) * C51041) *
                C51199 +
            ((C20011 + C20010 - C20009 - C20012) * C22938 +
             (C13815 * C1280 + C13816 * C1275 -
              (C10648 * C9080 + C50863 * C9084) * C1281 -
              (C10648 * C9082 + C50863 * C9086) * C50887) *
                 C51041) *
                C38498) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C22938 +
            (C11784 + C11785 - C11786 - C11787) * C51041) *
               C51205 +
           ((C14436 + C14437 - C14438 - C14439) * C22938 + C14454 * C51041) *
               C51199 +
           C49437 * C38498) *
              C51203 +
          (((C14438 - (C14437 + C14436) + C14439) * C22938 + C14455 * C51041) *
               C51205 +
           ((C14949 - (C14950 + C14951) + C14952) * C22938 + C20016 * C51041) *
               C51199 +
           ((C20511 - (C20512 + C20513) + C20514) * C22938 +
            (C20009 - (C20010 + C20011) + C20012) * C51041) *
               C38498) *
              C51193 +
          (C49437 * C51205 +
           (C22510 * C22938 + (C20011 + C20010 - C20009 - C20012) * C51041) *
               C51199 +
           ((C22507 + C22506 - C22505 - C22508) * C22938 +
            (C19395 * C1280 + C19396 * C1275 -
             (C10648 * C16630 + C50863 * C16632) * C1281 -
             (C10648 * C16631 + C50863 * C16633) * C50887) *
                C51041) *
               C38498) *
              C1746) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C22938 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C51041) *
              C51205 +
          ((C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
            C13060 * C123 + C13061 * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C22938 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            C12890 * C123 + C12891 * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C51041) *
              C51199 +
          ((C13640 * C121 + C13639 * C109 - C13638 * C122 - C13641 * C110 +
            C18669 * C123 + C18670 * C111 -
            (C10648 * C854 + C50863 * C859) * C124 -
            (C10648 * C863 + C50863 * C869) * C112) *
               C22938 +
           (C11488 * C121 + C11489 * C109 - C13642 * C122 - C13643 * C110 +
            C18511 * C123 + C18512 * C111 -
            (C10648 * C969 + C50863 * C977) * C124 -
            (C10648 * C973 + C50863 * C981) * C112) *
               C51041) *
              C38498) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C22938 +
            (C11016 + C11017 - C11018 - C11019) * C51041) *
               C51205 +
           ((C13614 + C13615 - C13616 - C13617) * C22938 + C15153 * C51041) *
               C51199 +
           (C19229 * C22938 + C19230 * C51041) * C38498) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C22938 +
            (C11022 - (C11021 + C11020) + C11023) * C51041) *
               C51205 +
           (C15154 * C22938 + C15155 * C51041) * C51199 +
           (C20715 * C22938 + (C13652 - (C13634 + C13635) + C13653) * C51041) *
               C38498) *
              C50953 * C508 +
          ((C11048 * C22938 + C11049 * C51041) * C51205 +
           (C13216 * C22938 + (C12432 + C12431 - C12430 - C12433) * C51041) *
               C51199 +
           ((C13635 + C13634 - C13652 - C13653) * C22938 +
            (C11492 * C50007 + C11493 * C51149 -
             (C10648 * C8950 + C50863 * C8954) * C50000 -
             (C10648 * C8952 + C50863 * C8956) * C50887) *
                C51041) *
               C38498) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C22938 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C51205 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C22938 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C51199 +
           ((C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C22938 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C38498) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C22938 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C51041) *
               C51205 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C22938 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C51041) *
               C51199 +
           ((C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C22938 +
            (C13644 * C257 - (C11491 * C251 + C11490 * C256) + C13645 * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C51041) *
               C38498) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C22938 +
            (C11120 + C11121) * C51041) *
               C51205 +
           ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
           (C19384 * C22938 + C13803 * C51041) * C38498) *
              C50953 * C599 -
          ((C13465 * C51041 + C13800 * C22938) * C38498 +
           (C11275 * C51041 + C13466 * C22938) * C51199 +
           ((C11123 + C11122) * C51041 + (C11121 + C11120) * C22938) * C51205) *
              C50953 * C600 +
          ((C11132 * C22938 + C11133 * C51041) * C51205 +
           (C13315 * C22938 + C13467 * C51041) * C51199 +
           (C13804 * C22938 + (C11498 + C11499) * C51041) * C38498) *
              C50953 * C601 -
          ((((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C51041 +
            (C11499 + C11498) * C22938) *
               C38498 +
           ((C11273 + C11272) * C51041 + C11274 * C22938) * C51199 +
           (C11134 * C51041 + C11135 * C22938) * C51205) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C22938 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C51205 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C22938 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C51199 +
           ((C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C22938 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C38498) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C22938 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51041) *
               C51205 +
           ((C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C22938 +
            (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51041) *
               C51199 +
           ((C21276 - (C21275 + C21274) + C21277 - C21284 - C21285) * C22938 +
            (C19227 * C257 - (C13814 * C251 + C13813 * C256) + C19228 * C252 -
             (C10648 * C3449 + C50863 * C3455) * C258 -
             (C10648 * C3452 + C50863 * C3458) * C253) *
                C51041) *
               C38498) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C22938 +
             (C11120 + C11121) * C51041) *
                C51205 +
            ((C13462 + C13463) * C22938 + C13464 * C51041) * C51199 +
            (C19384 * C22938 + C13803 * C51041) * C38498) *
               C51158 -
           ((C19386 * C51041 + C19504 * C22938) * C38498 +
            (C13800 * C51041 + (C13801 + C13802) * C22938) * C51199 +
            (C13466 * C51041 + (C13463 + C13462) * C22938) * C51205) *
               C50965) *
              C507 +
          (((C13464 * C22938 + C13315 * C51041) * C51205 +
            (C13803 * C22938 + C13804 * C51041) * C51199 +
            (C19387 * C22938 + (C13819 + C13820) * C51041) * C38498) *
               C50965 -
           ((C13465 * C51041 + C13800 * C22938) * C38498 +
            (C11275 * C51041 + C13466 * C22938) * C51199 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C22938) *
                C51205) *
               C51158) *
              C508 +
          (((C11132 * C22938 + C11133 * C51041) * C51205 +
            (C13315 * C22938 + C13467 * C51041) * C51199 +
            (C13804 * C22938 + (C11498 + C11499) * C51041) * C38498) *
               C51158 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C51041 +
             (C13820 + C13819) * C22938) *
                C38498 +
            ((C11499 + C11498) * C51041 + C13465 * C22938) * C51199 +
            (C11274 * C51041 + C11275 * C22938) * C51205) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1174 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51201 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1175 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C51187 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C1176 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C1171) *
               C7787 +
           ((C7987 + C7988) * C1174 + (C7989 + C7990) * C51201 -
            (C7991 + C7992) * C1175 - (C7993 + C7994) * C51187 +
            (C7995 + C7996) * C1176 + (C7997 + C7998) * C1171) *
               C7788 +
           (C8303 * C1174 + C8304 * C51201 - C8305 * C1175 - C8306 * C51187 +
            (C8007 + C8008) * C1176 + (C8009 + C8010) * C1171) *
               C7789) *
              C51053 * C50953 * C1172 +
          (((C7992 + C7991) * C1175 -
            ((C7990 + C7989) * C51201 + (C7988 + C7987) * C1174) +
            (C7994 + C7993) * C51187 - (C7996 + C7995) * C1176 -
            (C7998 + C7997) * C1171) *
               C7787 +
           ((C8004 + C8003) * C1175 -
            ((C8002 + C8001) * C51201 + (C8000 + C7999) * C1174) +
            (C8006 + C8005) * C51187 - (C8008 + C8007) * C1176 -
            (C8010 + C8009) * C1171) *
               C7788 +
           ((C8327 + C8328) * C1175 - (C8446 * C51201 + C8447 * C1174) +
            (C8333 + C8334) * C51187 -
            (C49954 * C604 + C50868 * C612 + C49961 * C605 + C51142 * C613) *
                C1176 -
            (C49954 * C608 + C50868 * C616 + C49961 * C609 + C51142 * C617) *
                C1171) *
               C7789) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51201 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51187 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51027 * C51053 * C50953 * C1172 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1175 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51201 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1174) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C51187 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C1176 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C1171) *
              C51027 * C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1174 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51201 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1175 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C51187 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C1176 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C1171) *
               C51027 * C15545 +
           ((C15889 + C15890) * C1174 + (C15891 + C15892) * C51201 -
            (C15893 + C15894) * C1175 - (C15895 + C15896) * C51187 +
            (C15897 + C15898) * C1176 + (C15899 + C15900) * C1171) *
               C51027 * C15546 +
           (C16449 * C1174 + C16450 * C51201 - C16451 * C1175 -
            C16452 * C51187 + (C15909 + C15910) * C1176 +
            (C15911 + C15912) * C1171) *
               C51027 * C15547) *
              C50953 * C1172 +
          (((C7992 + C7991) * C1175 -
            ((C7990 + C7989) * C51201 + (C7988 + C7987) * C1174) +
            (C7994 + C7993) * C51187 - (C7996 + C7995) * C1176 -
            (C7998 + C7997) * C1171) *
               C51027 * C15545 +
           ((C9598 + C9599) * C1175 -
            ((C8646 + C8647) * C51201 + (C8648 + C8649) * C1174) +
            (C9600 + C9601) * C51187 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C1176 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C1171) *
               C51027 * C15546 +
           ((C49961 * C971 + C51142 * C979 + C49954 * C970 + C50868 * C978) *
                C1175 -
            (C16645 * C51201 + C16646 * C1174) +
            (C49961 * C975 + C51142 * C983 + C49954 * C974 + C50868 * C982) *
                C51187 -
            (C49954 * C969 + C50868 * C977 + C49961 * C970 + C51142 * C978) *
                C1176 -
            (C49954 * C973 + C50868 * C981 + C49961 * C974 + C51142 * C982) *
                C1171) *
               C51027 * C15547) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1280 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C1275 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1281 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
            (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
               C7788 +
           C9387 * C7789) *
              C51053 * C50953 * C51202 +
          (((C7992 + C7991) * C1281 -
            ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
            (C7994 + C7993) * C50887) *
               C7787 +
           ((C8004 + C8003) * C1281 -
            ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
            (C8006 + C8005) * C50887) *
               C7788 +
           ((C8327 + C8328) * C1281 - (C8446 * C1275 + C8447 * C1280) +
            (C8333 + C8334) * C50887) *
               C7789) *
              C51053 * C50953 * C51190 +
          (C9387 * C7787 +
           ((C8332 + C8331) * C1280 + (C8330 + C8329) * C1275 -
            (C8328 + C8327) * C1281 - (C8334 + C8333) * C50887) *
               C7788 +
           ((C8459 + C8460) * C1280 + (C8461 + C8462) * C1275 -
            (C49954 * C2805 + C50868 * C2811 + C49961 * C2806 +
             C51142 * C2812) *
                C1281 -
            (C49954 * C2808 + C50868 * C2814 + C49961 * C2809 +
             C51142 * C2815) *
                C50887) *
               C7789) *
              C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C50953 * C51202 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1281 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C1275 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1280) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50887) *
              C51027 * C51053 * C50953 * C51190 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C1280 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C1275 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C1281 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50887) *
              C51027 * C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1280 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C1275 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1281 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C51027 * C15545 +
           ((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
            (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
               C51027 * C15546 +
           (C16449 * C1280 + C16450 * C1275 - C16451 * C1281 -
            C16452 * C50887) *
               C51027 * C15547) *
              C50953 * C51202 +
          (((C7992 + C7991) * C1281 -
            ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
            (C7994 + C7993) * C50887) *
               C51027 * C15545 +
           ((C9598 + C9599) * C1281 -
            ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
            (C9600 + C9601) * C50887) *
               C51027 * C15546 +
           ((C49961 * C971 + C51142 * C979 + C49954 * C970 + C50868 * C978) *
                C1281 -
            (C16645 * C1275 + C16646 * C1280) +
            (C49961 * C975 + C51142 * C983 + C49954 * C974 + C50868 * C982) *
                C50887) *
               C51027 * C15547) *
              C50953 * C51190 +
          (C9387 * C51027 * C15545 +
           ((C8645 + C8644) * C1280 + (C8643 + C8642) * C1275 -
            (C9603 + C9602) * C1281 - (C9605 + C9604) * C50887) *
               C51027 * C15546 +
           ((C8979 + C8980) * C1280 + (C8981 + C8982) * C1275 -
            (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
             C51142 * C3328) *
                C1281 -
            (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
             C51142 * C3331) *
                C50887) *
               C51027 * C15547) *
              C50953 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C7787 +
            ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
             (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                C7788 +
            C9387 * C7789) *
               C51053 * C51158 +
           (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                 C1281 -
             ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                  C1275 +
              (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                  C1280) +
             (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                 C50887) *
                C7787 +
            ((C9598 + C9599) * C1281 -
             ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
             (C9600 + C9601) * C50887) *
                C7788 +
            ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
             (C9604 + C9605) * C50887) *
                C7789) *
               C51053 * C50965) *
              C1172 +
          ((((C7992 + C7991) * C1281 -
             ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
             (C7994 + C7993) * C50887) *
                C7787 +
            ((C8004 + C8003) * C1281 -
             ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
             (C8006 + C8005) * C50887) *
                C7788 +
            ((C8327 + C8328) * C1281 - (C8446 * C1275 + C8447 * C1280) +
             (C8333 + C8334) * C50887) *
                C7789) *
               C51053 * C51158 +
           (((C8649 + C8648) * C1280 + (C8647 + C8646) * C1275 -
             (C9599 + C9598) * C1281 - (C9601 + C9600) * C50887) *
                C7787 +
            ((C8645 + C8644) * C1280 + (C8643 + C8642) * C1275 -
             (C9603 + C9602) * C1281 - (C9605 + C9604) * C50887) *
                C7788 +
            ((C8650 + C8651) * C1280 + (C8652 + C8653) * C1275 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C1281 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C7789) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50887) *
               C51027 * C51053 * C51158 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50887) *
               C51027 * C51053 * C50965) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50887) *
               C51027 * C51053 * C51158 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50887) *
               C51027 * C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C51027 * C15545 +
            ((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
             (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
                C51027 * C15546 +
            (C16449 * C1280 + C16450 * C1275 - C16451 * C1281 -
             C16452 * C50887) *
                C51027 * C15547) *
               C51158 +
           (((C15894 + C15893) * C1281 -
             ((C15892 + C15891) * C1275 + (C15890 + C15889) * C1280) +
             (C15896 + C15895) * C50887) *
                C51027 * C15545 +
            ((C15906 + C15905) * C1281 -
             ((C15904 + C15903) * C1275 + (C15902 + C15901) * C1280) +
             (C15908 + C15907) * C50887) *
                C51027 * C15546 +
            ((C16473 + C16474) * C1281 - (C16763 * C1275 + C16764 * C1280) +
             (C16479 + C16480) * C50887) *
                C51027 * C15547) *
               C50965) *
              C1172 +
          ((((C7992 + C7991) * C1281 -
             ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
             (C7994 + C7993) * C50887) *
                C51027 * C15545 +
            ((C9598 + C9599) * C1281 -
             ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
             (C9600 + C9601) * C50887) *
                C51027 * C15546 +
            ((C17275 + C17276) * C1281 - (C16645 * C1275 + C16646 * C1280) +
             (C17277 + C17278) * C50887) *
                C51027 * C15547) *
               C51158 +
           (((C8649 + C8648) * C1280 + (C8647 + C8646) * C1275 -
             (C9599 + C9598) * C1281 - (C9601 + C9600) * C50887) *
                C51027 * C15545 +
            ((C8975 + C8976) * C1280 + (C8977 + C8978) * C1275 -
             (C17276 + C17275) * C1281 - (C17278 + C17277) * C50887) *
                C51027 * C15546 +
            ((C16648 + C16649) * C1280 + (C16650 + C16651) * C1275 -
             (C49954 * C3449 + C50868 * C3455 + C49961 * C3450 +
              C51142 * C3456) *
                 C1281 -
             (C49954 * C3452 + C50868 * C3458 + C49961 * C3453 +
              C51142 * C3459) *
                 C50887) *
                C51027 * C15547) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C50007 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51149 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C50000 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C7787 +
            ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
             (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
                C7788 +
            C8337 * C7789) *
               C51053 * C1514 +
           (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                 C50000 -
             ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                  C51149 +
              (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                  C50007) +
             (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                 C50887) *
                C7787 +
            ((C9598 + C9599) * C50000 -
             ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
             (C9600 + C9601) * C50887) *
                C7788 +
            ((C9602 + C9603) * C50000 - (C8654 * C51149 + C8655 * C50007) +
             (C9604 + C9605) * C50887) *
                C7789) *
               C51053 * C50965) *
              C1172 +
          ((((C7992 + C7991) * C50000 -
             ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
             (C7994 + C7993) * C50887) *
                C7787 +
            ((C8004 + C8003) * C50000 -
             ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
             (C8006 + C8005) * C50887) *
                C7788 +
            ((C8327 + C8328) * C50000 - (C8446 * C51149 + C8447 * C50007) +
             (C8333 + C8334) * C50887) *
                C7789) *
               C51053 * C1514 +
           (((C8649 + C8648) * C50007 + (C8647 + C8646) * C51149 -
             (C9599 + C9598) * C50000 - (C9601 + C9600) * C50887) *
                C7787 +
            ((C8645 + C8644) * C50007 + (C8643 + C8642) * C51149 -
             (C9603 + C9602) * C50000 - (C9605 + C9604) * C50887) *
                C7788 +
            ((C8650 + C8651) * C50007 + (C8652 + C8653) * C51149 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C50000 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C7789) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51149 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C50000 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C51149 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C50007) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50887) *
               C51027 * C51053 * C50965) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C50000 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C51149 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C50007) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C50007 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C51149 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C50000 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50887) *
               C51027 * C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C50007 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51149 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C50000 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C51027 * C15545 +
            ((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
             (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
                C51027 * C15546 +
            C16484 * C15547) *
               C1514 +
           (((C15894 + C15893) * C50000 -
             ((C15892 + C15891) * C51149 + (C15890 + C15889) * C50007) +
             (C15896 + C15895) * C50887) *
                C51027 * C15545 +
            ((C15906 + C15905) * C50000 -
             ((C15904 + C15903) * C51149 + (C15902 + C15901) * C50007) +
             (C15908 + C15907) * C50887) *
                C51027 * C15546 +
            ((C16473 + C16474) * C50000 - (C16763 * C51149 + C16764 * C50007) +
             (C16479 + C16480) * C50887) *
                C51027 * C15547) *
               C50965) *
              C1172 +
          ((((C7992 + C7991) * C50000 -
             ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
             (C7994 + C7993) * C50887) *
                C51027 * C15545 +
            ((C9598 + C9599) * C50000 -
             ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
             (C9600 + C9601) * C50887) *
                C51027 * C15546 +
            ((C17275 + C17276) * C50000 - (C16645 * C51149 + C16646 * C50007) +
             (C17277 + C17278) * C50887) *
                C51027 * C15547) *
               C1514 +
           (((C8649 + C8648) * C50007 + (C8647 + C8646) * C51149 -
             (C9599 + C9598) * C50000 - (C9601 + C9600) * C50887) *
                C51027 * C15545 +
            ((C8975 + C8976) * C50007 + (C8977 + C8978) * C51149 -
             (C17276 + C17275) * C50000 - (C17278 + C17277) * C50887) *
                C51027 * C15546 +
            ((C16648 + C16649) * C50007 + (C16650 + C16651) * C51149 -
             (C49954 * C3449 + C50868 * C3455 + C49961 * C3450 +
              C51142 * C3456) *
                 C50000 -
             (C49954 * C3452 + C50868 * C3458 + C49961 * C3453 +
              C51142 * C3459) *
                 C50887) *
                C51027 * C15547) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C1514 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C50965) *
              C51202 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C50965 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C1514) *
              C51190 +
          ((C8456 * C7787 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
            ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
               C51053 * C1514 -
           (((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C7789 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C7788 +
            C8658 * C7787) *
               C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C1514 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C50965) *
              C51202 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C50965 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C1514) *
              C51190 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50882) *
               C51027 * C51053 * C1514 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50882 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51027 * C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C15545 +
            ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
                C15546 +
            C16654 * C15547) *
               C1514 -
           (C16780 * C15547 +
            ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C51027 *
                C15546 +
            ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C51027 *
                C15545) *
               C50965) *
              C51202 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C51027 *
                C15545 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C51027 *
                C15546 +
            ((C16648 + C16649) * C603 + (C16650 + C16651) * C50882) * C51027 *
                C15547) *
               C50965 -
           (C16656 * C15547 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C51027 *
                C15546 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C51027 *
                C15545) *
               C1514) *
              C51190 +
          ((C8456 * C51027 * C15545 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C51027 *
                C15546 +
            ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51027 *
                C15547) *
               C1514 -
           (((C49954 * C9082 + C50868 * C9086 + C49961 * C9083 +
              C51142 * C9087) *
                 C50882 +
             (C49954 * C9080 + C50868 * C9084 + C49961 * C9081 +
              C51142 * C9085) *
                 C603) *
                C51027 * C15547 +
            ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C51027 *
                C15546 +
            C8658 * C51027 * C15545) *
               C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C51203 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C51193 +
           (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                 C603 +
             (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                 C50882) *
                C7787 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C7788 +
            ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C7789) *
               C51053 * C1746) *
              C1172 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C51193 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C51203 -
           (((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
              C51142 * C8957) *
                 C50882 +
             (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
              C51142 * C8955) *
                 C603) *
                C7789 +
            ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C7788 +
            ((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C7787) *
               C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C51203 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C51193 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50882) *
               C51027 * C51053 * C1746) *
              C1172 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C51193 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C51203 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50882 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51027 * C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C15545 +
            ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
                C15546 +
            C16654 * C15547) *
               C51203 -
           (C16780 * C15547 +
            ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C51027 *
                C15546 +
            ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C51027 *
                C15545) *
               C51193 +
           (C16654 * C15545 +
            ((C16478 + C16477) * C603 + (C16476 + C16475) * C50882) * C51027 *
                C15546 +
            ((C16775 + C16776) * C603 + (C16777 + C16778) * C50882) * C51027 *
                C15547) *
               C1746) *
              C1172 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C51027 *
                C15545 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C51027 *
                C15546 +
            ((C16648 + C16649) * C603 + (C16650 + C16651) * C50882) * C51027 *
                C15547) *
               C51193 -
           (C16656 * C15547 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C51027 *
                C15546 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C51027 *
                C15545) *
               C51203 -
           (((C49954 * C16631 + C50868 * C16633 + C49961 * C13922 +
              C51142 * C13925) *
                 C50882 +
             (C49954 * C16630 + C50868 * C16632 + C49961 * C13919 +
              C51142 * C13923) *
                 C603) *
                C51027 * C15547 +
            ((C16651 + C16650) * C50882 + (C16649 + C16648) * C603) * C51027 *
                C15546 +
            C16656 * C15545) *
               C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
               C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                  C121 +
              (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
               C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                  C109 -
              (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
               C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                  C122 -
              (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
               C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                  C110 +
              (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
               C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                  C123 +
              (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
               C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                  C111 -
              (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 +
               C118 * C129 + C106 * C140 + C117 * C128 + C105 * C135) *
                  C124 -
              (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 +
               C118 * C141 + C106 * C150 + C117 * C139 + C105 * C149) *
                  C112) *
             C51027 * C51053 * C50953 * C50927 +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C50007 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C51149 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C50000 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C50887) *
                  C51027 * C51053 * C50953 * C507 +
              ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
                C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                   C50000 -
               ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                 C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                    C51149 +
                (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                 C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                    C50007) +
               (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
                C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                   C50887) *
                  C51027 * C51053 * C50953 * C508 +
              ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
                C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                   C50007 +
               (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
                C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                   C51149 -
               (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
                C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
                   C50000 -
               (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
                C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
                   C50887) *
                  C51027 * C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51149 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C848 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C50000 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51149 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C50007) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50887) *
              C51027 * C51053 * C849 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C50007 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C51149 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C50000 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50887) *
              C51027 * C51053 * C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
               C121 +
           (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
               C109 -
           (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
               C122 -
           (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
               C110 +
           (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
               C123 +
           (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
               C111 -
           (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
               C124 -
           (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
               C112) *
              C7787 +
          ((C49961 * C263 + C51142 * C273 + C49954 * C259 + C50868 * C265) *
               C121 +
           (C49961 * C272 + C51142 * C280 + C49954 * C271 + C50868 * C279) *
               C109 -
           (C49954 * C260 + C50868 * C266 + C49961 * C259 + C51142 * C265) *
               C122 -
           (C49954 * C270 + C50868 * C278 + C49961 * C271 + C51142 * C279) *
               C110 +
           (C49961 * C260 + C51142 * C266 + C49954 * C261 + C50868 * C267) *
               C123 +
           (C49961 * C270 + C51142 * C278 + C49954 * C269 + C50868 * C277) *
               C111 -
           (C49954 * C262 + C50868 * C268 + C49961 * C261 + C51142 * C267) *
               C124 -
           (C49954 * C274 + C50868 * C281 + C49961 * C269 + C51142 * C277) *
               C112) *
              C7788 +
          ((C49961 * C512 + C51142 * C517 + C49954 * C513 + C50868 * C518) *
               C121 +
           (C49961 * C521 + C51142 * C527 + C49954 * C522 + C50868 * C528) *
               C109 -
           (C49954 * C514 + C50868 * C519 + C49961 * C513 + C51142 * C518) *
               C122 -
           (C49954 * C523 + C50868 * C529 + C49961 * C522 + C51142 * C528) *
               C110 +
           (C49961 * C514 + C51142 * C519 + C49954 * C515 + C50868 * C520) *
               C123 +
           (C49961 * C523 + C51142 * C529 + C49954 * C524 + C50868 * C530) *
               C111 -
           (C49954 * C516 + C50868 * C525 + C49961 * C515 + C51142 * C520) *
               C124 -
           (C49954 * C526 + C50868 * C531 + C49961 * C524 + C51142 * C530) *
               C112) *
              C7789) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
            (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
               C7788 +
           C8337 * C7789) *
              C51053 * C50953 * C507 +
          (((C7992 + C7991) * C50000 -
            ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
            (C7994 + C7993) * C50887) *
               C7787 +
           ((C8004 + C8003) * C50000 -
            ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
            (C8006 + C8005) * C50887) *
               C7788 +
           ((C8327 + C8328) * C50000 -
            ((C8329 + C8330) * C51149 + (C8331 + C8332) * C50007) +
            (C8333 + C8334) * C50887) *
               C7789) *
              C51053 * C50953 * C508 +
          (C8337 * C7787 +
           ((C8332 + C8331) * C50007 + (C8330 + C8329) * C51149 -
            (C8328 + C8327) * C50000 - (C8334 + C8333) * C50887) *
               C7788 +
           ((C49961 * C2807 + C51142 * C2813 + C49954 * C2806 +
             C50868 * C2812) *
                C50007 +
            (C49961 * C2810 + C51142 * C2816 + C49954 * C2809 +
             C50868 * C2815) *
                C51149 -
            (C49954 * C2805 + C50868 * C2811 + C49961 * C2806 +
             C51142 * C2812) *
                C50000 -
            (C49954 * C2808 + C50868 * C2814 + C49961 * C2809 +
             C51142 * C2815) *
                C50887) *
               C7789) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
            (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
               C7788 +
           C8337 * C7789) *
              C51053 * C848 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C50000 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C51149 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C50007) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C50887) *
               C7787 +
           ((C49961 * C719 + C51142 * C727 + C49954 * C720 + C50868 * C728) *
                C50000 -
            ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
            (C49961 * C731 + C51142 * C743 + C49954 * C732 + C50868 * C744) *
                C50887) *
               C7788 +
           ((C49961 * C724 + C51142 * C740 + C49954 * C723 + C50868 * C739) *
                C50000 -
            (C8654 * C51149 + C8655 * C50007) +
            (C49961 * C736 + C51142 * C748 + C49954 * C735 + C50868 * C747) *
                C50887) *
               C7789) *
              C51053 * C849 +
          (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C50007 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C51149 -
            (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
                C50000 -
            (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
                C50887) *
               C7787 +
           ((C49961 * C972 + C51142 * C980 + C49954 * C971 + C50868 * C979) *
                C50007 +
            (C49961 * C976 + C51142 * C984 + C49954 * C975 + C50868 * C983) *
                C51149 -
            (C49954 * C970 + C50868 * C978 + C49961 * C971 + C51142 * C979) *
                C50000 -
            (C49954 * C974 + C50868 * C982 + C49961 * C975 + C51142 * C983) *
                C50887) *
               C7788 +
           ((C49961 * C3323 + C51142 * C3329 + C49954 * C3322 +
             C50868 * C3328) *
                C50007 +
            (C49961 * C3326 + C51142 * C3332 + C49954 * C3325 +
             C50868 * C3331) *
                C51149 -
            (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
             C51142 * C3328) *
                C50000 -
            (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
             C51142 * C3331) *
                C50887) *
               C7789) *
              C51053 * C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
               C121 +
           (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
               C109 -
           (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
               C122 -
           (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
               C110 +
           (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
               C123 +
           (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
               C111 -
           (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
               C124 -
           (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
               C112) *
              C51027 * C15545 +
          ((C49961 * C387 + C51142 * C397 + C49954 * C383 + C50868 * C389) *
               C121 +
           (C49961 * C396 + C51142 * C404 + C49954 * C395 + C50868 * C403) *
               C109 -
           (C49954 * C384 + C50868 * C390 + C49961 * C383 + C51142 * C389) *
               C122 -
           (C49954 * C394 + C50868 * C402 + C49961 * C395 + C51142 * C403) *
               C110 +
           (C49961 * C384 + C51142 * C390 + C49954 * C385 + C50868 * C391) *
               C123 +
           (C49961 * C394 + C51142 * C402 + C49954 * C393 + C50868 * C401) *
               C111 -
           (C49954 * C386 + C50868 * C392 + C49961 * C385 + C51142 * C391) *
               C124 -
           (C49954 * C398 + C50868 * C405 + C49961 * C393 + C51142 * C401) *
               C112) *
              C51027 * C15546 +
          ((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
               C121 +
           (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
               C109 -
           (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
               C122 -
           (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
               C110 +
           (C49961 * C853 + C51142 * C858 + C49954 * C854 + C50868 * C859) *
               C123 +
           (C49961 * C862 + C51142 * C868 + C49954 * C863 + C50868 * C869) *
               C111 -
           (C49954 * C855 + C50868 * C864 + C49961 * C854 + C51142 * C859) *
               C124 -
           (C49954 * C865 + C50868 * C870 + C49961 * C863 + C51142 * C869) *
               C112) *
              C51027 * C15547) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C51027 * C15545 +
           ((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
            (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
               C51027 * C15546 +
           ((C15901 + C15902) * C50007 + (C15903 + C15904) * C51149 -
            (C15905 + C15906) * C50000 - (C15907 + C15908) * C50887) *
               C51027 * C15547) *
              C50953 * C507 +
          (((C7992 + C7991) * C50000 -
            ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
            (C7994 + C7993) * C50887) *
               C51027 * C15545 +
           ((C9598 + C9599) * C50000 -
            ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
            (C9600 + C9601) * C50887) *
               C51027 * C15546 +
           ((C49961 * C971 + C51142 * C979 + C49954 * C970 + C50868 * C978) *
                C50000 -
            ((C8978 + C8977) * C51149 + (C8976 + C8975) * C50007) +
            (C49961 * C975 + C51142 * C983 + C49954 * C974 + C50868 * C982) *
                C50887) *
               C51027 * C15547) *
              C50953 * C508 +
          (C8337 * C51027 * C15545 +
           ((C8645 + C8644) * C50007 + (C8643 + C8642) * C51149 -
            (C9603 + C9602) * C50000 - (C9605 + C9604) * C50887) *
               C51027 * C15546 +
           ((C8979 + C8980) * C50007 + (C8981 + C8982) * C51149 -
            (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
             C51142 * C3328) *
                C50000 -
            (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
             C51142 * C3331) *
                C50887) *
               C51027 * C15547) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C51027 * C15545 +
           ((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
            (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
               C51027 * C15546 +
           C16484 * C15547) *
              C848 +
          (((C15894 + C15893) * C50000 -
            ((C15892 + C15891) * C51149 + (C15890 + C15889) * C50007) +
            (C15896 + C15895) * C50887) *
               C51027 * C15545 +
           ((C15906 + C15905) * C50000 -
            ((C15904 + C15903) * C51149 + (C15902 + C15901) * C50007) +
            (C15908 + C15907) * C50887) *
               C51027 * C15546 +
           ((C16473 + C16474) * C50000 -
            ((C16475 + C16476) * C51149 + (C16477 + C16478) * C50007) +
            (C16479 + C16480) * C50887) *
               C51027 * C15547) *
              C849 +
          (C16484 * C15545 +
           ((C16478 + C16477) * C50007 + (C16476 + C16475) * C51149 -
            (C16474 + C16473) * C50000 - (C16480 + C16479) * C50887) *
               C51027 * C15546 +
           ((C49961 * C6201 + C51142 * C6207 + C49954 * C6200 +
             C50868 * C6206) *
                C50007 +
            (C49961 * C6204 + C51142 * C6210 + C49954 * C6203 +
             C50868 * C6209) *
                C51149 -
            (C49954 * C6199 + C50868 * C6205 + C49961 * C6200 +
             C51142 * C6206) *
                C50000 -
            (C49954 * C6202 + C50868 * C6208 + C49961 * C6203 +
             C51142 * C6209) *
                C50887) *
               C51027 * C15547) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C256 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C251 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C257 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C252 +
               (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
                C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                   C258 +
               (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
                C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                   C253) *
                  C51027 * C51053 * C50953 * C51157 +
              ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
                C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                   C257 -
               ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                 C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                    C251 +
                (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                 C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                    C256) +
               (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
                C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                   C252 -
               (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
                C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
                   C258 -
               (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
                C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
                   C253) *
                  C51027 * C51053 * C50953 * C50941) +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C603 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C50882) *
                  C51027 * C51053 * C50953 * C599 -
              ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                   C50882 +
               (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                   C603) *
                  C51027 * C51053 * C50953 * C600 +
              ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
                C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                   C603 +
               (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
                C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                   C50882) *
                  C51027 * C51053 * C50953 * C601 -
              ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
                C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
                   C50882 +
               (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
                C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
                   C603) *
                  C51027 * C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C848 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C849 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50882) *
               C51027 * C51053 * C850) *
              C51157 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C849 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C848 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50882 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51027 * C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C50953 * C51157 +
          (((C7992 + C7991) * C257 -
            ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
            (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
            (C7998 + C7997) * C253) *
               C7787 +
           ((C8004 + C8003) * C257 -
            ((C8002 + C8001) * C251 + (C8000 + C7999) * C256) +
            (C8006 + C8005) * C252 - (C8008 + C8007) * C258 -
            (C8010 + C8009) * C253) *
               C7788 +
           ((C49961 * C606 + C51142 * C614 + C49954 * C605 + C50868 * C613) *
                C257 -
            ((C49954 * C610 + C50868 * C618 + C49961 * C611 + C51142 * C619) *
                 C251 +
             (C49954 * C606 + C50868 * C614 + C49961 * C607 + C51142 * C615) *
                 C256) +
            (C49961 * C610 + C51142 * C618 + C49954 * C609 + C50868 * C617) *
                C252 -
            (C49954 * C604 + C50868 * C612 + C49961 * C605 + C51142 * C613) *
                C258 -
            (C49954 * C608 + C50868 * C616 + C49961 * C609 + C51142 * C617) *
                C253) *
               C7789) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C7787 +
           ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
           C8456 * C7789) *
              C51053 * C50953 * C599 -
          (C8463 * C7789 +
           ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
           ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
              C51053 * C50953 * C600 +
          (C8456 * C7787 +
           ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
           ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
              C51053 * C50953 * C601 -
          (((C49954 * C8437 + C50868 * C8441 + C49961 * C8438 +
             C51142 * C8442) *
                C50882 +
            (C49954 * C8435 + C50868 * C8439 + C49961 * C8436 +
             C51142 * C8440) *
                C603) *
               C7789 +
           ((C8462 + C8461) * C50882 + (C8460 + C8459) * C603) * C7788 +
           C8463 * C7787) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C848 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C849 +
           (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                 C603 +
             (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                 C50882) *
                C7787 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C7788 +
            ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C7789) *
               C51053 * C850) *
              C51157 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C849 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C848 -
           (((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
              C51142 * C8957) *
                 C50882 +
             (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
              C51142 * C8955) *
                 C603) *
                C7789 +
            ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C7788 +
            ((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C7787) *
               C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C51027 * C15545 +
           ((C49961 * C387 + C51142 * C397 + C49954 * C383 + C50868 * C389) *
                C256 +
            (C49961 * C396 + C51142 * C404 + C49954 * C395 + C50868 * C403) *
                C251 -
            (C49954 * C384 + C50868 * C390 + C49961 * C383 + C51142 * C389) *
                C257 -
            (C49954 * C394 + C50868 * C402 + C49961 * C395 + C51142 * C403) *
                C252 +
            (C49961 * C384 + C51142 * C390 + C49954 * C385 + C50868 * C391) *
                C258 +
            (C49961 * C394 + C51142 * C402 + C49954 * C393 + C50868 * C401) *
                C253) *
               C51027 * C15546 +
           ((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C256 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C251 -
            (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
                C257 -
            (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
                C252 +
            (C49961 * C853 + C51142 * C858 + C49954 * C854 + C50868 * C859) *
                C258 +
            (C49961 * C862 + C51142 * C868 + C49954 * C863 + C50868 * C869) *
                C253) *
               C51027 * C15547) *
              C50953 * C51157 +
          (((C7992 + C7991) * C257 -
            ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
            (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
            (C7998 + C7997) * C253) *
               C51027 * C15545 +
           ((C9598 + C9599) * C257 -
            ((C8646 + C8647) * C251 + (C8648 + C8649) * C256) +
            (C9600 + C9601) * C252 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C258 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C253) *
               C51027 * C15546 +
           ((C49961 * C971 + C51142 * C979 + C49954 * C970 + C50868 * C978) *
                C257 -
            ((C8978 + C8977) * C251 + (C8976 + C8975) * C256) +
            (C49961 * C975 + C51142 * C983 + C49954 * C974 + C50868 * C982) *
                C252 -
            (C49954 * C969 + C50868 * C977 + C49961 * C970 + C51142 * C978) *
                C258 -
            (C49954 * C973 + C50868 * C981 + C49961 * C974 + C51142 * C982) *
                C253) *
               C51027 * C15547) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C51027 * C15545 +
           ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
               C15546 +
           ((C15901 + C15902) * C603 + (C15903 + C15904) * C50882) * C51027 *
               C15547) *
              C50953 * C599 -
          (((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C51027 *
               C15547 +
           ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C51027 *
               C15546 +
           ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C51027 *
               C15545) *
              C50953 * C600 +
          (C8456 * C51027 * C15545 +
           ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C51027 *
               C15546 +
           ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51027 *
               C15547) *
              C50953 * C601 -
          (((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
             C51142 * C8957) *
                C50882 +
            (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
             C51142 * C8955) *
                C603) *
               C51027 * C15547 +
           ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C51027 *
               C15546 +
           C8463 * C51027 * C15545) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C15545 +
            ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
                C15546 +
            C16654 * C15547) *
               C848 -
           (((C16475 + C16476) * C50882 + (C16477 + C16478) * C603) * C51027 *
                C15547 +
            ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C51027 *
                C15546 +
            ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C51027 *
                C15545) *
               C849 +
           (C16654 * C15545 +
            ((C16478 + C16477) * C603 + (C16476 + C16475) * C50882) * C51027 *
                C15546 +
            ((C49961 * C6201 + C51142 * C6207 + C49954 * C6200 +
              C50868 * C6206) *
                 C603 +
             (C49961 * C6204 + C51142 * C6210 + C49954 * C6203 +
              C50868 * C6209) *
                 C50882) *
                C51027 * C15547) *
               C850) *
              C51157 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C51027 *
                C15545 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C51027 *
                C15546 +
            ((C16648 + C16649) * C603 + (C16650 + C16651) * C50882) * C51027 *
                C15547) *
               C849 -
           (C16656 * C15547 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C51027 *
                C15546 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C51027 *
                C15545) *
               C848 -
           (((C49954 * C16631 + C50868 * C16633 + C49961 * C13922 +
              C51142 * C13925) *
                 C50882 +
             (C49954 * C16630 + C50868 * C16632 + C49961 * C13919 +
              C51142 * C13923) *
                 C603) *
                C51027 * C15547 +
            ((C16651 + C16650) * C50882 + (C16649 + C16648) * C603) * C51027 *
                C15546 +
            C16656 * C15545) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                   C256 +
               (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                   C251 -
               (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
                C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                   C257 -
               (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
                C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                   C252 +
               (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
                C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
                   C258 +
               (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
                C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
                   C253) *
                  C51027 * C51053 * C51158 +
              ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
                C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                   C257 -
               ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
                 C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                    C251 +
                (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
                 C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                    C256) +
               (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
                C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                   C252 -
               (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
                C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
                   C258 -
               (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
                C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
                   C253) *
                  C51027 * C51053 * C50965) *
             C50927 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
                 C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                    C603 +
                (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
                 C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                    C50882) *
                   C51027 * C51053 * C51158 -
               ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
                 C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                    C50882 +
                (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
                 C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                    C603) *
                   C51027 * C51053 * C50965) *
                  C507 +
              (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
                 C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                    C603 +
                (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
                 C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                    C50882) *
                   C51027 * C51053 * C50965 -
               ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
                 C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                    C50882 +
                (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
                 C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                    C603) *
                   C51027 * C51053 * C51158) *
                  C508 +
              (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
                 C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                    C603 +
                (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
                 C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                    C50882) *
                   C51027 * C51053 * C51158 -
               ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
                 C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                    C50882 +
                (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
                 C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                    C603) *
                   C51027 * C51053 * C50965) *
                  C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50882) *
              C51027 * C51053 * C1051 -
          ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
            C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
               C50882 +
           (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
            C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
               C603) *
              C51027 * C51053 * C1052 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C603 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50882) *
              C51027 * C51053 * C1053 -
          ((C120 * C1059 + C108 * C1067 + C119 * C1060 + C107 * C1068 +
            C118 * C1061 + C106 * C1069 + C117 * C1062 + C105 * C1070) *
               C50882 +
           (C120 * C1055 + C108 * C1063 + C119 * C1056 + C107 * C1064 +
            C118 * C1057 + C106 * C1065 + C117 * C1058 + C105 * C1066) *
               C603) *
              C51027 * C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C51158 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C257 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C251 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C256) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C252 -
            (C49954 * C385 + C50868 * C391 + C49961 * C384 + C51142 * C390) *
                C258 -
            (C49954 * C393 + C50868 * C401 + C49961 * C394 + C51142 * C402) *
                C253) *
               C7787 +
           ((C49961 * C719 + C51142 * C727 + C49954 * C720 + C50868 * C728) *
                C257 -
            ((C49954 * C731 + C50868 * C743 + C49961 * C730 + C51142 * C742) *
                 C251 +
             (C49954 * C719 + C50868 * C727 + C49961 * C718 + C51142 * C726) *
                 C256) +
            (C49961 * C731 + C51142 * C743 + C49954 * C732 + C50868 * C744) *
                C252 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C258 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C253) *
               C7788 +
           ((C49961 * C724 + C51142 * C740 + C49954 * C723 + C50868 * C739) *
                C257 -
            ((C49954 * C736 + C50868 * C748 + C49961 * C737 + C51142 * C749) *
                 C251 +
             (C49954 * C724 + C50868 * C740 + C49961 * C725 + C51142 * C741) *
                 C256) +
            (C49961 * C736 + C51142 * C748 + C49954 * C735 + C50868 * C747) *
                C252 -
            (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                C258 -
            (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                C253) *
               C7789) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C51158 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C50965) *
              C507 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C50965 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C51158) *
              C508 +
          ((C8456 * C7787 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
            ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
               C51053 * C51158 -
           (((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C7789 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C7788 +
            C8658 * C7787) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C7787 +
           ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
           C8456 * C7789) *
              C51053 * C1051 -
          (C8658 * C7789 +
           ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
           ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                C50882 +
            (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                C603) *
               C7787) *
              C51053 * C1052 +
          (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C603 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C50882) *
               C7787 +
           ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C7788 +
           ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C7789) *
              C51053 * C1053 -
          (((C49954 * C9082 + C50868 * C9086 + C49961 * C9083 +
             C51142 * C9087) *
                C50882 +
            (C49954 * C9080 + C50868 * C9084 + C49961 * C9081 +
             C51142 * C9085) *
                C603) *
               C7789 +
           ((C49954 * C3453 + C50868 * C3459 + C49961 * C3454 +
             C51142 * C3460) *
                C50882 +
            (C49954 * C3450 + C50868 * C3456 + C49961 * C3451 +
             C51142 * C3457) *
                C603) *
               C7788 +
           ((C49954 * C1061 + C50868 * C1069 + C49961 * C1062 +
             C51142 * C1070) *
                C50882 +
            (C49954 * C1057 + C50868 * C1065 + C49961 * C1058 +
             C51142 * C1066) *
                C603) *
               C7787) *
              C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C51027 * C15545 +
           ((C15889 + C15890) * C256 + (C15891 + C15892) * C251 -
            (C15893 + C15894) * C257 - (C15895 + C15896) * C252 +
            (C15897 + C15898) * C258 + (C15899 + C15900) * C253) *
               C51027 * C15546 +
           ((C15901 + C15902) * C256 + (C15903 + C15904) * C251 -
            (C15905 + C15906) * C257 - (C15907 + C15908) * C252 +
            (C15909 + C15910) * C258 + (C15911 + C15912) * C253) *
               C51027 * C15547) *
              C51158 +
          (((C15894 + C15893) * C257 -
            ((C15892 + C15891) * C251 + (C15890 + C15889) * C256) +
            (C15896 + C15895) * C252 - (C15898 + C15897) * C258 -
            (C15900 + C15899) * C253) *
               C51027 * C15545 +
           ((C15906 + C15905) * C257 -
            ((C15904 + C15903) * C251 + (C15902 + C15901) * C256) +
            (C15908 + C15907) * C252 - (C15910 + C15909) * C258 -
            (C15912 + C15911) * C253) *
               C51027 * C15546 +
           ((C49961 * C1057 + C51142 * C1065 + C49954 * C1056 +
             C50868 * C1064) *
                C257 -
            ((C49954 * C1061 + C50868 * C1069 + C49961 * C1062 +
              C51142 * C1070) *
                 C251 +
             (C49954 * C1057 + C50868 * C1065 + C49961 * C1058 +
              C51142 * C1066) *
                 C256) +
            (C49961 * C1061 + C51142 * C1069 + C49954 * C1060 +
             C50868 * C1068) *
                C252 -
            (C49954 * C1055 + C50868 * C1063 + C49961 * C1056 +
             C51142 * C1064) *
                C258 -
            (C49954 * C1059 + C50868 * C1067 + C49961 * C1060 +
             C51142 * C1068) *
                C253) *
               C51027 * C15547) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C15545 +
            ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
                C15546 +
            ((C15901 + C15902) * C603 + (C15903 + C15904) * C50882) * C51027 *
                C15547) *
               C51158 -
           (((C49954 * C1061 + C50868 * C1069 + C49961 * C1062 +
              C51142 * C1070) *
                 C50882 +
             (C49954 * C1057 + C50868 * C1065 + C49961 * C1058 +
              C51142 * C1066) *
                 C603) *
                C51027 * C15547 +
            ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C51027 *
                C15546 +
            ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C51027 *
                C15545) *
               C50965) *
              C507 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C51027 *
                C15545 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C51027 *
                C15546 +
            ((C49961 * C3451 + C51142 * C3457 + C49954 * C3450 +
              C50868 * C3456) *
                 C603 +
             (C49961 * C3454 + C51142 * C3460 + C49954 * C3453 +
              C50868 * C3459) *
                 C50882) *
                C51027 * C15547) *
               C50965 -
           (((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C51027 *
                C15547 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C51027 *
                C15546 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C51027 *
                C15545) *
               C51158) *
              C508 +
          ((C8456 * C51027 * C15545 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C51027 *
                C15546 +
            ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51027 *
                C15547) *
               C51158 -
           (((C49954 * C9082 + C50868 * C9086 + C49961 * C9083 +
              C51142 * C9087) *
                 C50882 +
             (C49954 * C9080 + C50868 * C9084 + C49961 * C9081 +
              C51142 * C9085) *
                 C603) *
                C51027 * C15547 +
            ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C51027 *
                C15546 +
            C8658 * C51027 * C15545) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C51027 * C15545 +
           ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
               C15546 +
           C16654 * C15547) *
              C1051 -
          (C16780 * C15547 +
           ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C51027 *
               C15546 +
           ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C51027 *
               C15545) *
              C1052 +
          (C16654 * C15545 +
           ((C16478 + C16477) * C603 + (C16476 + C16475) * C50882) * C51027 *
               C15546 +
           ((C16775 + C16776) * C603 + (C16777 + C16778) * C50882) * C51027 *
               C15547) *
              C1053 -
          (((C49954 * C16756 + C50868 * C16760 + C49961 * C16757 +
             C51142 * C16761) *
                C50882 +
            (C49954 * C16754 + C50868 * C16758 + C49961 * C16755 +
             C51142 * C16759) *
                C603) *
               C51027 * C15547 +
           ((C16778 + C16777) * C50882 + (C16776 + C16775) * C603) * C51027 *
               C15546 +
           C16780 * C15545) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1174 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51201 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1175 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C51187 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C1176 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C1171) *
               C7787 +
           ((C7987 + C7988) * C1174 + (C7989 + C7990) * C51201 -
            (C7991 + C7992) * C1175 - (C7993 + C7994) * C51187 +
            (C7995 + C7996) * C1176 + (C7997 + C7998) * C1171) *
               C7788 +
           (C8303 * C1174 + C8304 * C51201 - C8305 * C1175 - C8306 * C51187 +
            (C8007 + C8008) * C1176 + (C8009 + C8010) * C1171) *
               C7789) *
              C51053 * C1514 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C1175 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C51201 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C1174) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C51187 -
            (C49954 * C385 + C50868 * C391 + C49961 * C384 + C51142 * C390) *
                C1176 -
            (C49954 * C393 + C50868 * C401 + C49961 * C394 + C51142 * C402) *
                C1171) *
               C7787 +
           ((C9598 + C9599) * C1175 -
            ((C8646 + C8647) * C51201 + (C8648 + C8649) * C1174) +
            (C9600 + C9601) * C51187 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C1176 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C1171) *
               C7788 +
           ((C9602 + C9603) * C1175 - (C8654 * C51201 + C8655 * C1174) +
            (C9604 + C9605) * C51187 -
            (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                C1176 -
            (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                C1171) *
               C7789) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51201 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51187 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51027 * C51053 * C1514 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1175 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51201 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1174) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C51187 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C1176 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C1171) *
              C51027 * C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1174 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51201 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1175 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C51187 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C1176 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C1171) *
               C51027 * C15545 +
           ((C15889 + C15890) * C1174 + (C15891 + C15892) * C51201 -
            (C15893 + C15894) * C1175 - (C15895 + C15896) * C51187 +
            (C15897 + C15898) * C1176 + (C15899 + C15900) * C1171) *
               C51027 * C15546 +
           (C16449 * C1174 + C16450 * C51201 - C16451 * C1175 -
            C16452 * C51187 + (C15909 + C15910) * C1176 +
            (C15911 + C15912) * C1171) *
               C51027 * C15547) *
              C1514 +
          (((C15894 + C15893) * C1175 -
            ((C15892 + C15891) * C51201 + (C15890 + C15889) * C1174) +
            (C15896 + C15895) * C51187 - (C15898 + C15897) * C1176 -
            (C15900 + C15899) * C1171) *
               C51027 * C15545 +
           ((C15906 + C15905) * C1175 -
            ((C15904 + C15903) * C51201 + (C15902 + C15901) * C1174) +
            (C15908 + C15907) * C51187 - (C15910 + C15909) * C1176 -
            (C15912 + C15911) * C1171) *
               C51027 * C15546 +
           ((C16473 + C16474) * C1175 - (C16763 * C51201 + C16764 * C1174) +
            (C16479 + C16480) * C51187 -
            (C49954 * C1055 + C50868 * C1063 + C49961 * C1056 +
             C51142 * C1064) *
                C1176 -
            (C49954 * C1059 + C50868 * C1067 + C49961 * C1060 +
             C51142 * C1068) *
                C1171) *
               C51027 * C15547) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C7787 +
            ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
             (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                C7788 +
            C9387 * C7789) *
               C51053 * C1514 +
           (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                 C1281 -
             ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                  C1275 +
              (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                  C1280) +
             (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                 C50887) *
                C7787 +
            ((C9598 + C9599) * C1281 -
             ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
             (C9600 + C9601) * C50887) *
                C7788 +
            ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
             (C9604 + C9605) * C50887) *
                C7789) *
               C51053 * C50965) *
              C51157 +
          ((((C7992 + C7991) * C1281 -
             ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
             (C7994 + C7993) * C50887) *
                C7787 +
            ((C8004 + C8003) * C1281 -
             ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
             (C8006 + C8005) * C50887) *
                C7788 +
            ((C8327 + C8328) * C1281 - (C8446 * C1275 + C8447 * C1280) +
             (C8333 + C8334) * C50887) *
                C7789) *
               C51053 * C1514 +
           (((C8649 + C8648) * C1280 + (C8647 + C8646) * C1275 -
             (C9599 + C9598) * C1281 - (C9601 + C9600) * C50887) *
                C7787 +
            ((C8645 + C8644) * C1280 + (C8643 + C8642) * C1275 -
             (C9603 + C9602) * C1281 - (C9605 + C9604) * C50887) *
                C7788 +
            ((C8650 + C8651) * C1280 + (C8652 + C8653) * C1275 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C1281 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C7789) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50887) *
               C51027 * C51053 * C50965) *
              C51157 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50887) *
               C51027 * C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C51027 * C15545 +
            ((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
             (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
                C51027 * C15546 +
            (C16449 * C1280 + C16450 * C1275 - C16451 * C1281 -
             C16452 * C50887) *
                C51027 * C15547) *
               C1514 +
           (((C15894 + C15893) * C1281 -
             ((C15892 + C15891) * C1275 + (C15890 + C15889) * C1280) +
             (C15896 + C15895) * C50887) *
                C51027 * C15545 +
            ((C15906 + C15905) * C1281 -
             ((C15904 + C15903) * C1275 + (C15902 + C15901) * C1280) +
             (C15908 + C15907) * C50887) *
                C51027 * C15546 +
            ((C16473 + C16474) * C1281 - (C16763 * C1275 + C16764 * C1280) +
             (C16479 + C16480) * C50887) *
                C51027 * C15547) *
               C50965) *
              C51157 +
          ((((C7992 + C7991) * C1281 -
             ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
             (C7994 + C7993) * C50887) *
                C51027 * C15545 +
            ((C9598 + C9599) * C1281 -
             ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
             (C9600 + C9601) * C50887) *
                C51027 * C15546 +
            ((C17275 + C17276) * C1281 - (C16645 * C1275 + C16646 * C1280) +
             (C17277 + C17278) * C50887) *
                C51027 * C15547) *
               C1514 +
           (((C8649 + C8648) * C1280 + (C8647 + C8646) * C1275 -
             (C9599 + C9598) * C1281 - (C9601 + C9600) * C50887) *
                C51027 * C15545 +
            ((C8975 + C8976) * C1280 + (C8977 + C8978) * C1275 -
             (C17276 + C17275) * C1281 - (C17278 + C17277) * C50887) *
                C51027 * C15546 +
            ((C16648 + C16649) * C1280 + (C16650 + C16651) * C1275 -
             (C49954 * C3449 + C50868 * C3455 + C49961 * C3450 +
              C51142 * C3456) *
                 C1281 -
             (C49954 * C3452 + C50868 * C3458 + C49961 * C3453 +
              C51142 * C3459) *
                 C50887) *
                C51027 * C15547) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1280 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C1275 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1281 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
            (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
               C7788 +
           C9387 * C7789) *
              C51053 * C51203 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C1281 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C1275 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C1280) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C50887) *
               C7787 +
           ((C9598 + C9599) * C1281 -
            ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
            (C9600 + C9601) * C50887) *
               C7788 +
           ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
            (C9604 + C9605) * C50887) *
               C7789) *
              C51053 * C51193 +
          (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C1280 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C1275 -
            (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
                C1281 -
            (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
                C50887) *
               C7787 +
           ((C8975 + C8976) * C1280 + (C8977 + C8978) * C1275 -
            (C49954 * C970 + C50868 * C978 + C49961 * C971 + C51142 * C979) *
                C1281 -
            (C49954 * C974 + C50868 * C982 + C49961 * C975 + C51142 * C983) *
                C50887) *
               C7788 +
           ((C8979 + C8980) * C1280 + (C8981 + C8982) * C1275 -
            (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
             C51142 * C3328) *
                C1281 -
            (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
             C51142 * C3331) *
                C50887) *
               C7789) *
              C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C51203 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1281 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C1275 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1280) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50887) *
              C51027 * C51053 * C51193 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C1280 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C1275 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C1281 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50887) *
              C51027 * C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1280 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C1275 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1281 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C51027 * C15545 +
           ((C15889 + C15890) * C1280 + (C15891 + C15892) * C1275 -
            (C15893 + C15894) * C1281 - (C15895 + C15896) * C50887) *
               C51027 * C15546 +
           C17772 * C15547) *
              C51203 +
          (((C15894 + C15893) * C1281 -
            ((C15892 + C15891) * C1275 + (C15890 + C15889) * C1280) +
            (C15896 + C15895) * C50887) *
               C51027 * C15545 +
           ((C15906 + C15905) * C1281 -
            ((C15904 + C15903) * C1275 + (C15902 + C15901) * C1280) +
            (C15908 + C15907) * C50887) *
               C51027 * C15546 +
           ((C16473 + C16474) * C1281 - (C16763 * C1275 + C16764 * C1280) +
            (C16479 + C16480) * C50887) *
               C51027 * C15547) *
              C51193 +
          (C17772 * C15545 +
           ((C16478 + C16477) * C1280 + (C16476 + C16475) * C1275 -
            (C16474 + C16473) * C1281 - (C16480 + C16479) * C50887) *
               C51027 * C15546 +
           ((C16775 + C16776) * C1280 + (C16777 + C16778) * C1275 -
            (C49954 * C6199 + C50868 * C6205 + C49961 * C6200 +
             C51142 * C6206) *
                C1281 -
            (C49954 * C6202 + C50868 * C6208 + C49961 * C6203 +
             C51142 * C6209) *
                C50887) *
               C51027 * C15547) *
              C1746) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51149 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C50953 * C507 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C50000 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51149 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C50007) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50887) *
              C51027 * C51053 * C50953 * C508 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C50007 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C51149 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C50000 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50887) *
              C51027 * C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51027 * C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
               C121 +
           (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
               C109 -
           (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
               C122 -
           (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
               C110 +
           (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
               C123 +
           (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
               C111 -
           (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
               C124 -
           (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
               C112) *
              C7787 +
          ((C49961 * C263 + C51142 * C273 + C49954 * C259 + C50868 * C265) *
               C121 +
           (C49961 * C272 + C51142 * C280 + C49954 * C271 + C50868 * C279) *
               C109 -
           (C49954 * C260 + C50868 * C266 + C49961 * C259 + C51142 * C265) *
               C122 -
           (C49954 * C270 + C50868 * C278 + C49961 * C271 + C51142 * C279) *
               C110 +
           (C49961 * C260 + C51142 * C266 + C49954 * C261 + C50868 * C267) *
               C123 +
           (C49961 * C270 + C51142 * C278 + C49954 * C269 + C50868 * C277) *
               C111 -
           (C49954 * C262 + C50868 * C268 + C49961 * C261 + C51142 * C267) *
               C124 -
           (C49954 * C274 + C50868 * C281 + C49961 * C269 + C51142 * C277) *
               C112) *
              C7788 +
          ((C49961 * C512 + C51142 * C517 + C49954 * C513 + C50868 * C518) *
               C121 +
           (C49961 * C521 + C51142 * C527 + C49954 * C522 + C50868 * C528) *
               C109 -
           (C49954 * C514 + C50868 * C519 + C49961 * C513 + C51142 * C518) *
               C122 -
           (C49954 * C523 + C50868 * C529 + C49961 * C522 + C51142 * C528) *
               C110 +
           (C49961 * C514 + C51142 * C519 + C49954 * C515 + C50868 * C520) *
               C123 +
           (C49961 * C523 + C51142 * C529 + C49954 * C524 + C50868 * C530) *
               C111 -
           (C49954 * C516 + C50868 * C525 + C49961 * C515 + C51142 * C520) *
               C124 -
           (C49954 * C526 + C50868 * C531 + C49961 * C524 + C51142 * C530) *
               C112) *
              C7789) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
            (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
               C7788 +
           C8337 * C7789) *
              C51053 * C50953 * C507 +
          (((C7992 + C7991) * C50000 -
            ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
            (C7994 + C7993) * C50887) *
               C7787 +
           ((C8004 + C8003) * C50000 -
            ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
            (C8006 + C8005) * C50887) *
               C7788 +
           ((C8327 + C8328) * C50000 -
            ((C8329 + C8330) * C51149 + (C8331 + C8332) * C50007) +
            (C8333 + C8334) * C50887) *
               C7789) *
              C51053 * C50953 * C508 +
          (C8337 * C7787 +
           ((C8332 + C8331) * C50007 + (C8330 + C8329) * C51149 -
            (C8328 + C8327) * C50000 - (C8334 + C8333) * C50887) *
               C7788 +
           ((C49961 * C2807 + C51142 * C2813 + C49954 * C2806 +
             C50868 * C2812) *
                C50007 +
            (C49961 * C2810 + C51142 * C2816 + C49954 * C2809 +
             C50868 * C2815) *
                C51149 -
            (C49954 * C2805 + C50868 * C2811 + C49961 * C2806 +
             C51142 * C2812) *
                C50000 -
            (C49954 * C2808 + C50868 * C2814 + C49961 * C2809 +
             C51142 * C2815) *
                C50887) *
               C7789) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
               C121 +
           (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
               C109 -
           (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
               C122 -
           (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
               C110 +
           (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
               C123 +
           (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
               C111 -
           (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
               C124 -
           (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
               C112) *
              C51027 * C15545 +
          ((C49961 * C387 + C51142 * C397 + C49954 * C383 + C50868 * C389) *
               C121 +
           (C49961 * C396 + C51142 * C404 + C49954 * C395 + C50868 * C403) *
               C109 -
           (C49954 * C384 + C50868 * C390 + C49961 * C383 + C51142 * C389) *
               C122 -
           (C49954 * C394 + C50868 * C402 + C49961 * C395 + C51142 * C403) *
               C110 +
           (C49961 * C384 + C51142 * C390 + C49954 * C385 + C50868 * C391) *
               C123 +
           (C49961 * C394 + C51142 * C402 + C49954 * C393 + C50868 * C401) *
               C111 -
           (C49954 * C386 + C50868 * C392 + C49961 * C385 + C51142 * C391) *
               C124 -
           (C49954 * C398 + C50868 * C405 + C49961 * C393 + C51142 * C401) *
               C112) *
              C51027 * C15546 +
          ((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
               C121 +
           (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
               C109 -
           (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
               C122 -
           (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
               C110 +
           (C49961 * C853 + C51142 * C858 + C49954 * C854 + C50868 * C859) *
               C123 +
           (C49961 * C862 + C51142 * C868 + C49954 * C863 + C50868 * C869) *
               C111 -
           (C49954 * C855 + C50868 * C864 + C49961 * C854 + C51142 * C859) *
               C124 -
           (C49954 * C865 + C50868 * C870 + C49961 * C863 + C51142 * C869) *
               C112) *
              C51027 * C15547) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C51027 * C15545 +
           ((C15889 + C15890) * C50007 + (C15891 + C15892) * C51149 -
            (C15893 + C15894) * C50000 - (C15895 + C15896) * C50887) *
               C51027 * C15546 +
           ((C15901 + C15902) * C50007 + (C15903 + C15904) * C51149 -
            (C15905 + C15906) * C50000 - (C15907 + C15908) * C50887) *
               C51027 * C15547) *
              C50953 * C507 +
          (((C7992 + C7991) * C50000 -
            ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
            (C7994 + C7993) * C50887) *
               C51027 * C15545 +
           ((C9598 + C9599) * C50000 -
            ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
            (C9600 + C9601) * C50887) *
               C51027 * C15546 +
           ((C49961 * C971 + C51142 * C979 + C49954 * C970 + C50868 * C978) *
                C50000 -
            ((C8978 + C8977) * C51149 + (C8976 + C8975) * C50007) +
            (C49961 * C975 + C51142 * C983 + C49954 * C974 + C50868 * C982) *
                C50887) *
               C51027 * C15547) *
              C50953 * C508 +
          (C8337 * C51027 * C15545 +
           ((C8645 + C8644) * C50007 + (C8643 + C8642) * C51149 -
            (C9603 + C9602) * C50000 - (C9605 + C9604) * C50887) *
               C51027 * C15546 +
           ((C8979 + C8980) * C50007 + (C8981 + C8982) * C51149 -
            (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
             C51142 * C3328) *
                C50000 -
            (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
             C51142 * C3331) *
                C50887) *
               C51027 * C15547) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50882) *
              C51027 * C51053 * C50953 * C599 -
          ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
            C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
               C50882 +
           (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
            C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
               C603) *
              C51027 * C51053 * C50953 * C600 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C603 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C50882) *
              C51027 * C51053 * C50953 * C601 -
          ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
            C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
               C50882 +
           (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
            C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
               C603) *
              C51027 * C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51027 * C51053 * C50953 * C51157 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C257 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C251 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C256) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C252 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C258 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C253) *
              C51027 * C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C50953 * C51157 +
          (((C7992 + C7991) * C257 -
            ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
            (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
            (C7998 + C7997) * C253) *
               C7787 +
           ((C8004 + C8003) * C257 -
            ((C8002 + C8001) * C251 + (C8000 + C7999) * C256) +
            (C8006 + C8005) * C252 - (C8008 + C8007) * C258 -
            (C8010 + C8009) * C253) *
               C7788 +
           ((C49961 * C606 + C51142 * C614 + C49954 * C605 + C50868 * C613) *
                C257 -
            ((C49954 * C610 + C50868 * C618 + C49961 * C611 + C51142 * C619) *
                 C251 +
             (C49954 * C606 + C50868 * C614 + C49961 * C607 + C51142 * C615) *
                 C256) +
            (C49961 * C610 + C51142 * C618 + C49954 * C609 + C50868 * C617) *
                C252 -
            (C49954 * C604 + C50868 * C612 + C49961 * C605 + C51142 * C613) *
                C258 -
            (C49954 * C608 + C50868 * C616 + C49961 * C609 + C51142 * C617) *
                C253) *
               C7789) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C7787 +
           ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
           C8456 * C7789) *
              C51053 * C50953 * C599 -
          (C8463 * C7789 +
           ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
           ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
              C51053 * C50953 * C600 +
          (C8456 * C7787 +
           ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
           ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
              C51053 * C50953 * C601 -
          (((C49954 * C8437 + C50868 * C8441 + C49961 * C8438 +
             C51142 * C8442) *
                C50882 +
            (C49954 * C8435 + C50868 * C8439 + C49961 * C8436 +
             C51142 * C8440) *
                C603) *
               C7789 +
           ((C8462 + C8461) * C50882 + (C8460 + C8459) * C603) * C7788 +
           C8463 * C7787) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C51027 * C15545 +
           ((C49961 * C387 + C51142 * C397 + C49954 * C383 + C50868 * C389) *
                C256 +
            (C49961 * C396 + C51142 * C404 + C49954 * C395 + C50868 * C403) *
                C251 -
            (C49954 * C384 + C50868 * C390 + C49961 * C383 + C51142 * C389) *
                C257 -
            (C49954 * C394 + C50868 * C402 + C49961 * C395 + C51142 * C403) *
                C252 +
            (C49961 * C384 + C51142 * C390 + C49954 * C385 + C50868 * C391) *
                C258 +
            (C49961 * C394 + C51142 * C402 + C49954 * C393 + C50868 * C401) *
                C253) *
               C51027 * C15546 +
           ((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C256 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C251 -
            (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
                C257 -
            (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
                C252 +
            (C49961 * C853 + C51142 * C858 + C49954 * C854 + C50868 * C859) *
                C258 +
            (C49961 * C862 + C51142 * C868 + C49954 * C863 + C50868 * C869) *
                C253) *
               C51027 * C15547) *
              C50953 * C51157 +
          (((C7992 + C7991) * C257 -
            ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
            (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
            (C7998 + C7997) * C253) *
               C51027 * C15545 +
           ((C9598 + C9599) * C257 -
            ((C8646 + C8647) * C251 + (C8648 + C8649) * C256) +
            (C9600 + C9601) * C252 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C258 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C253) *
               C51027 * C15546 +
           ((C49961 * C971 + C51142 * C979 + C49954 * C970 + C50868 * C978) *
                C257 -
            ((C8978 + C8977) * C251 + (C8976 + C8975) * C256) +
            (C49961 * C975 + C51142 * C983 + C49954 * C974 + C50868 * C982) *
                C252 -
            (C49954 * C969 + C50868 * C977 + C49961 * C970 + C51142 * C978) *
                C258 -
            (C49954 * C973 + C50868 * C981 + C49961 * C974 + C51142 * C982) *
                C253) *
               C51027 * C15547) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C51027 * C15545 +
           ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
               C15546 +
           ((C15901 + C15902) * C603 + (C15903 + C15904) * C50882) * C51027 *
               C15547) *
              C50953 * C599 -
          (((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C51027 *
               C15547 +
           ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C51027 *
               C15546 +
           ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C51027 *
               C15545) *
              C50953 * C600 +
          (C8456 * C51027 * C15545 +
           ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C51027 *
               C15546 +
           ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51027 *
               C15547) *
              C50953 * C601 -
          (((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
             C51142 * C8957) *
                C50882 +
            (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
             C51142 * C8955) *
                C603) *
               C51027 * C15547 +
           ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C51027 *
               C15546 +
           C8463 * C51027 * C15545) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C51158 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C50965) *
              C507 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C50965 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C51158) *
              C508 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50882) *
               C51027 * C51053 * C51158 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50882 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51027 * C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51027 * C51053 * C51158 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C257 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C251 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C256) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C252 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C258 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C253) *
              C51027 * C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C51158 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C257 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C251 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C256) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C252 -
            (C49954 * C385 + C50868 * C391 + C49961 * C384 + C51142 * C390) *
                C258 -
            (C49954 * C393 + C50868 * C401 + C49961 * C394 + C51142 * C402) *
                C253) *
               C7787 +
           ((C49961 * C719 + C51142 * C727 + C49954 * C720 + C50868 * C728) *
                C257 -
            ((C49954 * C731 + C50868 * C743 + C49961 * C730 + C51142 * C742) *
                 C251 +
             (C49954 * C719 + C50868 * C727 + C49961 * C718 + C51142 * C726) *
                 C256) +
            (C49961 * C731 + C51142 * C743 + C49954 * C732 + C50868 * C744) *
                C252 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C258 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C253) *
               C7788 +
           ((C49961 * C724 + C51142 * C740 + C49954 * C723 + C50868 * C739) *
                C257 -
            ((C49954 * C736 + C50868 * C748 + C49961 * C737 + C51142 * C749) *
                 C251 +
             (C49954 * C724 + C50868 * C740 + C49961 * C725 + C51142 * C741) *
                 C256) +
            (C49961 * C736 + C51142 * C748 + C49954 * C735 + C50868 * C747) *
                C252 -
            (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                C258 -
            (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                C253) *
               C7789) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C51158 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C50965) *
              C507 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C50965 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C51158) *
              C508 +
          ((C8456 * C7787 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
            ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
               C51053 * C51158 -
           (((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C7789 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C7788 +
            C8658 * C7787) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C51027 * C15545 +
           ((C15889 + C15890) * C256 + (C15891 + C15892) * C251 -
            (C15893 + C15894) * C257 - (C15895 + C15896) * C252 +
            (C15897 + C15898) * C258 + (C15899 + C15900) * C253) *
               C51027 * C15546 +
           ((C15901 + C15902) * C256 + (C15903 + C15904) * C251 -
            (C15905 + C15906) * C257 - (C15907 + C15908) * C252 +
            (C15909 + C15910) * C258 + (C15911 + C15912) * C253) *
               C51027 * C15547) *
              C51158 +
          (((C15894 + C15893) * C257 -
            ((C15892 + C15891) * C251 + (C15890 + C15889) * C256) +
            (C15896 + C15895) * C252 - (C15898 + C15897) * C258 -
            (C15900 + C15899) * C253) *
               C51027 * C15545 +
           ((C15906 + C15905) * C257 -
            ((C15904 + C15903) * C251 + (C15902 + C15901) * C256) +
            (C15908 + C15907) * C252 - (C15910 + C15909) * C258 -
            (C15912 + C15911) * C253) *
               C51027 * C15546 +
           ((C49961 * C1057 + C51142 * C1065 + C49954 * C1056 +
             C50868 * C1064) *
                C257 -
            ((C49954 * C1061 + C50868 * C1069 + C49961 * C1062 +
              C51142 * C1070) *
                 C251 +
             (C49954 * C1057 + C50868 * C1065 + C49961 * C1058 +
              C51142 * C1066) *
                 C256) +
            (C49961 * C1061 + C51142 * C1069 + C49954 * C1060 +
             C50868 * C1068) *
                C252 -
            (C49954 * C1055 + C50868 * C1063 + C49961 * C1056 +
             C51142 * C1064) *
                C258 -
            (C49954 * C1059 + C50868 * C1067 + C49961 * C1060 +
             C51142 * C1068) *
                C253) *
               C51027 * C15547) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C15545 +
            ((C15889 + C15890) * C603 + (C15891 + C15892) * C50882) * C51027 *
                C15546 +
            ((C15901 + C15902) * C603 + (C15903 + C15904) * C50882) * C51027 *
                C15547) *
               C51158 -
           (((C49954 * C1061 + C50868 * C1069 + C49961 * C1062 +
              C51142 * C1070) *
                 C50882 +
             (C49954 * C1057 + C50868 * C1065 + C49961 * C1058 +
              C51142 * C1066) *
                 C603) *
                C51027 * C15547 +
            ((C15904 + C15903) * C50882 + (C15902 + C15901) * C603) * C51027 *
                C15546 +
            ((C15892 + C15891) * C50882 + (C15890 + C15889) * C603) * C51027 *
                C15545) *
               C50965) *
              C507 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C51027 *
                C15545 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C51027 *
                C15546 +
            ((C49961 * C3451 + C51142 * C3457 + C49954 * C3450 +
              C50868 * C3456) *
                 C603 +
             (C49961 * C3454 + C51142 * C3460 + C49954 * C3453 +
              C50868 * C3459) *
                 C50882) *
                C51027 * C15547) *
               C50965 -
           (((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C51027 *
                C15547 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C51027 *
                C15546 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C51027 *
                C15545) *
               C51158) *
              C508 +
          ((C8456 * C51027 * C15545 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C51027 *
                C15546 +
            ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C51027 *
                C15547) *
               C51158 -
           (((C49954 * C9082 + C50868 * C9086 + C49961 * C9083 +
              C51142 * C9087) *
                 C50882 +
             (C49954 * C9080 + C50868 * C9084 + C49961 * C9081 +
              C51142 * C9085) *
                 C603) *
                C51027 * C15547 +
            ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C51027 *
                C15546 +
            C8658 * C51027 * C15545) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1174 +
            (C10648 * C136 + C50863 * C146) * C51201 -
            (C10648 * C126 + C50863 * C133) * C1175 -
            (C10648 * C137 + C50863 * C147) * C51187 +
            (C10648 * C127 + C50863 * C134) * C1176 +
            (C10648 * C138 + C50863 * C148) * C1171) *
               C10644 +
           (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C10645 +
           (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C10646 +
           (C11680 + C11681 - C11682 - C11683 + C11684 + C11685) * C10647) *
              C51053 * C50953 * C1172 +
          ((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C10644 +
           (C11676 - (C11675 + C11674) + C11677 - C11678 - C11679) * C10645 +
           (C11682 - (C11681 + C11680) + C11683 - C11684 - C11685) * C10646 +
           (C11038 * C1175 - (C11039 * C51201 + C11040 * C1174) +
            C11041 * C51187 - (C10648 * C2805 + C50863 * C2811) * C1176 -
            (C10648 * C2808 + C50863 * C2814) * C1171) *
               C10647) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1174 + (C2365 + C2366 + C2367) * C51201 -
            (C2368 + C2369 + C2370) * C1175 - (C2371 + C2372 + C2373) * C51187 +
            (C2374 + C2375 + C2376) * C1176 + (C2377 + C2378 + C2379) * C1171) *
               C51041) *
              C51053 * C50953 * C1172 +
          (((C2370 + C2369 + C2368) * C1175 -
            ((C2367 + C2366 + C2365) * C51201 +
             (C2364 + C2363 + C2362) * C1174) +
            (C2373 + C2372 + C2371) * C51187 - (C2376 + C2375 + C2374) * C1176 -
            (C2379 + C2378 + C2377) * C1171) *
               C51170 +
           ((C2696 + C2697 + C2698) * C1175 -
            ((C2699 + C2700 + C2701) * C51201 +
             (C2702 + C2703 + C2704) * C1174) +
            (C2705 + C2706 + C2707) * C51187 -
            (C2178 * C516 + C2173 * C525 + C2177 * C515 + C2172 * C520 +
             C2176 * C514 + C2171 * C519) *
                C1176 -
            (C2178 * C526 + C2173 * C531 + C2177 * C524 + C2172 * C530 +
             C2176 * C523 + C2171 * C529) *
                C1171) *
               C51041) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C51170 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C51041) *
               C15545 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C51170 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C51041) *
               C15546 +
           ((C13640 * C1174 + C13639 * C51201 - C13638 * C1175 -
             C13641 * C51187 + C18669 * C1176 + C18670 * C1171) *
                C51170 +
            (C19661 + C19662 - C19663 - C19664 + C19665 + C19666) * C51041) *
               C15547) *
              C50953 * C1172 +
          (((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C51170 +
            (C11676 - (C11675 + C11674) + C11677 - C11678 - C11679) * C51041) *
               C15545 +
           ((C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C51170 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C51041) *
               C15546 +
           ((C19663 - (C19662 + C19661) + C19664 - C19665 - C19666) * C51170 +
            (C13644 * C1175 - (C11491 * C51201 + C11490 * C1174) +
             C13645 * C51187 - (C10648 * C3321 + C50863 * C3327) * C1176 -
             (C10648 * C3324 + C50863 * C3330) * C1171) *
                C51041) *
               C15547) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1280 +
            (C10648 * C136 + C50863 * C146) * C1275 -
            (C10648 * C126 + C50863 * C133) * C1281 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C10644 +
           (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
           C11805 * C10647) *
              C51053 * C50953 * C51202 +
          ((C11786 - (C11785 + C11784) + C11787) * C10644 +
           (C11790 - (C11789 + C11788) + C11791) * C10645 +
           (C11794 - (C11793 + C11792) + C11795) * C10646 +
           (C11796 - (C11797 + C11798) + C11799) * C10647) *
              C51053 * C50953 * C51190 +
          (C11804 * C10644 + C11805 * C10645 +
           (C11798 + C11797 - C11796 - C11799) * C10646 +
           (C11136 * C1280 + C11137 * C1275 -
            (C10648 * C8435 + C50863 * C8439) * C1281 -
            (C10648 * C8437 + C50863 * C8441) * C50887) *
               C10647) *
              C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
            (C2368 + C2369 + C2370) * C1281 -
            (C2371 + C2372 + C2373) * C50887) *
               C51041) *
              C51053 * C50953 * C51202 +
          (((C2370 + C2369 + C2368) * C1281 -
            ((C2367 + C2366 + C2365) * C1275 +
             (C2364 + C2363 + C2362) * C1280) +
            (C2373 + C2372 + C2371) * C50887) *
               C51170 +
           ((C2696 + C2697 + C2698) * C1281 -
            ((C2699 + C2700 + C2701) * C1275 +
             (C2702 + C2703 + C2704) * C1280) +
            (C2705 + C2706 + C2707) * C50887) *
               C51041) *
              C51053 * C50953 * C51190 +
          (((C2704 + C2703 + C2702) * C1280 + (C2701 + C2700 + C2699) * C1275 -
            (C2698 + C2697 + C2696) * C1281 -
            (C2707 + C2706 + C2705) * C50887) *
               C51170 +
           ((C2830 + C2831 + C2832) * C1280 + (C2833 + C2834 + C2835) * C1275 -
            (C2178 * C604 + C2173 * C612 + C2177 * C605 + C2172 * C613 +
             C2176 * C606 + C2171 * C614) *
                C1281 -
            (C2178 * C608 + C2173 * C616 + C2177 * C609 + C2172 * C617 +
             C2176 * C610 + C2171 * C618) *
                C50887) *
               C51041) *
              C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51170 +
            (C11784 + C11785 - C11786 - C11787) * C51041) *
               C15545 +
           ((C14436 + C14437 - C14438 - C14439) * C51170 + C14454 * C51041) *
               C15546 +
           ((C14951 + C14950 - C14949 - C14952) * C51170 +
            (C14445 + C14444 - C14443 - C14446) * C51041) *
               C15547) *
              C50953 * C51202 +
          (((C11786 - (C11785 + C11784) + C11787) * C51170 +
            (C11790 - (C11789 + C11788) + C11791) * C51041) *
               C15545 +
           (C14455 * C51170 + C14456 * C51041) * C15546 +
           ((C14443 - (C14444 + C14445) + C14446) * C51170 +
            (C14447 - (C14448 + C14449) + C14450) * C51041) *
               C15547) *
              C50953 * C51190 +
          ((C11804 * C51170 + C11805 * C51041) * C15545 +
           (C14241 * C51170 + (C11951 + C11950 - C11964 - C11965) * C51041) *
               C15546 +
           ((C14449 + C14448 - C14447 - C14450) * C51170 +
            (C11492 * C1280 + C11493 * C1275 -
             (C10648 * C8950 + C50863 * C8954) * C1281 -
             (C10648 * C8952 + C50863 * C8956) * C50887) *
                C51041) *
               C15547) *
              C50953 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C10644 +
            (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
            C11805 * C10647) *
               C51053 * C51158 +
           (((C10648 * C383 + C50863 * C389) * C1281 -
             ((C10648 * C396 + C50863 * C404) * C1275 +
              (C10648 * C387 + C50863 * C397) * C1280) +
             (C10648 * C395 + C50863 * C403) * C50887) *
                C10644 +
            (C11960 - (C11938 + C11939) + C11961) * C10645 +
            (C11962 - (C11944 + C11945) + C11963) * C10646 +
            (C11964 - (C11950 + C11951) + C11965) * C10647) *
               C51053 * C50965) *
              C1172 +
          (((C11786 - (C11785 + C11784) + C11787) * C10644 +
            (C11790 - (C11789 + C11788) + C11791) * C10645 +
            (C11794 - (C11793 + C11792) + C11795) * C10646 +
            (C11796 - (C11797 + C11798) + C11799) * C10647) *
               C51053 * C51158 +
           ((C11939 + C11938 - C11960 - C11961) * C10644 +
            (C11945 + C11944 - C11962 - C11963) * C10645 +
            (C11951 + C11950 - C11964 - C11965) * C10646 +
            (C11264 * C1280 + C11265 * C1275 -
             (C10648 * C8609 + C50863 * C8613) * C1281 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C10647) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51170 +
            ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
             (C2368 + C2369 + C2370) * C1281 -
             (C2371 + C2372 + C2373) * C50887) *
                C51041) *
               C51053 * C51158 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
              C2178 * C385 + C2173 * C391) *
                 C1281 -
             ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
               C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
               C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
              C2178 * C393 + C2173 * C401) *
                 C50887) *
                C51170 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51041) *
               C51053 * C50965) *
              C1172 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51170 +
            ((C2696 + C2697 + C2698) * C1281 -
             ((C2699 + C2700 + C2701) * C1275 +
              (C2702 + C2703 + C2704) * C1280) +
             (C2705 + C2706 + C2707) * C50887) *
                C51041) *
               C51053 * C51158 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51170 +
            ((C3024 + C3025 + C3026) * C1280 + (C3027 + C3028 + C3029) * C1275 -
             (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
              C2176 * C724 + C2171 * C740) *
                 C1281 -
             (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
              C2176 * C736 + C2171 * C748) *
                 C50887) *
                C51041) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C51170 +
             (C11784 + C11785 - C11786 - C11787) * C51041) *
                C15545 +
            ((C14436 + C14437 - C14438 - C14439) * C51170 + C14454 * C51041) *
                C15546 +
            ((C14951 + C14950 - C14949 - C14952) * C51170 + C20015 * C51041) *
                C15547) *
               C51158 +
           (((C14438 - (C14437 + C14436) + C14439) * C51170 + C14455 * C51041) *
                C15545 +
            ((C14949 - (C14950 + C14951) + C14952) * C51170 + C20016 * C51041) *
                C15546 +
            ((C19225 * C1281 - (C13932 * C1275 + C13931 * C1280) +
              C19226 * C50887) *
                 C51170 +
             (C20009 - (C20010 + C20011) + C20012) * C51041) *
                C15547) *
               C50965) *
              C1172 +
          ((((C11786 - (C11785 + C11784) + C11787) * C51170 +
             (C11790 - (C11789 + C11788) + C11791) * C51041) *
                C15545 +
            (C14455 * C51170 + C14456 * C51041) * C15546 +
            (C20016 * C51170 + (C14447 - (C14448 + C14449) + C14450) * C51041) *
                C15547) *
               C51158 +
           ((C14454 * C51170 + C14241 * C51041) * C15545 +
            (C20015 * C51170 + (C14449 + C14448 - C14447 - C14450) * C51041) *
                C15546 +
            ((C20011 + C20010 - C20009 - C20012) * C51170 +
             (C13815 * C1280 + C13816 * C1275 -
              (C10648 * C9080 + C50863 * C9084) * C1281 -
              (C10648 * C9082 + C50863 * C9086) * C50887) *
                 C51041) *
                C15547) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C10644 +
            (C11016 + C11017 - C11018 - C11019) * C10645 + C11048 * C10646 +
            C11049 * C10647) *
               C51053 * C1514 +
           (((C10648 * C383 + C50863 * C389) * C50000 -
             ((C10648 * C396 + C50863 * C404) * C51149 +
              (C10648 * C387 + C50863 * C397) * C50007) +
             (C10648 * C395 + C50863 * C403) * C50887) *
                C10644 +
            (C12422 - (C12423 + C12424) + C12425) * C10645 +
            (C12426 - (C12427 + C12428) + C12429) * C10646 +
            (C12430 - (C12431 + C12432) + C12433) * C10647) *
               C51053 * C50965) *
              C1172 +
          (((C11018 - (C11017 + C11016) + C11019) * C10644 +
            (C11022 - (C11021 + C11020) + C11023) * C10645 +
            (C11026 - (C11025 + C11024) + C11027) * C10646 +
            (C11044 - (C11045 + C11046) + C11047) * C10647) *
               C51053 * C1514 +
           ((C12424 + C12423 - C12422 - C12425) * C10644 +
            (C12428 + C12427 - C12426 - C12429) * C10645 +
            (C12432 + C12431 - C12430 - C12433) * C10646 +
            (C11264 * C50007 + C11265 * C51149 -
             (C10648 * C8609 + C50863 * C8613) * C50000 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C10647) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C51149 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51170 +
            ((C2362 + C2363 + C2364) * C50007 +
             (C2365 + C2366 + C2367) * C51149 -
             (C2368 + C2369 + C2370) * C50000 -
             (C2371 + C2372 + C2373) * C50887) *
                C51041) *
               C51053 * C1514 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
              C2178 * C385 + C2173 * C391) *
                 C50000 -
             ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
               C2176 * C396 + C2171 * C404) *
                  C51149 +
              (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
               C2176 * C387 + C2171 * C397) *
                  C50007) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
              C2178 * C393 + C2173 * C401) *
                 C50887) *
                C51170 +
            ((C3960 + C3961 + C3962) * C50000 -
             ((C3018 + C3019 + C3020) * C51149 +
              (C3021 + C3022 + C3023) * C50007) +
             (C3963 + C3964 + C3965) * C50887) *
                C51041) *
               C51053 * C50965) *
              C1172 +
          ((((C2370 + C2369 + C2368) * C50000 -
             ((C2367 + C2366 + C2365) * C51149 +
              (C2364 + C2363 + C2362) * C50007) +
             (C2373 + C2372 + C2371) * C50887) *
                C51170 +
            ((C2696 + C2697 + C2698) * C50000 -
             ((C2699 + C2700 + C2701) * C51149 +
              (C2702 + C2703 + C2704) * C50007) +
             (C2705 + C2706 + C2707) * C50887) *
                C51041) *
               C51053 * C1514 +
           (((C3023 + C3022 + C3021) * C50007 +
             (C3020 + C3019 + C3018) * C51149 -
             (C3962 + C3961 + C3960) * C50000 -
             (C3965 + C3964 + C3963) * C50887) *
                C51170 +
            ((C3024 + C3025 + C3026) * C50007 +
             (C3027 + C3028 + C3029) * C51149 -
             (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
              C2176 * C724 + C2171 * C740) *
                 C50000 -
             (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
              C2176 * C736 + C2171 * C748) *
                 C50887) *
                C51041) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C50007 +
              (C10648 * C136 + C50863 * C146) * C51149 -
              (C10648 * C126 + C50863 * C133) * C50000 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C51170 +
             (C11016 + C11017 - C11018 - C11019) * C51041) *
                C15545 +
            ((C13614 + C13615 - C13616 - C13617) * C51170 + C15153 * C51041) *
                C15546 +
            C19237 * C15547) *
               C1514 +
           (((C13616 - (C13615 + C13614) + C13617) * C51170 + C15154 * C51041) *
                C15545 +
            ((C13646 - (C13647 + C13648) + C13649) * C51170 + C20715 * C51041) *
                C15546 +
            ((C19231 - (C19213 + C19214) + C19232) * C51170 +
             (C19233 - (C19219 + C19220) + C19234) * C51041) *
                C15547) *
               C50965) *
              C1172 +
          ((((C11018 - (C11017 + C11016) + C11019) * C51170 +
             (C11022 - (C11021 + C11020) + C11023) * C51041) *
                C15545 +
            (C15154 * C51170 + C15155 * C51041) * C15546 +
            (C20715 * C51170 + (C13652 - (C13634 + C13635) + C13653) * C51041) *
                C15547) *
               C1514 +
           ((C15153 * C51170 + C13216 * C51041) * C15545 +
            (C19230 * C51170 + (C13635 + C13634 - C13652 - C13653) * C51041) *
                C15546 +
            ((C19220 + C19219 - C19233 - C19234) * C51170 +
             (C13815 * C50007 + C13816 * C51149 -
              (C10648 * C9080 + C50863 * C9084) * C50000 -
              (C10648 * C9082 + C50863 * C9086) * C50887) *
                 C51041) *
                C15547) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C1514 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C50965) *
              C51202 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C50965 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C1514) *
              C51190 +
          ((C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
            (C11138 + C11139) * C10647) *
               C51053 * C1514 -
           (((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C10647 +
            (C11273 + C11272) * C10646 + C11274 * C10645 + C11275 * C10644) *
               C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C1514 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C50965) *
              C51202 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C50965 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C1514) *
              C51190 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51170 +
            ((C2830 + C2831 + C2832) * C603 +
             (C2833 + C2834 + C2835) * C50882) *
                C51041) *
               C51053 * C1514 -
           (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
              C2176 * C2986 + C2171 * C2992) *
                 C50882 +
             (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
              C2176 * C2983 + C2171 * C2989) *
                 C603) *
                C51041 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51170) *
               C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51170 +
             (C11120 + C11121) * C51041) *
                C15545 +
            ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
            C19398 * C15547) *
               C1514 -
           (C19512 * C15547 +
            (C13800 * C51041 + (C13801 + C13802) * C51170) * C15546 +
            (C13466 * C51041 + (C13463 + C13462) * C51170) * C15545) *
               C50965) *
              C51202 +
          (((C13464 * C51170 + C13315 * C51041) * C15545 +
            (C13803 * C51170 + C13804 * C51041) * C15546 +
            (C19387 * C51170 + (C13819 + C13820) * C51041) * C15547) *
               C50965 -
           (C19397 * C15547 + (C11275 * C51041 + C13466 * C51170) * C15546 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C51170) *
                C15545) *
               C1514) *
              C51190 +
          (((C11132 * C51170 + C11133 * C51041) * C15545 +
            (C13315 * C51170 + C13467 * C51041) * C15546 +
            (C13804 * C51170 + (C11498 + C11499) * C51041) * C15547) *
               C1514 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C51041 +
             (C13820 + C13819) * C51170) *
                C15547 +
            ((C11499 + C11498) * C51041 + C13465 * C51170) * C15546 +
            (C11274 * C51041 + C11275 * C51170) * C15545) *
               C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C51203 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C51193 +
           (((C10648 * C851 + C50863 * C856) * C603 +
             (C10648 * C860 + C50863 * C866) * C50882) *
                C10644 +
            (C11494 + C11495) * C10645 + (C11496 + C11497) * C10646 +
            (C11498 + C11499) * C10647) *
               C51053 * C1746) *
              C1172 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C51193 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C51203 -
           (((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C10647 +
            (C11499 + C11498) * C10646 + (C11497 + C11496) * C10645 +
            (C11495 + C11494) * C10644) *
               C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C51203 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C51193 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
              C2178 * C853 + C2173 * C858) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
              C2178 * C862 + C2173 * C868) *
                 C50882) *
                C51170 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51041) *
               C51053 * C1746) *
              C1172 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C51193 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C51203 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51041 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51170) *
               C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51170 +
             (C11120 + C11121) * C51041) *
                C15545 +
            ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
            C19398 * C15547) *
               C51203 -
           (C19512 * C15547 +
            (C13800 * C51041 + (C13801 + C13802) * C51170) * C15546 +
            (C13466 * C51041 + (C13463 + C13462) * C51170) * C15545) *
               C51193 +
           (C19398 * C15545 +
            ((C13933 + C13934) * C51170 + C19387 * C51041) * C15546 +
            ((C19513 + C19514) * C51170 + (C19399 + C19400) * C51041) *
                C15547) *
               C1746) *
              C1172 +
          (((C13464 * C51170 + C13315 * C51041) * C15545 +
            (C13803 * C51170 + C13804 * C51041) * C15546 +
            (C19387 * C51170 + (C13819 + C13820) * C51041) * C15547) *
               C51193 -
           (C19397 * C15547 + (C11275 * C51041 + C13466 * C51170) * C15546 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C51170) *
                C15545) *
               C51203 -
           ((((C10648 * C13920 + C50863 * C13924) * C50882 +
              (C10648 * C13918 + C50863 * C13921) * C603) *
                 C51041 +
             (C19400 + C19399) * C51170) *
                C15547 +
            ((C13820 + C13819) * C51041 + C19386 * C51170) * C15546 +
            C19397 * C15545) *
               C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                C2178 * C127 + C2173 * C134) *
                   C121 +
               (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                C2178 * C138 + C2173 * C148) *
                   C109 -
               (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                C2176 * C126 + C2171 * C133) *
                   C122 -
               (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                C2176 * C137 + C2171 * C147) *
                   C110 +
               (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                C2178 * C129 + C2173 * C140) *
                   C123 +
               (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                C2178 * C141 + C2173 * C150) *
                   C111 -
               (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
                C2176 * C128 + C2171 * C135) *
                   C124 -
               (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
                C2176 * C139 + C2171 * C149) *
                   C112) *
                  C51170 +
              ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C2172 * C265 +
                C2178 * C260 + C2173 * C266) *
                   C121 +
               (C2176 * C272 + C2171 * C280 + C2177 * C271 + C2172 * C279 +
                C2178 * C270 + C2173 * C278) *
                   C109 -
               (C2178 * C261 + C2173 * C267 + C2177 * C260 + C2172 * C266 +
                C2176 * C259 + C2171 * C265) *
                   C122 -
               (C2178 * C269 + C2173 * C277 + C2177 * C270 + C2172 * C278 +
                C2176 * C271 + C2171 * C279) *
                   C110 +
               (C2176 * C260 + C2171 * C266 + C2177 * C261 + C2172 * C267 +
                C2178 * C262 + C2173 * C268) *
                   C123 +
               (C2176 * C270 + C2171 * C278 + C2177 * C269 + C2172 * C277 +
                C2178 * C274 + C2173 * C281) *
                   C111 -
               (C2178 * C264 + C2173 * C275 + C2177 * C262 + C2172 * C268 +
                C2176 * C261 + C2171 * C267) *
                   C124 -
               (C2178 * C276 + C2173 * C282 + C2177 * C274 + C2172 * C281 +
                C2176 * C269 + C2171 * C277) *
                   C112) *
                  C51041) *
             C51053 * C50953 * C50927 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C50007 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C51149 -
                (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                 C2176 * C126 + C2171 * C133) *
                    C50000 -
                (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                 C2176 * C137 + C2171 * C147) *
                    C50887) *
                   C51170 +
               ((C2362 + C2363 + C2364) * C50007 +
                (C2365 + C2366 + C2367) * C51149 -
                (C2368 + C2369 + C2370) * C50000 -
                (C2371 + C2372 + C2373) * C50887) *
                   C51041) *
                  C51053 * C50953 * C507 +
              (((C2370 + C2369 + C2368) * C50000 -
                ((C2367 + C2366 + C2365) * C51149 +
                 (C2364 + C2363 + C2362) * C50007) +
                (C2373 + C2372 + C2371) * C50887) *
                   C51170 +
               ((C2696 + C2697 + C2698) * C50000 -
                ((C2699 + C2700 + C2701) * C51149 +
                 (C2702 + C2703 + C2704) * C50007) +
                (C2705 + C2706 + C2707) * C50887) *
                   C51041) *
                  C51053 * C50953 * C508 +
              (((C2704 + C2703 + C2702) * C50007 +
                (C2701 + C2700 + C2699) * C51149 -
                (C2698 + C2697 + C2696) * C50000 -
                (C2707 + C2706 + C2705) * C50887) *
                   C51170 +
               ((C2176 * C607 + C2171 * C615 + C2177 * C606 + C2172 * C614 +
                 C2178 * C605 + C2173 * C613) *
                    C50007 +
                (C2176 * C611 + C2171 * C619 + C2177 * C610 + C2172 * C618 +
                 C2178 * C609 + C2173 * C617) *
                    C51149 -
                (C2178 * C604 + C2173 * C612 + C2177 * C605 + C2172 * C613 +
                 C2176 * C606 + C2171 * C614) *
                    C50000 -
                (C2178 * C608 + C2173 * C616 + C2177 * C609 + C2172 * C617 +
                 C2176 * C610 + C2171 * C618) *
                    C50887) *
                   C51041) *
                  C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51149 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51170 +
           ((C2362 + C2363 + C2364) * C50007 +
            (C2365 + C2366 + C2367) * C51149 -
            (C2368 + C2369 + C2370) * C50000 -
            (C2371 + C2372 + C2373) * C50887) *
               C51041) *
              C51053 * C848 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C50000 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C51149 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C50007) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C50887) *
               C51170 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C2172 * C728 +
             C2178 * C721 + C2173 * C729) *
                C50000 -
            ((C3018 + C3019 + C3020) * C51149 +
             (C3021 + C3022 + C3023) * C50007) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C2172 * C744 +
             C2178 * C733 + C2173 * C745) *
                C50887) *
               C51041) *
              C51053 * C849 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
             C2178 * C853 + C2173 * C858) *
                C50007 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
             C2178 * C862 + C2173 * C868) *
                C51149 -
            (C2178 * C854 + C2173 * C859 + C2177 * C853 + C2172 * C858 +
             C2176 * C852 + C2171 * C857) *
                C50000 -
            (C2178 * C863 + C2173 * C869 + C2177 * C862 + C2172 * C868 +
             C2176 * C861 + C2171 * C867) *
                C50887) *
               C51170 +
           ((C2176 * C972 + C2171 * C980 + C2177 * C971 + C2172 * C979 +
             C2178 * C970 + C2173 * C978) *
                C50007 +
            (C2176 * C976 + C2171 * C984 + C2177 * C975 + C2172 * C983 +
             C2178 * C974 + C2173 * C982) *
                C51149 -
            (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
             C2176 * C971 + C2171 * C979) *
                C50000 -
            (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
             C2176 * C975 + C2171 * C983) *
                C50887) *
               C51041) *
              C51053 * C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C10648 * C125 + C50863 * C132) * C121 +
           (C10648 * C136 + C50863 * C146) * C109 -
           (C10648 * C126 + C50863 * C133) * C122 -
           (C10648 * C137 + C50863 * C147) * C110 +
           (C10648 * C127 + C50863 * C134) * C123 +
           (C10648 * C138 + C50863 * C148) * C111 -
           (C10648 * C128 + C50863 * C135) * C124 -
           (C10648 * C139 + C50863 * C149) * C112) *
              C10644 +
          ((C10648 * C263 + C50863 * C273) * C121 +
           (C10648 * C272 + C50863 * C280) * C109 -
           (C10648 * C259 + C50863 * C265) * C122 -
           (C10648 * C271 + C50863 * C279) * C110 +
           (C10648 * C260 + C50863 * C266) * C123 +
           (C10648 * C270 + C50863 * C278) * C111 -
           (C10648 * C261 + C50863 * C267) * C124 -
           (C10648 * C269 + C50863 * C277) * C112) *
              C10645 +
          ((C10648 * C512 + C50863 * C517) * C121 +
           (C10648 * C521 + C50863 * C527) * C109 -
           (C10648 * C513 + C50863 * C518) * C122 -
           (C10648 * C522 + C50863 * C528) * C110 +
           (C10648 * C514 + C50863 * C519) * C123 +
           (C10648 * C523 + C50863 * C529) * C111 -
           (C10648 * C515 + C50863 * C520) * C124 -
           (C10648 * C524 + C50863 * C530) * C112) *
              C10646 +
          ((C10648 * C607 + C50863 * C615) * C121 +
           (C10648 * C611 + C50863 * C619) * C109 -
           (C10648 * C606 + C50863 * C614) * C122 -
           (C10648 * C610 + C50863 * C618) * C110 +
           (C10648 * C605 + C50863 * C613) * C123 +
           (C10648 * C609 + C50863 * C617) * C111 -
           (C10648 * C604 + C50863 * C612) * C124 -
           (C10648 * C608 + C50863 * C616) * C112) *
              C10647) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C50007 +
            (C10648 * C136 + C50863 * C146) * C51149 -
            (C10648 * C126 + C50863 * C133) * C50000 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C10644 +
           (C11016 + C11017 - C11018 - C11019) * C10645 + C11048 * C10646 +
           C11049 * C10647) *
              C51053 * C50953 * C507 +
          ((C11018 - (C11017 + C11016) + C11019) * C10644 +
           (C11022 - (C11021 + C11020) + C11023) * C10645 +
           (C11026 - (C11025 + C11024) + C11027) * C10646 +
           (C11044 - (C11045 + C11046) + C11047) * C10647) *
              C51053 * C50953 * C508 +
          (C11048 * C10644 + C11049 * C10645 +
           (C11046 + C11045 - C11044 - C11047) * C10646 +
           ((C10648 * C8436 + C50863 * C8440) * C50007 +
            (C10648 * C8438 + C50863 * C8442) * C51149 -
            (C10648 * C8435 + C50863 * C8439) * C50000 -
            (C10648 * C8437 + C50863 * C8441) * C50887) *
               C10647) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C50007 +
            (C10648 * C136 + C50863 * C146) * C51149 -
            (C10648 * C126 + C50863 * C133) * C50000 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C10644 +
           (C11016 + C11017 - C11018 - C11019) * C10645 + C11048 * C10646 +
           C11049 * C10647) *
              C51053 * C848 +
          (((C10648 * C383 + C50863 * C389) * C50000 -
            ((C10648 * C396 + C50863 * C404) * C51149 +
             (C10648 * C387 + C50863 * C397) * C50007) +
            (C10648 * C395 + C50863 * C403) * C50887) *
               C10644 +
           ((C10648 * C719 + C50863 * C727) * C50000 -
            (C11262 * C51149 + C11263 * C50007) +
            (C10648 * C731 + C50863 * C743) * C50887) *
               C10645 +
           ((C10648 * C724 + C50863 * C740) * C50000 -
            (C11260 * C51149 + C11261 * C50007) +
            (C10648 * C736 + C50863 * C748) * C50887) *
               C10646 +
           ((C10648 * C2982 + C50863 * C2988) * C50000 -
            (C11258 * C51149 + C11259 * C50007) +
            (C10648 * C2985 + C50863 * C2991) * C50887) *
               C10647) *
              C51053 * C849 +
          (((C10648 * C851 + C50863 * C856) * C50007 +
            (C10648 * C860 + C50863 * C866) * C51149 -
            (C10648 * C852 + C50863 * C857) * C50000 -
            (C10648 * C861 + C50863 * C867) * C50887) *
               C10644 +
           ((C10648 * C972 + C50863 * C980) * C50007 +
            (C10648 * C976 + C50863 * C984) * C51149 -
            (C10648 * C971 + C50863 * C979) * C50000 -
            (C10648 * C975 + C50863 * C983) * C50887) *
               C10645 +
           ((C10648 * C3323 + C50863 * C3329) * C50007 +
            (C10648 * C3326 + C50863 * C3332) * C51149 -
            (C10648 * C3322 + C50863 * C3328) * C50000 -
            (C10648 * C3325 + C50863 * C3331) * C50887) *
               C10646 +
           ((C10648 * C8951 + C50863 * C8955) * C50007 +
            (C10648 * C8953 + C50863 * C8957) * C51149 -
            (C10648 * C8950 + C50863 * C8954) * C50000 -
            (C10648 * C8952 + C50863 * C8956) * C50887) *
               C10647) *
              C51053 * C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C51170 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C51041) *
              C15545 +
          ((C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
            C13060 * C123 + C13061 * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C51170 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            C12890 * C123 + C12891 * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C51041) *
              C15546 +
          ((C13640 * C121 + C13639 * C109 - C13638 * C122 - C13641 * C110 +
            (C10648 * C853 + C50863 * C858) * C123 +
            (C10648 * C862 + C50863 * C868) * C111 -
            (C10648 * C854 + C50863 * C859) * C124 -
            (C10648 * C863 + C50863 * C869) * C112) *
               C51170 +
           (C11488 * C121 + C11489 * C109 - C13642 * C122 - C13643 * C110 +
            (C10648 * C970 + C50863 * C978) * C123 +
            (C10648 * C974 + C50863 * C982) * C111 -
            (C10648 * C969 + C50863 * C977) * C124 -
            (C10648 * C973 + C50863 * C981) * C112) *
               C51041) *
              C15547) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51170 +
            (C11016 + C11017 - C11018 - C11019) * C51041) *
               C15545 +
           ((C13614 + C13615 - C13616 - C13617) * C51170 + C15153 * C51041) *
               C15546 +
           ((C13648 + C13647 - C13646 - C13649) * C51170 +
            (C13629 + C13628 - C13650 - C13651) * C51041) *
               C15547) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C51170 +
            (C11022 - (C11021 + C11020) + C11023) * C51041) *
               C15545 +
           (C15154 * C51170 + C15155 * C51041) * C15546 +
           ((C13650 - (C13628 + C13629) + C13651) * C51170 +
            (C13652 - (C13634 + C13635) + C13653) * C51041) *
               C15547) *
              C50953 * C508 +
          ((C11048 * C51170 + C11049 * C51041) * C15545 +
           (C13216 * C51170 + (C12432 + C12431 - C12430 - C12433) * C51041) *
               C15546 +
           ((C13635 + C13634 - C13652 - C13653) * C51170 +
            (C11492 * C50007 + C11493 * C51149 -
             (C10648 * C8950 + C50863 * C8954) * C50000 -
             (C10648 * C8952 + C50863 * C8956) * C50887) *
                C51041) *
               C15547) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51170 +
            (C11016 + C11017 - C11018 - C11019) * C51041) *
               C15545 +
           ((C13614 + C13615 - C13616 - C13617) * C51170 + C15153 * C51041) *
               C15546 +
           C19237 * C15547) *
              C848 +
          (((C13616 - (C13615 + C13614) + C13617) * C51170 + C15154 * C51041) *
               C15545 +
           ((C13646 - (C13647 + C13648) + C13649) * C51170 +
            (C13650 - (C13628 + C13629) + C13651) * C51041) *
               C15546 +
           ((C19231 - (C19213 + C19214) + C19232) * C51170 +
            (C19233 - (C19219 + C19220) + C19234) * C51041) *
               C15547) *
              C849 +
          (C19237 * C15545 +
           ((C19214 + C19213 - C19231 - C19232) * C51170 +
            (C19220 + C19219 - C19233 - C19234) * C51041) *
               C15546 +
           (((C10648 * C6201 + C50863 * C6207) * C50007 +
             (C10648 * C6204 + C50863 * C6210) * C51149 -
             (C10648 * C6200 + C50863 * C6206) * C50000 -
             (C10648 * C6203 + C50863 * C6209) * C50887) *
                C51170 +
            ((C10648 * C13919 + C50863 * C13923) * C50007 +
             (C10648 * C13922 + C50863 * C13925) * C51149 -
             (C10648 * C16630 + C50863 * C16632) * C50000 -
             (C10648 * C16631 + C50863 * C16633) * C50887) *
                C51041) *
               C15547) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C256 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C251 -
                (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                 C2176 * C126 + C2171 * C133) *
                    C257 -
                (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                 C2176 * C137 + C2171 * C147) *
                    C252 +
                (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                 C2178 * C129 + C2173 * C140) *
                    C258 +
                (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                 C2178 * C141 + C2173 * C150) *
                    C253) *
                   C51170 +
               ((C2362 + C2363 + C2364) * C256 +
                (C2365 + C2366 + C2367) * C251 -
                (C2368 + C2369 + C2370) * C257 -
                (C2371 + C2372 + C2373) * C252 +
                (C2374 + C2375 + C2376) * C258 +
                (C2377 + C2378 + C2379) * C253) *
                   C51041) *
                  C51053 * C50953 * C51157 +
              (((C2370 + C2369 + C2368) * C257 -
                ((C2367 + C2366 + C2365) * C251 +
                 (C2364 + C2363 + C2362) * C256) +
                (C2373 + C2372 + C2371) * C252 -
                (C2376 + C2375 + C2374) * C258 -
                (C2379 + C2378 + C2377) * C253) *
                   C51170 +
               ((C2176 * C513 + C2171 * C518 + C2177 * C514 + C2172 * C519 +
                 C2178 * C515 + C2173 * C520) *
                    C257 -
                ((C2178 * C523 + C2173 * C529 + C2177 * C522 + C2172 * C528 +
                  C2176 * C521 + C2171 * C527) *
                     C251 +
                 (C2178 * C514 + C2173 * C519 + C2177 * C513 + C2172 * C518 +
                  C2176 * C512 + C2171 * C517) *
                     C256) +
                (C2176 * C522 + C2171 * C528 + C2177 * C523 + C2172 * C529 +
                 C2178 * C524 + C2173 * C530) *
                    C252 -
                (C2178 * C516 + C2173 * C525 + C2177 * C515 + C2172 * C520 +
                 C2176 * C514 + C2171 * C519) *
                    C258 -
                (C2178 * C526 + C2173 * C531 + C2177 * C524 + C2172 * C530 +
                 C2176 * C523 + C2171 * C529) *
                    C253) *
                   C51041) *
                  C51053 * C50953 * C50941) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C603 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C50882) *
                   C51170 +
               ((C2362 + C2363 + C2364) * C603 +
                (C2365 + C2366 + C2367) * C50882) *
                   C51041) *
                  C51053 * C50953 * C599 -
              (((C2699 + C2700 + C2701) * C50882 +
                (C2702 + C2703 + C2704) * C603) *
                   C51041 +
               ((C2367 + C2366 + C2365) * C50882 +
                (C2364 + C2363 + C2362) * C603) *
                   C51170) *
                  C51053 * C50953 * C600 +
              (((C2704 + C2703 + C2702) * C603 +
                (C2701 + C2700 + C2699) * C50882) *
                   C51170 +
               ((C2830 + C2831 + C2832) * C603 +
                (C2833 + C2834 + C2835) * C50882) *
                   C51041) *
                  C51053 * C50953 * C601 -
              (((C2178 * C2808 + C2173 * C2814 + C2177 * C2809 + C2172 * C2815 +
                 C2176 * C2810 + C2171 * C2816) *
                    C50882 +
                (C2178 * C2805 + C2173 * C2811 + C2177 * C2806 + C2172 * C2812 +
                 C2176 * C2807 + C2171 * C2813) *
                    C603) *
                   C51041 +
               ((C2835 + C2834 + C2833) * C50882 +
                (C2832 + C2831 + C2830) * C603) *
                   C51170) *
                  C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C848 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C849 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
              C2178 * C853 + C2173 * C858) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
              C2178 * C862 + C2173 * C868) *
                 C50882) *
                C51170 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51041) *
               C51053 * C850) *
              C51157 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C849 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C848 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51041 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51170) *
               C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C50953 * C51157 +
          ((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C10644 +
           (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C10645 +
           (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C10646 +
           ((C10648 * C2806 + C50863 * C2812) * C257 -
            ((C10648 * C2810 + C50863 * C2816) * C251 +
             (C10648 * C2807 + C50863 * C2813) * C256) +
            (C10648 * C2809 + C50863 * C2815) * C252 -
            (C10648 * C2805 + C50863 * C2811) * C258 -
            (C10648 * C2808 + C50863 * C2814) * C253) *
               C10647) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C10644 +
           (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
              C51053 * C50953 * C599 -
          (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
           (C11121 + C11120) * C10644) *
              C51053 * C50953 * C600 +
          (C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
           (C11138 + C11139) * C10647) *
              C51053 * C50953 * C601 -
          (((C10648 * C11116 + C50863 * C11118) * C50882 +
            (C10648 * C11115 + C50863 * C11117) * C603) *
               C10647 +
           (C11139 + C11138) * C10646 + C11134 * C10645 + C11135 * C10644) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C848 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C849 +
           (((C10648 * C851 + C50863 * C856) * C603 +
             (C10648 * C860 + C50863 * C866) * C50882) *
                C10644 +
            (C11494 + C11495) * C10645 + (C11496 + C11497) * C10646 +
            (C11498 + C11499) * C10647) *
               C51053 * C850) *
              C51157 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C849 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C848 -
           (((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C10647 +
            (C11499 + C11498) * C10646 + (C11497 + C11496) * C10645 +
            (C11495 + C11494) * C10644) *
               C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51170 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C15545 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51170 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C15546 +
           ((C13640 * C256 + C13639 * C251 - C13638 * C257 - C13641 * C252 +
             (C10648 * C853 + C50863 * C858) * C258 +
             (C10648 * C862 + C50863 * C868) * C253) *
                C51170 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C15547) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C51170 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C51041) *
               C15545 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51170 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C51041) *
               C15546 +
           ((C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51170 +
            (C13644 * C257 - (C11491 * C251 + C11490 * C256) + C13645 * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C51041) *
               C15547) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51170 +
            (C11120 + C11121) * C51041) *
               C15545 +
           ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
           ((C13802 + C13801) * C51170 + C13803 * C51041) * C15547) *
              C50953 * C599 -
          ((C13465 * C51041 + C13800 * C51170) * C15547 +
           (C11275 * C51041 + C13466 * C51170) * C15546 +
           ((C11123 + C11122) * C51041 + (C11121 + C11120) * C51170) * C15545) *
              C50953 * C600 +
          ((C11132 * C51170 + C11133 * C51041) * C15545 +
           (C13315 * C51170 + C13467 * C51041) * C15546 +
           (C13804 * C51170 + (C11498 + C11499) * C51041) * C15547) *
              C50953 * C601 -
          ((((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C51041 +
            (C11499 + C11498) * C51170) *
               C15547 +
           ((C11273 + C11272) * C51041 + C11274 * C51170) * C15546 +
           (C11134 * C51041 + C11135 * C51170) * C15545) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51170 +
             (C11120 + C11121) * C51041) *
                C15545 +
            ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
            C19398 * C15547) *
               C848 -
           ((C19386 * C51041 + (C13934 + C13933) * C51170) * C15547 +
            (C13800 * C51041 + (C13801 + C13802) * C51170) * C15546 +
            (C13466 * C51041 + (C13463 + C13462) * C51170) * C15545) *
               C849 +
           (C19398 * C15545 +
            ((C13933 + C13934) * C51170 + C19387 * C51041) * C15546 +
            (((C10648 * C6201 + C50863 * C6207) * C603 +
              (C10648 * C6204 + C50863 * C6210) * C50882) *
                 C51170 +
             (C19399 + C19400) * C51041) *
                C15547) *
               C850) *
              C51157 +
          (((C13464 * C51170 + C13315 * C51041) * C15545 +
            (C13803 * C51170 + C13804 * C51041) * C15546 +
            (C19387 * C51170 + (C13819 + C13820) * C51041) * C15547) *
               C849 -
           (C19397 * C15547 + (C11275 * C51041 + C13466 * C51170) * C15546 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C51170) *
                C15545) *
               C848 -
           ((((C10648 * C13920 + C50863 * C13924) * C50882 +
              (C10648 * C13918 + C50863 * C13921) * C603) *
                 C51041 +
             (C19400 + C19399) * C51170) *
                C15547 +
            ((C13820 + C13819) * C51041 + C19386 * C51170) * C15546 +
            C19397 * C15545) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C256 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C251 -
                (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                 C2176 * C126 + C2171 * C133) *
                    C257 -
                (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                 C2176 * C137 + C2171 * C147) *
                    C252 +
                (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                 C2178 * C129 + C2173 * C140) *
                    C258 +
                (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                 C2178 * C141 + C2173 * C150) *
                    C253) *
                   C51170 +
               ((C2362 + C2363 + C2364) * C256 +
                (C2365 + C2366 + C2367) * C251 -
                (C2368 + C2369 + C2370) * C257 -
                (C2371 + C2372 + C2373) * C252 +
                (C2374 + C2375 + C2376) * C258 +
                (C2377 + C2378 + C2379) * C253) *
                   C51041) *
                  C51053 * C51158 +
              (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
                 C2178 * C385 + C2173 * C391) *
                    C257 -
                ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
                  C2176 * C396 + C2171 * C404) *
                     C251 +
                 (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
                  C2176 * C387 + C2171 * C397) *
                     C256) +
                (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
                 C2178 * C393 + C2173 * C401) *
                    C252 -
                (C2178 * C386 + C2173 * C392 + C2177 * C385 + C2172 * C391 +
                 C2176 * C384 + C2171 * C390) *
                    C258 -
                (C2178 * C398 + C2173 * C405 + C2177 * C393 + C2172 * C401 +
                 C2176 * C394 + C2171 * C402) *
                    C253) *
                   C51170 +
               ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C2172 * C728 +
                 C2178 * C721 + C2173 * C729) *
                    C257 -
                ((C2178 * C732 + C2173 * C744 + C2177 * C731 + C2172 * C743 +
                  C2176 * C730 + C2171 * C742) *
                     C251 +
                 (C2178 * C720 + C2173 * C728 + C2177 * C719 + C2172 * C727 +
                  C2176 * C718 + C2171 * C726) *
                     C256) +
                (C2176 * C731 + C2171 * C743 + C2177 * C732 + C2172 * C744 +
                 C2178 * C733 + C2173 * C745) *
                    C252 -
                (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
                 C2176 * C720 + C2171 * C728) *
                    C258 -
                (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
                 C2176 * C732 + C2171 * C744) *
                    C253) *
                   C51041) *
                  C51053 * C50965) *
             C50927 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                  C2178 * C127 + C2173 * C134) *
                     C603 +
                 (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                  C2178 * C138 + C2173 * C148) *
                     C50882) *
                    C51170 +
                ((C2362 + C2363 + C2364) * C603 +
                 (C2365 + C2366 + C2367) * C50882) *
                    C51041) *
                   C51053 * C51158 -
               (((C3018 + C3019 + C3020) * C50882 +
                 (C3021 + C3022 + C3023) * C603) *
                    C51041 +
                ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
                  C2176 * C396 + C2171 * C404) *
                     C50882 +
                 (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
                  C2176 * C387 + C2171 * C397) *
                     C603) *
                    C51170) *
                   C51053 * C50965) *
                  C507 +
              ((((C3023 + C3022 + C3021) * C603 +
                 (C3020 + C3019 + C3018) * C50882) *
                    C51170 +
                ((C3024 + C3025 + C3026) * C603 +
                 (C3027 + C3028 + C3029) * C50882) *
                    C51041) *
                   C51053 * C50965 -
               (((C2699 + C2700 + C2701) * C50882 +
                 (C2702 + C2703 + C2704) * C603) *
                    C51041 +
                ((C2367 + C2366 + C2365) * C50882 +
                 (C2364 + C2363 + C2362) * C603) *
                    C51170) *
                   C51053 * C51158) *
                  C508 +
              ((((C2704 + C2703 + C2702) * C603 +
                 (C2701 + C2700 + C2699) * C50882) *
                    C51170 +
                ((C2830 + C2831 + C2832) * C603 +
                 (C2833 + C2834 + C2835) * C50882) *
                    C51041) *
                   C51053 * C51158 -
               (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 +
                  C2172 * C2991 + C2176 * C2986 + C2171 * C2992) *
                     C50882 +
                 (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 +
                  C2172 * C2988 + C2176 * C2983 + C2171 * C2989) *
                     C603) *
                    C51041 +
                ((C3029 + C3028 + C3027) * C50882 +
                 (C3026 + C3025 + C3024) * C603) *
                    C51170) *
                   C51053 * C50965) *
                  C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51170 +
           ((C2362 + C2363 + C2364) * C603 + (C2365 + C2366 + C2367) * C50882) *
               C51041) *
              C51053 * C1051 -
          (((C3018 + C3019 + C3020) * C50882 + (C3021 + C3022 + C3023) * C603) *
               C51041 +
           ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
             C2176 * C396 + C2171 * C404) *
                C50882 +
            (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
             C2176 * C387 + C2171 * C397) *
                C603) *
               C51170) *
              C51053 * C1052 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
             C2178 * C853 + C2173 * C858) *
                C603 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
             C2178 * C862 + C2173 * C868) *
                C50882) *
               C51170 +
           ((C3346 + C3347 + C3348) * C603 + (C3349 + C3350 + C3351) * C50882) *
               C51041) *
              C51053 * C1053 -
          (((C2178 * C3452 + C2173 * C3458 + C2177 * C3453 + C2172 * C3459 +
             C2176 * C3454 + C2171 * C3460) *
                C50882 +
            (C2178 * C3449 + C2173 * C3455 + C2177 * C3450 + C2172 * C3456 +
             C2176 * C3451 + C2171 * C3457) *
                C603) *
               C51041 +
           ((C2178 * C1060 + C2173 * C1068 + C2177 * C1061 + C2172 * C1069 +
             C2176 * C1062 + C2171 * C1070) *
                C50882 +
            (C2178 * C1056 + C2173 * C1064 + C2177 * C1057 + C2172 * C1065 +
             C2176 * C1058 + C2171 * C1066) *
                C603) *
               C51170) *
              C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C51158 +
          (((C10648 * C383 + C50863 * C389) * C257 -
            ((C10648 * C396 + C50863 * C404) * C251 +
             (C10648 * C387 + C50863 * C397) * C256) +
            (C10648 * C395 + C50863 * C403) * C252 -
            (C10648 * C384 + C50863 * C390) * C258 -
            (C10648 * C394 + C50863 * C402) * C253) *
               C10644 +
           ((C10648 * C719 + C50863 * C727) * C257 -
            ((C10648 * C730 + C50863 * C742) * C251 +
             (C10648 * C718 + C50863 * C726) * C256) +
            (C10648 * C731 + C50863 * C743) * C252 -
            (C10648 * C720 + C50863 * C728) * C258 -
            (C10648 * C732 + C50863 * C744) * C253) *
               C10645 +
           ((C10648 * C724 + C50863 * C740) * C257 -
            ((C10648 * C737 + C50863 * C749) * C251 +
             (C10648 * C725 + C50863 * C741) * C256) +
            (C10648 * C736 + C50863 * C748) * C252 -
            (C10648 * C723 + C50863 * C739) * C258 -
            (C10648 * C735 + C50863 * C747) * C253) *
               C10646 +
           ((C10648 * C2982 + C50863 * C2988) * C257 -
            ((C10648 * C2986 + C50863 * C2992) * C251 +
             (C10648 * C2983 + C50863 * C2989) * C256) +
            (C10648 * C2985 + C50863 * C2991) * C252 -
            (C10648 * C2981 + C50863 * C2987) * C258 -
            (C10648 * C2984 + C50863 * C2990) * C253) *
               C10647) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C51158 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C50965) *
              C507 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C50965 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C51158) *
              C508 +
          ((C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
            (C11138 + C11139) * C10647) *
               C51053 * C51158 -
           (((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C10647 +
            (C11273 + C11272) * C10646 + C11274 * C10645 + C11275 * C10644) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C10644 +
           (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
              C51053 * C1051 -
          (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
           ((C10648 * C396 + C50863 * C404) * C50882 +
            (C10648 * C387 + C50863 * C397) * C603) *
               C10644) *
              C51053 * C1052 +
          (((C10648 * C851 + C50863 * C856) * C603 +
            (C10648 * C860 + C50863 * C866) * C50882) *
               C10644 +
           (C11494 + C11495) * C10645 + (C11496 + C11497) * C10646 +
           (C11498 + C11499) * C10647) *
              C51053 * C1053 -
          (((C10648 * C11566 + C50863 * C11568) * C50882 +
            (C10648 * C11565 + C50863 * C11567) * C603) *
               C10647 +
           ((C10648 * C9083 + C50863 * C9087) * C50882 +
            (C10648 * C9081 + C50863 * C9085) * C603) *
               C10646 +
           ((C10648 * C3454 + C50863 * C3460) * C50882 +
            (C10648 * C3451 + C50863 * C3457) * C603) *
               C10645 +
           ((C10648 * C1062 + C50863 * C1070) * C50882 +
            (C10648 * C1058 + C50863 * C1066) * C603) *
               C10644) *
              C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51170 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C15545 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51170 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C15546 +
           ((C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C51170 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C15547) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C51170 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51041) *
               C15545 +
           ((C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C51170 +
            (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51041) *
               C15546 +
           (((C10648 * C1057 + C50863 * C1065) * C257 -
             (C13932 * C251 + C13931 * C256) +
             (C10648 * C1061 + C50863 * C1069) * C252 -
             (C10648 * C1056 + C50863 * C1064) * C258 -
             (C10648 * C1060 + C50863 * C1068) * C253) *
                C51170 +
            ((C10648 * C3450 + C50863 * C3456) * C257 -
             (C13814 * C251 + C13813 * C256) +
             (C10648 * C3453 + C50863 * C3459) * C252 -
             (C10648 * C3449 + C50863 * C3455) * C258 -
             (C10648 * C3452 + C50863 * C3458) * C253) *
                C51041) *
               C15547) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51170 +
             (C11120 + C11121) * C51041) *
                C15545 +
            ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
            ((C13802 + C13801) * C51170 + C13803 * C51041) * C15547) *
               C51158 -
           (((C13818 + C13817) * C51041 + (C13934 + C13933) * C51170) * C15547 +
            (C13800 * C51041 + (C13801 + C13802) * C51170) * C15546 +
            (C13466 * C51041 + (C13463 + C13462) * C51170) * C15545) *
               C50965) *
              C507 +
          (((C13464 * C51170 + C13315 * C51041) * C15545 +
            (C13803 * C51170 + C13804 * C51041) * C15546 +
            ((C13817 + C13818) * C51170 + (C13819 + C13820) * C51041) *
                C15547) *
               C50965 -
           ((C13465 * C51041 + C13800 * C51170) * C15547 +
            (C11275 * C51041 + C13466 * C51170) * C15546 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C51170) *
                C15545) *
               C51158) *
              C508 +
          (((C11132 * C51170 + C11133 * C51041) * C15545 +
            (C13315 * C51170 + C13467 * C51041) * C15546 +
            (C13804 * C51170 + (C11498 + C11499) * C51041) * C15547) *
               C51158 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C51041 +
             (C13820 + C13819) * C51170) *
                C15547 +
            ((C11499 + C11498) * C51041 + C13465 * C51170) * C15546 +
            (C11274 * C51041 + C11275 * C51170) * C15545) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51170 +
            (C11120 + C11121) * C51041) *
               C15545 +
           ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
           C19398 * C15547) *
              C1051 -
          (C19512 * C15547 +
           (C13800 * C51041 + (C13801 + C13802) * C51170) * C15546 +
           (C13466 * C51041 + (C13463 + C13462) * C51170) * C15545) *
              C1052 +
          (C19398 * C15545 +
           ((C13933 + C13934) * C51170 + C19387 * C51041) * C15546 +
           ((C19513 + C19514) * C51170 + (C19399 + C19400) * C51041) * C15547) *
              C1053 -
          ((((C10648 * C19499 + C50863 * C19501) * C50882 +
             (C10648 * C19498 + C50863 * C19500) * C603) *
                C51041 +
            ((C10648 * C16757 + C50863 * C16761) * C50882 +
             (C10648 * C16755 + C50863 * C16759) * C603) *
                C51170) *
               C15547 +
           ((C19400 + C19399) * C51041 + (C19514 + C19513) * C51170) * C15546 +
           C19512 * C15545) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1174 +
            (C10648 * C136 + C50863 * C146) * C51201 -
            (C10648 * C126 + C50863 * C133) * C1175 -
            (C10648 * C137 + C50863 * C147) * C51187 +
            (C10648 * C127 + C50863 * C134) * C1176 +
            (C10648 * C138 + C50863 * C148) * C1171) *
               C10644 +
           (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C10645 +
           (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C10646 +
           (C11680 + C11681 - C11682 - C11683 + C11684 + C11685) * C10647) *
              C51053 * C1514 +
          (((C10648 * C383 + C50863 * C389) * C1175 -
            ((C10648 * C396 + C50863 * C404) * C51201 +
             (C10648 * C387 + C50863 * C397) * C1174) +
            (C10648 * C395 + C50863 * C403) * C51187 -
            (C10648 * C384 + C50863 * C390) * C1176 -
            (C10648 * C394 + C50863 * C402) * C1171) *
               C10644 +
           (C11954 * C1175 - (C11262 * C51201 + C11263 * C1174) +
            C11955 * C51187 - (C10648 * C720 + C50863 * C728) * C1176 -
            (C10648 * C732 + C50863 * C744) * C1171) *
               C10645 +
           (C11956 * C1175 - (C11260 * C51201 + C11261 * C1174) +
            C11957 * C51187 - (C10648 * C723 + C50863 * C739) * C1176 -
            (C10648 * C735 + C50863 * C747) * C1171) *
               C10646 +
           (C11958 * C1175 - (C11258 * C51201 + C11259 * C1174) +
            C11959 * C51187 - (C10648 * C2981 + C50863 * C2987) * C1176 -
            (C10648 * C2984 + C50863 * C2990) * C1171) *
               C10647) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1174 + (C2365 + C2366 + C2367) * C51201 -
            (C2368 + C2369 + C2370) * C1175 - (C2371 + C2372 + C2373) * C51187 +
            (C2374 + C2375 + C2376) * C1176 + (C2377 + C2378 + C2379) * C1171) *
               C51041) *
              C51053 * C1514 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C1175 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C51201 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C1174) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C51187 -
            (C2178 * C386 + C2173 * C392 + C2177 * C385 + C2172 * C391 +
             C2176 * C384 + C2171 * C390) *
                C1176 -
            (C2178 * C398 + C2173 * C405 + C2177 * C393 + C2172 * C401 +
             C2176 * C394 + C2171 * C402) *
                C1171) *
               C51170 +
           ((C3960 + C3961 + C3962) * C1175 -
            ((C3018 + C3019 + C3020) * C51201 +
             (C3021 + C3022 + C3023) * C1174) +
            (C3963 + C3964 + C3965) * C51187 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C1176 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C1171) *
               C51041) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C51170 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C51041) *
               C15545 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C51170 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C51041) *
               C15546 +
           ((C20163 + C20164 - C20165 - C20166 + C20167 + C20168) * C51170 +
            (C19661 + C19662 - C19663 - C19664 + C19665 + C19666) * C51041) *
               C15547) *
              C1514 +
          (((C14605 - (C14604 + C14603) + C14606 - C14607 - C14608) * C51170 +
            (C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C51041) *
               C15545 +
           ((C20165 - (C20164 + C20163) + C20166 - C20167 - C20168) * C51170 +
            (C19663 - (C19662 + C19661) + C19664 - C19665 - C19666) * C51041) *
               C15546 +
           ((C19225 * C1175 - (C13932 * C51201 + C13931 * C1174) +
             C19226 * C51187 - (C10648 * C1056 + C50863 * C1064) * C1176 -
             (C10648 * C1060 + C50863 * C1068) * C1171) *
                C51170 +
            (C19227 * C1175 - (C13814 * C51201 + C13813 * C1174) +
             C19228 * C51187 - (C10648 * C3449 + C50863 * C3455) * C1176 -
             (C10648 * C3452 + C50863 * C3458) * C1171) *
                C51041) *
               C15547) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C10644 +
            (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
            C11805 * C10647) *
               C51053 * C1514 +
           (((C10648 * C383 + C50863 * C389) * C1281 -
             ((C10648 * C396 + C50863 * C404) * C1275 +
              (C10648 * C387 + C50863 * C397) * C1280) +
             (C10648 * C395 + C50863 * C403) * C50887) *
                C10644 +
            (C11960 - (C11938 + C11939) + C11961) * C10645 +
            (C11962 - (C11944 + C11945) + C11963) * C10646 +
            (C11964 - (C11950 + C11951) + C11965) * C10647) *
               C51053 * C50965) *
              C51157 +
          (((C11786 - (C11785 + C11784) + C11787) * C10644 +
            (C11790 - (C11789 + C11788) + C11791) * C10645 +
            (C11794 - (C11793 + C11792) + C11795) * C10646 +
            (C11796 - (C11797 + C11798) + C11799) * C10647) *
               C51053 * C1514 +
           ((C11939 + C11938 - C11960 - C11961) * C10644 +
            (C11945 + C11944 - C11962 - C11963) * C10645 +
            (C11951 + C11950 - C11964 - C11965) * C10646 +
            (C11264 * C1280 + C11265 * C1275 -
             (C10648 * C8609 + C50863 * C8613) * C1281 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C10647) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51170 +
            ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
             (C2368 + C2369 + C2370) * C1281 -
             (C2371 + C2372 + C2373) * C50887) *
                C51041) *
               C51053 * C1514 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
              C2178 * C385 + C2173 * C391) *
                 C1281 -
             ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
               C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
               C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
              C2178 * C393 + C2173 * C401) *
                 C50887) *
                C51170 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51041) *
               C51053 * C50965) *
              C51157 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51170 +
            ((C2696 + C2697 + C2698) * C1281 -
             ((C2699 + C2700 + C2701) * C1275 +
              (C2702 + C2703 + C2704) * C1280) +
             (C2705 + C2706 + C2707) * C50887) *
                C51041) *
               C51053 * C1514 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51170 +
            ((C3024 + C3025 + C3026) * C1280 + (C3027 + C3028 + C3029) * C1275 -
             (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
              C2176 * C724 + C2171 * C740) *
                 C1281 -
             (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
              C2176 * C736 + C2171 * C748) *
                 C50887) *
                C51041) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C51170 +
             (C11784 + C11785 - C11786 - C11787) * C51041) *
                C15545 +
            ((C14436 + C14437 - C14438 - C14439) * C51170 + C14454 * C51041) *
                C15546 +
            ((C14951 + C14950 - C14949 - C14952) * C51170 + C20015 * C51041) *
                C15547) *
               C1514 +
           (((C14438 - (C14437 + C14436) + C14439) * C51170 + C14455 * C51041) *
                C15545 +
            ((C14949 - (C14950 + C14951) + C14952) * C51170 + C20016 * C51041) *
                C15546 +
            ((C19225 * C1281 - (C13932 * C1275 + C13931 * C1280) +
              C19226 * C50887) *
                 C51170 +
             (C20009 - (C20010 + C20011) + C20012) * C51041) *
                C15547) *
               C50965) *
              C51157 +
          ((((C11786 - (C11785 + C11784) + C11787) * C51170 +
             (C11790 - (C11789 + C11788) + C11791) * C51041) *
                C15545 +
            (C14455 * C51170 + C14456 * C51041) * C15546 +
            (C20016 * C51170 + (C14447 - (C14448 + C14449) + C14450) * C51041) *
                C15547) *
               C1514 +
           ((C14454 * C51170 + C14241 * C51041) * C15545 +
            (C20015 * C51170 + (C14449 + C14448 - C14447 - C14450) * C51041) *
                C15546 +
            ((C20011 + C20010 - C20009 - C20012) * C51170 +
             (C13815 * C1280 + C13816 * C1275 -
              (C10648 * C9080 + C50863 * C9084) * C1281 -
              (C10648 * C9082 + C50863 * C9086) * C50887) *
                 C51041) *
                C15547) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1280 +
            (C10648 * C136 + C50863 * C146) * C1275 -
            (C10648 * C126 + C50863 * C133) * C1281 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C10644 +
           (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
           C11805 * C10647) *
              C51053 * C51203 +
          (((C10648 * C383 + C50863 * C389) * C1281 -
            ((C10648 * C396 + C50863 * C404) * C1275 +
             (C10648 * C387 + C50863 * C397) * C1280) +
            (C10648 * C395 + C50863 * C403) * C50887) *
               C10644 +
           (C11960 - (C11938 + C11939) + C11961) * C10645 +
           (C11962 - (C11944 + C11945) + C11963) * C10646 +
           (C11964 - (C11950 + C11951) + C11965) * C10647) *
              C51053 * C51193 +
          (((C10648 * C851 + C50863 * C856) * C1280 +
            (C10648 * C860 + C50863 * C866) * C1275 -
            (C10648 * C852 + C50863 * C857) * C1281 -
            (C10648 * C861 + C50863 * C867) * C50887) *
               C10644 +
           (C11488 * C1280 + C11489 * C1275 -
            (C10648 * C971 + C50863 * C979) * C1281 -
            (C10648 * C975 + C50863 * C983) * C50887) *
               C10645 +
           (C11490 * C1280 + C11491 * C1275 -
            (C10648 * C3322 + C50863 * C3328) * C1281 -
            (C10648 * C3325 + C50863 * C3331) * C50887) *
               C10646 +
           (C11492 * C1280 + C11493 * C1275 -
            (C10648 * C8950 + C50863 * C8954) * C1281 -
            (C10648 * C8952 + C50863 * C8956) * C50887) *
               C10647) *
              C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
            (C2368 + C2369 + C2370) * C1281 -
            (C2371 + C2372 + C2373) * C50887) *
               C51041) *
              C51053 * C51203 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C1281 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C1275 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C1280) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C50887) *
               C51170 +
           ((C3960 + C3961 + C3962) * C1281 -
            ((C3018 + C3019 + C3020) * C1275 +
             (C3021 + C3022 + C3023) * C1280) +
            (C3963 + C3964 + C3965) * C50887) *
               C51041) *
              C51053 * C51193 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
             C2178 * C853 + C2173 * C858) *
                C1280 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
             C2178 * C862 + C2173 * C868) *
                C1275 -
            (C2178 * C854 + C2173 * C859 + C2177 * C853 + C2172 * C858 +
             C2176 * C852 + C2171 * C857) *
                C1281 -
            (C2178 * C863 + C2173 * C869 + C2177 * C862 + C2172 * C868 +
             C2176 * C861 + C2171 * C867) *
                C50887) *
               C51170 +
           ((C3346 + C3347 + C3348) * C1280 + (C3349 + C3350 + C3351) * C1275 -
            (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
             C2176 * C971 + C2171 * C979) *
                C1281 -
            (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
             C2176 * C975 + C2171 * C983) *
                C50887) *
               C51041) *
              C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51170 +
            (C11784 + C11785 - C11786 - C11787) * C51041) *
               C15545 +
           ((C14436 + C14437 - C14438 - C14439) * C51170 + C14454 * C51041) *
               C15546 +
           C20518 * C15547) *
              C51203 +
          (((C14438 - (C14437 + C14436) + C14439) * C51170 + C14455 * C51041) *
               C15545 +
           ((C14949 - (C14950 + C14951) + C14952) * C51170 + C20016 * C51041) *
               C15546 +
           ((C20511 - (C20512 + C20513) + C20514) * C51170 +
            (C20009 - (C20010 + C20011) + C20012) * C51041) *
               C15547) *
              C51193 +
          (C20518 * C15545 +
           ((C20513 + C20512 - C20511 - C20514) * C51170 +
            (C20011 + C20010 - C20009 - C20012) * C51041) *
               C15546 +
           ((C19510 * C1280 + C19511 * C1275 -
             (C10648 * C6200 + C50863 * C6206) * C1281 -
             (C10648 * C6203 + C50863 * C6209) * C50887) *
                C51170 +
            (C19395 * C1280 + C19396 * C1275 -
             (C10648 * C16630 + C50863 * C16632) * C1281 -
             (C10648 * C16631 + C50863 * C16633) * C50887) *
                C51041) *
               C15547) *
              C1746) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51149 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51170 +
           ((C2362 + C2363 + C2364) * C50007 +
            (C2365 + C2366 + C2367) * C51149 -
            (C2368 + C2369 + C2370) * C50000 -
            (C2371 + C2372 + C2373) * C50887) *
               C51041) *
              C51053 * C50953 * C507 +
          (((C2370 + C2369 + C2368) * C50000 -
            ((C2367 + C2366 + C2365) * C51149 +
             (C2364 + C2363 + C2362) * C50007) +
            (C2373 + C2372 + C2371) * C50887) *
               C51170 +
           ((C2696 + C2697 + C2698) * C50000 -
            ((C2699 + C2700 + C2701) * C51149 +
             (C2702 + C2703 + C2704) * C50007) +
            (C2705 + C2706 + C2707) * C50887) *
               C51041) *
              C51053 * C50953 * C508 +
          (((C2704 + C2703 + C2702) * C50007 +
            (C2701 + C2700 + C2699) * C51149 -
            (C2698 + C2697 + C2696) * C50000 -
            (C2707 + C2706 + C2705) * C50887) *
               C51170 +
           ((C2176 * C607 + C2171 * C615 + C2177 * C606 + C2172 * C614 +
             C2178 * C605 + C2173 * C613) *
                C50007 +
            (C2176 * C611 + C2171 * C619 + C2177 * C610 + C2172 * C618 +
             C2178 * C609 + C2173 * C617) *
                C51149 -
            (C2178 * C604 + C2173 * C612 + C2177 * C605 + C2172 * C613 +
             C2176 * C606 + C2171 * C614) *
                C50000 -
            (C2178 * C608 + C2173 * C616 + C2177 * C609 + C2172 * C617 +
             C2176 * C610 + C2171 * C618) *
                C50887) *
               C51041) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
            C2178 * C127 + C2173 * C134) *
               C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
            C2178 * C138 + C2173 * C148) *
               C109 -
           (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
            C2176 * C126 + C2171 * C133) *
               C122 -
           (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
            C2176 * C137 + C2171 * C147) *
               C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
            C2178 * C129 + C2173 * C140) *
               C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
            C2178 * C141 + C2173 * C150) *
               C111 -
           (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
            C2176 * C128 + C2171 * C135) *
               C124 -
           (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
            C2176 * C139 + C2171 * C149) *
               C112) *
              C51170 +
          ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C2172 * C265 +
            C2178 * C260 + C2173 * C266) *
               C121 +
           (C2176 * C272 + C2171 * C280 + C2177 * C271 + C2172 * C279 +
            C2178 * C270 + C2173 * C278) *
               C109 -
           (C2178 * C261 + C2173 * C267 + C2177 * C260 + C2172 * C266 +
            C2176 * C259 + C2171 * C265) *
               C122 -
           (C2178 * C269 + C2173 * C277 + C2177 * C270 + C2172 * C278 +
            C2176 * C271 + C2171 * C279) *
               C110 +
           (C2176 * C260 + C2171 * C266 + C2177 * C261 + C2172 * C267 +
            C2178 * C262 + C2173 * C268) *
               C123 +
           (C2176 * C270 + C2171 * C278 + C2177 * C269 + C2172 * C277 +
            C2178 * C274 + C2173 * C281) *
               C111 -
           (C2178 * C264 + C2173 * C275 + C2177 * C262 + C2172 * C268 +
            C2176 * C261 + C2171 * C267) *
               C124 -
           (C2178 * C276 + C2173 * C282 + C2177 * C274 + C2172 * C281 +
            C2176 * C269 + C2171 * C277) *
               C112) *
              C51041) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C10648 * C125 + C50863 * C132) * C121 +
           (C10648 * C136 + C50863 * C146) * C109 -
           (C10648 * C126 + C50863 * C133) * C122 -
           (C10648 * C137 + C50863 * C147) * C110 +
           (C10648 * C127 + C50863 * C134) * C123 +
           (C10648 * C138 + C50863 * C148) * C111 -
           (C10648 * C128 + C50863 * C135) * C124 -
           (C10648 * C139 + C50863 * C149) * C112) *
              C10644 +
          ((C10648 * C263 + C50863 * C273) * C121 +
           (C10648 * C272 + C50863 * C280) * C109 -
           (C10648 * C259 + C50863 * C265) * C122 -
           (C10648 * C271 + C50863 * C279) * C110 +
           (C10648 * C260 + C50863 * C266) * C123 +
           (C10648 * C270 + C50863 * C278) * C111 -
           (C10648 * C261 + C50863 * C267) * C124 -
           (C10648 * C269 + C50863 * C277) * C112) *
              C10645 +
          ((C10648 * C512 + C50863 * C517) * C121 +
           (C10648 * C521 + C50863 * C527) * C109 -
           (C10648 * C513 + C50863 * C518) * C122 -
           (C10648 * C522 + C50863 * C528) * C110 +
           (C10648 * C514 + C50863 * C519) * C123 +
           (C10648 * C523 + C50863 * C529) * C111 -
           (C10648 * C515 + C50863 * C520) * C124 -
           (C10648 * C524 + C50863 * C530) * C112) *
              C10646 +
          ((C10648 * C607 + C50863 * C615) * C121 +
           (C10648 * C611 + C50863 * C619) * C109 -
           (C10648 * C606 + C50863 * C614) * C122 -
           (C10648 * C610 + C50863 * C618) * C110 +
           (C10648 * C605 + C50863 * C613) * C123 +
           (C10648 * C609 + C50863 * C617) * C111 -
           (C10648 * C604 + C50863 * C612) * C124 -
           (C10648 * C608 + C50863 * C616) * C112) *
              C10647) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C50007 +
            (C10648 * C136 + C50863 * C146) * C51149 -
            (C10648 * C126 + C50863 * C133) * C50000 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C10644 +
           (C11016 + C11017 - C11018 - C11019) * C10645 + C11048 * C10646 +
           C11049 * C10647) *
              C51053 * C50953 * C507 +
          ((C11018 - (C11017 + C11016) + C11019) * C10644 +
           (C11022 - (C11021 + C11020) + C11023) * C10645 +
           (C11026 - (C11025 + C11024) + C11027) * C10646 +
           (C11044 - (C11045 + C11046) + C11047) * C10647) *
              C51053 * C50953 * C508 +
          (C11048 * C10644 + C11049 * C10645 +
           (C11046 + C11045 - C11044 - C11047) * C10646 +
           ((C10648 * C8436 + C50863 * C8440) * C50007 +
            (C10648 * C8438 + C50863 * C8442) * C51149 -
            (C10648 * C8435 + C50863 * C8439) * C50000 -
            (C10648 * C8437 + C50863 * C8441) * C50887) *
               C10647) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C51170 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C51041) *
              C15545 +
          ((C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
            C13060 * C123 + C13061 * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C51170 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            C12890 * C123 + C12891 * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C51041) *
              C15546 +
          ((C13640 * C121 + C13639 * C109 - C13638 * C122 - C13641 * C110 +
            (C10648 * C853 + C50863 * C858) * C123 +
            (C10648 * C862 + C50863 * C868) * C111 -
            (C10648 * C854 + C50863 * C859) * C124 -
            (C10648 * C863 + C50863 * C869) * C112) *
               C51170 +
           (C11488 * C121 + C11489 * C109 - C13642 * C122 - C13643 * C110 +
            (C10648 * C970 + C50863 * C978) * C123 +
            (C10648 * C974 + C50863 * C982) * C111 -
            (C10648 * C969 + C50863 * C977) * C124 -
            (C10648 * C973 + C50863 * C981) * C112) *
               C51041) *
              C15547) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51170 +
            (C11016 + C11017 - C11018 - C11019) * C51041) *
               C15545 +
           ((C13614 + C13615 - C13616 - C13617) * C51170 + C15153 * C51041) *
               C15546 +
           ((C13648 + C13647 - C13646 - C13649) * C51170 +
            (C13629 + C13628 - C13650 - C13651) * C51041) *
               C15547) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C51170 +
            (C11022 - (C11021 + C11020) + C11023) * C51041) *
               C15545 +
           (C15154 * C51170 + C15155 * C51041) * C15546 +
           ((C13650 - (C13628 + C13629) + C13651) * C51170 +
            (C13652 - (C13634 + C13635) + C13653) * C51041) *
               C15547) *
              C50953 * C508 +
          ((C11048 * C51170 + C11049 * C51041) * C15545 +
           (C13216 * C51170 + (C12432 + C12431 - C12430 - C12433) * C51041) *
               C15546 +
           ((C13635 + C13634 - C13652 - C13653) * C51170 +
            (C11492 * C50007 + C11493 * C51149 -
             (C10648 * C8950 + C50863 * C8954) * C50000 -
             (C10648 * C8952 + C50863 * C8956) * C50887) *
                C51041) *
               C15547) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51170 +
           ((C2362 + C2363 + C2364) * C603 + (C2365 + C2366 + C2367) * C50882) *
               C51041) *
              C51053 * C50953 * C599 -
          (((C2699 + C2700 + C2701) * C50882 + (C2702 + C2703 + C2704) * C603) *
               C51041 +
           ((C2367 + C2366 + C2365) * C50882 + (C2364 + C2363 + C2362) * C603) *
               C51170) *
              C51053 * C50953 * C600 +
          (((C2704 + C2703 + C2702) * C603 + (C2701 + C2700 + C2699) * C50882) *
               C51170 +
           ((C2830 + C2831 + C2832) * C603 + (C2833 + C2834 + C2835) * C50882) *
               C51041) *
              C51053 * C50953 * C601 -
          (((C2178 * C2808 + C2173 * C2814 + C2177 * C2809 + C2172 * C2815 +
             C2176 * C2810 + C2171 * C2816) *
                C50882 +
            (C2178 * C2805 + C2173 * C2811 + C2177 * C2806 + C2172 * C2812 +
             C2176 * C2807 + C2171 * C2813) *
                C603) *
               C51041 +
           ((C2835 + C2834 + C2833) * C50882 + (C2832 + C2831 + C2830) * C603) *
               C51170) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51170 +
           ((C2362 + C2363 + C2364) * C256 + (C2365 + C2366 + C2367) * C251 -
            (C2368 + C2369 + C2370) * C257 - (C2371 + C2372 + C2373) * C252 +
            (C2374 + C2375 + C2376) * C258 + (C2377 + C2378 + C2379) * C253) *
               C51041) *
              C51053 * C50953 * C51157 +
          (((C2370 + C2369 + C2368) * C257 -
            ((C2367 + C2366 + C2365) * C251 + (C2364 + C2363 + C2362) * C256) +
            (C2373 + C2372 + C2371) * C252 - (C2376 + C2375 + C2374) * C258 -
            (C2379 + C2378 + C2377) * C253) *
               C51170 +
           ((C2176 * C513 + C2171 * C518 + C2177 * C514 + C2172 * C519 +
             C2178 * C515 + C2173 * C520) *
                C257 -
            ((C2178 * C523 + C2173 * C529 + C2177 * C522 + C2172 * C528 +
              C2176 * C521 + C2171 * C527) *
                 C251 +
             (C2178 * C514 + C2173 * C519 + C2177 * C513 + C2172 * C518 +
              C2176 * C512 + C2171 * C517) *
                 C256) +
            (C2176 * C522 + C2171 * C528 + C2177 * C523 + C2172 * C529 +
             C2178 * C524 + C2173 * C530) *
                C252 -
            (C2178 * C516 + C2173 * C525 + C2177 * C515 + C2172 * C520 +
             C2176 * C514 + C2171 * C519) *
                C258 -
            (C2178 * C526 + C2173 * C531 + C2177 * C524 + C2172 * C530 +
             C2176 * C523 + C2171 * C529) *
                C253) *
               C51041) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C50953 * C51157 +
          ((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C10644 +
           (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C10645 +
           (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C10646 +
           ((C10648 * C2806 + C50863 * C2812) * C257 -
            ((C10648 * C2810 + C50863 * C2816) * C251 +
             (C10648 * C2807 + C50863 * C2813) * C256) +
            (C10648 * C2809 + C50863 * C2815) * C252 -
            (C10648 * C2805 + C50863 * C2811) * C258 -
            (C10648 * C2808 + C50863 * C2814) * C253) *
               C10647) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C10644 +
           (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
              C51053 * C50953 * C599 -
          (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
           (C11121 + C11120) * C10644) *
              C51053 * C50953 * C600 +
          (C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
           (C11138 + C11139) * C10647) *
              C51053 * C50953 * C601 -
          (((C10648 * C11116 + C50863 * C11118) * C50882 +
            (C10648 * C11115 + C50863 * C11117) * C603) *
               C10647 +
           (C11139 + C11138) * C10646 + C11134 * C10645 + C11135 * C10644) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51170 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C15545 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51170 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C15546 +
           ((C13640 * C256 + C13639 * C251 - C13638 * C257 - C13641 * C252 +
             (C10648 * C853 + C50863 * C858) * C258 +
             (C10648 * C862 + C50863 * C868) * C253) *
                C51170 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C15547) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C51170 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C51041) *
               C15545 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51170 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C51041) *
               C15546 +
           ((C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51170 +
            (C13644 * C257 - (C11491 * C251 + C11490 * C256) + C13645 * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C51041) *
               C15547) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51170 +
            (C11120 + C11121) * C51041) *
               C15545 +
           ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
           ((C13802 + C13801) * C51170 + C13803 * C51041) * C15547) *
              C50953 * C599 -
          ((C13465 * C51041 + C13800 * C51170) * C15547 +
           (C11275 * C51041 + C13466 * C51170) * C15546 +
           ((C11123 + C11122) * C51041 + (C11121 + C11120) * C51170) * C15545) *
              C50953 * C600 +
          ((C11132 * C51170 + C11133 * C51041) * C15545 +
           (C13315 * C51170 + C13467 * C51041) * C15546 +
           (C13804 * C51170 + (C11498 + C11499) * C51041) * C15547) *
              C50953 * C601 -
          ((((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C51041 +
            (C11499 + C11498) * C51170) *
               C15547 +
           ((C11273 + C11272) * C51041 + C11274 * C51170) * C15546 +
           (C11134 * C51041 + C11135 * C51170) * C15545) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C51158 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C50965) *
              C507 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C50965 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C51158) *
              C508 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51170 +
            ((C2830 + C2831 + C2832) * C603 +
             (C2833 + C2834 + C2835) * C50882) *
                C51041) *
               C51053 * C51158 -
           (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
              C2176 * C2986 + C2171 * C2992) *
                 C50882 +
             (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
              C2176 * C2983 + C2171 * C2989) *
                 C603) *
                C51041 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51170) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51170 +
           ((C2362 + C2363 + C2364) * C256 + (C2365 + C2366 + C2367) * C251 -
            (C2368 + C2369 + C2370) * C257 - (C2371 + C2372 + C2373) * C252 +
            (C2374 + C2375 + C2376) * C258 + (C2377 + C2378 + C2379) * C253) *
               C51041) *
              C51053 * C51158 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C257 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C251 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C256) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C252 -
            (C2178 * C386 + C2173 * C392 + C2177 * C385 + C2172 * C391 +
             C2176 * C384 + C2171 * C390) *
                C258 -
            (C2178 * C398 + C2173 * C405 + C2177 * C393 + C2172 * C401 +
             C2176 * C394 + C2171 * C402) *
                C253) *
               C51170 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C2172 * C728 +
             C2178 * C721 + C2173 * C729) *
                C257 -
            ((C2178 * C732 + C2173 * C744 + C2177 * C731 + C2172 * C743 +
              C2176 * C730 + C2171 * C742) *
                 C251 +
             (C2178 * C720 + C2173 * C728 + C2177 * C719 + C2172 * C727 +
              C2176 * C718 + C2171 * C726) *
                 C256) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C2172 * C744 +
             C2178 * C733 + C2173 * C745) *
                C252 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C258 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C253) *
               C51041) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C51158 +
          (((C10648 * C383 + C50863 * C389) * C257 -
            ((C10648 * C396 + C50863 * C404) * C251 +
             (C10648 * C387 + C50863 * C397) * C256) +
            (C10648 * C395 + C50863 * C403) * C252 -
            (C10648 * C384 + C50863 * C390) * C258 -
            (C10648 * C394 + C50863 * C402) * C253) *
               C10644 +
           ((C10648 * C719 + C50863 * C727) * C257 -
            ((C10648 * C730 + C50863 * C742) * C251 +
             (C10648 * C718 + C50863 * C726) * C256) +
            (C10648 * C731 + C50863 * C743) * C252 -
            (C10648 * C720 + C50863 * C728) * C258 -
            (C10648 * C732 + C50863 * C744) * C253) *
               C10645 +
           ((C10648 * C724 + C50863 * C740) * C257 -
            ((C10648 * C737 + C50863 * C749) * C251 +
             (C10648 * C725 + C50863 * C741) * C256) +
            (C10648 * C736 + C50863 * C748) * C252 -
            (C10648 * C723 + C50863 * C739) * C258 -
            (C10648 * C735 + C50863 * C747) * C253) *
               C10646 +
           ((C10648 * C2982 + C50863 * C2988) * C257 -
            ((C10648 * C2986 + C50863 * C2992) * C251 +
             (C10648 * C2983 + C50863 * C2989) * C256) +
            (C10648 * C2985 + C50863 * C2991) * C252 -
            (C10648 * C2981 + C50863 * C2987) * C258 -
            (C10648 * C2984 + C50863 * C2990) * C253) *
               C10647) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C51158 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C50965) *
              C507 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C50965 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C51158) *
              C508 +
          ((C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
            (C11138 + C11139) * C10647) *
               C51053 * C51158 -
           (((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C10647 +
            (C11273 + C11272) * C10646 + C11274 * C10645 + C11275 * C10644) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C51170 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C51041) *
               C15545 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51170 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C51041) *
               C15546 +
           ((C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C51170 +
            (C18503 + C18504 - C18505 - C18506 + C18513 + C18514) * C51041) *
               C15547) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C51170 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51041) *
               C15545 +
           ((C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C51170 +
            (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51041) *
               C15546 +
           (((C10648 * C1057 + C50863 * C1065) * C257 -
             (C13932 * C251 + C13931 * C256) +
             (C10648 * C1061 + C50863 * C1069) * C252 -
             (C10648 * C1056 + C50863 * C1064) * C258 -
             (C10648 * C1060 + C50863 * C1068) * C253) *
                C51170 +
            ((C10648 * C3450 + C50863 * C3456) * C257 -
             (C13814 * C251 + C13813 * C256) +
             (C10648 * C3453 + C50863 * C3459) * C252 -
             (C10648 * C3449 + C50863 * C3455) * C258 -
             (C10648 * C3452 + C50863 * C3458) * C253) *
                C51041) *
               C15547) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C51170 +
             (C11120 + C11121) * C51041) *
                C15545 +
            ((C13462 + C13463) * C51170 + C13464 * C51041) * C15546 +
            ((C13802 + C13801) * C51170 + C13803 * C51041) * C15547) *
               C51158 -
           (((C13818 + C13817) * C51041 + (C13934 + C13933) * C51170) * C15547 +
            (C13800 * C51041 + (C13801 + C13802) * C51170) * C15546 +
            (C13466 * C51041 + (C13463 + C13462) * C51170) * C15545) *
               C50965) *
              C507 +
          (((C13464 * C51170 + C13315 * C51041) * C15545 +
            (C13803 * C51170 + C13804 * C51041) * C15546 +
            ((C13817 + C13818) * C51170 + (C13819 + C13820) * C51041) *
                C15547) *
               C50965 -
           ((C13465 * C51041 + C13800 * C51170) * C15547 +
            (C11275 * C51041 + C13466 * C51170) * C15546 +
            ((C11123 + C11122) * C51041 + (C11121 + C11120) * C51170) *
                C15545) *
               C51158) *
              C508 +
          (((C11132 * C51170 + C11133 * C51041) * C15545 +
            (C13315 * C51170 + C13467 * C51041) * C15546 +
            (C13804 * C51170 + (C11498 + C11499) * C51041) * C15547) *
               C51158 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C51041 +
             (C13820 + C13819) * C51170) *
                C15547 +
            ((C11499 + C11498) * C51041 + C13465 * C51170) * C15546 +
            (C11274 * C51041 + C11275 * C51170) * C15545) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C7787 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C7788 +
            (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C7789) *
               C51171 +
           ((C13056 * C1174 + C13057 * C51201 - C13058 * C1175 -
             C13059 * C51187 + C13060 * C1176 + C13061 * C1171) *
                C7787 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C7788 +
            (C14087 + C14088 - C14089 - C14090 + C14091 + C14092) * C7789) *
               C51065) *
              C50953 * C1172 +
          (((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C7787 +
            (C11676 - (C11675 + C11674) + C11677 - C11678 - C11679) * C7788 +
            (C11682 - (C11681 + C11680) + C11683 - C11684 - C11685) * C7789) *
               C51171 +
           ((C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C7787 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C7788 +
            (C11958 * C1175 - (C11258 * C51201 + C11259 * C1174) +
             C11959 * C51187 - (C10648 * C2981 + C50863 * C2987) * C1176 -
             (C10648 * C2984 + C50863 * C2990) * C1171) *
                C7789) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1174 + (C5369 + C5370 + C5371) * C51201 -
            (C5372 + C5373 + C5374) * C1175 - (C5375 + C5376 + C5377) * C51187 +
            (C5378 + C5379 + C5380) * C1176 + (C5381 + C5382 + C5383) * C1171) *
               C51027 * C51065) *
              C50953 * C1172 +
          (((C2370 + C2369 + C2368) * C1175 -
            ((C2367 + C2366 + C2365) * C51201 +
             (C2364 + C2363 + C2362) * C1174) +
            (C2373 + C2372 + C2371) * C51187 - (C2376 + C2375 + C2374) * C1176 -
            (C2379 + C2378 + C2377) * C1171) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C1175 -
            ((C3018 + C3019 + C3020) * C51201 +
             (C3021 + C3022 + C3023) * C1174) +
            (C3963 + C3964 + C3965) * C51187 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C1176 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C1171) *
               C51027 * C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1174 +
            (C10648 * C136 + C50863 * C146) * C51201 -
            (C10648 * C126 + C50863 * C133) * C1175 -
            (C10648 * C137 + C50863 * C147) * C51187 +
            (C10648 * C127 + C50863 * C134) * C1176 +
            (C10648 * C138 + C50863 * C148) * C1171) *
               C51027 * C21073 +
           (C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C51027 *
               C21074 +
           (C20163 + C20164 - C20165 - C20166 + C20167 + C20168) * C51027 *
               C21075 +
           (C13931 * C1174 + C13932 * C51201 - C19225 * C1175 -
            C19226 * C51187 + C21282 * C1176 + C21283 * C1171) *
               C51027 * C21076) *
              C50953 * C1172 +
          ((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C51027 *
               C21073 +
           (C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C51027 *
               C21074 +
           (C19663 - (C19662 + C19661) + C19664 - C19665 - C19666) * C51027 *
               C21075 +
           (C19227 * C1175 - (C13814 * C51201 + C13813 * C1174) +
            C19228 * C51187 - (C10648 * C3449 + C50863 * C3455) * C1176 -
            (C10648 * C3452 + C50863 * C3458) * C1171) *
               C51027 * C21076) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
               C51171 +
           ((C13056 * C1280 + C13057 * C1275 - C13058 * C1281 -
             C13059 * C50887) *
                C7787 +
            (C11939 + C11938 - C11960 - C11961) * C7788 + C14241 * C7789) *
               C51065) *
              C50953 * C51202 +
          (((C11786 - (C11785 + C11784) + C11787) * C7787 +
            (C11790 - (C11789 + C11788) + C11791) * C7788 +
            (C11794 - (C11793 + C11792) + C11795) * C7789) *
               C51171 +
           ((C11960 - (C11938 + C11939) + C11961) * C7787 +
            (C11962 - (C11944 + C11945) + C11963) * C7788 +
            (C11964 - (C11950 + C11951) + C11965) * C7789) *
               C51065) *
              C50953 * C51190 +
          ((C11804 * C7787 + C11805 * C7788 +
            (C11798 + C11797 - C11796 - C11799) * C7789) *
               C51171 +
           (C14241 * C7787 + (C11951 + C11950 - C11964 - C11965) * C7788 +
            (C11264 * C1280 + C11265 * C1275 -
             (C10648 * C8609 + C50863 * C8613) * C1281 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C7789) *
               C51065) *
              C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
            (C5372 + C5373 + C5374) * C1281 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C50953 * C51202 +
          (((C2370 + C2369 + C2368) * C1281 -
            ((C2367 + C2366 + C2365) * C1275 +
             (C2364 + C2363 + C2362) * C1280) +
            (C2373 + C2372 + C2371) * C50887) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C1281 -
            ((C3018 + C3019 + C3020) * C1275 +
             (C3021 + C3022 + C3023) * C1280) +
            (C3963 + C3964 + C3965) * C50887) *
               C51027 * C51065) *
              C50953 * C51190 +
          (((C2704 + C2703 + C2702) * C1280 + (C2701 + C2700 + C2699) * C1275 -
            (C2698 + C2697 + C2696) * C1281 -
            (C2707 + C2706 + C2705) * C50887) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C1280 + (C3027 + C3028 + C3029) * C1275 -
            (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
             C2176 * C724 + C2171 * C740) *
                C1281 -
            (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
             C2176 * C736 + C2171 * C748) *
                C50887) *
               C51027 * C51065) *
              C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1280 +
            (C10648 * C136 + C50863 * C146) * C1275 -
            (C10648 * C126 + C50863 * C133) * C1281 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C51027 * C21073 +
           (C14436 + C14437 - C14438 - C14439) * C51027 * C21074 +
           C20516 * C51027 * C21075 +
           (C20513 + C20512 - C20511 - C20514) * C51027 * C21076) *
              C50953 * C51202 +
          ((C11786 - (C11785 + C11784) + C11787) * C51027 * C21073 +
           C14455 * C51027 * C21074 + C20016 * C51027 * C21075 +
           (C20009 - (C20010 + C20011) + C20012) * C51027 * C21076) *
              C50953 * C51190 +
          (C11804 * C51027 * C21073 + C14241 * C51027 * C21074 +
           (C14449 + C14448 - C14447 - C14450) * C51027 * C21075 +
           (C13815 * C1280 + C13816 * C1275 -
            (C10648 * C9080 + C50863 * C9084) * C1281 -
            (C10648 * C9082 + C50863 * C9086) * C50887) *
               C51027 * C21076) *
              C50953 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C7787 +
             (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
                C51171 +
            ((C14436 + C14437 - C14438 - C14439) * C7787 + C14454 * C7788 +
             C14241 * C7789) *
                C51065) *
               C51158 +
           (((C14438 - (C14437 + C14436) + C14439) * C7787 + C14455 * C7788 +
             C14456 * C7789) *
                C51171 +
            ((C13638 * C1281 - (C13639 * C1275 + C13640 * C1280) +
              C13641 * C50887) *
                 C7787 +
             (C14443 - (C14444 + C14445) + C14446) * C7788 +
             (C14447 - (C14448 + C14449) + C14450) * C7789) *
                C51065) *
               C50965) *
              C1172 +
          ((((C11786 - (C11785 + C11784) + C11787) * C7787 +
             (C11790 - (C11789 + C11788) + C11791) * C7788 +
             (C11794 - (C11793 + C11792) + C11795) * C7789) *
                C51171 +
            (C14455 * C7787 + C14456 * C7788 +
             (C11964 - (C11950 + C11951) + C11965) * C7789) *
                C51065) *
               C51158 +
           ((C14454 * C7787 + C14241 * C7788 +
             (C11951 + C11950 - C11964 - C11965) * C7789) *
                C51171 +
            ((C14445 + C14444 - C14443 - C14446) * C7787 +
             (C14449 + C14448 - C14447 - C14450) * C7788 +
             (C11492 * C1280 + C11493 * C1275 -
              (C10648 * C8950 + C50863 * C8954) * C1281 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C7789) *
                C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
             (C5372 + C5373 + C5374) * C1281 -
             (C5375 + C5376 + C5377) * C50887) *
                C51027 * C51065) *
               C51158 +
           (((C5374 + C5373 + C5372) * C1281 -
             ((C5371 + C5370 + C5369) * C1275 +
              (C5368 + C5367 + C5366) * C1280) +
             (C5377 + C5376 + C5375) * C50887) *
                C51027 * C51171 +
            ((C5944 + C5945 + C5946) * C1281 -
             ((C5947 + C5948 + C5949) * C1275 +
              (C5950 + C5951 + C5952) * C1280) +
             (C5953 + C5954 + C5955) * C50887) *
                C51027 * C51065) *
               C50965) *
              C1172 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51027 * C51171 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51027 * C51065) *
               C51158 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C1280 + (C3349 + C3350 + C3351) * C1275 -
             (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
              C2176 * C971 + C2171 * C979) *
                 C1281 -
             (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
              C2176 * C975 + C2171 * C983) *
                 C50887) *
                C51027 * C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51027 * C21073 +
            (C14436 + C14437 - C14438 - C14439) * C51027 * C21074 +
            C20516 * C51027 * C21075 +
            (C20513 + C20512 - C20511 - C20514) * C51027 * C21076) *
               C51158 +
           ((C14438 - (C14437 + C14436) + C14439) * C51027 * C21073 +
            (C14949 - (C14950 + C14951) + C14952) * C51027 * C21074 +
            (C20511 - (C20512 + C20513) + C20514) * C51027 * C21075 +
            (C21655 * C1281 - (C19511 * C1275 + C19510 * C1280) +
             C21656 * C50887) *
                C51027 * C21076) *
               C50965) *
              C1172 +
          (((C11786 - (C11785 + C11784) + C11787) * C51027 * C21073 +
            C14455 * C51027 * C21074 + C20016 * C51027 * C21075 +
            (C20009 - (C20010 + C20011) + C20012) * C51027 * C21076) *
               C51158 +
           (C14454 * C51027 * C21073 + C20015 * C51027 * C21074 +
            (C20011 + C20010 - C20009 - C20012) * C51027 * C21075 +
            (C19395 * C1280 + C19396 * C1275 -
             (C10648 * C16630 + C50863 * C16632) * C1281 -
             (C10648 * C16631 + C50863 * C16633) * C50887) *
                C51027 * C21076) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C50007 +
              (C10648 * C136 + C50863 * C146) * C51149 -
              (C10648 * C126 + C50863 * C133) * C50000 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C7787 +
             (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
                C51171 +
            ((C13614 + C13615 - C13616 - C13617) * C7787 + C15153 * C7788 +
             C13216 * C7789) *
                C51065) *
               C1514 +
           (((C13616 - (C13615 + C13614) + C13617) * C7787 + C15154 * C7788 +
             C15155 * C7789) *
                C51171 +
            ((C13646 - (C13647 + C13648) + C13649) * C7787 +
             (C13650 - (C13628 + C13629) + C13651) * C7788 +
             (C13652 - (C13634 + C13635) + C13653) * C7789) *
                C51065) *
               C50965) *
              C1172 +
          ((((C11018 - (C11017 + C11016) + C11019) * C7787 +
             (C11022 - (C11021 + C11020) + C11023) * C7788 +
             (C11026 - (C11025 + C11024) + C11027) * C7789) *
                C51171 +
            (C15154 * C7787 + C15155 * C7788 +
             (C12430 - (C12431 + C12432) + C12433) * C7789) *
                C51065) *
               C1514 +
           ((C15153 * C7787 + C13216 * C7788 +
             (C12432 + C12431 - C12430 - C12433) * C7789) *
                C51171 +
            ((C13629 + C13628 - C13650 - C13651) * C7787 +
             (C13635 + C13634 - C13652 - C13653) * C7788 +
             (C11492 * C50007 + C11493 * C51149 -
              (C10648 * C8950 + C50863 * C8954) * C50000 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C7789) *
                C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C51149 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C50007 +
             (C5369 + C5370 + C5371) * C51149 -
             (C5372 + C5373 + C5374) * C50000 -
             (C5375 + C5376 + C5377) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C5374 + C5373 + C5372) * C50000 -
             ((C5371 + C5370 + C5369) * C51149 +
              (C5368 + C5367 + C5366) * C50007) +
             (C5377 + C5376 + C5375) * C50887) *
                C51027 * C51171 +
            ((C5944 + C5945 + C5946) * C50000 -
             ((C5947 + C5948 + C5949) * C51149 +
              (C5950 + C5951 + C5952) * C50007) +
             (C5953 + C5954 + C5955) * C50887) *
                C51027 * C51065) *
               C50965) *
              C1172 +
          ((((C2370 + C2369 + C2368) * C50000 -
             ((C2367 + C2366 + C2365) * C51149 +
              (C2364 + C2363 + C2362) * C50007) +
             (C2373 + C2372 + C2371) * C50887) *
                C51027 * C51171 +
            ((C3960 + C3961 + C3962) * C50000 -
             ((C3018 + C3019 + C3020) * C51149 +
              (C3021 + C3022 + C3023) * C50007) +
             (C3963 + C3964 + C3965) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C3023 + C3022 + C3021) * C50007 +
             (C3020 + C3019 + C3018) * C51149 -
             (C3962 + C3961 + C3960) * C50000 -
             (C3965 + C3964 + C3963) * C50887) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C50007 +
             (C3349 + C3350 + C3351) * C51149 -
             (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
              C2176 * C971 + C2171 * C979) *
                 C50000 -
             (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
              C2176 * C975 + C2171 * C983) *
                 C50887) *
                C51027 * C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51027 * C21073 +
            (C13614 + C13615 - C13616 - C13617) * C51027 * C21074 +
            C21646 * C21075 + C21660 * C21076) *
               C1514 +
           ((C13616 - (C13615 + C13614) + C13617) * C51027 * C21073 +
            (C13646 - (C13647 + C13648) + C13649) * C51027 * C21074 +
            (C19231 - (C19213 + C19214) + C19232) * C51027 * C21075 +
            (C21658 - (C21650 + C21651) + C21659) * C51027 * C21076) *
               C50965) *
              C1172 +
          (((C11018 - (C11017 + C11016) + C11019) * C51027 * C21073 +
            C15154 * C51027 * C21074 + C20715 * C51027 * C21075 +
            (C19233 - (C19219 + C19220) + C19234) * C51027 * C21076) *
               C1514 +
           (C15153 * C51027 * C21073 + C19230 * C51027 * C21074 +
            (C19220 + C19219 - C19233 - C19234) * C51027 * C21075 +
            (C19395 * C50007 + C19396 * C51149 -
             (C10648 * C16630 + C50863 * C16632) * C50000 -
             (C10648 * C16631 + C50863 * C16633) * C50887) *
                C51027 * C21076) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C1514 -
           ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C50965) *
              C51202 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            (C13803 * C7787 + C13804 * C7788 + (C11498 + C11499) * C7789) *
                C51065) *
               C50965 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C1514) *
              C51190 +
          (((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
                C51171 +
            (C13315 * C7787 + C13467 * C7788 + (C11272 + C11273) * C7789) *
                C51065) *
               C1514 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C7789 +
             (C11499 + C11498) * C7788 + C13465 * C7787) *
                C51065 +
            ((C11273 + C11272) * C7789 + C11274 * C7788 + C11275 * C7787) *
                C51171) *
               C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C1514 -
           (((C5947 + C5948 + C5949) * C50882 +
             (C5950 + C5951 + C5952) * C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C50965) *
              C51202 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C50965 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C1514) *
              C51190 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51027 * C51171 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51027 * C51065) *
               C1514 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51027 * C51065 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51027 * C51171) *
               C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51027 * C21073 +
            (C13462 + C13463) * C51027 * C21074 + C21759 * C21075 +
            C21763 * C21076) *
               C1514 -
           (C21840 * C21076 + C21835 * C21075 +
            (C13801 + C13802) * C51027 * C21074 +
            (C13463 + C13462) * C51027 * C21073) *
               C50965) *
              C51202 +
          ((C13464 * C51027 * C21073 + C13803 * C51027 * C21074 +
            C19387 * C51027 * C21075 + (C19399 + C19400) * C51027 * C21076) *
               C50965 -
           (C21761 * C21076 + C21762 * C21075 + C13466 * C51027 * C21074 +
            (C11121 + C11120) * C51027 * C21073) *
               C1514) *
              C51190 +
          ((C11132 * C51027 * C21073 + C13315 * C51027 * C21074 +
            C13804 * C51027 * C21075 + (C13819 + C13820) * C51027 * C21076) *
               C1514 -
           (((C10648 * C13920 + C50863 * C13924) * C50882 +
             (C10648 * C13918 + C50863 * C13921) * C603) *
                C51027 * C21076 +
            (C13820 + C13819) * C51027 * C21075 + C13465 * C51027 * C21074 +
            C11275 * C51027 * C21073) *
               C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C51203 -
           ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C51193 +
           (((C13802 + C13801) * C7787 + C13803 * C7788 + C13804 * C7789) *
                C51171 +
            ((C13933 + C13934) * C7787 + (C13817 + C13818) * C7788 +
             (C13819 + C13820) * C7789) *
                C51065) *
               C1746) *
              C1172 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            (C13803 * C7787 + C13804 * C7788 + (C11498 + C11499) * C7789) *
                C51065) *
               C51193 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C51203 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C7789 +
             (C13820 + C13819) * C7788 + (C13818 + C13817) * C7787) *
                C51065 +
            ((C11499 + C11498) * C7789 + C13465 * C7788 + C13800 * C7787) *
                C51171) *
               C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C51203 -
           (((C5947 + C5948 + C5949) * C50882 +
             (C5950 + C5951 + C5952) * C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C51193 +
           (((C5952 + C5951 + C5950) * C603 +
             (C5949 + C5948 + C5947) * C50882) *
                C51027 * C51171 +
            ((C6224 + C6225 + C6226) * C603 +
             (C6227 + C6228 + C6229) * C50882) *
                C51027 * C51065) *
               C1746) *
              C1172 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C51193 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C51203 -
           (((C2178 * C3452 + C2173 * C3458 + C2177 * C3453 + C2172 * C3459 +
              C2176 * C3454 + C2171 * C3460) *
                 C50882 +
             (C2178 * C3449 + C2173 * C3455 + C2177 * C3450 + C2172 * C3456 +
              C2176 * C3451 + C2171 * C3457) *
                 C603) *
                C51027 * C51065 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51027 * C51171) *
               C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51027 * C21073 +
            (C13462 + C13463) * C51027 * C21074 + C21759 * C21075 +
            C21763 * C21076) *
               C51203 -
           (C21840 * C21076 + C21835 * C21075 +
            (C13801 + C13802) * C51027 * C21074 +
            (C13463 + C13462) * C51027 * C21073) *
               C51193 +
           (C21759 * C21073 + C21763 * C21074 +
            (C19513 + C19514) * C51027 * C21075 +
            (C21843 + C21844) * C51027 * C21076) *
               C1746) *
              C1172 +
          ((C13464 * C51027 * C21073 + C13803 * C51027 * C21074 +
            C19387 * C51027 * C21075 + (C19399 + C19400) * C51027 * C21076) *
               C51193 -
           (C21761 * C21076 + C21762 * C21075 + C13466 * C51027 * C21074 +
            (C11121 + C11120) * C51027 * C21073) *
               C51203 -
           (((C10648 * C19499 + C50863 * C19501) * C50882 +
             (C10648 * C19498 + C50863 * C19500) * C603) *
                C51027 * C21076 +
            (C19400 + C19399) * C51027 * C21075 + C21761 * C21074 +
            C21762 * C21073) *
               C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                C2178 * C127 + C2173 * C134) *
                   C121 +
               (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                C2178 * C138 + C2173 * C148) *
                   C109 -
               (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                C2176 * C126 + C2171 * C133) *
                   C122 -
               (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                C2176 * C137 + C2171 * C147) *
                   C110 +
               (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                C2178 * C129 + C2173 * C140) *
                   C123 +
               (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                C2178 * C141 + C2173 * C150) *
                   C111 -
               (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
                C2176 * C128 + C2171 * C135) *
                   C124 -
               (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
                C2176 * C139 + C2171 * C149) *
                   C112) *
                  C51027 * C51171 +
              ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
                C2178 * C384 + C2173 * C390) *
                   C121 +
               (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
                C2178 * C394 + C2173 * C402) *
                   C109 -
               (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
                C2176 * C383 + C2171 * C389) *
                   C122 -
               (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
                C2176 * C395 + C2171 * C403) *
                   C110 +
               (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
                C2178 * C386 + C2173 * C392) *
                   C123 +
               (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
                C2178 * C398 + C2173 * C405) *
                   C111 -
               (C2178 * C388 + C2173 * C399 + C2177 * C386 + C2172 * C392 +
                C2176 * C385 + C2171 * C391) *
                   C124 -
               (C2178 * C400 + C2173 * C406 + C2177 * C398 + C2172 * C405 +
                C2176 * C393 + C2171 * C401) *
                   C112) *
                  C51027 * C51065) *
             C50953 * C50927 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C50007 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C51149 -
                (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                 C2176 * C126 + C2171 * C133) *
                    C50000 -
                (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                 C2176 * C137 + C2171 * C147) *
                    C50887) *
                   C51027 * C51171 +
               ((C5366 + C5367 + C5368) * C50007 +
                (C5369 + C5370 + C5371) * C51149 -
                (C5372 + C5373 + C5374) * C50000 -
                (C5375 + C5376 + C5377) * C50887) *
                   C51027 * C51065) *
                  C50953 * C507 +
              (((C2370 + C2369 + C2368) * C50000 -
                ((C2367 + C2366 + C2365) * C51149 +
                 (C2364 + C2363 + C2362) * C50007) +
                (C2373 + C2372 + C2371) * C50887) *
                   C51027 * C51171 +
               ((C3960 + C3961 + C3962) * C50000 -
                ((C3018 + C3019 + C3020) * C51149 +
                 (C3021 + C3022 + C3023) * C50007) +
                (C3963 + C3964 + C3965) * C50887) *
                   C51027 * C51065) *
                  C50953 * C508 +
              (((C2704 + C2703 + C2702) * C50007 +
                (C2701 + C2700 + C2699) * C51149 -
                (C2698 + C2697 + C2696) * C50000 -
                (C2707 + C2706 + C2705) * C50887) *
                   C51027 * C51171 +
               ((C3024 + C3025 + C3026) * C50007 +
                (C3027 + C3028 + C3029) * C51149 -
                (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
                 C2176 * C724 + C2171 * C740) *
                    C50000 -
                (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
                 C2176 * C736 + C2171 * C748) *
                    C50887) *
                   C51027 * C51065) *
                  C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51149 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C50007 +
            (C5369 + C5370 + C5371) * C51149 -
            (C5372 + C5373 + C5374) * C50000 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C848 +
          (((C5374 + C5373 + C5372) * C50000 -
            ((C5371 + C5370 + C5369) * C51149 +
             (C5368 + C5367 + C5366) * C50007) +
            (C5377 + C5376 + C5375) * C50887) *
               C51027 * C51171 +
           ((C5944 + C5945 + C5946) * C50000 -
            ((C5947 + C5948 + C5949) * C51149 +
             (C5950 + C5951 + C5952) * C50007) +
            (C5953 + C5954 + C5955) * C50887) *
               C51027 * C51065) *
              C849 +
          (((C5952 + C5951 + C5950) * C50007 +
            (C5949 + C5948 + C5947) * C51149 -
            (C5946 + C5945 + C5944) * C50000 -
            (C5955 + C5954 + C5953) * C50887) *
               C51027 * C51171 +
           ((C2176 * C1058 + C2171 * C1066 + C2177 * C1057 + C2172 * C1065 +
             C2178 * C1056 + C2173 * C1064) *
                C50007 +
            (C2176 * C1062 + C2171 * C1070 + C2177 * C1061 + C2172 * C1069 +
             C2178 * C1060 + C2173 * C1068) *
                C51149 -
            (C2178 * C1055 + C2173 * C1063 + C2177 * C1056 + C2172 * C1064 +
             C2176 * C1057 + C2171 * C1065) *
                C50000 -
            (C2178 * C1059 + C2173 * C1067 + C2177 * C1060 + C2172 * C1068 +
             C2176 * C1061 + C2171 * C1069) *
                C50887) *
               C51027 * C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C7787 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C7788 +
           (C10790 * C121 + C10791 * C109 - C10792 * C122 - C10793 * C110 +
            C10794 * C123 + C10795 * C111 -
            (C10648 * C515 + C50863 * C520) * C124 -
            (C10648 * C524 + C50863 * C530) * C112) *
               C7789) *
              C51171 +
          (((C10648 * C387 + C50863 * C397) * C121 +
            (C10648 * C396 + C50863 * C404) * C109 -
            (C10648 * C383 + C50863 * C389) * C122 -
            (C10648 * C395 + C50863 * C403) * C110 +
            (C10648 * C384 + C50863 * C390) * C123 +
            (C10648 * C394 + C50863 * C402) * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C7787 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            (C10648 * C720 + C50863 * C728) * C123 +
            (C10648 * C732 + C50863 * C744) * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C7788 +
           (C11261 * C121 + C11260 * C109 - C11956 * C122 - C11957 * C110 +
            (C10648 * C723 + C50863 * C739) * C123 +
            (C10648 * C735 + C50863 * C747) * C111 -
            (C10648 * C722 + C50863 * C738) * C124 -
            (C10648 * C734 + C50863 * C746) * C112) *
               C7789) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
               C51171 +
           ((C13056 * C50007 + C13057 * C51149 - C13058 * C50000 -
             C13059 * C50887) *
                C7787 +
            (C12424 + C12423 - C12422 - C12425) * C7788 + C13216 * C7789) *
               C51065) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C7787 +
            (C11022 - (C11021 + C11020) + C11023) * C7788 +
            (C11026 - (C11025 + C11024) + C11027) * C7789) *
               C51171 +
           ((C12422 - (C12423 + C12424) + C12425) * C7787 +
            (C12426 - (C12427 + C12428) + C12429) * C7788 +
            (C12430 - (C12431 + C12432) + C12433) * C7789) *
               C51065) *
              C50953 * C508 +
          ((C11048 * C7787 + C11049 * C7788 +
            (C11046 + C11045 - C11044 - C11047) * C7789) *
               C51171 +
           (C13216 * C7787 + (C12432 + C12431 - C12430 - C12433) * C7788 +
            (C11264 * C50007 + C11265 * C51149 -
             (C10648 * C8609 + C50863 * C8613) * C50000 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C7789) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
               C51171 +
           ((C13614 + C13615 - C13616 - C13617) * C7787 +
            (C12424 + C12423 - C12422 - C12425) * C7788 + C13216 * C7789) *
               C51065) *
              C848 +
          (((C13616 - (C13615 + C13614) + C13617) * C7787 +
            (C12422 - (C12423 + C12424) + C12425) * C7788 +
            (C12426 - (C12427 + C12428) + C12429) * C7789) *
               C51171 +
           ((C13646 - (C13647 + C13648) + C13649) * C7787 +
            (C13650 - (C13628 + C13629) + C13651) * C7788 +
            (C13652 - (C13634 + C13635) + C13653) * C7789) *
               C51065) *
              C849 +
          (((C13648 + C13647 - C13646 - C13649) * C7787 +
            (C13629 + C13628 - C13650 - C13651) * C7788 +
            (C13635 + C13634 - C13652 - C13653) * C7789) *
               C51171 +
           (((C10648 * C1058 + C50863 * C1066) * C50007 +
             (C10648 * C1062 + C50863 * C1070) * C51149 -
             (C10648 * C1057 + C50863 * C1065) * C50000 -
             (C10648 * C1061 + C50863 * C1069) * C50887) *
                C7787 +
            ((C10648 * C3451 + C50863 * C3457) * C50007 +
             (C10648 * C3454 + C50863 * C3460) * C51149 -
             (C10648 * C3450 + C50863 * C3456) * C50000 -
             (C10648 * C3453 + C50863 * C3459) * C50887) *
                C7788 +
            ((C10648 * C9081 + C50863 * C9085) * C50007 +
             (C10648 * C9083 + C50863 * C9087) * C51149 -
             (C10648 * C9080 + C50863 * C9084) * C50000 -
             (C10648 * C9082 + C50863 * C9086) * C50887) *
                C7789) *
               C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C10648 * C125 + C50863 * C132) * C121 +
           (C10648 * C136 + C50863 * C146) * C109 -
           (C10648 * C126 + C50863 * C133) * C122 -
           (C10648 * C137 + C50863 * C147) * C110 +
           (C10648 * C127 + C50863 * C134) * C123 +
           (C10648 * C138 + C50863 * C148) * C111 -
           (C10648 * C128 + C50863 * C135) * C124 -
           (C10648 * C139 + C50863 * C149) * C112) *
              C51027 * C21073 +
          (C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
           C13060 * C123 + C13061 * C111 -
           (C10648 * C385 + C50863 * C391) * C124 -
           (C10648 * C393 + C50863 * C401) * C112) *
              C51027 * C21074 +
          (C13640 * C121 + C13639 * C109 - C13638 * C122 - C13641 * C110 +
           C18669 * C123 + C18670 * C111 -
           (C10648 * C854 + C50863 * C859) * C124 -
           (C10648 * C863 + C50863 * C869) * C112) *
              C51027 * C21075 +
          (C13931 * C121 + C13932 * C109 - C19225 * C122 - C19226 * C110 +
           (C10648 * C1056 + C50863 * C1064) * C123 +
           (C10648 * C1060 + C50863 * C1068) * C111 -
           (C10648 * C1055 + C50863 * C1063) * C124 -
           (C10648 * C1059 + C50863 * C1067) * C112) *
              C51027 * C21076) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C50007 +
            (C10648 * C136 + C50863 * C146) * C51149 -
            (C10648 * C126 + C50863 * C133) * C50000 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C51027 * C21073 +
           (C13614 + C13615 - C13616 - C13617) * C51027 * C21074 +
           C19229 * C51027 * C21075 +
           (C19214 + C19213 - C19231 - C19232) * C51027 * C21076) *
              C50953 * C507 +
          ((C11018 - (C11017 + C11016) + C11019) * C51027 * C21073 +
           C15154 * C51027 * C21074 + C20715 * C51027 * C21075 +
           (C19233 - (C19219 + C19220) + C19234) * C51027 * C21076) *
              C50953 * C508 +
          (C11048 * C51027 * C21073 + C13216 * C51027 * C21074 +
           (C13635 + C13634 - C13652 - C13653) * C51027 * C21075 +
           (C13815 * C50007 + C13816 * C51149 -
            (C10648 * C9080 + C50863 * C9084) * C50000 -
            (C10648 * C9082 + C50863 * C9086) * C50887) *
               C51027 * C21076) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C50007 +
            (C10648 * C136 + C50863 * C146) * C51149 -
            (C10648 * C126 + C50863 * C133) * C50000 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C51027 * C21073 +
           (C13614 + C13615 - C13616 - C13617) * C51027 * C21074 +
           C21646 * C21075 + C21660 * C21076) *
              C848 +
          ((C13616 - (C13615 + C13614) + C13617) * C51027 * C21073 +
           (C13646 - (C13647 + C13648) + C13649) * C51027 * C21074 +
           (C19231 - (C19213 + C19214) + C19232) * C51027 * C21075 +
           (C21658 - (C21650 + C21651) + C21659) * C51027 * C21076) *
              C849 +
          (C21646 * C21073 + C21660 * C21074 +
           (C21651 + C21650 - C21658 - C21659) * C51027 * C21075 +
           ((C10648 * C16755 + C50863 * C16759) * C50007 +
            (C10648 * C16757 + C50863 * C16761) * C51149 -
            (C10648 * C16754 + C50863 * C16758) * C50000 -
            (C10648 * C16756 + C50863 * C16760) * C50887) *
               C51027 * C21076) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C256 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C251 -
                (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                 C2176 * C126 + C2171 * C133) *
                    C257 -
                (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                 C2176 * C137 + C2171 * C147) *
                    C252 +
                (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                 C2178 * C129 + C2173 * C140) *
                    C258 +
                (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                 C2178 * C141 + C2173 * C150) *
                    C253) *
                   C51027 * C51171 +
               ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
                 C2178 * C384 + C2173 * C390) *
                    C256 +
                (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
                 C2178 * C394 + C2173 * C402) *
                    C251 -
                (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
                 C2176 * C383 + C2171 * C389) *
                    C257 -
                (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
                 C2176 * C395 + C2171 * C403) *
                    C252 +
                (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
                 C2178 * C386 + C2173 * C392) *
                    C258 +
                (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
                 C2178 * C398 + C2173 * C405) *
                    C253) *
                   C51027 * C51065) *
                  C50953 * C51157 +
              (((C2370 + C2369 + C2368) * C257 -
                ((C2367 + C2366 + C2365) * C251 +
                 (C2364 + C2363 + C2362) * C256) +
                (C2373 + C2372 + C2371) * C252 -
                (C2376 + C2375 + C2374) * C258 -
                (C2379 + C2378 + C2377) * C253) *
                   C51027 * C51171 +
               ((C3960 + C3961 + C3962) * C257 -
                ((C3018 + C3019 + C3020) * C251 +
                 (C3021 + C3022 + C3023) * C256) +
                (C3963 + C3964 + C3965) * C252 -
                (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
                 C2176 * C720 + C2171 * C728) *
                    C258 -
                (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
                 C2176 * C732 + C2171 * C744) *
                    C253) *
                   C51027 * C51065) *
                  C50953 * C50941) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C603 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C50882) *
                   C51027 * C51171 +
               ((C5366 + C5367 + C5368) * C603 +
                (C5369 + C5370 + C5371) * C50882) *
                   C51027 * C51065) *
                  C50953 * C599 -
              (((C3018 + C3019 + C3020) * C50882 +
                (C3021 + C3022 + C3023) * C603) *
                   C51027 * C51065 +
               ((C2367 + C2366 + C2365) * C50882 +
                (C2364 + C2363 + C2362) * C603) *
                   C51027 * C51171) *
                  C50953 * C600 +
              (((C2704 + C2703 + C2702) * C603 +
                (C2701 + C2700 + C2699) * C50882) *
                   C51027 * C51171 +
               ((C3024 + C3025 + C3026) * C603 +
                (C3027 + C3028 + C3029) * C50882) *
                   C51027 * C51065) *
                  C50953 * C601 -
              (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
                 C2176 * C2986 + C2171 * C2992) *
                    C50882 +
                (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
                 C2176 * C2983 + C2171 * C2989) *
                    C603) *
                   C51027 * C51065 +
               ((C2835 + C2834 + C2833) * C50882 +
                (C2832 + C2831 + C2830) * C603) *
                   C51027 * C51171) *
                  C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C848 -
           (((C5947 + C5948 + C5949) * C50882 +
             (C5950 + C5951 + C5952) * C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C849 +
           (((C5952 + C5951 + C5950) * C603 +
             (C5949 + C5948 + C5947) * C50882) *
                C51027 * C51171 +
            ((C2176 * C1058 + C2171 * C1066 + C2177 * C1057 + C2172 * C1065 +
              C2178 * C1056 + C2173 * C1064) *
                 C603 +
             (C2176 * C1062 + C2171 * C1070 + C2177 * C1061 + C2172 * C1069 +
              C2178 * C1060 + C2173 * C1068) *
                 C50882) *
                C51027 * C51065) *
               C850) *
              C51157 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C849 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C848 -
           (((C2178 * C3452 + C2173 * C3458 + C2177 * C3453 + C2172 * C3459 +
              C2176 * C3454 + C2171 * C3460) *
                 C50882 +
             (C2178 * C3449 + C2173 * C3455 + C2177 * C3450 + C2172 * C3456 +
              C2176 * C3451 + C2171 * C3457) *
                 C603) *
                C51027 * C51065 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51027 * C51171) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           (((C10648 * C387 + C50863 * C397) * C256 +
             (C10648 * C396 + C50863 * C404) * C251 -
             (C10648 * C383 + C50863 * C389) * C257 -
             (C10648 * C395 + C50863 * C403) * C252 +
             (C10648 * C384 + C50863 * C390) * C258 +
             (C10648 * C394 + C50863 * C402) * C253) *
                C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C7787 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C7788 +
            (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C7789) *
               C51171 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7787 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7788 +
            (C11958 * C257 - (C11258 * C251 + C11259 * C256) + C11959 * C252 -
             (C10648 * C2981 + C50863 * C2987) * C258 -
             (C10648 * C2984 + C50863 * C2990) * C253) *
                C7789) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C7787 +
            (C11120 + C11121) * C7788 + C11132 * C7789) *
               C51171 +
           ((C13056 * C603 + C13057 * C50882) * C7787 +
            (C11271 + C11270) * C7788 + C13315 * C7789) *
               C51065) *
              C50953 * C599 -
          ((C11274 * C7789 + C11275 * C7788 + (C11270 + C11271) * C7787) *
               C51065 +
           (C11135 * C7789 + (C11123 + C11122) * C7788 +
            (C11121 + C11120) * C7787) *
               C51171) *
              C50953 * C600 +
          ((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
               C51171 +
           (C13315 * C7787 + (C11267 + C11266) * C7788 +
            (C11272 + C11273) * C7789) *
               C51065) *
              C50953 * C601 -
          ((((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C7789 +
            (C11273 + C11272) * C7788 + C11274 * C7787) *
               C51065 +
           ((C11139 + C11138) * C7789 + C11134 * C7788 + C11135 * C7787) *
               C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C848 -
           ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C849 +
           (((C13802 + C13801) * C7787 + C13803 * C7788 + C13804 * C7789) *
                C51171 +
            (((C10648 * C1058 + C50863 * C1066) * C603 +
              (C10648 * C1062 + C50863 * C1070) * C50882) *
                 C7787 +
             (C13817 + C13818) * C7788 + (C13819 + C13820) * C7789) *
                C51065) *
               C850) *
              C51157 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            (C13803 * C7787 + C13804 * C7788 + (C11498 + C11499) * C7789) *
                C51065) *
               C849 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C848 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C7789 +
             (C13820 + C13819) * C7788 + (C13818 + C13817) * C7787) *
                C51065 +
            ((C11499 + C11498) * C7789 + C13465 * C7788 + C13800 * C7787) *
                C51171) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C51027 * C21073 +
           (C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51027 *
               C21074 +
           (C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C51027 *
               C21075 +
           (C13931 * C256 + C13932 * C251 - C19225 * C257 - C19226 * C252 +
            (C10648 * C1056 + C50863 * C1064) * C258 +
            (C10648 * C1060 + C50863 * C1068) * C253) *
               C51027 * C21076) *
              C50953 * C51157 +
          ((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C51027 *
               C21073 +
           (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51027 *
               C21074 +
           (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51027 *
               C21075 +
           (C19227 * C257 - (C13814 * C251 + C13813 * C256) + C19228 * C252 -
            (C10648 * C3449 + C50863 * C3455) * C258 -
            (C10648 * C3452 + C50863 * C3458) * C253) *
               C51027 * C21076) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C51027 * C21073 +
           (C13462 + C13463) * C51027 * C21074 + C19384 * C51027 * C21075 +
           (C13933 + C13934) * C51027 * C21076) *
              C50953 * C599 -
          (C19386 * C51027 * C21076 + C13800 * C51027 * C21075 +
           C13466 * C51027 * C21074 + (C11121 + C11120) * C51027 * C21073) *
              C50953 * C600 +
          (C11132 * C51027 * C21073 + C13315 * C51027 * C21074 +
           C13804 * C51027 * C21075 + (C13819 + C13820) * C51027 * C21076) *
              C50953 * C601 -
          (((C10648 * C11566 + C50863 * C11568) * C50882 +
            (C10648 * C11565 + C50863 * C11567) * C603) *
               C51027 * C21076 +
           (C11499 + C11498) * C51027 * C21075 + C11274 * C51027 * C21074 +
           C11135 * C51027 * C21073) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51027 * C21073 +
            (C13462 + C13463) * C51027 * C21074 + C21759 * C21075 +
            C21763 * C21076) *
               C848 -
           ((C19514 + C19513) * C51027 * C21076 + C19504 * C51027 * C21075 +
            (C13801 + C13802) * C51027 * C21074 +
            (C13463 + C13462) * C51027 * C21073) *
               C849 +
           (C21759 * C21073 + C21763 * C21074 +
            (C19513 + C19514) * C51027 * C21075 +
            ((C10648 * C16755 + C50863 * C16759) * C603 +
             (C10648 * C16757 + C50863 * C16761) * C50882) *
                C51027 * C21076) *
               C850) *
              C51157 +
          ((C13464 * C51027 * C21073 + C13803 * C51027 * C21074 +
            C19387 * C51027 * C21075 + (C19399 + C19400) * C51027 * C21076) *
               C849 -
           (C21761 * C21076 + C21762 * C21075 + C13466 * C51027 * C21074 +
            (C11121 + C11120) * C51027 * C21073) *
               C848 -
           (((C10648 * C19499 + C50863 * C19501) * C50882 +
             (C10648 * C19498 + C50863 * C19500) * C603) *
                C51027 * C21076 +
            (C19400 + C19399) * C51027 * C21075 + C21761 * C21074 +
            C21762 * C21073) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                 C2178 * C127 + C2173 * C134) *
                    C256 +
                (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                 C2178 * C138 + C2173 * C148) *
                    C251 -
                (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                 C2176 * C126 + C2171 * C133) *
                    C257 -
                (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                 C2176 * C137 + C2171 * C147) *
                    C252 +
                (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                 C2178 * C129 + C2173 * C140) *
                    C258 +
                (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                 C2178 * C141 + C2173 * C150) *
                    C253) *
                   C51027 * C51171 +
               ((C5366 + C5367 + C5368) * C256 +
                (C5369 + C5370 + C5371) * C251 -
                (C5372 + C5373 + C5374) * C257 -
                (C5375 + C5376 + C5377) * C252 +
                (C5378 + C5379 + C5380) * C258 +
                (C5381 + C5382 + C5383) * C253) *
                   C51027 * C51065) *
                  C51158 +
              (((C5374 + C5373 + C5372) * C257 -
                ((C5371 + C5370 + C5369) * C251 +
                 (C5368 + C5367 + C5366) * C256) +
                (C5377 + C5376 + C5375) * C252 -
                (C5380 + C5379 + C5378) * C258 -
                (C5383 + C5382 + C5381) * C253) *
                   C51027 * C51171 +
               ((C2176 * C852 + C2171 * C857 + C2177 * C853 + C2172 * C858 +
                 C2178 * C854 + C2173 * C859) *
                    C257 -
                ((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
                  C2176 * C860 + C2171 * C866) *
                     C251 +
                 (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
                  C2176 * C851 + C2171 * C856) *
                     C256) +
                (C2176 * C861 + C2171 * C867 + C2177 * C862 + C2172 * C868 +
                 C2178 * C863 + C2173 * C869) *
                    C252 -
                (C2178 * C855 + C2173 * C864 + C2177 * C854 + C2172 * C859 +
                 C2176 * C853 + C2171 * C858) *
                    C258 -
                (C2178 * C865 + C2173 * C870 + C2177 * C863 + C2172 * C869 +
                 C2176 * C862 + C2171 * C868) *
                    C253) *
                   C51027 * C51065) *
                  C50965) *
             C50927 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                  C2178 * C127 + C2173 * C134) *
                     C603 +
                 (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                  C2178 * C138 + C2173 * C148) *
                     C50882) *
                    C51027 * C51171 +
                ((C5366 + C5367 + C5368) * C603 +
                 (C5369 + C5370 + C5371) * C50882) *
                    C51027 * C51065) *
                   C51158 -
               (((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
                  C2176 * C860 + C2171 * C866) *
                     C50882 +
                 (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
                  C2176 * C851 + C2171 * C856) *
                     C603) *
                    C51027 * C51065 +
                ((C5371 + C5370 + C5369) * C50882 +
                 (C5368 + C5367 + C5366) * C603) *
                    C51027 * C51171) *
                   C50965) *
                  C507 +
              ((((C3023 + C3022 + C3021) * C603 +
                 (C3020 + C3019 + C3018) * C50882) *
                    C51027 * C51171 +
                ((C3346 + C3347 + C3348) * C603 +
                 (C3349 + C3350 + C3351) * C50882) *
                    C51027 * C51065) *
                   C50965 -
               (((C3018 + C3019 + C3020) * C50882 +
                 (C3021 + C3022 + C3023) * C603) *
                    C51027 * C51065 +
                ((C2367 + C2366 + C2365) * C50882 +
                 (C2364 + C2363 + C2362) * C603) *
                    C51027 * C51171) *
                   C51158) *
                  C508 +
              ((((C2704 + C2703 + C2702) * C603 +
                 (C2701 + C2700 + C2699) * C50882) *
                    C51027 * C51171 +
                ((C3024 + C3025 + C3026) * C603 +
                 (C3027 + C3028 + C3029) * C50882) *
                    C51027 * C51065) *
                   C51158 -
               (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 +
                  C2172 * C3331 + C2176 * C3326 + C2171 * C3332) *
                     C50882 +
                 (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 +
                  C2172 * C3328 + C2176 * C3323 + C2171 * C3329) *
                     C603) *
                    C51027 * C51065 +
                ((C3029 + C3028 + C3027) * C50882 +
                 (C3026 + C3025 + C3024) * C603) *
                    C51027 * C51171) *
                   C50965) *
                  C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C603 + (C5369 + C5370 + C5371) * C50882) *
               C51027 * C51065) *
              C1051 -
          (((C5947 + C5948 + C5949) * C50882 + (C5950 + C5951 + C5952) * C603) *
               C51027 * C51065 +
           ((C5371 + C5370 + C5369) * C50882 + (C5368 + C5367 + C5366) * C603) *
               C51027 * C51171) *
              C1052 +
          (((C5952 + C5951 + C5950) * C603 + (C5949 + C5948 + C5947) * C50882) *
               C51027 * C51171 +
           ((C6224 + C6225 + C6226) * C603 + (C6227 + C6228 + C6229) * C50882) *
               C51027 * C51065) *
              C1053 -
          (((C2178 * C6202 + C2173 * C6208 + C2177 * C6203 + C2172 * C6209 +
             C2176 * C6204 + C2171 * C6210) *
                C50882 +
            (C2178 * C6199 + C2173 * C6205 + C2177 * C6200 + C2172 * C6206 +
             C2176 * C6201 + C2171 * C6207) *
                C603) *
               C51027 * C51065 +
           ((C6229 + C6228 + C6227) * C50882 + (C6226 + C6225 + C6224) * C603) *
               C51027 * C51171) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C7787 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7788 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7789) *
               C51171 +
           (((C10648 * C852 + C50863 * C857) * C257 -
             ((C10648 * C860 + C50863 * C866) * C251 +
              (C10648 * C851 + C50863 * C856) * C256) +
             (C10648 * C861 + C50863 * C867) * C252 -
             (C10648 * C853 + C50863 * C858) * C258 -
             (C10648 * C862 + C50863 * C868) * C253) *
                C7787 +
            ((C10648 * C971 + C50863 * C979) * C257 -
             (C11489 * C251 + C11488 * C256) +
             (C10648 * C975 + C50863 * C983) * C252 -
             (C10648 * C970 + C50863 * C978) * C258 -
             (C10648 * C974 + C50863 * C982) * C253) *
                C7788 +
            ((C10648 * C3322 + C50863 * C3328) * C257 -
             (C11491 * C251 + C11490 * C256) +
             (C10648 * C3325 + C50863 * C3331) * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C7789) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C51158 -
           ((C13465 * C7789 + (C11495 + C11494) * C7788 +
             ((C10648 * C860 + C50863 * C866) * C50882 +
              (C10648 * C851 + C50863 * C856) * C603) *
                 C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C50965) *
              C507 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            ((C11494 + C11495) * C7787 + (C11496 + C11497) * C7788 +
             (C11498 + C11499) * C7789) *
                C51065) *
               C50965 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C51158) *
              C508 +
          (((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
                C51171 +
            (C13315 * C7787 + C13467 * C7788 + (C11272 + C11273) * C7789) *
                C51065) *
               C51158 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C7789 +
             (C11499 + C11498) * C7788 + C13465 * C7787) *
                C51065 +
            ((C11273 + C11272) * C7789 + C11274 * C7788 + C11275 * C7787) *
                C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C7787 +
            (C11120 + C11121) * C7788 + C11132 * C7789) *
               C51171 +
           ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
               C51065) *
              C1051 -
          ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
               C51065 +
           (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
               C51171) *
              C1052 +
          (((C13802 + C13801) * C7787 + C13803 * C7788 + C13804 * C7789) *
               C51171 +
           ((C13933 + C13934) * C7787 + (C13817 + C13818) * C7788 +
            (C13819 + C13820) * C7789) *
               C51065) *
              C1053 -
          ((((C10648 * C13920 + C50863 * C13924) * C50882 +
             (C10648 * C13918 + C50863 * C13921) * C603) *
                C7789 +
            ((C10648 * C13922 + C50863 * C13925) * C50882 +
             (C10648 * C13919 + C50863 * C13923) * C603) *
                C7788 +
            ((C10648 * C6204 + C50863 * C6210) * C50882 +
             (C10648 * C6201 + C50863 * C6207) * C603) *
                C7787) *
               C51065 +
           ((C13820 + C13819) * C7789 + (C13818 + C13817) * C7788 +
            (C13934 + C13933) * C7787) *
               C51171) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C51027 * C21073 +
           (C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51027 *
               C21074 +
           (C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C51027 *
               C21075 +
           (C21274 + C21275 - C21276 - C21277 + C21284 + C21285) * C51027 *
               C21076) *
              C51158 +
          ((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C51027 *
               C21073 +
           (C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C51027 *
               C21074 +
           (C21276 - (C21275 + C21274) + C21277 - C21284 - C21285) * C51027 *
               C21075 +
           ((C10648 * C6200 + C50863 * C6206) * C257 -
            (C19511 * C251 + C19510 * C256) +
            (C10648 * C6203 + C50863 * C6209) * C252 -
            (C10648 * C6199 + C50863 * C6205) * C258 -
            (C10648 * C6202 + C50863 * C6208) * C253) *
               C51027 * C21076) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51027 * C21073 +
            (C13462 + C13463) * C51027 * C21074 + C19384 * C51027 * C21075 +
            (C13933 + C13934) * C51027 * C21076) *
               C51158 -
           ((C19514 + C19513) * C51027 * C21076 + C19504 * C51027 * C21075 +
            (C13801 + C13802) * C51027 * C21074 +
            (C13463 + C13462) * C51027 * C21073) *
               C50965) *
              C507 +
          ((C13464 * C51027 * C21073 + C13803 * C51027 * C21074 +
            C19387 * C51027 * C21075 + (C19399 + C19400) * C51027 * C21076) *
               C50965 -
           (C19386 * C51027 * C21076 + C13800 * C51027 * C21075 +
            C13466 * C51027 * C21074 + (C11121 + C11120) * C51027 * C21073) *
               C51158) *
              C508 +
          ((C11132 * C51027 * C21073 + C13315 * C51027 * C21074 +
            C13804 * C51027 * C21075 + (C13819 + C13820) * C51027 * C21076) *
               C51158 -
           (((C10648 * C13920 + C50863 * C13924) * C50882 +
             (C10648 * C13918 + C50863 * C13921) * C603) *
                C51027 * C21076 +
            (C13820 + C13819) * C51027 * C21075 + C13465 * C51027 * C21074 +
            C11275 * C51027 * C21073) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C51027 * C21073 +
           (C13462 + C13463) * C51027 * C21074 + C21759 * C21075 +
           C21763 * C21076) *
              C1051 -
          (C21840 * C21076 + C21835 * C21075 +
           (C13801 + C13802) * C51027 * C21074 +
           (C13463 + C13462) * C51027 * C21073) *
              C1052 +
          (C21759 * C21073 + C21763 * C21074 +
           (C19513 + C19514) * C51027 * C21075 +
           (C21843 + C21844) * C51027 * C21076) *
              C1053 -
          (((C10648 * C21830 + C50863 * C21832) * C50882 +
            (C10648 * C21829 + C50863 * C21831) * C603) *
               C51027 * C21076 +
           (C21844 + C21843) * C51027 * C21075 + C21840 * C21074 +
           C21835 * C21073) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C7787 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C7788 +
            (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C7789) *
               C51171 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C7787 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C7788 +
            (C14087 + C14088 - C14089 - C14090 + C14091 + C14092) * C7789) *
               C51065) *
              C1514 +
          (((C14605 - (C14604 + C14603) + C14606 - C14607 - C14608) * C7787 +
            (C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C7788 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C7789) *
               C51171 +
           ((C13638 * C1175 - (C13639 * C51201 + C13640 * C1174) +
             C13641 * C51187 - (C10648 * C853 + C50863 * C858) * C1176 -
             (C10648 * C862 + C50863 * C868) * C1171) *
                C7787 +
            (C13642 * C1175 - (C11489 * C51201 + C11488 * C1174) +
             C13643 * C51187 - (C10648 * C970 + C50863 * C978) * C1176 -
             (C10648 * C974 + C50863 * C982) * C1171) *
                C7788 +
            (C13644 * C1175 - (C11491 * C51201 + C11490 * C1174) +
             C13645 * C51187 - (C10648 * C3321 + C50863 * C3327) * C1176 -
             (C10648 * C3324 + C50863 * C3330) * C1171) *
                C7789) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1174 + (C5369 + C5370 + C5371) * C51201 -
            (C5372 + C5373 + C5374) * C1175 - (C5375 + C5376 + C5377) * C51187 +
            (C5378 + C5379 + C5380) * C1176 + (C5381 + C5382 + C5383) * C1171) *
               C51027 * C51065) *
              C1514 +
          (((C5374 + C5373 + C5372) * C1175 -
            ((C5371 + C5370 + C5369) * C51201 +
             (C5368 + C5367 + C5366) * C1174) +
            (C5377 + C5376 + C5375) * C51187 - (C5380 + C5379 + C5378) * C1176 -
            (C5383 + C5382 + C5381) * C1171) *
               C51027 * C51171 +
           ((C5944 + C5945 + C5946) * C1175 -
            ((C5947 + C5948 + C5949) * C51201 +
             (C5950 + C5951 + C5952) * C1174) +
            (C5953 + C5954 + C5955) * C51187 -
            (C2178 * C855 + C2173 * C864 + C2177 * C854 + C2172 * C859 +
             C2176 * C853 + C2171 * C858) *
                C1176 -
            (C2178 * C865 + C2173 * C870 + C2177 * C863 + C2172 * C869 +
             C2176 * C862 + C2171 * C868) *
                C1171) *
               C51027 * C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1174 +
            (C10648 * C136 + C50863 * C146) * C51201 -
            (C10648 * C126 + C50863 * C133) * C1175 -
            (C10648 * C137 + C50863 * C147) * C51187 +
            (C10648 * C127 + C50863 * C134) * C1176 +
            (C10648 * C138 + C50863 * C148) * C1171) *
               C51027 * C21073 +
           (C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C51027 *
               C21074 +
           (C20163 + C20164 - C20165 - C20166 + C20167 + C20168) * C51027 *
               C21075 +
           (C22269 + C22270 - C22271 - C22272 + C22273 + C22274) * C51027 *
               C21076) *
              C1514 +
          ((C14605 - (C14604 + C14603) + C14606 - C14607 - C14608) * C51027 *
               C21073 +
           (C20165 - (C20164 + C20163) + C20166 - C20167 - C20168) * C51027 *
               C21074 +
           (C22271 - (C22270 + C22269) + C22272 - C22273 - C22274) * C51027 *
               C21075 +
           (C21655 * C1175 - (C19511 * C51201 + C19510 * C1174) +
            C21656 * C51187 - (C10648 * C6199 + C50863 * C6205) * C1176 -
            (C10648 * C6202 + C50863 * C6208) * C1171) *
               C51027 * C21076) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C7787 +
             (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
                C51171 +
            ((C14436 + C14437 - C14438 - C14439) * C7787 + C14454 * C7788 +
             C14241 * C7789) *
                C51065) *
               C1514 +
           (((C14438 - (C14437 + C14436) + C14439) * C7787 + C14455 * C7788 +
             C14456 * C7789) *
                C51171 +
            ((C13638 * C1281 - (C13639 * C1275 + C13640 * C1280) +
              C13641 * C50887) *
                 C7787 +
             (C14443 - (C14444 + C14445) + C14446) * C7788 +
             (C14447 - (C14448 + C14449) + C14450) * C7789) *
                C51065) *
               C50965) *
              C51157 +
          ((((C11786 - (C11785 + C11784) + C11787) * C7787 +
             (C11790 - (C11789 + C11788) + C11791) * C7788 +
             (C11794 - (C11793 + C11792) + C11795) * C7789) *
                C51171 +
            (C14455 * C7787 + C14456 * C7788 +
             (C11964 - (C11950 + C11951) + C11965) * C7789) *
                C51065) *
               C1514 +
           ((C14454 * C7787 + C14241 * C7788 +
             (C11951 + C11950 - C11964 - C11965) * C7789) *
                C51171 +
            ((C14445 + C14444 - C14443 - C14446) * C7787 +
             (C14449 + C14448 - C14447 - C14450) * C7788 +
             (C11492 * C1280 + C11493 * C1275 -
              (C10648 * C8950 + C50863 * C8954) * C1281 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C7789) *
                C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
             (C5372 + C5373 + C5374) * C1281 -
             (C5375 + C5376 + C5377) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C5374 + C5373 + C5372) * C1281 -
             ((C5371 + C5370 + C5369) * C1275 +
              (C5368 + C5367 + C5366) * C1280) +
             (C5377 + C5376 + C5375) * C50887) *
                C51027 * C51171 +
            ((C5944 + C5945 + C5946) * C1281 -
             ((C5947 + C5948 + C5949) * C1275 +
              (C5950 + C5951 + C5952) * C1280) +
             (C5953 + C5954 + C5955) * C50887) *
                C51027 * C51065) *
               C50965) *
              C51157 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51027 * C51171 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C1280 + (C3349 + C3350 + C3351) * C1275 -
             (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
              C2176 * C971 + C2171 * C979) *
                 C1281 -
             (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
              C2176 * C975 + C2171 * C983) *
                 C50887) *
                C51027 * C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C51027 * C21073 +
            (C14436 + C14437 - C14438 - C14439) * C51027 * C21074 +
            C20516 * C51027 * C21075 +
            (C20513 + C20512 - C20511 - C20514) * C51027 * C21076) *
               C1514 +
           ((C14438 - (C14437 + C14436) + C14439) * C51027 * C21073 +
            (C14949 - (C14950 + C14951) + C14952) * C51027 * C21074 +
            (C20511 - (C20512 + C20513) + C20514) * C51027 * C21075 +
            (C21655 * C1281 - (C19511 * C1275 + C19510 * C1280) +
             C21656 * C50887) *
                C51027 * C21076) *
               C50965) *
              C51157 +
          (((C11786 - (C11785 + C11784) + C11787) * C51027 * C21073 +
            C14455 * C51027 * C21074 + C20016 * C51027 * C21075 +
            (C20009 - (C20010 + C20011) + C20012) * C51027 * C21076) *
               C1514 +
           (C14454 * C51027 * C21073 + C20015 * C51027 * C21074 +
            (C20011 + C20010 - C20009 - C20012) * C51027 * C21075 +
            (C19395 * C1280 + C19396 * C1275 -
             (C10648 * C16630 + C50863 * C16632) * C1281 -
             (C10648 * C16631 + C50863 * C16633) * C50887) *
                C51027 * C21076) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
               C51171 +
           ((C14436 + C14437 - C14438 - C14439) * C7787 + C14454 * C7788 +
            C14241 * C7789) *
               C51065) *
              C51203 +
          (((C14438 - (C14437 + C14436) + C14439) * C7787 + C14455 * C7788 +
            C14456 * C7789) *
               C51171 +
           ((C14949 - (C14950 + C14951) + C14952) * C7787 +
            (C14443 - (C14444 + C14445) + C14446) * C7788 +
            (C14447 - (C14448 + C14449) + C14450) * C7789) *
               C51065) *
              C51193 +
          (((C14951 + C14950 - C14949 - C14952) * C7787 +
            (C14445 + C14444 - C14443 - C14446) * C7788 +
            (C14449 + C14448 - C14447 - C14450) * C7789) *
               C51171 +
           ((C13931 * C1280 + C13932 * C1275 -
             (C10648 * C1057 + C50863 * C1065) * C1281 -
             (C10648 * C1061 + C50863 * C1069) * C50887) *
                C7787 +
            (C13813 * C1280 + C13814 * C1275 -
             (C10648 * C3450 + C50863 * C3456) * C1281 -
             (C10648 * C3453 + C50863 * C3459) * C50887) *
                C7788 +
            (C13815 * C1280 + C13816 * C1275 -
             (C10648 * C9080 + C50863 * C9084) * C1281 -
             (C10648 * C9082 + C50863 * C9086) * C50887) *
                C7789) *
               C51065) *
              C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
            (C5372 + C5373 + C5374) * C1281 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C51203 +
          (((C5374 + C5373 + C5372) * C1281 -
            ((C5371 + C5370 + C5369) * C1275 +
             (C5368 + C5367 + C5366) * C1280) +
            (C5377 + C5376 + C5375) * C50887) *
               C51027 * C51171 +
           ((C5944 + C5945 + C5946) * C1281 -
            ((C5947 + C5948 + C5949) * C1275 +
             (C5950 + C5951 + C5952) * C1280) +
            (C5953 + C5954 + C5955) * C50887) *
               C51027 * C51065) *
              C51193 +
          (((C5952 + C5951 + C5950) * C1280 + (C5949 + C5948 + C5947) * C1275 -
            (C5946 + C5945 + C5944) * C1281 -
            (C5955 + C5954 + C5953) * C50887) *
               C51027 * C51171 +
           ((C6224 + C6225 + C6226) * C1280 + (C6227 + C6228 + C6229) * C1275 -
            (C2178 * C1055 + C2173 * C1063 + C2177 * C1056 + C2172 * C1064 +
             C2176 * C1057 + C2171 * C1065) *
                C1281 -
            (C2178 * C1059 + C2173 * C1067 + C2177 * C1060 + C2172 * C1068 +
             C2176 * C1061 + C2171 * C1069) *
                C50887) *
               C51027 * C51065) *
              C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1280 +
            (C10648 * C136 + C50863 * C146) * C1275 -
            (C10648 * C126 + C50863 * C133) * C1281 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C51027 * C21073 +
           (C14436 + C14437 - C14438 - C14439) * C51027 * C21074 +
           C22503 * C21075 + C22511 * C21076) *
              C51203 +
          ((C14438 - (C14437 + C14436) + C14439) * C51027 * C21073 +
           (C14949 - (C14950 + C14951) + C14952) * C51027 * C21074 +
           (C20511 - (C20512 + C20513) + C20514) * C51027 * C21075 +
           (C22505 - (C22506 + C22507) + C22508) * C51027 * C21076) *
              C51193 +
          (C22503 * C21073 + C22511 * C21074 +
           (C22507 + C22506 - C22505 - C22508) * C51027 * C21075 +
           (C21841 * C1280 + C21842 * C1275 -
            (C10648 * C16754 + C50863 * C16758) * C1281 -
            (C10648 * C16756 + C50863 * C16760) * C50887) *
               C51027 * C21076) *
              C1746) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51149 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C50007 +
            (C5369 + C5370 + C5371) * C51149 -
            (C5372 + C5373 + C5374) * C50000 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C50953 * C507 +
          (((C2370 + C2369 + C2368) * C50000 -
            ((C2367 + C2366 + C2365) * C51149 +
             (C2364 + C2363 + C2362) * C50007) +
            (C2373 + C2372 + C2371) * C50887) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C50000 -
            ((C3018 + C3019 + C3020) * C51149 +
             (C3021 + C3022 + C3023) * C50007) +
            (C3963 + C3964 + C3965) * C50887) *
               C51027 * C51065) *
              C50953 * C508 +
          (((C2704 + C2703 + C2702) * C50007 +
            (C2701 + C2700 + C2699) * C51149 -
            (C2698 + C2697 + C2696) * C50000 -
            (C2707 + C2706 + C2705) * C50887) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C50007 +
            (C3027 + C3028 + C3029) * C51149 -
            (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
             C2176 * C724 + C2171 * C740) *
                C50000 -
            (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
             C2176 * C736 + C2171 * C748) *
                C50887) *
               C51027 * C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
            C2178 * C127 + C2173 * C134) *
               C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
            C2178 * C138 + C2173 * C148) *
               C109 -
           (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
            C2176 * C126 + C2171 * C133) *
               C122 -
           (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
            C2176 * C137 + C2171 * C147) *
               C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
            C2178 * C129 + C2173 * C140) *
               C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
            C2178 * C141 + C2173 * C150) *
               C111 -
           (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
            C2176 * C128 + C2171 * C135) *
               C124 -
           (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
            C2176 * C139 + C2171 * C149) *
               C112) *
              C51027 * C51171 +
          ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
            C2178 * C384 + C2173 * C390) *
               C121 +
           (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
            C2178 * C394 + C2173 * C402) *
               C109 -
           (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
            C2176 * C383 + C2171 * C389) *
               C122 -
           (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
            C2176 * C395 + C2171 * C403) *
               C110 +
           (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
            C2178 * C386 + C2173 * C392) *
               C123 +
           (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
            C2178 * C398 + C2173 * C405) *
               C111 -
           (C2178 * C388 + C2173 * C399 + C2177 * C386 + C2172 * C392 +
            C2176 * C385 + C2171 * C391) *
               C124 -
           (C2178 * C400 + C2173 * C406 + C2177 * C398 + C2172 * C405 +
            C2176 * C393 + C2171 * C401) *
               C112) *
              C51027 * C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C7787 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C7788 +
           (C10790 * C121 + C10791 * C109 - C10792 * C122 - C10793 * C110 +
            C10794 * C123 + C10795 * C111 -
            (C10648 * C515 + C50863 * C520) * C124 -
            (C10648 * C524 + C50863 * C530) * C112) *
               C7789) *
              C51171 +
          (((C10648 * C387 + C50863 * C397) * C121 +
            (C10648 * C396 + C50863 * C404) * C109 -
            (C10648 * C383 + C50863 * C389) * C122 -
            (C10648 * C395 + C50863 * C403) * C110 +
            (C10648 * C384 + C50863 * C390) * C123 +
            (C10648 * C394 + C50863 * C402) * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C7787 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            (C10648 * C720 + C50863 * C728) * C123 +
            (C10648 * C732 + C50863 * C744) * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C7788 +
           (C11261 * C121 + C11260 * C109 - C11956 * C122 - C11957 * C110 +
            (C10648 * C723 + C50863 * C739) * C123 +
            (C10648 * C735 + C50863 * C747) * C111 -
            (C10648 * C722 + C50863 * C738) * C124 -
            (C10648 * C734 + C50863 * C746) * C112) *
               C7789) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
               C51171 +
           ((C13056 * C50007 + C13057 * C51149 - C13058 * C50000 -
             C13059 * C50887) *
                C7787 +
            (C12424 + C12423 - C12422 - C12425) * C7788 + C13216 * C7789) *
               C51065) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C7787 +
            (C11022 - (C11021 + C11020) + C11023) * C7788 +
            (C11026 - (C11025 + C11024) + C11027) * C7789) *
               C51171 +
           ((C12422 - (C12423 + C12424) + C12425) * C7787 +
            (C12426 - (C12427 + C12428) + C12429) * C7788 +
            (C12430 - (C12431 + C12432) + C12433) * C7789) *
               C51065) *
              C50953 * C508 +
          ((C11048 * C7787 + C11049 * C7788 +
            (C11046 + C11045 - C11044 - C11047) * C7789) *
               C51171 +
           (C13216 * C7787 + (C12432 + C12431 - C12430 - C12433) * C7788 +
            (C11264 * C50007 + C11265 * C51149 -
             (C10648 * C8609 + C50863 * C8613) * C50000 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C7789) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C10648 * C125 + C50863 * C132) * C121 +
           (C10648 * C136 + C50863 * C146) * C109 -
           (C10648 * C126 + C50863 * C133) * C122 -
           (C10648 * C137 + C50863 * C147) * C110 +
           (C10648 * C127 + C50863 * C134) * C123 +
           (C10648 * C138 + C50863 * C148) * C111 -
           (C10648 * C128 + C50863 * C135) * C124 -
           (C10648 * C139 + C50863 * C149) * C112) *
              C51027 * C21073 +
          (C13056 * C121 + C13057 * C109 - C13058 * C122 - C13059 * C110 +
           C13060 * C123 + C13061 * C111 -
           (C10648 * C385 + C50863 * C391) * C124 -
           (C10648 * C393 + C50863 * C401) * C112) *
              C51027 * C21074 +
          (C13640 * C121 + C13639 * C109 - C13638 * C122 - C13641 * C110 +
           C18669 * C123 + C18670 * C111 -
           (C10648 * C854 + C50863 * C859) * C124 -
           (C10648 * C863 + C50863 * C869) * C112) *
              C51027 * C21075 +
          (C13931 * C121 + C13932 * C109 - C19225 * C122 - C19226 * C110 +
           (C10648 * C1056 + C50863 * C1064) * C123 +
           (C10648 * C1060 + C50863 * C1068) * C111 -
           (C10648 * C1055 + C50863 * C1063) * C124 -
           (C10648 * C1059 + C50863 * C1067) * C112) *
              C51027 * C21076) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C50007 +
            (C10648 * C136 + C50863 * C146) * C51149 -
            (C10648 * C126 + C50863 * C133) * C50000 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C51027 * C21073 +
           (C13614 + C13615 - C13616 - C13617) * C51027 * C21074 +
           C19229 * C51027 * C21075 +
           (C19214 + C19213 - C19231 - C19232) * C51027 * C21076) *
              C50953 * C507 +
          ((C11018 - (C11017 + C11016) + C11019) * C51027 * C21073 +
           C15154 * C51027 * C21074 + C20715 * C51027 * C21075 +
           (C19233 - (C19219 + C19220) + C19234) * C51027 * C21076) *
              C50953 * C508 +
          (C11048 * C51027 * C21073 + C13216 * C51027 * C21074 +
           (C13635 + C13634 - C13652 - C13653) * C51027 * C21075 +
           (C13815 * C50007 + C13816 * C51149 -
            (C10648 * C9080 + C50863 * C9084) * C50000 -
            (C10648 * C9082 + C50863 * C9086) * C50887) *
               C51027 * C21076) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C603 + (C5369 + C5370 + C5371) * C50882) *
               C51027 * C51065) *
              C50953 * C599 -
          (((C3018 + C3019 + C3020) * C50882 + (C3021 + C3022 + C3023) * C603) *
               C51027 * C51065 +
           ((C2367 + C2366 + C2365) * C50882 + (C2364 + C2363 + C2362) * C603) *
               C51027 * C51171) *
              C50953 * C600 +
          (((C2704 + C2703 + C2702) * C603 + (C2701 + C2700 + C2699) * C50882) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C603 + (C3027 + C3028 + C3029) * C50882) *
               C51027 * C51065) *
              C50953 * C601 -
          (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
             C2176 * C2986 + C2171 * C2992) *
                C50882 +
            (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
             C2176 * C2983 + C2171 * C2989) *
                C603) *
               C51027 * C51065 +
           ((C2835 + C2834 + C2833) * C50882 + (C2832 + C2831 + C2830) * C603) *
               C51027 * C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51027 * C51171 +
           ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
             C2178 * C384 + C2173 * C390) *
                C256 +
            (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
             C2178 * C394 + C2173 * C402) *
                C251 -
            (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
             C2176 * C383 + C2171 * C389) *
                C257 -
            (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
             C2176 * C395 + C2171 * C403) *
                C252 +
            (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
             C2178 * C386 + C2173 * C392) *
                C258 +
            (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
             C2178 * C398 + C2173 * C405) *
                C253) *
               C51027 * C51065) *
              C50953 * C51157 +
          (((C2370 + C2369 + C2368) * C257 -
            ((C2367 + C2366 + C2365) * C251 + (C2364 + C2363 + C2362) * C256) +
            (C2373 + C2372 + C2371) * C252 - (C2376 + C2375 + C2374) * C258 -
            (C2379 + C2378 + C2377) * C253) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C257 -
            ((C3018 + C3019 + C3020) * C251 + (C3021 + C3022 + C3023) * C256) +
            (C3963 + C3964 + C3965) * C252 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C258 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C253) *
               C51027 * C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           (((C10648 * C387 + C50863 * C397) * C256 +
             (C10648 * C396 + C50863 * C404) * C251 -
             (C10648 * C383 + C50863 * C389) * C257 -
             (C10648 * C395 + C50863 * C403) * C252 +
             (C10648 * C384 + C50863 * C390) * C258 +
             (C10648 * C394 + C50863 * C402) * C253) *
                C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C7787 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C7788 +
            (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C7789) *
               C51171 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7787 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7788 +
            (C11958 * C257 - (C11258 * C251 + C11259 * C256) + C11959 * C252 -
             (C10648 * C2981 + C50863 * C2987) * C258 -
             (C10648 * C2984 + C50863 * C2990) * C253) *
                C7789) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C7787 +
            (C11120 + C11121) * C7788 + C11132 * C7789) *
               C51171 +
           ((C13056 * C603 + C13057 * C50882) * C7787 +
            (C11271 + C11270) * C7788 + C13315 * C7789) *
               C51065) *
              C50953 * C599 -
          ((C11274 * C7789 + C11275 * C7788 + (C11270 + C11271) * C7787) *
               C51065 +
           (C11135 * C7789 + (C11123 + C11122) * C7788 +
            (C11121 + C11120) * C7787) *
               C51171) *
              C50953 * C600 +
          ((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
               C51171 +
           (C13315 * C7787 + (C11267 + C11266) * C7788 +
            (C11272 + C11273) * C7789) *
               C51065) *
              C50953 * C601 -
          ((((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C7789 +
            (C11273 + C11272) * C7788 + C11274 * C7787) *
               C51065 +
           ((C11139 + C11138) * C7789 + C11134 * C7788 + C11135 * C7787) *
               C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C51027 * C21073 +
           (C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51027 *
               C21074 +
           (C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C51027 *
               C21075 +
           (C13931 * C256 + C13932 * C251 - C19225 * C257 - C19226 * C252 +
            (C10648 * C1056 + C50863 * C1064) * C258 +
            (C10648 * C1060 + C50863 * C1068) * C253) *
               C51027 * C21076) *
              C50953 * C51157 +
          ((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C51027 *
               C21073 +
           (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C51027 *
               C21074 +
           (C18505 - (C18504 + C18503) + C18506 - C18513 - C18514) * C51027 *
               C21075 +
           (C19227 * C257 - (C13814 * C251 + C13813 * C256) + C19228 * C252 -
            (C10648 * C3449 + C50863 * C3455) * C258 -
            (C10648 * C3452 + C50863 * C3458) * C253) *
               C51027 * C21076) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C51027 * C21073 +
           (C13462 + C13463) * C51027 * C21074 + C19384 * C51027 * C21075 +
           (C13933 + C13934) * C51027 * C21076) *
              C50953 * C599 -
          (C19386 * C51027 * C21076 + C13800 * C51027 * C21075 +
           C13466 * C51027 * C21074 + (C11121 + C11120) * C51027 * C21073) *
              C50953 * C600 +
          (C11132 * C51027 * C21073 + C13315 * C51027 * C21074 +
           C13804 * C51027 * C21075 + (C13819 + C13820) * C51027 * C21076) *
              C50953 * C601 -
          (((C10648 * C11566 + C50863 * C11568) * C50882 +
            (C10648 * C11565 + C50863 * C11567) * C603) *
               C51027 * C21076 +
           (C11499 + C11498) * C51027 * C21075 + C11274 * C51027 * C21074 +
           C11135 * C51027 * C21073) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C51158 -
           (((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
              C2176 * C860 + C2171 * C866) *
                 C50882 +
             (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
              C2176 * C851 + C2171 * C856) *
                 C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C50965) *
              C507 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C50965 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C51158) *
              C508 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51027 * C51171 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51027 * C51065) *
               C51158 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51027 * C51065 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51027 * C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C256 + (C5369 + C5370 + C5371) * C251 -
            (C5372 + C5373 + C5374) * C257 - (C5375 + C5376 + C5377) * C252 +
            (C5378 + C5379 + C5380) * C258 + (C5381 + C5382 + C5383) * C253) *
               C51027 * C51065) *
              C51158 +
          (((C5374 + C5373 + C5372) * C257 -
            ((C5371 + C5370 + C5369) * C251 + (C5368 + C5367 + C5366) * C256) +
            (C5377 + C5376 + C5375) * C252 - (C5380 + C5379 + C5378) * C258 -
            (C5383 + C5382 + C5381) * C253) *
               C51027 * C51171 +
           ((C2176 * C852 + C2171 * C857 + C2177 * C853 + C2172 * C858 +
             C2178 * C854 + C2173 * C859) *
                C257 -
            ((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
              C2176 * C860 + C2171 * C866) *
                 C251 +
             (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
              C2176 * C851 + C2171 * C856) *
                 C256) +
            (C2176 * C861 + C2171 * C867 + C2177 * C862 + C2172 * C868 +
             C2178 * C863 + C2173 * C869) *
                C252 -
            (C2178 * C855 + C2173 * C864 + C2177 * C854 + C2172 * C859 +
             C2176 * C853 + C2171 * C858) *
                C258 -
            (C2178 * C865 + C2173 * C870 + C2177 * C863 + C2172 * C869 +
             C2176 * C862 + C2171 * C868) *
                C253) *
               C51027 * C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C7787 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7788 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7789) *
               C51171 +
           (((C10648 * C852 + C50863 * C857) * C257 -
             ((C10648 * C860 + C50863 * C866) * C251 +
              (C10648 * C851 + C50863 * C856) * C256) +
             (C10648 * C861 + C50863 * C867) * C252 -
             (C10648 * C853 + C50863 * C858) * C258 -
             (C10648 * C862 + C50863 * C868) * C253) *
                C7787 +
            ((C10648 * C971 + C50863 * C979) * C257 -
             (C11489 * C251 + C11488 * C256) +
             (C10648 * C975 + C50863 * C983) * C252 -
             (C10648 * C970 + C50863 * C978) * C258 -
             (C10648 * C974 + C50863 * C982) * C253) *
                C7788 +
            ((C10648 * C3322 + C50863 * C3328) * C257 -
             (C11491 * C251 + C11490 * C256) +
             (C10648 * C3325 + C50863 * C3331) * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C7789) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C51158 -
           ((C13465 * C7789 + (C11495 + C11494) * C7788 +
             ((C10648 * C860 + C50863 * C866) * C50882 +
              (C10648 * C851 + C50863 * C856) * C603) *
                 C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C50965) *
              C507 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            ((C11494 + C11495) * C7787 + (C11496 + C11497) * C7788 +
             (C11498 + C11499) * C7789) *
                C51065) *
               C50965 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C51158) *
              C508 +
          (((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
                C51171 +
            (C13315 * C7787 + C13467 * C7788 + (C11272 + C11273) * C7789) *
                C51065) *
               C51158 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C7789 +
             (C11499 + C11498) * C7788 + C13465 * C7787) *
                C51065 +
            ((C11273 + C11272) * C7789 + C11274 * C7788 + C11275 * C7787) *
                C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C51027 * C21073 +
           (C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C51027 *
               C21074 +
           (C18661 + C18662 - C18663 - C18664 + C18671 + C18672) * C51027 *
               C21075 +
           (C21274 + C21275 - C21276 - C21277 + C21284 + C21285) * C51027 *
               C21076) *
              C51158 +
          ((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C51027 *
               C21073 +
           (C18663 - (C18662 + C18661) + C18664 - C18671 - C18672) * C51027 *
               C21074 +
           (C21276 - (C21275 + C21274) + C21277 - C21284 - C21285) * C51027 *
               C21075 +
           ((C10648 * C6200 + C50863 * C6206) * C257 -
            (C19511 * C251 + C19510 * C256) +
            (C10648 * C6203 + C50863 * C6209) * C252 -
            (C10648 * C6199 + C50863 * C6205) * C258 -
            (C10648 * C6202 + C50863 * C6208) * C253) *
               C51027 * C21076) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C51027 * C21073 +
            (C13462 + C13463) * C51027 * C21074 + C19384 * C51027 * C21075 +
            (C13933 + C13934) * C51027 * C21076) *
               C51158 -
           ((C19514 + C19513) * C51027 * C21076 + C19504 * C51027 * C21075 +
            (C13801 + C13802) * C51027 * C21074 +
            (C13463 + C13462) * C51027 * C21073) *
               C50965) *
              C507 +
          ((C13464 * C51027 * C21073 + C13803 * C51027 * C21074 +
            C19387 * C51027 * C21075 + (C19399 + C19400) * C51027 * C21076) *
               C50965 -
           (C19386 * C51027 * C21076 + C13800 * C51027 * C21075 +
            C13466 * C51027 * C21074 + (C11121 + C11120) * C51027 * C21073) *
               C51158) *
              C508 +
          ((C11132 * C51027 * C21073 + C13315 * C51027 * C21074 +
            C13804 * C51027 * C21075 + (C13819 + C13820) * C51027 * C21076) *
               C51158 -
           (((C10648 * C13920 + C50863 * C13924) * C50882 +
             (C10648 * C13918 + C50863 * C13921) * C603) *
                C51027 * C21076 +
            (C13820 + C13819) * C51027 * C21075 + C13465 * C51027 * C21074 +
            C11275 * C51027 * C21073) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C1174 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C51201 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C1175 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C51187 +
                     (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                      C51184 * C135 + C22942 * C129 + C22937 * C140) *
                         C1176 +
                     (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                      C51184 * C149 + C22942 * C141 + C22937 * C150) *
                         C1171) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C1174 +
                     (C32600 + C32601 + C32602) * C51201 -
                     (C32603 + C32604 + C32605) * C1175 -
                     (C32606 + C32607 + C32608) * C51187 +
                     (C32609 + C32610 + C32611) * C1176 +
                     (C32612 + C32613 + C32614) * C1171) *
                        C51027 * C51065) *
                       C50953 * C1172 +
                   (((C23134 + C23133 + C23132) * C1175 -
                     ((C23131 + C23130 + C23129) * C51201 +
                      (C23128 + C23127 + C23126) * C1174) +
                     (C23137 + C23136 + C23135) * C51187 -
                     (C23140 + C23139 + C23138) * C1176 -
                     (C23143 + C23142 + C23141) * C1171) *
                        C51027 * C32266 +
                    ((C24676 + C24677 + C24678) * C1175 -
                     ((C23758 + C23759 + C23760) * C51201 +
                      (C23761 + C23762 + C23763) * C1174) +
                     (C24679 + C24680 + C24681) * C51187 -
                     (C22942 * C1412 + C22937 * C1413 + C22941 * C721 +
                      C51184 * C729 + C22940 * C720 + C51200 * C728) *
                         C1176 -
                     (C22942 * C1414 + C22937 * C1415 + C22941 * C733 +
                      C51184 * C745 + C22940 * C732 + C51200 * C744) *
                         C1171) *
                        C51027 * C51065) *
                       C50953 * C50941)) /
                 (p * q * std::sqrt(p + q));
    d2ee[136] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C1280 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C1275 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C1281 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C50887) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C1280 +
                     (C32600 + C32601 + C32602) * C1275 -
                     (C32603 + C32604 + C32605) * C1281 -
                     (C32606 + C32607 + C32608) * C50887) *
                        C51027 * C51065) *
                       C50953 * C51202 +
                   (((C23134 + C23133 + C23132) * C1281 -
                     ((C23131 + C23130 + C23129) * C1275 +
                      (C23128 + C23127 + C23126) * C1280) +
                     (C23137 + C23136 + C23135) * C50887) *
                        C51027 * C32266 +
                    ((C24676 + C24677 + C24678) * C1281 -
                     ((C23758 + C23759 + C23760) * C1275 +
                      (C23761 + C23762 + C23763) * C1280) +
                     (C24679 + C24680 + C24681) * C50887) *
                        C51027 * C51065) *
                       C50953 * C51190 +
                   (((C23468 + C23467 + C23466) * C1280 +
                     (C23465 + C23464 + C23463) * C1275 -
                     (C23462 + C23461 + C23460) * C1281 -
                     (C23471 + C23470 + C23469) * C50887) *
                        C51027 * C32266 +
                    ((C23764 + C23765 + C23766) * C1280 +
                     (C23767 + C23768 + C23769) * C1275 -
                     (C22942 * C722 + C22937 * C738 + C22941 * C723 +
                      C51184 * C739 + C22940 * C724 + C51200 * C740) *
                         C1281 -
                     (C22942 * C734 + C22937 * C746 + C22941 * C735 +
                      C51184 * C747 + C22940 * C736 + C51200 * C748) *
                         C50887) *
                        C51027 * C51065) *
                       C50953 * C1279)) /
                 (p * q * std::sqrt(p + q));
    d2ee[137] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C1280 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C1275 -
                      (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                       C51184 * C134 + C22940 * C126 + C51200 * C133) *
                          C1281 -
                      (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                       C51184 * C148 + C22940 * C137 + C51200 * C147) *
                          C50887) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C1280 +
                      (C32600 + C32601 + C32602) * C1275 -
                      (C32603 + C32604 + C32605) * C1281 -
                      (C32606 + C32607 + C32608) * C50887) *
                         C51027 * C51065) *
                        C51158 +
                    (((C32605 + C32604 + C32603) * C1281 -
                      ((C32602 + C32601 + C32600) * C1275 +
                       (C32599 + C32598 + C32597) * C1280) +
                      (C32608 + C32607 + C32606) * C50887) *
                         C51027 * C32266 +
                     ((C33175 + C33176 + C33177) * C1281 -
                      ((C33178 + C33179 + C33180) * C1275 +
                       (C33181 + C33182 + C33183) * C1280) +
                      (C33184 + C33185 + C33186) * C50887) *
                         C51027 * C51065) *
                        C50965) *
                       C1172 +
                   ((((C23134 + C23133 + C23132) * C1281 -
                      ((C23131 + C23130 + C23129) * C1275 +
                       (C23128 + C23127 + C23126) * C1280) +
                      (C23137 + C23136 + C23135) * C50887) *
                         C51027 * C32266 +
                     ((C24676 + C24677 + C24678) * C1281 -
                      ((C23758 + C23759 + C23760) * C1275 +
                       (C23761 + C23762 + C23763) * C1280) +
                      (C24679 + C24680 + C24681) * C50887) *
                         C51027 * C51065) *
                        C51158 +
                    (((C23763 + C23762 + C23761) * C1280 +
                      (C23760 + C23759 + C23758) * C1275 -
                      (C24678 + C24677 + C24676) * C1281 -
                      (C24681 + C24680 + C24679) * C50887) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C1280 +
                      (C24077 + C24078 + C24079) * C1275 -
                      (C22942 * C969 + C22937 * C977 + C22941 * C970 +
                       C51184 * C978 + C22940 * C971 + C51200 * C979) *
                          C1281 -
                      (C22942 * C973 + C22937 * C981 + C22941 * C974 +
                       C51184 * C982 + C22940 * C975 + C51200 * C983) *
                          C50887) *
                         C51027 * C51065) *
                        C50965) *
                       C50941)) /
                 (p * q * std::sqrt(p + q));
    d2ee[138] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C50007 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C51149 -
                      (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                       C51184 * C134 + C22940 * C126 + C51200 * C133) *
                          C50000 -
                      (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                       C51184 * C148 + C22940 * C137 + C51200 * C147) *
                          C50887) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C50007 +
                      (C32600 + C32601 + C32602) * C51149 -
                      (C32603 + C32604 + C32605) * C50000 -
                      (C32606 + C32607 + C32608) * C50887) *
                         C51027 * C51065) *
                        C1514 +
                    (((C32605 + C32604 + C32603) * C50000 -
                      ((C32602 + C32601 + C32600) * C51149 +
                       (C32599 + C32598 + C32597) * C50007) +
                      (C32608 + C32607 + C32606) * C50887) *
                         C51027 * C32266 +
                     ((C33175 + C33176 + C33177) * C50000 -
                      ((C33178 + C33179 + C33180) * C51149 +
                       (C33181 + C33182 + C33183) * C50007) +
                      (C33184 + C33185 + C33186) * C50887) *
                         C51027 * C51065) *
                        C50965) *
                       C1172 +
                   ((((C23134 + C23133 + C23132) * C50000 -
                      ((C23131 + C23130 + C23129) * C51149 +
                       (C23128 + C23127 + C23126) * C50007) +
                      (C23137 + C23136 + C23135) * C50887) *
                         C51027 * C32266 +
                     ((C24676 + C24677 + C24678) * C50000 -
                      ((C23758 + C23759 + C23760) * C51149 +
                       (C23761 + C23762 + C23763) * C50007) +
                      (C24679 + C24680 + C24681) * C50887) *
                         C51027 * C51065) *
                        C1514 +
                    (((C23763 + C23762 + C23761) * C50007 +
                      (C23760 + C23759 + C23758) * C51149 -
                      (C24678 + C24677 + C24676) * C50000 -
                      (C24681 + C24680 + C24679) * C50887) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C50007 +
                      (C24077 + C24078 + C24079) * C51149 -
                      (C22942 * C969 + C22937 * C977 + C22941 * C970 +
                       C51184 * C978 + C22940 * C971 + C51200 * C979) *
                          C50000 -
                      (C22942 * C973 + C22937 * C981 + C22941 * C974 +
                       C51184 * C982 + C22940 * C975 + C51200 * C983) *
                          C50887) *
                         C51027 * C51065) *
                        C50965) *
                       C50941)) /
                 (p * q * std::sqrt(p + q));
    d2ee[139] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C603 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C50882) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C603 +
                      (C32600 + C32601 + C32602) * C50882) *
                         C51027 * C51065) *
                        C1514 -
                    (((C33178 + C33179 + C33180) * C50882 +
                      (C33181 + C33182 + C33183) * C603) *
                         C51027 * C51065 +
                     ((C32602 + C32601 + C32600) * C50882 +
                      (C32599 + C32598 + C32597) * C603) *
                         C51027 * C32266) *
                        C50965) *
                       C51202 +
                   ((((C23763 + C23762 + C23761) * C603 +
                      (C23760 + C23759 + C23758) * C50882) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C603 +
                      (C24077 + C24078 + C24079) * C50882) *
                         C51027 * C51065) *
                        C50965 -
                    (((C23758 + C23759 + C23760) * C50882 +
                      (C23761 + C23762 + C23763) * C603) *
                         C51027 * C51065 +
                     ((C23131 + C23130 + C23129) * C50882 +
                      (C23128 + C23127 + C23126) * C603) *
                         C51027 * C32266) *
                        C1514) *
                       C51190 +
                   ((((C23468 + C23467 + C23466) * C603 +
                      (C23465 + C23464 + C23463) * C50882) *
                         C51027 * C32266 +
                     ((C23764 + C23765 + C23766) * C603 +
                      (C23767 + C23768 + C23769) * C50882) *
                         C51027 * C51065) *
                        C1514 -
                    (((C22942 * C3324 + C22937 * C3330 + C22941 * C3325 +
                       C51184 * C3331 + C22940 * C3326 + C51200 * C3332) *
                          C50882 +
                      (C22942 * C3321 + C22937 * C3327 + C22941 * C3322 +
                       C51184 * C3328 + C22940 * C3323 + C51200 * C3329) *
                          C603) *
                         C51027 * C51065 +
                     ((C23769 + C23768 + C23767) * C50882 +
                      (C23766 + C23765 + C23764) * C603) *
                         C51027 * C32266) *
                        C50965) *
                       C1279)) /
                 (p * q * std::sqrt(p + q));
    d2ee[140] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C603 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C50882) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C603 +
                      (C32600 + C32601 + C32602) * C50882) *
                         C51027 * C51065) *
                        C51203 -
                    (((C33178 + C33179 + C33180) * C50882 +
                      (C33181 + C33182 + C33183) * C603) *
                         C51027 * C51065 +
                     ((C32602 + C32601 + C32600) * C50882 +
                      (C32599 + C32598 + C32597) * C603) *
                         C51027 * C32266) *
                        C51193 +
                    (((C33183 + C33182 + C33181) * C603 +
                      (C33180 + C33179 + C33178) * C50882) *
                         C51027 * C32266 +
                     ((C33443 + C33444 + C33445) * C603 +
                      (C33446 + C33447 + C33448) * C50882) *
                         C51027 * C51065) *
                        C1746) *
                       C1172 +
                   ((((C23763 + C23762 + C23761) * C603 +
                      (C23760 + C23759 + C23758) * C50882) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C603 +
                      (C24077 + C24078 + C24079) * C50882) *
                         C51027 * C51065) *
                        C51193 -
                    (((C23758 + C23759 + C23760) * C50882 +
                      (C23761 + C23762 + C23763) * C603) *
                         C51027 * C51065 +
                     ((C23131 + C23130 + C23129) * C50882 +
                      (C23128 + C23127 + C23126) * C603) *
                         C51027 * C32266) *
                        C51203 -
                    (((C22942 * C3452 + C22937 * C3458 + C22941 * C3453 +
                       C51184 * C3459 + C22940 * C3454 + C51200 * C3460) *
                          C50882 +
                      (C22942 * C3449 + C22937 * C3455 + C22941 * C3450 +
                       C51184 * C3456 + C22940 * C3451 + C51200 * C3457) *
                          C603) *
                         C51027 * C51065 +
                     ((C24079 + C24078 + C24077) * C50882 +
                      (C24076 + C24075 + C24074) * C603) *
                         C51027 * C32266) *
                        C1746) *
                       C50941)) /
                 (p * q * std::sqrt(p + q));
    d2ee[141] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C50007 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C51149 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C50000 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C50887) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C50007 +
                     (C32600 + C32601 + C32602) * C51149 -
                     (C32603 + C32604 + C32605) * C50000 -
                     (C32606 + C32607 + C32608) * C50887) *
                        C51027 * C51065) *
                       C50953 * C507 +
                   (((C23134 + C23133 + C23132) * C50000 -
                     ((C23131 + C23130 + C23129) * C51149 +
                      (C23128 + C23127 + C23126) * C50007) +
                     (C23137 + C23136 + C23135) * C50887) *
                        C51027 * C32266 +
                    ((C24676 + C24677 + C24678) * C50000 -
                     ((C23758 + C23759 + C23760) * C51149 +
                      (C23761 + C23762 + C23763) * C50007) +
                     (C24679 + C24680 + C24681) * C50887) *
                        C51027 * C51065) *
                       C50953 * C508 +
                   (((C23468 + C23467 + C23466) * C50007 +
                     (C23465 + C23464 + C23463) * C51149 -
                     (C23462 + C23461 + C23460) * C50000 -
                     (C23471 + C23470 + C23469) * C50887) *
                        C51027 * C32266 +
                    ((C23764 + C23765 + C23766) * C50007 +
                     (C23767 + C23768 + C23769) * C51149 -
                     (C22942 * C722 + C22937 * C738 + C22941 * C723 +
                      C51184 * C739 + C22940 * C724 + C51200 * C740) *
                         C50000 -
                     (C22942 * C734 + C22937 * C746 + C22941 * C735 +
                      C51184 * C747 + C22940 * C736 + C51200 * C748) *
                         C50887) *
                        C51027 * C51065) *
                       C50953 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C121 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C109 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C122 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C110 +
                    (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                     C51184 * C135 + C22942 * C129 + C22937 * C140) *
                        C123 +
                    (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                     C51184 * C149 + C22942 * C141 + C22937 * C150) *
                        C111 -
                    (C22942 * C130 + C22937 * C142 + C22941 * C129 +
                     C51184 * C140 + C22940 * C128 + C51200 * C135) *
                        C124 -
                    (C22942 * C143 + C22937 * C151 + C22941 * C141 +
                     C51184 * C150 + C22940 * C139 + C51200 * C149) *
                        C112) *
                       C51027 * C32266 +
                   ((C22940 * C387 + C51200 * C397 + C22941 * C383 +
                     C51184 * C389 + C22942 * C384 + C22937 * C390) *
                        C121 +
                    (C22940 * C396 + C51200 * C404 + C22941 * C395 +
                     C51184 * C403 + C22942 * C394 + C22937 * C402) *
                        C109 -
                    (C22942 * C385 + C22937 * C391 + C22941 * C384 +
                     C51184 * C390 + C22940 * C383 + C51200 * C389) *
                        C122 -
                    (C22942 * C393 + C22937 * C401 + C22941 * C394 +
                     C51184 * C402 + C22940 * C395 + C51200 * C403) *
                        C110 +
                    (C22940 * C384 + C51200 * C390 + C22941 * C385 +
                     C51184 * C391 + C22942 * C386 + C22937 * C392) *
                        C123 +
                    (C22940 * C394 + C51200 * C402 + C22941 * C393 +
                     C51184 * C401 + C22942 * C398 + C22937 * C405) *
                        C111 -
                    (C22942 * C388 + C22937 * C399 + C22941 * C386 +
                     C51184 * C392 + C22940 * C385 + C51200 * C391) *
                        C124 -
                    (C22942 * C400 + C22937 * C406 + C22941 * C398 +
                     C51184 * C405 + C22940 * C393 + C51200 * C401) *
                        C112) *
                       C51027 * C51065) *
                  C50953 * C50927) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C50007 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C51149 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C50000 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C50887) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C50007 +
                     (C32600 + C32601 + C32602) * C51149 -
                     (C32603 + C32604 + C32605) * C50000 -
                     (C32606 + C32607 + C32608) * C50887) *
                        C51027 * C51065) *
                       C848 +
                   (((C32605 + C32604 + C32603) * C50000 -
                     ((C32602 + C32601 + C32600) * C51149 +
                      (C32599 + C32598 + C32597) * C50007) +
                     (C32608 + C32607 + C32606) * C50887) *
                        C51027 * C32266 +
                    ((C33175 + C33176 + C33177) * C50000 -
                     ((C33178 + C33179 + C33180) * C51149 +
                      (C33181 + C33182 + C33183) * C50007) +
                     (C33184 + C33185 + C33186) * C50887) *
                        C51027 * C51065) *
                       C849 +
                   (((C33183 + C33182 + C33181) * C50007 +
                     (C33180 + C33179 + C33178) * C51149 -
                     (C33177 + C33176 + C33175) * C50000 -
                     (C33186 + C33185 + C33184) * C50887) *
                        C51027 * C32266 +
                    ((C22940 * C1058 + C51200 * C1066 + C22941 * C1057 +
                      C51184 * C1065 + C22942 * C1056 + C22937 * C1064) *
                         C50007 +
                     (C22940 * C1062 + C51200 * C1070 + C22941 * C1061 +
                      C51184 * C1069 + C22942 * C1060 + C22937 * C1068) *
                         C51149 -
                     (C22942 * C1055 + C22937 * C1063 + C22941 * C1056 +
                      C51184 * C1064 + C22940 * C1057 + C51200 * C1065) *
                         C50000 -
                     (C22942 * C1059 + C22937 * C1067 + C22941 * C1060 +
                      C51184 * C1068 + C22940 * C1061 + C51200 * C1069) *
                         C50887) *
                        C51027 * C51065) *
                       C850) *
                  C50927) /
                     (p * q * std::sqrt(p + q));
    d2ee[142] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C603 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C50882) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C603 +
                     (C32600 + C32601 + C32602) * C50882) *
                        C51027 * C51065) *
                       C50953 * C599 -
                   (((C23758 + C23759 + C23760) * C50882 +
                     (C23761 + C23762 + C23763) * C603) *
                        C51027 * C51065 +
                    ((C23131 + C23130 + C23129) * C50882 +
                     (C23128 + C23127 + C23126) * C603) *
                        C51027 * C32266) *
                       C50953 * C600 +
                   (((C23468 + C23467 + C23466) * C603 +
                     (C23465 + C23464 + C23463) * C50882) *
                        C51027 * C32266 +
                    ((C23764 + C23765 + C23766) * C603 +
                     (C23767 + C23768 + C23769) * C50882) *
                        C51027 * C51065) *
                       C50953 * C601 -
                   (((C22942 * C2984 + C22937 * C2990 + C22941 * C2985 +
                      C51184 * C2991 + C22940 * C2986 + C51200 * C2992) *
                         C50882 +
                     (C22942 * C2981 + C22937 * C2987 + C22941 * C2982 +
                      C51184 * C2988 + C22940 * C2983 + C51200 * C2989) *
                         C603) *
                        C51027 * C51065 +
                    ((C23587 + C23586 + C23585) * C50882 +
                     (C23584 + C23583 + C23582) * C603) *
                        C51027 * C32266) *
                       C50953 * C602)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C256 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C251 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C257 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C252 +
                     (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                      C51184 * C135 + C22942 * C129 + C22937 * C140) *
                         C258 +
                     (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                      C51184 * C149 + C22942 * C141 + C22937 * C150) *
                         C253) *
                        C51027 * C32266 +
                    ((C22940 * C387 + C51200 * C397 + C22941 * C383 +
                      C51184 * C389 + C22942 * C384 + C22937 * C390) *
                         C256 +
                     (C22940 * C396 + C51200 * C404 + C22941 * C395 +
                      C51184 * C403 + C22942 * C394 + C22937 * C402) *
                         C251 -
                     (C22942 * C385 + C22937 * C391 + C22941 * C384 +
                      C51184 * C390 + C22940 * C383 + C51200 * C389) *
                         C257 -
                     (C22942 * C393 + C22937 * C401 + C22941 * C394 +
                      C51184 * C402 + C22940 * C395 + C51200 * C403) *
                         C252 +
                     (C22940 * C384 + C51200 * C390 + C22941 * C385 +
                      C51184 * C391 + C22942 * C386 + C22937 * C392) *
                         C258 +
                     (C22940 * C394 + C51200 * C402 + C22941 * C393 +
                      C51184 * C401 + C22942 * C398 + C22937 * C405) *
                         C253) *
                        C51027 * C51065) *
                       C50953 * C51157 +
                   (((C23134 + C23133 + C23132) * C257 -
                     ((C23131 + C23130 + C23129) * C251 +
                      (C23128 + C23127 + C23126) * C256) +
                     (C23137 + C23136 + C23135) * C252 -
                     (C23140 + C23139 + C23138) * C258 -
                     (C23143 + C23142 + C23141) * C253) *
                        C51027 * C32266 +
                    ((C24676 + C24677 + C24678) * C257 -
                     ((C23758 + C23759 + C23760) * C251 +
                      (C23761 + C23762 + C23763) * C256) +
                     (C24679 + C24680 + C24681) * C252 -
                     (C22942 * C1412 + C22937 * C1413 + C22941 * C721 +
                      C51184 * C729 + C22940 * C720 + C51200 * C728) *
                         C258 -
                     (C22942 * C1414 + C22937 * C1415 + C22941 * C733 +
                      C51184 * C745 + C22940 * C732 + C51200 * C744) *
                         C253) *
                        C51027 * C51065) *
                       C50953 * C50941)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C603 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C50882) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C603 +
                      (C32600 + C32601 + C32602) * C50882) *
                         C51027 * C51065) *
                        C848 -
                    (((C33178 + C33179 + C33180) * C50882 +
                      (C33181 + C33182 + C33183) * C603) *
                         C51027 * C51065 +
                     ((C32602 + C32601 + C32600) * C50882 +
                      (C32599 + C32598 + C32597) * C603) *
                         C51027 * C32266) *
                        C849 +
                    (((C33183 + C33182 + C33181) * C603 +
                      (C33180 + C33179 + C33178) * C50882) *
                         C51027 * C32266 +
                     ((C22940 * C1058 + C51200 * C1066 + C22941 * C1057 +
                       C51184 * C1065 + C22942 * C1056 + C22937 * C1064) *
                          C603 +
                      (C22940 * C1062 + C51200 * C1070 + C22941 * C1061 +
                       C51184 * C1069 + C22942 * C1060 + C22937 * C1068) *
                          C50882) *
                         C51027 * C51065) *
                        C850) *
                       C51157 +
                   ((((C23763 + C23762 + C23761) * C603 +
                      (C23760 + C23759 + C23758) * C50882) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C603 +
                      (C24077 + C24078 + C24079) * C50882) *
                         C51027 * C51065) *
                        C849 -
                    (((C23758 + C23759 + C23760) * C50882 +
                      (C23761 + C23762 + C23763) * C603) *
                         C51027 * C51065 +
                     ((C23131 + C23130 + C23129) * C50882 +
                      (C23128 + C23127 + C23126) * C603) *
                         C51027 * C32266) *
                        C848 -
                    (((C22942 * C3452 + C22937 * C3458 + C22941 * C3453 +
                       C51184 * C3459 + C22940 * C3454 + C51200 * C3460) *
                          C50882 +
                      (C22942 * C3449 + C22937 * C3455 + C22941 * C3450 +
                       C51184 * C3456 + C22940 * C3451 + C51200 * C3457) *
                          C603) *
                         C51027 * C51065 +
                     ((C24079 + C24078 + C24077) * C50882 +
                      (C24076 + C24075 + C24074) * C603) *
                         C51027 * C32266) *
                        C850) *
                       C50941)) /
                     (p * q * std::sqrt(p + q));
    d2ee[143] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C603 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C50882) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C603 +
                      (C32600 + C32601 + C32602) * C50882) *
                         C51027 * C51065) *
                        C51158 -
                    (((C22942 * C862 + C22937 * C868 + C22941 * C861 +
                       C51184 * C867 + C22940 * C860 + C51200 * C866) *
                          C50882 +
                      (C22942 * C853 + C22937 * C858 + C22941 * C852 +
                       C51184 * C857 + C22940 * C851 + C51200 * C856) *
                          C603) *
                         C51027 * C51065 +
                     ((C32602 + C32601 + C32600) * C50882 +
                      (C32599 + C32598 + C32597) * C603) *
                         C51027 * C32266) *
                        C50965) *
                       C507 +
                   ((((C23763 + C23762 + C23761) * C603 +
                      (C23760 + C23759 + C23758) * C50882) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C603 +
                      (C24077 + C24078 + C24079) * C50882) *
                         C51027 * C51065) *
                        C50965 -
                    (((C23758 + C23759 + C23760) * C50882 +
                      (C23761 + C23762 + C23763) * C603) *
                         C51027 * C51065 +
                     ((C23131 + C23130 + C23129) * C50882 +
                      (C23128 + C23127 + C23126) * C603) *
                         C51027 * C32266) *
                        C51158) *
                       C508 +
                   ((((C23468 + C23467 + C23466) * C603 +
                      (C23465 + C23464 + C23463) * C50882) *
                         C51027 * C32266 +
                     ((C23764 + C23765 + C23766) * C603 +
                      (C23767 + C23768 + C23769) * C50882) *
                         C51027 * C51065) *
                        C51158 -
                    (((C22942 * C3324 + C22937 * C3330 + C22941 * C3325 +
                       C51184 * C3331 + C22940 * C3326 + C51200 * C3332) *
                          C50882 +
                      (C22942 * C3321 + C22937 * C3327 + C22941 * C3322 +
                       C51184 * C3328 + C22940 * C3323 + C51200 * C3329) *
                          C603) *
                         C51027 * C51065 +
                     ((C23769 + C23768 + C23767) * C50882 +
                      (C23766 + C23765 + C23764) * C603) *
                         C51027 * C32266) *
                        C50965) *
                       C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C256 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C251 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C257 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C252 +
                     (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                      C51184 * C135 + C22942 * C129 + C22937 * C140) *
                         C258 +
                     (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                      C51184 * C149 + C22942 * C141 + C22937 * C150) *
                         C253) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C256 +
                     (C32600 + C32601 + C32602) * C251 -
                     (C32603 + C32604 + C32605) * C257 -
                     (C32606 + C32607 + C32608) * C252 +
                     (C32609 + C32610 + C32611) * C258 +
                     (C32612 + C32613 + C32614) * C253) *
                        C51027 * C51065) *
                       C51158 +
                   (((C32605 + C32604 + C32603) * C257 -
                     ((C32602 + C32601 + C32600) * C251 +
                      (C32599 + C32598 + C32597) * C256) +
                     (C32608 + C32607 + C32606) * C252 -
                     (C32611 + C32610 + C32609) * C258 -
                     (C32614 + C32613 + C32612) * C253) *
                        C51027 * C32266 +
                    ((C22940 * C852 + C51200 * C857 + C22941 * C853 +
                      C51184 * C858 + C22942 * C854 + C22937 * C859) *
                         C257 -
                     ((C22942 * C862 + C22937 * C868 + C22941 * C861 +
                       C51184 * C867 + C22940 * C860 + C51200 * C866) *
                          C251 +
                      (C22942 * C853 + C22937 * C858 + C22941 * C852 +
                       C51184 * C857 + C22940 * C851 + C51200 * C856) *
                          C256) +
                     (C22940 * C861 + C51200 * C867 + C22941 * C862 +
                      C51184 * C868 + C22942 * C863 + C22937 * C869) *
                         C252 -
                     (C22942 * C855 + C22937 * C864 + C22941 * C854 +
                      C51184 * C859 + C22940 * C853 + C51200 * C858) *
                         C258 -
                     (C22942 * C865 + C22937 * C870 + C22941 * C863 +
                      C51184 * C869 + C22940 * C862 + C51200 * C868) *
                         C253) *
                        C51027 * C51065) *
                       C50965) *
                  C50927) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C603 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C50882) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C603 +
                     (C32600 + C32601 + C32602) * C50882) *
                        C51027 * C51065) *
                       C1051 -
                   (((C33178 + C33179 + C33180) * C50882 +
                     (C33181 + C33182 + C33183) * C603) *
                        C51027 * C51065 +
                    ((C32602 + C32601 + C32600) * C50882 +
                     (C32599 + C32598 + C32597) * C603) *
                        C51027 * C32266) *
                       C1052 +
                   (((C33183 + C33182 + C33181) * C603 +
                     (C33180 + C33179 + C33178) * C50882) *
                        C51027 * C32266 +
                    ((C33443 + C33444 + C33445) * C603 +
                     (C33446 + C33447 + C33448) * C50882) *
                        C51027 * C51065) *
                       C1053 -
                   (((C22942 * C6202 + C22937 * C6208 + C22941 * C6203 +
                      C51184 * C6209 + C22940 * C6204 + C51200 * C6210) *
                         C50882 +
                     (C22942 * C6199 + C22937 * C6205 + C22941 * C6200 +
                      C51184 * C6206 + C22940 * C6201 + C51200 * C6207) *
                         C603) *
                        C51027 * C51065 +
                    ((C33448 + C33447 + C33446) * C50882 +
                     (C33445 + C33444 + C33443) * C603) *
                        C51027 * C32266) *
                       C1054) *
                  C50927) /
                     (p * q * std::sqrt(p + q));
    d2ee[144] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C1174 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C51201 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C1175 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C51187 +
                     (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                      C51184 * C135 + C22942 * C129 + C22937 * C140) *
                         C1176 +
                     (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                      C51184 * C149 + C22942 * C141 + C22937 * C150) *
                         C1171) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C1174 +
                     (C32600 + C32601 + C32602) * C51201 -
                     (C32603 + C32604 + C32605) * C1175 -
                     (C32606 + C32607 + C32608) * C51187 +
                     (C32609 + C32610 + C32611) * C1176 +
                     (C32612 + C32613 + C32614) * C1171) *
                        C51027 * C51065) *
                       C1514 +
                   (((C32605 + C32604 + C32603) * C1175 -
                     ((C32602 + C32601 + C32600) * C51201 +
                      (C32599 + C32598 + C32597) * C1174) +
                     (C32608 + C32607 + C32606) * C51187 -
                     (C32611 + C32610 + C32609) * C1176 -
                     (C32614 + C32613 + C32612) * C1171) *
                        C51027 * C32266 +
                    ((C33175 + C33176 + C33177) * C1175 -
                     ((C33178 + C33179 + C33180) * C51201 +
                      (C33181 + C33182 + C33183) * C1174) +
                     (C33184 + C33185 + C33186) * C51187 -
                     (C22942 * C855 + C22937 * C864 + C22941 * C854 +
                      C51184 * C859 + C22940 * C853 + C51200 * C858) *
                         C1176 -
                     (C22942 * C865 + C22937 * C870 + C22941 * C863 +
                      C51184 * C869 + C22940 * C862 + C51200 * C868) *
                         C1171) *
                        C51027 * C51065) *
                       C50965) *
                  C50927) /
                 (p * q * std::sqrt(p + q));
    d2ee[145] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C1280 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C1275 -
                      (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                       C51184 * C134 + C22940 * C126 + C51200 * C133) *
                          C1281 -
                      (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                       C51184 * C148 + C22940 * C137 + C51200 * C147) *
                          C50887) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C1280 +
                      (C32600 + C32601 + C32602) * C1275 -
                      (C32603 + C32604 + C32605) * C1281 -
                      (C32606 + C32607 + C32608) * C50887) *
                         C51027 * C51065) *
                        C1514 +
                    (((C32605 + C32604 + C32603) * C1281 -
                      ((C32602 + C32601 + C32600) * C1275 +
                       (C32599 + C32598 + C32597) * C1280) +
                      (C32608 + C32607 + C32606) * C50887) *
                         C51027 * C32266 +
                     ((C33175 + C33176 + C33177) * C1281 -
                      ((C33178 + C33179 + C33180) * C1275 +
                       (C33181 + C33182 + C33183) * C1280) +
                      (C33184 + C33185 + C33186) * C50887) *
                         C51027 * C51065) *
                        C50965) *
                       C51157 +
                   ((((C23134 + C23133 + C23132) * C1281 -
                      ((C23131 + C23130 + C23129) * C1275 +
                       (C23128 + C23127 + C23126) * C1280) +
                      (C23137 + C23136 + C23135) * C50887) *
                         C51027 * C32266 +
                     ((C24676 + C24677 + C24678) * C1281 -
                      ((C23758 + C23759 + C23760) * C1275 +
                       (C23761 + C23762 + C23763) * C1280) +
                      (C24679 + C24680 + C24681) * C50887) *
                         C51027 * C51065) *
                        C1514 +
                    (((C23763 + C23762 + C23761) * C1280 +
                      (C23760 + C23759 + C23758) * C1275 -
                      (C24678 + C24677 + C24676) * C1281 -
                      (C24681 + C24680 + C24679) * C50887) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C1280 +
                      (C24077 + C24078 + C24079) * C1275 -
                      (C22942 * C969 + C22937 * C977 + C22941 * C970 +
                       C51184 * C978 + C22940 * C971 + C51200 * C979) *
                          C1281 -
                      (C22942 * C973 + C22937 * C981 + C22941 * C974 +
                       C51184 * C982 + C22940 * C975 + C51200 * C983) *
                          C50887) *
                         C51027 * C51065) *
                        C50965) *
                       C50941)) /
                 (p * q * std::sqrt(p + q));
    d2ee[146] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C1280 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C1275 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C1281 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C50887) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C1280 +
                     (C32600 + C32601 + C32602) * C1275 -
                     (C32603 + C32604 + C32605) * C1281 -
                     (C32606 + C32607 + C32608) * C50887) *
                        C51027 * C51065) *
                       C51203 +
                   (((C32605 + C32604 + C32603) * C1281 -
                     ((C32602 + C32601 + C32600) * C1275 +
                      (C32599 + C32598 + C32597) * C1280) +
                     (C32608 + C32607 + C32606) * C50887) *
                        C51027 * C32266 +
                    ((C33175 + C33176 + C33177) * C1281 -
                     ((C33178 + C33179 + C33180) * C1275 +
                      (C33181 + C33182 + C33183) * C1280) +
                     (C33184 + C33185 + C33186) * C50887) *
                        C51027 * C51065) *
                       C51193 +
                   (((C33183 + C33182 + C33181) * C1280 +
                     (C33180 + C33179 + C33178) * C1275 -
                     (C33177 + C33176 + C33175) * C1281 -
                     (C33186 + C33185 + C33184) * C50887) *
                        C51027 * C32266 +
                    ((C33443 + C33444 + C33445) * C1280 +
                     (C33446 + C33447 + C33448) * C1275 -
                     (C22942 * C1055 + C22937 * C1063 + C22941 * C1056 +
                      C51184 * C1064 + C22940 * C1057 + C51200 * C1065) *
                         C1281 -
                     (C22942 * C1059 + C22937 * C1067 + C22941 * C1060 +
                      C51184 * C1068 + C22940 * C1061 + C51200 * C1069) *
                         C50887) *
                        C51027 * C51065) *
                       C1746) *
                  C50927) /
                 (p * q * std::sqrt(p + q));
    d2ee[147] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                     C51184 * C133 + C22942 * C127 + C22937 * C134) *
                        C121 +
                    (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                     C51184 * C147 + C22942 * C138 + C22937 * C148) *
                        C109 -
                    (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                     C51184 * C134 + C22940 * C126 + C51200 * C133) *
                        C122 -
                    (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                     C51184 * C148 + C22940 * C137 + C51200 * C147) *
                        C110 +
                    (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                     C51184 * C135 + C22942 * C129 + C22937 * C140) *
                        C123 +
                    (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                     C51184 * C149 + C22942 * C141 + C22937 * C150) *
                        C111 -
                    (C22942 * C130 + C22937 * C142 + C22941 * C129 +
                     C51184 * C140 + C22940 * C128 + C51200 * C135) *
                        C124 -
                    (C22942 * C143 + C22937 * C151 + C22941 * C141 +
                     C51184 * C150 + C22940 * C139 + C51200 * C149) *
                        C112) *
                       C51027 * C32266 +
                   ((C22940 * C387 + C51200 * C397 + C22941 * C383 +
                     C51184 * C389 + C22942 * C384 + C22937 * C390) *
                        C121 +
                    (C22940 * C396 + C51200 * C404 + C22941 * C395 +
                     C51184 * C403 + C22942 * C394 + C22937 * C402) *
                        C109 -
                    (C22942 * C385 + C22937 * C391 + C22941 * C384 +
                     C51184 * C390 + C22940 * C383 + C51200 * C389) *
                        C122 -
                    (C22942 * C393 + C22937 * C401 + C22941 * C394 +
                     C51184 * C402 + C22940 * C395 + C51200 * C403) *
                        C110 +
                    (C22940 * C384 + C51200 * C390 + C22941 * C385 +
                     C51184 * C391 + C22942 * C386 + C22937 * C392) *
                        C123 +
                    (C22940 * C394 + C51200 * C402 + C22941 * C393 +
                     C51184 * C401 + C22942 * C398 + C22937 * C405) *
                        C111 -
                    (C22942 * C388 + C22937 * C399 + C22941 * C386 +
                     C51184 * C392 + C22940 * C385 + C51200 * C391) *
                        C124 -
                    (C22942 * C400 + C22937 * C406 + C22941 * C398 +
                     C51184 * C405 + C22940 * C393 + C51200 * C401) *
                        C112) *
                       C51027 * C51065) *
                  C50953 * C50927) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C50007 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C51149 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C50000 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C50887) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C50007 +
                     (C32600 + C32601 + C32602) * C51149 -
                     (C32603 + C32604 + C32605) * C50000 -
                     (C32606 + C32607 + C32608) * C50887) *
                        C51027 * C51065) *
                       C50953 * C507 +
                   (((C23134 + C23133 + C23132) * C50000 -
                     ((C23131 + C23130 + C23129) * C51149 +
                      (C23128 + C23127 + C23126) * C50007) +
                     (C23137 + C23136 + C23135) * C50887) *
                        C51027 * C32266 +
                    ((C24676 + C24677 + C24678) * C50000 -
                     ((C23758 + C23759 + C23760) * C51149 +
                      (C23761 + C23762 + C23763) * C50007) +
                     (C24679 + C24680 + C24681) * C50887) *
                        C51027 * C51065) *
                       C50953 * C508 +
                   (((C23468 + C23467 + C23466) * C50007 +
                     (C23465 + C23464 + C23463) * C51149 -
                     (C23462 + C23461 + C23460) * C50000 -
                     (C23471 + C23470 + C23469) * C50887) *
                        C51027 * C32266 +
                    ((C23764 + C23765 + C23766) * C50007 +
                     (C23767 + C23768 + C23769) * C51149 -
                     (C22942 * C722 + C22937 * C738 + C22941 * C723 +
                      C51184 * C739 + C22940 * C724 + C51200 * C740) *
                         C50000 -
                     (C22942 * C734 + C22937 * C746 + C22941 * C735 +
                      C51184 * C747 + C22940 * C736 + C51200 * C748) *
                         C50887) *
                        C51027 * C51065) *
                       C50953 * C509)) /
                     (p * q * std::sqrt(p + q));
    d2ee[148] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C256 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C251 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C257 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C252 +
                     (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                      C51184 * C135 + C22942 * C129 + C22937 * C140) *
                         C258 +
                     (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                      C51184 * C149 + C22942 * C141 + C22937 * C150) *
                         C253) *
                        C51027 * C32266 +
                    ((C22940 * C387 + C51200 * C397 + C22941 * C383 +
                      C51184 * C389 + C22942 * C384 + C22937 * C390) *
                         C256 +
                     (C22940 * C396 + C51200 * C404 + C22941 * C395 +
                      C51184 * C403 + C22942 * C394 + C22937 * C402) *
                         C251 -
                     (C22942 * C385 + C22937 * C391 + C22941 * C384 +
                      C51184 * C390 + C22940 * C383 + C51200 * C389) *
                         C257 -
                     (C22942 * C393 + C22937 * C401 + C22941 * C394 +
                      C51184 * C402 + C22940 * C395 + C51200 * C403) *
                         C252 +
                     (C22940 * C384 + C51200 * C390 + C22941 * C385 +
                      C51184 * C391 + C22942 * C386 + C22937 * C392) *
                         C258 +
                     (C22940 * C394 + C51200 * C402 + C22941 * C393 +
                      C51184 * C401 + C22942 * C398 + C22937 * C405) *
                         C253) *
                        C51027 * C51065) *
                       C50953 * C51157 +
                   (((C23134 + C23133 + C23132) * C257 -
                     ((C23131 + C23130 + C23129) * C251 +
                      (C23128 + C23127 + C23126) * C256) +
                     (C23137 + C23136 + C23135) * C252 -
                     (C23140 + C23139 + C23138) * C258 -
                     (C23143 + C23142 + C23141) * C253) *
                        C51027 * C32266 +
                    ((C24676 + C24677 + C24678) * C257 -
                     ((C23758 + C23759 + C23760) * C251 +
                      (C23761 + C23762 + C23763) * C256) +
                     (C24679 + C24680 + C24681) * C252 -
                     (C22942 * C1412 + C22937 * C1413 + C22941 * C721 +
                      C51184 * C729 + C22940 * C720 + C51200 * C728) *
                         C258 -
                     (C22942 * C1414 + C22937 * C1415 + C22941 * C733 +
                      C51184 * C745 + C22940 * C732 + C51200 * C744) *
                         C253) *
                        C51027 * C51065) *
                       C50953 * C50941)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C603 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C50882) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C603 +
                     (C32600 + C32601 + C32602) * C50882) *
                        C51027 * C51065) *
                       C50953 * C599 -
                   (((C23758 + C23759 + C23760) * C50882 +
                     (C23761 + C23762 + C23763) * C603) *
                        C51027 * C51065 +
                    ((C23131 + C23130 + C23129) * C50882 +
                     (C23128 + C23127 + C23126) * C603) *
                        C51027 * C32266) *
                       C50953 * C600 +
                   (((C23468 + C23467 + C23466) * C603 +
                     (C23465 + C23464 + C23463) * C50882) *
                        C51027 * C32266 +
                    ((C23764 + C23765 + C23766) * C603 +
                     (C23767 + C23768 + C23769) * C50882) *
                        C51027 * C51065) *
                       C50953 * C601 -
                   (((C22942 * C2984 + C22937 * C2990 + C22941 * C2985 +
                      C51184 * C2991 + C22940 * C2986 + C51200 * C2992) *
                         C50882 +
                     (C22942 * C2981 + C22937 * C2987 + C22941 * C2982 +
                      C51184 * C2988 + C22940 * C2983 + C51200 * C2989) *
                         C603) *
                        C51027 * C51065 +
                    ((C23587 + C23586 + C23585) * C50882 +
                     (C23584 + C23583 + C23582) * C603) *
                        C51027 * C32266) *
                       C50953 * C602)) /
                     (p * q * std::sqrt(p + q));
    d2ee[149] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                      C51184 * C133 + C22942 * C127 + C22937 * C134) *
                         C256 +
                     (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                      C51184 * C147 + C22942 * C138 + C22937 * C148) *
                         C251 -
                     (C22942 * C128 + C22937 * C135 + C22941 * C127 +
                      C51184 * C134 + C22940 * C126 + C51200 * C133) *
                         C257 -
                     (C22942 * C139 + C22937 * C149 + C22941 * C138 +
                      C51184 * C148 + C22940 * C137 + C51200 * C147) *
                         C252 +
                     (C22940 * C127 + C51200 * C134 + C22941 * C128 +
                      C51184 * C135 + C22942 * C129 + C22937 * C140) *
                         C258 +
                     (C22940 * C138 + C51200 * C148 + C22941 * C139 +
                      C51184 * C149 + C22942 * C141 + C22937 * C150) *
                         C253) *
                        C51027 * C32266 +
                    ((C32597 + C32598 + C32599) * C256 +
                     (C32600 + C32601 + C32602) * C251 -
                     (C32603 + C32604 + C32605) * C257 -
                     (C32606 + C32607 + C32608) * C252 +
                     (C32609 + C32610 + C32611) * C258 +
                     (C32612 + C32613 + C32614) * C253) *
                        C51027 * C51065) *
                       C51158 +
                   (((C32605 + C32604 + C32603) * C257 -
                     ((C32602 + C32601 + C32600) * C251 +
                      (C32599 + C32598 + C32597) * C256) +
                     (C32608 + C32607 + C32606) * C252 -
                     (C32611 + C32610 + C32609) * C258 -
                     (C32614 + C32613 + C32612) * C253) *
                        C51027 * C32266 +
                    ((C22940 * C852 + C51200 * C857 + C22941 * C853 +
                      C51184 * C858 + C22942 * C854 + C22937 * C859) *
                         C257 -
                     ((C22942 * C862 + C22937 * C868 + C22941 * C861 +
                       C51184 * C867 + C22940 * C860 + C51200 * C866) *
                          C251 +
                      (C22942 * C853 + C22937 * C858 + C22941 * C852 +
                       C51184 * C857 + C22940 * C851 + C51200 * C856) *
                          C256) +
                     (C22940 * C861 + C51200 * C867 + C22941 * C862 +
                      C51184 * C868 + C22942 * C863 + C22937 * C869) *
                         C252 -
                     (C22942 * C855 + C22937 * C864 + C22941 * C854 +
                      C51184 * C859 + C22940 * C853 + C51200 * C858) *
                         C258 -
                     (C22942 * C865 + C22937 * C870 + C22941 * C863 +
                      C51184 * C869 + C22940 * C862 + C51200 * C868) *
                         C253) *
                        C51027 * C51065) *
                       C50965) *
                  C50927) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C22940 * C125 + C51200 * C132 + C22941 * C126 +
                       C51184 * C133 + C22942 * C127 + C22937 * C134) *
                          C603 +
                      (C22940 * C136 + C51200 * C146 + C22941 * C137 +
                       C51184 * C147 + C22942 * C138 + C22937 * C148) *
                          C50882) *
                         C51027 * C32266 +
                     ((C32597 + C32598 + C32599) * C603 +
                      (C32600 + C32601 + C32602) * C50882) *
                         C51027 * C51065) *
                        C51158 -
                    (((C22942 * C862 + C22937 * C868 + C22941 * C861 +
                       C51184 * C867 + C22940 * C860 + C51200 * C866) *
                          C50882 +
                      (C22942 * C853 + C22937 * C858 + C22941 * C852 +
                       C51184 * C857 + C22940 * C851 + C51200 * C856) *
                          C603) *
                         C51027 * C51065 +
                     ((C32602 + C32601 + C32600) * C50882 +
                      (C32599 + C32598 + C32597) * C603) *
                         C51027 * C32266) *
                        C50965) *
                       C507 +
                   ((((C23763 + C23762 + C23761) * C603 +
                      (C23760 + C23759 + C23758) * C50882) *
                         C51027 * C32266 +
                     ((C24074 + C24075 + C24076) * C603 +
                      (C24077 + C24078 + C24079) * C50882) *
                         C51027 * C51065) *
                        C50965 -
                    (((C23758 + C23759 + C23760) * C50882 +
                      (C23761 + C23762 + C23763) * C603) *
                         C51027 * C51065 +
                     ((C23131 + C23130 + C23129) * C50882 +
                      (C23128 + C23127 + C23126) * C603) *
                         C51027 * C32266) *
                        C51158) *
                       C508 +
                   ((((C23468 + C23467 + C23466) * C603 +
                      (C23465 + C23464 + C23463) * C50882) *
                         C51027 * C32266 +
                     ((C23764 + C23765 + C23766) * C603 +
                      (C23767 + C23768 + C23769) * C50882) *
                         C51027 * C51065) *
                        C51158 -
                    (((C22942 * C3324 + C22937 * C3330 + C22941 * C3325 +
                       C51184 * C3331 + C22940 * C3326 + C51200 * C3332) *
                          C50882 +
                      (C22942 * C3321 + C22937 * C3327 + C22941 * C3322 +
                       C51184 * C3328 + C22940 * C3323 + C51200 * C3329) *
                          C603) *
                         C51027 * C51065 +
                     ((C23769 + C23768 + C23767) * C50882 +
                      (C23766 + C23765 + C23764) * C603) *
                         C51027 * C32266) *
                        C50965) *
                       C509)) /
                     (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1174 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51201 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1175 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C51187 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C1176 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C1171) *
                C51170 +
            ((C25953 + C25954) * C1174 + (C25955 + C25956) * C51201 -
             (C25957 + C25958) * C1175 - (C25959 + C25960) * C51187 +
             (C25961 + C25962) * C1176 + (C25963 + C25964) * C1171) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C1174 + (C29068 + C29069) * C51201 -
             (C29070 + C29071) * C1175 - (C29072 + C29073) * C51187 +
             (C29074 + C29075) * C1176 + (C29076 + C29077) * C1171) *
                C51170 +
            (C29596 * C1174 + C29597 * C51201 - C30847 * C1175 -
             C30848 * C51187 + (C28844 + C28845) * C1176 +
             (C28846 + C28847) * C1171) *
                C51041) *
               C51065) *
              C50953 * C1172 +
          ((((C25958 + C25957) * C1175 -
             ((C25956 + C25955) * C51201 + (C25954 + C25953) * C1174) +
             (C25960 + C25959) * C51187 - (C25962 + C25961) * C1176 -
             (C25964 + C25963) * C1171) *
                C51170 +
            ((C25970 + C25969) * C1175 -
             ((C25968 + C25967) * C51201 + (C25966 + C25965) * C1174) +
             (C25972 + C25971) * C51187 - (C25974 + C25973) * C1176 -
             (C25976 + C25975) * C1171) *
                C51041) *
               C32266 +
           ((C30849 * C1175 - (C29598 * C51201 + C29599 * C1174) +
             C30852 * C51187 - (C28845 + C28844) * C1176 -
             (C28847 + C28846) * C1171) *
                C51170 +
            ((C27536 + C27537) * C1175 - (C26604 * C51201 + C26605 * C1174) +
             (C27538 + C27539) * C51187 -
             (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                 C1176 -
             (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                 C1171) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51170 +
            ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
             (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
             (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                C51170 +
            C30861 * C51041) *
               C51065) *
              C50953 * C51202 +
          ((((C25958 + C25957) * C1281 -
             ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
             (C25960 + C25959) * C50887) *
                C51170 +
            ((C25970 + C25969) * C1281 -
             ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
             (C25972 + C25971) * C50887) *
                C51041) *
               C32266 +
           (C30862 * C51170 +
            ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
             (C27538 + C27539) * C50887) *
                C51041) *
               C51065) *
              C50953 * C51190 +
          ((C27321 * C51170 +
            ((C26298 + C26297) * C1280 + (C26296 + C26295) * C1275 -
             (C26294 + C26293) * C1281 - (C26300 + C26299) * C50887) *
                C51041) *
               C32266 +
           ((C29600 * C1280 + C29601 * C1275 - (C27537 + C27536) * C1281 -
             (C27539 + C27538) * C50887) *
                C51170 +
            ((C26600 + C26601) * C1280 + (C26602 + C26603) * C1275 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C1281 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C1280 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C1275 -
              (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                  C1281 -
              (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                  C50887) *
                 C51170 +
             ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
              (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                 C51041) *
                C32266 +
            (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
              (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                 C51170 +
             C30861 * C51041) *
                C51065) *
               C51158 +
           ((((C29071 + C29070) * C1281 -
              ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
              (C29073 + C29072) * C50887) *
                 C51170 +
             C30862 * C51041) *
                C32266 +
            (((C29829 + C29830) * C1281 -
              ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
              (C29835 + C29836) * C50887) *
                 C51170 +
             ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
              (C29839 + C29840) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C1172 +
          (((((C25958 + C25957) * C1281 -
              ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
              (C25960 + C25959) * C50887) *
                 C51170 +
             ((C25970 + C25969) * C1281 -
              ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
              (C25972 + C25971) * C50887) *
                 C51041) *
                C32266 +
            (C30862 * C51170 +
             ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
              (C27538 + C27539) * C50887) *
                 C51041) *
                C51065) *
               C51158 +
           ((C30861 * C51170 +
             (C29600 * C1280 + C29601 * C1275 - (C27537 + C27536) * C1281 -
              (C27539 + C27538) * C50887) *
                 C51041) *
                C32266 +
            ((C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
              (C29840 + C29839) * C50887) *
                 C51170 +
             ((C26921 + C26922) * C1280 + (C26923 + C26924) * C1275 -
              (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
               C25751 * C3328) *
                  C1281 -
              (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
               C25751 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C50007 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C51149 -
              (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                  C50000 -
              (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                  C50887) *
                 C51170 +
             ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
              (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                 C51041) *
                C32266 +
            (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
              (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                 C51170 +
             C31779 * C51041) *
                C51065) *
               C1514 +
           ((((C29071 + C29070) * C50000 -
              ((C29069 + C29068) * C51149 + (C29067 + C29066) * C50007) +
              (C29073 + C29072) * C50887) *
                 C51170 +
             C31780 * C51041) *
                C32266 +
            (((C29829 + C29830) * C50000 -
              ((C29831 + C29832) * C51149 + (C29833 + C29834) * C50007) +
              (C29835 + C29836) * C50887) *
                 C51170 +
             ((C29837 + C29838) * C50000 - (C30035 * C51149 + C30036 * C50007) +
              (C29839 + C29840) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C1172 +
          (((((C25958 + C25957) * C50000 -
              ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
              (C25960 + C25959) * C50887) *
                 C51170 +
             ((C25970 + C25969) * C50000 -
              ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
              (C25972 + C25971) * C50887) *
                 C51041) *
                C32266 +
            (C31780 * C51170 +
             ((C27536 + C27537) * C50000 - (C26604 * C51149 + C26605 * C50007) +
              (C27538 + C27539) * C50887) *
                 C51041) *
                C51065) *
               C1514 +
           ((C31779 * C51170 +
             (C29600 * C50007 + C29601 * C51149 - (C27537 + C27536) * C50000 -
              (C27539 + C27538) * C50887) *
                 C51041) *
                C32266 +
            ((C30037 * C50007 + C30038 * C51149 - (C29838 + C29837) * C50000 -
              (C29840 + C29839) * C50887) *
                 C51170 +
             ((C26921 + C26922) * C50007 + (C26923 + C26924) * C51149 -
              (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
               C25751 * C3328) *
                  C50000 -
              (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
               C25751 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C51170 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C32266 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
             C29608 * C51041) *
                C51065) *
               C1514 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51170) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51170) *
                C32266) *
               C50965) *
              C51202 +
          (((C29608 * C51170 + C29610 * C51041) * C32266 +
            (C30056 * C51170 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C26608 * C51041 + C29609 * C51170) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51170) *
                C32266) *
               C1514) *
              C51190 +
          (((C26414 * C51170 +
             ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
                C32266 +
            (C29610 * C51170 +
             ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
                C51065) *
               C1514 -
           ((((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
               C25751 * C8957) *
                  C50882 +
              (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
               C25751 * C8955) *
                  C603) *
                 C51041 +
             ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51170) *
                C51065 +
            (((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51041 +
             C26608 * C51170) *
                C32266) *
               C50965) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C51170 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C32266 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
             C29608 * C51041) *
                C51065) *
               C51203 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51170) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51170) *
                C32266) *
               C51193 +
           ((((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C51170 +
             C30056 * C51041) *
                C32266 +
            (((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C51170 +
             ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51041) *
                C51065) *
               C1746) *
              C1172 +
          (((C29608 * C51170 + C29610 * C51041) * C32266 +
            (C30056 * C51170 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C51193 -
           ((C26608 * C51041 + C29609 * C51170) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51170) *
                C32266) *
               C51203 -
           ((((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
               C25751 * C9087) *
                  C50882 +
              (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
               C25751 * C9085) *
                  C603) *
                 C51041 +
             ((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C51170) *
                C51065 +
            (((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51041 +
             C30055 * C51170) *
                C32266) *
               C1746) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51170 +
            ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
             (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
             (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                C51170 +
            C31779 * C51041) *
               C51065) *
              C50953 * C507 +
          ((((C25958 + C25957) * C50000 -
             ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
             (C25960 + C25959) * C50887) *
                C51170 +
            ((C25970 + C25969) * C50000 -
             ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
             (C25972 + C25971) * C50887) *
                C51041) *
               C32266 +
           (C31780 * C51170 +
            ((C27536 + C27537) * C50000 - (C26604 * C51149 + C26605 * C50007) +
             (C27538 + C27539) * C50887) *
                C51041) *
               C51065) *
              C50953 * C508 +
          ((C26303 * C51170 +
            ((C26298 + C26297) * C50007 + (C26296 + C26295) * C51149 -
             (C26294 + C26293) * C50000 - (C26300 + C26299) * C50887) *
                C51041) *
               C32266 +
           ((C29600 * C50007 + C29601 * C51149 - (C27537 + C27536) * C50000 -
             (C27539 + C27538) * C50887) *
                C51170 +
            ((C26600 + C26601) * C50007 + (C26602 + C26603) * C51149 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C50000 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C121 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C109 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C122 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C110 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C123 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C111 -
            (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
                C124 -
            (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
                C112) *
               C51170 +
           ((C25953 + C25954) * C121 + (C25955 + C25956) * C109 -
            (C25957 + C25958) * C122 - (C25959 + C25960) * C110 +
            (C25961 + C25962) * C123 + (C25963 + C25964) * C111 -
            (C25757 * C262 + C50868 * C268 + C25756 * C261 + C25751 * C267) *
                C124 -
            (C25757 * C274 + C50868 * C281 + C25756 * C269 + C25751 * C277) *
                C112) *
               C51041) *
              C32266 +
          (((C29066 + C29067) * C121 + (C29068 + C29069) * C109 -
            (C29070 + C29071) * C122 - (C29072 + C29073) * C110 +
            (C29074 + C29075) * C123 + (C29076 + C29077) * C111 -
            (C25757 * C386 + C50868 * C392 + C25756 * C385 + C25751 * C391) *
                C124 -
            (C25757 * C398 + C50868 * C405 + C25756 * C393 + C25751 * C401) *
                C112) *
               C51170 +
           (C29596 * C121 + C29597 * C109 - C30847 * C122 - C30848 * C110 +
            (C28844 + C28845) * C123 + (C28846 + C28847) * C111 -
            (C25757 * C1412 + C50868 * C1413 + C25756 * C721 + C25751 * C729) *
                C124 -
            (C25757 * C1414 + C50868 * C1415 + C25756 * C733 + C25751 * C745) *
                C112) *
               C51041) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51170 +
            ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
             (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
             (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                C51170 +
            C31779 * C51041) *
               C51065) *
              C848 +
          ((((C29071 + C29070) * C50000 -
             ((C29069 + C29068) * C51149 + (C29067 + C29066) * C50007) +
             (C29073 + C29072) * C50887) *
                C51170 +
            C31780 * C51041) *
               C32266 +
           (((C29829 + C29830) * C50000 -
             ((C29831 + C29832) * C51149 + (C29833 + C29834) * C50007) +
             (C29835 + C29836) * C50887) *
                C51170 +
            ((C29837 + C29838) * C50000 - (C30035 * C51149 + C30036 * C50007) +
             (C29839 + C29840) * C50887) *
                C51041) *
               C51065) *
              C849 +
          ((((C29834 + C29833) * C50007 + (C29832 + C29831) * C51149 -
             (C29830 + C29829) * C50000 - (C29836 + C29835) * C50887) *
                C51170 +
            (C30037 * C50007 + C30038 * C51149 - (C29838 + C29837) * C50000 -
             (C29840 + C29839) * C50887) *
                C51041) *
               C32266 +
           (((C30195 + C30196) * C50007 + (C30197 + C30198) * C51149 -
             (C25757 * C1056 + C50868 * C1064 + C25756 * C1057 +
              C25751 * C1065) *
                 C50000 -
             (C25757 * C1060 + C50868 * C1068 + C25756 * C1061 +
              C25751 * C1069) *
                 C50887) *
                C51170 +
            ((C30051 + C30052) * C50007 + (C30053 + C30054) * C51149 -
             (C25757 * C3449 + C50868 * C3455 + C25756 * C3450 +
              C25751 * C3456) *
                 C50000 -
             (C25757 * C3452 + C50868 * C3458 + C25756 * C3453 +
              C25751 * C3459) *
                 C50887) *
                C51041) *
               C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51170 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
               C32266 +
           (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
            C29608 * C51041) *
               C51065) *
              C50953 * C599 -
          ((C26608 * C51041 + C29609 * C51170) * C51065 +
           (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51170) *
               C32266) *
              C50953 * C600 +
          ((C26414 * C51170 +
            ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
               C32266 +
           (C29610 * C51170 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
               C51065) *
              C50953 * C601 -
          ((((C25757 * C8611 + C50868 * C8615 + C25756 * C8612 +
              C25751 * C8616) *
                 C50882 +
             (C25757 * C8609 + C50868 * C8613 + C25756 * C8610 +
              C25751 * C8614) *
                 C603) *
                C51041 +
            ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51170) *
               C51065 +
           (((C26420 + C26419) * C50882 + (C26418 + C26417) * C603) * C51041 +
            C26421 * C51170) *
               C32266) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C51170 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
             (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
             (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
                C51170 +
            (C29596 * C256 + C29597 * C251 - C30847 * C257 - C30848 * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C50953 * C51157 +
          ((((C25958 + C25957) * C257 -
             ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
             (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
             (C25964 + C25963) * C253) *
                C51170 +
            ((C25970 + C25969) * C257 -
             ((C25968 + C25967) * C251 + (C25966 + C25965) * C256) +
             (C25972 + C25971) * C252 - (C25974 + C25973) * C258 -
             (C25976 + C25975) * C253) *
                C51041) *
               C32266 +
           ((C30849 * C257 - (C29598 * C251 + C29599 * C256) + C30852 * C252 -
             (C28845 + C28844) * C258 - (C28847 + C28846) * C253) *
                C51170 +
            ((C27536 + C27537) * C257 - (C26604 * C251 + C26605 * C256) +
             (C27538 + C27539) * C252 -
             (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                 C258 -
             (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                 C253) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C51170 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C32266 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
             C29608 * C51041) *
                C51065) *
               C848 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51170) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51170) *
                C32266) *
               C849 +
           ((((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C51170 +
             C30056 * C51041) *
                C32266 +
            (((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C51170 +
             ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51041) *
                C51065) *
               C850) *
              C51157 +
          (((C29608 * C51170 + C29610 * C51041) * C32266 +
            (C30056 * C51170 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C849 -
           ((C26608 * C51041 + C29609 * C51170) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51170) *
                C32266) *
               C848 -
           ((((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
               C25751 * C9087) *
                  C50882 +
              (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
               C25751 * C9085) *
                  C603) *
                 C51041 +
             ((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C51170) *
                C51065 +
            (((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51041 +
             C30055 * C51170) *
                C32266) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C51170 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C32266 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
             C29608 * C51041) *
                C51065) *
               C51158 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51170) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51170) *
                C32266) *
               C50965) *
              C507 +
          (((C29608 * C51170 + C29610 * C51041) * C32266 +
            (C30056 * C51170 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C26608 * C51041 + C29609 * C51170) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51170) *
                C32266) *
               C51158) *
              C508 +
          (((C26414 * C51170 +
             ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
                C32266 +
            (C29610 * C51170 +
             ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
                C51065) *
               C51158 -
           ((((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
               C25751 * C8957) *
                  C50882 +
              (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
               C25751 * C8955) *
                  C603) *
                 C51041 +
             ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51170) *
                C51065 +
            (((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51041 +
             C26608 * C51170) *
                C32266) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C51170 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
             (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
             (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
                C51170 +
            (C29596 * C256 + C29597 * C251 - C30847 * C257 - C30848 * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C51158 +
          ((((C29071 + C29070) * C257 -
             ((C29069 + C29068) * C251 + (C29067 + C29066) * C256) +
             (C29073 + C29072) * C252 - (C29075 + C29074) * C258 -
             (C29077 + C29076) * C253) *
                C51170 +
            (C30849 * C257 - (C29598 * C251 + C29599 * C256) + C30852 * C252 -
             (C28845 + C28844) * C258 - (C28847 + C28846) * C253) *
                C51041) *
               C32266 +
           (((C29829 + C29830) * C257 -
             ((C29831 + C29832) * C251 + (C29833 + C29834) * C256) +
             (C29835 + C29836) * C252 -
             (C25757 * C854 + C50868 * C859 + C25756 * C853 + C25751 * C858) *
                 C258 -
             (C25757 * C863 + C50868 * C869 + C25756 * C862 + C25751 * C868) *
                 C253) *
                C51170 +
            ((C29837 + C29838) * C257 - (C30035 * C251 + C30036 * C256) +
             (C29839 + C29840) * C252 -
             (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                 C258 -
             (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                 C253) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51170 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
               C32266 +
           (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
            C29608 * C51041) *
               C51065) *
              C1051 -
          ((C30055 * C51041 +
            ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51170) *
               C51065 +
           (C29609 * C51041 +
            ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51170) *
               C32266) *
              C1052 +
          ((((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C51170 +
            C30056 * C51041) *
               C32266 +
           (((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C51170 +
            ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51041) *
               C51065) *
              C1053 -
          ((((C25757 * C16631 + C50868 * C16633 + C25756 * C13922 +
              C25751 * C13925) *
                 C50882 +
             (C25757 * C16630 + C50868 * C16632 + C25756 * C13919 +
              C25751 * C13923) *
                 C603) *
                C51041 +
            ((C25757 * C6203 + C50868 * C6209 + C25756 * C6204 +
              C25751 * C6210) *
                 C50882 +
             (C25757 * C6200 + C50868 * C6206 + C25756 * C6201 +
              C25751 * C6207) *
                 C603) *
                C51170) *
               C51065 +
           (((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C51041 +
            ((C30198 + C30197) * C50882 + (C30196 + C30195) * C603) * C51170) *
               C32266) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1174 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51201 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1175 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C51187 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C1176 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C1171) *
                C51170 +
            ((C25953 + C25954) * C1174 + (C25955 + C25956) * C51201 -
             (C25957 + C25958) * C1175 - (C25959 + C25960) * C51187 +
             (C25961 + C25962) * C1176 + (C25963 + C25964) * C1171) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C1174 + (C29068 + C29069) * C51201 -
             (C29070 + C29071) * C1175 - (C29072 + C29073) * C51187 +
             (C29074 + C29075) * C1176 + (C29076 + C29077) * C1171) *
                C51170 +
            (C29596 * C1174 + C29597 * C51201 - C30847 * C1175 -
             C30848 * C51187 + (C28844 + C28845) * C1176 +
             (C28846 + C28847) * C1171) *
                C51041) *
               C51065) *
              C1514 +
          ((((C29071 + C29070) * C1175 -
             ((C29069 + C29068) * C51201 + (C29067 + C29066) * C1174) +
             (C29073 + C29072) * C51187 - (C29075 + C29074) * C1176 -
             (C29077 + C29076) * C1171) *
                C51170 +
            (C30849 * C1175 - (C29598 * C51201 + C29599 * C1174) +
             C30852 * C51187 - (C28845 + C28844) * C1176 -
             (C28847 + C28846) * C1171) *
                C51041) *
               C32266 +
           (((C29829 + C29830) * C1175 -
             ((C29831 + C29832) * C51201 + (C29833 + C29834) * C1174) +
             (C29835 + C29836) * C51187 -
             (C25757 * C854 + C50868 * C859 + C25756 * C853 + C25751 * C858) *
                 C1176 -
             (C25757 * C863 + C50868 * C869 + C25756 * C862 + C25751 * C868) *
                 C1171) *
                C51170 +
            ((C29837 + C29838) * C1175 - (C30035 * C51201 + C30036 * C1174) +
             (C29839 + C29840) * C51187 -
             (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                 C1176 -
             (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                 C1171) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C1280 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C1275 -
              (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                  C1281 -
              (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                  C50887) *
                 C51170 +
             ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
              (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                 C51041) *
                C32266 +
            (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
              (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                 C51170 +
             C30861 * C51041) *
                C51065) *
               C1514 +
           ((((C29071 + C29070) * C1281 -
              ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
              (C29073 + C29072) * C50887) *
                 C51170 +
             C30862 * C51041) *
                C32266 +
            (((C29829 + C29830) * C1281 -
              ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
              (C29835 + C29836) * C50887) *
                 C51170 +
             ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
              (C29839 + C29840) * C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C51157 +
          (((((C25958 + C25957) * C1281 -
              ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
              (C25960 + C25959) * C50887) *
                 C51170 +
             ((C25970 + C25969) * C1281 -
              ((C25968 + C25967) * C1275 + (C25966 + C25965) * C1280) +
              (C25972 + C25971) * C50887) *
                 C51041) *
                C32266 +
            (C30862 * C51170 +
             ((C27536 + C27537) * C1281 - (C26604 * C1275 + C26605 * C1280) +
              (C27538 + C27539) * C50887) *
                 C51041) *
                C51065) *
               C1514 +
           ((C30861 * C51170 +
             (C29600 * C1280 + C29601 * C1275 - (C27537 + C27536) * C1281 -
              (C27539 + C27538) * C50887) *
                 C51041) *
                C32266 +
            ((C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
              (C29840 + C29839) * C50887) *
                 C51170 +
             ((C26921 + C26922) * C1280 + (C26923 + C26924) * C1275 -
              (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
               C25751 * C3328) *
                  C1281 -
              (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
               C25751 * C3331) *
                  C50887) *
                 C51041) *
                C51065) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51170 +
            ((C25953 + C25954) * C1280 + (C25955 + C25956) * C1275 -
             (C25957 + C25958) * C1281 - (C25959 + C25960) * C50887) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
             (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                C51170 +
            C30861 * C51041) *
               C51065) *
              C51203 +
          ((((C29071 + C29070) * C1281 -
             ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
             (C29073 + C29072) * C50887) *
                C51170 +
            C30862 * C51041) *
               C32266 +
           (((C29829 + C29830) * C1281 -
             ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
             (C29835 + C29836) * C50887) *
                C51170 +
            ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
             (C29839 + C29840) * C50887) *
                C51041) *
               C51065) *
              C51193 +
          ((((C29834 + C29833) * C1280 + (C29832 + C29831) * C1275 -
             (C29830 + C29829) * C1281 - (C29836 + C29835) * C50887) *
                C51170 +
            (C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
             (C29840 + C29839) * C50887) *
                C51041) *
               C32266 +
           (((C30195 + C30196) * C1280 + (C30197 + C30198) * C1275 -
             (C25757 * C1056 + C50868 * C1064 + C25756 * C1057 +
              C25751 * C1065) *
                 C1281 -
             (C25757 * C1060 + C50868 * C1068 + C25756 * C1061 +
              C25751 * C1069) *
                 C50887) *
                C51170 +
            ((C30051 + C30052) * C1280 + (C30053 + C30054) * C1275 -
             (C25757 * C3449 + C50868 * C3455 + C25756 * C3450 +
              C25751 * C3456) *
                 C1281 -
             (C25757 * C3452 + C50868 * C3458 + C25756 * C3453 +
              C25751 * C3459) *
                 C50887) *
                C51041) *
               C51065) *
              C1746) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C121 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C109 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C122 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C110 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C123 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C111 -
            (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
                C124 -
            (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
                C112) *
               C51170 +
           ((C25953 + C25954) * C121 + (C25955 + C25956) * C109 -
            (C25957 + C25958) * C122 - (C25959 + C25960) * C110 +
            (C25961 + C25962) * C123 + (C25963 + C25964) * C111 -
            (C25757 * C262 + C50868 * C268 + C25756 * C261 + C25751 * C267) *
                C124 -
            (C25757 * C274 + C50868 * C281 + C25756 * C269 + C25751 * C277) *
                C112) *
               C51041) *
              C32266 +
          (((C29066 + C29067) * C121 + (C29068 + C29069) * C109 -
            (C29070 + C29071) * C122 - (C29072 + C29073) * C110 +
            (C29074 + C29075) * C123 + (C29076 + C29077) * C111 -
            (C25757 * C386 + C50868 * C392 + C25756 * C385 + C25751 * C391) *
                C124 -
            (C25757 * C398 + C50868 * C405 + C25756 * C393 + C25751 * C401) *
                C112) *
               C51170 +
           (C29596 * C121 + C29597 * C109 - C30847 * C122 - C30848 * C110 +
            (C28844 + C28845) * C123 + (C28846 + C28847) * C111 -
            (C25757 * C1412 + C50868 * C1413 + C25756 * C721 + C25751 * C729) *
                C124 -
            (C25757 * C1414 + C50868 * C1415 + C25756 * C733 + C25751 * C745) *
                C112) *
               C51041) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51170 +
            ((C25953 + C25954) * C50007 + (C25955 + C25956) * C51149 -
             (C25957 + C25958) * C50000 - (C25959 + C25960) * C50887) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
             (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                C51170 +
            C31779 * C51041) *
               C51065) *
              C50953 * C507 +
          ((((C25958 + C25957) * C50000 -
             ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
             (C25960 + C25959) * C50887) *
                C51170 +
            ((C25970 + C25969) * C50000 -
             ((C25968 + C25967) * C51149 + (C25966 + C25965) * C50007) +
             (C25972 + C25971) * C50887) *
                C51041) *
               C32266 +
           (C31780 * C51170 +
            ((C27536 + C27537) * C50000 - (C26604 * C51149 + C26605 * C50007) +
             (C27538 + C27539) * C50887) *
                C51041) *
               C51065) *
              C50953 * C508 +
          ((C26303 * C51170 +
            ((C26298 + C26297) * C50007 + (C26296 + C26295) * C51149 -
             (C26294 + C26293) * C50000 - (C26300 + C26299) * C50887) *
                C51041) *
               C32266 +
           ((C29600 * C50007 + C29601 * C51149 - (C27537 + C27536) * C50000 -
             (C27539 + C27538) * C50887) *
                C51170 +
            ((C26600 + C26601) * C50007 + (C26602 + C26603) * C51149 -
             (C25757 * C2981 + C50868 * C2987 + C25756 * C2982 +
              C25751 * C2988) *
                 C50000 -
             (C25757 * C2984 + C50868 * C2990 + C25756 * C2985 +
              C25751 * C2991) *
                 C50887) *
                C51041) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C51170 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
             (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
             (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
                C51170 +
            (C29596 * C256 + C29597 * C251 - C30847 * C257 - C30848 * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C50953 * C51157 +
          ((((C25958 + C25957) * C257 -
             ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
             (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
             (C25964 + C25963) * C253) *
                C51170 +
            ((C25970 + C25969) * C257 -
             ((C25968 + C25967) * C251 + (C25966 + C25965) * C256) +
             (C25972 + C25971) * C252 - (C25974 + C25973) * C258 -
             (C25976 + C25975) * C253) *
                C51041) *
               C32266 +
           ((C30849 * C257 - (C29598 * C251 + C29599 * C256) + C30852 * C252 -
             (C28845 + C28844) * C258 - (C28847 + C28846) * C253) *
                C51170 +
            ((C27536 + C27537) * C257 - (C26604 * C251 + C26605 * C256) +
             (C27538 + C27539) * C252 -
             (C25757 * C722 + C50868 * C738 + C25756 * C723 + C25751 * C739) *
                 C258 -
             (C25757 * C734 + C50868 * C746 + C25756 * C735 + C25751 * C747) *
                 C253) *
                C51041) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51170 +
            ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
               C32266 +
           (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
            C29608 * C51041) *
               C51065) *
              C50953 * C599 -
          ((C26608 * C51041 + C29609 * C51170) * C51065 +
           (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51170) *
               C32266) *
              C50953 * C600 +
          ((C26414 * C51170 +
            ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
               C32266 +
           (C29610 * C51170 +
            ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
               C51065) *
              C50953 * C601 -
          ((((C25757 * C8611 + C50868 * C8615 + C25756 * C8612 +
              C25751 * C8616) *
                 C50882 +
             (C25757 * C8609 + C50868 * C8613 + C25756 * C8610 +
              C25751 * C8614) *
                 C603) *
                C51041 +
            ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51170) *
               C51065 +
           (((C26420 + C26419) * C50882 + (C26418 + C26417) * C603) * C51041 +
            C26421 * C51170) *
               C32266) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C256 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C251 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C257 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C252 +
             (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                 C258 +
             (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                 C253) *
                C51170 +
            ((C25953 + C25954) * C256 + (C25955 + C25956) * C251 -
             (C25957 + C25958) * C257 - (C25959 + C25960) * C252 +
             (C25961 + C25962) * C258 + (C25963 + C25964) * C253) *
                C51041) *
               C32266 +
           (((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
             (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
             (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
                C51170 +
            (C29596 * C256 + C29597 * C251 - C30847 * C257 - C30848 * C252 +
             (C28844 + C28845) * C258 + (C28846 + C28847) * C253) *
                C51041) *
               C51065) *
              C51158 +
          ((((C29071 + C29070) * C257 -
             ((C29069 + C29068) * C251 + (C29067 + C29066) * C256) +
             (C29073 + C29072) * C252 - (C29075 + C29074) * C258 -
             (C29077 + C29076) * C253) *
                C51170 +
            (C30849 * C257 - (C29598 * C251 + C29599 * C256) + C30852 * C252 -
             (C28845 + C28844) * C258 - (C28847 + C28846) * C253) *
                C51041) *
               C32266 +
           (((C29829 + C29830) * C257 -
             ((C29831 + C29832) * C251 + (C29833 + C29834) * C256) +
             (C29835 + C29836) * C252 -
             (C25757 * C854 + C50868 * C859 + C25756 * C853 + C25751 * C858) *
                 C258 -
             (C25757 * C863 + C50868 * C869 + C25756 * C862 + C25751 * C868) *
                 C253) *
                C51170 +
            ((C29837 + C29838) * C257 - (C30035 * C251 + C30036 * C256) +
             (C29839 + C29840) * C252 -
             (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                 C258 -
             (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                 C253) *
                C51041) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                  C603 +
              (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                  C50882) *
                 C51170 +
             ((C25953 + C25954) * C603 + (C25955 + C25956) * C50882) * C51041) *
                C32266 +
            (((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51170 +
             C29608 * C51041) *
                C51065) *
               C51158 -
           ((C30055 * C51041 +
             ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51170) *
                C51065 +
            (C29609 * C51041 +
             ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51170) *
                C32266) *
               C50965) *
              C507 +
          (((C29608 * C51170 + C29610 * C51041) * C32266 +
            (C30056 * C51170 +
             ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51041) *
                C51065) *
               C50965 -
           ((C26608 * C51041 + C29609 * C51170) * C51065 +
            (((C25968 + C25967) * C50882 + (C25966 + C25965) * C603) * C51041 +
             ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51170) *
                C32266) *
               C51158) *
              C508 +
          (((C26414 * C51170 +
             ((C26298 + C26297) * C603 + (C26296 + C26295) * C50882) * C51041) *
                C32266 +
            (C29610 * C51170 +
             ((C26600 + C26601) * C603 + (C26602 + C26603) * C50882) * C51041) *
                C51065) *
               C51158 -
           ((((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
               C25751 * C8957) *
                  C50882 +
              (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
               C25751 * C8955) *
                  C603) *
                 C51041 +
             ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51170) *
                C51065 +
            (((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51041 +
             C26608 * C51170) *
                C32266) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1174 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51201 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1175 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C51187 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C1176 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C1171) *
               C51027 * C51205 +
           ((C29066 + C29067) * C1174 + (C29068 + C29069) * C51201 -
            (C29070 + C29071) * C1175 - (C29072 + C29073) * C51187 +
            (C29074 + C29075) * C1176 + (C29076 + C29077) * C1171) *
               C51027 * C51199 +
           (C39340 * C1174 + C39341 * C51201 - C39342 * C1175 -
            C39343 * C51187 + (C38800 + C38801) * C1176 +
            (C38802 + C38803) * C1171) *
               C51027 * C38498) *
              C50953 * C1172 +
          (((C25958 + C25957) * C1175 -
            ((C25956 + C25955) * C51201 + (C25954 + C25953) * C1174) +
            (C25960 + C25959) * C51187 - (C25962 + C25961) * C1176 -
            (C25964 + C25963) * C1171) *
               C51027 * C51205 +
           (C30849 * C1175 - (C29598 * C51201 + C29599 * C1174) +
            C30852 * C51187 - (C28845 + C28844) * C1176 -
            (C28847 + C28846) * C1171) *
               C51027 * C51199 +
           ((C29837 + C29838) * C1175 - (C30035 * C51201 + C30036 * C1174) +
            (C29839 + C29840) * C51187 -
            (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                C1176 -
            (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                C1171) *
               C51027 * C38498) *
              C50953 * C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1280 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C1275 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1281 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51027 * C51205 +
           ((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
            (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
               C51027 * C51199 +
           (C39340 * C1280 + C39341 * C1275 - C39342 * C1281 -
            C39343 * C50887) *
               C51027 * C38498) *
              C50953 * C51202 +
          (((C25958 + C25957) * C1281 -
            ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
            (C25960 + C25959) * C50887) *
               C51027 * C51205 +
           C30862 * C51027 * C51199 +
           ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
            (C29839 + C29840) * C50887) *
               C51027 * C38498) *
              C50953 * C51190 +
          (C27321 * C51027 * C51205 +
           (C29600 * C1280 + C29601 * C1275 - (C27537 + C27536) * C1281 -
            (C27539 + C27538) * C50887) *
               C51027 * C51199 +
           ((C26921 + C26922) * C1280 + (C26923 + C26924) * C1275 -
            (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
             C25751 * C3328) *
                C1281 -
            (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
             C25751 * C3331) *
                C50887) *
               C51027 * C38498) *
              C50953 * C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51027 * C51205 +
            ((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
             (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                C51027 * C51199 +
            (C39340 * C1280 + C39341 * C1275 - C39342 * C1281 -
             C39343 * C50887) *
                C51027 * C38498) *
               C51158 +
           (((C29071 + C29070) * C1281 -
             ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
             (C29073 + C29072) * C50887) *
                C51027 * C51205 +
            ((C29829 + C29830) * C1281 -
             ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
             (C29835 + C29836) * C50887) *
                C51027 * C51199 +
            ((C39356 + C39357) * C1281 - (C39613 * C1275 + C39614 * C1280) +
             (C39358 + C39359) * C50887) *
                C51027 * C38498) *
               C50965) *
              C1172 +
          ((((C25958 + C25957) * C1281 -
             ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
             (C25960 + C25959) * C50887) *
                C51027 * C51205 +
            C30862 * C51027 * C51199 +
            ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
             (C29839 + C29840) * C50887) *
                C51027 * C38498) *
               C51158 +
           (C30861 * C51027 * C51205 +
            (C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
             (C29840 + C29839) * C50887) *
                C51027 * C51199 +
            ((C30051 + C30052) * C1280 + (C30053 + C30054) * C1275 -
             (C25757 * C3449 + C50868 * C3455 + C25756 * C3450 +
              C25751 * C3456) *
                 C1281 -
             (C25757 * C3452 + C50868 * C3458 + C25756 * C3453 +
              C25751 * C3459) *
                 C50887) *
                C51027 * C38498) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C50007 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C51149 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C50000 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51027 * C51205 +
            ((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
             (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
                C51027 * C51199 +
            C39363 * C38498) *
               C1514 +
           (((C29071 + C29070) * C50000 -
             ((C29069 + C29068) * C51149 + (C29067 + C29066) * C50007) +
             (C29073 + C29072) * C50887) *
                C51027 * C51205 +
            ((C29829 + C29830) * C50000 -
             ((C29831 + C29832) * C51149 + (C29833 + C29834) * C50007) +
             (C29835 + C29836) * C50887) *
                C51027 * C51199 +
            ((C39356 + C39357) * C50000 - (C39613 * C51149 + C39614 * C50007) +
             (C39358 + C39359) * C50887) *
                C51027 * C38498) *
               C50965) *
              C1172 +
          ((((C25958 + C25957) * C50000 -
             ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
             (C25960 + C25959) * C50887) *
                C51027 * C51205 +
            C31780 * C51027 * C51199 +
            ((C29837 + C29838) * C50000 - (C30035 * C51149 + C30036 * C50007) +
             (C29839 + C29840) * C50887) *
                C51027 * C38498) *
               C1514 +
           (C31779 * C51027 * C51205 +
            (C30037 * C50007 + C30038 * C51149 - (C29838 + C29837) * C50000 -
             (C29840 + C29839) * C50887) *
                C51027 * C51199 +
            ((C30051 + C30052) * C50007 + (C30053 + C30054) * C51149 -
             (C25757 * C3449 + C50868 * C3455 + C25756 * C3450 +
              C25751 * C3456) *
                 C50000 -
             (C25757 * C3452 + C50868 * C3458 + C25756 * C3453 +
              C25751 * C3459) *
                 C50887) *
                C51027 * C38498) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C51205 +
            ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
                C51199 +
            C39514 * C38498) *
               C1514 -
           (C39630 * C38498 +
            ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51027 *
                C51199 +
            ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51027 *
                C51205) *
               C50965) *
              C51202 +
          ((C29608 * C51027 * C51205 + C30056 * C51027 * C51199 +
            ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51027 *
                C38498) *
               C50965 -
           (C39512 * C38498 + C29609 * C51027 * C51199 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51027 *
                C51205) *
               C1514) *
              C51190 +
          ((C26414 * C51027 * C51205 + C29610 * C51027 * C51199 +
            ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51027 *
                C38498) *
               C1514 -
           (((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
              C25751 * C9087) *
                 C50882 +
             (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
              C25751 * C9085) *
                 C603) *
                C51027 * C38498 +
            ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51027 *
                C51199 +
            C26608 * C51027 * C51205) *
               C50965) *
              C1279)) /
        (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C51205 +
            ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
                C51199 +
            C39514 * C38498) *
               C51203 -
           (C39630 * C38498 +
            ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51027 *
                C51199 +
            ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51027 *
                C51205) *
               C51193 +
           (C39514 * C51205 +
            ((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C51027 *
                C51199 +
            ((C39625 + C39626) * C603 + (C39627 + C39628) * C50882) * C51027 *
                C38498) *
               C1746) *
              C1172 +
          ((C29608 * C51027 * C51205 + C30056 * C51027 * C51199 +
            ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51027 *
                C38498) *
               C51193 -
           (C39512 * C38498 + C29609 * C51027 * C51199 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51027 *
                C51205) *
               C51203 -
           (((C25757 * C16631 + C50868 * C16633 + C25756 * C13922 +
              C25751 * C13925) *
                 C50882 +
             (C25757 * C16630 + C50868 * C16632 + C25756 * C13919 +
              C25751 * C13923) *
                 C603) *
                C51027 * C38498 +
            ((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C51027 *
                C51199 +
            C39512 * C51205) *
               C1746) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C50007 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51149 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C50000 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51027 * C51205 +
           ((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
            (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
               C51027 * C51199 +
           ((C29834 + C29833) * C50007 + (C29832 + C29831) * C51149 -
            (C29830 + C29829) * C50000 - (C29836 + C29835) * C50887) *
               C51027 * C38498) *
              C50953 * C507 +
          (((C25958 + C25957) * C50000 -
            ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
            (C25960 + C25959) * C50887) *
               C51027 * C51205 +
           C31780 * C51027 * C51199 +
           ((C29837 + C29838) * C50000 - (C30035 * C51149 + C30036 * C50007) +
            (C29839 + C29840) * C50887) *
               C51027 * C38498) *
              C50953 * C508 +
          (C26303 * C51027 * C51205 +
           (C29600 * C50007 + C29601 * C51149 - (C27537 + C27536) * C50000 -
            (C27539 + C27538) * C50887) *
               C51027 * C51199 +
           ((C26921 + C26922) * C50007 + (C26923 + C26924) * C51149 -
            (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
             C25751 * C3328) *
                C50000 -
            (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
             C25751 * C3331) *
                C50887) *
               C51027 * C38498) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
               C121 +
           (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
               C109 -
           (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
               C122 -
           (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
               C110 +
           (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
               C123 +
           (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
               C111 -
           (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
               C124 -
           (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
               C112) *
              C51027 * C51205 +
          ((C29066 + C29067) * C121 + (C29068 + C29069) * C109 -
           (C29070 + C29071) * C122 - (C29072 + C29073) * C110 +
           (C29074 + C29075) * C123 + (C29076 + C29077) * C111 -
           (C25757 * C386 + C50868 * C392 + C25756 * C385 + C25751 * C391) *
               C124 -
           (C25757 * C398 + C50868 * C405 + C25756 * C393 + C25751 * C401) *
               C112) *
              C51027 * C51199 +
          ((C29834 + C29833) * C121 + (C29832 + C29831) * C109 -
           (C29830 + C29829) * C122 - (C29836 + C29835) * C110 +
           (C25756 * C853 + C25751 * C858 + C25757 * C854 + C50868 * C859) *
               C123 +
           (C25756 * C862 + C25751 * C868 + C25757 * C863 + C50868 * C869) *
               C111 -
           (C25757 * C855 + C50868 * C864 + C25756 * C854 + C25751 * C859) *
               C124 -
           (C25757 * C865 + C50868 * C870 + C25756 * C863 + C25751 * C869) *
               C112) *
              C51027 * C38498) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C50007 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51149 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C50000 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51027 * C51205 +
           ((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
            (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
               C51027 * C51199 +
           C39363 * C38498) *
              C848 +
          (((C29071 + C29070) * C50000 -
            ((C29069 + C29068) * C51149 + (C29067 + C29066) * C50007) +
            (C29073 + C29072) * C50887) *
               C51027 * C51205 +
           ((C29829 + C29830) * C50000 -
            ((C29831 + C29832) * C51149 + (C29833 + C29834) * C50007) +
            (C29835 + C29836) * C50887) *
               C51027 * C51199 +
           ((C39356 + C39357) * C50000 -
            ((C30198 + C30197) * C51149 + (C30196 + C30195) * C50007) +
            (C39358 + C39359) * C50887) *
               C51027 * C38498) *
              C849 +
          (C39363 * C51205 +
           ((C30195 + C30196) * C50007 + (C30197 + C30198) * C51149 -
            (C39357 + C39356) * C50000 - (C39359 + C39358) * C50887) *
               C51027 * C51199 +
           ((C25756 * C6201 + C25751 * C6207 + C25757 * C6200 +
             C50868 * C6206) *
                C50007 +
            (C25756 * C6204 + C25751 * C6210 + C25757 * C6203 +
             C50868 * C6209) *
                C51149 -
            (C25757 * C6199 + C50868 * C6205 + C25756 * C6200 +
             C25751 * C6206) *
                C50000 -
            (C25757 * C6202 + C50868 * C6208 + C25756 * C6203 +
             C25751 * C6209) *
                C50887) *
               C51027 * C38498) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C603 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C50882) *
               C51027 * C51205 +
           ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
               C51199 +
           ((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C51027 *
               C38498) *
              C50953 * C599 -
          (C30055 * C51027 * C38498 + C29609 * C51027 * C51199 +
           ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51027 *
               C51205) *
              C50953 * C600 +
          (C26414 * C51027 * C51205 + C29610 * C51027 * C51199 +
           ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51027 *
               C38498) *
              C50953 * C601 -
          (((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
             C25751 * C8957) *
                C50882 +
            (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
             C25751 * C8955) *
                C603) *
               C51027 * C38498 +
           ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51027 *
               C51199 +
           C26421 * C51027 * C51205) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51027 * C51205 +
           ((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
            (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
            (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
               C51027 * C51199 +
           ((C29834 + C29833) * C256 + (C29832 + C29831) * C251 -
            (C29830 + C29829) * C257 - (C29836 + C29835) * C252 +
            (C25756 * C853 + C25751 * C858 + C25757 * C854 + C50868 * C859) *
                C258 +
            (C25756 * C862 + C25751 * C868 + C25757 * C863 + C50868 * C869) *
                C253) *
               C51027 * C38498) *
              C50953 * C51157 +
          (((C25958 + C25957) * C257 -
            ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
            (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
            (C25964 + C25963) * C253) *
               C51027 * C51205 +
           (C30849 * C257 - (C29598 * C251 + C29599 * C256) + C30852 * C252 -
            (C28845 + C28844) * C258 - (C28847 + C28846) * C253) *
               C51027 * C51199 +
           ((C29837 + C29838) * C257 - (C30035 * C251 + C30036 * C256) +
            (C29839 + C29840) * C252 -
            (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                C258 -
            (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                C253) *
               C51027 * C38498) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C51205 +
            ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
                C51199 +
            C39514 * C38498) *
               C848 -
           (((C30198 + C30197) * C50882 + (C30196 + C30195) * C603) * C51027 *
                C38498 +
            ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51027 *
                C51199 +
            ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51027 *
                C51205) *
               C849 +
           (C39514 * C51205 +
            ((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C51027 *
                C51199 +
            ((C25756 * C6201 + C25751 * C6207 + C25757 * C6200 +
              C50868 * C6206) *
                 C603 +
             (C25756 * C6204 + C25751 * C6210 + C25757 * C6203 +
              C50868 * C6209) *
                 C50882) *
                C51027 * C38498) *
               C850) *
              C51157 +
          ((C29608 * C51027 * C51205 + C30056 * C51027 * C51199 +
            ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51027 *
                C38498) *
               C849 -
           (C39512 * C38498 + C29609 * C51027 * C51199 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51027 *
                C51205) *
               C848 -
           (((C25757 * C16631 + C50868 * C16633 + C25756 * C13922 +
              C25751 * C13925) *
                 C50882 +
             (C25757 * C16630 + C50868 * C16632 + C25756 * C13919 +
              C25751 * C13923) *
                 C603) *
                C51027 * C38498 +
            ((C30054 + C30053) * C50882 + (C30052 + C30051) * C603) * C51027 *
                C51199 +
            C39512 * C51205) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C51205 +
            ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
                C51199 +
            ((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C51027 *
                C38498) *
               C51158 -
           (((C30198 + C30197) * C50882 + (C30196 + C30195) * C603) * C51027 *
                C38498 +
            ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51027 *
                C51199 +
            ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51027 *
                C51205) *
               C50965) *
              C507 +
          ((C29608 * C51027 * C51205 + C30056 * C51027 * C51199 +
            ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51027 *
                C38498) *
               C50965 -
           (C30055 * C51027 * C38498 + C29609 * C51027 * C51199 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51027 *
                C51205) *
               C51158) *
              C508 +
          ((C26414 * C51027 * C51205 + C29610 * C51027 * C51199 +
            ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51027 *
                C38498) *
               C51158 -
           (((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
              C25751 * C9087) *
                 C50882 +
             (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
              C25751 * C9085) *
                 C603) *
                C51027 * C38498 +
            ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51027 *
                C51199 +
            C26608 * C51027 * C51205) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51027 * C51205 +
           ((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
            (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
            (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
               C51027 * C51199 +
           ((C29834 + C29833) * C256 + (C29832 + C29831) * C251 -
            (C29830 + C29829) * C257 - (C29836 + C29835) * C252 +
            (C38800 + C38801) * C258 + (C38802 + C38803) * C253) *
               C51027 * C38498) *
              C51158 +
          (((C29071 + C29070) * C257 -
            ((C29069 + C29068) * C251 + (C29067 + C29066) * C256) +
            (C29073 + C29072) * C252 - (C29075 + C29074) * C258 -
            (C29077 + C29076) * C253) *
               C51027 * C51205 +
           ((C29829 + C29830) * C257 -
            ((C29831 + C29832) * C251 + (C29833 + C29834) * C256) +
            (C29835 + C29836) * C252 - (C38801 + C38800) * C258 -
            (C38803 + C38802) * C253) *
               C51027 * C51199 +
           ((C25756 * C1057 + C25751 * C1065 + C25757 * C1056 +
             C50868 * C1064) *
                C257 -
            ((C30198 + C30197) * C251 + (C30196 + C30195) * C256) +
            (C25756 * C1061 + C25751 * C1069 + C25757 * C1060 +
             C50868 * C1068) *
                C252 -
            (C25757 * C1055 + C50868 * C1063 + C25756 * C1056 +
             C25751 * C1064) *
                C258 -
            (C25757 * C1059 + C50868 * C1067 + C25756 * C1060 +
             C25751 * C1068) *
                C253) *
               C51027 * C38498) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C603 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C50882) *
               C51027 * C51205 +
           ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
               C51199 +
           C39514 * C38498) *
              C1051 -
          (C39630 * C38498 +
           ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51027 *
               C51199 +
           ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51027 *
               C51205) *
              C1052 +
          (C39514 * C51205 +
           ((C30195 + C30196) * C603 + (C30197 + C30198) * C50882) * C51027 *
               C51199 +
           ((C39625 + C39626) * C603 + (C39627 + C39628) * C50882) * C51027 *
               C38498) *
              C1053 -
          (((C25757 * C16756 + C50868 * C16760 + C25756 * C16757 +
             C25751 * C16761) *
                C50882 +
            (C25757 * C16754 + C50868 * C16758 + C25756 * C16755 +
             C25751 * C16759) *
                C603) *
               C51027 * C38498 +
           ((C39628 + C39627) * C50882 + (C39626 + C39625) * C603) * C51027 *
               C51199 +
           C39630 * C51205) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1174 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51201 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1175 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C51187 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C1176 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C1171) *
               C51027 * C51205 +
           ((C29066 + C29067) * C1174 + (C29068 + C29069) * C51201 -
            (C29070 + C29071) * C1175 - (C29072 + C29073) * C51187 +
            (C29074 + C29075) * C1176 + (C29076 + C29077) * C1171) *
               C51027 * C51199 +
           (C39340 * C1174 + C39341 * C51201 - C39342 * C1175 -
            C39343 * C51187 + (C38800 + C38801) * C1176 +
            (C38802 + C38803) * C1171) *
               C51027 * C38498) *
              C1514 +
          (((C29071 + C29070) * C1175 -
            ((C29069 + C29068) * C51201 + (C29067 + C29066) * C1174) +
            (C29073 + C29072) * C51187 - (C29075 + C29074) * C1176 -
            (C29077 + C29076) * C1171) *
               C51027 * C51205 +
           ((C29829 + C29830) * C1175 -
            ((C29831 + C29832) * C51201 + (C29833 + C29834) * C1174) +
            (C29835 + C29836) * C51187 - (C38801 + C38800) * C1176 -
            (C38803 + C38802) * C1171) *
               C51027 * C51199 +
           ((C39356 + C39357) * C1175 - (C39613 * C51201 + C39614 * C1174) +
            (C39358 + C39359) * C51187 -
            (C25757 * C1055 + C50868 * C1063 + C25756 * C1056 +
             C25751 * C1064) *
                C1176 -
            (C25757 * C1059 + C50868 * C1067 + C25756 * C1060 +
             C25751 * C1068) *
                C1171) *
               C51027 * C38498) *
              C50965) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C1280 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C1275 -
             (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                 C1281 -
             (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                 C50887) *
                C51027 * C51205 +
            ((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
             (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
                C51027 * C51199 +
            (C39340 * C1280 + C39341 * C1275 - C39342 * C1281 -
             C39343 * C50887) *
                C51027 * C38498) *
               C1514 +
           (((C29071 + C29070) * C1281 -
             ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
             (C29073 + C29072) * C50887) *
                C51027 * C51205 +
            ((C29829 + C29830) * C1281 -
             ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
             (C29835 + C29836) * C50887) *
                C51027 * C51199 +
            ((C39356 + C39357) * C1281 - (C39613 * C1275 + C39614 * C1280) +
             (C39358 + C39359) * C50887) *
                C51027 * C38498) *
               C50965) *
              C51157 +
          ((((C25958 + C25957) * C1281 -
             ((C25956 + C25955) * C1275 + (C25954 + C25953) * C1280) +
             (C25960 + C25959) * C50887) *
                C51027 * C51205 +
            C30862 * C51027 * C51199 +
            ((C29837 + C29838) * C1281 - (C30035 * C1275 + C30036 * C1280) +
             (C29839 + C29840) * C50887) *
                C51027 * C38498) *
               C1514 +
           (C30861 * C51027 * C51205 +
            (C30037 * C1280 + C30038 * C1275 - (C29838 + C29837) * C1281 -
             (C29840 + C29839) * C50887) *
                C51027 * C51199 +
            ((C30051 + C30052) * C1280 + (C30053 + C30054) * C1275 -
             (C25757 * C3449 + C50868 * C3455 + C25756 * C3450 +
              C25751 * C3456) *
                 C1281 -
             (C25757 * C3452 + C50868 * C3458 + C25756 * C3453 +
              C25751 * C3459) *
                 C50887) *
                C51027 * C38498) *
               C50965) *
              C50941)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C1280 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C1275 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C1281 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51027 * C51205 +
           ((C29066 + C29067) * C1280 + (C29068 + C29069) * C1275 -
            (C29070 + C29071) * C1281 - (C29072 + C29073) * C50887) *
               C51027 * C51199 +
           C40610 * C38498) *
              C51203 +
          (((C29071 + C29070) * C1281 -
            ((C29069 + C29068) * C1275 + (C29067 + C29066) * C1280) +
            (C29073 + C29072) * C50887) *
               C51027 * C51205 +
           ((C29829 + C29830) * C1281 -
            ((C29831 + C29832) * C1275 + (C29833 + C29834) * C1280) +
            (C29835 + C29836) * C50887) *
               C51027 * C51199 +
           ((C39356 + C39357) * C1281 - (C39613 * C1275 + C39614 * C1280) +
            (C39358 + C39359) * C50887) *
               C51027 * C38498) *
              C51193 +
          (C40610 * C51205 +
           ((C30195 + C30196) * C1280 + (C30197 + C30198) * C1275 -
            (C39357 + C39356) * C1281 - (C39359 + C39358) * C50887) *
               C51027 * C51199 +
           ((C39625 + C39626) * C1280 + (C39627 + C39628) * C1275 -
            (C25757 * C6199 + C50868 * C6205 + C25756 * C6200 +
             C25751 * C6206) *
                C1281 -
            (C25757 * C6202 + C50868 * C6208 + C25756 * C6203 +
             C25751 * C6209) *
                C50887) *
               C51027 * C38498) *
              C1746) *
         C50927) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
               C121 +
           (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
               C109 -
           (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
               C122 -
           (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
               C110 +
           (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
               C123 +
           (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
               C111 -
           (C25757 * C129 + C50868 * C140 + C25756 * C128 + C25751 * C135) *
               C124 -
           (C25757 * C141 + C50868 * C150 + C25756 * C139 + C25751 * C149) *
               C112) *
              C51027 * C51205 +
          ((C29066 + C29067) * C121 + (C29068 + C29069) * C109 -
           (C29070 + C29071) * C122 - (C29072 + C29073) * C110 +
           (C29074 + C29075) * C123 + (C29076 + C29077) * C111 -
           (C25757 * C386 + C50868 * C392 + C25756 * C385 + C25751 * C391) *
               C124 -
           (C25757 * C398 + C50868 * C405 + C25756 * C393 + C25751 * C401) *
               C112) *
              C51027 * C51199 +
          ((C29834 + C29833) * C121 + (C29832 + C29831) * C109 -
           (C29830 + C29829) * C122 - (C29836 + C29835) * C110 +
           (C25756 * C853 + C25751 * C858 + C25757 * C854 + C50868 * C859) *
               C123 +
           (C25756 * C862 + C25751 * C868 + C25757 * C863 + C50868 * C869) *
               C111 -
           (C25757 * C855 + C50868 * C864 + C25756 * C854 + C25751 * C859) *
               C124 -
           (C25757 * C865 + C50868 * C870 + C25756 * C863 + C25751 * C869) *
               C112) *
              C51027 * C38498) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C50007 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C51149 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C50000 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C50887) *
               C51027 * C51205 +
           ((C29066 + C29067) * C50007 + (C29068 + C29069) * C51149 -
            (C29070 + C29071) * C50000 - (C29072 + C29073) * C50887) *
               C51027 * C51199 +
           ((C29834 + C29833) * C50007 + (C29832 + C29831) * C51149 -
            (C29830 + C29829) * C50000 - (C29836 + C29835) * C50887) *
               C51027 * C38498) *
              C50953 * C507 +
          (((C25958 + C25957) * C50000 -
            ((C25956 + C25955) * C51149 + (C25954 + C25953) * C50007) +
            (C25960 + C25959) * C50887) *
               C51027 * C51205 +
           C31780 * C51027 * C51199 +
           ((C29837 + C29838) * C50000 - (C30035 * C51149 + C30036 * C50007) +
            (C29839 + C29840) * C50887) *
               C51027 * C38498) *
              C50953 * C508 +
          (C26303 * C51027 * C51205 +
           (C29600 * C50007 + C29601 * C51149 - (C27537 + C27536) * C50000 -
            (C27539 + C27538) * C50887) *
               C51027 * C51199 +
           ((C26921 + C26922) * C50007 + (C26923 + C26924) * C51149 -
            (C25757 * C3321 + C50868 * C3327 + C25756 * C3322 +
             C25751 * C3328) *
                C50000 -
            (C25757 * C3324 + C50868 * C3330 + C25756 * C3325 +
             C25751 * C3331) *
                C50887) *
               C51027 * C38498) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51027 * C51205 +
           ((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
            (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
            (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
               C51027 * C51199 +
           ((C29834 + C29833) * C256 + (C29832 + C29831) * C251 -
            (C29830 + C29829) * C257 - (C29836 + C29835) * C252 +
            (C25756 * C853 + C25751 * C858 + C25757 * C854 + C50868 * C859) *
                C258 +
            (C25756 * C862 + C25751 * C868 + C25757 * C863 + C50868 * C869) *
                C253) *
               C51027 * C38498) *
              C50953 * C51157 +
          (((C25958 + C25957) * C257 -
            ((C25956 + C25955) * C251 + (C25954 + C25953) * C256) +
            (C25960 + C25959) * C252 - (C25962 + C25961) * C258 -
            (C25964 + C25963) * C253) *
               C51027 * C51205 +
           (C30849 * C257 - (C29598 * C251 + C29599 * C256) + C30852 * C252 -
            (C28845 + C28844) * C258 - (C28847 + C28846) * C253) *
               C51027 * C51199 +
           ((C29837 + C29838) * C257 - (C30035 * C251 + C30036 * C256) +
            (C29839 + C29840) * C252 -
            (C25757 * C969 + C50868 * C977 + C25756 * C970 + C25751 * C978) *
                C258 -
            (C25757 * C973 + C50868 * C981 + C25756 * C974 + C25751 * C982) *
                C253) *
               C51027 * C38498) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C603 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C50882) *
               C51027 * C51205 +
           ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
               C51199 +
           ((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C51027 *
               C38498) *
              C50953 * C599 -
          (C30055 * C51027 * C38498 + C29609 * C51027 * C51199 +
           ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51027 *
               C51205) *
              C50953 * C600 +
          (C26414 * C51027 * C51205 + C29610 * C51027 * C51199 +
           ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51027 *
               C38498) *
              C50953 * C601 -
          (((C25757 * C8952 + C50868 * C8956 + C25756 * C8953 +
             C25751 * C8957) *
                C50882 +
            (C25757 * C8950 + C50868 * C8954 + C25756 * C8951 +
             C25751 * C8955) *
                C603) *
               C51027 * C38498 +
           ((C26603 + C26602) * C50882 + (C26601 + C26600) * C603) * C51027 *
               C51199 +
           C26421 * C51027 * C51205) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                C256 +
            (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                C251 -
            (C25757 * C127 + C50868 * C134 + C25756 * C126 + C25751 * C133) *
                C257 -
            (C25757 * C138 + C50868 * C148 + C25756 * C137 + C25751 * C147) *
                C252 +
            (C25756 * C127 + C25751 * C134 + C25757 * C128 + C50868 * C135) *
                C258 +
            (C25756 * C138 + C25751 * C148 + C25757 * C139 + C50868 * C149) *
                C253) *
               C51027 * C51205 +
           ((C29066 + C29067) * C256 + (C29068 + C29069) * C251 -
            (C29070 + C29071) * C257 - (C29072 + C29073) * C252 +
            (C29074 + C29075) * C258 + (C29076 + C29077) * C253) *
               C51027 * C51199 +
           ((C29834 + C29833) * C256 + (C29832 + C29831) * C251 -
            (C29830 + C29829) * C257 - (C29836 + C29835) * C252 +
            (C38800 + C38801) * C258 + (C38802 + C38803) * C253) *
               C51027 * C38498) *
              C51158 +
          (((C29071 + C29070) * C257 -
            ((C29069 + C29068) * C251 + (C29067 + C29066) * C256) +
            (C29073 + C29072) * C252 - (C29075 + C29074) * C258 -
            (C29077 + C29076) * C253) *
               C51027 * C51205 +
           ((C29829 + C29830) * C257 -
            ((C29831 + C29832) * C251 + (C29833 + C29834) * C256) +
            (C29835 + C29836) * C252 - (C38801 + C38800) * C258 -
            (C38803 + C38802) * C253) *
               C51027 * C51199 +
           ((C25756 * C1057 + C25751 * C1065 + C25757 * C1056 +
             C50868 * C1064) *
                C257 -
            ((C30198 + C30197) * C251 + (C30196 + C30195) * C256) +
            (C25756 * C1061 + C25751 * C1069 + C25757 * C1060 +
             C50868 * C1068) *
                C252 -
            (C25757 * C1055 + C50868 * C1063 + C25756 * C1056 +
             C25751 * C1064) *
                C258 -
            (C25757 * C1059 + C50868 * C1067 + C25756 * C1060 +
             C25751 * C1068) *
                C253) *
               C51027 * C38498) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C25756 * C125 + C25751 * C132 + C25757 * C126 + C50868 * C133) *
                 C603 +
             (C25756 * C136 + C25751 * C146 + C25757 * C137 + C50868 * C147) *
                 C50882) *
                C51027 * C51205 +
            ((C29066 + C29067) * C603 + (C29068 + C29069) * C50882) * C51027 *
                C51199 +
            ((C29834 + C29833) * C603 + (C29832 + C29831) * C50882) * C51027 *
                C38498) *
               C51158 -
           (((C30198 + C30197) * C50882 + (C30196 + C30195) * C603) * C51027 *
                C38498 +
            ((C29831 + C29832) * C50882 + (C29833 + C29834) * C603) * C51027 *
                C51199 +
            ((C29069 + C29068) * C50882 + (C29067 + C29066) * C603) * C51027 *
                C51205) *
               C50965) *
              C507 +
          ((C29608 * C51027 * C51205 + C30056 * C51027 * C51199 +
            ((C30051 + C30052) * C603 + (C30053 + C30054) * C50882) * C51027 *
                C38498) *
               C50965 -
           (C30055 * C51027 * C38498 + C29609 * C51027 * C51199 +
            ((C25956 + C25955) * C50882 + (C25954 + C25953) * C603) * C51027 *
                C51205) *
               C51158) *
              C508 +
          ((C26414 * C51027 * C51205 + C29610 * C51027 * C51199 +
            ((C26921 + C26922) * C603 + (C26923 + C26924) * C50882) * C51027 *
                C38498) *
               C51158 -
           (((C25757 * C9082 + C50868 * C9086 + C25756 * C9083 +
              C25751 * C9087) *
                 C50882 +
             (C25757 * C9080 + C50868 * C9084 + C25756 * C9081 +
              C25751 * C9085) *
                 C603) *
                C51027 * C38498 +
            ((C26924 + C26923) * C50882 + (C26922 + C26921) * C603) * C51027 *
                C51199 +
            C26608 * C51027 * C51205) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51201 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51187 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51027 * C51053 * C50953 * C1172 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1175 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51201 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1174) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C51187 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C1176 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C1171) *
              C51027 * C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1174 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51201 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1175 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C51187 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C1176 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C1171) *
               C7787 +
           ((C7987 + C7988) * C1174 + (C7989 + C7990) * C51201 -
            (C7991 + C7992) * C1175 - (C7993 + C7994) * C51187 +
            (C7995 + C7996) * C1176 + (C7997 + C7998) * C1171) *
               C7788 +
           (C8303 * C1174 + C8304 * C51201 - C8305 * C1175 - C8306 * C51187 +
            (C8007 + C8008) * C1176 + (C8009 + C8010) * C1171) *
               C7789) *
              C51053 * C50953 * C1172 +
          (((C7992 + C7991) * C1175 -
            ((C7990 + C7989) * C51201 + (C7988 + C7987) * C1174) +
            (C7994 + C7993) * C51187 - (C7996 + C7995) * C1176 -
            (C7998 + C7997) * C1171) *
               C7787 +
           ((C8004 + C8003) * C1175 -
            ((C8002 + C8001) * C51201 + (C8000 + C7999) * C1174) +
            (C8006 + C8005) * C51187 - (C8008 + C8007) * C1176 -
            (C8010 + C8009) * C1171) *
               C7788 +
           ((C8327 + C8328) * C1175 - (C8446 * C51201 + C8447 * C1174) +
            (C8333 + C8334) * C51187 -
            (C49954 * C604 + C50868 * C612 + C49961 * C605 + C51142 * C613) *
                C1176 -
            (C49954 * C608 + C50868 * C616 + C49961 * C609 + C51142 * C617) *
                C1171) *
               C7789) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C50953 * C51202 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C1281 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C1275 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C1280) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50887) *
              C51027 * C51053 * C50953 * C51190 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C1280 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C1275 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C1281 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50887) *
              C51027 * C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1280 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C1275 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1281 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
            (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
               C7788 +
           C9387 * C7789) *
              C51053 * C50953 * C51202 +
          (((C7992 + C7991) * C1281 -
            ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
            (C7994 + C7993) * C50887) *
               C7787 +
           ((C8004 + C8003) * C1281 -
            ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
            (C8006 + C8005) * C50887) *
               C7788 +
           ((C8327 + C8328) * C1281 - (C8446 * C1275 + C8447 * C1280) +
            (C8333 + C8334) * C50887) *
               C7789) *
              C51053 * C50953 * C51190 +
          (C9387 * C7787 +
           ((C8332 + C8331) * C1280 + (C8330 + C8329) * C1275 -
            (C8328 + C8327) * C1281 - (C8334 + C8333) * C50887) *
               C7788 +
           ((C8459 + C8460) * C1280 + (C8461 + C8462) * C1275 -
            (C49954 * C2805 + C50868 * C2811 + C49961 * C2806 +
             C51142 * C2812) *
                C1281 -
            (C49954 * C2808 + C50868 * C2814 + C49961 * C2809 +
             C51142 * C2815) *
                C50887) *
               C7789) *
              C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50887) *
               C51027 * C51053 * C51158 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50887) *
               C51027 * C51053 * C50965) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50887) *
               C51027 * C51053 * C51158 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50887) *
               C51027 * C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C7787 +
            ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
             (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                C7788 +
            C9387 * C7789) *
               C51053 * C51158 +
           (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                 C1281 -
             ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                  C1275 +
              (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                  C1280) +
             (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                 C50887) *
                C7787 +
            ((C9598 + C9599) * C1281 -
             ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
             (C9600 + C9601) * C50887) *
                C7788 +
            ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
             (C9604 + C9605) * C50887) *
                C7789) *
               C51053 * C50965) *
              C1172 +
          ((((C7992 + C7991) * C1281 -
             ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
             (C7994 + C7993) * C50887) *
                C7787 +
            ((C8004 + C8003) * C1281 -
             ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
             (C8006 + C8005) * C50887) *
                C7788 +
            ((C8327 + C8328) * C1281 - (C8446 * C1275 + C8447 * C1280) +
             (C8333 + C8334) * C50887) *
                C7789) *
               C51053 * C51158 +
           (((C8649 + C8648) * C1280 + (C8647 + C8646) * C1275 -
             (C9599 + C9598) * C1281 - (C9601 + C9600) * C50887) *
                C7787 +
            ((C8645 + C8644) * C1280 + (C8643 + C8642) * C1275 -
             (C9603 + C9602) * C1281 - (C9605 + C9604) * C50887) *
                C7788 +
            ((C8650 + C8651) * C1280 + (C8652 + C8653) * C1275 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C1281 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C7789) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C50007 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C51149 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C50000 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C50000 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C51149 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C50007) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50887) *
               C51027 * C51053 * C50965) *
              C1172 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C50000 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C51149 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C50007) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C50007 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C51149 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C50000 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50887) *
               C51027 * C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C50007 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C51149 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C50000 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C7787 +
            ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
             (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
                C7788 +
            C8337 * C7789) *
               C51053 * C1514 +
           (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                 C50000 -
             ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                  C51149 +
              (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                  C50007) +
             (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                 C50887) *
                C7787 +
            ((C9598 + C9599) * C50000 -
             ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
             (C9600 + C9601) * C50887) *
                C7788 +
            ((C9602 + C9603) * C50000 - (C8654 * C51149 + C8655 * C50007) +
             (C9604 + C9605) * C50887) *
                C7789) *
               C51053 * C50965) *
              C1172 +
          ((((C7992 + C7991) * C50000 -
             ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
             (C7994 + C7993) * C50887) *
                C7787 +
            ((C8004 + C8003) * C50000 -
             ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
             (C8006 + C8005) * C50887) *
                C7788 +
            ((C8327 + C8328) * C50000 - (C8446 * C51149 + C8447 * C50007) +
             (C8333 + C8334) * C50887) *
                C7789) *
               C51053 * C1514 +
           (((C8649 + C8648) * C50007 + (C8647 + C8646) * C51149 -
             (C9599 + C9598) * C50000 - (C9601 + C9600) * C50887) *
                C7787 +
            ((C8645 + C8644) * C50007 + (C8643 + C8642) * C51149 -
             (C9603 + C9602) * C50000 - (C9605 + C9604) * C50887) *
                C7788 +
            ((C8650 + C8651) * C50007 + (C8652 + C8653) * C51149 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C50000 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C7789) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C1514 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C50965) *
              C51202 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C50965 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C1514) *
              C51190 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50882) *
               C51027 * C51053 * C1514 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50882 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51027 * C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C1514 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C50965) *
              C51202 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C50965 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C1514) *
              C51190 +
          ((C8456 * C7787 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
            ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
               C51053 * C1514 -
           (((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C7789 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C7788 +
            C8658 * C7787) *
               C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C51203 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C51193 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50882) *
               C51027 * C51053 * C1746) *
              C1172 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C51193 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C51203 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50882 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51027 * C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C51203 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C51193 +
           (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                 C603 +
             (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                 C50882) *
                C7787 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C7788 +
            ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C7789) *
               C51053 * C1746) *
              C1172 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C51193 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C51203 -
           (((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
              C51142 * C8957) *
                 C50882 +
             (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
              C51142 * C8955) *
                 C603) *
                C7789 +
            ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C7788 +
            ((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C7787) *
               C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51149 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C50953 * C507 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C50000 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51149 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C50007) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50887) *
              C51027 * C51053 * C50953 * C508 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C50007 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C51149 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C50000 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50887) *
              C51027 * C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51027 * C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51149 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C848 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C50000 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51149 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C50007) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50887) *
              C51027 * C51053 * C849 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C50007 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C51149 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C50000 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50887) *
              C51027 * C51053 * C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
               C121 +
           (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
               C109 -
           (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
               C122 -
           (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
               C110 +
           (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
               C123 +
           (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
               C111 -
           (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
               C124 -
           (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
               C112) *
              C7787 +
          ((C49961 * C263 + C51142 * C273 + C49954 * C259 + C50868 * C265) *
               C121 +
           (C49961 * C272 + C51142 * C280 + C49954 * C271 + C50868 * C279) *
               C109 -
           (C49954 * C260 + C50868 * C266 + C49961 * C259 + C51142 * C265) *
               C122 -
           (C49954 * C270 + C50868 * C278 + C49961 * C271 + C51142 * C279) *
               C110 +
           (C49961 * C260 + C51142 * C266 + C49954 * C261 + C50868 * C267) *
               C123 +
           (C49961 * C270 + C51142 * C278 + C49954 * C269 + C50868 * C277) *
               C111 -
           (C49954 * C262 + C50868 * C268 + C49961 * C261 + C51142 * C267) *
               C124 -
           (C49954 * C274 + C50868 * C281 + C49961 * C269 + C51142 * C277) *
               C112) *
              C7788 +
          ((C49961 * C512 + C51142 * C517 + C49954 * C513 + C50868 * C518) *
               C121 +
           (C49961 * C521 + C51142 * C527 + C49954 * C522 + C50868 * C528) *
               C109 -
           (C49954 * C514 + C50868 * C519 + C49961 * C513 + C51142 * C518) *
               C122 -
           (C49954 * C523 + C50868 * C529 + C49961 * C522 + C51142 * C528) *
               C110 +
           (C49961 * C514 + C51142 * C519 + C49954 * C515 + C50868 * C520) *
               C123 +
           (C49961 * C523 + C51142 * C529 + C49954 * C524 + C50868 * C530) *
               C111 -
           (C49954 * C516 + C50868 * C525 + C49961 * C515 + C51142 * C520) *
               C124 -
           (C49954 * C526 + C50868 * C531 + C49961 * C524 + C51142 * C530) *
               C112) *
              C7789) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
            (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
               C7788 +
           C8337 * C7789) *
              C51053 * C50953 * C507 +
          (((C7992 + C7991) * C50000 -
            ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
            (C7994 + C7993) * C50887) *
               C7787 +
           ((C8004 + C8003) * C50000 -
            ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
            (C8006 + C8005) * C50887) *
               C7788 +
           ((C8327 + C8328) * C50000 -
            ((C8329 + C8330) * C51149 + (C8331 + C8332) * C50007) +
            (C8333 + C8334) * C50887) *
               C7789) *
              C51053 * C50953 * C508 +
          (C8337 * C7787 +
           ((C8332 + C8331) * C50007 + (C8330 + C8329) * C51149 -
            (C8328 + C8327) * C50000 - (C8334 + C8333) * C50887) *
               C7788 +
           ((C49961 * C2807 + C51142 * C2813 + C49954 * C2806 +
             C50868 * C2812) *
                C50007 +
            (C49961 * C2810 + C51142 * C2816 + C49954 * C2809 +
             C50868 * C2815) *
                C51149 -
            (C49954 * C2805 + C50868 * C2811 + C49961 * C2806 +
             C51142 * C2812) *
                C50000 -
            (C49954 * C2808 + C50868 * C2814 + C49961 * C2809 +
             C51142 * C2815) *
                C50887) *
               C7789) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
            (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
               C7788 +
           C8337 * C7789) *
              C51053 * C848 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C50000 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C51149 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C50007) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C50887) *
               C7787 +
           ((C49961 * C719 + C51142 * C727 + C49954 * C720 + C50868 * C728) *
                C50000 -
            ((C8646 + C8647) * C51149 + (C8648 + C8649) * C50007) +
            (C49961 * C731 + C51142 * C743 + C49954 * C732 + C50868 * C744) *
                C50887) *
               C7788 +
           ((C49961 * C724 + C51142 * C740 + C49954 * C723 + C50868 * C739) *
                C50000 -
            (C8654 * C51149 + C8655 * C50007) +
            (C49961 * C736 + C51142 * C748 + C49954 * C735 + C50868 * C747) *
                C50887) *
               C7789) *
              C51053 * C849 +
          (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C50007 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C51149 -
            (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
                C50000 -
            (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
                C50887) *
               C7787 +
           ((C49961 * C972 + C51142 * C980 + C49954 * C971 + C50868 * C979) *
                C50007 +
            (C49961 * C976 + C51142 * C984 + C49954 * C975 + C50868 * C983) *
                C51149 -
            (C49954 * C970 + C50868 * C978 + C49961 * C971 + C51142 * C979) *
                C50000 -
            (C49954 * C974 + C50868 * C982 + C49961 * C975 + C51142 * C983) *
                C50887) *
               C7788 +
           ((C49961 * C3323 + C51142 * C3329 + C49954 * C3322 +
             C50868 * C3328) *
                C50007 +
            (C49961 * C3326 + C51142 * C3332 + C49954 * C3325 +
             C50868 * C3331) *
                C51149 -
            (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
             C51142 * C3328) *
                C50000 -
            (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
             C51142 * C3331) *
                C50887) *
               C7789) *
              C51053 * C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50882) *
              C51027 * C51053 * C50953 * C599 -
          ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
            C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
               C50882 +
           (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
            C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
               C603) *
              C51027 * C51053 * C50953 * C600 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C603 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C50882) *
              C51027 * C51053 * C50953 * C601 -
          ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
            C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
               C50882 +
           (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
            C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
               C603) *
              C51027 * C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51027 * C51053 * C50953 * C51157 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C257 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C251 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C256) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C252 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C258 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C253) *
              C51027 * C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C848 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C849 +
           ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
             C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
                C603 +
            (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
             C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
                C50882) *
               C51027 * C51053 * C850) *
              C51157 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C849 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C848 -
           ((C120 * C973 + C108 * C981 + C119 * C974 + C107 * C982 +
             C118 * C975 + C106 * C983 + C117 * C976 + C105 * C984) *
                C50882 +
            (C120 * C969 + C108 * C977 + C119 * C970 + C107 * C978 +
             C118 * C971 + C106 * C979 + C117 * C972 + C105 * C980) *
                C603) *
               C51027 * C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C50953 * C51157 +
          (((C7992 + C7991) * C257 -
            ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
            (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
            (C7998 + C7997) * C253) *
               C7787 +
           ((C8004 + C8003) * C257 -
            ((C8002 + C8001) * C251 + (C8000 + C7999) * C256) +
            (C8006 + C8005) * C252 - (C8008 + C8007) * C258 -
            (C8010 + C8009) * C253) *
               C7788 +
           ((C49961 * C606 + C51142 * C614 + C49954 * C605 + C50868 * C613) *
                C257 -
            ((C49954 * C610 + C50868 * C618 + C49961 * C611 + C51142 * C619) *
                 C251 +
             (C49954 * C606 + C50868 * C614 + C49961 * C607 + C51142 * C615) *
                 C256) +
            (C49961 * C610 + C51142 * C618 + C49954 * C609 + C50868 * C617) *
                C252 -
            (C49954 * C604 + C50868 * C612 + C49961 * C605 + C51142 * C613) *
                C258 -
            (C49954 * C608 + C50868 * C616 + C49961 * C609 + C51142 * C617) *
                C253) *
               C7789) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C7787 +
           ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
           C8456 * C7789) *
              C51053 * C50953 * C599 -
          (C8463 * C7789 +
           ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
           ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
              C51053 * C50953 * C600 +
          (C8456 * C7787 +
           ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
           ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
              C51053 * C50953 * C601 -
          (((C49954 * C8437 + C50868 * C8441 + C49961 * C8438 +
             C51142 * C8442) *
                C50882 +
            (C49954 * C8435 + C50868 * C8439 + C49961 * C8436 +
             C51142 * C8440) *
                C603) *
               C7789 +
           ((C8462 + C8461) * C50882 + (C8460 + C8459) * C603) * C7788 +
           C8463 * C7787) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C848 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C849 +
           (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                 C603 +
             (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                 C50882) *
                C7787 +
            ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C7788 +
            ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C7789) *
               C51053 * C850) *
              C51157 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C849 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C848 -
           (((C49954 * C8952 + C50868 * C8956 + C49961 * C8953 +
              C51142 * C8957) *
                 C50882 +
             (C49954 * C8950 + C50868 * C8954 + C49961 * C8951 +
              C51142 * C8955) *
                 C603) *
                C7789 +
            ((C8982 + C8981) * C50882 + (C8980 + C8979) * C603) * C7788 +
            ((C8978 + C8977) * C50882 + (C8976 + C8975) * C603) * C7787) *
               C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C51158 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C50965) *
              C507 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C50965 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C51158) *
              C508 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50882) *
               C51027 * C51053 * C51158 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50882 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51027 * C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51027 * C51053 * C51158 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C257 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C251 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C256) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C252 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C258 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C253) *
              C51027 * C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50882) *
              C51027 * C51053 * C1051 -
          ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
            C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
               C50882 +
           (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
            C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
               C603) *
              C51027 * C51053 * C1052 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C603 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C50882) *
              C51027 * C51053 * C1053 -
          ((C120 * C1059 + C108 * C1067 + C119 * C1060 + C107 * C1068 +
            C118 * C1061 + C106 * C1069 + C117 * C1062 + C105 * C1070) *
               C50882 +
           (C120 * C1055 + C108 * C1063 + C119 * C1056 + C107 * C1064 +
            C118 * C1057 + C106 * C1065 + C117 * C1058 + C105 * C1066) *
               C603) *
              C51027 * C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C51158 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C257 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C251 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C256) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C252 -
            (C49954 * C385 + C50868 * C391 + C49961 * C384 + C51142 * C390) *
                C258 -
            (C49954 * C393 + C50868 * C401 + C49961 * C394 + C51142 * C402) *
                C253) *
               C7787 +
           ((C49961 * C719 + C51142 * C727 + C49954 * C720 + C50868 * C728) *
                C257 -
            ((C49954 * C731 + C50868 * C743 + C49961 * C730 + C51142 * C742) *
                 C251 +
             (C49954 * C719 + C50868 * C727 + C49961 * C718 + C51142 * C726) *
                 C256) +
            (C49961 * C731 + C51142 * C743 + C49954 * C732 + C50868 * C744) *
                C252 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C258 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C253) *
               C7788 +
           ((C49961 * C724 + C51142 * C740 + C49954 * C723 + C50868 * C739) *
                C257 -
            ((C49954 * C736 + C50868 * C748 + C49961 * C737 + C51142 * C749) *
                 C251 +
             (C49954 * C724 + C50868 * C740 + C49961 * C725 + C51142 * C741) *
                 C256) +
            (C49961 * C736 + C51142 * C748 + C49954 * C735 + C50868 * C747) *
                C252 -
            (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                C258 -
            (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                C253) *
               C7789) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C51158 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C50965) *
              C507 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C50965 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C51158) *
              C508 +
          ((C8456 * C7787 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
            ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
               C51053 * C51158 -
           (((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C7789 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C7788 +
            C8658 * C7787) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C7787 +
           ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
           C8456 * C7789) *
              C51053 * C1051 -
          (C8658 * C7789 +
           ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
           ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                C50882 +
            (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                C603) *
               C7787) *
              C51053 * C1052 +
          (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C603 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C50882) *
               C7787 +
           ((C8975 + C8976) * C603 + (C8977 + C8978) * C50882) * C7788 +
           ((C8979 + C8980) * C603 + (C8981 + C8982) * C50882) * C7789) *
              C51053 * C1053 -
          (((C49954 * C9082 + C50868 * C9086 + C49961 * C9083 +
             C51142 * C9087) *
                C50882 +
            (C49954 * C9080 + C50868 * C9084 + C49961 * C9081 +
             C51142 * C9085) *
                C603) *
               C7789 +
           ((C49954 * C3453 + C50868 * C3459 + C49961 * C3454 +
             C51142 * C3460) *
                C50882 +
            (C49954 * C3450 + C50868 * C3456 + C49961 * C3451 +
             C51142 * C3457) *
                C603) *
               C7788 +
           ((C49954 * C1061 + C50868 * C1069 + C49961 * C1062 +
             C51142 * C1070) *
                C50882 +
            (C49954 * C1057 + C50868 * C1065 + C49961 * C1058 +
             C51142 * C1066) *
                C603) *
               C7787) *
              C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1174 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51201 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1175 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C51187 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C1176 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C1171) *
              C51027 * C51053 * C1514 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1175 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C51201 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1174) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C51187 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C1176 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C1171) *
              C51027 * C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1174 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51201 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1175 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C51187 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C1176 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C1171) *
               C7787 +
           ((C7987 + C7988) * C1174 + (C7989 + C7990) * C51201 -
            (C7991 + C7992) * C1175 - (C7993 + C7994) * C51187 +
            (C7995 + C7996) * C1176 + (C7997 + C7998) * C1171) *
               C7788 +
           (C8303 * C1174 + C8304 * C51201 - C8305 * C1175 - C8306 * C51187 +
            (C8007 + C8008) * C1176 + (C8009 + C8010) * C1171) *
               C7789) *
              C51053 * C1514 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C1175 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C51201 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C1174) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C51187 -
            (C49954 * C385 + C50868 * C391 + C49961 * C384 + C51142 * C390) *
                C1176 -
            (C49954 * C393 + C50868 * C401 + C49961 * C394 + C51142 * C402) *
                C1171) *
               C7787 +
           ((C9598 + C9599) * C1175 -
            ((C8646 + C8647) * C51201 + (C8648 + C8649) * C1174) +
            (C9600 + C9601) * C51187 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C1176 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C1171) *
               C7788 +
           ((C9602 + C9603) * C1175 - (C8654 * C51201 + C8655 * C1174) +
            (C9604 + C9605) * C51187 -
            (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                C1176 -
            (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                C1171) *
               C7789) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C1280 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C1275 -
            (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
             C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
                C1281 -
            (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
             C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
             C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
                C1281 -
            ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
              C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                 C1275 +
             (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
              C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                 C1280) +
            (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
             C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
                C50887) *
               C51027 * C51053 * C50965) *
              C51157 +
          (((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
             C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
                C1281 -
            ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
              C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                 C1275 +
             (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
              C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                 C1280) +
            (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
             C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
                C50887) *
               C51027 * C51053 * C1514 +
           ((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C1280 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C1275 -
            (C120 * C1412 + C108 * C1413 + C119 * C721 + C107 * C729 +
             C118 * C720 + C106 * C728 + C117 * C719 + C105 * C727) *
                C1281 -
            (C120 * C1414 + C108 * C1415 + C119 * C733 + C107 * C745 +
             C118 * C732 + C106 * C744 + C117 * C731 + C105 * C743) *
                C50887) *
               C51027 * C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C1280 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C1275 -
             (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                 C1281 -
             (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                 C50887) *
                C7787 +
            ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
             (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
                C7788 +
            C9387 * C7789) *
               C51053 * C1514 +
           (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                 C1281 -
             ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                  C1275 +
              (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                  C1280) +
             (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                 C50887) *
                C7787 +
            ((C9598 + C9599) * C1281 -
             ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
             (C9600 + C9601) * C50887) *
                C7788 +
            ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
             (C9604 + C9605) * C50887) *
                C7789) *
               C51053 * C50965) *
              C51157 +
          ((((C7992 + C7991) * C1281 -
             ((C7990 + C7989) * C1275 + (C7988 + C7987) * C1280) +
             (C7994 + C7993) * C50887) *
                C7787 +
            ((C8004 + C8003) * C1281 -
             ((C8002 + C8001) * C1275 + (C8000 + C7999) * C1280) +
             (C8006 + C8005) * C50887) *
                C7788 +
            ((C8327 + C8328) * C1281 - (C8446 * C1275 + C8447 * C1280) +
             (C8333 + C8334) * C50887) *
                C7789) *
               C51053 * C1514 +
           (((C8649 + C8648) * C1280 + (C8647 + C8646) * C1275 -
             (C9599 + C9598) * C1281 - (C9601 + C9600) * C50887) *
                C7787 +
            ((C8645 + C8644) * C1280 + (C8643 + C8642) * C1275 -
             (C9603 + C9602) * C1281 - (C9605 + C9604) * C50887) *
                C7788 +
            ((C8650 + C8651) * C1280 + (C8652 + C8653) * C1275 -
             (C49954 * C2981 + C50868 * C2987 + C49961 * C2982 +
              C51142 * C2988) *
                 C1281 -
             (C49954 * C2984 + C50868 * C2990 + C49961 * C2985 +
              C51142 * C2991) *
                 C50887) *
                C7789) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C1280 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C1275 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C1281 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C51203 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C1281 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C1275 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C1280) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C50887) *
              C51027 * C51053 * C51193 +
          ((C117 * C851 + C105 * C856 + C118 * C852 + C106 * C857 +
            C119 * C853 + C107 * C858 + C120 * C854 + C108 * C859) *
               C1280 +
           (C117 * C860 + C105 * C866 + C118 * C861 + C106 * C867 +
            C119 * C862 + C107 * C868 + C120 * C863 + C108 * C869) *
               C1275 -
           (C120 * C855 + C108 * C864 + C119 * C854 + C107 * C859 +
            C118 * C853 + C106 * C858 + C117 * C852 + C105 * C857) *
               C1281 -
           (C120 * C865 + C108 * C870 + C119 * C863 + C107 * C869 +
            C118 * C862 + C106 * C868 + C117 * C861 + C105 * C867) *
               C50887) *
              C51027 * C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C1280 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C1275 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C1281 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C1280 + (C7989 + C7990) * C1275 -
            (C7991 + C7992) * C1281 - (C7993 + C7994) * C50887) *
               C7788 +
           C9387 * C7789) *
              C51053 * C51203 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C1281 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C1275 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C1280) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C50887) *
               C7787 +
           ((C9598 + C9599) * C1281 -
            ((C8646 + C8647) * C1275 + (C8648 + C8649) * C1280) +
            (C9600 + C9601) * C50887) *
               C7788 +
           ((C9602 + C9603) * C1281 - (C8654 * C1275 + C8655 * C1280) +
            (C9604 + C9605) * C50887) *
               C7789) *
              C51053 * C51193 +
          (((C49961 * C851 + C51142 * C856 + C49954 * C852 + C50868 * C857) *
                C1280 +
            (C49961 * C860 + C51142 * C866 + C49954 * C861 + C50868 * C867) *
                C1275 -
            (C49954 * C853 + C50868 * C858 + C49961 * C852 + C51142 * C857) *
                C1281 -
            (C49954 * C862 + C50868 * C868 + C49961 * C861 + C51142 * C867) *
                C50887) *
               C7787 +
           ((C8975 + C8976) * C1280 + (C8977 + C8978) * C1275 -
            (C49954 * C970 + C50868 * C978 + C49961 * C971 + C51142 * C979) *
                C1281 -
            (C49954 * C974 + C50868 * C982 + C49961 * C975 + C51142 * C983) *
                C50887) *
               C7788 +
           ((C8979 + C8980) * C1280 + (C8981 + C8982) * C1275 -
            (C49954 * C3321 + C50868 * C3327 + C49961 * C3322 +
             C51142 * C3328) *
                C1281 -
            (C49954 * C3324 + C50868 * C3330 + C49961 * C3325 +
             C51142 * C3331) *
                C50887) *
               C7789) *
              C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 + C119 * C127 +
           C107 * C134 + C120 * C128 + C108 * C135) *
              C121 +
          (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 + C119 * C138 +
           C107 * C148 + C120 * C139 + C108 * C149) *
              C109 -
          (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 + C118 * C127 +
           C106 * C134 + C117 * C126 + C105 * C133) *
              C122 -
          (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 + C118 * C138 +
           C106 * C148 + C117 * C137 + C105 * C147) *
              C110 +
          (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 + C119 * C129 +
           C107 * C140 + C120 * C130 + C108 * C142) *
              C123 +
          (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 + C119 * C141 +
           C107 * C150 + C120 * C143 + C108 * C151) *
              C111 -
          (C120 * C131 + C108 * C144 + C119 * C130 + C107 * C142 + C118 * C129 +
           C106 * C140 + C117 * C128 + C105 * C135) *
              C124 -
          (C120 * C145 + C108 * C152 + C119 * C143 + C107 * C151 + C118 * C141 +
           C106 * C150 + C117 * C139 + C105 * C149) *
              C112) *
         C51027 * C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C50007 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C51149 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C50000 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C50887) *
              C51027 * C51053 * C50953 * C507 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C50000 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C51149 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C50007) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C50887) *
              C51027 * C51053 * C50953 * C508 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C50007 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C51149 -
           (C120 * C516 + C108 * C525 + C119 * C515 + C107 * C520 +
            C118 * C514 + C106 * C519 + C117 * C513 + C105 * C518) *
               C50000 -
           (C120 * C526 + C108 * C531 + C119 * C524 + C107 * C530 +
            C118 * C523 + C106 * C529 + C117 * C522 + C105 * C528) *
               C50887) *
              C51027 * C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
               C121 +
           (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
               C109 -
           (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
               C122 -
           (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
               C110 +
           (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
               C123 +
           (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
               C111 -
           (C49954 * C129 + C50868 * C140 + C49961 * C128 + C51142 * C135) *
               C124 -
           (C49954 * C141 + C50868 * C150 + C49961 * C139 + C51142 * C149) *
               C112) *
              C7787 +
          ((C49961 * C263 + C51142 * C273 + C49954 * C259 + C50868 * C265) *
               C121 +
           (C49961 * C272 + C51142 * C280 + C49954 * C271 + C50868 * C279) *
               C109 -
           (C49954 * C260 + C50868 * C266 + C49961 * C259 + C51142 * C265) *
               C122 -
           (C49954 * C270 + C50868 * C278 + C49961 * C271 + C51142 * C279) *
               C110 +
           (C49961 * C260 + C51142 * C266 + C49954 * C261 + C50868 * C267) *
               C123 +
           (C49961 * C270 + C51142 * C278 + C49954 * C269 + C50868 * C277) *
               C111 -
           (C49954 * C262 + C50868 * C268 + C49961 * C261 + C51142 * C267) *
               C124 -
           (C49954 * C274 + C50868 * C281 + C49961 * C269 + C51142 * C277) *
               C112) *
              C7788 +
          ((C49961 * C512 + C51142 * C517 + C49954 * C513 + C50868 * C518) *
               C121 +
           (C49961 * C521 + C51142 * C527 + C49954 * C522 + C50868 * C528) *
               C109 -
           (C49954 * C514 + C50868 * C519 + C49961 * C513 + C51142 * C518) *
               C122 -
           (C49954 * C523 + C50868 * C529 + C49961 * C522 + C51142 * C528) *
               C110 +
           (C49961 * C514 + C51142 * C519 + C49954 * C515 + C50868 * C520) *
               C123 +
           (C49961 * C523 + C51142 * C529 + C49954 * C524 + C50868 * C530) *
               C111 -
           (C49954 * C516 + C50868 * C525 + C49961 * C515 + C51142 * C520) *
               C124 -
           (C49954 * C526 + C50868 * C531 + C49961 * C524 + C51142 * C530) *
               C112) *
              C7789) *
         C51053 * C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C50007 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C51149 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C50000 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C50887) *
               C7787 +
           ((C7987 + C7988) * C50007 + (C7989 + C7990) * C51149 -
            (C7991 + C7992) * C50000 - (C7993 + C7994) * C50887) *
               C7788 +
           C8337 * C7789) *
              C51053 * C50953 * C507 +
          (((C7992 + C7991) * C50000 -
            ((C7990 + C7989) * C51149 + (C7988 + C7987) * C50007) +
            (C7994 + C7993) * C50887) *
               C7787 +
           ((C8004 + C8003) * C50000 -
            ((C8002 + C8001) * C51149 + (C8000 + C7999) * C50007) +
            (C8006 + C8005) * C50887) *
               C7788 +
           ((C8327 + C8328) * C50000 -
            ((C8329 + C8330) * C51149 + (C8331 + C8332) * C50007) +
            (C8333 + C8334) * C50887) *
               C7789) *
              C51053 * C50953 * C508 +
          (C8337 * C7787 +
           ((C8332 + C8331) * C50007 + (C8330 + C8329) * C51149 -
            (C8328 + C8327) * C50000 - (C8334 + C8333) * C50887) *
               C7788 +
           ((C49961 * C2807 + C51142 * C2813 + C49954 * C2806 +
             C50868 * C2812) *
                C50007 +
            (C49961 * C2810 + C51142 * C2816 + C49954 * C2809 +
             C50868 * C2815) *
                C51149 -
            (C49954 * C2805 + C50868 * C2811 + C49961 * C2806 +
             C51142 * C2812) *
                C50000 -
            (C49954 * C2808 + C50868 * C2814 + C49961 * C2809 +
             C51142 * C2815) *
                C50887) *
               C7789) *
              C51053 * C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51027 * C51053 * C50953 * C51157 +
          ((C117 * C259 + C105 * C265 + C118 * C260 + C106 * C266 +
            C119 * C261 + C107 * C267 + C120 * C262 + C108 * C268) *
               C257 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C251 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C256) +
           (C117 * C271 + C105 * C279 + C118 * C270 + C106 * C278 +
            C119 * C269 + C107 * C277 + C120 * C274 + C108 * C281) *
               C252 -
           (C120 * C264 + C108 * C275 + C119 * C262 + C107 * C268 +
            C118 * C261 + C106 * C267 + C117 * C260 + C105 * C266) *
               C258 -
           (C120 * C276 + C108 * C282 + C119 * C274 + C107 * C281 +
            C118 * C269 + C106 * C277 + C117 * C270 + C105 * C278) *
               C253) *
              C51027 * C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C603 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C50882) *
              C51027 * C51053 * C50953 * C599 -
          ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
            C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
               C50882 +
           (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
            C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
               C603) *
              C51027 * C51053 * C50953 * C600 +
          ((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
            C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
               C603 +
           (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
            C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
               C50882) *
              C51027 * C51053 * C50953 * C601 -
          ((C120 * C608 + C108 * C616 + C119 * C609 + C107 * C617 +
            C118 * C610 + C106 * C618 + C117 * C611 + C105 * C619) *
               C50882 +
           (C120 * C604 + C108 * C612 + C119 * C605 + C107 * C613 +
            C118 * C606 + C106 * C614 + C117 * C607 + C105 * C615) *
               C603) *
              C51027 * C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C50953 * C51157 +
          (((C7992 + C7991) * C257 -
            ((C7990 + C7989) * C251 + (C7988 + C7987) * C256) +
            (C7994 + C7993) * C252 - (C7996 + C7995) * C258 -
            (C7998 + C7997) * C253) *
               C7787 +
           ((C8004 + C8003) * C257 -
            ((C8002 + C8001) * C251 + (C8000 + C7999) * C256) +
            (C8006 + C8005) * C252 - (C8008 + C8007) * C258 -
            (C8010 + C8009) * C253) *
               C7788 +
           ((C49961 * C606 + C51142 * C614 + C49954 * C605 + C50868 * C613) *
                C257 -
            ((C49954 * C610 + C50868 * C618 + C49961 * C611 + C51142 * C619) *
                 C251 +
             (C49954 * C606 + C50868 * C614 + C49961 * C607 + C51142 * C615) *
                 C256) +
            (C49961 * C610 + C51142 * C618 + C49954 * C609 + C50868 * C617) *
                C252 -
            (C49954 * C604 + C50868 * C612 + C49961 * C605 + C51142 * C613) *
                C258 -
            (C49954 * C608 + C50868 * C616 + C49961 * C609 + C51142 * C617) *
                C253) *
               C7789) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C603 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C50882) *
               C7787 +
           ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
           C8456 * C7789) *
              C51053 * C50953 * C599 -
          (C8463 * C7789 +
           ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
           ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
              C51053 * C50953 * C600 +
          (C8456 * C7787 +
           ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
           ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
              C51053 * C50953 * C601 -
          (((C49954 * C8437 + C50868 * C8441 + C49961 * C8438 +
             C51142 * C8442) *
                C50882 +
            (C49954 * C8435 + C50868 * C8439 + C49961 * C8436 +
             C51142 * C8440) *
                C603) *
               C7789 +
           ((C8462 + C8461) * C50882 + (C8460 + C8459) * C603) * C7788 +
           C8463 * C7787) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
            C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
               C256 +
           (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
            C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
               C251 -
           (C120 * C129 + C108 * C140 + C119 * C128 + C107 * C135 +
            C118 * C127 + C106 * C134 + C117 * C126 + C105 * C133) *
               C257 -
           (C120 * C141 + C108 * C150 + C119 * C139 + C107 * C149 +
            C118 * C138 + C106 * C148 + C117 * C137 + C105 * C147) *
               C252 +
           (C117 * C127 + C105 * C134 + C118 * C128 + C106 * C135 +
            C119 * C129 + C107 * C140 + C120 * C130 + C108 * C142) *
               C258 +
           (C117 * C138 + C105 * C148 + C118 * C139 + C106 * C149 +
            C119 * C141 + C107 * C150 + C120 * C143 + C108 * C151) *
               C253) *
              C51027 * C51053 * C51158 +
          ((C117 * C383 + C105 * C389 + C118 * C384 + C106 * C390 +
            C119 * C385 + C107 * C391 + C120 * C386 + C108 * C392) *
               C257 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C251 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C256) +
           (C117 * C395 + C105 * C403 + C118 * C394 + C106 * C402 +
            C119 * C393 + C107 * C401 + C120 * C398 + C108 * C405) *
               C252 -
           (C120 * C388 + C108 * C399 + C119 * C386 + C107 * C392 +
            C118 * C385 + C106 * C391 + C117 * C384 + C105 * C390) *
               C258 -
           (C120 * C400 + C108 * C406 + C119 * C398 + C107 * C405 +
            C118 * C393 + C106 * C401 + C117 * C394 + C105 * C402) *
               C253) *
              C51027 * C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C125 + C105 * C132 + C118 * C126 + C106 * C133 +
             C119 * C127 + C107 * C134 + C120 * C128 + C108 * C135) *
                C603 +
            (C117 * C136 + C105 * C146 + C118 * C137 + C106 * C147 +
             C119 * C138 + C107 * C148 + C120 * C139 + C108 * C149) *
                C50882) *
               C51027 * C51053 * C51158 -
           ((C120 * C393 + C108 * C401 + C119 * C394 + C107 * C402 +
             C118 * C395 + C106 * C403 + C117 * C396 + C105 * C404) *
                C50882 +
            (C120 * C385 + C108 * C391 + C119 * C384 + C107 * C390 +
             C118 * C383 + C106 * C389 + C117 * C387 + C105 * C397) *
                C603) *
               C51027 * C51053 * C50965) *
              C507 +
          (((C117 * C718 + C105 * C726 + C118 * C719 + C106 * C727 +
             C119 * C720 + C107 * C728 + C120 * C721 + C108 * C729) *
                C603 +
            (C117 * C730 + C105 * C742 + C118 * C731 + C106 * C743 +
             C119 * C732 + C107 * C744 + C120 * C733 + C108 * C745) *
                C50882) *
               C51027 * C51053 * C50965 -
           ((C120 * C269 + C108 * C277 + C119 * C270 + C107 * C278 +
             C118 * C271 + C106 * C279 + C117 * C272 + C105 * C280) *
                C50882 +
            (C120 * C261 + C108 * C267 + C119 * C260 + C107 * C266 +
             C118 * C259 + C106 * C265 + C117 * C263 + C105 * C273) *
                C603) *
               C51027 * C51053 * C51158) *
              C508 +
          (((C117 * C512 + C105 * C517 + C118 * C513 + C106 * C518 +
             C119 * C514 + C107 * C519 + C120 * C515 + C108 * C520) *
                C603 +
            (C117 * C521 + C105 * C527 + C118 * C522 + C106 * C528 +
             C119 * C523 + C107 * C529 + C120 * C524 + C108 * C530) *
                C50882) *
               C51027 * C51053 * C51158 -
           ((C120 * C734 + C108 * C746 + C119 * C735 + C107 * C747 +
             C118 * C736 + C106 * C748 + C117 * C737 + C105 * C749) *
                C50882 +
            (C120 * C722 + C108 * C738 + C119 * C723 + C107 * C739 +
             C118 * C724 + C106 * C740 + C117 * C725 + C105 * C741) *
                C603) *
               C51027 * C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                C256 +
            (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                C251 -
            (C49954 * C127 + C50868 * C134 + C49961 * C126 + C51142 * C133) *
                C257 -
            (C49954 * C138 + C50868 * C148 + C49961 * C137 + C51142 * C147) *
                C252 +
            (C49961 * C127 + C51142 * C134 + C49954 * C128 + C50868 * C135) *
                C258 +
            (C49961 * C138 + C51142 * C148 + C49954 * C139 + C50868 * C149) *
                C253) *
               C7787 +
           ((C7987 + C7988) * C256 + (C7989 + C7990) * C251 -
            (C7991 + C7992) * C257 - (C7993 + C7994) * C252 +
            (C7995 + C7996) * C258 + (C7997 + C7998) * C253) *
               C7788 +
           ((C7999 + C8000) * C256 + (C8001 + C8002) * C251 -
            (C8003 + C8004) * C257 - (C8005 + C8006) * C252 +
            (C8007 + C8008) * C258 + (C8009 + C8010) * C253) *
               C7789) *
              C51053 * C51158 +
          (((C49961 * C383 + C51142 * C389 + C49954 * C384 + C50868 * C390) *
                C257 -
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C251 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C256) +
            (C49961 * C395 + C51142 * C403 + C49954 * C394 + C50868 * C402) *
                C252 -
            (C49954 * C385 + C50868 * C391 + C49961 * C384 + C51142 * C390) *
                C258 -
            (C49954 * C393 + C50868 * C401 + C49961 * C394 + C51142 * C402) *
                C253) *
               C7787 +
           ((C49961 * C719 + C51142 * C727 + C49954 * C720 + C50868 * C728) *
                C257 -
            ((C49954 * C731 + C50868 * C743 + C49961 * C730 + C51142 * C742) *
                 C251 +
             (C49954 * C719 + C50868 * C727 + C49961 * C718 + C51142 * C726) *
                 C256) +
            (C49961 * C731 + C51142 * C743 + C49954 * C732 + C50868 * C744) *
                C252 -
            (C49954 * C721 + C50868 * C729 + C49961 * C720 + C51142 * C728) *
                C258 -
            (C49954 * C733 + C50868 * C745 + C49961 * C732 + C51142 * C744) *
                C253) *
               C7788 +
           ((C49961 * C724 + C51142 * C740 + C49954 * C723 + C50868 * C739) *
                C257 -
            ((C49954 * C736 + C50868 * C748 + C49961 * C737 + C51142 * C749) *
                 C251 +
             (C49954 * C724 + C50868 * C740 + C49961 * C725 + C51142 * C741) *
                 C256) +
            (C49961 * C736 + C51142 * C748 + C49954 * C735 + C50868 * C747) *
                C252 -
            (C49954 * C722 + C50868 * C738 + C49961 * C723 + C51142 * C739) *
                C258 -
            (C49954 * C734 + C50868 * C746 + C49961 * C735 + C51142 * C747) *
                C253) *
               C7789) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C49961 * C125 + C51142 * C132 + C49954 * C126 + C50868 * C133) *
                 C603 +
             (C49961 * C136 + C51142 * C146 + C49954 * C137 + C50868 * C147) *
                 C50882) *
                C7787 +
            ((C7987 + C7988) * C603 + (C7989 + C7990) * C50882) * C7788 +
            C8456 * C7789) *
               C51053 * C51158 -
           (C8658 * C7789 +
            ((C8646 + C8647) * C50882 + (C8648 + C8649) * C603) * C7788 +
            ((C49954 * C395 + C50868 * C403 + C49961 * C396 + C51142 * C404) *
                 C50882 +
             (C49954 * C383 + C50868 * C389 + C49961 * C387 + C51142 * C397) *
                 C603) *
                C7787) *
               C51053 * C50965) *
              C507 +
          ((((C8649 + C8648) * C603 + (C8647 + C8646) * C50882) * C7787 +
            ((C8645 + C8644) * C603 + (C8643 + C8642) * C50882) * C7788 +
            ((C8650 + C8651) * C603 + (C8652 + C8653) * C50882) * C7789) *
               C51053 * C50965 -
           (C8463 * C7789 +
            ((C8002 + C8001) * C50882 + (C8000 + C7999) * C603) * C7788 +
            ((C7990 + C7989) * C50882 + (C7988 + C7987) * C603) * C7787) *
               C51053 * C51158) *
              C508 +
          ((C8456 * C7787 +
            ((C8332 + C8331) * C603 + (C8330 + C8329) * C50882) * C7788 +
            ((C8459 + C8460) * C603 + (C8461 + C8462) * C50882) * C7789) *
               C51053 * C51158 -
           (((C49954 * C8611 + C50868 * C8615 + C49961 * C8612 +
              C51142 * C8616) *
                 C50882 +
             (C49954 * C8609 + C50868 * C8613 + C49961 * C8610 +
              C51142 * C8614) *
                 C603) *
                C7789 +
            ((C8653 + C8652) * C50882 + (C8651 + C8650) * C603) * C7788 +
            C8658 * C7787) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1174 + (C2365 + C2366 + C2367) * C51201 -
            (C2368 + C2369 + C2370) * C1175 - (C2371 + C2372 + C2373) * C51187 +
            (C2374 + C2375 + C2376) * C1176 + (C2377 + C2378 + C2379) * C1171) *
               C51041) *
              C51053 * C50953 * C1172 +
          (((C2370 + C2369 + C2368) * C1175 -
            ((C2367 + C2366 + C2365) * C51201 +
             (C2364 + C2363 + C2362) * C1174) +
            (C2373 + C2372 + C2371) * C51187 - (C2376 + C2375 + C2374) * C1176 -
            (C2379 + C2378 + C2377) * C1171) *
               C51170 +
           ((C2696 + C2697 + C2698) * C1175 -
            ((C2699 + C2700 + C2701) * C51201 +
             (C2702 + C2703 + C2704) * C1174) +
            (C2705 + C2706 + C2707) * C51187 -
            (C2178 * C516 + C2173 * C525 + C2177 * C515 + C2172 * C520 +
             C2176 * C514 + C2171 * C519) *
                C1176 -
            (C2178 * C526 + C2173 * C531 + C2177 * C524 + C2172 * C530 +
             C2176 * C523 + C2171 * C529) *
                C1171) *
               C51041) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1174 +
            (C10648 * C136 + C50863 * C146) * C51201 -
            (C10648 * C126 + C50863 * C133) * C1175 -
            (C10648 * C137 + C50863 * C147) * C51187 +
            (C10648 * C127 + C50863 * C134) * C1176 +
            (C10648 * C138 + C50863 * C148) * C1171) *
               C10644 +
           (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C10645 +
           (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C10646 +
           (C11680 + C11681 - C11682 - C11683 + C11684 + C11685) * C10647) *
              C51053 * C50953 * C1172 +
          ((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C10644 +
           (C11676 - (C11675 + C11674) + C11677 - C11678 - C11679) * C10645 +
           (C11682 - (C11681 + C11680) + C11683 - C11684 - C11685) * C10646 +
           (C11038 * C1175 - (C11039 * C51201 + C11040 * C1174) +
            C11041 * C51187 - (C10648 * C2805 + C50863 * C2811) * C1176 -
            (C10648 * C2808 + C50863 * C2814) * C1171) *
               C10647) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
            (C2368 + C2369 + C2370) * C1281 -
            (C2371 + C2372 + C2373) * C50887) *
               C51041) *
              C51053 * C50953 * C51202 +
          (((C2370 + C2369 + C2368) * C1281 -
            ((C2367 + C2366 + C2365) * C1275 +
             (C2364 + C2363 + C2362) * C1280) +
            (C2373 + C2372 + C2371) * C50887) *
               C51170 +
           ((C2696 + C2697 + C2698) * C1281 -
            ((C2699 + C2700 + C2701) * C1275 +
             (C2702 + C2703 + C2704) * C1280) +
            (C2705 + C2706 + C2707) * C50887) *
               C51041) *
              C51053 * C50953 * C51190 +
          (((C2704 + C2703 + C2702) * C1280 + (C2701 + C2700 + C2699) * C1275 -
            (C2698 + C2697 + C2696) * C1281 -
            (C2707 + C2706 + C2705) * C50887) *
               C51170 +
           ((C2830 + C2831 + C2832) * C1280 + (C2833 + C2834 + C2835) * C1275 -
            (C2178 * C604 + C2173 * C612 + C2177 * C605 + C2172 * C613 +
             C2176 * C606 + C2171 * C614) *
                C1281 -
            (C2178 * C608 + C2173 * C616 + C2177 * C609 + C2172 * C617 +
             C2176 * C610 + C2171 * C618) *
                C50887) *
               C51041) *
              C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1280 +
            (C10648 * C136 + C50863 * C146) * C1275 -
            (C10648 * C126 + C50863 * C133) * C1281 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C10644 +
           (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
           C11805 * C10647) *
              C51053 * C50953 * C51202 +
          ((C11786 - (C11785 + C11784) + C11787) * C10644 +
           (C11790 - (C11789 + C11788) + C11791) * C10645 +
           (C11794 - (C11793 + C11792) + C11795) * C10646 +
           (C11796 - (C11797 + C11798) + C11799) * C10647) *
              C51053 * C50953 * C51190 +
          (C11804 * C10644 + C11805 * C10645 +
           (C11798 + C11797 - C11796 - C11799) * C10646 +
           (C11136 * C1280 + C11137 * C1275 -
            (C10648 * C8435 + C50863 * C8439) * C1281 -
            (C10648 * C8437 + C50863 * C8441) * C50887) *
               C10647) *
              C51053 * C50953 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51170 +
            ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
             (C2368 + C2369 + C2370) * C1281 -
             (C2371 + C2372 + C2373) * C50887) *
                C51041) *
               C51053 * C51158 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
              C2178 * C385 + C2173 * C391) *
                 C1281 -
             ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
               C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
               C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
              C2178 * C393 + C2173 * C401) *
                 C50887) *
                C51170 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51041) *
               C51053 * C50965) *
              C1172 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51170 +
            ((C2696 + C2697 + C2698) * C1281 -
             ((C2699 + C2700 + C2701) * C1275 +
              (C2702 + C2703 + C2704) * C1280) +
             (C2705 + C2706 + C2707) * C50887) *
                C51041) *
               C51053 * C51158 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51170 +
            ((C3024 + C3025 + C3026) * C1280 + (C3027 + C3028 + C3029) * C1275 -
             (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
              C2176 * C724 + C2171 * C740) *
                 C1281 -
             (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
              C2176 * C736 + C2171 * C748) *
                 C50887) *
                C51041) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C10644 +
            (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
            C11805 * C10647) *
               C51053 * C51158 +
           (((C10648 * C383 + C50863 * C389) * C1281 -
             ((C10648 * C396 + C50863 * C404) * C1275 +
              (C10648 * C387 + C50863 * C397) * C1280) +
             (C10648 * C395 + C50863 * C403) * C50887) *
                C10644 +
            (C11960 - (C11938 + C11939) + C11961) * C10645 +
            (C11962 - (C11944 + C11945) + C11963) * C10646 +
            (C11964 - (C11950 + C11951) + C11965) * C10647) *
               C51053 * C50965) *
              C1172 +
          (((C11786 - (C11785 + C11784) + C11787) * C10644 +
            (C11790 - (C11789 + C11788) + C11791) * C10645 +
            (C11794 - (C11793 + C11792) + C11795) * C10646 +
            (C11796 - (C11797 + C11798) + C11799) * C10647) *
               C51053 * C51158 +
           ((C11939 + C11938 - C11960 - C11961) * C10644 +
            (C11945 + C11944 - C11962 - C11963) * C10645 +
            (C11951 + C11950 - C11964 - C11965) * C10646 +
            (C11264 * C1280 + C11265 * C1275 -
             (C10648 * C8609 + C50863 * C8613) * C1281 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C10647) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C2176 * C125 + C2171 * C132 + C2177 * C126 +
                       C2172 * C133 + C2178 * C127 + C2173 * C134) *
                          C50007 +
                      (C2176 * C136 + C2171 * C146 + C2177 * C137 +
                       C2172 * C147 + C2178 * C138 + C2173 * C148) *
                          C51149 -
                      (C2178 * C128 + C2173 * C135 + C2177 * C127 +
                       C2172 * C134 + C2176 * C126 + C2171 * C133) *
                          C50000 -
                      (C2178 * C139 + C2173 * C149 + C2177 * C138 +
                       C2172 * C148 + C2176 * C137 + C2171 * C147) *
                          C50887) *
                         C51170 +
                     ((C2362 + C2363 + C2364) * C50007 +
                      (C2365 + C2366 + C2367) * C51149 -
                      (C2368 + C2369 + C2370) * C50000 -
                      (C2371 + C2372 + C2373) * C50887) *
                         C51041) *
                        C51053 * C1514 +
                    (((C2176 * C383 + C2171 * C389 + C2177 * C384 +
                       C2172 * C390 + C2178 * C385 + C2173 * C391) *
                          C50000 -
                      ((C2178 * C394 + C2173 * C402 + C2177 * C395 +
                        C2172 * C403 + C2176 * C396 + C2171 * C404) *
                           C51149 +
                       (C2178 * C384 + C2173 * C390 + C2177 * C383 +
                        C2172 * C389 + C2176 * C387 + C2171 * C397) *
                           C50007) +
                      (C2176 * C395 + C2171 * C403 + C2177 * C394 +
                       C2172 * C402 + C2178 * C393 + C2173 * C401) *
                          C50887) *
                         C51170 +
                     ((C3960 + C3961 + C3962) * C50000 -
                      ((C3018 + C3019 + C3020) * C51149 +
                       (C3021 + C3022 + C3023) * C50007) +
                      (C3963 + C3964 + C3965) * C50887) *
                         C51041) *
                        C51053 * C50965) *
                       C1172 +
                   ((((C2370 + C2369 + C2368) * C50000 -
                      ((C2367 + C2366 + C2365) * C51149 +
                       (C2364 + C2363 + C2362) * C50007) +
                      (C2373 + C2372 + C2371) * C50887) *
                         C51170 +
                     ((C2696 + C2697 + C2698) * C50000 -
                      ((C2699 + C2700 + C2701) * C51149 +
                       (C2702 + C2703 + C2704) * C50007) +
                      (C2705 + C2706 + C2707) * C50887) *
                         C51041) *
                        C51053 * C1514 +
                    (((C3023 + C3022 + C3021) * C50007 +
                      (C3020 + C3019 + C3018) * C51149 -
                      (C3962 + C3961 + C3960) * C50000 -
                      (C3965 + C3964 + C3963) * C50887) *
                         C51170 +
                     ((C3024 + C3025 + C3026) * C50007 +
                      (C3027 + C3028 + C3029) * C51149 -
                      (C2178 * C722 + C2173 * C738 + C2177 * C723 +
                       C2172 * C739 + C2176 * C724 + C2171 * C740) *
                          C50000 -
                      (C2178 * C734 + C2173 * C746 + C2177 * C735 +
                       C2172 * C747 + C2176 * C736 + C2171 * C748) *
                          C50887) *
                         C51041) *
                        C51053 * C50965) *
                       C50941)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C10648 * C125 + C50863 * C132) * C50007 +
                      (C10648 * C136 + C50863 * C146) * C51149 -
                      (C10648 * C126 + C50863 * C133) * C50000 -
                      (C10648 * C137 + C50863 * C147) * C50887) *
                         C10644 +
                     (C11016 + C11017 - C11018 - C11019) * C10645 +
                     C11048 * C10646 + C11049 * C10647) *
                        C51053 * C1514 +
                    (((C10648 * C383 + C50863 * C389) * C50000 -
                      ((C10648 * C396 + C50863 * C404) * C51149 +
                       (C10648 * C387 + C50863 * C397) * C50007) +
                      (C10648 * C395 + C50863 * C403) * C50887) *
                         C10644 +
                     (C12422 - (C12423 + C12424) + C12425) * C10645 +
                     (C12426 - (C12427 + C12428) + C12429) * C10646 +
                     (C12430 - (C12431 + C12432) + C12433) * C10647) *
                        C51053 * C50965) *
                       C1172 +
                   (((C11018 - (C11017 + C11016) + C11019) * C10644 +
                     (C11022 - (C11021 + C11020) + C11023) * C10645 +
                     (C11026 - (C11025 + C11024) + C11027) * C10646 +
                     (C11044 - (C11045 + C11046) + C11047) * C10647) *
                        C51053 * C1514 +
                    ((C12424 + C12423 - C12422 - C12425) * C10644 +
                     (C12428 + C12427 - C12426 - C12429) * C10645 +
                     (C12432 + C12431 - C12430 - C12433) * C10646 +
                     (C11264 * C50007 + C11265 * C51149 -
                      (C10648 * C8609 + C50863 * C8613) * C50000 -
                      (C10648 * C8611 + C50863 * C8615) * C50887) *
                         C10647) *
                        C51053 * C50965) *
                       C50941)) /
                     (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C1514 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C50965) *
              C51202 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C50965 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C1514) *
              C51190 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51170 +
            ((C2830 + C2831 + C2832) * C603 +
             (C2833 + C2834 + C2835) * C50882) *
                C51041) *
               C51053 * C1514 -
           (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
              C2176 * C2986 + C2171 * C2992) *
                 C50882 +
             (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
              C2176 * C2983 + C2171 * C2989) *
                 C603) *
                C51041 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51170) *
               C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C1514 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C50965) *
              C51202 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C50965 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C1514) *
              C51190 +
          ((C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
            (C11138 + C11139) * C10647) *
               C51053 * C1514 -
           (((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C10647 +
            (C11273 + C11272) * C10646 + C11274 * C10645 + C11275 * C10644) *
               C51053 * C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C51203 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C51193 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
              C2178 * C853 + C2173 * C858) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
              C2178 * C862 + C2173 * C868) *
                 C50882) *
                C51170 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51041) *
               C51053 * C1746) *
              C1172 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C51193 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C51203 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51041 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51170) *
               C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C51203 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C51193 +
           (((C10648 * C851 + C50863 * C856) * C603 +
             (C10648 * C860 + C50863 * C866) * C50882) *
                C10644 +
            (C11494 + C11495) * C10645 + (C11496 + C11497) * C10646 +
            (C11498 + C11499) * C10647) *
               C51053 * C1746) *
              C1172 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C51193 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C51203 -
           (((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C10647 +
            (C11499 + C11498) * C10646 + (C11497 + C11496) * C10645 +
            (C11495 + C11494) * C10644) *
               C51053 * C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] += (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C2176 * C125 + C2171 * C132 + C2177 * C126 +
                      C2172 * C133 + C2178 * C127 + C2173 * C134) *
                         C50007 +
                     (C2176 * C136 + C2171 * C146 + C2177 * C137 +
                      C2172 * C147 + C2178 * C138 + C2173 * C148) *
                         C51149 -
                     (C2178 * C128 + C2173 * C135 + C2177 * C127 +
                      C2172 * C134 + C2176 * C126 + C2171 * C133) *
                         C50000 -
                     (C2178 * C139 + C2173 * C149 + C2177 * C138 +
                      C2172 * C148 + C2176 * C137 + C2171 * C147) *
                         C50887) *
                        C51170 +
                    ((C2362 + C2363 + C2364) * C50007 +
                     (C2365 + C2366 + C2367) * C51149 -
                     (C2368 + C2369 + C2370) * C50000 -
                     (C2371 + C2372 + C2373) * C50887) *
                        C51041) *
                       C51053 * C50953 * C507 +
                   (((C2370 + C2369 + C2368) * C50000 -
                     ((C2367 + C2366 + C2365) * C51149 +
                      (C2364 + C2363 + C2362) * C50007) +
                     (C2373 + C2372 + C2371) * C50887) *
                        C51170 +
                    ((C2696 + C2697 + C2698) * C50000 -
                     ((C2699 + C2700 + C2701) * C51149 +
                      (C2702 + C2703 + C2704) * C50007) +
                     (C2705 + C2706 + C2707) * C50887) *
                        C51041) *
                       C51053 * C50953 * C508 +
                   (((C2704 + C2703 + C2702) * C50007 +
                     (C2701 + C2700 + C2699) * C51149 -
                     (C2698 + C2697 + C2696) * C50000 -
                     (C2707 + C2706 + C2705) * C50887) *
                        C51170 +
                    ((C2176 * C607 + C2171 * C615 + C2177 * C606 +
                      C2172 * C614 + C2178 * C605 + C2173 * C613) *
                         C50007 +
                     (C2176 * C611 + C2171 * C619 + C2177 * C610 +
                      C2172 * C618 + C2178 * C609 + C2173 * C617) *
                         C51149 -
                     (C2178 * C604 + C2173 * C612 + C2177 * C605 +
                      C2172 * C613 + C2176 * C606 + C2171 * C614) *
                         C50000 -
                     (C2178 * C608 + C2173 * C616 + C2177 * C609 +
                      C2172 * C617 + C2176 * C610 + C2171 * C618) *
                         C50887) *
                        C51041) *
                       C51053 * C50953 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                     C2178 * C127 + C2173 * C134) *
                        C121 +
                    (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                     C2178 * C138 + C2173 * C148) *
                        C109 -
                    (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                     C2176 * C126 + C2171 * C133) *
                        C122 -
                    (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                     C2176 * C137 + C2171 * C147) *
                        C110 +
                    (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                     C2178 * C129 + C2173 * C140) *
                        C123 +
                    (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                     C2178 * C141 + C2173 * C150) *
                        C111 -
                    (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
                     C2176 * C128 + C2171 * C135) *
                        C124 -
                    (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
                     C2176 * C139 + C2171 * C149) *
                        C112) *
                       C51170 +
                   ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C2172 * C265 +
                     C2178 * C260 + C2173 * C266) *
                        C121 +
                    (C2176 * C272 + C2171 * C280 + C2177 * C271 + C2172 * C279 +
                     C2178 * C270 + C2173 * C278) *
                        C109 -
                    (C2178 * C261 + C2173 * C267 + C2177 * C260 + C2172 * C266 +
                     C2176 * C259 + C2171 * C265) *
                        C122 -
                    (C2178 * C269 + C2173 * C277 + C2177 * C270 + C2172 * C278 +
                     C2176 * C271 + C2171 * C279) *
                        C110 +
                    (C2176 * C260 + C2171 * C266 + C2177 * C261 + C2172 * C267 +
                     C2178 * C262 + C2173 * C268) *
                        C123 +
                    (C2176 * C270 + C2171 * C278 + C2177 * C269 + C2172 * C277 +
                     C2178 * C274 + C2173 * C281) *
                        C111 -
                    (C2178 * C264 + C2173 * C275 + C2177 * C262 + C2172 * C268 +
                     C2176 * C261 + C2171 * C267) *
                        C124 -
                    (C2178 * C276 + C2173 * C282 + C2177 * C274 + C2172 * C281 +
                     C2176 * C269 + C2171 * C277) *
                        C112) *
                       C51041) *
                  C51053 * C50953 * C50927) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C2176 * C125 + C2171 * C132 + C2177 * C126 +
                      C2172 * C133 + C2178 * C127 + C2173 * C134) *
                         C50007 +
                     (C2176 * C136 + C2171 * C146 + C2177 * C137 +
                      C2172 * C147 + C2178 * C138 + C2173 * C148) *
                         C51149 -
                     (C2178 * C128 + C2173 * C135 + C2177 * C127 +
                      C2172 * C134 + C2176 * C126 + C2171 * C133) *
                         C50000 -
                     (C2178 * C139 + C2173 * C149 + C2177 * C138 +
                      C2172 * C148 + C2176 * C137 + C2171 * C147) *
                         C50887) *
                        C51170 +
                    ((C2362 + C2363 + C2364) * C50007 +
                     (C2365 + C2366 + C2367) * C51149 -
                     (C2368 + C2369 + C2370) * C50000 -
                     (C2371 + C2372 + C2373) * C50887) *
                        C51041) *
                       C51053 * C848 +
                   (((C2176 * C383 + C2171 * C389 + C2177 * C384 +
                      C2172 * C390 + C2178 * C385 + C2173 * C391) *
                         C50000 -
                     ((C2178 * C394 + C2173 * C402 + C2177 * C395 +
                       C2172 * C403 + C2176 * C396 + C2171 * C404) *
                          C51149 +
                      (C2178 * C384 + C2173 * C390 + C2177 * C383 +
                       C2172 * C389 + C2176 * C387 + C2171 * C397) *
                          C50007) +
                     (C2176 * C395 + C2171 * C403 + C2177 * C394 +
                      C2172 * C402 + C2178 * C393 + C2173 * C401) *
                         C50887) *
                        C51170 +
                    ((C2176 * C719 + C2171 * C727 + C2177 * C720 +
                      C2172 * C728 + C2178 * C721 + C2173 * C729) *
                         C50000 -
                     ((C3018 + C3019 + C3020) * C51149 +
                      (C3021 + C3022 + C3023) * C50007) +
                     (C2176 * C731 + C2171 * C743 + C2177 * C732 +
                      C2172 * C744 + C2178 * C733 + C2173 * C745) *
                         C50887) *
                        C51041) *
                       C51053 * C849 +
                   (((C2176 * C851 + C2171 * C856 + C2177 * C852 +
                      C2172 * C857 + C2178 * C853 + C2173 * C858) *
                         C50007 +
                     (C2176 * C860 + C2171 * C866 + C2177 * C861 +
                      C2172 * C867 + C2178 * C862 + C2173 * C868) *
                         C51149 -
                     (C2178 * C854 + C2173 * C859 + C2177 * C853 +
                      C2172 * C858 + C2176 * C852 + C2171 * C857) *
                         C50000 -
                     (C2178 * C863 + C2173 * C869 + C2177 * C862 +
                      C2172 * C868 + C2176 * C861 + C2171 * C867) *
                         C50887) *
                        C51170 +
                    ((C2176 * C972 + C2171 * C980 + C2177 * C971 +
                      C2172 * C979 + C2178 * C970 + C2173 * C978) *
                         C50007 +
                     (C2176 * C976 + C2171 * C984 + C2177 * C975 +
                      C2172 * C983 + C2178 * C974 + C2173 * C982) *
                         C51149 -
                     (C2178 * C969 + C2173 * C977 + C2177 * C970 +
                      C2172 * C978 + C2176 * C971 + C2171 * C979) *
                         C50000 -
                     (C2178 * C973 + C2173 * C981 + C2177 * C974 +
                      C2172 * C982 + C2176 * C975 + C2171 * C983) *
                         C50887) *
                        C51041) *
                       C51053 * C850) *
                  C50927) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C10648 * C125 + C50863 * C132) * C121 +
                    (C10648 * C136 + C50863 * C146) * C109 -
                    (C10648 * C126 + C50863 * C133) * C122 -
                    (C10648 * C137 + C50863 * C147) * C110 +
                    (C10648 * C127 + C50863 * C134) * C123 +
                    (C10648 * C138 + C50863 * C148) * C111 -
                    (C10648 * C128 + C50863 * C135) * C124 -
                    (C10648 * C139 + C50863 * C149) * C112) *
                       C10644 +
                   ((C10648 * C263 + C50863 * C273) * C121 +
                    (C10648 * C272 + C50863 * C280) * C109 -
                    (C10648 * C259 + C50863 * C265) * C122 -
                    (C10648 * C271 + C50863 * C279) * C110 +
                    (C10648 * C260 + C50863 * C266) * C123 +
                    (C10648 * C270 + C50863 * C278) * C111 -
                    (C10648 * C261 + C50863 * C267) * C124 -
                    (C10648 * C269 + C50863 * C277) * C112) *
                       C10645 +
                   ((C10648 * C512 + C50863 * C517) * C121 +
                    (C10648 * C521 + C50863 * C527) * C109 -
                    (C10648 * C513 + C50863 * C518) * C122 -
                    (C10648 * C522 + C50863 * C528) * C110 +
                    (C10648 * C514 + C50863 * C519) * C123 +
                    (C10648 * C523 + C50863 * C529) * C111 -
                    (C10648 * C515 + C50863 * C520) * C124 -
                    (C10648 * C524 + C50863 * C530) * C112) *
                       C10646 +
                   ((C10648 * C607 + C50863 * C615) * C121 +
                    (C10648 * C611 + C50863 * C619) * C109 -
                    (C10648 * C606 + C50863 * C614) * C122 -
                    (C10648 * C610 + C50863 * C618) * C110 +
                    (C10648 * C605 + C50863 * C613) * C123 +
                    (C10648 * C609 + C50863 * C617) * C111 -
                    (C10648 * C604 + C50863 * C612) * C124 -
                    (C10648 * C608 + C50863 * C616) * C112) *
                       C10647) *
                  C51053 * C50953 * C50927) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C10648 * C125 + C50863 * C132) * C50007 +
                     (C10648 * C136 + C50863 * C146) * C51149 -
                     (C10648 * C126 + C50863 * C133) * C50000 -
                     (C10648 * C137 + C50863 * C147) * C50887) *
                        C10644 +
                    (C11016 + C11017 - C11018 - C11019) * C10645 +
                    C11048 * C10646 + C11049 * C10647) *
                       C51053 * C50953 * C507 +
                   ((C11018 - (C11017 + C11016) + C11019) * C10644 +
                    (C11022 - (C11021 + C11020) + C11023) * C10645 +
                    (C11026 - (C11025 + C11024) + C11027) * C10646 +
                    (C11044 - (C11045 + C11046) + C11047) * C10647) *
                       C51053 * C50953 * C508 +
                   (C11048 * C10644 + C11049 * C10645 +
                    (C11046 + C11045 - C11044 - C11047) * C10646 +
                    ((C10648 * C8436 + C50863 * C8440) * C50007 +
                     (C10648 * C8438 + C50863 * C8442) * C51149 -
                     (C10648 * C8435 + C50863 * C8439) * C50000 -
                     (C10648 * C8437 + C50863 * C8441) * C50887) *
                        C10647) *
                       C51053 * C50953 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C10648 * C125 + C50863 * C132) * C50007 +
                     (C10648 * C136 + C50863 * C146) * C51149 -
                     (C10648 * C126 + C50863 * C133) * C50000 -
                     (C10648 * C137 + C50863 * C147) * C50887) *
                        C10644 +
                    (C11016 + C11017 - C11018 - C11019) * C10645 +
                    C11048 * C10646 + C11049 * C10647) *
                       C51053 * C848 +
                   (((C10648 * C383 + C50863 * C389) * C50000 -
                     ((C10648 * C396 + C50863 * C404) * C51149 +
                      (C10648 * C387 + C50863 * C397) * C50007) +
                     (C10648 * C395 + C50863 * C403) * C50887) *
                        C10644 +
                    ((C10648 * C719 + C50863 * C727) * C50000 -
                     (C11262 * C51149 + C11263 * C50007) +
                     (C10648 * C731 + C50863 * C743) * C50887) *
                        C10645 +
                    ((C10648 * C724 + C50863 * C740) * C50000 -
                     (C11260 * C51149 + C11261 * C50007) +
                     (C10648 * C736 + C50863 * C748) * C50887) *
                        C10646 +
                    ((C10648 * C2982 + C50863 * C2988) * C50000 -
                     (C11258 * C51149 + C11259 * C50007) +
                     (C10648 * C2985 + C50863 * C2991) * C50887) *
                        C10647) *
                       C51053 * C849 +
                   (((C10648 * C851 + C50863 * C856) * C50007 +
                     (C10648 * C860 + C50863 * C866) * C51149 -
                     (C10648 * C852 + C50863 * C857) * C50000 -
                     (C10648 * C861 + C50863 * C867) * C50887) *
                        C10644 +
                    ((C10648 * C972 + C50863 * C980) * C50007 +
                     (C10648 * C976 + C50863 * C984) * C51149 -
                     (C10648 * C971 + C50863 * C979) * C50000 -
                     (C10648 * C975 + C50863 * C983) * C50887) *
                        C10645 +
                    ((C10648 * C3323 + C50863 * C3329) * C50007 +
                     (C10648 * C3326 + C50863 * C3332) * C51149 -
                     (C10648 * C3322 + C50863 * C3328) * C50000 -
                     (C10648 * C3325 + C50863 * C3331) * C50887) *
                        C10646 +
                    ((C10648 * C8951 + C50863 * C8955) * C50007 +
                     (C10648 * C8953 + C50863 * C8957) * C51149 -
                     (C10648 * C8950 + C50863 * C8954) * C50000 -
                     (C10648 * C8952 + C50863 * C8956) * C50887) *
                        C10647) *
                       C51053 * C850) *
                  C50927) /
                     (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51170 +
           ((C2362 + C2363 + C2364) * C603 + (C2365 + C2366 + C2367) * C50882) *
               C51041) *
              C51053 * C50953 * C599 -
          (((C2699 + C2700 + C2701) * C50882 + (C2702 + C2703 + C2704) * C603) *
               C51041 +
           ((C2367 + C2366 + C2365) * C50882 + (C2364 + C2363 + C2362) * C603) *
               C51170) *
              C51053 * C50953 * C600 +
          (((C2704 + C2703 + C2702) * C603 + (C2701 + C2700 + C2699) * C50882) *
               C51170 +
           ((C2830 + C2831 + C2832) * C603 + (C2833 + C2834 + C2835) * C50882) *
               C51041) *
              C51053 * C50953 * C601 -
          (((C2178 * C2808 + C2173 * C2814 + C2177 * C2809 + C2172 * C2815 +
             C2176 * C2810 + C2171 * C2816) *
                C50882 +
            (C2178 * C2805 + C2173 * C2811 + C2177 * C2806 + C2172 * C2812 +
             C2176 * C2807 + C2171 * C2813) *
                C603) *
               C51041 +
           ((C2835 + C2834 + C2833) * C50882 + (C2832 + C2831 + C2830) * C603) *
               C51170) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51170 +
           ((C2362 + C2363 + C2364) * C256 + (C2365 + C2366 + C2367) * C251 -
            (C2368 + C2369 + C2370) * C257 - (C2371 + C2372 + C2373) * C252 +
            (C2374 + C2375 + C2376) * C258 + (C2377 + C2378 + C2379) * C253) *
               C51041) *
              C51053 * C50953 * C51157 +
          (((C2370 + C2369 + C2368) * C257 -
            ((C2367 + C2366 + C2365) * C251 + (C2364 + C2363 + C2362) * C256) +
            (C2373 + C2372 + C2371) * C252 - (C2376 + C2375 + C2374) * C258 -
            (C2379 + C2378 + C2377) * C253) *
               C51170 +
           ((C2176 * C513 + C2171 * C518 + C2177 * C514 + C2172 * C519 +
             C2178 * C515 + C2173 * C520) *
                C257 -
            ((C2178 * C523 + C2173 * C529 + C2177 * C522 + C2172 * C528 +
              C2176 * C521 + C2171 * C527) *
                 C251 +
             (C2178 * C514 + C2173 * C519 + C2177 * C513 + C2172 * C518 +
              C2176 * C512 + C2171 * C517) *
                 C256) +
            (C2176 * C522 + C2171 * C528 + C2177 * C523 + C2172 * C529 +
             C2178 * C524 + C2173 * C530) *
                C252 -
            (C2178 * C516 + C2173 * C525 + C2177 * C515 + C2172 * C520 +
             C2176 * C514 + C2171 * C519) *
                C258 -
            (C2178 * C526 + C2173 * C531 + C2177 * C524 + C2172 * C530 +
             C2176 * C523 + C2171 * C529) *
                C253) *
               C51041) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C848 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C849 +
           (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
              C2178 * C853 + C2173 * C858) *
                 C603 +
             (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
              C2178 * C862 + C2173 * C868) *
                 C50882) *
                C51170 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51041) *
               C51053 * C850) *
              C51157 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C849 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C848 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51041 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51170) *
               C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C50953 * C51157 +
          ((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C10644 +
           (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C10645 +
           (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C10646 +
           ((C10648 * C2806 + C50863 * C2812) * C257 -
            ((C10648 * C2810 + C50863 * C2816) * C251 +
             (C10648 * C2807 + C50863 * C2813) * C256) +
            (C10648 * C2809 + C50863 * C2815) * C252 -
            (C10648 * C2805 + C50863 * C2811) * C258 -
            (C10648 * C2808 + C50863 * C2814) * C253) *
               C10647) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C10644 +
           (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
              C51053 * C50953 * C599 -
          (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
           (C11121 + C11120) * C10644) *
              C51053 * C50953 * C600 +
          (C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
           (C11138 + C11139) * C10647) *
              C51053 * C50953 * C601 -
          (((C10648 * C11116 + C50863 * C11118) * C50882 +
            (C10648 * C11115 + C50863 * C11117) * C603) *
               C10647 +
           (C11139 + C11138) * C10646 + C11134 * C10645 + C11135 * C10644) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C848 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C849 +
           (((C10648 * C851 + C50863 * C856) * C603 +
             (C10648 * C860 + C50863 * C866) * C50882) *
                C10644 +
            (C11494 + C11495) * C10645 + (C11496 + C11497) * C10646 +
            (C11498 + C11499) * C10647) *
               C51053 * C850) *
              C51157 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C849 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C848 -
           (((C10648 * C11472 + C50863 * C11474) * C50882 +
             (C10648 * C11471 + C50863 * C11473) * C603) *
                C10647 +
            (C11499 + C11498) * C10646 + (C11497 + C11496) * C10645 +
            (C11495 + C11494) * C10644) *
               C51053 * C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C51158 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C50965) *
              C507 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C50965 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C51158) *
              C508 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51170 +
            ((C2830 + C2831 + C2832) * C603 +
             (C2833 + C2834 + C2835) * C50882) *
                C51041) *
               C51053 * C51158 -
           (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
              C2176 * C2986 + C2171 * C2992) *
                 C50882 +
             (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
              C2176 * C2983 + C2171 * C2989) *
                 C603) *
                C51041 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51170) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51170 +
           ((C2362 + C2363 + C2364) * C256 + (C2365 + C2366 + C2367) * C251 -
            (C2368 + C2369 + C2370) * C257 - (C2371 + C2372 + C2373) * C252 +
            (C2374 + C2375 + C2376) * C258 + (C2377 + C2378 + C2379) * C253) *
               C51041) *
              C51053 * C51158 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C257 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C251 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C256) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C252 -
            (C2178 * C386 + C2173 * C392 + C2177 * C385 + C2172 * C391 +
             C2176 * C384 + C2171 * C390) *
                C258 -
            (C2178 * C398 + C2173 * C405 + C2177 * C393 + C2172 * C401 +
             C2176 * C394 + C2171 * C402) *
                C253) *
               C51170 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C2172 * C728 +
             C2178 * C721 + C2173 * C729) *
                C257 -
            ((C2178 * C732 + C2173 * C744 + C2177 * C731 + C2172 * C743 +
              C2176 * C730 + C2171 * C742) *
                 C251 +
             (C2178 * C720 + C2173 * C728 + C2177 * C719 + C2172 * C727 +
              C2176 * C718 + C2171 * C726) *
                 C256) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C2172 * C744 +
             C2178 * C733 + C2173 * C745) *
                C252 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C258 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C253) *
               C51041) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51170 +
           ((C2362 + C2363 + C2364) * C603 + (C2365 + C2366 + C2367) * C50882) *
               C51041) *
              C51053 * C1051 -
          (((C3018 + C3019 + C3020) * C50882 + (C3021 + C3022 + C3023) * C603) *
               C51041 +
           ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
             C2176 * C396 + C2171 * C404) *
                C50882 +
            (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
             C2176 * C387 + C2171 * C397) *
                C603) *
               C51170) *
              C51053 * C1052 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
             C2178 * C853 + C2173 * C858) *
                C603 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
             C2178 * C862 + C2173 * C868) *
                C50882) *
               C51170 +
           ((C3346 + C3347 + C3348) * C603 + (C3349 + C3350 + C3351) * C50882) *
               C51041) *
              C51053 * C1053 -
          (((C2178 * C3452 + C2173 * C3458 + C2177 * C3453 + C2172 * C3459 +
             C2176 * C3454 + C2171 * C3460) *
                C50882 +
            (C2178 * C3449 + C2173 * C3455 + C2177 * C3450 + C2172 * C3456 +
             C2176 * C3451 + C2171 * C3457) *
                C603) *
               C51041 +
           ((C2178 * C1060 + C2173 * C1068 + C2177 * C1061 + C2172 * C1069 +
             C2176 * C1062 + C2171 * C1070) *
                C50882 +
            (C2178 * C1056 + C2173 * C1064 + C2177 * C1057 + C2172 * C1065 +
             C2176 * C1058 + C2171 * C1066) *
                C603) *
               C51170) *
              C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C51158 +
          (((C10648 * C383 + C50863 * C389) * C257 -
            ((C10648 * C396 + C50863 * C404) * C251 +
             (C10648 * C387 + C50863 * C397) * C256) +
            (C10648 * C395 + C50863 * C403) * C252 -
            (C10648 * C384 + C50863 * C390) * C258 -
            (C10648 * C394 + C50863 * C402) * C253) *
               C10644 +
           ((C10648 * C719 + C50863 * C727) * C257 -
            ((C10648 * C730 + C50863 * C742) * C251 +
             (C10648 * C718 + C50863 * C726) * C256) +
            (C10648 * C731 + C50863 * C743) * C252 -
            (C10648 * C720 + C50863 * C728) * C258 -
            (C10648 * C732 + C50863 * C744) * C253) *
               C10645 +
           ((C10648 * C724 + C50863 * C740) * C257 -
            ((C10648 * C737 + C50863 * C749) * C251 +
             (C10648 * C725 + C50863 * C741) * C256) +
            (C10648 * C736 + C50863 * C748) * C252 -
            (C10648 * C723 + C50863 * C739) * C258 -
            (C10648 * C735 + C50863 * C747) * C253) *
               C10646 +
           ((C10648 * C2982 + C50863 * C2988) * C257 -
            ((C10648 * C2986 + C50863 * C2992) * C251 +
             (C10648 * C2983 + C50863 * C2989) * C256) +
            (C10648 * C2985 + C50863 * C2991) * C252 -
            (C10648 * C2981 + C50863 * C2987) * C258 -
            (C10648 * C2984 + C50863 * C2990) * C253) *
               C10647) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C51158 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C50965) *
              C507 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C50965 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C51158) *
              C508 +
          ((C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
            (C11138 + C11139) * C10647) *
               C51053 * C51158 -
           (((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C10647 +
            (C11273 + C11272) * C10646 + C11274 * C10645 + C11275 * C10644) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C10644 +
           (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
              C51053 * C1051 -
          (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
           ((C10648 * C396 + C50863 * C404) * C50882 +
            (C10648 * C387 + C50863 * C397) * C603) *
               C10644) *
              C51053 * C1052 +
          (((C10648 * C851 + C50863 * C856) * C603 +
            (C10648 * C860 + C50863 * C866) * C50882) *
               C10644 +
           (C11494 + C11495) * C10645 + (C11496 + C11497) * C10646 +
           (C11498 + C11499) * C10647) *
              C51053 * C1053 -
          (((C10648 * C11566 + C50863 * C11568) * C50882 +
            (C10648 * C11565 + C50863 * C11567) * C603) *
               C10647 +
           ((C10648 * C9083 + C50863 * C9087) * C50882 +
            (C10648 * C9081 + C50863 * C9085) * C603) *
               C10646 +
           ((C10648 * C3454 + C50863 * C3460) * C50882 +
            (C10648 * C3451 + C50863 * C3457) * C603) *
               C10645 +
           ((C10648 * C1062 + C50863 * C1070) * C50882 +
            (C10648 * C1058 + C50863 * C1066) * C603) *
               C10644) *
              C51053 * C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1174 + (C2365 + C2366 + C2367) * C51201 -
            (C2368 + C2369 + C2370) * C1175 - (C2371 + C2372 + C2373) * C51187 +
            (C2374 + C2375 + C2376) * C1176 + (C2377 + C2378 + C2379) * C1171) *
               C51041) *
              C51053 * C1514 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C1175 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C51201 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C1174) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C51187 -
            (C2178 * C386 + C2173 * C392 + C2177 * C385 + C2172 * C391 +
             C2176 * C384 + C2171 * C390) *
                C1176 -
            (C2178 * C398 + C2173 * C405 + C2177 * C393 + C2172 * C401 +
             C2176 * C394 + C2171 * C402) *
                C1171) *
               C51170 +
           ((C3960 + C3961 + C3962) * C1175 -
            ((C3018 + C3019 + C3020) * C51201 +
             (C3021 + C3022 + C3023) * C1174) +
            (C3963 + C3964 + C3965) * C51187 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C1176 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C1171) *
               C51041) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1174 +
            (C10648 * C136 + C50863 * C146) * C51201 -
            (C10648 * C126 + C50863 * C133) * C1175 -
            (C10648 * C137 + C50863 * C147) * C51187 +
            (C10648 * C127 + C50863 * C134) * C1176 +
            (C10648 * C138 + C50863 * C148) * C1171) *
               C10644 +
           (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C10645 +
           (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C10646 +
           (C11680 + C11681 - C11682 - C11683 + C11684 + C11685) * C10647) *
              C51053 * C1514 +
          (((C10648 * C383 + C50863 * C389) * C1175 -
            ((C10648 * C396 + C50863 * C404) * C51201 +
             (C10648 * C387 + C50863 * C397) * C1174) +
            (C10648 * C395 + C50863 * C403) * C51187 -
            (C10648 * C384 + C50863 * C390) * C1176 -
            (C10648 * C394 + C50863 * C402) * C1171) *
               C10644 +
           (C11954 * C1175 - (C11262 * C51201 + C11263 * C1174) +
            C11955 * C51187 - (C10648 * C720 + C50863 * C728) * C1176 -
            (C10648 * C732 + C50863 * C744) * C1171) *
               C10645 +
           (C11956 * C1175 - (C11260 * C51201 + C11261 * C1174) +
            C11957 * C51187 - (C10648 * C723 + C50863 * C739) * C1176 -
            (C10648 * C735 + C50863 * C747) * C1171) *
               C10646 +
           (C11958 * C1175 - (C11258 * C51201 + C11259 * C1174) +
            C11959 * C51187 - (C10648 * C2981 + C50863 * C2987) * C1176 -
            (C10648 * C2984 + C50863 * C2990) * C1171) *
               C10647) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51170 +
            ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
             (C2368 + C2369 + C2370) * C1281 -
             (C2371 + C2372 + C2373) * C50887) *
                C51041) *
               C51053 * C1514 +
           (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
              C2178 * C385 + C2173 * C391) *
                 C1281 -
             ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
               C2176 * C396 + C2171 * C404) *
                  C1275 +
              (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
               C2176 * C387 + C2171 * C397) *
                  C1280) +
             (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
              C2178 * C393 + C2173 * C401) *
                 C50887) *
                C51170 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51041) *
               C51053 * C50965) *
              C51157 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51170 +
            ((C2696 + C2697 + C2698) * C1281 -
             ((C2699 + C2700 + C2701) * C1275 +
              (C2702 + C2703 + C2704) * C1280) +
             (C2705 + C2706 + C2707) * C50887) *
                C51041) *
               C51053 * C1514 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51170 +
            ((C3024 + C3025 + C3026) * C1280 + (C3027 + C3028 + C3029) * C1275 -
             (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
              C2176 * C724 + C2171 * C740) *
                 C1281 -
             (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
              C2176 * C736 + C2171 * C748) *
                 C50887) *
                C51041) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C10644 +
            (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
            C11805 * C10647) *
               C51053 * C1514 +
           (((C10648 * C383 + C50863 * C389) * C1281 -
             ((C10648 * C396 + C50863 * C404) * C1275 +
              (C10648 * C387 + C50863 * C397) * C1280) +
             (C10648 * C395 + C50863 * C403) * C50887) *
                C10644 +
            (C11960 - (C11938 + C11939) + C11961) * C10645 +
            (C11962 - (C11944 + C11945) + C11963) * C10646 +
            (C11964 - (C11950 + C11951) + C11965) * C10647) *
               C51053 * C50965) *
              C51157 +
          (((C11786 - (C11785 + C11784) + C11787) * C10644 +
            (C11790 - (C11789 + C11788) + C11791) * C10645 +
            (C11794 - (C11793 + C11792) + C11795) * C10646 +
            (C11796 - (C11797 + C11798) + C11799) * C10647) *
               C51053 * C1514 +
           ((C11939 + C11938 - C11960 - C11961) * C10644 +
            (C11945 + C11944 - C11962 - C11963) * C10645 +
            (C11951 + C11950 - C11964 - C11965) * C10646 +
            (C11264 * C1280 + C11265 * C1275 -
             (C10648 * C8609 + C50863 * C8613) * C1281 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C10647) *
               C51053 * C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51170 +
           ((C2362 + C2363 + C2364) * C1280 + (C2365 + C2366 + C2367) * C1275 -
            (C2368 + C2369 + C2370) * C1281 -
            (C2371 + C2372 + C2373) * C50887) *
               C51041) *
              C51053 * C51203 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C1281 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C1275 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C1280) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C50887) *
               C51170 +
           ((C3960 + C3961 + C3962) * C1281 -
            ((C3018 + C3019 + C3020) * C1275 +
             (C3021 + C3022 + C3023) * C1280) +
            (C3963 + C3964 + C3965) * C50887) *
               C51041) *
              C51053 * C51193 +
          (((C2176 * C851 + C2171 * C856 + C2177 * C852 + C2172 * C857 +
             C2178 * C853 + C2173 * C858) *
                C1280 +
            (C2176 * C860 + C2171 * C866 + C2177 * C861 + C2172 * C867 +
             C2178 * C862 + C2173 * C868) *
                C1275 -
            (C2178 * C854 + C2173 * C859 + C2177 * C853 + C2172 * C858 +
             C2176 * C852 + C2171 * C857) *
                C1281 -
            (C2178 * C863 + C2173 * C869 + C2177 * C862 + C2172 * C868 +
             C2176 * C861 + C2171 * C867) *
                C50887) *
               C51170 +
           ((C3346 + C3347 + C3348) * C1280 + (C3349 + C3350 + C3351) * C1275 -
            (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
             C2176 * C971 + C2171 * C979) *
                C1281 -
            (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
             C2176 * C975 + C2171 * C983) *
                C50887) *
               C51041) *
              C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C1280 +
            (C10648 * C136 + C50863 * C146) * C1275 -
            (C10648 * C126 + C50863 * C133) * C1281 -
            (C10648 * C137 + C50863 * C147) * C50887) *
               C10644 +
           (C11784 + C11785 - C11786 - C11787) * C10645 + C11804 * C10646 +
           C11805 * C10647) *
              C51053 * C51203 +
          (((C10648 * C383 + C50863 * C389) * C1281 -
            ((C10648 * C396 + C50863 * C404) * C1275 +
             (C10648 * C387 + C50863 * C397) * C1280) +
            (C10648 * C395 + C50863 * C403) * C50887) *
               C10644 +
           (C11960 - (C11938 + C11939) + C11961) * C10645 +
           (C11962 - (C11944 + C11945) + C11963) * C10646 +
           (C11964 - (C11950 + C11951) + C11965) * C10647) *
              C51053 * C51193 +
          (((C10648 * C851 + C50863 * C856) * C1280 +
            (C10648 * C860 + C50863 * C866) * C1275 -
            (C10648 * C852 + C50863 * C857) * C1281 -
            (C10648 * C861 + C50863 * C867) * C50887) *
               C10644 +
           (C11488 * C1280 + C11489 * C1275 -
            (C10648 * C971 + C50863 * C979) * C1281 -
            (C10648 * C975 + C50863 * C983) * C50887) *
               C10645 +
           (C11490 * C1280 + C11491 * C1275 -
            (C10648 * C3322 + C50863 * C3328) * C1281 -
            (C10648 * C3325 + C50863 * C3331) * C50887) *
               C10646 +
           (C11492 * C1280 + C11493 * C1275 -
            (C10648 * C8950 + C50863 * C8954) * C1281 -
            (C10648 * C8952 + C50863 * C8956) * C50887) *
               C10647) *
              C51053 * C1746) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[207] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
                     C2178 * C127 + C2173 * C134) *
                        C121 +
                    (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
                     C2178 * C138 + C2173 * C148) *
                        C109 -
                    (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
                     C2176 * C126 + C2171 * C133) *
                        C122 -
                    (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
                     C2176 * C137 + C2171 * C147) *
                        C110 +
                    (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
                     C2178 * C129 + C2173 * C140) *
                        C123 +
                    (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
                     C2178 * C141 + C2173 * C150) *
                        C111 -
                    (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
                     C2176 * C128 + C2171 * C135) *
                        C124 -
                    (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
                     C2176 * C139 + C2171 * C149) *
                        C112) *
                       C51170 +
                   ((C2176 * C263 + C2171 * C273 + C2177 * C259 + C2172 * C265 +
                     C2178 * C260 + C2173 * C266) *
                        C121 +
                    (C2176 * C272 + C2171 * C280 + C2177 * C271 + C2172 * C279 +
                     C2178 * C270 + C2173 * C278) *
                        C109 -
                    (C2178 * C261 + C2173 * C267 + C2177 * C260 + C2172 * C266 +
                     C2176 * C259 + C2171 * C265) *
                        C122 -
                    (C2178 * C269 + C2173 * C277 + C2177 * C270 + C2172 * C278 +
                     C2176 * C271 + C2171 * C279) *
                        C110 +
                    (C2176 * C260 + C2171 * C266 + C2177 * C261 + C2172 * C267 +
                     C2178 * C262 + C2173 * C268) *
                        C123 +
                    (C2176 * C270 + C2171 * C278 + C2177 * C269 + C2172 * C277 +
                     C2178 * C274 + C2173 * C281) *
                        C111 -
                    (C2178 * C264 + C2173 * C275 + C2177 * C262 + C2172 * C268 +
                     C2176 * C261 + C2171 * C267) *
                        C124 -
                    (C2178 * C276 + C2173 * C282 + C2177 * C274 + C2172 * C281 +
                     C2176 * C269 + C2171 * C277) *
                        C112) *
                       C51041) *
                  C51053 * C50953 * C50927) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C2176 * C125 + C2171 * C132 + C2177 * C126 +
                      C2172 * C133 + C2178 * C127 + C2173 * C134) *
                         C50007 +
                     (C2176 * C136 + C2171 * C146 + C2177 * C137 +
                      C2172 * C147 + C2178 * C138 + C2173 * C148) *
                         C51149 -
                     (C2178 * C128 + C2173 * C135 + C2177 * C127 +
                      C2172 * C134 + C2176 * C126 + C2171 * C133) *
                         C50000 -
                     (C2178 * C139 + C2173 * C149 + C2177 * C138 +
                      C2172 * C148 + C2176 * C137 + C2171 * C147) *
                         C50887) *
                        C51170 +
                    ((C2362 + C2363 + C2364) * C50007 +
                     (C2365 + C2366 + C2367) * C51149 -
                     (C2368 + C2369 + C2370) * C50000 -
                     (C2371 + C2372 + C2373) * C50887) *
                        C51041) *
                       C51053 * C50953 * C507 +
                   (((C2370 + C2369 + C2368) * C50000 -
                     ((C2367 + C2366 + C2365) * C51149 +
                      (C2364 + C2363 + C2362) * C50007) +
                     (C2373 + C2372 + C2371) * C50887) *
                        C51170 +
                    ((C2696 + C2697 + C2698) * C50000 -
                     ((C2699 + C2700 + C2701) * C51149 +
                      (C2702 + C2703 + C2704) * C50007) +
                     (C2705 + C2706 + C2707) * C50887) *
                        C51041) *
                       C51053 * C50953 * C508 +
                   (((C2704 + C2703 + C2702) * C50007 +
                     (C2701 + C2700 + C2699) * C51149 -
                     (C2698 + C2697 + C2696) * C50000 -
                     (C2707 + C2706 + C2705) * C50887) *
                        C51170 +
                    ((C2176 * C607 + C2171 * C615 + C2177 * C606 +
                      C2172 * C614 + C2178 * C605 + C2173 * C613) *
                         C50007 +
                     (C2176 * C611 + C2171 * C619 + C2177 * C610 +
                      C2172 * C618 + C2178 * C609 + C2173 * C617) *
                         C51149 -
                     (C2178 * C604 + C2173 * C612 + C2177 * C605 +
                      C2172 * C613 + C2176 * C606 + C2171 * C614) *
                         C50000 -
                     (C2178 * C608 + C2173 * C616 + C2177 * C609 +
                      C2172 * C617 + C2176 * C610 + C2171 * C618) *
                         C50887) *
                        C51041) *
                       C51053 * C50953 * C509)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C10648 * C125 + C50863 * C132) * C121 +
                    (C10648 * C136 + C50863 * C146) * C109 -
                    (C10648 * C126 + C50863 * C133) * C122 -
                    (C10648 * C137 + C50863 * C147) * C110 +
                    (C10648 * C127 + C50863 * C134) * C123 +
                    (C10648 * C138 + C50863 * C148) * C111 -
                    (C10648 * C128 + C50863 * C135) * C124 -
                    (C10648 * C139 + C50863 * C149) * C112) *
                       C10644 +
                   ((C10648 * C263 + C50863 * C273) * C121 +
                    (C10648 * C272 + C50863 * C280) * C109 -
                    (C10648 * C259 + C50863 * C265) * C122 -
                    (C10648 * C271 + C50863 * C279) * C110 +
                    (C10648 * C260 + C50863 * C266) * C123 +
                    (C10648 * C270 + C50863 * C278) * C111 -
                    (C10648 * C261 + C50863 * C267) * C124 -
                    (C10648 * C269 + C50863 * C277) * C112) *
                       C10645 +
                   ((C10648 * C512 + C50863 * C517) * C121 +
                    (C10648 * C521 + C50863 * C527) * C109 -
                    (C10648 * C513 + C50863 * C518) * C122 -
                    (C10648 * C522 + C50863 * C528) * C110 +
                    (C10648 * C514 + C50863 * C519) * C123 +
                    (C10648 * C523 + C50863 * C529) * C111 -
                    (C10648 * C515 + C50863 * C520) * C124 -
                    (C10648 * C524 + C50863 * C530) * C112) *
                       C10646 +
                   ((C10648 * C607 + C50863 * C615) * C121 +
                    (C10648 * C611 + C50863 * C619) * C109 -
                    (C10648 * C606 + C50863 * C614) * C122 -
                    (C10648 * C610 + C50863 * C618) * C110 +
                    (C10648 * C605 + C50863 * C613) * C123 +
                    (C10648 * C609 + C50863 * C617) * C111 -
                    (C10648 * C604 + C50863 * C612) * C124 -
                    (C10648 * C608 + C50863 * C616) * C112) *
                       C10647) *
                  C51053 * C50953 * C50927) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C10648 * C125 + C50863 * C132) * C50007 +
                     (C10648 * C136 + C50863 * C146) * C51149 -
                     (C10648 * C126 + C50863 * C133) * C50000 -
                     (C10648 * C137 + C50863 * C147) * C50887) *
                        C10644 +
                    (C11016 + C11017 - C11018 - C11019) * C10645 +
                    C11048 * C10646 + C11049 * C10647) *
                       C51053 * C50953 * C507 +
                   ((C11018 - (C11017 + C11016) + C11019) * C10644 +
                    (C11022 - (C11021 + C11020) + C11023) * C10645 +
                    (C11026 - (C11025 + C11024) + C11027) * C10646 +
                    (C11044 - (C11045 + C11046) + C11047) * C10647) *
                       C51053 * C50953 * C508 +
                   (C11048 * C10644 + C11049 * C10645 +
                    (C11046 + C11045 - C11044 - C11047) * C10646 +
                    ((C10648 * C8436 + C50863 * C8440) * C50007 +
                     (C10648 * C8438 + C50863 * C8442) * C51149 -
                     (C10648 * C8435 + C50863 * C8439) * C50000 -
                     (C10648 * C8437 + C50863 * C8441) * C50887) *
                        C10647) *
                       C51053 * C50953 * C509)) /
                     (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51170 +
           ((C2362 + C2363 + C2364) * C256 + (C2365 + C2366 + C2367) * C251 -
            (C2368 + C2369 + C2370) * C257 - (C2371 + C2372 + C2373) * C252 +
            (C2374 + C2375 + C2376) * C258 + (C2377 + C2378 + C2379) * C253) *
               C51041) *
              C51053 * C50953 * C51157 +
          (((C2370 + C2369 + C2368) * C257 -
            ((C2367 + C2366 + C2365) * C251 + (C2364 + C2363 + C2362) * C256) +
            (C2373 + C2372 + C2371) * C252 - (C2376 + C2375 + C2374) * C258 -
            (C2379 + C2378 + C2377) * C253) *
               C51170 +
           ((C2176 * C513 + C2171 * C518 + C2177 * C514 + C2172 * C519 +
             C2178 * C515 + C2173 * C520) *
                C257 -
            ((C2178 * C523 + C2173 * C529 + C2177 * C522 + C2172 * C528 +
              C2176 * C521 + C2171 * C527) *
                 C251 +
             (C2178 * C514 + C2173 * C519 + C2177 * C513 + C2172 * C518 +
              C2176 * C512 + C2171 * C517) *
                 C256) +
            (C2176 * C522 + C2171 * C528 + C2177 * C523 + C2172 * C529 +
             C2178 * C524 + C2173 * C530) *
                C252 -
            (C2178 * C516 + C2173 * C525 + C2177 * C515 + C2172 * C520 +
             C2176 * C514 + C2171 * C519) *
                C258 -
            (C2178 * C526 + C2173 * C531 + C2177 * C524 + C2172 * C530 +
             C2176 * C523 + C2171 * C529) *
                C253) *
               C51041) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51170 +
           ((C2362 + C2363 + C2364) * C603 + (C2365 + C2366 + C2367) * C50882) *
               C51041) *
              C51053 * C50953 * C599 -
          (((C2699 + C2700 + C2701) * C50882 + (C2702 + C2703 + C2704) * C603) *
               C51041 +
           ((C2367 + C2366 + C2365) * C50882 + (C2364 + C2363 + C2362) * C603) *
               C51170) *
              C51053 * C50953 * C600 +
          (((C2704 + C2703 + C2702) * C603 + (C2701 + C2700 + C2699) * C50882) *
               C51170 +
           ((C2830 + C2831 + C2832) * C603 + (C2833 + C2834 + C2835) * C50882) *
               C51041) *
              C51053 * C50953 * C601 -
          (((C2178 * C2808 + C2173 * C2814 + C2177 * C2809 + C2172 * C2815 +
             C2176 * C2810 + C2171 * C2816) *
                C50882 +
            (C2178 * C2805 + C2173 * C2811 + C2177 * C2806 + C2172 * C2812 +
             C2176 * C2807 + C2171 * C2813) *
                C603) *
               C51041 +
           ((C2835 + C2834 + C2833) * C50882 + (C2832 + C2831 + C2830) * C603) *
               C51170) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C50953 * C51157 +
          ((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C10644 +
           (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C10645 +
           (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C10646 +
           ((C10648 * C2806 + C50863 * C2812) * C257 -
            ((C10648 * C2810 + C50863 * C2816) * C251 +
             (C10648 * C2807 + C50863 * C2813) * C256) +
            (C10648 * C2809 + C50863 * C2815) * C252 -
            (C10648 * C2805 + C50863 * C2811) * C258 -
            (C10648 * C2808 + C50863 * C2814) * C253) *
               C10647) *
              C51053 * C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C603 +
            (C10648 * C136 + C50863 * C146) * C50882) *
               C10644 +
           (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
              C51053 * C50953 * C599 -
          (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
           (C11121 + C11120) * C10644) *
              C51053 * C50953 * C600 +
          (C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
           (C11138 + C11139) * C10647) *
              C51053 * C50953 * C601 -
          (((C10648 * C11116 + C50863 * C11118) * C50882 +
            (C10648 * C11115 + C50863 * C11117) * C603) *
               C10647 +
           (C11139 + C11138) * C10646 + C11134 * C10645 + C11135 * C10644) *
              C51053 * C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51170 +
           ((C2362 + C2363 + C2364) * C256 + (C2365 + C2366 + C2367) * C251 -
            (C2368 + C2369 + C2370) * C257 - (C2371 + C2372 + C2373) * C252 +
            (C2374 + C2375 + C2376) * C258 + (C2377 + C2378 + C2379) * C253) *
               C51041) *
              C51053 * C51158 +
          (((C2176 * C383 + C2171 * C389 + C2177 * C384 + C2172 * C390 +
             C2178 * C385 + C2173 * C391) *
                C257 -
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C251 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C256) +
            (C2176 * C395 + C2171 * C403 + C2177 * C394 + C2172 * C402 +
             C2178 * C393 + C2173 * C401) *
                C252 -
            (C2178 * C386 + C2173 * C392 + C2177 * C385 + C2172 * C391 +
             C2176 * C384 + C2171 * C390) *
                C258 -
            (C2178 * C398 + C2173 * C405 + C2177 * C393 + C2172 * C401 +
             C2176 * C394 + C2171 * C402) *
                C253) *
               C51170 +
           ((C2176 * C719 + C2171 * C727 + C2177 * C720 + C2172 * C728 +
             C2178 * C721 + C2173 * C729) *
                C257 -
            ((C2178 * C732 + C2173 * C744 + C2177 * C731 + C2172 * C743 +
              C2176 * C730 + C2171 * C742) *
                 C251 +
             (C2178 * C720 + C2173 * C728 + C2177 * C719 + C2172 * C727 +
              C2176 * C718 + C2171 * C726) *
                 C256) +
            (C2176 * C731 + C2171 * C743 + C2177 * C732 + C2172 * C744 +
             C2178 * C733 + C2173 * C745) *
                C252 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C258 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C253) *
               C51041) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51170 +
            ((C2362 + C2363 + C2364) * C603 +
             (C2365 + C2366 + C2367) * C50882) *
                C51041) *
               C51053 * C51158 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51041 +
            ((C2178 * C394 + C2173 * C402 + C2177 * C395 + C2172 * C403 +
              C2176 * C396 + C2171 * C404) *
                 C50882 +
             (C2178 * C384 + C2173 * C390 + C2177 * C383 + C2172 * C389 +
              C2176 * C387 + C2171 * C397) *
                 C603) *
                C51170) *
               C51053 * C50965) *
              C507 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51170 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51041) *
               C51053 * C50965 -
           (((C2699 + C2700 + C2701) * C50882 +
             (C2702 + C2703 + C2704) * C603) *
                C51041 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51170) *
               C51053 * C51158) *
              C508 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51170 +
            ((C2830 + C2831 + C2832) * C603 +
             (C2833 + C2834 + C2835) * C50882) *
                C51041) *
               C51053 * C51158 -
           (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
              C2176 * C2986 + C2171 * C2992) *
                 C50882 +
             (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
              C2176 * C2983 + C2171 * C2989) *
                 C603) *
                C51041 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51170) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C256 +
            (C10648 * C136 + C50863 * C146) * C251 -
            (C10648 * C126 + C50863 * C133) * C257 -
            (C10648 * C137 + C50863 * C147) * C252 +
            (C10648 * C127 + C50863 * C134) * C258 +
            (C10648 * C138 + C50863 * C148) * C253) *
               C10644 +
           (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C10645 +
           (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C10646 +
           (C10814 + C10815 - C10816 - C10817 + C10818 + C10819) * C10647) *
              C51053 * C51158 +
          (((C10648 * C383 + C50863 * C389) * C257 -
            ((C10648 * C396 + C50863 * C404) * C251 +
             (C10648 * C387 + C50863 * C397) * C256) +
            (C10648 * C395 + C50863 * C403) * C252 -
            (C10648 * C384 + C50863 * C390) * C258 -
            (C10648 * C394 + C50863 * C402) * C253) *
               C10644 +
           ((C10648 * C719 + C50863 * C727) * C257 -
            ((C10648 * C730 + C50863 * C742) * C251 +
             (C10648 * C718 + C50863 * C726) * C256) +
            (C10648 * C731 + C50863 * C743) * C252 -
            (C10648 * C720 + C50863 * C728) * C258 -
            (C10648 * C732 + C50863 * C744) * C253) *
               C10645 +
           ((C10648 * C724 + C50863 * C740) * C257 -
            ((C10648 * C737 + C50863 * C749) * C251 +
             (C10648 * C725 + C50863 * C741) * C256) +
            (C10648 * C736 + C50863 * C748) * C252 -
            (C10648 * C723 + C50863 * C739) * C258 -
            (C10648 * C735 + C50863 * C747) * C253) *
               C10646 +
           ((C10648 * C2982 + C50863 * C2988) * C257 -
            ((C10648 * C2986 + C50863 * C2992) * C251 +
             (C10648 * C2983 + C50863 * C2989) * C256) +
            (C10648 * C2985 + C50863 * C2991) * C252 -
            (C10648 * C2981 + C50863 * C2987) * C258 -
            (C10648 * C2984 + C50863 * C2990) * C253) *
               C10647) *
              C51053 * C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C10644 +
            (C11120 + C11121) * C10645 + C11132 * C10646 + C11133 * C10647) *
               C51053 * C51158 -
           (C11274 * C10647 + C11275 * C10646 + (C11270 + C11271) * C10645 +
            ((C10648 * C396 + C50863 * C404) * C50882 +
             (C10648 * C387 + C50863 * C397) * C603) *
                C10644) *
               C51053 * C50965) *
              C507 +
          (((C11271 + C11270) * C10644 + (C11269 + C11268) * C10645 +
            (C11267 + C11266) * C10646 + (C11272 + C11273) * C10647) *
               C51053 * C50965 -
           (C11134 * C10647 + C11135 * C10646 + (C11123 + C11122) * C10645 +
            (C11121 + C11120) * C10644) *
               C51053 * C51158) *
              C508 +
          ((C11132 * C10644 + C11133 * C10645 + (C11127 + C11126) * C10646 +
            (C11138 + C11139) * C10647) *
               C51053 * C51158 -
           (((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C10647 +
            (C11273 + C11272) * C10646 + C11274 * C10645 + C11275 * C10644) *
               C51053 * C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1174 + (C5369 + C5370 + C5371) * C51201 -
            (C5372 + C5373 + C5374) * C1175 - (C5375 + C5376 + C5377) * C51187 +
            (C5378 + C5379 + C5380) * C1176 + (C5381 + C5382 + C5383) * C1171) *
               C51027 * C51065) *
              C50953 * C1172 +
          (((C2370 + C2369 + C2368) * C1175 -
            ((C2367 + C2366 + C2365) * C51201 +
             (C2364 + C2363 + C2362) * C1174) +
            (C2373 + C2372 + C2371) * C51187 - (C2376 + C2375 + C2374) * C1176 -
            (C2379 + C2378 + C2377) * C1171) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C1175 -
            ((C3018 + C3019 + C3020) * C51201 +
             (C3021 + C3022 + C3023) * C1174) +
            (C3963 + C3964 + C3965) * C51187 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C1176 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C1171) *
               C51027 * C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C7787 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C7788 +
            (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C7789) *
               C51171 +
           ((C13056 * C1174 + C13057 * C51201 - C13058 * C1175 -
             C13059 * C51187 + C13060 * C1176 + C13061 * C1171) *
                C7787 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C7788 +
            (C14087 + C14088 - C14089 - C14090 + C14091 + C14092) * C7789) *
               C51065) *
              C50953 * C1172 +
          (((C11670 - (C11669 + C11668) + C11671 - C11672 - C11673) * C7787 +
            (C11676 - (C11675 + C11674) + C11677 - C11678 - C11679) * C7788 +
            (C11682 - (C11681 + C11680) + C11683 - C11684 - C11685) * C7789) *
               C51171 +
           ((C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C7787 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C7788 +
            (C11958 * C1175 - (C11258 * C51201 + C11259 * C1174) +
             C11959 * C51187 - (C10648 * C2981 + C50863 * C2987) * C1176 -
             (C10648 * C2984 + C50863 * C2990) * C1171) *
                C7789) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
            (C5372 + C5373 + C5374) * C1281 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C50953 * C51202 +
          (((C2370 + C2369 + C2368) * C1281 -
            ((C2367 + C2366 + C2365) * C1275 +
             (C2364 + C2363 + C2362) * C1280) +
            (C2373 + C2372 + C2371) * C50887) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C1281 -
            ((C3018 + C3019 + C3020) * C1275 +
             (C3021 + C3022 + C3023) * C1280) +
            (C3963 + C3964 + C3965) * C50887) *
               C51027 * C51065) *
              C50953 * C51190 +
          (((C2704 + C2703 + C2702) * C1280 + (C2701 + C2700 + C2699) * C1275 -
            (C2698 + C2697 + C2696) * C1281 -
            (C2707 + C2706 + C2705) * C50887) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C1280 + (C3027 + C3028 + C3029) * C1275 -
            (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
             C2176 * C724 + C2171 * C740) *
                C1281 -
            (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
             C2176 * C736 + C2171 * C748) *
                C50887) *
               C51027 * C51065) *
              C50953 * C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
               C51171 +
           ((C13056 * C1280 + C13057 * C1275 - C13058 * C1281 -
             C13059 * C50887) *
                C7787 +
            (C11939 + C11938 - C11960 - C11961) * C7788 + C14241 * C7789) *
               C51065) *
              C50953 * C51202 +
          (((C11786 - (C11785 + C11784) + C11787) * C7787 +
            (C11790 - (C11789 + C11788) + C11791) * C7788 +
            (C11794 - (C11793 + C11792) + C11795) * C7789) *
               C51171 +
           ((C11960 - (C11938 + C11939) + C11961) * C7787 +
            (C11962 - (C11944 + C11945) + C11963) * C7788 +
            (C11964 - (C11950 + C11951) + C11965) * C7789) *
               C51065) *
              C50953 * C51190 +
          ((C11804 * C7787 + C11805 * C7788 +
            (C11798 + C11797 - C11796 - C11799) * C7789) *
               C51171 +
           (C14241 * C7787 + (C11951 + C11950 - C11964 - C11965) * C7788 +
            (C11264 * C1280 + C11265 * C1275 -
             (C10648 * C8609 + C50863 * C8613) * C1281 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C7789) *
               C51065) *
              C50953 * C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
             (C5372 + C5373 + C5374) * C1281 -
             (C5375 + C5376 + C5377) * C50887) *
                C51027 * C51065) *
               C51158 +
           (((C5374 + C5373 + C5372) * C1281 -
             ((C5371 + C5370 + C5369) * C1275 +
              (C5368 + C5367 + C5366) * C1280) +
             (C5377 + C5376 + C5375) * C50887) *
                C51027 * C51171 +
            ((C5944 + C5945 + C5946) * C1281 -
             ((C5947 + C5948 + C5949) * C1275 +
              (C5950 + C5951 + C5952) * C1280) +
             (C5953 + C5954 + C5955) * C50887) *
                C51027 * C51065) *
               C50965) *
              C1172 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51027 * C51171 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51027 * C51065) *
               C51158 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C1280 + (C3349 + C3350 + C3351) * C1275 -
             (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
              C2176 * C971 + C2171 * C979) *
                 C1281 -
             (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
              C2176 * C975 + C2171 * C983) *
                 C50887) *
                C51027 * C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C7787 +
             (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
                C51171 +
            ((C14436 + C14437 - C14438 - C14439) * C7787 + C14454 * C7788 +
             C14241 * C7789) *
                C51065) *
               C51158 +
           (((C14438 - (C14437 + C14436) + C14439) * C7787 + C14455 * C7788 +
             C14456 * C7789) *
                C51171 +
            ((C13638 * C1281 - (C13639 * C1275 + C13640 * C1280) +
              C13641 * C50887) *
                 C7787 +
             (C14443 - (C14444 + C14445) + C14446) * C7788 +
             (C14447 - (C14448 + C14449) + C14450) * C7789) *
                C51065) *
               C50965) *
              C1172 +
          ((((C11786 - (C11785 + C11784) + C11787) * C7787 +
             (C11790 - (C11789 + C11788) + C11791) * C7788 +
             (C11794 - (C11793 + C11792) + C11795) * C7789) *
                C51171 +
            (C14455 * C7787 + C14456 * C7788 +
             (C11964 - (C11950 + C11951) + C11965) * C7789) *
                C51065) *
               C51158 +
           ((C14454 * C7787 + C14241 * C7788 +
             (C11951 + C11950 - C11964 - C11965) * C7789) *
                C51171 +
            ((C14445 + C14444 - C14443 - C14446) * C7787 +
             (C14449 + C14448 - C14447 - C14450) * C7788 +
             (C11492 * C1280 + C11493 * C1275 -
              (C10648 * C8950 + C50863 * C8954) * C1281 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C7789) *
                C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C50007 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C51149 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C50000 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C50007 +
             (C5369 + C5370 + C5371) * C51149 -
             (C5372 + C5373 + C5374) * C50000 -
             (C5375 + C5376 + C5377) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C5374 + C5373 + C5372) * C50000 -
             ((C5371 + C5370 + C5369) * C51149 +
              (C5368 + C5367 + C5366) * C50007) +
             (C5377 + C5376 + C5375) * C50887) *
                C51027 * C51171 +
            ((C5944 + C5945 + C5946) * C50000 -
             ((C5947 + C5948 + C5949) * C51149 +
              (C5950 + C5951 + C5952) * C50007) +
             (C5953 + C5954 + C5955) * C50887) *
                C51027 * C51065) *
               C50965) *
              C1172 +
          ((((C2370 + C2369 + C2368) * C50000 -
             ((C2367 + C2366 + C2365) * C51149 +
              (C2364 + C2363 + C2362) * C50007) +
             (C2373 + C2372 + C2371) * C50887) *
                C51027 * C51171 +
            ((C3960 + C3961 + C3962) * C50000 -
             ((C3018 + C3019 + C3020) * C51149 +
              (C3021 + C3022 + C3023) * C50007) +
             (C3963 + C3964 + C3965) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C3023 + C3022 + C3021) * C50007 +
             (C3020 + C3019 + C3018) * C51149 -
             (C3962 + C3961 + C3960) * C50000 -
             (C3965 + C3964 + C3963) * C50887) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C50007 +
             (C3349 + C3350 + C3351) * C51149 -
             (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
              C2176 * C971 + C2171 * C979) *
                 C50000 -
             (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
              C2176 * C975 + C2171 * C983) *
                 C50887) *
                C51027 * C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C50007 +
              (C10648 * C136 + C50863 * C146) * C51149 -
              (C10648 * C126 + C50863 * C133) * C50000 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C7787 +
             (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
                C51171 +
            ((C13614 + C13615 - C13616 - C13617) * C7787 + C15153 * C7788 +
             C13216 * C7789) *
                C51065) *
               C1514 +
           (((C13616 - (C13615 + C13614) + C13617) * C7787 + C15154 * C7788 +
             C15155 * C7789) *
                C51171 +
            ((C13646 - (C13647 + C13648) + C13649) * C7787 +
             (C13650 - (C13628 + C13629) + C13651) * C7788 +
             (C13652 - (C13634 + C13635) + C13653) * C7789) *
                C51065) *
               C50965) *
              C1172 +
          ((((C11018 - (C11017 + C11016) + C11019) * C7787 +
             (C11022 - (C11021 + C11020) + C11023) * C7788 +
             (C11026 - (C11025 + C11024) + C11027) * C7789) *
                C51171 +
            (C15154 * C7787 + C15155 * C7788 +
             (C12430 - (C12431 + C12432) + C12433) * C7789) *
                C51065) *
               C1514 +
           ((C15153 * C7787 + C13216 * C7788 +
             (C12432 + C12431 - C12430 - C12433) * C7789) *
                C51171 +
            ((C13629 + C13628 - C13650 - C13651) * C7787 +
             (C13635 + C13634 - C13652 - C13653) * C7788 +
             (C11492 * C50007 + C11493 * C51149 -
              (C10648 * C8950 + C50863 * C8954) * C50000 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C7789) *
                C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C1514 -
           (((C5947 + C5948 + C5949) * C50882 +
             (C5950 + C5951 + C5952) * C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C50965) *
              C51202 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C50965 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C1514) *
              C51190 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51027 * C51171 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51027 * C51065) *
               C1514 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51027 * C51065 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51027 * C51171) *
               C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C1514 -
           ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C50965) *
              C51202 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            (C13803 * C7787 + C13804 * C7788 + (C11498 + C11499) * C7789) *
                C51065) *
               C50965 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C1514) *
              C51190 +
          (((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
                C51171 +
            (C13315 * C7787 + C13467 * C7788 + (C11272 + C11273) * C7789) *
                C51065) *
               C1514 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C7789 +
             (C11499 + C11498) * C7788 + C13465 * C7787) *
                C51065 +
            ((C11273 + C11272) * C7789 + C11274 * C7788 + C11275 * C7787) *
                C51171) *
               C50965) *
              C1279)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C51203 -
           (((C5947 + C5948 + C5949) * C50882 +
             (C5950 + C5951 + C5952) * C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C51193 +
           (((C5952 + C5951 + C5950) * C603 +
             (C5949 + C5948 + C5947) * C50882) *
                C51027 * C51171 +
            ((C6224 + C6225 + C6226) * C603 +
             (C6227 + C6228 + C6229) * C50882) *
                C51027 * C51065) *
               C1746) *
              C1172 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C51193 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C51203 -
           (((C2178 * C3452 + C2173 * C3458 + C2177 * C3453 + C2172 * C3459 +
              C2176 * C3454 + C2171 * C3460) *
                 C50882 +
             (C2178 * C3449 + C2173 * C3455 + C2177 * C3450 + C2172 * C3456 +
              C2176 * C3451 + C2171 * C3457) *
                 C603) *
                C51027 * C51065 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51027 * C51171) *
               C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C51203 -
           ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C51193 +
           (((C13802 + C13801) * C7787 + C13803 * C7788 + C13804 * C7789) *
                C51171 +
            ((C13933 + C13934) * C7787 + (C13817 + C13818) * C7788 +
             (C13819 + C13820) * C7789) *
                C51065) *
               C1746) *
              C1172 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            (C13803 * C7787 + C13804 * C7788 + (C11498 + C11499) * C7789) *
                C51065) *
               C51193 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C51203 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C7789 +
             (C13820 + C13819) * C7788 + (C13818 + C13817) * C7787) *
                C51065 +
            ((C11499 + C11498) * C7789 + C13465 * C7788 + C13800 * C7787) *
                C51171) *
               C1746) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51149 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C50007 +
            (C5369 + C5370 + C5371) * C51149 -
            (C5372 + C5373 + C5374) * C50000 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C50953 * C507 +
          (((C2370 + C2369 + C2368) * C50000 -
            ((C2367 + C2366 + C2365) * C51149 +
             (C2364 + C2363 + C2362) * C50007) +
            (C2373 + C2372 + C2371) * C50887) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C50000 -
            ((C3018 + C3019 + C3020) * C51149 +
             (C3021 + C3022 + C3023) * C50007) +
            (C3963 + C3964 + C3965) * C50887) *
               C51027 * C51065) *
              C50953 * C508 +
          (((C2704 + C2703 + C2702) * C50007 +
            (C2701 + C2700 + C2699) * C51149 -
            (C2698 + C2697 + C2696) * C50000 -
            (C2707 + C2706 + C2705) * C50887) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C50007 +
            (C3027 + C3028 + C3029) * C51149 -
            (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
             C2176 * C724 + C2171 * C740) *
                C50000 -
            (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
             C2176 * C736 + C2171 * C748) *
                C50887) *
               C51027 * C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
            C2178 * C127 + C2173 * C134) *
               C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
            C2178 * C138 + C2173 * C148) *
               C109 -
           (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
            C2176 * C126 + C2171 * C133) *
               C122 -
           (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
            C2176 * C137 + C2171 * C147) *
               C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
            C2178 * C129 + C2173 * C140) *
               C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
            C2178 * C141 + C2173 * C150) *
               C111 -
           (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
            C2176 * C128 + C2171 * C135) *
               C124 -
           (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
            C2176 * C139 + C2171 * C149) *
               C112) *
              C51027 * C51171 +
          ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
            C2178 * C384 + C2173 * C390) *
               C121 +
           (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
            C2178 * C394 + C2173 * C402) *
               C109 -
           (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
            C2176 * C383 + C2171 * C389) *
               C122 -
           (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
            C2176 * C395 + C2171 * C403) *
               C110 +
           (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
            C2178 * C386 + C2173 * C392) *
               C123 +
           (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
            C2178 * C398 + C2173 * C405) *
               C111 -
           (C2178 * C388 + C2173 * C399 + C2177 * C386 + C2172 * C392 +
            C2176 * C385 + C2171 * C391) *
               C124 -
           (C2178 * C400 + C2173 * C406 + C2177 * C398 + C2172 * C405 +
            C2176 * C393 + C2171 * C401) *
               C112) *
              C51027 * C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51149 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C50007 +
            (C5369 + C5370 + C5371) * C51149 -
            (C5372 + C5373 + C5374) * C50000 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C848 +
          (((C5374 + C5373 + C5372) * C50000 -
            ((C5371 + C5370 + C5369) * C51149 +
             (C5368 + C5367 + C5366) * C50007) +
            (C5377 + C5376 + C5375) * C50887) *
               C51027 * C51171 +
           ((C5944 + C5945 + C5946) * C50000 -
            ((C5947 + C5948 + C5949) * C51149 +
             (C5950 + C5951 + C5952) * C50007) +
            (C5953 + C5954 + C5955) * C50887) *
               C51027 * C51065) *
              C849 +
          (((C5952 + C5951 + C5950) * C50007 +
            (C5949 + C5948 + C5947) * C51149 -
            (C5946 + C5945 + C5944) * C50000 -
            (C5955 + C5954 + C5953) * C50887) *
               C51027 * C51171 +
           ((C2176 * C1058 + C2171 * C1066 + C2177 * C1057 + C2172 * C1065 +
             C2178 * C1056 + C2173 * C1064) *
                C50007 +
            (C2176 * C1062 + C2171 * C1070 + C2177 * C1061 + C2172 * C1069 +
             C2178 * C1060 + C2173 * C1068) *
                C51149 -
            (C2178 * C1055 + C2173 * C1063 + C2177 * C1056 + C2172 * C1064 +
             C2176 * C1057 + C2171 * C1065) *
                C50000 -
            (C2178 * C1059 + C2173 * C1067 + C2177 * C1060 + C2172 * C1068 +
             C2176 * C1061 + C2171 * C1069) *
                C50887) *
               C51027 * C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C7787 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C7788 +
           (C10790 * C121 + C10791 * C109 - C10792 * C122 - C10793 * C110 +
            C10794 * C123 + C10795 * C111 -
            (C10648 * C515 + C50863 * C520) * C124 -
            (C10648 * C524 + C50863 * C530) * C112) *
               C7789) *
              C51171 +
          (((C10648 * C387 + C50863 * C397) * C121 +
            (C10648 * C396 + C50863 * C404) * C109 -
            (C10648 * C383 + C50863 * C389) * C122 -
            (C10648 * C395 + C50863 * C403) * C110 +
            (C10648 * C384 + C50863 * C390) * C123 +
            (C10648 * C394 + C50863 * C402) * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C7787 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            (C10648 * C720 + C50863 * C728) * C123 +
            (C10648 * C732 + C50863 * C744) * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C7788 +
           (C11261 * C121 + C11260 * C109 - C11956 * C122 - C11957 * C110 +
            (C10648 * C723 + C50863 * C739) * C123 +
            (C10648 * C735 + C50863 * C747) * C111 -
            (C10648 * C722 + C50863 * C738) * C124 -
            (C10648 * C734 + C50863 * C746) * C112) *
               C7789) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
               C51171 +
           ((C13056 * C50007 + C13057 * C51149 - C13058 * C50000 -
             C13059 * C50887) *
                C7787 +
            (C12424 + C12423 - C12422 - C12425) * C7788 + C13216 * C7789) *
               C51065) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C7787 +
            (C11022 - (C11021 + C11020) + C11023) * C7788 +
            (C11026 - (C11025 + C11024) + C11027) * C7789) *
               C51171 +
           ((C12422 - (C12423 + C12424) + C12425) * C7787 +
            (C12426 - (C12427 + C12428) + C12429) * C7788 +
            (C12430 - (C12431 + C12432) + C12433) * C7789) *
               C51065) *
              C50953 * C508 +
          ((C11048 * C7787 + C11049 * C7788 +
            (C11046 + C11045 - C11044 - C11047) * C7789) *
               C51171 +
           (C13216 * C7787 + (C12432 + C12431 - C12430 - C12433) * C7788 +
            (C11264 * C50007 + C11265 * C51149 -
             (C10648 * C8609 + C50863 * C8613) * C50000 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C7789) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
               C51171 +
           ((C13614 + C13615 - C13616 - C13617) * C7787 +
            (C12424 + C12423 - C12422 - C12425) * C7788 + C13216 * C7789) *
               C51065) *
              C848 +
          (((C13616 - (C13615 + C13614) + C13617) * C7787 +
            (C12422 - (C12423 + C12424) + C12425) * C7788 +
            (C12426 - (C12427 + C12428) + C12429) * C7789) *
               C51171 +
           ((C13646 - (C13647 + C13648) + C13649) * C7787 +
            (C13650 - (C13628 + C13629) + C13651) * C7788 +
            (C13652 - (C13634 + C13635) + C13653) * C7789) *
               C51065) *
              C849 +
          (((C13648 + C13647 - C13646 - C13649) * C7787 +
            (C13629 + C13628 - C13650 - C13651) * C7788 +
            (C13635 + C13634 - C13652 - C13653) * C7789) *
               C51171 +
           (((C10648 * C1058 + C50863 * C1066) * C50007 +
             (C10648 * C1062 + C50863 * C1070) * C51149 -
             (C10648 * C1057 + C50863 * C1065) * C50000 -
             (C10648 * C1061 + C50863 * C1069) * C50887) *
                C7787 +
            ((C10648 * C3451 + C50863 * C3457) * C50007 +
             (C10648 * C3454 + C50863 * C3460) * C51149 -
             (C10648 * C3450 + C50863 * C3456) * C50000 -
             (C10648 * C3453 + C50863 * C3459) * C50887) *
                C7788 +
            ((C10648 * C9081 + C50863 * C9085) * C50007 +
             (C10648 * C9083 + C50863 * C9087) * C51149 -
             (C10648 * C9080 + C50863 * C9084) * C50000 -
             (C10648 * C9082 + C50863 * C9086) * C50887) *
                C7789) *
               C51065) *
              C850) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C603 + (C5369 + C5370 + C5371) * C50882) *
               C51027 * C51065) *
              C50953 * C599 -
          (((C3018 + C3019 + C3020) * C50882 + (C3021 + C3022 + C3023) * C603) *
               C51027 * C51065 +
           ((C2367 + C2366 + C2365) * C50882 + (C2364 + C2363 + C2362) * C603) *
               C51027 * C51171) *
              C50953 * C600 +
          (((C2704 + C2703 + C2702) * C603 + (C2701 + C2700 + C2699) * C50882) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C603 + (C3027 + C3028 + C3029) * C50882) *
               C51027 * C51065) *
              C50953 * C601 -
          (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
             C2176 * C2986 + C2171 * C2992) *
                C50882 +
            (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
             C2176 * C2983 + C2171 * C2989) *
                C603) *
               C51027 * C51065 +
           ((C2835 + C2834 + C2833) * C50882 + (C2832 + C2831 + C2830) * C603) *
               C51027 * C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51027 * C51171 +
           ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
             C2178 * C384 + C2173 * C390) *
                C256 +
            (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
             C2178 * C394 + C2173 * C402) *
                C251 -
            (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
             C2176 * C383 + C2171 * C389) *
                C257 -
            (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
             C2176 * C395 + C2171 * C403) *
                C252 +
            (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
             C2178 * C386 + C2173 * C392) *
                C258 +
            (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
             C2178 * C398 + C2173 * C405) *
                C253) *
               C51027 * C51065) *
              C50953 * C51157 +
          (((C2370 + C2369 + C2368) * C257 -
            ((C2367 + C2366 + C2365) * C251 + (C2364 + C2363 + C2362) * C256) +
            (C2373 + C2372 + C2371) * C252 - (C2376 + C2375 + C2374) * C258 -
            (C2379 + C2378 + C2377) * C253) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C257 -
            ((C3018 + C3019 + C3020) * C251 + (C3021 + C3022 + C3023) * C256) +
            (C3963 + C3964 + C3965) * C252 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C258 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C253) *
               C51027 * C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C848 -
           (((C5947 + C5948 + C5949) * C50882 +
             (C5950 + C5951 + C5952) * C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C849 +
           (((C5952 + C5951 + C5950) * C603 +
             (C5949 + C5948 + C5947) * C50882) *
                C51027 * C51171 +
            ((C2176 * C1058 + C2171 * C1066 + C2177 * C1057 + C2172 * C1065 +
              C2178 * C1056 + C2173 * C1064) *
                 C603 +
             (C2176 * C1062 + C2171 * C1070 + C2177 * C1061 + C2172 * C1069 +
              C2178 * C1060 + C2173 * C1068) *
                 C50882) *
                C51027 * C51065) *
               C850) *
              C51157 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C849 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C848 -
           (((C2178 * C3452 + C2173 * C3458 + C2177 * C3453 + C2172 * C3459 +
              C2176 * C3454 + C2171 * C3460) *
                 C50882 +
             (C2178 * C3449 + C2173 * C3455 + C2177 * C3450 + C2172 * C3456 +
              C2176 * C3451 + C2171 * C3457) *
                 C603) *
                C51027 * C51065 +
            ((C3351 + C3350 + C3349) * C50882 +
             (C3348 + C3347 + C3346) * C603) *
                C51027 * C51171) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           (((C10648 * C387 + C50863 * C397) * C256 +
             (C10648 * C396 + C50863 * C404) * C251 -
             (C10648 * C383 + C50863 * C389) * C257 -
             (C10648 * C395 + C50863 * C403) * C252 +
             (C10648 * C384 + C50863 * C390) * C258 +
             (C10648 * C394 + C50863 * C402) * C253) *
                C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C7787 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C7788 +
            (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C7789) *
               C51171 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7787 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7788 +
            (C11958 * C257 - (C11258 * C251 + C11259 * C256) + C11959 * C252 -
             (C10648 * C2981 + C50863 * C2987) * C258 -
             (C10648 * C2984 + C50863 * C2990) * C253) *
                C7789) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C7787 +
            (C11120 + C11121) * C7788 + C11132 * C7789) *
               C51171 +
           ((C13056 * C603 + C13057 * C50882) * C7787 +
            (C11271 + C11270) * C7788 + C13315 * C7789) *
               C51065) *
              C50953 * C599 -
          ((C11274 * C7789 + C11275 * C7788 + (C11270 + C11271) * C7787) *
               C51065 +
           (C11135 * C7789 + (C11123 + C11122) * C7788 +
            (C11121 + C11120) * C7787) *
               C51171) *
              C50953 * C600 +
          ((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
               C51171 +
           (C13315 * C7787 + (C11267 + C11266) * C7788 +
            (C11272 + C11273) * C7789) *
               C51065) *
              C50953 * C601 -
          ((((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C7789 +
            (C11273 + C11272) * C7788 + C11274 * C7787) *
               C51065 +
           ((C11139 + C11138) * C7789 + C11134 * C7788 + C11135 * C7787) *
               C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C848 -
           ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C849 +
           (((C13802 + C13801) * C7787 + C13803 * C7788 + C13804 * C7789) *
                C51171 +
            (((C10648 * C1058 + C50863 * C1066) * C603 +
              (C10648 * C1062 + C50863 * C1070) * C50882) *
                 C7787 +
             (C13817 + C13818) * C7788 + (C13819 + C13820) * C7789) *
                C51065) *
               C850) *
              C51157 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            (C13803 * C7787 + C13804 * C7788 + (C11498 + C11499) * C7789) *
                C51065) *
               C849 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C848 -
           ((((C10648 * C11566 + C50863 * C11568) * C50882 +
              (C10648 * C11565 + C50863 * C11567) * C603) *
                 C7789 +
             (C13820 + C13819) * C7788 + (C13818 + C13817) * C7787) *
                C51065 +
            ((C11499 + C11498) * C7789 + C13465 * C7788 + C13800 * C7787) *
                C51171) *
               C850) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C51158 -
           (((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
              C2176 * C860 + C2171 * C866) *
                 C50882 +
             (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
              C2176 * C851 + C2171 * C856) *
                 C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C50965) *
              C507 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C50965 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C51158) *
              C508 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51027 * C51171 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51027 * C51065) *
               C51158 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51027 * C51065 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51027 * C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C256 + (C5369 + C5370 + C5371) * C251 -
            (C5372 + C5373 + C5374) * C257 - (C5375 + C5376 + C5377) * C252 +
            (C5378 + C5379 + C5380) * C258 + (C5381 + C5382 + C5383) * C253) *
               C51027 * C51065) *
              C51158 +
          (((C5374 + C5373 + C5372) * C257 -
            ((C5371 + C5370 + C5369) * C251 + (C5368 + C5367 + C5366) * C256) +
            (C5377 + C5376 + C5375) * C252 - (C5380 + C5379 + C5378) * C258 -
            (C5383 + C5382 + C5381) * C253) *
               C51027 * C51171 +
           ((C2176 * C852 + C2171 * C857 + C2177 * C853 + C2172 * C858 +
             C2178 * C854 + C2173 * C859) *
                C257 -
            ((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
              C2176 * C860 + C2171 * C866) *
                 C251 +
             (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
              C2176 * C851 + C2171 * C856) *
                 C256) +
            (C2176 * C861 + C2171 * C867 + C2177 * C862 + C2172 * C868 +
             C2178 * C863 + C2173 * C869) *
                C252 -
            (C2178 * C855 + C2173 * C864 + C2177 * C854 + C2172 * C859 +
             C2176 * C853 + C2171 * C858) *
                C258 -
            (C2178 * C865 + C2173 * C870 + C2177 * C863 + C2172 * C869 +
             C2176 * C862 + C2171 * C868) *
                C253) *
               C51027 * C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C603 + (C5369 + C5370 + C5371) * C50882) *
               C51027 * C51065) *
              C1051 -
          (((C5947 + C5948 + C5949) * C50882 + (C5950 + C5951 + C5952) * C603) *
               C51027 * C51065 +
           ((C5371 + C5370 + C5369) * C50882 + (C5368 + C5367 + C5366) * C603) *
               C51027 * C51171) *
              C1052 +
          (((C5952 + C5951 + C5950) * C603 + (C5949 + C5948 + C5947) * C50882) *
               C51027 * C51171 +
           ((C6224 + C6225 + C6226) * C603 + (C6227 + C6228 + C6229) * C50882) *
               C51027 * C51065) *
              C1053 -
          (((C2178 * C6202 + C2173 * C6208 + C2177 * C6203 + C2172 * C6209 +
             C2176 * C6204 + C2171 * C6210) *
                C50882 +
            (C2178 * C6199 + C2173 * C6205 + C2177 * C6200 + C2172 * C6206 +
             C2176 * C6201 + C2171 * C6207) *
                C603) *
               C51027 * C51065 +
           ((C6229 + C6228 + C6227) * C50882 + (C6226 + C6225 + C6224) * C603) *
               C51027 * C51171) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C7787 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7788 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7789) *
               C51171 +
           (((C10648 * C852 + C50863 * C857) * C257 -
             ((C10648 * C860 + C50863 * C866) * C251 +
              (C10648 * C851 + C50863 * C856) * C256) +
             (C10648 * C861 + C50863 * C867) * C252 -
             (C10648 * C853 + C50863 * C858) * C258 -
             (C10648 * C862 + C50863 * C868) * C253) *
                C7787 +
            ((C10648 * C971 + C50863 * C979) * C257 -
             (C11489 * C251 + C11488 * C256) +
             (C10648 * C975 + C50863 * C983) * C252 -
             (C10648 * C970 + C50863 * C978) * C258 -
             (C10648 * C974 + C50863 * C982) * C253) *
                C7788 +
            ((C10648 * C3322 + C50863 * C3328) * C257 -
             (C11491 * C251 + C11490 * C256) +
             (C10648 * C3325 + C50863 * C3331) * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C7789) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C51158 -
           ((C13465 * C7789 + (C11495 + C11494) * C7788 +
             ((C10648 * C860 + C50863 * C866) * C50882 +
              (C10648 * C851 + C50863 * C856) * C603) *
                 C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C50965) *
              C507 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            ((C11494 + C11495) * C7787 + (C11496 + C11497) * C7788 +
             (C11498 + C11499) * C7789) *
                C51065) *
               C50965 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C51158) *
              C508 +
          (((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
                C51171 +
            (C13315 * C7787 + C13467 * C7788 + (C11272 + C11273) * C7789) *
                C51065) *
               C51158 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C7789 +
             (C11499 + C11498) * C7788 + C13465 * C7787) *
                C51065 +
            ((C11273 + C11272) * C7789 + C11274 * C7788 + C11275 * C7787) *
                C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C7787 +
            (C11120 + C11121) * C7788 + C11132 * C7789) *
               C51171 +
           ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
               C51065) *
              C1051 -
          ((C13465 * C7789 + C13800 * C7788 + (C13801 + C13802) * C7787) *
               C51065 +
           (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
               C51171) *
              C1052 +
          (((C13802 + C13801) * C7787 + C13803 * C7788 + C13804 * C7789) *
               C51171 +
           ((C13933 + C13934) * C7787 + (C13817 + C13818) * C7788 +
            (C13819 + C13820) * C7789) *
               C51065) *
              C1053 -
          ((((C10648 * C13920 + C50863 * C13924) * C50882 +
             (C10648 * C13918 + C50863 * C13921) * C603) *
                C7789 +
            ((C10648 * C13922 + C50863 * C13925) * C50882 +
             (C10648 * C13919 + C50863 * C13923) * C603) *
                C7788 +
            ((C10648 * C6204 + C50863 * C6210) * C50882 +
             (C10648 * C6201 + C50863 * C6207) * C603) *
                C7787) *
               C51065 +
           ((C13820 + C13819) * C7789 + (C13818 + C13817) * C7788 +
            (C13934 + C13933) * C7787) *
               C51171) *
              C1054) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1174 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51201 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1175 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C51187 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C1176 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C1171) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1174 + (C5369 + C5370 + C5371) * C51201 -
            (C5372 + C5373 + C5374) * C1175 - (C5375 + C5376 + C5377) * C51187 +
            (C5378 + C5379 + C5380) * C1176 + (C5381 + C5382 + C5383) * C1171) *
               C51027 * C51065) *
              C1514 +
          (((C5374 + C5373 + C5372) * C1175 -
            ((C5371 + C5370 + C5369) * C51201 +
             (C5368 + C5367 + C5366) * C1174) +
            (C5377 + C5376 + C5375) * C51187 - (C5380 + C5379 + C5378) * C1176 -
            (C5383 + C5382 + C5381) * C1171) *
               C51027 * C51171 +
           ((C5944 + C5945 + C5946) * C1175 -
            ((C5947 + C5948 + C5949) * C51201 +
             (C5950 + C5951 + C5952) * C1174) +
            (C5953 + C5954 + C5955) * C51187 -
            (C2178 * C855 + C2173 * C864 + C2177 * C854 + C2172 * C859 +
             C2176 * C853 + C2171 * C858) *
                C1176 -
            (C2178 * C865 + C2173 * C870 + C2177 * C863 + C2172 * C869 +
             C2176 * C862 + C2171 * C868) *
                C1171) *
               C51027 * C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1174 +
             (C10648 * C136 + C50863 * C146) * C51201 -
             (C10648 * C126 + C50863 * C133) * C1175 -
             (C10648 * C137 + C50863 * C147) * C51187 +
             (C10648 * C127 + C50863 * C134) * C1176 +
             (C10648 * C138 + C50863 * C148) * C1171) *
                C7787 +
            (C11668 + C11669 - C11670 - C11671 + C11672 + C11673) * C7788 +
            (C11674 + C11675 - C11676 - C11677 + C11678 + C11679) * C7789) *
               C51171 +
           ((C14603 + C14604 - C14605 - C14606 + C14607 + C14608) * C7787 +
            (C14081 + C14082 - C14083 - C14084 + C14085 + C14086) * C7788 +
            (C14087 + C14088 - C14089 - C14090 + C14091 + C14092) * C7789) *
               C51065) *
              C1514 +
          (((C14605 - (C14604 + C14603) + C14606 - C14607 - C14608) * C7787 +
            (C14083 - (C14082 + C14081) + C14084 - C14085 - C14086) * C7788 +
            (C14089 - (C14088 + C14087) + C14090 - C14091 - C14092) * C7789) *
               C51171 +
           ((C13638 * C1175 - (C13639 * C51201 + C13640 * C1174) +
             C13641 * C51187 - (C10648 * C853 + C50863 * C858) * C1176 -
             (C10648 * C862 + C50863 * C868) * C1171) *
                C7787 +
            (C13642 * C1175 - (C11489 * C51201 + C11488 * C1174) +
             C13643 * C51187 - (C10648 * C970 + C50863 * C978) * C1176 -
             (C10648 * C974 + C50863 * C982) * C1171) *
                C7788 +
            (C13644 * C1175 - (C11491 * C51201 + C11490 * C1174) +
             C13645 * C51187 - (C10648 * C3321 + C50863 * C3327) * C1176 -
             (C10648 * C3324 + C50863 * C3330) * C1171) *
                C7789) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C1280 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C1275 -
             (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
              C2176 * C126 + C2171 * C133) *
                 C1281 -
             (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
              C2176 * C137 + C2171 * C147) *
                 C50887) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
             (C5372 + C5373 + C5374) * C1281 -
             (C5375 + C5376 + C5377) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C5374 + C5373 + C5372) * C1281 -
             ((C5371 + C5370 + C5369) * C1275 +
              (C5368 + C5367 + C5366) * C1280) +
             (C5377 + C5376 + C5375) * C50887) *
                C51027 * C51171 +
            ((C5944 + C5945 + C5946) * C1281 -
             ((C5947 + C5948 + C5949) * C1275 +
              (C5950 + C5951 + C5952) * C1280) +
             (C5953 + C5954 + C5955) * C50887) *
                C51027 * C51065) *
               C50965) *
              C51157 +
          ((((C2370 + C2369 + C2368) * C1281 -
             ((C2367 + C2366 + C2365) * C1275 +
              (C2364 + C2363 + C2362) * C1280) +
             (C2373 + C2372 + C2371) * C50887) *
                C51027 * C51171 +
            ((C3960 + C3961 + C3962) * C1281 -
             ((C3018 + C3019 + C3020) * C1275 +
              (C3021 + C3022 + C3023) * C1280) +
             (C3963 + C3964 + C3965) * C50887) *
                C51027 * C51065) *
               C1514 +
           (((C3023 + C3022 + C3021) * C1280 + (C3020 + C3019 + C3018) * C1275 -
             (C3962 + C3961 + C3960) * C1281 -
             (C3965 + C3964 + C3963) * C50887) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C1280 + (C3349 + C3350 + C3351) * C1275 -
             (C2178 * C969 + C2173 * C977 + C2177 * C970 + C2172 * C978 +
              C2176 * C971 + C2171 * C979) *
                 C1281 -
             (C2178 * C973 + C2173 * C981 + C2177 * C974 + C2172 * C982 +
              C2176 * C975 + C2171 * C983) *
                 C50887) *
                C51027 * C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C1280 +
              (C10648 * C136 + C50863 * C146) * C1275 -
              (C10648 * C126 + C50863 * C133) * C1281 -
              (C10648 * C137 + C50863 * C147) * C50887) *
                 C7787 +
             (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
                C51171 +
            ((C14436 + C14437 - C14438 - C14439) * C7787 + C14454 * C7788 +
             C14241 * C7789) *
                C51065) *
               C1514 +
           (((C14438 - (C14437 + C14436) + C14439) * C7787 + C14455 * C7788 +
             C14456 * C7789) *
                C51171 +
            ((C13638 * C1281 - (C13639 * C1275 + C13640 * C1280) +
              C13641 * C50887) *
                 C7787 +
             (C14443 - (C14444 + C14445) + C14446) * C7788 +
             (C14447 - (C14448 + C14449) + C14450) * C7789) *
                C51065) *
               C50965) *
              C51157 +
          ((((C11786 - (C11785 + C11784) + C11787) * C7787 +
             (C11790 - (C11789 + C11788) + C11791) * C7788 +
             (C11794 - (C11793 + C11792) + C11795) * C7789) *
                C51171 +
            (C14455 * C7787 + C14456 * C7788 +
             (C11964 - (C11950 + C11951) + C11965) * C7789) *
                C51065) *
               C1514 +
           ((C14454 * C7787 + C14241 * C7788 +
             (C11951 + C11950 - C11964 - C11965) * C7789) *
                C51171 +
            ((C14445 + C14444 - C14443 - C14446) * C7787 +
             (C14449 + C14448 - C14447 - C14450) * C7788 +
             (C11492 * C1280 + C11493 * C1275 -
              (C10648 * C8950 + C50863 * C8954) * C1281 -
              (C10648 * C8952 + C50863 * C8956) * C50887) *
                 C7789) *
                C51065) *
               C50965) *
              C50941)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C1280 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C1275 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C1281 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C1280 + (C5369 + C5370 + C5371) * C1275 -
            (C5372 + C5373 + C5374) * C1281 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C51203 +
          (((C5374 + C5373 + C5372) * C1281 -
            ((C5371 + C5370 + C5369) * C1275 +
             (C5368 + C5367 + C5366) * C1280) +
            (C5377 + C5376 + C5375) * C50887) *
               C51027 * C51171 +
           ((C5944 + C5945 + C5946) * C1281 -
            ((C5947 + C5948 + C5949) * C1275 +
             (C5950 + C5951 + C5952) * C1280) +
            (C5953 + C5954 + C5955) * C50887) *
               C51027 * C51065) *
              C51193 +
          (((C5952 + C5951 + C5950) * C1280 + (C5949 + C5948 + C5947) * C1275 -
            (C5946 + C5945 + C5944) * C1281 -
            (C5955 + C5954 + C5953) * C50887) *
               C51027 * C51171 +
           ((C6224 + C6225 + C6226) * C1280 + (C6227 + C6228 + C6229) * C1275 -
            (C2178 * C1055 + C2173 * C1063 + C2177 * C1056 + C2172 * C1064 +
             C2176 * C1057 + C2171 * C1065) *
                C1281 -
            (C2178 * C1059 + C2173 * C1067 + C2177 * C1060 + C2172 * C1068 +
             C2176 * C1061 + C2171 * C1069) *
                C50887) *
               C51027 * C51065) *
              C1746) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C1280 +
             (C10648 * C136 + C50863 * C146) * C1275 -
             (C10648 * C126 + C50863 * C133) * C1281 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11784 + C11785 - C11786 - C11787) * C7788 + C11804 * C7789) *
               C51171 +
           ((C14436 + C14437 - C14438 - C14439) * C7787 + C14454 * C7788 +
            C14241 * C7789) *
               C51065) *
              C51203 +
          (((C14438 - (C14437 + C14436) + C14439) * C7787 + C14455 * C7788 +
            C14456 * C7789) *
               C51171 +
           ((C14949 - (C14950 + C14951) + C14952) * C7787 +
            (C14443 - (C14444 + C14445) + C14446) * C7788 +
            (C14447 - (C14448 + C14449) + C14450) * C7789) *
               C51065) *
              C51193 +
          (((C14951 + C14950 - C14949 - C14952) * C7787 +
            (C14445 + C14444 - C14443 - C14446) * C7788 +
            (C14449 + C14448 - C14447 - C14450) * C7789) *
               C51171 +
           ((C13931 * C1280 + C13932 * C1275 -
             (C10648 * C1057 + C50863 * C1065) * C1281 -
             (C10648 * C1061 + C50863 * C1069) * C50887) *
                C7787 +
            (C13813 * C1280 + C13814 * C1275 -
             (C10648 * C3450 + C50863 * C3456) * C1281 -
             (C10648 * C3453 + C50863 * C3459) * C50887) *
                C7788 +
            (C13815 * C1280 + C13816 * C1275 -
             (C10648 * C9080 + C50863 * C9084) * C1281 -
             (C10648 * C9082 + C50863 * C9086) * C50887) *
                C7789) *
               C51065) *
              C1746) *
         C50927) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
            C2178 * C127 + C2173 * C134) *
               C121 +
           (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
            C2178 * C138 + C2173 * C148) *
               C109 -
           (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
            C2176 * C126 + C2171 * C133) *
               C122 -
           (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
            C2176 * C137 + C2171 * C147) *
               C110 +
           (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
            C2178 * C129 + C2173 * C140) *
               C123 +
           (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
            C2178 * C141 + C2173 * C150) *
               C111 -
           (C2178 * C130 + C2173 * C142 + C2177 * C129 + C2172 * C140 +
            C2176 * C128 + C2171 * C135) *
               C124 -
           (C2178 * C143 + C2173 * C151 + C2177 * C141 + C2172 * C150 +
            C2176 * C139 + C2171 * C149) *
               C112) *
              C51027 * C51171 +
          ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
            C2178 * C384 + C2173 * C390) *
               C121 +
           (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
            C2178 * C394 + C2173 * C402) *
               C109 -
           (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
            C2176 * C383 + C2171 * C389) *
               C122 -
           (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
            C2176 * C395 + C2171 * C403) *
               C110 +
           (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
            C2178 * C386 + C2173 * C392) *
               C123 +
           (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
            C2178 * C398 + C2173 * C405) *
               C111 -
           (C2178 * C388 + C2173 * C399 + C2177 * C386 + C2172 * C392 +
            C2176 * C385 + C2171 * C391) *
               C124 -
           (C2178 * C400 + C2173 * C406 + C2177 * C398 + C2172 * C405 +
            C2176 * C393 + C2171 * C401) *
               C112) *
              C51027 * C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C50007 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C51149 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C50000 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C50887) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C50007 +
            (C5369 + C5370 + C5371) * C51149 -
            (C5372 + C5373 + C5374) * C50000 -
            (C5375 + C5376 + C5377) * C50887) *
               C51027 * C51065) *
              C50953 * C507 +
          (((C2370 + C2369 + C2368) * C50000 -
            ((C2367 + C2366 + C2365) * C51149 +
             (C2364 + C2363 + C2362) * C50007) +
            (C2373 + C2372 + C2371) * C50887) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C50000 -
            ((C3018 + C3019 + C3020) * C51149 +
             (C3021 + C3022 + C3023) * C50007) +
            (C3963 + C3964 + C3965) * C50887) *
               C51027 * C51065) *
              C50953 * C508 +
          (((C2704 + C2703 + C2702) * C50007 +
            (C2701 + C2700 + C2699) * C51149 -
            (C2698 + C2697 + C2696) * C50000 -
            (C2707 + C2706 + C2705) * C50887) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C50007 +
            (C3027 + C3028 + C3029) * C51149 -
            (C2178 * C722 + C2173 * C738 + C2177 * C723 + C2172 * C739 +
             C2176 * C724 + C2171 * C740) *
                C50000 -
            (C2178 * C734 + C2173 * C746 + C2177 * C735 + C2172 * C747 +
             C2176 * C736 + C2171 * C748) *
                C50887) *
               C51027 * C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C10648 * C125 + C50863 * C132) * C121 +
            (C10648 * C136 + C50863 * C146) * C109 -
            (C10648 * C126 + C50863 * C133) * C122 -
            (C10648 * C137 + C50863 * C147) * C110 +
            (C10648 * C127 + C50863 * C134) * C123 +
            (C10648 * C138 + C50863 * C148) * C111 -
            (C10648 * C128 + C50863 * C135) * C124 -
            (C10648 * C139 + C50863 * C149) * C112) *
               C7787 +
           (C10784 * C121 + C10785 * C109 - C10786 * C122 - C10787 * C110 +
            C10788 * C123 + C10789 * C111 -
            (C10648 * C261 + C50863 * C267) * C124 -
            (C10648 * C269 + C50863 * C277) * C112) *
               C7788 +
           (C10790 * C121 + C10791 * C109 - C10792 * C122 - C10793 * C110 +
            C10794 * C123 + C10795 * C111 -
            (C10648 * C515 + C50863 * C520) * C124 -
            (C10648 * C524 + C50863 * C530) * C112) *
               C7789) *
              C51171 +
          (((C10648 * C387 + C50863 * C397) * C121 +
            (C10648 * C396 + C50863 * C404) * C109 -
            (C10648 * C383 + C50863 * C389) * C122 -
            (C10648 * C395 + C50863 * C403) * C110 +
            (C10648 * C384 + C50863 * C390) * C123 +
            (C10648 * C394 + C50863 * C402) * C111 -
            (C10648 * C385 + C50863 * C391) * C124 -
            (C10648 * C393 + C50863 * C401) * C112) *
               C7787 +
           (C11263 * C121 + C11262 * C109 - C11954 * C122 - C11955 * C110 +
            (C10648 * C720 + C50863 * C728) * C123 +
            (C10648 * C732 + C50863 * C744) * C111 -
            (C10648 * C721 + C50863 * C729) * C124 -
            (C10648 * C733 + C50863 * C745) * C112) *
               C7788 +
           (C11261 * C121 + C11260 * C109 - C11956 * C122 - C11957 * C110 +
            (C10648 * C723 + C50863 * C739) * C123 +
            (C10648 * C735 + C50863 * C747) * C111 -
            (C10648 * C722 + C50863 * C738) * C124 -
            (C10648 * C734 + C50863 * C746) * C112) *
               C7789) *
              C51065) *
         C50953 * C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C50007 +
             (C10648 * C136 + C50863 * C146) * C51149 -
             (C10648 * C126 + C50863 * C133) * C50000 -
             (C10648 * C137 + C50863 * C147) * C50887) *
                C7787 +
            (C11016 + C11017 - C11018 - C11019) * C7788 + C11048 * C7789) *
               C51171 +
           ((C13056 * C50007 + C13057 * C51149 - C13058 * C50000 -
             C13059 * C50887) *
                C7787 +
            (C12424 + C12423 - C12422 - C12425) * C7788 + C13216 * C7789) *
               C51065) *
              C50953 * C507 +
          (((C11018 - (C11017 + C11016) + C11019) * C7787 +
            (C11022 - (C11021 + C11020) + C11023) * C7788 +
            (C11026 - (C11025 + C11024) + C11027) * C7789) *
               C51171 +
           ((C12422 - (C12423 + C12424) + C12425) * C7787 +
            (C12426 - (C12427 + C12428) + C12429) * C7788 +
            (C12430 - (C12431 + C12432) + C12433) * C7789) *
               C51065) *
              C50953 * C508 +
          ((C11048 * C7787 + C11049 * C7788 +
            (C11046 + C11045 - C11044 - C11047) * C7789) *
               C51171 +
           (C13216 * C7787 + (C12432 + C12431 - C12430 - C12433) * C7788 +
            (C11264 * C50007 + C11265 * C51149 -
             (C10648 * C8609 + C50863 * C8613) * C50000 -
             (C10648 * C8611 + C50863 * C8615) * C50887) *
                C7789) *
               C51065) *
              C50953 * C509)) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51027 * C51171 +
           ((C2176 * C387 + C2171 * C397 + C2177 * C383 + C2172 * C389 +
             C2178 * C384 + C2173 * C390) *
                C256 +
            (C2176 * C396 + C2171 * C404 + C2177 * C395 + C2172 * C403 +
             C2178 * C394 + C2173 * C402) *
                C251 -
            (C2178 * C385 + C2173 * C391 + C2177 * C384 + C2172 * C390 +
             C2176 * C383 + C2171 * C389) *
                C257 -
            (C2178 * C393 + C2173 * C401 + C2177 * C394 + C2172 * C402 +
             C2176 * C395 + C2171 * C403) *
                C252 +
            (C2176 * C384 + C2171 * C390 + C2177 * C385 + C2172 * C391 +
             C2178 * C386 + C2173 * C392) *
                C258 +
            (C2176 * C394 + C2171 * C402 + C2177 * C393 + C2172 * C401 +
             C2178 * C398 + C2173 * C405) *
                C253) *
               C51027 * C51065) *
              C50953 * C51157 +
          (((C2370 + C2369 + C2368) * C257 -
            ((C2367 + C2366 + C2365) * C251 + (C2364 + C2363 + C2362) * C256) +
            (C2373 + C2372 + C2371) * C252 - (C2376 + C2375 + C2374) * C258 -
            (C2379 + C2378 + C2377) * C253) *
               C51027 * C51171 +
           ((C3960 + C3961 + C3962) * C257 -
            ((C3018 + C3019 + C3020) * C251 + (C3021 + C3022 + C3023) * C256) +
            (C3963 + C3964 + C3965) * C252 -
            (C2178 * C1412 + C2173 * C1413 + C2177 * C721 + C2172 * C729 +
             C2176 * C720 + C2171 * C728) *
                C258 -
            (C2178 * C1414 + C2173 * C1415 + C2177 * C733 + C2172 * C745 +
             C2176 * C732 + C2171 * C744) *
                C253) *
               C51027 * C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C603 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C50882) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C603 + (C5369 + C5370 + C5371) * C50882) *
               C51027 * C51065) *
              C50953 * C599 -
          (((C3018 + C3019 + C3020) * C50882 + (C3021 + C3022 + C3023) * C603) *
               C51027 * C51065 +
           ((C2367 + C2366 + C2365) * C50882 + (C2364 + C2363 + C2362) * C603) *
               C51027 * C51171) *
              C50953 * C600 +
          (((C2704 + C2703 + C2702) * C603 + (C2701 + C2700 + C2699) * C50882) *
               C51027 * C51171 +
           ((C3024 + C3025 + C3026) * C603 + (C3027 + C3028 + C3029) * C50882) *
               C51027 * C51065) *
              C50953 * C601 -
          (((C2178 * C2984 + C2173 * C2990 + C2177 * C2985 + C2172 * C2991 +
             C2176 * C2986 + C2171 * C2992) *
                C50882 +
            (C2178 * C2981 + C2173 * C2987 + C2177 * C2982 + C2172 * C2988 +
             C2176 * C2983 + C2171 * C2989) *
                C603) *
               C51027 * C51065 +
           ((C2835 + C2834 + C2833) * C50882 + (C2832 + C2831 + C2830) * C603) *
               C51027 * C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           (((C10648 * C387 + C50863 * C397) * C256 +
             (C10648 * C396 + C50863 * C404) * C251 -
             (C10648 * C383 + C50863 * C389) * C257 -
             (C10648 * C395 + C50863 * C403) * C252 +
             (C10648 * C384 + C50863 * C390) * C258 +
             (C10648 * C394 + C50863 * C402) * C253) *
                C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C50953 * C51157 +
          (((C10804 - (C10803 + C10802) + C10805 - C10806 - C10807) * C7787 +
            (C10810 - (C10809 + C10808) + C10811 - C10812 - C10813) * C7788 +
            (C10816 - (C10815 + C10814) + C10817 - C10818 - C10819) * C7789) *
               C51171 +
           ((C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7787 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7788 +
            (C11958 * C257 - (C11258 * C251 + C11259 * C256) + C11959 * C252 -
             (C10648 * C2981 + C50863 * C2987) * C258 -
             (C10648 * C2984 + C50863 * C2990) * C253) *
                C7789) *
               C51065) *
              C50953 * C50941)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C603 +
             (C10648 * C136 + C50863 * C146) * C50882) *
                C7787 +
            (C11120 + C11121) * C7788 + C11132 * C7789) *
               C51171 +
           ((C13056 * C603 + C13057 * C50882) * C7787 +
            (C11271 + C11270) * C7788 + C13315 * C7789) *
               C51065) *
              C50953 * C599 -
          ((C11274 * C7789 + C11275 * C7788 + (C11270 + C11271) * C7787) *
               C51065 +
           (C11135 * C7789 + (C11123 + C11122) * C7788 +
            (C11121 + C11120) * C7787) *
               C51171) *
              C50953 * C600 +
          ((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
               C51171 +
           (C13315 * C7787 + (C11267 + C11266) * C7788 +
            (C11272 + C11273) * C7789) *
               C51065) *
              C50953 * C601 -
          ((((C10648 * C11238 + C50863 * C11240) * C50882 +
             (C10648 * C11237 + C50863 * C11239) * C603) *
                C7789 +
            (C11273 + C11272) * C7788 + C11274 * C7787) *
               C51065 +
           ((C11139 + C11138) * C7789 + C11134 * C7788 + C11135 * C7787) *
               C51171) *
              C50953 * C602)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
             C2178 * C127 + C2173 * C134) *
                C256 +
            (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
             C2178 * C138 + C2173 * C148) *
                C251 -
            (C2178 * C128 + C2173 * C135 + C2177 * C127 + C2172 * C134 +
             C2176 * C126 + C2171 * C133) *
                C257 -
            (C2178 * C139 + C2173 * C149 + C2177 * C138 + C2172 * C148 +
             C2176 * C137 + C2171 * C147) *
                C252 +
            (C2176 * C127 + C2171 * C134 + C2177 * C128 + C2172 * C135 +
             C2178 * C129 + C2173 * C140) *
                C258 +
            (C2176 * C138 + C2171 * C148 + C2177 * C139 + C2172 * C149 +
             C2178 * C141 + C2173 * C150) *
                C253) *
               C51027 * C51171 +
           ((C5366 + C5367 + C5368) * C256 + (C5369 + C5370 + C5371) * C251 -
            (C5372 + C5373 + C5374) * C257 - (C5375 + C5376 + C5377) * C252 +
            (C5378 + C5379 + C5380) * C258 + (C5381 + C5382 + C5383) * C253) *
               C51027 * C51065) *
              C51158 +
          (((C5374 + C5373 + C5372) * C257 -
            ((C5371 + C5370 + C5369) * C251 + (C5368 + C5367 + C5366) * C256) +
            (C5377 + C5376 + C5375) * C252 - (C5380 + C5379 + C5378) * C258 -
            (C5383 + C5382 + C5381) * C253) *
               C51027 * C51171 +
           ((C2176 * C852 + C2171 * C857 + C2177 * C853 + C2172 * C858 +
             C2178 * C854 + C2173 * C859) *
                C257 -
            ((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
              C2176 * C860 + C2171 * C866) *
                 C251 +
             (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
              C2176 * C851 + C2171 * C856) *
                 C256) +
            (C2176 * C861 + C2171 * C867 + C2177 * C862 + C2172 * C868 +
             C2178 * C863 + C2173 * C869) *
                C252 -
            (C2178 * C855 + C2173 * C864 + C2177 * C854 + C2172 * C859 +
             C2176 * C853 + C2171 * C858) *
                C258 -
            (C2178 * C865 + C2173 * C870 + C2177 * C863 + C2172 * C869 +
             C2176 * C862 + C2171 * C868) *
                C253) *
               C51027 * C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2176 * C125 + C2171 * C132 + C2177 * C126 + C2172 * C133 +
              C2178 * C127 + C2173 * C134) *
                 C603 +
             (C2176 * C136 + C2171 * C146 + C2177 * C137 + C2172 * C147 +
              C2178 * C138 + C2173 * C148) *
                 C50882) *
                C51027 * C51171 +
            ((C5366 + C5367 + C5368) * C603 +
             (C5369 + C5370 + C5371) * C50882) *
                C51027 * C51065) *
               C51158 -
           (((C2178 * C862 + C2173 * C868 + C2177 * C861 + C2172 * C867 +
              C2176 * C860 + C2171 * C866) *
                 C50882 +
             (C2178 * C853 + C2173 * C858 + C2177 * C852 + C2172 * C857 +
              C2176 * C851 + C2171 * C856) *
                 C603) *
                C51027 * C51065 +
            ((C5371 + C5370 + C5369) * C50882 +
             (C5368 + C5367 + C5366) * C603) *
                C51027 * C51171) *
               C50965) *
              C507 +
          ((((C3023 + C3022 + C3021) * C603 +
             (C3020 + C3019 + C3018) * C50882) *
                C51027 * C51171 +
            ((C3346 + C3347 + C3348) * C603 +
             (C3349 + C3350 + C3351) * C50882) *
                C51027 * C51065) *
               C50965 -
           (((C3018 + C3019 + C3020) * C50882 +
             (C3021 + C3022 + C3023) * C603) *
                C51027 * C51065 +
            ((C2367 + C2366 + C2365) * C50882 +
             (C2364 + C2363 + C2362) * C603) *
                C51027 * C51171) *
               C51158) *
              C508 +
          ((((C2704 + C2703 + C2702) * C603 +
             (C2701 + C2700 + C2699) * C50882) *
                C51027 * C51171 +
            ((C3024 + C3025 + C3026) * C603 +
             (C3027 + C3028 + C3029) * C50882) *
                C51027 * C51065) *
               C51158 -
           (((C2178 * C3324 + C2173 * C3330 + C2177 * C3325 + C2172 * C3331 +
              C2176 * C3326 + C2171 * C3332) *
                 C50882 +
             (C2178 * C3321 + C2173 * C3327 + C2177 * C3322 + C2172 * C3328 +
              C2176 * C3323 + C2171 * C3329) *
                 C603) *
                C51027 * C51065 +
            ((C3029 + C3028 + C3027) * C50882 +
             (C3026 + C3025 + C3024) * C603) *
                C51027 * C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C10648 * C125 + C50863 * C132) * C256 +
             (C10648 * C136 + C50863 * C146) * C251 -
             (C10648 * C126 + C50863 * C133) * C257 -
             (C10648 * C137 + C50863 * C147) * C252 +
             (C10648 * C127 + C50863 * C134) * C258 +
             (C10648 * C138 + C50863 * C148) * C253) *
                C7787 +
            (C10802 + C10803 - C10804 - C10805 + C10806 + C10807) * C7788 +
            (C10808 + C10809 - C10810 - C10811 + C10812 + C10813) * C7789) *
               C51171 +
           ((C13062 + C13063 - C13064 - C13065 + C13066 + C13067) * C7787 +
            (C12874 + C12875 - C12876 - C12877 + C12894 + C12895) * C7788 +
            (C12882 + C12883 - C12884 - C12885 + C12896 + C12897) * C7789) *
               C51065) *
              C51158 +
          (((C13064 - (C13063 + C13062) + C13065 - C13066 - C13067) * C7787 +
            (C12876 - (C12875 + C12874) + C12877 - C12894 - C12895) * C7788 +
            (C12884 - (C12883 + C12882) + C12885 - C12896 - C12897) * C7789) *
               C51171 +
           (((C10648 * C852 + C50863 * C857) * C257 -
             ((C10648 * C860 + C50863 * C866) * C251 +
              (C10648 * C851 + C50863 * C856) * C256) +
             (C10648 * C861 + C50863 * C867) * C252 -
             (C10648 * C853 + C50863 * C858) * C258 -
             (C10648 * C862 + C50863 * C868) * C253) *
                C7787 +
            ((C10648 * C971 + C50863 * C979) * C257 -
             (C11489 * C251 + C11488 * C256) +
             (C10648 * C975 + C50863 * C983) * C252 -
             (C10648 * C970 + C50863 * C978) * C258 -
             (C10648 * C974 + C50863 * C982) * C253) *
                C7788 +
            ((C10648 * C3322 + C50863 * C3328) * C257 -
             (C11491 * C251 + C11490 * C256) +
             (C10648 * C3325 + C50863 * C3331) * C252 -
             (C10648 * C3321 + C50863 * C3327) * C258 -
             (C10648 * C3324 + C50863 * C3330) * C253) *
                C7789) *
               C51065) *
              C50965) *
         C50927) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C10648 * C125 + C50863 * C132) * C603 +
              (C10648 * C136 + C50863 * C146) * C50882) *
                 C7787 +
             (C11120 + C11121) * C7788 + C11132 * C7789) *
                C51171 +
            ((C13462 + C13463) * C7787 + C13464 * C7788 + C13315 * C7789) *
                C51065) *
               C51158 -
           ((C13465 * C7789 + (C11495 + C11494) * C7788 +
             ((C10648 * C860 + C50863 * C866) * C50882 +
              (C10648 * C851 + C50863 * C856) * C603) *
                 C7787) *
                C51065 +
            (C11275 * C7789 + C13466 * C7788 + (C13463 + C13462) * C7787) *
                C51171) *
               C50965) *
              C507 +
          (((C13464 * C7787 + C13315 * C7788 + C13467 * C7789) * C51171 +
            ((C11494 + C11495) * C7787 + (C11496 + C11497) * C7788 +
             (C11498 + C11499) * C7789) *
                C51065) *
               C50965 -
           ((C11274 * C7789 + C11275 * C7788 + C13466 * C7787) * C51065 +
            (C11135 * C7789 + (C11123 + C11122) * C7788 +
             (C11121 + C11120) * C7787) *
                C51171) *
               C51158) *
              C508 +
          (((C11132 * C7787 + C11133 * C7788 + (C11127 + C11126) * C7789) *
                C51171 +
            (C13315 * C7787 + C13467 * C7788 + (C11272 + C11273) * C7789) *
                C51065) *
               C51158 -
           ((((C10648 * C11472 + C50863 * C11474) * C50882 +
              (C10648 * C11471 + C50863 * C11473) * C603) *
                 C7789 +
             (C11499 + C11498) * C7788 + C13465 * C7787) *
                C51065 +
            ((C11273 + C11272) * C7789 + C11274 * C7788 + C11275 * C7787) *
                C51171) *
               C50965) *
              C509)) /
            (p * q * std::sqrt(p + q));
}
