/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdp_AC_yy.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2121_13_22(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C49932 = ce + de;
    const double C49931 = yC - yD;
    const double C49942 = ce * de;
    const double C49941 = 0 * de;
    const double C49960 = 0 * ce;
    const double C49956 = 0 * de;
    const double C49999 = ae + be;
    const double C49998 = yA - yB;
    const double C50009 = ae * be;
    const double C50008 = 0 * be;
    const double C50027 = 0 * ae;
    const double C50023 = 0 * be;
    const double C50064 = p + q;
    const double C50063 = p * q;
    const double C50072 = ae * ce;
    const double C50071 = yP - yQ;
    const double C50069 = bs[3];
    const double C50078 = bs[4];
    const double C50076 = xP - xQ;
    const double C50087 = bs[5];
    const double C50096 = bs[6];
    const double C50111 = bs[7];
    const double C50129 = bs[2];
    const double C50263 = zP - zQ;
    const double C119 = bs[0];
    const double C50967 = xA - xB;
    const double C50987 = xC - xD;
    const double C51019 = zC - zD;
    const double C51118 = zA - zB;
    const double C49940 = 2 * C49932;
    const double C49957 = std::pow(C49932, 2);
    const double C51024 = std::pow(C49931, 2);
    const double C51040 = C49931 * de;
    const double C51039 = C49931 * ce;
    const double C49943 = C49942 * C49931;
    const double C49958 = C49931 * C49941;
    const double C49964 = C49960 / C49932;
    const double C50007 = 2 * C49999;
    const double C50024 = std::pow(C49999, 2);
    const double C50080 = C49932 * C49999;
    const double C51123 = std::pow(C49998, 2);
    const double C51139 = C49998 * be;
    const double C51138 = C49998 * ae;
    const double C50010 = C50009 * C49998;
    const double C50025 = C49998 * C50008;
    const double C50031 = C50027 / C49999;
    const double C50065 = 2 * C50063;
    const double C50074 = std::pow(C50071, 2);
    const double C50133 = C50071 * ce;
    const double C50132 = C50071 * ae;
    const double C50089 = std::pow(C50076, 2);
    const double C50277 = std::pow(C50263, 2);
    const double C50970 = C50967 * be;
    const double C50969 = C50967 * ae;
    const double C50968 = std::pow(C50967, 2);
    const double C50990 = C50987 * de;
    const double C50989 = C50987 * ce;
    const double C50988 = std::pow(C50987, 2);
    const double C51054 = std::pow(C51019, 2);
    const double C51066 = C51019 * de;
    const double C51065 = C51019 * ce;
    const double C51153 = std::pow(C51118, 2);
    const double C51165 = C51118 * be;
    const double C51164 = C51118 * ae;
    const double C50998 = std::pow(C49940, -1);
    const double C51261 = std::pow(C49940, -2);
    const double C49961 = 2 * C49957;
    const double C51259 = 4 * C49957;
    const double C51025 = C51024 * C49942;
    const double C49962 = C49958 / C49932;
    const double C50978 = std::pow(C50007, -1);
    const double C51274 = std::pow(C50007, -2);
    const double C50028 = 2 * C50024;
    const double C51252 = 4 * C50024;
    const double C51124 = C51123 * C50009;
    const double C50029 = C50025 / C49999;
    const double C50067 = C50065 / C50064;
    const double C140 =
        (-((std::pow(yP - yQ, 2) * bs[2] * std::pow(C50065 / C50064, 2) -
            (bs[1] * C50065) / C50064) *
           ae * ce) /
         C49932) /
        C49999;
    const double C120 = -(C50076 * bs[1] * C50065) / C50064;
    const double C300 = -(C50071 * bs[1] * C50065) / C50064;
    const double C476 = -(C50263 * bs[1] * C50065) / C50064;
    const double C50081 = C50074 * C50078;
    const double C50090 = C50074 * C50087;
    const double C50099 = C50074 * C50096;
    const double C50115 = C50074 * C50111;
    const double C50135 = C50078 * C50133;
    const double C50140 = C50087 * C50133;
    const double C50145 = C50096 * C50133;
    const double C50160 = C50069 * C50133;
    const double C50196 = C50111 * C50133;
    const double C127 = (bs[1] * C50133 * C50065) / (C50064 * C49932);
    const double C50136 = C50078 * C50132;
    const double C50141 = C50087 * C50132;
    const double C50146 = C50096 * C50132;
    const double C50162 = C50069 * C50132;
    const double C50202 = C50111 * C50132;
    const double C126 = (-(bs[1] * C50132 * C50065) / C50064) / C49999;
    const double C50971 = C50968 * C50009;
    const double C50991 = C50988 * C49942;
    const double C51055 = C51054 * C49942;
    const double C51154 = C51153 * C50009;
    const double C49969 = C49941 / C49961;
    const double C49967 = C49956 / C49961;
    const double C51026 = C51025 / C49932;
    const double C49966 = 0 - C49962;
    const double C50036 = C50008 / C50028;
    const double C50034 = C50023 / C50028;
    const double C51125 = C51124 / C49999;
    const double C50033 = 0 - C50029;
    const double C50070 = -C50067;
    const double C50079 = std::pow(C50067, 4);
    const double C50097 = std::pow(C50067, 6);
    const double C50128 = std::pow(C50067, 2);
    const double C141 =
        (-((xP - xQ) *
           (bs[2] * std::pow(C50067, 2) +
            std::pow(yP - yQ, 2) * bs[3] * std::pow(-C50067, 3)) *
           ae * ce) /
         C49932) /
        C49999;
    const double C50972 = C50971 / C49999;
    const double C50992 = C50991 / C49932;
    const double C51056 = C51055 / C49932;
    const double C51155 = C51154 / C49999;
    const double C51027 = -C51026;
    const double C49971 = C49966 * ce;
    const double C51126 = -C51125;
    const double C50038 = C50033 * ae;
    const double C50073 = std::pow(C50070, 3);
    const double C50088 = std::pow(C50070, 5);
    const double C50112 = std::pow(C50070, 7);
    const double C50082 = C50081 * C50079;
    const double C50086 = C50078 * C50079;
    const double C50138 = C50079 * C50136;
    const double C50137 = C50079 * C50135;
    const double C50100 = C50099 * C50097;
    const double C50110 = C50096 * C50097;
    const double C50148 = C50097 * C50146;
    const double C50147 = C50097 * C50145;
    const double C50161 = C50129 * C50128;
    const double C128 = (C50076 * C50128 * C50129 * C50132) / C49999;
    const double C129 = -(C50076 * C50128 * C50129 * C50133) / C49932;
    const double C306 = (C50071 * C50128 * C50129 * C50132) / C49999 -
                        (ae * bs[1] * C50065) / (C50064 * C49999);
    const double C307 = (ce * bs[1] * C50065) / (C50064 * C49932) -
                        (C50071 * C50128 * C50129 * C50133) / C49932;
    const double C486 = -(C50263 * C50128 * C50129 * C50133) / C49932;
    const double C487 = (C50263 * C50128 * C50129 * C50132) / C49999;
    const double C50973 = -C50972;
    const double C50993 = -C50992;
    const double C51057 = -C51056;
    const double C51156 = -C51155;
    const double C51028 = std::exp(C51027);
    const double C49973 = C49971 / C49932;
    const double C51127 = std::exp(C51126);
    const double C50040 = C50038 / C49999;
    const double C50077 = C50069 * C50073;
    const double C50164 = C50073 * C50162;
    const double C50163 = C50073 * C50160;
    const double C142 =
        (-((C50069 * C50073 + C50074 * bs[4] * std::pow(C50067, 4)) * C50072 *
           std::pow(xP - xQ, 2)) /
         C49932) /
            C49999 -
        ((bs[2] * std::pow(C50067, 2) + C50074 * C50069 * C50073) * C50072) /
            (C49932 * C49999);
    const double C318 =
        (-(C50128 * C50129 * C50071 * ae * ce) / C49932) / C49999 -
        (ae * C50128 * C50129 * C50071 * ce) / C50080 -
        (C50071 * (C50129 * C50128 + C50074 * C50069 * C50073) * C50072) /
            C50080;
    const double C494 =
        (-((zP - zQ) * (C50129 * C50128 + C50074 * C50069 * C50073) * C50072) /
         C49932) /
        C49999;
    const double C50091 = C50090 * C50088;
    const double C50095 = C50087 * C50088;
    const double C50143 = C50088 * C50141;
    const double C50142 = C50088 * C50140;
    const double C50117 = C50115 * C50112;
    const double C50209 = C50112 * C50202;
    const double C50205 = C50112 * C50196;
    const double C50171 = C50086 * C50089;
    const double C50179 = C50076 * C50086;
    const double C50295 = C50086 * ae;
    const double C50293 = C50086 * C50074;
    const double C50292 = C50071 * C50086;
    const double C50291 = C50086 * ce;
    const double C50947 = C50086 * C50277;
    const double C50953 = C50263 * C50086;
    const double C50168 = C50076 * C50138;
    const double C50232 = C50071 * C50138;
    const double C50287 = C50138 * ce;
    const double C50166 = C50076 * C50137;
    const double C50229 = C50071 * C50137;
    const double C50288 = ae * C50137;
    const double C50199 = C50110 * C50089;
    const double C50447 = C50076 * C50110;
    const double C50559 = C50110 * ae;
    const double C50553 = C50110 * C50074;
    const double C50552 = C50071 * C50110;
    const double C50551 = C50110 * ce;
    const double C50150 = C50148 * C50089;
    const double C50201 = C50076 * C50148;
    const double C50397 = C50071 * C50148;
    const double C50545 = C50148 * ce;
    const double C50621 = C50263 * C50148;
    const double C50645 = C50148 * C50277;
    const double C50149 = C50147 * C50089;
    const double C50195 = C50076 * C50147;
    const double C50391 = C50071 * C50147;
    const double C50546 = ae * C50147;
    const double C50622 = C50263 * C50147;
    const double C50646 = C50147 * C50277;
    const double C121 = C50161 * C50089 - (bs[1] * C50065) / C50064;
    const double C301 = C50071 * C50076 * C50161;
    const double C472 = C50263 * C50076 * C50161;
    const double C638 = C50161 * C50074 - (bs[1] * C50065) / C50064;
    const double C883 = C50263 * C50071 * C50161;
    const double C1016 = C50161 * C50277 - (bs[1] * C50065) / C50064;
    const double C50974 = std::exp(C50973);
    const double C50994 = std::exp(C50993);
    const double C51058 = std::exp(C51057);
    const double C51157 = std::exp(C51156);
    const double C49944 = C49943 * C51028;
    const double C118 = -(2 * ce * de * (yC - yD) * C51028) / (ce + de);
    const double C298 =
        ((C51028 - (C49931 * 2 * ce * de * C49931 * C51028) / C49932) * ce) /
            C49932 -
        (0 * de) / (2 * std::pow(C49932, 2));
    const double C299 =
        (0 * ce) / C49932 - (ce * de * C49931 * C51028) / std::pow(C49932, 2);
    const double C51041 = C51028 * C51039;
    const double C51044 = C50998 * C51028;
    const double C51264 = C51028 * C51040;
    const double C51263 = C51028 / C49940;
    const double C632 = C51261 * C51028;
    const double C49975 = C49973 - C49967;
    const double C151 = C51127 * C141;
    const double C149 = C51127 * C128;
    const double C5664 = C51127 * C487;
    const double C50011 = C50010 * C51127;
    const double C117 = -(2 * ae * be * (yA - yB) * C51127) / (ae + be);
    const double C2449 =
        ((C51127 - (C49998 * 2 * ae * be * C49998 * C51127) / C49999) * ae) /
            C49999 -
        (0 * be) / (2 * std::pow(C49999, 2));
    const double C2450 =
        (0 * ae) / C49999 - (ae * be * C49998 * C51127) / std::pow(C49999, 2);
    const double C51140 = C51127 * C51138;
    const double C51143 = C50978 * C51127;
    const double C51277 = C51127 * C51139;
    const double C51276 = C51127 / C50007;
    const double C8196 = C51274 * C51127;
    const double C50042 = C50040 - C50034;
    const double C50083 = C50077 + C50082;
    const double C50167 = C50076 * C50077;
    const double C50233 = C50077 * ae;
    const double C50231 = C50071 * C50077;
    const double C50230 = C50077 * ce;
    const double C122 =
        2 * C50076 * C50161 + C50076 * (C50161 + C50077 * C50089);
    const double C302 = C50071 * (C50161 + C50077 * C50089);
    const double C473 = C50263 * (C50161 + C50077 * C50089);
    const double C769 =
        2 * C50071 * C50161 + C50071 * (C50161 + C50077 * C50074);
    const double C884 = C50263 * (C50161 + C50077 * C50074);
    const double C1247 =
        2 * C50263 * C50161 + C50263 * (C50161 + C50077 * C50277);
    const double C6562 =
        3 * (C50161 + C50077 * C50277) +
        C50263 * (2 * C50263 * C50077 + C50263 * (C50077 + C50086 * C50277));
    const double C130 = (C50128 * C50129 * C50132 + C50164 * C50089) / C49999;
    const double C132 =
        (2 * C50076 * C50164 + C50076 * (C50164 + C50138 * C50089)) / C49999;
    const double C308 =
        (C50071 * C50076 * C50164 + C50076 * C50161 * ae) / C49999;
    const double C310 = (C50071 * (C50164 + C50138 * C50089) +
                         (C50161 + C50077 * C50089) * ae) /
                        C49999;
    const double C478 = (C50263 * C50076 * C50164) / C49999;
    const double C480 = (C50263 * (C50164 + C50138 * C50089)) / C49999;
    const double C643 =
        (C50128 * C50129 * C50132 + C50071 * (C50071 * C50164 + C50161 * ae) +
         C50071 * C50161 * ae) /
        C49999;
    const double C891 = (C50263 * (C50071 * C50164 + C50161 * ae)) / C49999;
    const double C1021 = (C50128 * C50129 * C50132 + C50164 * C50277) / C49999;
    const double C1255 =
        (2 * C50263 * C50164 + C50263 * (C50164 + C50138 * C50277)) / C49999;
    const double C131 = -(C50163 * C50089 + C50128 * C50129 * C50133) / C49932;
    const double C133 = (-2 * C50076 * C50163) / C49932 -
                        (C50076 * (C50137 * C50089 + C50163)) / C49932;
    const double C309 =
        -(C50071 * C50076 * C50163 + C50076 * C50161 * ce) / C49932;
    const double C311 = -(C50071 * (C50137 * C50089 + C50163) +
                          (C50161 + C50077 * C50089) * ce) /
                        C49932;
    const double C479 = -(C50263 * C50076 * C50163) / C49932;
    const double C481 = -(C50263 * (C50137 * C50089 + C50163)) / C49932;
    const double C644 = -(C50071 * (C50071 * C50163 + C50161 * ce) +
                          C50128 * C50129 * C50133 + C50071 * C50161 * ce) /
                        C49932;
    const double C892 = -(C50263 * (C50071 * C50163 + C50161 * ce)) / C49932;
    const double C1022 = -(C50163 * C50277 + C50128 * C50129 * C50133) / C49932;
    const double C1254 = (-2 * C50263 * C50163) / C49932 -
                         (C50263 * (C50137 * C50277 + C50163)) / C49932;
    const double C155 = C51127 * C142;
    const double C5666 = C51127 * C494;
    const double C50092 = C50086 + C50091;
    const double C50101 = C50095 + C50100;
    const double C50180 = C50095 * C50089;
    const double C50198 = C50076 * C50095;
    const double C50398 = C50095 * ae;
    const double C50394 = C50095 * C50074;
    const double C50393 = C50071 * C50095;
    const double C50392 = C50095 * ce;
    const double C50954 = C50095 * C50277;
    const double C50172 = C50143 * C50089;
    const double C50181 = C50076 * C50143;
    const double C50294 = C50071 * C50143;
    const double C50387 = C50143 * ce;
    const double C50498 = C50263 * C50143;
    const double C50845 = C50143 * C50277;
    const double C6568 =
        (3 * (C50164 + C50138 * C50277) +
         C50263 * (2 * C50263 * C50138 + C50263 * (C50138 + C50143 * C50277))) /
        C49999;
    const double C50170 = C50142 * C50089;
    const double C50177 = C50076 * C50142;
    const double C50290 = C50071 * C50142;
    const double C50388 = ae * C50142;
    const double C50499 = C50263 * C50142;
    const double C50842 = C50142 * C50277;
    const double C6567 =
        (-3 * (C50137 * C50277 + C50163)) / C49932 +
        C50263 * ((-2 * C50263 * C50137) / C49932 -
                  (C50263 * (C50142 * C50277 + C50137)) / C49932);
    const double C50118 = C50110 + C50117;
    const double C50213 = C50209 * C50089;
    const double C50450 = C50076 * C50209;
    const double C50558 = C50071 * C50209;
    const double C50211 = C50205 * C50089;
    const double C50446 = C50076 * C50205;
    const double C50550 = C50071 * C50205;
    const double C50174 = C50077 + C50171;
    const double C50185 = 2 * C50179;
    const double C50242 = C50179 * ae;
    const double C50240 = C50071 * C50179;
    const double C50239 = C50179 * ce;
    const double C50301 = C50077 + C50293;
    const double C50303 = C50292 * ae;
    const double C50300 = C50292 * ce;
    const double C50395 = 2 * C50292;
    const double C50948 = C50077 + C50947;
    const double C50955 = 2 * C50953;
    const double C1023 = (C50076 * C50164 + C50168 * C50277) / C49999;
    const double C50296 = C50287 / C49932;
    const double C1024 = -(C50166 * C50277 + C50076 * C50163) / C49932;
    const double C50297 = C50288 / C50080;
    const double C50207 = C50095 + C50199;
    const double C50462 = C50447 * ae;
    const double C50460 = C50447 * C50074;
    const double C50459 = C50071 * C50447;
    const double C50458 = C50447 * ce;
    const double C50571 = C50095 + C50553;
    const double C50573 = C50552 * ae;
    const double C50570 = C50552 * ce;
    const double C50152 = C50143 + C50150;
    const double C50208 = 2 * C50201;
    const double C50322 = C50071 * C50201;
    const double C50442 = C50201 * ce;
    const double C50512 = C50263 * C50201;
    const double C50839 = C50201 * C50277;
    const double C50564 = C50545 / C49932;
    const double C50626 = C50621 * ce;
    const double C50648 = C50143 + C50645;
    const double C50151 = C50149 + C50142;
    const double C50204 = -2 * C50195;
    const double C50318 = C50071 * C50195;
    const double C50443 = ae * C50195;
    const double C50513 = C50263 * C50195;
    const double C50836 = C50195 * C50277;
    const double C50565 = C50546 / C50080;
    const double C50627 = ae * C50622;
    const double C50649 = C50646 + C50142;
    const double C50975 = C50974 * C50969;
    const double C50979 = C50978 * C50974;
    const double C51248 = C50974 / C50007;
    const double C51247 = C50974 * C50970;
    const double C2448 = C51274 * C50974;
    const double C50995 = C50994 * C50989;
    const double C50999 = C50998 * C50994;
    const double C51255 = C50994 / C49940;
    const double C51254 = C50994 * C50990;
    const double C297 = C51261 * C50994;
    const double C51067 = C51058 * C51065;
    const double C51070 = C50998 * C51058;
    const double C51269 = C51058 * C51066;
    const double C51268 = C51058 / C49940;
    const double C1015 = C51261 * C51058;
    const double C51166 = C51157 * C51164;
    const double C51169 = C50978 * C51157;
    const double C51282 = C51157 * C51165;
    const double C51281 = C51157 / C50007;
    const double C15577 = C51274 * C51157;
    const double C49945 = 2 * C49944;
    const double C49965 = C49944 / C49957;
    const double C51266 = C51041 / C49961;
    const double C51265 = C51041 * C51040;
    const double C51260 = C51041 / C49932;
    const double C51047 = C51044 * C51040;
    const double C763 = C51044 / C51259;
    const double C1489 = C51044 / C49940;
    const double C51292 = C51264 / C49932;
    const double C631 = (-2 * C50998 * C51264) / C49932;
    const double C630 = (C51028 * std::pow(C51040, 2)) / C49957 + C51263;
    const double C50012 = 2 * C50011;
    const double C50032 = C50011 / C50024;
    const double C152 = C117 * C121;
    const double C150 = C117 * C129;
    const double C148 = C117 * C120;
    const double C327 = C117 * C301;
    const double C497 = C117 * C472;
    const double C5665 = C117 * C486;
    const double C5663 = C117 * C476;
    const double C6094 = C117 * C883;
    const double C6261 = C117 * C1016;
    const double C2460 = C2449 * C121;
    const double C2456 = C2449 * C129;
    const double C2452 = C2449 * C120;
    const double C2660 = C2449 * C301;
    const double C2850 = C2449 * C472;
    const double C18621 = C2449 * C1016;
    const double C18617 = C2449 * C486;
    const double C18613 = C2449 * C476;
    const double C19029 = C2449 * C883;
    const double C2454 = C2450 * C301;
    const double C18615 = C2450 * C883;
    const double C51279 = C51140 / C50028;
    const double C51278 = C51140 * C51139;
    const double C51273 = C51140 / C49999;
    const double C51146 = C51143 * C51139;
    const double C11013 = C51143 / C51252;
    const double C25800 = C51143 / C50007;
    const double C51298 = C51277 / C49999;
    const double C8195 = (-2 * C50978 * C51277) / C49999;
    const double C8194 = (C51127 * std::pow(C51139, 2)) / C50024 + C51276;
    const double C50084 = C50083 * C50072;
    const double C645 =
        (C50076 * C50164 + C50071 * (C50071 * C50168 + C50167 * ae) +
         C50071 * C50167 * ae) /
        C49999;
    const double C646 = -(C50071 * (C50071 * C50166 + C50167 * ce) +
                          C50076 * C50163 + C50071 * C50167 * ce) /
                        C49932;
    const double C895 = (C50263 * (C50071 * C50168 + C50167 * ae)) / C49999;
    const double C896 = -(C50263 * (C50071 * C50166 + C50167 * ce)) / C49932;
    const double C639 = C50076 * C50161 + C50167 * C50074;
    const double C770 =
        2 * C50071 * C50167 + C50071 * (C50167 + C50179 * C50074);
    const double C885 = C50263 * C50071 * C50167;
    const double C886 = C50263 * (C50167 + C50179 * C50074);
    const double C1017 = C50076 * C50161 + C50167 * C50277;
    const double C1246 =
        2 * C50263 * C50167 + C50263 * (C50167 + C50179 * C50277);
    const double C50235 = C50232 + C50233;
    const double C1158 = C50071 * C50161 + C50231 * C50277;
    const double C3757 =
        2 * C50263 * C50231 + C50263 * (C50231 + C50292 * C50277);
    const double C50234 = C50229 + C50230;
    const double C156 = C117 * C122;
    const double C2474 = C2449 * C122;
    const double C333 = C117 * C302;
    const double C2462 = C2450 * C302;
    const double C2670 = C2449 * C302;
    const double C501 = C117 * C473;
    const double C2858 = C2449 * C473;
    const double C6098 = C117 * C884;
    const double C19035 = C2449 * C884;
    const double C19027 = C2450 * C884;
    const double C6573 = C117 * C1247;
    const double C19239 = C2449 * C1247;
    const double C16725 = C117 * C6562;
    const double C19526 = C2449 * C6562;
    const double C153 = C51127 * C130;
    const double C157 = C51127 * C132;
    const double C328 = C51127 * C308;
    const double C2455 = C51143 * C308;
    const double C22946 = C51143 * C308;
    const double C334 = C51127 * C310;
    const double C2463 = C51143 * C310;
    const double C22954 = C51143 * C310;
    const double C498 = C51127 * C478;
    const double C502 = C51127 * C480;
    const double C6095 = C51127 * C891;
    const double C18616 = C51143 * C891;
    const double C29038 = C51143 * C891;
    const double C6262 = C51127 * C1021;
    const double C6574 = C51127 * C1255;
    const double C154 = C117 * C131;
    const double C2464 = C2449 * C131;
    const double C158 = C117 * C133;
    const double C2470 = C2449 * C133;
    const double C329 = C117 * C309;
    const double C2458 = C2450 * C309;
    const double C2664 = C2449 * C309;
    const double C335 = C117 * C311;
    const double C2466 = C2450 * C311;
    const double C2674 = C2449 * C311;
    const double C499 = C117 * C479;
    const double C2854 = C2449 * C479;
    const double C503 = C117 * C481;
    const double C2862 = C2449 * C481;
    const double C6096 = C117 * C892;
    const double C18619 = C2450 * C892;
    const double C19033 = C2449 * C892;
    const double C6259 = C117 * C1022;
    const double C18625 = C2449 * C1022;
    const double C6575 = C117 * C1254;
    const double C19235 = C2449 * C1254;
    const double C50093 = C50092 * C50072;
    const double C50102 = C50101 * C50072;
    const double C50186 = C50086 + C50180;
    const double C50206 = 2 * C50198;
    const double C50323 = C50198 * ae;
    const double C50321 = C50198 * C50074;
    const double C50320 = C50071 * C50198;
    const double C50319 = C50198 * ce;
    const double C50944 = C50198 * C50277;
    const double C6561 =
        3 * (C50167 + C50179 * C50277) +
        C50263 * (2 * C50263 * C50179 + C50263 * (C50179 + C50198 * C50277));
    const double C50408 = C50397 + C50398;
    const double C50407 = C50086 + C50394;
    const double C50409 = C50393 * ae;
    const double C50406 = C50393 * ce;
    const double C50554 = 2 * C50393;
    const double C50950 = C50393 * C50277;
    const double C13994 =
        3 * (C50231 + C50292 * C50277) +
        C50263 * (2 * C50263 * C50292 + C50263 * (C50292 + C50393 * C50277));
    const double C50405 = C50391 + C50392;
    const double C50956 = C50086 + C50954;
    const double C50175 = C50138 + C50172;
    const double C50187 = 2 * C50181;
    const double C50241 = C50071 * C50181;
    const double C50315 = C50181 * ce;
    const double C1253 =
        (2 * C50263 * C50168 + C50263 * (C50168 + C50181 * C50277)) / C49999;
    const double C6566 =
        (3 * (C50168 + C50181 * C50277) +
         C50263 * (2 * C50263 * C50181 + C50263 * (C50181 + C50201 * C50277))) /
        C49999;
    const double C50302 = C50294 + C50295;
    const double C50401 = C50387 / C49932;
    const double C50501 = C50498 * ce;
    const double C50860 = 2 * C50498;
    const double C50846 = C50138 + C50845;
    const double C16726 = C51127 * C6568;
    const double C50173 = C50170 + C50137;
    const double C50183 = -2 * C50177;
    const double C50238 = C50071 * C50177;
    const double C50316 = ae * C50177;
    const double C1252 = (-2 * C50263 * C50166) / C49932 -
                         (C50263 * (C50177 * C50277 + C50166)) / C49932;
    const double C6565 =
        (-3 * (C50177 * C50277 + C50166)) / C49932 +
        C50263 * ((-2 * C50263 * C50177) / C49932 -
                  (C50263 * (C50195 * C50277 + C50177)) / C49932);
    const double C50299 = C50290 + C50291;
    const double C50402 = C50388 / C50080;
    const double C50502 = ae * C50499;
    const double C50854 = -2 * C50499;
    const double C50843 = C50842 + C50137;
    const double C16727 = C117 * C6567;
    const double C19530 = C2449 * C6567;
    const double C50119 = C50118 * C50072;
    const double C50216 = C50148 + C50213;
    const double C50461 = C50071 * C50450;
    const double C50572 = C50558 + C50559;
    const double C50214 = C50211 + C50147;
    const double C50457 = C50071 * C50446;
    const double C50569 = C50550 + C50551;
    const double C123 = 3 * (C50161 + C50077 * C50089) +
                        C50076 * (2 * C50167 + C50076 * C50174);
    const double C303 = C50071 * (2 * C50167 + C50076 * C50174);
    const double C474 = C50263 * (2 * C50167 + C50076 * C50174);
    const double C640 = C50161 + C50077 * C50089 + C50174 * C50074;
    const double C887 = C50263 * C50071 * C50174;
    const double C1018 = C50161 + C50077 * C50089 + C50174 * C50277;
    const double C1159 = C50071 * C50167 + C50240 * C50277;
    const double C3159 = 3 * (C50161 + C50077 * C50074) +
                         C50071 * (2 * C50231 + C50071 * C50301);
    const double C3317 = C50263 * (2 * C50231 + C50071 * C50301);
    const double C3645 = C50161 + C50077 * C50074 + C50301 * C50277;
    const double C16716 =
        4 * (2 * C50263 * C50077 + C50263 * C50948) +
        C50263 * (3 * C50948 + C50263 * (2 * C50263 * C50086 +
                                         C50263 * (C50086 + C50095 * C50277)));
    const double C1038 = C51127 * C1023;
    const double C50304 = -C50296;
    const double C1039 = C117 * C1024;
    const double C3480 = C2449 * C1024;
    const double C50212 = C50076 * C50207;
    const double C50351 = C50207 * ae;
    const double C50349 = C50207 * C50074;
    const double C50348 = C50071 * C50207;
    const double C50347 = C50207 * ce;
    const double C50468 = C50198 + C50460;
    const double C50470 = C50459 * ae;
    const double C50467 = C50459 * ce;
    const double C50581 = C50571 * ae;
    const double C50579 = C50071 * C50571;
    const double C50578 = C50571 * ce;
    const double C50182 = C50076 * C50152;
    const double C50200 = 3 * C50152;
    const double C50249 = C50071 * C50152;
    const double C50343 = C50152 * ce;
    const double C50453 = C50442 / C49932;
    const double C50515 = C50512 * ce;
    const double C50840 = C50181 + C50839;
    const double C50576 = -C50564;
    const double C50631 = C50626 / C49932;
    const double C50651 = C50648 * ce;
    const double C50861 = C50263 * C50648;
    const double C50178 = C50076 * C50151;
    const double C50194 = -3 * C50151;
    const double C50246 = C50071 * C50151;
    const double C50344 = ae * C50151;
    const double C50210 = C50204 / C49932;
    const double C50454 = C50443 / C50080;
    const double C50516 = ae * C50513;
    const double C50837 = C50836 + C50177;
    const double C50632 = C50627 / C50080;
    const double C50652 = ae * C50649;
    const double C50855 = C50263 * C50649;
    const double C51250 = C50975 / C50028;
    const double C51249 = C50975 * C50970;
    const double C51246 = C50975 / C49999;
    const double C50982 = C50979 * C50970;
    const double C111 = C50979 / C51252;
    const double C22939 = C50979 / C50007;
    const double C2446 = (C50974 * std::pow(C50970, 2)) / C50024 + C51248;
    const double C51286 = C51247 / C49999;
    const double C2447 = (-2 * C50978 * C51247) / C49999;
    const double C51257 = C50995 / C49961;
    const double C51256 = C50995 * C50990;
    const double C51253 = C50995 / C49932;
    const double C51002 = C50999 * C50990;
    const double C115 = C50999 / C51259;
    const double C1362 = C50999 / C49940;
    const double C295 = (C50994 * std::pow(C50990, 2)) / C49957 + C51255;
    const double C51289 = C51254 / C49932;
    const double C296 = (-2 * C50998 * C51254) / C49932;
    const double C51271 = C51067 / C49961;
    const double C51270 = C51067 * C51066;
    const double C51262 = C51067 / C49932;
    const double C51073 = C51070 * C51066;
    const double C1243 = C51070 / C51259;
    const double C2019 = C51070 / C49940;
    const double C51295 = C51269 / C49932;
    const double C1014 = (-2 * C50998 * C51269) / C49932;
    const double C1013 = (C51058 * std::pow(C51066, 2)) / C49957 + C51268;
    const double C51284 = C51166 / C50028;
    const double C51283 = C51166 * C51165;
    const double C51275 = C51166 / C49999;
    const double C51172 = C51169 * C51165;
    const double C21086 = C51169 / C51252;
    const double C38474 = C51169 / C50007;
    const double C51301 = C51282 / C49999;
    const double C15576 = (-2 * C50978 * C51282) / C49999;
    const double C15575 = (C51157 * std::pow(C51165, 2)) / C50024 + C51281;
    const double C49959 = C49931 * C49945;
    const double C636 =
        ((-C49941 / C49932) / C49940 -
         ((C51028 - (C49931 * C49945) / C49932) * de) / C49932) /
            C49940 -
        ((C49931 * ((-C49945 / C49932) / C49940 - (0 * de) / C49932) + C51044) *
         de) /
            C49932;
    const double C637 =
        ((-C49945 / C49932) / C49940 - (0 * de) / C49932) / C49940 -
        (0 * de) / C49932;
    const double C1364 = (-C49945 / C49932) / C49940 - (0 * de) / C49932;
    const double C49970 = C49964 - C49965;
    const double C51293 = C51265 / C49957;
    const double C51267 = C51047 / C49932;
    const double C1358 = -C51292;
    const double C50026 = C49998 * C50012;
    const double C8200 =
        ((-C50008 / C49999) / C50007 -
         ((C51127 - (C49998 * C50012) / C49999) * be) / C49999) /
            C50007 -
        ((C49998 * ((-C50012 / C49999) / C50007 - (0 * be) / C49999) + C51143) *
         be) /
            C49999;
    const double C8201 =
        ((-C50012 / C49999) / C50007 - (0 * be) / C49999) / C50007 -
        (0 * be) / C49999;
    const double C22941 = (-C50012 / C49999) / C50007 - (0 * be) / C49999;
    const double C50037 = C50031 - C50032;
    const double C169 = C150 + C151;
    const double C168 = C148 + C149;
    const double C5673 = C5665 + C5666;
    const double C5672 = C5663 + C5664;
    const double C51299 = C51278 / C50024;
    const double C2475 = C51273 * C132;
    const double C2465 = C51273 * C142;
    const double C2461 = C51273 * C130;
    const double C2457 = C51273 * C141;
    const double C2453 = C51273 * C128;
    const double C2671 = C51273 * C310;
    const double C2661 = C51273 * C308;
    const double C2859 = C51273 * C480;
    const double C2851 = C51273 * C478;
    const double C3477 = C51273 * C1023;
    const double C18622 = C51273 * C1021;
    const double C18618 = C51273 * C494;
    const double C18614 = C51273 * C487;
    const double C19030 = C51273 * C891;
    const double C19240 = C51273 * C1255;
    const double C19527 = C51273 * C6568;
    const double C51280 = C51146 / C49999;
    const double C22935 = -C51298;
    const double C8224 = C8195 * C310;
    const double C8206 = C8195 * C308;
    const double C13127 = C8195 * C891;
    const double C8228 = C8194 * C132;
    const double C8226 = C8194 * C130;
    const double C8220 = C8194 * C142;
    const double C8210 = C8194 * C141;
    const double C8204 = C8194 * C128;
    const double C8416 = C8194 * C310;
    const double C8408 = C8194 * C308;
    const double C8598 = C8194 * C480;
    const double C8586 = C8194 * C478;
    const double C9192 = C8194 * C1023;
    const double C13131 = C8194 * C494;
    const double C13125 = C8194 * C487;
    const double C13537 = C8194 * C891;
    const double C13725 = C8194 * C1021;
    const double C14003 = C8194 * C1255;
    const double C143 =
        (-2 * C50076 * C50084) / C50080 +
        C50076 * ((-((C50078 * C50079 + C50074 * bs[5] * std::pow(C50070, 5)) *
                     C50072 * std::pow(C50076, 2)) /
                   C49932) /
                      C49999 -
                  C50084 / C50080);
    const double C319 =
        (-(C50076 * C50073 * C50069 * C50071 * ae * ce) / C49932) / C49999 -
        (ae * C50076 * C50073 * C50069 * C50071 * ce) / C50080 -
        (C50071 * C50076 * C50084) / C50080;
    const double C490 = (-((zP - zQ) * C50076 * C50084) / C49932) / C49999;
    const double C653 =
        (-(ae * (C50071 * C50163 + C50161 * ce)) / C49932) / C49999 -
        ((C50161 + C50074 * C50069 * C50073) * C50072) / C50080 -
        ((C50071 * C50164 + C50161 * ae) * ce) / C50080 +
        C50071 * ((-(C50164 * ce) / C49932) / C49999 - (ae * C50163) / C50080 -
                  (C50071 * C50084) / C50080);
    const double C907 = (-(C50263 * C50164 * ce) / C49932) / C49999 -
                        (ae * C50263 * C50163) / C50080 -
                        (C50071 * C50263 * C50084) / C50080;
    const double C1031 =
        (-(C50084 * std::pow(C50263, 2)) / C49932) / C49999 -
        ((C50161 + C50074 * C50069 * C50073) * C50072) / C50080;
    const double C664 = C51127 * C645;
    const double C2659 = C51143 * C645;
    const double C3039 = C51273 * C645;
    const double C8208 = C8196 * C645;
    const double C8406 = C8195 * C645;
    const double C8768 = C8194 * C645;
    const double C23150 = C51143 * C645;
    const double C25812 = C25800 * C645;
    const double C665 = C117 * C646;
    const double C2662 = C2450 * C646;
    const double C3042 = C2449 * C646;
    const double C1649 = C51127 * C895;
    const double C2853 = C51143 * C895;
    const double C4263 = C51273 * C895;
    const double C8588 = C8195 * C895;
    const double C9956 = C8194 * C895;
    const double C23344 = C51143 * C895;
    const double C1652 = C117 * C896;
    const double C2856 = C2450 * C896;
    const double C4266 = C2449 * C896;
    const double C663 = C117 * C639;
    const double C2658 = C2450 * C639;
    const double C3038 = C2449 * C639;
    const double C3040 = C2450 * C770;
    const double C1648 = C117 * C885;
    const double C2852 = C2450 * C885;
    const double C4262 = C2449 * C885;
    const double C4264 = C2450 * C886;
    const double C5828 = C117 * C886;
    const double C35546 = C2449 * C886;
    const double C1037 = C117 * C1017;
    const double C3476 = C2449 * C1017;
    const double C6263 = C117 * C1246;
    const double C19225 = C2449 * C1246;
    const double C773 = (2 * (C50071 * C50164 + C50161 * ae) +
                         C50071 * (C50164 + C50071 * C50235 + C50231 * ae) +
                         (C50161 + C50077 * C50074) * ae) /
                        C49999;
    const double C893 =
        (C50263 * (C50164 + C50071 * C50235 + C50231 * ae)) / C49999;
    const double C1162 =
        (C50071 * C50164 + C50161 * ae + C50235 * C50277) / C49999;
    const double C6433 = C117 * C1158;
    const double C18623 = C2450 * C1158;
    const double C19045 = C2449 * C1158;
    const double C16594 = C117 * C3757;
    const double C19237 = C2450 * C3757;
    const double C19405 = C2449 * C3757;
    const double C774 =
        (-2 * (C50071 * C50163 + C50161 * ce)) / C49932 -
        (C50071 * (C50071 * C50234 + C50163 + C50231 * ce)) / C49932 -
        ((C50161 + C50077 * C50074) * ce) / C49932;
    const double C894 =
        -(C50263 * (C50071 * C50234 + C50163 + C50231 * ce)) / C49932;
    const double C1163 =
        -(C50234 * C50277 + C50071 * C50163 + C50161 * ce) / C49932;
    const double C170 = C152 + C153;
    const double C172 = C156 + C157;
    const double C349 = C327 + C328;
    const double C2485 = C2454 + C2455;
    const double C352 = C333 + C334;
    const double C2489 = C2462 + C2463;
    const double C513 = C497 + C498;
    const double C515 = C501 + C502;
    const double C6102 = C6094 + C6095;
    const double C18630 = C18615 + C18616;
    const double C6272 = C6261 + C6262;
    const double C6577 = C6573 + C6574;
    const double C171 = C154 + C155;
    const double C50098 = C50093 / C50080;
    const double C50237 = C50076 * C50093;
    const double C50289 = C50071 * C50093;
    const double C50370 = C50263 * C50093;
    const double C144 =
        3 * ((-(C50093 * C50089) / C49932) / C49999 - C50084 / C50080) +
        C50076 *
            ((-2 * C50076 * C50093) / C50080 +
             C50076 *
                 ((-((C50087 * C50088 + C50074 * bs[6] * std::pow(C50067, 6)) *
                     C50072 * C50089) /
                   C49932) /
                      C49999 -
                  C50093 / C50080));
    const double C320 =
        (-((C50073 * C50069 * C50132 + C50079 * C50078 * C50132 * C50089) *
           ce) /
         C49932) /
            C49999 -
        (ae * (C50079 * C50078 * C50133 * C50089 + C50073 * C50069 * C50133)) /
            C50080 +
        C50071 * ((-(C50093 * C50089) / C49932) / C49999 - C50084 / C50080);
    const double C491 =
        (zP - zQ) * ((-(C50093 * C50089) / C49932) / C49999 - C50084 / C50080);
    const double C654 =
        (-(ae * (C50071 * C50166 + C50167 * ce)) / C49932) / C49999 -
        (C50076 * C50084) / C50080 -
        ((C50071 * C50168 + C50167 * ae) * ce) / C50080 +
        C50071 * ((-(C50168 * ce) / C49932) / C49999 - (ae * C50166) / C50080 -
                  (C50071 * C50076 * C50093) / C50080);
    const double C781 =
        2 * ((-(C50164 * ce) / C49932) / C49999 - (ae * C50163) / C50080 -
             (C50071 * C50084) / C50080) -
        (ae * (C50071 * C50234 + C50163 + C50231 * ce)) / C50080 -
        ((C50164 + C50071 * C50235 + C50231 * ae) * ce) / C50080 +
        C50071 *
            ((-(ae * C50234) / C49932) / C49999 - C50084 / C50080 -
             (C50235 * ce) / C50080 +
             C50071 * ((-(C50138 * ce) / C49932) / C49999 -
                       (ae * C50137) / C50080 - (C50071 * C50093) / C50080));
    const double C908 = (-(ae * C50263 * C50234) / C49932) / C49999 -
                        (C50263 * C50084) / C50080 -
                        (C50263 * C50235 * ce) / C50080 +
                        C50071 * ((-(C50263 * C50138 * ce) / C49932) / C49999 -
                                  (ae * C50263 * C50137) / C50080 -
                                  (C50071 * C50263 * C50093) / C50080);
    const double C1170 =
        (-((C50164 + C50138 * C50277) * ce) / C49932) / C49999 -
        (ae * (C50137 * C50277 + C50163)) / C50080 +
        C50071 * ((-(C50093 * C50277) / C49932) / C49999 - C50084 / C50080);
    const double C1259 =
        (-2 * C50263 * C50084) / C50080 +
        C50263 * ((-(C50093 * C50277) / C49932) / C49999 - C50084 / C50080);
    const double C50103 = C50102 * C50089;
    const double C50113 = C50102 / C50080;
    const double C50109 = C50076 * C50102;
    const double C50389 = C50071 * C50102;
    const double C50500 = C50263 * C50102;
    const double C50526 = C50102 * C50277;
    const double C50189 = C50076 * C50186;
    const double C50197 = 3 * C50186;
    const double C50250 = C50186 * ae;
    const double C50248 = C50071 * C50186;
    const double C50247 = C50186 * ce;
    const double C771 =
        2 * C50071 * C50174 + C50071 * (C50174 + C50186 * C50074);
    const double C888 = C50263 * (C50174 + C50186 * C50074);
    const double C1245 =
        2 * C50263 * C50174 + C50263 * (C50174 + C50186 * C50277);
    const double C6560 =
        3 * (C50174 + C50186 * C50277) +
        C50263 * (2 * C50263 * C50186 + C50263 * (C50186 + C50207 * C50277));
    const double C50330 = C50322 + C50323;
    const double C50329 = C50179 + C50321;
    const double C50331 = C50320 * ae;
    const double C50328 = C50320 * ce;
    const double C50448 = 2 * C50320;
    const double C3756 =
        2 * C50263 * C50240 + C50263 * (C50240 + C50320 * C50277);
    const double C16587 =
        3 * (C50240 + C50320 * C50277) +
        C50263 * (2 * C50263 * C50320 + C50263 * (C50320 + C50459 * C50277));
    const double C50327 = C50318 + C50319;
    const double C50945 = C50179 + C50944;
    const double C16434 = C117 * C6561;
    const double C50415 = C50071 * C50408;
    const double C50557 = 2 * C50408;
    const double C50544 = C50408 * ce;
    const double C50620 = C50263 * C50408;
    const double C50851 = C50408 * C50277;
    const double C50416 = C50407 * ae;
    const double C50414 = C50071 * C50407;
    const double C50413 = C50407 * ce;
    const double C50555 = 3 * C50407;
    const double C9461 =
        2 * C50263 * C50301 + C50263 * (C50301 + C50407 * C50277);
    const double C13993 =
        3 * (C50301 + C50407 * C50277) +
        C50263 * (2 * C50263 * C50407 + C50263 * (C50407 + C50571 * C50277));
    const double C50951 = C50292 + C50950;
    const double C19528 = C2450 * C13994;
    const double C21756 = C117 * C13994;
    const double C50412 = C50071 * C50405;
    const double C50549 = -2 * C50405;
    const double C50543 = ae * C50405;
    const double C50618 = C50263 * C50405;
    const double C50848 = C50405 * C50277;
    const double C50957 = C50263 * C50956;
    const double C135 = (3 * (C50164 + C50138 * C50089) +
                         C50076 * (2 * C50168 + C50076 * C50175)) /
                        C49999;
    const double C312 = (C50071 * (2 * C50168 + C50076 * C50175) +
                         (2 * C50167 + C50076 * C50174) * ae) /
                        C49999;
    const double C482 = (C50263 * (2 * C50168 + C50076 * C50175)) / C49999;
    const double C647 =
        (C50164 + C50138 * C50089 + C50071 * (C50071 * C50175 + C50174 * ae) +
         C50071 * C50174 * ae) /
        C49999;
    const double C899 = (C50263 * (C50071 * C50175 + C50174 * ae)) / C49999;
    const double C1025 = (C50164 + C50138 * C50089 + C50175 * C50277) / C49999;
    const double C1251 =
        (2 * C50263 * C50175 + C50263 * (C50175 + C50152 * C50277)) / C49999;
    const double C50244 = C50241 + C50242;
    const double C50324 = C50315 / C49932;
    const double C6264 = C51127 * C1253;
    const double C19226 = C51273 * C1253;
    const double C16435 = C51127 * C6566;
    const double C50306 = C50071 * C50302;
    const double C50396 = 2 * C50302;
    const double C50386 = C50302 * ce;
    const double C3763 =
        (2 * C50263 * C50235 + C50263 * (C50235 + C50302 * C50277)) / C49999;
    const double C13998 =
        (3 * (C50235 + C50302 * C50277) +
         C50263 * (2 * C50263 * C50302 + C50263 * (C50302 + C50408 * C50277))) /
        C49999;
    const double C50411 = -C50401;
    const double C50504 = C50501 / C49932;
    const double C16720 =
        (4 * (2 * C50263 * C50138 + C50263 * C50846) +
         C50263 * (3 * C50846 + C50263 * (2 * C50498 + C50263 * C50648))) /
        C49999;
    const double C16729 = C16725 + C16726;
    const double C134 =
        (-3 * (C50137 * C50089 + C50163)) / C49932 +
        C50076 * ((-2 * C50166) / C49932 - (C50076 * C50173) / C49932);
    const double C313 =
        C50071 * ((-2 * C50166) / C49932 - (C50076 * C50173) / C49932) -
        ((2 * C50167 + C50076 * C50174) * ce) / C49932;
    const double C483 =
        C50263 * ((-2 * C50166) / C49932 - (C50076 * C50173) / C49932);
    const double C648 = -(C50071 * (C50071 * C50173 + C50174 * ce) +
                          C50137 * C50089 + C50163 + C50071 * C50174 * ce) /
                        C49932;
    const double C900 = -(C50263 * (C50071 * C50173 + C50174 * ce)) / C49932;
    const double C1026 = -(C50173 * C50277 + C50137 * C50089 + C50163) / C49932;
    const double C1250 = (-2 * C50263 * C50173) / C49932 -
                         (C50263 * (C50151 * C50277 + C50173)) / C49932;
    const double C50188 = C50183 / C49932;
    const double C50243 = C50238 + C50239;
    const double C50325 = C50316 / C50080;
    const double C6265 = C117 * C1252;
    const double C19229 = C2449 * C1252;
    const double C16436 = C117 * C6565;
    const double C50305 = C50071 * C50299;
    const double C50390 = -2 * C50299;
    const double C50385 = ae * C50299;
    const double C3762 = (-2 * C50263 * C50234) / C49932 -
                         (C50263 * (C50299 * C50277 + C50234)) / C49932;
    const double C13996 =
        (-3 * (C50299 * C50277 + C50234)) / C49932 +
        C50263 * ((-2 * C50263 * C50299) / C49932 -
                  (C50263 * (C50405 * C50277 + C50299)) / C49932);
    const double C50505 = C50502 / C50080;
    const double C50856 = C50854 / C49932;
    const double C16719 =
        4 * ((-2 * C50263 * C50137) / C49932 - (C50263 * C50843) / C49932) +
        C50263 *
            ((-3 * C50843) / C49932 +
             C50263 * ((-2 * C50499) / C49932 - (C50263 * C50649) / C49932));
    const double C50120 = C50119 * C50089;
    const double C50444 = C50076 * C50119;
    const double C50547 = C50071 * C50119;
    const double C50623 = C50263 * C50119;
    const double C50647 = C50119 * C50277;
    const double C50219 = C50076 * C50216;
    const double C50350 = C50071 * C50216;
    const double C6564 =
        (3 * (C50175 + C50152 * C50277) +
         C50263 * (2 * C50263 * C50152 + C50263 * (C50152 + C50216 * C50277))) /
        C49999;
    const double C50469 = C50461 + C50462;
    const double C50580 = C50071 * C50572;
    const double C50217 = C50076 * C50214;
    const double C50346 = C50071 * C50214;
    const double C6563 =
        (-3 * (C50151 * C50277 + C50173)) / C49932 +
        C50263 * ((-2 * C50263 * C50151) / C49932 -
                  (C50263 * (C50214 * C50277 + C50151)) / C49932);
    const double C50466 = C50457 + C50458;
    const double C50577 = C50071 * C50569;
    const double C162 = C117 * C123;
    const double C2476 = C2449 * C123;
    const double C339 = C117 * C303;
    const double C2472 = C2450 * C303;
    const double C2676 = C2449 * C303;
    const double C505 = C117 * C474;
    const double C2866 = C2449 * C474;
    const double C671 = C117 * C640;
    const double C2668 = C2450 * C640;
    const double C3046 = C2449 * C640;
    const double C1654 = C117 * C887;
    const double C2860 = C2450 * C887;
    const double C4270 = C2449 * C887;
    const double C1041 = C117 * C1018;
    const double C3484 = C2449 * C1018;
    const double C3478 = C2450 * C1159;
    const double C6439 = C117 * C1159;
    const double C20027 = C2449 * C1159;
    const double C19037 = C2450 * C3317;
    const double C16277 = C117 * C3645;
    const double C19051 = C2449 * C3645;
    const double C19043 = C2450 * C3645;
    const double C21839 = C117 * C16716;
    const double C50307 = C50304 / C49999;
    const double C50215 = C50206 + C50212;
    const double C50356 = C50186 + C50349;
    const double C50358 = C50348 * ae;
    const double C50355 = C50348 * ce;
    const double C50477 = C50468 * ae;
    const double C50475 = C50071 * C50468;
    const double C50474 = C50468 * ce;
    const double C50587 = C50554 + C50579;
    const double C50586 = C50578 / C49932;
    const double C50190 = C50187 + C50182;
    const double C50352 = C50343 / C49932;
    const double C50464 = -C50453;
    const double C50518 = C50515 / C49932;
    const double C16718 =
        (4 * (2 * C50263 * C50181 + C50263 * C50840) +
         C50263 *
             (3 * C50840 +
              C50263 * (2 * C50512 + C50263 * (C50201 + C50450 * C50277)))) /
        C49999;
    const double C50584 = C50576 / C49999;
    const double C50635 = -C50631;
    const double C50654 = C50651 / C49932;
    const double C50862 = C50860 + C50861;
    const double C50184 = C50178 / C49932;
    const double C50203 = C50194 / C49932;
    const double C50353 = C50344 / C50080;
    const double C50519 = C50516 / C50080;
    const double C16717 =
        4 * ((-2 * C50263 * C50177) / C49932 - (C50263 * C50837) / C49932) +
        C50263 * ((-3 * C50837) / C49932 +
                  C50263 * ((-2 * C50513) / C49932 -
                            (C50263 * (C50446 * C50277 + C50195)) / C49932));
    const double C50655 = C50652 / C50080;
    const double C50857 = C50855 / C49932;
    const double C51287 = C51249 / C50024;
    const double C51251 = C50982 / C49999;
    const double C25801 = -C51286;
    const double C51290 = C51256 / C49957;
    const double C51258 = C51002 / C49932;
    const double C1490 = -C51289;
    const double C51296 = C51270 / C49957;
    const double C51272 = C51073 / C49932;
    const double C1775 = -C51295;
    const double C51302 = C51283 / C50024;
    const double C51285 = C51172 / C49999;
    const double C32271 = -C51301;
    const double C49963 = C49959 / C49932;
    const double C768 =
        (C49970 / C49940 - (0 * de) / C49932) / C49940 - (0 * de) / C49932;
    const double C1494 = C49970 / C49940 - (0 * de) / C49932;
    const double C51306 = C51263 - C51293;
    const double C51294 = C51266 - C51267;
    const double C635 =
        ((-(0 * de) / C49932) / C49940 -
         ((0 - (C49931 * C49941) / C49932) * de) / C49932) /
            C49940 -
        ((C49931 * ((-C49941 / C49932) / C49940 -
                    ((C51028 - (C49931 * C49945) / C49932) * de) / C49932) +
          C1358) *
         de) /
            C49932 +
        (-C49945 / C49932) / C49940 - (0 * de) / C49932;
    const double C50030 = C50026 / C49999;
    const double C8229 = C8200 * C303;
    const double C8223 = C8200 * C302;
    const double C8217 = C8200 * C311;
    const double C8211 = C8200 * C309;
    const double C8205 = C8200 * C301;
    const double C8417 = C8200 * C640;
    const double C8411 = C8200 * C646;
    const double C8405 = C8200 * C639;
    const double C8599 = C8200 * C887;
    const double C8593 = C8200 * C896;
    const double C8587 = C8200 * C885;
    const double C8769 = C8200 * C770;
    const double C9193 = C8200 * C1159;
    const double C9957 = C8200 * C886;
    const double C13132 = C8200 * C892;
    const double C13126 = C8200 * C883;
    const double C13546 = C8200 * C3317;
    const double C13534 = C8200 * C884;
    const double C13722 = C8200 * C1158;
    const double C13880 = C8200 * C3645;
    const double C14004 = C8200 * C3757;
    const double C8221 = C8201 * C640;
    const double C8213 = C8201 * C646;
    const double C8207 = C8201 * C639;
    const double C8403 = C8201 * C770;
    const double C8589 = C8201 * C886;
    const double C13128 = C8201 * C884;
    const double C13532 = C8201 * C3317;
    const double C13720 = C8201 * C3645;
    const double C22963 = C22941 * C303;
    const double C22957 = C22941 * C311;
    const double C22953 = C22941 * C302;
    const double C22949 = C22941 * C309;
    const double C22945 = C22941 * C301;
    const double C23159 = C22941 * C640;
    const double C23153 = C22941 * C646;
    const double C23149 = C22941 * C639;
    const double C23351 = C22941 * C887;
    const double C23347 = C22941 * C896;
    const double C23343 = C22941 * C885;
    const double C23531 = C22941 * C770;
    const double C23945 = C22941 * C1159;
    const double C24707 = C22941 * C886;
    const double C29041 = C22941 * C892;
    const double C29037 = C22941 * C883;
    const double C29602 = C22941 * C3317;
    const double C29592 = C22941 * C884;
    const double C29818 = C22941 * C1158;
    const double C30040 = C22941 * C3645;
    const double C30194 = C22941 * C3757;
    const double C48446 = C22941 * C13994;
    const double C11018 =
        (C50037 / C50007 - (0 * be) / C49999) / C50007 - (0 * be) / C49999;
    const double C25805 = C50037 / C50007 - (0 * be) / C49999;
    const double C179 = C169 * C51028;
    const double C326 = C169 * C51260;
    const double C660 = C169 * C630;
    const double C1367 = C169 * C1358;
    const double C178 = C168 * C118;
    const double C325 = C168 * C298;
    const double C5676 = C5673 * C51028;
    const double C6093 = C5673 * C630;
    const double C6430 = C5673 * C51260;
    const double C7086 = C5673 * C1358;
    const double C5675 = C5672 * C118;
    const double C6429 = C5672 * C298;
    const double C51308 = C51276 - C51299;
    const double C2495 = C2474 + C2475;
    const double C2490 = C2464 + C2465;
    const double C2488 = C2460 + C2461;
    const double C2486 = C2456 + C2457;
    const double C2484 = C2452 + C2453;
    const double C2690 = C2670 + C2671;
    const double C2685 = C2660 + C2661;
    const double C2878 = C2858 + C2859;
    const double C2874 = C2850 + C2851;
    const double C18633 = C18621 + C18622;
    const double C18631 = C18617 + C18618;
    const double C18629 = C18613 + C18614;
    const double C19060 = C19029 + C19030;
    const double C19252 = C19239 + C19240;
    const double C19536 = C19526 + C19527;
    const double C51300 = C51279 - C51280;
    const double C22966 = C22935 * C132;
    const double C22956 = C22935 * C142;
    const double C22952 = C22935 * C130;
    const double C22948 = C22935 * C141;
    const double C22944 = C22935 * C128;
    const double C23162 = C22935 * C310;
    const double C23152 = C22935 * C308;
    const double C23350 = C22935 * C480;
    const double C23342 = C22935 * C478;
    const double C23530 = C22935 * C645;
    const double C23944 = C22935 * C1023;
    const double C24706 = C22935 * C895;
    const double C29040 = C22935 * C494;
    const double C29036 = C22935 * C487;
    const double C29595 = C22935 * C891;
    const double C29823 = C22935 * C1253;
    const double C29821 = C22935 * C1021;
    const double C30193 = C22935 * C1255;
    const double C48445 = C22935 * C6568;
    const double C8199 =
        ((-(0 * be) / C49999) / C50007 -
         ((0 - (C49998 * C50008) / C49999) * be) / C49999) /
            C50007 -
        ((C49998 * ((-C50008 / C49999) / C50007 -
                    ((C51127 - (C49998 * C50012) / C49999) * be) / C49999) +
          C22935) *
         be) /
            C49999 +
        (-C50012 / C49999) / C50007 - (0 * be) / C49999;
    const double C159 = C51127 * C143;
    const double C2471 = C51273 * C143;
    const double C8234 = C8194 * C143;
    const double C22962 = C22935 * C143;
    const double C330 = C51127 * C319;
    const double C2459 = C51143 * C319;
    const double C2665 = C51273 * C319;
    const double C8212 = C8195 * C319;
    const double C8414 = C8194 * C319;
    const double C22950 = C51143 * C319;
    const double C23156 = C22935 * C319;
    const double C500 = C51127 * C490;
    const double C2855 = C51273 * C490;
    const double C8592 = C8194 * C490;
    const double C23346 = C22935 * C490;
    const double C6097 = C51127 * C907;
    const double C13133 = C8195 * C907;
    const double C13543 = C8194 * C907;
    const double C18620 = C51143 * C907;
    const double C19034 = C51273 * C907;
    const double C29042 = C51143 * C907;
    const double C29599 = C22935 * C907;
    const double C6260 = C51127 * C1031;
    const double C13719 = C8194 * C1031;
    const double C18626 = C51273 * C1031;
    const double C29817 = C22935 * C1031;
    const double C683 = C663 + C664;
    const double C2684 = C2658 + C2659;
    const double C3054 = C3038 + C3039;
    const double C1666 = C1648 + C1649;
    const double C2875 = C2852 + C2853;
    const double C4278 = C4262 + C4263;
    const double C1049 = C1037 + C1038;
    const double C3492 = C3476 + C3477;
    const double C6099 = C51127 * C893;
    const double C13129 = C8196 * C893;
    const double C13545 = C8194 * C893;
    const double C13535 = C8195 * C893;
    const double C19036 = C51273 * C893;
    const double C19028 = C51143 * C893;
    const double C29601 = C22935 * C893;
    const double C29593 = C51143 * C893;
    const double C44893 = C25800 * C893;
    const double C6434 = C51127 * C1162;
    const double C13723 = C8195 * C1162;
    const double C13879 = C8194 * C1162;
    const double C18624 = C51143 * C1162;
    const double C19046 = C51273 * C1162;
    const double C29819 = C51143 * C1162;
    const double C30039 = C22935 * C1162;
    const double C6100 = C117 * C894;
    const double C13134 = C8201 * C894;
    const double C13540 = C8200 * C894;
    const double C19039 = C2449 * C894;
    const double C19031 = C2450 * C894;
    const double C29596 = C22941 * C894;
    const double C6437 = C117 * C1163;
    const double C13716 = C8200 * C1163;
    const double C18627 = C2450 * C1163;
    const double C19049 = C2449 * C1163;
    const double C29814 = C22941 * C1163;
    const double C180 = C170 * C118;
    const double C331 = C170 * C298;
    const double C182 = C172 * C118;
    const double C337 = C172 * C298;
    const double C359 = C349 * C299;
    const double C661 = C349 * C636;
    const double C1368 = C349 * C1364;
    const double C361 = C352 * C299;
    const double C669 = C352 * C636;
    const double C1372 = C352 * C1364;
    const double C521 = C513 * C118;
    const double C1910 = C513 * C298;
    const double C523 = C515 * C118;
    const double C1914 = C515 * C298;
    const double C6106 = C6102 * C636;
    const double C6431 = C6102 * C299;
    const double C7087 = C6102 * C1364;
    const double C6278 = C6272 * C118;
    const double C6436 = C6272 * C298;
    const double C6579 = C6577 * C118;
    const double C16597 = C6577 * C298;
    const double C181 = C171 * C51028;
    const double C332 = C171 * C51260;
    const double C668 = C171 * C630;
    const double C1371 = C171 * C1358;
    const double C3654 =
        (-(C50093 * C50277) / C49932) / C49999 - C50084 / C50080 -
        (ae * (C50299 * C50277 + C50234)) / C50080 -
        ((C50235 + C50302 * C50277) * ce) / C50080 +
        C50071 * ((-((C50138 + C50143 * C50277) * ce) / C49932) / C49999 -
                  (ae * (C50142 * C50277 + C50137)) / C50080 +
                  C50071 * ((-(C50102 * C50277) / C49932) / C49999 - C50098));
    const double C909 = (-(C50263 * C50168 * ce) / C49932) / C49999 -
                        (ae * C50263 * C50166) / C50080 -
                        (C50071 * C50263 * C50237) / C50080;
    const double C1032 = (-(C50237 * std::pow(C50263, 2)) / C49932) / C49999 -
                         (C50076 * C50084) / C50080;
    const double C50298 = C50289 / C50080;
    const double C3766 =
        (((-2 * C50263 * C50137) / C49932 -
          (C50263 * (C50142 * C50277 + C50137)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50263 * C50138 + C50263 * (C50138 + C50143 * C50277)) * ce) /
            C50080 +
        C50071 * ((-2 * C50370) / C50080 +
                  C50263 * ((-(C50102 * C50277) / C49932) / C49999 - C50098));
    const double C6571 =
        3 * ((-(C50093 * C50277) / C49932) / C49999 - C50084 / C50080) +
        C50263 * ((-2 * C50370) / C50080 +
                  C50263 * ((-(C50102 * C50277) / C49932) / C49999 - C50098));
    const double C161 = C51127 * C144;
    const double C2481 = C51273 * C144;
    const double C22972 = C22935 * C144;
    const double C336 = C51127 * C320;
    const double C2467 = C51143 * C320;
    const double C2675 = C51273 * C320;
    const double C8218 = C8195 * C320;
    const double C8422 = C8194 * C320;
    const double C22958 = C51143 * C320;
    const double C23166 = C22935 * C320;
    const double C504 = C51127 * C491;
    const double C2863 = C51273 * C491;
    const double C8604 = C8194 * C491;
    const double C23354 = C22935 * C491;
    const double C666 = C51127 * C654;
    const double C2663 = C51143 * C654;
    const double C3043 = C51273 * C654;
    const double C8214 = C8196 * C654;
    const double C8412 = C8195 * C654;
    const double C8774 = C8194 * C654;
    const double C23154 = C51143 * C654;
    const double C23534 = C22935 * C654;
    const double C25818 = C25800 * C654;
    const double C6101 = C51127 * C908;
    const double C13135 = C8196 * C908;
    const double C13551 = C8194 * C908;
    const double C13541 = C8195 * C908;
    const double C19040 = C51273 * C908;
    const double C19032 = C51143 * C908;
    const double C29605 = C22935 * C908;
    const double C29597 = C51143 * C908;
    const double C44899 = C25800 * C908;
    const double C6438 = C51127 * C1170;
    const double C13717 = C8195 * C1170;
    const double C13885 = C8194 * C1170;
    const double C18628 = C51143 * C1170;
    const double C19050 = C51273 * C1170;
    const double C29815 = C51143 * C1170;
    const double C30043 = C22935 * C1170;
    const double C6576 = C51127 * C1259;
    const double C14009 = C8194 * C1259;
    const double C19236 = C51273 * C1259;
    const double C30197 = C22935 * C1259;
    const double C50104 = C50103 / C49932;
    const double C50114 = -2 * C50109;
    const double C50317 = C50071 * C50109;
    const double C50372 = C50263 * C50109;
    const double C50440 = C50109 / C50080;
    const double C1171 =
        (-((C50168 + C50181 * C50277) * ce) / C49932) / C49999 -
        (ae * (C50177 * C50277 + C50166)) / C50080 +
        C50071 * ((-(C50109 * C50277) / C49932) / C49999 - C50237 / C50080);
    const double C1258 =
        (-2 * C50263 * C50237) / C50080 +
        C50263 * ((-(C50109 * C50277) / C49932) / C49999 - C50237 / C50080);
    const double C50403 = C50389 / C50080;
    const double C50503 = C50071 * C50500;
    const double C50619 = C50500 / C50080;
    const double C50664 = -2 * C50500;
    const double C50527 = C50526 / C49932;
    const double C50192 = C50185 + C50189;
    const double C50252 = C50249 + C50250;
    const double C1160 = C50071 * C50174 + C50248 * C50277;
    const double C3755 =
        2 * C50263 * C50248 + C50263 * (C50248 + C50348 * C50277);
    const double C50251 = C50246 + C50247;
    const double C3048 = C2450 * C771;
    const double C8419 = C8201 * C771;
    const double C23539 = C22941 * C771;
    const double C4272 = C2450 * C888;
    const double C5836 = C117 * C888;
    const double C8601 = C8201 * C888;
    const double C24715 = C22941 * C888;
    const double C6267 = C117 * C1245;
    const double C50334 = C50071 * C50330;
    const double C50449 = 2 * C50330;
    const double C50441 = C50330 * ce;
    const double C3160 = 3 * (C50167 + C50179 * C50074) +
                         C50071 * (2 * C50240 + C50071 * C50329);
    const double C3318 = C50263 * (2 * C50240 + C50071 * C50329);
    const double C3646 = C50167 + C50179 * C50074 + C50329 * C50277;
    const double C9460 =
        2 * C50263 * C50329 + C50263 * (C50329 + C50468 * C50277);
    const double C16600 = C117 * C3756;
    const double C19227 = C2450 * C3756;
    const double C29824 = C22941 * C3756;
    const double C50333 = C50071 * C50327;
    const double C50445 = -2 * C50327;
    const double C50439 = ae * C50327;
    const double C16715 =
        4 * (2 * C50263 * C50179 + C50263 * C50945) +
        C50263 * (3 * C50945 + C50263 * (2 * C50263 * C50198 +
                                         C50263 * (C50198 + C50447 * C50277)));
    const double C50422 = C50143 + C50415;
    const double C50563 = C50544 / C50080;
    const double C50625 = C50620 * ce;
    const double C50852 = C50302 + C50851;
    const double C50421 = C50395 + C50414;
    const double C50420 = C50413 / C49932;
    const double C14006 = C8201 * C9461;
    const double C19407 = C2450 * C9461;
    const double C21550 = C117 * C9461;
    const double C48329 = C22941 * C9461;
    const double C19519 =
        4 * (2 * C50263 * C50292 + C50263 * C50951) +
        C50263 * (3 * C50951 + C50263 * (2 * C50263 * C50393 +
                                         C50263 * (C50393 + C50552 * C50277)));
    const double C50419 = C50412 + C50142;
    const double C50568 = C50549 / C49932;
    const double C50562 = C50543 / C49932;
    const double C50624 = ae * C50618;
    const double C50849 = C50848 + C50299;
    const double C50958 = C50955 + C50957;
    const double C163 = C51127 * C135;
    const double C2477 = C51273 * C135;
    const double C22968 = C22935 * C135;
    const double C340 = C51127 * C312;
    const double C2473 = C51143 * C312;
    const double C2677 = C51273 * C312;
    const double C8230 = C8195 * C312;
    const double C22964 = C51143 * C312;
    const double C23168 = C22935 * C312;
    const double C506 = C51127 * C482;
    const double C2867 = C51273 * C482;
    const double C23358 = C22935 * C482;
    const double C672 = C51127 * C647;
    const double C2669 = C51143 * C647;
    const double C3047 = C51273 * C647;
    const double C8222 = C8196 * C647;
    const double C8418 = C8195 * C647;
    const double C23160 = C51143 * C647;
    const double C23538 = C22935 * C647;
    const double C25826 = C25800 * C647;
    const double C1655 = C51127 * C899;
    const double C2861 = C51143 * C899;
    const double C4271 = C51273 * C899;
    const double C8600 = C8195 * C899;
    const double C23352 = C51143 * C899;
    const double C24714 = C22935 * C899;
    const double C1042 = C51127 * C1025;
    const double C3485 = C51273 * C1025;
    const double C23952 = C22935 * C1025;
    const double C6268 = C51127 * C1251;
    const double C775 = (2 * (C50071 * C50168 + C50167 * ae) +
                         C50071 * (C50168 + C50071 * C50244 + C50240 * ae) +
                         (C50167 + C50179 * C50074) * ae) /
                        C49999;
    const double C897 =
        (C50263 * (C50168 + C50071 * C50244 + C50240 * ae)) / C49999;
    const double C1164 =
        (C50071 * C50168 + C50167 * ae + C50244 * C50277) / C49999;
    const double C3761 =
        (2 * C50263 * C50244 + C50263 * (C50244 + C50330 * C50277)) / C49999;
    const double C50332 = -C50324;
    const double C6273 = C6263 + C6264;
    const double C19245 = C19225 + C19226;
    const double C16438 = C16434 + C16435;
    const double C50309 = C50138 + C50306;
    const double C50400 = C50386 / C50080;
    const double C14005 = C8195 * C3763;
    const double C16595 = C51127 * C3763;
    const double C19238 = C51143 * C3763;
    const double C19406 = C51273 * C3763;
    const double C30195 = C51143 * C3763;
    const double C48328 = C22935 * C3763;
    const double C19529 = C51143 * C13998;
    const double C21757 = C51127 * C13998;
    const double C48447 = C51143 * C13998;
    const double C50418 = C50411 / C49999;
    const double C50507 = -C50504;
    const double C21840 = C51127 * C16720;
    const double C16731 = C16729 * C118;
    const double C21759 = C16729 * C298;
    const double C160 = C117 * C134;
    const double C2480 = C2449 * C134;
    const double C341 = C117 * C313;
    const double C2468 = C2450 * C313;
    const double C2680 = C2449 * C313;
    const double C8235 = C8200 * C313;
    const double C22959 = C22941 * C313;
    const double C507 = C117 * C483;
    const double C2870 = C2449 * C483;
    const double C673 = C117 * C648;
    const double C2672 = C2450 * C648;
    const double C3050 = C2449 * C648;
    const double C8215 = C8201 * C648;
    const double C8423 = C8200 * C648;
    const double C23163 = C22941 * C648;
    const double C1658 = C117 * C900;
    const double C2864 = C2450 * C900;
    const double C4274 = C2449 * C900;
    const double C8605 = C8200 * C900;
    const double C23355 = C22941 * C900;
    const double C1043 = C117 * C1026;
    const double C3488 = C2449 * C1026;
    const double C6269 = C117 * C1250;
    const double C782 =
        2 * ((-(C50168 * ce) / C49932) / C49999 - (ae * C50166) / C50080 -
             (C50071 * C50237) / C50080) -
        (ae * (C50071 * C50243 + C50166 + C50240 * ce)) / C50080 -
        ((C50168 + C50071 * C50244 + C50240 * ae) * ce) / C50080 +
        C50071 *
            ((-(ae * C50243) / C49932) / C49999 - C50237 / C50080 -
             (C50244 * ce) / C50080 +
             C50071 * ((-(C50181 * ce) / C49932) / C49999 -
                       (ae * C50177) / C50080 - (C50071 * C50109) / C50080));
    const double C910 = (-(ae * C50263 * C50243) / C49932) / C49999 -
                        (C50263 * C50237) / C50080 -
                        (C50263 * C50244 * ce) / C50080 +
                        C50071 * ((-(C50263 * C50181 * ce) / C49932) / C49999 -
                                  (ae * C50263 * C50177) / C50080 -
                                  (C50071 * C50263 * C50109) / C50080);
    const double C3655 =
        (-(C50109 * C50277) / C49932) / C49999 - C50237 / C50080 -
        (ae * (C50327 * C50277 + C50243)) / C50080 -
        ((C50244 + C50330 * C50277) * ce) / C50080 +
        C50071 * ((-((C50181 + C50201 * C50277) * ce) / C49932) / C49999 -
                  (ae * (C50195 * C50277 + C50177)) / C50080 +
                  C50071 * ((-(C50076 * C50119 * C50277) / C49932) / C49999 -
                            C50109 / C50080));
    const double C776 =
        (-2 * (C50071 * C50166 + C50167 * ce)) / C49932 -
        (C50071 * (C50071 * C50243 + C50166 + C50240 * ce)) / C49932 -
        ((C50167 + C50179 * C50074) * ce) / C49932;
    const double C898 =
        -(C50263 * (C50071 * C50243 + C50166 + C50240 * ce)) / C49932;
    const double C1165 =
        -(C50243 * C50277 + C50071 * C50166 + C50167 * ce) / C49932;
    const double C3760 = (-2 * C50263 * C50243) / C49932 -
                         (C50263 * (C50327 * C50277 + C50243)) / C49932;
    const double C50308 = C50305 + C50137;
    const double C50404 = C50390 / C49932;
    const double C50399 = C50385 / C49932;
    const double C14010 = C8200 * C3762;
    const double C16598 = C117 * C3762;
    const double C19233 = C2450 * C3762;
    const double C19409 = C2449 * C3762;
    const double C30198 = C22941 * C3762;
    const double C19532 = C2450 * C13996;
    const double C21760 = C117 * C13996;
    const double C48450 = C22941 * C13996;
    const double C21841 = C117 * C16719;
    const double C50121 = C50120 / C49932;
    const double C50455 = C50071 * C50444;
    const double C50514 = C50263 * C50444;
    const double C50532 = C50444 * C50277;
    const double C50566 = C50547 / C50080;
    const double C50628 = C50071 * C50623;
    const double C50650 = C50647 / C49932;
    const double C50222 = C50208 + C50219;
    const double C50357 = C50350 + C50351;
    const double C50476 = C50071 * C50469;
    const double C16588 =
        (3 * (C50244 + C50330 * C50277) +
         C50263 * (2 * C50263 * C50330 + C50263 * (C50330 + C50469 * C50277))) /
        C49999;
    const double C50588 = C50148 + C50580;
    const double C50220 = C50217 / C49932;
    const double C50354 = C50346 + C50347;
    const double C50473 = C50071 * C50466;
    const double C16589 =
        (-3 * (C50327 * C50277 + C50243)) / C49932 +
        C50263 * ((-2 * C50263 * C50327) / C49932 -
                  (C50263 * (C50466 * C50277 + C50327)) / C49932);
    const double C50585 = C50577 + C50147;
    const double C50310 = C50307 - C50297;
    const double C50218 = C50076 * C50215;
    const double C50258 = C50215 * ae;
    const double C50256 = C50071 * C50215;
    const double C50255 = C50215 * ce;
    const double C3161 = 3 * (C50174 + C50186 * C50074) +
                         C50071 * (2 * C50248 + C50071 * C50356);
    const double C3319 = C50263 * (2 * C50248 + C50071 * C50356);
    const double C3647 = C50174 + C50186 * C50074 + C50356 * C50277;
    const double C50482 = C50448 + C50475;
    const double C50481 = C50474 / C49932;
    const double C50595 = C50587 * ae;
    const double C50593 = C50071 * C50587;
    const double C50592 = C50587 * ce;
    const double C136 = (4 * (2 * C50168 + C50076 * C50175) +
                         C50076 * (3 * C50175 + C50076 * C50190)) /
                        C49999;
    const double C484 = (C50263 * (3 * C50175 + C50076 * C50190)) / C49999;
    const double C1027 =
        (2 * C50168 + C50076 * C50175 + C50190 * C50277) / C49999;
    const double C50359 = -C50352;
    const double C50472 = C50464 / C49999;
    const double C50521 = -C50518;
    const double C50590 = C50584 - C50565;
    const double C50637 = C50635 / C49999;
    const double C50657 = -C50654;
    const double C21835 =
        (5 * (3 * C50846 + C50263 * C50862) +
         C50263 * (4 * C50862 +
                   C50263 * (3 * C50648 +
                             C50263 * (2 * C50621 +
                                       C50263 * (C50148 + C50209 * C50277))))) /
        C49999;
    const double C50191 = C50188 - C50184;
    const double C50858 = C50856 - C50857;
    const double C51304 = C51248 - C51287;
    const double C51288 = C51250 - C51251;
    const double C51305 = C51255 - C51290;
    const double C51291 = C51257 - C51258;
    const double C51307 = C51268 - C51296;
    const double C51297 = C51271 - C51272;
    const double C51309 = C51281 - C51302;
    const double C51303 = C51284 - C51285;
    const double C49968 = C51028 - C49963;
    const double C1503 = C171 * C51306;
    const double C1497 = C169 * C51306;
    const double C7942 = C5673 * C51306;
    const double C760 = (C51260 - C51292) / C49940 - (C51306 * C51040) / C49932;
    const double C761 =
        (2 * C51044 + C51306) / C49940 - (C51294 * C51040) / C49932;
    const double C762 = C51294 / C49940 - C51047 / C49961;
    const double C675 = C172 * C635;
    const double C667 = C170 * C635;
    const double C659 = C168 * C635;
    const double C5832 = C515 * C635;
    const double C5824 = C513 * C635;
    const double C6092 = C5672 * C635;
    const double C16273 = C6272 * C635;
    const double C21546 = C6577 * C635;
    const double C50035 = C51127 - C50030;
    const double C8249 = C8223 + C8224;
    const double C8240 = C8205 + C8206;
    const double C8428 = C8405 + C8406;
    const double C8610 = C8587 + C8588;
    const double C13137 = C13126 + C13127;
    const double C8241 = C8207 + C8208;
    const double C22980 = C22953 + C22954;
    const double C22976 = C22945 + C22946;
    const double C23175 = C23149 + C23150;
    const double C23366 = C23343 + C23344;
    const double C29050 = C29037 + C29038;
    const double C25825 = C25805 * C640;
    const double C25819 = C25805 * C648;
    const double C25817 = C25805 * C646;
    const double C25811 = C25805 * C639;
    const double C26023 = C25805 * C771;
    const double C26007 = C25805 * C770;
    const double C26205 = C25805 * C888;
    const double C26193 = C25805 * C886;
    const double C44898 = C25805 * C894;
    const double C44892 = C25805 * C884;
    const double C45296 = C25805 * C3317;
    const double C45484 = C25805 * C3645;
    const double C45762 = C25805 * C9461;
    const double C25838 = C51308 * C143;
    const double C25832 = C51308 * C132;
    const double C25830 = C51308 * C130;
    const double C25824 = C51308 * C142;
    const double C25814 = C51308 * C141;
    const double C25808 = C51308 * C128;
    const double C26026 = C51308 * C320;
    const double C26020 = C51308 * C310;
    const double C26018 = C51308 * C319;
    const double C26012 = C51308 * C308;
    const double C26208 = C51308 * C491;
    const double C26202 = C51308 * C480;
    const double C26196 = C51308 * C490;
    const double C26190 = C51308 * C478;
    const double C26378 = C51308 * C654;
    const double C26372 = C51308 * C645;
    const double C26780 = C51308 * C1023;
    const double C27528 = C51308 * C895;
    const double C44895 = C51308 * C494;
    const double C44889 = C51308 * C487;
    const double C45315 = C51308 * C908;
    const double C45309 = C51308 * C893;
    const double C45307 = C51308 * C907;
    const double C45301 = C51308 * C891;
    const double C45489 = C51308 * C1021;
    const double C45483 = C51308 * C1031;
    const double C45649 = C51308 * C1170;
    const double C45643 = C51308 * C1162;
    const double C45765 = C51308 * C1259;
    const double C45759 = C51308 * C1255;
    const double C11010 =
        (C51273 - C51298) / C50007 - (C51308 * C51139) / C49999;
    const double C2500 = C2488 + C2489;
    const double C25834 = C51300 * C312;
    const double C25828 = C51300 * C310;
    const double C25822 = C51300 * C320;
    const double C25816 = C51300 * C319;
    const double C25810 = C51300 * C308;
    const double C26022 = C51300 * C647;
    const double C26016 = C51300 * C654;
    const double C26010 = C51300 * C645;
    const double C26204 = C51300 * C899;
    const double C26192 = C51300 * C895;
    const double C44897 = C51300 * C907;
    const double C44891 = C51300 * C891;
    const double C45305 = C51300 * C908;
    const double C45299 = C51300 * C893;
    const double C45487 = C51300 * C1162;
    const double C45481 = C51300 * C1170;
    const double C45761 = C51300 * C3763;
    const double C11011 =
        (2 * C51143 + C51308) / C50007 - (C51300 * C51139) / C49999;
    const double C11012 = C51300 / C50007 - C51146 / C50028;
    const double C8233 = C8199 * C133;
    const double C8227 = C8199 * C122;
    const double C8225 = C8199 * C121;
    const double C8219 = C8199 * C131;
    const double C8209 = C8199 * C129;
    const double C8203 = C8199 * C120;
    const double C8421 = C8199 * C311;
    const double C8415 = C8199 * C302;
    const double C8413 = C8199 * C309;
    const double C8407 = C8199 * C301;
    const double C8603 = C8199 * C481;
    const double C8597 = C8199 * C473;
    const double C8591 = C8199 * C479;
    const double C8585 = C8199 * C472;
    const double C8773 = C8199 * C646;
    const double C8767 = C8199 * C639;
    const double C9197 = C8199 * C1024;
    const double C9191 = C8199 * C1017;
    const double C9961 = C8199 * C896;
    const double C9955 = C8199 * C885;
    const double C13130 = C8199 * C486;
    const double C13124 = C8199 * C476;
    const double C13550 = C8199 * C894;
    const double C13544 = C8199 * C884;
    const double C13542 = C8199 * C892;
    const double C13536 = C8199 * C883;
    const double C13724 = C8199 * C1016;
    const double C13718 = C8199 * C1022;
    const double C13884 = C8199 * C1163;
    const double C13878 = C8199 * C1158;
    const double C14008 = C8199 * C1254;
    const double C14002 = C8199 * C1247;
    const double C173 = C158 + C159;
    const double C2493 = C2470 + C2471;
    const double C350 = C329 + C330;
    const double C2487 = C2458 + C2459;
    const double C2687 = C2664 + C2665;
    const double C8243 = C8211 + C8212;
    const double C22978 = C22949 + C22950;
    const double C514 = C499 + C500;
    const double C2876 = C2854 + C2855;
    const double C6103 = C6096 + C6097;
    const double C13140 = C13132 + C13133;
    const double C18632 = C18619 + C18620;
    const double C19062 = C19033 + C19034;
    const double C29052 = C29041 + C29042;
    const double C6271 = C6259 + C6260;
    const double C18635 = C18625 + C18626;
    const double C689 = C683 * C637;
    const double C1500 = C683 * C1494;
    const double C1672 = C1666 * C1364;
    const double C1908 = C1666 * C299;
    const double C5826 = C1666 * C636;
    const double C35340 = C2875 + C2874;
    const double C35337 = C2874 + C2875;
    const double C1055 = C1049 * C118;
    const double C6442 = C1049 * C298;
    const double C16017 = C1049 * C635;
    const double C6104 = C6098 + C6099;
    const double C13138 = C13128 + C13129;
    const double C13557 = C13534 + C13535;
    const double C19063 = C19035 + C19036;
    const double C19059 = C19027 + C19028;
    const double C29608 = C29592 + C29593;
    const double C6451 = C6433 + C6434;
    const double C13730 = C13722 + C13723;
    const double C18634 = C18623 + C18624;
    const double C19068 = C19045 + C19046;
    const double C29836 = C29818 + C29819;
    const double C188 = C180 + C181;
    const double C351 = C331 + C332;
    const double C13715 = C8196 * C3654;
    const double C13887 = C8195 * C3654;
    const double C16280 = C51127 * C3654;
    const double C19056 = C51273 * C3654;
    const double C19048 = C51143 * C3654;
    const double C30045 = C51143 * C3654;
    const double C45479 = C25800 * C3654;
    const double C45651 = C51300 * C3654;
    const double C48019 = C22935 * C3654;
    const double C1653 = C51127 * C909;
    const double C2857 = C51143 * C909;
    const double C4267 = C51273 * C909;
    const double C8594 = C8195 * C909;
    const double C9962 = C8194 * C909;
    const double C23348 = C51143 * C909;
    const double C24710 = C22935 * C909;
    const double C26198 = C51300 * C909;
    const double C27534 = C51308 * C909;
    const double C1040 = C51127 * C1032;
    const double C3481 = C51273 * C1032;
    const double C9198 = C8194 * C1032;
    const double C23948 = C22935 * C1032;
    const double C26786 = C51308 * C1032;
    const double C14011 = C8195 * C3766;
    const double C16599 = C51127 * C3766;
    const double C19234 = C51143 * C3766;
    const double C19410 = C51273 * C3766;
    const double C30199 = C51143 * C3766;
    const double C45767 = C51300 * C3766;
    const double C48332 = C22935 * C3766;
    const double C16728 = C51127 * C6571;
    const double C19531 = C51273 * C6571;
    const double C48449 = C22935 * C6571;
    const double C353 = C335 + C336;
    const double C2491 = C2466 + C2467;
    const double C2692 = C2674 + C2675;
    const double C8246 = C8217 + C8218;
    const double C22982 = C22957 + C22958;
    const double C516 = C503 + C504;
    const double C2880 = C2862 + C2863;
    const double C684 = C665 + C666;
    const double C2686 = C2662 + C2663;
    const double C3056 = C3042 + C3043;
    const double C8244 = C8213 + C8214;
    const double C8431 = C8411 + C8412;
    const double C23177 = C23153 + C23154;
    const double C6105 = C6100 + C6101;
    const double C13141 = C13134 + C13135;
    const double C13560 = C13540 + C13541;
    const double C19065 = C19039 + C19040;
    const double C19061 = C19031 + C19032;
    const double C29610 = C29596 + C29597;
    const double C6452 = C6437 + C6438;
    const double C13727 = C13716 + C13717;
    const double C18636 = C18627 + C18628;
    const double C19070 = C19049 + C19050;
    const double C29834 = C29814 + C29815;
    const double C6578 = C6575 + C6576;
    const double C19250 = C19235 + C19236;
    const double C50105 = -C50104;
    const double C50116 = C50114 / C50080;
    const double C50326 = C50317 / C50080;
    const double C3765 =
        (((-2 * C50263 * C50177) / C49932 -
          (C50263 * (C50195 * C50277 + C50177)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50263 * C50181 + C50263 * (C50181 + C50201 * C50277)) * ce) /
            C50080 +
        C50071 * ((-2 * C50372) / C50080 +
                  C50263 * ((-(C50076 * C50119 * C50277) / C49932) / C49999 -
                            C50109 / C50080));
    const double C6570 =
        3 * ((-(C50109 * C50277) / C49932) / C49999 - C50237 / C50080) +
        C50263 * ((-2 * C50372) / C50080 +
                  C50263 * ((-(C50076 * C50119 * C50277) / C49932) / C49999 -
                            C50109 / C50080));
    const double C3483 = C51143 * C1171;
    const double C6444 = C51127 * C1171;
    const double C9200 = C8195 * C1171;
    const double C20032 = C51273 * C1171;
    const double C23950 = C51143 * C1171;
    const double C26788 = C51300 * C1171;
    const double C30051 = C22935 * C1171;
    const double C6266 = C51127 * C1258;
    const double C19230 = C51273 * C1258;
    const double C29827 = C22935 * C1258;
    const double C50506 = C50503 / C50080;
    const double C50666 = C50664 / C50080;
    const double C50528 = -C50527;
    const double C314 = (C50071 * (3 * C50175 + C50076 * C50190) +
                         (3 * C50174 + C50076 * C50192) * ae) /
                        C49999;
    const double C649 =
        (2 * C50168 + C50076 * C50175 +
         C50071 * (C50071 * C50190 + C50192 * ae) + C50071 * C50192 * ae) /
        C49999;
    const double C903 = (C50263 * (C50071 * C50190 + C50192 * ae)) / C49999;
    const double C124 = 4 * (2 * C50167 + C50076 * C50174) +
                        C50076 * (3 * C50174 + C50076 * C50192);
    const double C304 = C50071 * (3 * C50174 + C50076 * C50192);
    const double C475 = C50263 * (3 * C50174 + C50076 * C50192);
    const double C641 = 2 * C50167 + C50076 * C50174 + C50192 * C50074;
    const double C772 =
        2 * C50071 * C50192 + C50071 * (C50192 + C50215 * C50074);
    const double C889 = C50263 * C50071 * C50192;
    const double C890 = C50263 * (C50192 + C50215 * C50074);
    const double C1019 = 2 * C50167 + C50076 * C50174 + C50192 * C50277;
    const double C1244 =
        2 * C50263 * C50192 + C50263 * (C50192 + C50215 * C50277);
    const double C777 = (2 * (C50071 * C50175 + C50174 * ae) +
                         C50071 * (C50175 + C50071 * C50252 + C50248 * ae) +
                         (C50174 + C50186 * C50074) * ae) /
                        C49999;
    const double C901 =
        (C50263 * (C50175 + C50071 * C50252 + C50248 * ae)) / C49999;
    const double C1166 =
        (C50071 * C50175 + C50174 * ae + C50252 * C50277) / C49999;
    const double C3486 = C2450 * C1160;
    const double C6445 = C117 * C1160;
    const double C23953 = C22941 * C1160;
    const double C778 =
        (-2 * (C50071 * C50173 + C50174 * ce)) / C49932 -
        (C50071 * (C50071 * C50251 + C50173 + C50248 * ce)) / C49932 -
        ((C50174 + C50186 * C50074) * ce) / C49932;
    const double C902 =
        -(C50263 * (C50071 * C50251 + C50173 + C50248 * ce)) / C49932;
    const double C1167 =
        -(C50251 * C50277 + C50071 * C50173 + C50174 * ce) / C49932;
    const double C50337 = C50181 + C50334;
    const double C50452 = C50441 / C50080;
    const double C8771 = C8201 * C3160;
    const double C26375 = C25805 * C3160;
    const double C9959 = C8201 * C3318;
    const double C27531 = C25805 * C3318;
    const double C29258 = C22941 * C3318;
    const double C35548 = C2450 * C3318;
    const double C9195 = C8201 * C3646;
    const double C16021 = C117 * C3646;
    const double C20029 = C2450 * C3646;
    const double C26783 = C25805 * C3646;
    const double C30048 = C22941 * C3646;
    const double C50336 = C50333 + C50177;
    const double C50456 = C50445 / C49932;
    const double C50451 = C50439 / C49932;
    const double C50426 = C50422 + C50409;
    const double C50630 = C50625 / C50080;
    const double C19521 =
        (4 * (2 * C50263 * C50302 + C50263 * C50852) +
         C50263 *
             (3 * C50852 +
              C50263 * (2 * C50620 + C50263 * (C50408 + C50572 * C50277)))) /
        C49999;
    const double C8882 = 4 * (2 * C50231 + C50071 * C50301) +
                         C50071 * (3 * C50301 + C50071 * C50421);
    const double C9036 = C50263 * (3 * C50301 + C50071 * C50421);
    const double C9354 = 2 * C50231 + C50071 * C50301 + C50421 * C50277;
    const double C11751 =
        2 * C50263 * C50421 + C50263 * (C50421 + C50587 * C50277);
    const double C50425 = C50419 + C50406;
    const double C50575 = -C50562;
    const double C50629 = C50624 / C49932;
    const double C19520 =
        4 * ((-2 * C50263 * C50299) / C49932 - (C50263 * C50849) / C49932) +
        C50263 * ((-3 * C50849) / C49932 +
                  C50263 * ((-2 * C50618) / C49932 -
                            (C50263 * (C50569 * C50277 + C50405)) / C49932));
    const double C21833 =
        5 * (3 * C50948 + C50263 * C50958) +
        C50263 * (4 * C50958 +
                  C50263 * (3 * C50956 +
                            C50263 * (2 * C50263 * C50095 +
                                      C50263 * (C50095 + C50110 * C50277))));
    const double C175 = C162 + C163;
    const double C2496 = C2476 + C2477;
    const double C355 = C339 + C340;
    const double C2494 = C2472 + C2473;
    const double C2693 = C2676 + C2677;
    const double C8252 = C8229 + C8230;
    const double C22985 = C22963 + C22964;
    const double C517 = C505 + C506;
    const double C2882 = C2866 + C2867;
    const double C685 = C671 + C672;
    const double C2689 = C2668 + C2669;
    const double C3058 = C3046 + C3047;
    const double C8248 = C8221 + C8222;
    const double C8434 = C8417 + C8418;
    const double C23180 = C23159 + C23160;
    const double C1668 = C1654 + C1655;
    const double C2879 = C2860 + C2861;
    const double C4282 = C4270 + C4271;
    const double C8616 = C8599 + C8600;
    const double C23370 = C23351 + C23352;
    const double C1051 = C1041 + C1042;
    const double C3496 = C3484 + C3485;
    const double C6275 = C6267 + C6268;
    const double C3041 = C51143 * C775;
    const double C8404 = C8196 * C775;
    const double C8770 = C8195 * C775;
    const double C23532 = C51143 * C775;
    const double C26008 = C25800 * C775;
    const double C26374 = C51300 * C775;
    const double C4265 = C51143 * C897;
    const double C5829 = C51127 * C897;
    const double C8590 = C8196 * C897;
    const double C9958 = C8195 * C897;
    const double C24708 = C51143 * C897;
    const double C26194 = C25800 * C897;
    const double C27530 = C51300 * C897;
    const double C29257 = C22935 * C897;
    const double C35547 = C51273 * C897;
    const double C3479 = C51143 * C1164;
    const double C6440 = C51127 * C1164;
    const double C9194 = C8195 * C1164;
    const double C20028 = C51273 * C1164;
    const double C23946 = C51143 * C1164;
    const double C26782 = C51300 * C1164;
    const double C30047 = C22935 * C1164;
    const double C16601 = C51127 * C3761;
    const double C19228 = C51143 * C3761;
    const double C29825 = C51143 * C3761;
    const double C50335 = C50332 / C49999;
    const double C6279 = C6273 * C118;
    const double C16603 = C6273 * C298;
    const double C16440 = C16438 * C118;
    const double C50312 = C50309 + C50303;
    const double C14015 = C14004 + C14005;
    const double C16608 = C16594 + C16595;
    const double C19251 = C19237 + C19238;
    const double C19416 = C19405 + C19406;
    const double C30201 = C30194 + C30195;
    const double C19537 = C19528 + C19529;
    const double C21763 = C21756 + C21757;
    const double C48455 = C48446 + C48447;
    const double C50424 = C50418 - C50402;
    const double C50508 = C50507 / C49999;
    const double C21843 = C21839 + C21840;
    const double C174 = C160 + C161;
    const double C2498 = C2480 + C2481;
    const double C3045 = C51143 * C782;
    const double C8410 = C8196 * C782;
    const double C8776 = C8195 * C782;
    const double C23536 = C51143 * C782;
    const double C26014 = C25800 * C782;
    const double C26380 = C51300 * C782;
    const double C4269 = C51143 * C910;
    const double C5831 = C51127 * C910;
    const double C8596 = C8196 * C910;
    const double C9964 = C8195 * C910;
    const double C24712 = C51143 * C910;
    const double C26200 = C25800 * C910;
    const double C27536 = C51300 * C910;
    const double C29261 = C22935 * C910;
    const double C35551 = C51273 * C910;
    const double C9202 = C8196 * C3655;
    const double C16024 = C51127 * C3655;
    const double C20034 = C51143 * C3655;
    const double C26790 = C25800 * C3655;
    const double C30053 = C51143 * C3655;
    const double C3044 = C2450 * C776;
    const double C8409 = C8201 * C776;
    const double C8775 = C8200 * C776;
    const double C23535 = C22941 * C776;
    const double C26013 = C25805 * C776;
    const double C4268 = C2450 * C898;
    const double C5830 = C117 * C898;
    const double C8595 = C8201 * C898;
    const double C9963 = C8200 * C898;
    const double C24711 = C22941 * C898;
    const double C26199 = C25805 * C898;
    const double C35550 = C2449 * C898;
    const double C3482 = C2450 * C1165;
    const double C6443 = C117 * C1165;
    const double C9199 = C8200 * C1165;
    const double C20031 = C2449 * C1165;
    const double C23949 = C22941 * C1165;
    const double C16604 = C117 * C3760;
    const double C19231 = C2450 * C3760;
    const double C29828 = C22941 * C3760;
    const double C50311 = C50308 + C50300;
    const double C50410 = -C50399;
    const double C50122 = -C50121;
    const double C50465 = C50455 / C50080;
    const double C50517 = C50071 * C50514;
    const double C50533 = C50532 / C49932;
    const double C50633 = C50628 / C50080;
    const double C50653 = -C50650;
    const double C50224 = C50076 * C50222;
    const double C50257 = C50071 * C50222;
    const double C1249 =
        (2 * C50263 * C50190 + C50263 * (C50190 + C50222 * C50277)) / C49999;
    const double C50361 = C50071 * C50357;
    const double C3759 =
        (2 * C50263 * C50252 + C50263 * (C50252 + C50357 * C50277)) / C49999;
    const double C50483 = C50201 + C50476;
    const double C50594 = C50588 + C50573;
    const double C50223 = C50210 - C50220;
    const double C50360 = C50071 * C50354;
    const double C3758 = (-2 * C50263 * C50251) / C49932 -
                         (C50263 * (C50354 * C50277 + C50251)) / C49932;
    const double C50480 = C50473 + C50195;
    const double C50591 = C50585 + C50570;
    const double C50313 = C50310 - C50298;
    const double C50221 = C50197 + C50218;
    const double C1161 = C50071 * C50192 + C50256 * C50277;
    const double C50259 = C50255 / C49932;
    const double C8883 = 4 * (2 * C50240 + C50071 * C50329) +
                         C50071 * (3 * C50329 + C50071 * C50482);
    const double C9037 = C50263 * (3 * C50329 + C50071 * C50482);
    const double C9355 = 2 * C50240 + C50071 * C50329 + C50482 * C50277;
    const double C50600 = C50555 + C50593;
    const double C50599 = C50592 / C49932;
    const double C165 = C51127 * C136;
    const double C510 = C51127 * C484;
    const double C1046 = C51127 * C1027;
    const double C50362 = C50359 / C49999;
    const double C50479 = C50472 - C50454;
    const double C50522 = C50521 / C49999;
    const double C50597 = C50590 - C50566;
    const double C50639 = C50637 - C50632;
    const double C50659 = C50657 / C49999;
    const double C137 =
        4 * ((-2 * C50166) / C49932 - (C50076 * C50173) / C49932) +
        C50076 * ((-3 * C50173) / C49932 + C50076 * C50191);
    const double C315 = C50071 * ((-3 * C50173) / C49932 + C50076 * C50191) -
                        ((3 * C50174 + C50076 * C50192) * ce) / C49932;
    const double C485 = C50263 * ((-3 * C50173) / C49932 + C50076 * C50191);
    const double C650 = (-2 * C50166) / C49932 - (C50076 * C50173) / C49932 +
                        C50071 * (C50071 * C50191 - (C50192 * ce) / C49932) -
                        (C50071 * C50192 * ce) / C49932;
    const double C904 = C50263 * (C50071 * C50191 - (C50192 * ce) / C49932);
    const double C1028 =
        (-2 * C50166) / C49932 - (C50076 * C50173) / C49932 + C50191 * C50277;
    const double C21834 =
        5 * ((-3 * C50843) / C49932 + C50263 * C50858) +
        C50263 * (4 * C50858 +
                  C50263 * ((-3 * C50649) / C49932 +
                            C50263 * ((-2 * C50622) / C49932 -
                                      (C50263 * (C50205 * C50277 + C50147)) /
                                          C49932)));
    const double C108 = (C51246 - C51286) / C50007 - (C51304 * C50970) / C49999;
    const double C109 =
        (2 * C50979 + C51304) / C50007 - (C51288 * C50970) / C49999;
    const double C110 = C51288 / C50007 - C50982 / C50028;
    const double C112 = (C51253 - C51289) / C49940 - (C51305 * C50990) / C49932;
    const double C113 =
        (2 * C50999 + C51305) / C49940 - (C51291 * C50990) / C49932;
    const double C114 = C51291 / C49940 - C51002 / C49961;
    const double C1240 =
        (C51262 - C51295) / C49940 - (C51307 * C51066) / C49932;
    const double C1241 =
        (2 * C51070 + C51307) / C49940 - (C51297 * C51066) / C49932;
    const double C1242 = C51297 / C49940 - C51073 / C49961;
    const double C21083 =
        (C51275 - C51301) / C50007 - (C51309 * C51165) / C49999;
    const double C21084 =
        (2 * C51169 + C51309) / C50007 - (C51303 * C51165) / C49999;
    const double C21085 = C51303 / C50007 - C51172 / C50028;
    const double C49972 = C49968 * ce;
    const double C1363 = (-C49941 / C49932) / C49940 - (C49968 * de) / C49932;
    const double C50039 = C50035 * ae;
    const double C22940 = (-C50008 / C49999) / C50007 - (C50035 * be) / C49999;
    const double C25852 = C25825 + C25826;
    const double C25848 = C25817 + C25818;
    const double C25845 = C25811 + C25812;
    const double C44905 = C44898 + C44899;
    const double C44902 = C44892 + C44893;
    const double C2504 = C2500 * C118;
    const double C2666 = C2500 * C298;
    const double C8254 = C8233 + C8234;
    const double C8251 = C8227 + C8228;
    const double C8250 = C8225 + C8226;
    const double C8247 = C8219 + C8220;
    const double C8242 = C8209 + C8210;
    const double C8239 = C8203 + C8204;
    const double C8436 = C8421 + C8422;
    const double C8433 = C8415 + C8416;
    const double C8432 = C8413 + C8414;
    const double C8429 = C8407 + C8408;
    const double C8618 = C8603 + C8604;
    const double C8615 = C8597 + C8598;
    const double C8612 = C8591 + C8592;
    const double C8609 = C8585 + C8586;
    const double C8782 = C8773 + C8774;
    const double C8779 = C8767 + C8768;
    const double C9203 = C9191 + C9192;
    const double C9967 = C9955 + C9956;
    const double C13139 = C13130 + C13131;
    const double C13136 = C13124 + C13125;
    const double C13565 = C13550 + C13551;
    const double C13562 = C13544 + C13545;
    const double C13561 = C13542 + C13543;
    const double C13558 = C13536 + C13537;
    const double C13731 = C13724 + C13725;
    const double C13728 = C13718 + C13719;
    const double C13893 = C13884 + C13885;
    const double C13890 = C13878 + C13879;
    const double C14017 = C14008 + C14009;
    const double C14014 = C14002 + C14003;
    const double C183 = C173 * C51028;
    const double C338 = C173 * C51260;
    const double C676 = C173 * C630;
    const double C1375 = C173 * C1358;
    const double C1509 = C173 * C51306;
    const double C360 = C350 * C51044;
    const double C662 = C350 * C631;
    const double C1369 = C350 * C51044;
    const double C1499 = C350 * C51294;
    const double C522 = C514 * C51028;
    const double C1650 = C514 * C1358;
    const double C1909 = C514 * C51260;
    const double C5825 = C514 * C630;
    const double C6880 = C514 * C51306;
    const double C6107 = C6103 * C631;
    const double C6432 = C6103 * C51044;
    const double C7088 = C6103 * C51044;
    const double C7944 = C6103 * C51294;
    const double C6277 = C6271 * C51028;
    const double C6435 = C6271 * C51260;
    const double C8094 = C6271 * C1358;
    const double C16274 = C6271 * C630;
    const double C18065 = C6271 * C51306;
    const double C35346 = C35340 * C118;
    const double C37527 = C35340 * C298;
    const double C35343 = C35337 * C118;
    const double C37521 = C35337 * C298;
    const double C6108 = C6104 * C637;
    const double C7945 = C6104 * C1494;
    const double C6457 = C6451 * C299;
    const double C8093 = C6451 * C1364;
    const double C16275 = C6451 * C636;
    const double C19221 = C18633 + C18634;
    const double C192 = C188 * C51157;
    const double C5358 = C188 * C51275;
    const double C32274 = C188 * C32271;
    const double C367 = C351 - C361;
    const double C1667 = C1652 + C1653;
    const double C2877 = C2856 + C2857;
    const double C4280 = C4266 + C4267;
    const double C8613 = C8593 + C8594;
    const double C9970 = C9961 + C9962;
    const double C23368 = C23347 + C23348;
    const double C1050 = C1039 + C1040;
    const double C3494 = C3480 + C3481;
    const double C9206 = C9197 + C9198;
    const double C14018 = C14010 + C14011;
    const double C16609 = C16598 + C16599;
    const double C19249 = C19233 + C19234;
    const double C19418 = C19409 + C19410;
    const double C30203 = C30198 + C30199;
    const double C16730 = C16727 + C16728;
    const double C19538 = C19530 + C19531;
    const double C362 = C353 * C51044;
    const double C670 = C353 * C631;
    const double C1373 = C353 * C51044;
    const double C1505 = C353 * C51294;
    const double C2501 = C2490 + C2491;
    const double C524 = C516 * C51028;
    const double C1656 = C516 * C1358;
    const double C1913 = C516 * C51260;
    const double C5833 = C516 * C630;
    const double C6886 = C516 * C51306;
    const double C690 = C684 * C632;
    const double C1501 = C684 * C1489;
    const double C6109 = C6105 * C632;
    const double C7946 = C6105 * C1489;
    const double C6458 = C6452 * C51044;
    const double C8096 = C6452 * C51044;
    const double C16276 = C6452 * C631;
    const double C18067 = C6452 * C51294;
    const double C19222 = C18635 + C18636;
    const double C6580 = C6578 * C51028;
    const double C16596 = C6578 * C51260;
    const double C18218 = C6578 * C1358;
    const double C21547 = C6578 * C630;
    const double C22728 = C6578 * C51306;
    const double C50106 = C50105 / C49999;
    const double C16605 = C51127 * C3765;
    const double C19232 = C51143 * C3765;
    const double C29829 = C51143 * C3765;
    const double C16437 = C51127 * C6570;
    const double C6274 = C6265 + C6266;
    const double C19247 = C19229 + C19230;
    const double C50529 = C50528 / C49999;
    const double C344 = C51127 * C314;
    const double C2479 = C51143 * C314;
    const double C22970 = C51143 * C314;
    const double C680 = C51127 * C649;
    const double C2679 = C51143 * C649;
    const double C8232 = C8196 * C649;
    const double C23170 = C51143 * C649;
    const double C25836 = C25800 * C649;
    const double C1661 = C51127 * C903;
    const double C2869 = C51143 * C903;
    const double C23360 = C51143 * C903;
    const double C164 = C117 * C124;
    const double C343 = C117 * C304;
    const double C2478 = C2450 * C304;
    const double C22969 = C22941 * C304;
    const double C509 = C117 * C475;
    const double C679 = C117 * C641;
    const double C2678 = C2450 * C641;
    const double C8231 = C8201 * C641;
    const double C23169 = C22941 * C641;
    const double C25835 = C25805 * C641;
    const double C1660 = C117 * C889;
    const double C2868 = C2450 * C889;
    const double C23359 = C22941 * C889;
    const double C1045 = C117 * C1019;
    const double C3049 = C51143 * C777;
    const double C8420 = C8196 * C777;
    const double C23540 = C51143 * C777;
    const double C26024 = C25800 * C777;
    const double C4273 = C51143 * C901;
    const double C5837 = C51127 * C901;
    const double C8602 = C8196 * C901;
    const double C24716 = C51143 * C901;
    const double C26206 = C25800 * C901;
    const double C3487 = C51143 * C1166;
    const double C6446 = C51127 * C1166;
    const double C23954 = C51143 * C1166;
    const double C3052 = C2450 * C778;
    const double C8425 = C8201 * C778;
    const double C23543 = C22941 * C778;
    const double C26029 = C25805 * C778;
    const double C4276 = C2450 * C902;
    const double C5838 = C117 * C902;
    const double C8607 = C8201 * C902;
    const double C24719 = C22941 * C902;
    const double C26211 = C25805 * C902;
    const double C3490 = C2450 * C1167;
    const double C6449 = C117 * C1167;
    const double C23957 = C22941 * C1167;
    const double C50340 = C50337 + C50331;
    const double C50339 = C50336 + C50328;
    const double C50463 = -C50451;
    const double C50430 = C50071 * C50426;
    const double C50556 = 3 * C50426;
    const double C50542 = C50426 * ce;
    const double C13548 = C8201 * C9036;
    const double C45312 = C25805 * C9036;
    const double C13882 = C8201 * C9354;
    const double C19053 = C2450 * C9354;
    const double C45646 = C25805 * C9354;
    const double C48016 = C22941 * C9354;
    const double C50429 = C50071 * C50425;
    const double C50548 = -3 * C50425;
    const double C50541 = ae * C50425;
    const double C50583 = C50575 / C49999;
    const double C50634 = -C50629;
    const double C185 = C175 * C118;
    const double C346 = C175 * C298;
    const double C363 = C355 * C299;
    const double C677 = C355 * C636;
    const double C1376 = C355 * C1364;
    const double C2503 = C2494 + C2495;
    const double C525 = C517 * C118;
    const double C1918 = C517 * C298;
    const double C691 = C685 * C637;
    const double C1506 = C685 * C1494;
    const double C2697 = C2689 + C2690;
    const double C1674 = C1668 * C1364;
    const double C1912 = C1668 * C299;
    const double C5834 = C1668 * C636;
    const double C2887 = C2879 + C2878;
    const double C35341 = C2878 + C2879;
    const double C1057 = C1051 * C118;
    const double C6448 = C1051 * C298;
    const double C6281 = C6275 * C118;
    const double C3055 = C3040 + C3041;
    const double C8427 = C8403 + C8404;
    const double C8780 = C8769 + C8770;
    const double C23546 = C23531 + C23532;
    const double C26031 = C26007 + C26008;
    const double C4279 = C4264 + C4265;
    const double C5840 = C5828 + C5829;
    const double C8611 = C8589 + C8590;
    const double C9968 = C9957 + C9958;
    const double C24722 = C24707 + C24708;
    const double C26215 = C26193 + C26194;
    const double C35554 = C35546 + C35547;
    const double C3493 = C3478 + C3479;
    const double C6453 = C6439 + C6440;
    const double C9204 = C9193 + C9194;
    const double C20035 = C20027 + C20028;
    const double C23960 = C23945 + C23946;
    const double C16610 = C16600 + C16601;
    const double C19246 = C19227 + C19228;
    const double C29839 = C29824 + C29825;
    const double C50338 = C50335 - C50325;
    const double C3162 =
        (3 * (C50164 + C50071 * C50235 + C50231 * ae) +
         C50071 * (2 * C50235 + C50071 * C50312 + C50301 * ae) +
         (2 * C50231 + C50071 * C50301) * ae) /
        C49999;
    const double C3320 =
        (C50263 * (2 * C50235 + C50071 * C50312 + C50301 * ae)) / C49999;
    const double C3648 =
        (C50164 + C50071 * C50235 + C50231 * ae + C50312 * C50277) / C49999;
    const double C9465 =
        (2 * C50263 * C50312 + C50263 * (C50312 + C50426 * C50277)) / C49999;
    const double C16614 = C16608 * C299;
    const double C18217 = C16608 * C1364;
    const double C21548 = C16608 * C636;
    const double C19525 = C19251 + C19252;
    const double C21766 = C21763 * C299;
    const double C22832 = C21763 * C1364;
    const double C50428 = C50424 - C50403;
    const double C50509 = C50508 - C50505;
    const double C21845 = C21843 * C118;
    const double C184 = C174 * C51028;
    const double C345 = C174 * C51260;
    const double C1379 = C174 * C1358;
    const double C3057 = C3044 + C3045;
    const double C8430 = C8409 + C8410;
    const double C8783 = C8775 + C8776;
    const double C23548 = C23535 + C23536;
    const double C26034 = C26013 + C26014;
    const double C4281 = C4268 + C4269;
    const double C5841 = C5830 + C5831;
    const double C8614 = C8595 + C8596;
    const double C9971 = C9963 + C9964;
    const double C24724 = C24711 + C24712;
    const double C26218 = C26199 + C26200;
    const double C35556 = C35550 + C35551;
    const double C3495 = C3482 + C3483;
    const double C6454 = C6443 + C6444;
    const double C9207 = C9199 + C9200;
    const double C20037 = C20031 + C20032;
    const double C23962 = C23949 + C23950;
    const double C3326 =
        2 * ((-(C50263 * C50138 * ce) / C49932) / C49999 -
             (ae * C50263 * C50137) / C50080 - (C50071 * C50370) / C50080) -
        (ae * C50263 * C50311) / C50080 - (C50263 * C50312 * ce) / C50080 +
        C50071 * ((-(ae * C50263 * C50299) / C49932) / C49999 -
                  C50370 / C50080 - (C50263 * C50302 * ce) / C50080 +
                  C50071 * ((-(C50263 * C50143 * ce) / C49932) / C49999 -
                            (ae * C50263 * C50142) / C50080 -
                            (C50071 * C50263 * C50102) / C50080));
    const double C3163 =
        (-3 * (C50071 * C50234 + C50163 + C50231 * ce)) / C49932 +
        C50071 * ((-2 * C50234) / C49932 - (C50071 * C50311) / C49932 -
                  (C50301 * ce) / C49932) -
        ((2 * C50231 + C50071 * C50301) * ce) / C49932;
    const double C3321 =
        C50263 * ((-2 * C50234) / C49932 - (C50071 * C50311) / C49932 -
                  (C50301 * ce) / C49932);
    const double C3649 =
        -(C50311 * C50277 + C50071 * C50234 + C50163 + C50231 * ce) / C49932;
    const double C9464 = (-2 * C50263 * C50311) / C49932 -
                         (C50263 * (C50425 * C50277 + C50311)) / C49932;
    const double C50417 = C50410 / C49999;
    const double C50123 = C50122 / C49999;
    const double C50520 = C50517 / C50080;
    const double C50534 = -C50533;
    const double C50656 = C50653 / C49999;
    const double C50226 = C50200 + C50224;
    const double C50260 = C50257 + C50258;
    const double C50364 = C50152 + C50361;
    const double C50487 = C50483 + C50470;
    const double C50601 = C50071 * C50594;
    const double C13997 =
        (3 * (C50312 + C50426 * C50277) +
         C50263 * (2 * C50263 * C50426 + C50263 * (C50426 + C50594 * C50277))) /
        C49999;
    const double C50225 = C50076 * C50223;
    const double C50254 = C50071 * C50223;
    const double C1248 =
        2 * C50263 * C50191 + C50263 * (C50191 + C50223 * C50277);
    const double C50363 = C50360 + C50151;
    const double C50486 = C50480 + C50467;
    const double C50598 = C50071 * C50591;
    const double C13995 =
        (-3 * (C50425 * C50277 + C50311)) / C49932 +
        C50263 * ((-2 * C50263 * C50425) / C49932 -
                  (C50263 * (C50591 * C50277 + C50425)) / C49932);
    const double C3168 =
        3 * ((-(ae * C50234) / C49932) / C49999 - C50084 / C50080 -
             (C50235 * ce) / C50080 + C50071 * C50313) +
        (((-2 * C50234) / C49932 - (C50071 * C50311) / C49932 -
          (C50301 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50235 + C50071 * C50312 + C50301 * ae) * ce) / C50080 +
        C50071 * (2 * C50313 - (ae * C50311) / C50080 - (C50312 * ce) / C50080 +
                  C50071 * ((-(ae * C50299) / C49932) / C49999 - C50098 -
                            (C50302 * ce) / C50080 +
                            C50071 * ((-(C50143 * ce) / C49932) / C49999 -
                                      (ae * C50142) / C50080 -
                                      (C50071 * C50102) / C50080)));
    const double C125 = 5 * (3 * C50174 + C50076 * C50192) +
                        C50076 * (4 * C50192 + C50076 * C50221);
    const double C305 = C50071 * (4 * C50192 + C50076 * C50221);
    const double C477 = C50263 * (4 * C50192 + C50076 * C50221);
    const double C642 = 3 * C50174 + C50076 * C50192 + C50221 * C50074;
    const double C1020 = 3 * C50174 + C50076 * C50192 + C50221 * C50277;
    const double C1643 = C50263 * C50071 * C50221;
    const double C11379 = 5 * (3 * C50301 + C50071 * C50421) +
                          C50071 * (4 * C50421 + C50071 * C50600);
    const double C11481 = C50263 * (4 * C50421 + C50071 * C50600);
    const double C11681 = 3 * C50301 + C50071 * C50421 + C50600 * C50277;
    const double C50365 = C50362 - C50353;
    const double C50485 = C50479 - C50465;
    const double C50523 = C50522 - C50519;
    const double C50602 = C50071 * C50597;
    const double C50641 = C50639 - C50633;
    const double C50661 = C50659 - C50655;
    const double C166 = C117 * C137;
    const double C347 = C117 * C315;
    const double C2482 = C2450 * C315;
    const double C22973 = C22941 * C315;
    const double C511 = C117 * C485;
    const double C681 = C117 * C650;
    const double C2682 = C2450 * C650;
    const double C8237 = C8201 * C650;
    const double C23173 = C22941 * C650;
    const double C25841 = C25805 * C650;
    const double C1664 = C117 * C904;
    const double C2872 = C2450 * C904;
    const double C23363 = C22941 * C904;
    const double C1047 = C117 * C1028;
    const double C49974 = C49972 / C49932;
    const double C1380 = C175 * C1363;
    const double C1374 = C172 * C1363;
    const double C1370 = C170 * C1363;
    const double C1366 = C168 * C1363;
    const double C1663 = C517 * C1363;
    const double C1657 = C515 * C1363;
    const double C1651 = C513 * C1363;
    const double C3914 = C2500 * C1363;
    const double C7098 = C1051 * C1363;
    const double C7094 = C1049 * C1363;
    const double C7085 = C5672 * C1363;
    const double C8095 = C6272 * C1363;
    const double C17229 = C6273 * C1363;
    const double C18219 = C6577 * C1363;
    const double C22834 = C16729 * C1363;
    const double C37057 = C35340 * C1363;
    const double C37051 = C35337 * C1363;
    const double C50041 = C50039 / C49999;
    const double C22971 = C22940 * C134;
    const double C22967 = C22940 * C123;
    const double C22965 = C22940 * C122;
    const double C22961 = C22940 * C133;
    const double C22955 = C22940 * C131;
    const double C22951 = C22940 * C121;
    const double C22947 = C22940 * C129;
    const double C22943 = C22940 * C120;
    const double C23171 = C22940 * C313;
    const double C23167 = C22940 * C303;
    const double C23165 = C22940 * C311;
    const double C23161 = C22940 * C302;
    const double C23155 = C22940 * C309;
    const double C23151 = C22940 * C301;
    const double C23361 = C22940 * C483;
    const double C23357 = C22940 * C474;
    const double C23353 = C22940 * C481;
    const double C23349 = C22940 * C473;
    const double C23345 = C22940 * C479;
    const double C23341 = C22940 * C472;
    const double C23541 = C22940 * C648;
    const double C23537 = C22940 * C640;
    const double C23533 = C22940 * C646;
    const double C23529 = C22940 * C639;
    const double C23955 = C22940 * C1026;
    const double C23951 = C22940 * C1018;
    const double C23947 = C22940 * C1024;
    const double C23943 = C22940 * C1017;
    const double C24717 = C22940 * C900;
    const double C24713 = C22940 * C887;
    const double C24709 = C22940 * C896;
    const double C24705 = C22940 * C885;
    const double C29039 = C22940 * C486;
    const double C29035 = C22940 * C476;
    const double C29260 = C22940 * C898;
    const double C29256 = C22940 * C886;
    const double C29604 = C22940 * C894;
    const double C29600 = C22940 * C884;
    const double C29598 = C22940 * C892;
    const double C29594 = C22940 * C883;
    const double C29826 = C22940 * C1252;
    const double C29822 = C22940 * C1246;
    const double C29820 = C22940 * C1016;
    const double C29816 = C22940 * C1022;
    const double C30050 = C22940 * C1165;
    const double C30046 = C22940 * C1159;
    const double C30042 = C22940 * C1163;
    const double C30038 = C22940 * C1158;
    const double C30196 = C22940 * C1254;
    const double C30192 = C22940 * C1247;
    const double C48014 = C22940 * C3645;
    const double C48331 = C22940 * C3762;
    const double C48327 = C22940 * C3757;
    const double C48448 = C22940 * C6567;
    const double C48444 = C22940 * C6562;
    const double C191 = C183 + C182;
    const double C189 = C182 + C183;
    const double C354 = C337 + C338;
    const double C5668 = C522 + C521;
    const double C5667 = C521 + C522;
    const double C7447 = C1909 + C1910;
    const double C7446 = C1910 + C1909;
    const double C16431 = C6278 + C6277;
    const double C16592 = C6436 + C6435;
    const double C19241 = C19221 * C118;
    const double C19401 = C19221 * C298;
    const double C21011 = C19221 * C1363;
    const double C1673 = C1667 * C51044;
    const double C1911 = C1667 * C51044;
    const double C5827 = C1667 * C631;
    const double C6882 = C1667 * C51294;
    const double C35339 = C2877 + C2876;
    const double C35338 = C2876 + C2877;
    const double C1056 = C1050 * C51028;
    const double C6441 = C1050 * C51260;
    const double C7093 = C1050 * C1358;
    const double C16018 = C1050 * C630;
    const double C17026 = C1050 * C51306;
    const double C16615 = C16609 * C51044;
    const double C18220 = C16609 * C51044;
    const double C21549 = C16609 * C631;
    const double C22730 = C16609 * C51294;
    const double C19524 = C19249 + C19250;
    const double C16732 = C16730 * C51028;
    const double C21758 = C16730 * C51260;
    const double C22833 = C16730 * C1358;
    const double C369 = C367 - C362;
    const double C2505 = C2501 * C51028;
    const double C2667 = C2501 * C51260;
    const double C3915 = C2501 * C1358;
    const double C530 = C524 + C523;
    const double C5359 = C523 + C524;
    const double C5512 = C1914 + C1913;
    const double C7448 = C1913 + C1914;
    const double C19242 = C19222 * C51028;
    const double C19402 = C19222 * C51260;
    const double C21012 = C19222 * C1358;
    const double C16724 = C6580 + C6579;
    const double C21656 = C6579 + C6580;
    const double C21755 = C16597 + C16596;
    const double C50107 = C50106 - C50098;
    const double C16611 = C16604 + C16605;
    const double C19248 = C19231 + C19232;
    const double C29841 = C29828 + C29829;
    const double C16439 = C16436 + C16437;
    const double C6280 = C6274 * C51028;
    const double C16602 = C6274 * C51260;
    const double C17228 = C6274 * C1358;
    const double C50530 = C50529 - C50098;
    const double C176 = C164 + C165;
    const double C357 = C343 + C344;
    const double C2497 = C2478 + C2479;
    const double C22988 = C22969 + C22970;
    const double C519 = C509 + C510;
    const double C687 = C679 + C680;
    const double C2694 = C2678 + C2679;
    const double C8253 = C8231 + C8232;
    const double C23185 = C23169 + C23170;
    const double C25857 = C25835 + C25836;
    const double C1670 = C1660 + C1661;
    const double C2883 = C2868 + C2869;
    const double C23374 = C23359 + C23360;
    const double C1053 = C1045 + C1046;
    const double C3059 = C3048 + C3049;
    const double C8435 = C8419 + C8420;
    const double C23550 = C23539 + C23540;
    const double C26039 = C26023 + C26024;
    const double C4283 = C4272 + C4273;
    const double C5842 = C5836 + C5837;
    const double C8617 = C8601 + C8602;
    const double C24726 = C24715 + C24716;
    const double C26221 = C26205 + C26206;
    const double C3497 = C3486 + C3487;
    const double C6455 = C6445 + C6446;
    const double C23964 = C23953 + C23954;
    const double C3164 =
        (3 * (C50168 + C50071 * C50244 + C50240 * ae) +
         C50071 * (2 * C50244 + C50071 * C50340 + C50329 * ae) +
         (2 * C50240 + C50071 * C50329) * ae) /
        C49999;
    const double C3322 =
        (C50263 * (2 * C50244 + C50071 * C50340 + C50329 * ae)) / C49999;
    const double C3650 =
        (C50168 + C50071 * C50244 + C50240 * ae + C50340 * C50277) / C49999;
    const double C3327 =
        2 * ((-(C50263 * C50181 * ce) / C49932) / C49999 -
             (ae * C50263 * C50177) / C50080 - (C50071 * C50372) / C50080) -
        (ae * C50263 * C50339) / C50080 - (C50263 * C50340 * ce) / C50080 +
        C50071 * ((-(ae * C50263 * C50327) / C49932) / C49999 -
                  C50372 / C50080 - (C50263 * C50330 * ce) / C50080 +
                  C50071 * ((-(C50263 * C50201 * ce) / C49932) / C49999 -
                            (ae * C50263 * C50195) / C50080 -
                            (C50071 * C50263 * C50076 * C50119) / C50080));
    const double C3165 =
        (-3 * (C50071 * C50243 + C50166 + C50240 * ce)) / C49932 +
        C50071 * ((-2 * C50243) / C49932 - (C50071 * C50339) / C49932 -
                  (C50329 * ce) / C49932) -
        ((2 * C50240 + C50071 * C50329) * ce) / C49932;
    const double C3323 =
        C50263 * ((-2 * C50243) / C49932 - (C50071 * C50339) / C49932 -
                  (C50329 * ce) / C49932);
    const double C3651 =
        -(C50339 * C50277 + C50071 * C50243 + C50166 + C50240 * ce) / C49932;
    const double C50471 = C50463 / C49999;
    const double C50433 = C50396 + C50430;
    const double C50561 = C50542 / C50080;
    const double C50432 = C50429 / C49932;
    const double C50567 = C50548 / C49932;
    const double C50560 = C50541 / C50080;
    const double C50589 = C50583 - C50113;
    const double C50636 = C50634 / C49999;
    const double C2507 = C2503 * C118;
    const double C2699 = C2697 * C299;
    const double C3916 = C2697 * C1364;
    const double C2889 = C2887 * C118;
    const double C35347 = C35341 * C118;
    const double C37055 = C4278 + C4279;
    const double C37053 = C4279 + C4278;
    const double C5844 = C5840 * C637;
    const double C6883 = C5840 * C1494;
    const double C19224 = C3493 + C3492;
    const double C36076 = C3492 + C3493;
    const double C6459 = C6453 * C299;
    const double C7092 = C6453 * C1364;
    const double C16019 = C6453 * C636;
    const double C16616 = C16610 * C299;
    const double C17227 = C16610 * C1364;
    const double C50341 = C50338 - C50326;
    const double C13547 = C8195 * C3320;
    const double C13533 = C8196 * C3320;
    const double C19038 = C51143 * C3320;
    const double C29603 = C51143 * C3320;
    const double C45311 = C51300 * C3320;
    const double C45297 = C25800 * C3320;
    const double C13721 = C8196 * C3648;
    const double C13881 = C8195 * C3648;
    const double C16278 = C51127 * C3648;
    const double C19052 = C51273 * C3648;
    const double C19044 = C51143 * C3648;
    const double C30041 = C51143 * C3648;
    const double C45485 = C25800 * C3648;
    const double C45645 = C51300 * C3648;
    const double C48015 = C22935 * C3648;
    const double C14007 = C8196 * C9465;
    const double C19408 = C51143 * C9465;
    const double C21551 = C51127 * C9465;
    const double C45763 = C25800 * C9465;
    const double C48330 = C51143 * C9465;
    const double C19535 = C19525 * C118;
    const double C50431 = C50071 * C50428;
    const double C50540 = 2 * C50428;
    const double C50510 = C50509 - C50506;
    const double C190 = C184 + C185;
    const double C37058 = C4280 + C4281;
    const double C37054 = C4281 + C4280;
    const double C5845 = C5841 * C632;
    const double C6884 = C5841 * C1489;
    const double C19223 = C3495 + C3494;
    const double C36077 = C3494 + C3495;
    const double C6460 = C6454 * C51044;
    const double C7095 = C6454 * C51044;
    const double C16020 = C6454 * C631;
    const double C17028 = C6454 * C51294;
    const double C13553 = C8195 * C3326;
    const double C13539 = C8196 * C3326;
    const double C19042 = C51143 * C3326;
    const double C29607 = C51143 * C3326;
    const double C45317 = C51300 * C3326;
    const double C45303 = C25800 * C3326;
    const double C13552 = C8200 * C3321;
    const double C13538 = C8201 * C3321;
    const double C19041 = C2450 * C3321;
    const double C29606 = C22941 * C3321;
    const double C45302 = C25805 * C3321;
    const double C13714 = C8201 * C3649;
    const double C13886 = C8200 * C3649;
    const double C16279 = C117 * C3649;
    const double C19055 = C2449 * C3649;
    const double C19047 = C2450 * C3649;
    const double C30044 = C22941 * C3649;
    const double C45478 = C25805 * C3649;
    const double C48018 = C22940 * C3649;
    const double C14012 = C8201 * C9464;
    const double C19411 = C2450 * C9464;
    const double C21552 = C117 * C9464;
    const double C45768 = C25805 * C9464;
    const double C48333 = C22941 * C9464;
    const double C50423 = C50417 - C50098;
    const double C50124 = C50123 - C50113;
    const double C50535 = C50534 / C49999;
    const double C50658 = C50656 - C50113;
    const double C139 = (5 * (3 * C50175 + C50076 * C50190) +
                         C50076 * (4 * C50190 + C50076 * C50226)) /
                        C49999;
    const double C316 = (C50071 * (4 * C50190 + C50076 * C50226) +
                         (4 * C50192 + C50076 * C50221) * ae) /
                        C49999;
    const double C489 = (C50263 * (4 * C50190 + C50076 * C50226)) / C49999;
    const double C651 =
        (3 * C50175 + C50076 * C50190 +
         C50071 * (C50071 * C50226 + C50221 * ae) + C50071 * C50221 * ae) /
        C49999;
    const double C1030 =
        (3 * C50175 + C50076 * C50190 + C50226 * C50277) / C49999;
    const double C1644 = (C50263 * (C50071 * C50226 + C50221 * ae)) / C49999;
    const double C779 = (2 * (C50071 * C50190 + C50192 * ae) +
                         C50071 * (C50190 + C50071 * C50260 + C50256 * ae) +
                         (C50192 + C50215 * C50074) * ae) /
                        C49999;
    const double C905 =
        (C50263 * (C50190 + C50071 * C50260 + C50256 * ae)) / C49999;
    const double C1168 =
        (C50071 * C50190 + C50192 * ae + C50260 * C50277) / C49999;
    const double C50367 = C50364 + C50358;
    const double C50490 = C50071 * C50487;
    const double C9463 =
        (2 * C50263 * C50340 + C50263 * (C50340 + C50487 * C50277)) / C49999;
    const double C50604 = C50557 + C50601;
    const double C50227 = C50203 + C50225;
    const double C50261 = C50254 - C50259;
    const double C50366 = C50363 + C50355;
    const double C50489 = C50071 * C50486;
    const double C9462 = (-2 * C50263 * C50339) / C49932 -
                         (C50263 * (C50486 * C50277 + C50339)) / C49932;
    const double C50603 = C50598 / C49932;
    const double C50488 = C50071 * C50485;
    const double C50524 = C50523 - C50520;
    const double C50642 = C50071 * C50641;
    const double C49976 = C49974 - C49969;
    const double C1383 = C1374 + C1375;
    const double C1382 = C1370 + C1371;
    const double C6728 = C1657 + C1656;
    const double C7091 = C1656 + C1657;
    const double C7090 = C1650 + C1651;
    const double C7089 = C1651 + C1650;
    const double C18216 = C8095 + C8094;
    const double C22831 = C18219 + C18218;
    const double C50043 = C50041 - C50036;
    const double C22989 = C22971 + C22972;
    const double C22987 = C22967 + C22968;
    const double C22986 = C22965 + C22966;
    const double C22984 = C22961 + C22962;
    const double C22981 = C22955 + C22956;
    const double C22979 = C22951 + C22952;
    const double C22977 = C22947 + C22948;
    const double C22975 = C22943 + C22944;
    const double C23184 = C23167 + C23168;
    const double C23183 = C23165 + C23166;
    const double C23181 = C23161 + C23162;
    const double C23178 = C23155 + C23156;
    const double C23176 = C23151 + C23152;
    const double C23373 = C23357 + C23358;
    const double C23371 = C23353 + C23354;
    const double C23369 = C23349 + C23350;
    const double C23367 = C23345 + C23346;
    const double C23365 = C23341 + C23342;
    const double C23549 = C23537 + C23538;
    const double C23547 = C23533 + C23534;
    const double C23545 = C23529 + C23530;
    const double C23963 = C23951 + C23952;
    const double C23961 = C23947 + C23948;
    const double C23959 = C23943 + C23944;
    const double C24725 = C24713 + C24714;
    const double C24723 = C24709 + C24710;
    const double C24721 = C24705 + C24706;
    const double C29051 = C29039 + C29040;
    const double C29049 = C29035 + C29036;
    const double C29266 = C29260 + C29261;
    const double C29264 = C29256 + C29257;
    const double C29614 = C29604 + C29605;
    const double C29612 = C29600 + C29601;
    const double C29611 = C29598 + C29599;
    const double C29609 = C29594 + C29595;
    const double C29840 = C29826 + C29827;
    const double C29838 = C29822 + C29823;
    const double C29837 = C29820 + C29821;
    const double C29835 = C29816 + C29817;
    const double C30060 = C30050 + C30051;
    const double C30058 = C30046 + C30047;
    const double C30056 = C30042 + C30043;
    const double C30054 = C30038 + C30039;
    const double C30202 = C30196 + C30197;
    const double C30200 = C30192 + C30193;
    const double C48340 = C48331 + C48332;
    const double C48338 = C48327 + C48328;
    const double C48456 = C48448 + C48449;
    const double C48454 = C48444 + C48445;
    const double C195 = C191 * C51157;
    const double C5361 = C191 * C51275;
    const double C32277 = C191 * C32271;
    const double C193 = C189 * C51157;
    const double C368 = C354 - C363;
    const double C7450 = C1908 - C7447;
    const double C7449 = C7446 - C1908;
    const double C16606 = C16592 - C6457;
    const double C35345 = C35339 * C51028;
    const double C37056 = C35339 * C1358;
    const double C37526 = C35339 * C51260;
    const double C35344 = C35338 * C51028;
    const double C37052 = C35338 * C1358;
    const double C37522 = C35338 * C51260;
    const double C6258 = C1056 + C1055;
    const double C6256 = C1055 + C1056;
    const double C16593 = C6442 + C6441;
    const double C17575 = C6441 + C6442;
    const double C17226 = C7093 + C7094;
    const double C17225 = C7094 + C7093;
    const double C19534 = C19524 * C51028;
    const double C21838 = C16732 + C16731;
    const double C371 = C369 * C51157;
    const double C5511 = C369 * C51275;
    const double C32426 = C369 * C32271;
    const double C2508 = C2504 + C2505;
    const double C2688 = C2666 + C2667;
    const double C3918 = C3914 + C3915;
    const double C532 = C530 * C51157;
    const double C5671 = C530 * C51275;
    const double C32576 = C530 * C32271;
    const double C5362 = C5359 * C51169;
    const double C32275 = C5359 * C51169;
    const double C5513 = C5512 - C1912;
    const double C7451 = C1912 - C7448;
    const double C19253 = C19241 + C19242;
    const double C19413 = C19401 + C19402;
    const double C21015 = C21011 + C21012;
    const double C21762 = C21755 - C16614;
    const double C145 =
        4 * ((-2 * C50076 * C50093) / C50080 + C50076 * C50107) +
        C50076 *
            (3 * C50107 +
             C50076 * ((-2 * C50076 * C50102) / C50080 +
                       C50076 * ((-((C50096 * C50097 +
                                     C50074 * bs[7] * std::pow(C50070, 7)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50102 / C50080)));
    const double C321 =
        (((-2 * C50076 * C50137) / C49932 -
          (C50076 * (C50088 * C50087 * C50133 * C50089 + C50137)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50076 * C50138 +
          C50076 * (C50138 + C50088 * C50087 * C50132 * C50089)) *
         ce) /
            C50080 +
        C50071 * ((-2 * C50076 * C50093) / C50080 + C50076 * C50107);
    const double C492 =
        (zP - zQ) * ((-2 * C50076 * C50093) / C50080 + C50076 * C50107);
    const double C655 = (-(C50093 * C50089) / C49932) / C49999 -
                        C50084 / C50080 -
                        (ae * (C50071 * C50173 + C50174 * ce)) / C50080 -
                        ((C50071 * C50175 + C50174 * ae) * ce) / C50080 +
                        C50071 * ((-(C50175 * ce) / C49932) / C49999 -
                                  (ae * C50173) / C50080 + C50071 * C50107);
    const double C911 = (-(C50263 * C50175 * ce) / C49932) / C49999 -
                        (ae * C50263 * C50173) / C50080 +
                        C50071 * C50263 * C50107;
    const double C1033 = (-(C50093 * C50089) / C49932) / C49999 -
                         C50084 / C50080 + C50107 * std::pow(C50263, 2);
    const double C16617 = C16611 * C51044;
    const double C17230 = C16611 * C51044;
    const double C16441 = C16439 * C51028;
    const double C16433 = C6280 + C6279;
    const double C16432 = C6279 + C6280;
    const double C9360 =
        2 * ((-((C50138 + C50143 * C50277) * ce) / C49932) / C49999 -
             (ae * (C50142 * C50277 + C50137)) / C50080 + C50071 * C50530) -
        (ae * (C50425 * C50277 + C50311)) / C50080 -
        ((C50312 + C50426 * C50277) * ce) / C50080 +
        C50071 *
            (C50530 - (ae * (C50405 * C50277 + C50299)) / C50080 -
             ((C50302 + C50408 * C50277) * ce) / C50080 +
             C50071 *
                 ((-((C50143 + C50148 * C50277) * ce) / C49932) / C49999 -
                  (ae * (C50147 * C50277 + C50142)) / C50080 +
                  C50071 * ((-(C50119 * C50277) / C49932) / C49999 - C50113)));
    const double C9467 =
        (-2 * C50370) / C50080 + C50263 * C50530 +
        (((-2 * C50263 * C50299) / C49932 -
          (C50263 * (C50405 * C50277 + C50299)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50263 * C50302 + C50263 * (C50302 + C50408 * C50277)) * ce) /
            C50080 +
        C50071 * ((((-2 * C50499) / C49932 -
                    (C50263 * (C50147 * C50277 + C50142)) / C49932) *
                   ae) /
                      C49999 -
                  ((2 * C50498 + C50263 * (C50143 + C50148 * C50277)) * ce) /
                      C50080 +
                  C50071 * ((-2 * C50500) / C50080 +
                            C50263 * ((-(C50119 * C50277) / C49932) / C49999 -
                                      C50113)));
    const double C186 = C176 * C118;
    const double C365 = C357 * C299;
    const double C1378 = C357 * C1364;
    const double C527 = C519 * C118;
    const double C693 = C687 * C637;
    const double C1512 = C687 * C1494;
    const double C1676 = C1670 * C1364;
    const double C1916 = C1670 * C299;
    const double C1059 = C1053 * C118;
    const double C5846 = C5842 * C637;
    const double C6889 = C5842 * C1494;
    const double C6461 = C6455 * C299;
    const double C7096 = C6455 * C1364;
    const double C8772 = C8196 * C3164;
    const double C26376 = C25800 * C3164;
    const double C9960 = C8196 * C3322;
    const double C27532 = C25800 * C3322;
    const double C29259 = C51143 * C3322;
    const double C35549 = C51143 * C3322;
    const double C9196 = C8196 * C3650;
    const double C16022 = C51127 * C3650;
    const double C20030 = C51143 * C3650;
    const double C26784 = C25800 * C3650;
    const double C30049 = C51143 * C3650;
    const double C9966 = C8196 * C3327;
    const double C27538 = C25800 * C3327;
    const double C29263 = C51143 * C3327;
    const double C35553 = C51143 * C3327;
    const double C8777 = C8201 * C3165;
    const double C26381 = C25805 * C3165;
    const double C9965 = C8201 * C3323;
    const double C27537 = C25805 * C3323;
    const double C29262 = C22941 * C3323;
    const double C35552 = C2450 * C3323;
    const double C9201 = C8201 * C3651;
    const double C16023 = C117 * C3651;
    const double C20033 = C2450 * C3651;
    const double C26789 = C25805 * C3651;
    const double C30052 = C22941 * C3651;
    const double C50478 = C50471 - C50440;
    const double C50436 = C50433 + C50416;
    const double C50435 = C50404 - C50432;
    const double C50596 = C50589 - C50563;
    const double C50638 = C50636 - C50619;
    const double C37062 = C37055 * C1364;
    const double C37525 = C37055 * C299;
    const double C37060 = C37053 * C1364;
    const double C37523 = C37053 * C299;
    const double C19244 = C19224 * C118;
    const double C36078 = C36076 * C118;
    const double C3169 =
        3 * ((-(ae * C50243) / C49932) / C49999 - C50237 / C50080 -
             (C50244 * ce) / C50080 + C50071 * C50341) +
        (((-2 * C50243) / C49932 - (C50071 * C50339) / C49932 -
          (C50329 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50244 + C50071 * C50340 + C50329 * ae) * ce) / C50080 +
        C50071 * (2 * C50341 - (ae * C50339) / C50080 - (C50340 * ce) / C50080 +
                  C50071 * ((-(ae * C50327) / C49932) / C49999 -
                            C50109 / C50080 - (C50330 * ce) / C50080 +
                            C50071 * ((-(C50201 * ce) / C49932) / C49999 -
                                      (ae * C50195) / C50080 -
                                      (C50071 * C50076 * C50119) / C50080)));
    const double C13563 = C13546 + C13547;
    const double C13556 = C13532 + C13533;
    const double C19064 = C19037 + C19038;
    const double C29613 = C29602 + C29603;
    const double C45320 = C45296 + C45297;
    const double C13729 = C13720 + C13721;
    const double C13891 = C13880 + C13881;
    const double C16281 = C16277 + C16278;
    const double C19071 = C19051 + C19052;
    const double C19067 = C19043 + C19044;
    const double C30055 = C30040 + C30041;
    const double C45493 = C45484 + C45485;
    const double C48022 = C48014 + C48015;
    const double C14016 = C14006 + C14007;
    const double C19417 = C19407 + C19408;
    const double C21554 = C21550 + C21551;
    const double C45772 = C45762 + C45763;
    const double C48339 = C48329 + C48330;
    const double C50574 = C50540 - C50560;
    const double C194 = C190 * C51157;
    const double C37064 = C37058 * C51044;
    const double C37528 = C37058 * C51044;
    const double C37061 = C37054 * C51044;
    const double C37524 = C37054 * C51044;
    const double C19243 = C19223 * C51028;
    const double C36079 = C36077 * C51028;
    const double C13566 = C13552 + C13553;
    const double C13559 = C13538 + C13539;
    const double C19066 = C19041 + C19042;
    const double C29615 = C29606 + C29607;
    const double C45323 = C45302 + C45303;
    const double C13726 = C13714 + C13715;
    const double C13894 = C13886 + C13887;
    const double C16282 = C16279 + C16280;
    const double C19073 = C19055 + C19056;
    const double C19069 = C19047 + C19048;
    const double C30057 = C30044 + C30045;
    const double C45490 = C45478 + C45479;
    const double C48024 = C48018 + C48019;
    const double C50427 = C50423 - C50400;
    const double C50125 = C50076 * C50124;
    const double C50345 = C50071 * C50124;
    const double C50374 = C50263 * C50124;
    const double C783 =
        2 * ((-(C50175 * ce) / C49932) / C49999 - (ae * C50173) / C50080 +
             C50071 * C50107) -
        (ae * (C50071 * C50251 + C50173 + C50248 * ce)) / C50080 -
        ((C50175 + C50071 * C50252 + C50248 * ae) * ce) / C50080 +
        C50071 * (C50107 - (ae * C50251) / C50080 - (C50252 * ce) / C50080 +
                  C50071 * ((-(C50152 * ce) / C49932) / C49999 -
                            (ae * C50151) / C50080 + C50071 * C50124));
    const double C912 =
        C50263 * C50107 - (ae * C50263 * C50251) / C50080 -
        (C50263 * C50252 * ce) / C50080 +
        C50071 * ((-(C50263 * C50152 * ce) / C49932) / C49999 -
                  (ae * C50263 * C50151) / C50080 + C50071 * C50263 * C50124);
    const double C1172 =
        (-((C50175 + C50152 * C50277) * ce) / C49932) / C49999 -
        (ae * (C50151 * C50277 + C50173)) / C50080 +
        C50071 * (C50107 + C50124 * C50277);
    const double C1257 =
        2 * C50263 * C50107 + C50263 * (C50107 + C50124 * C50277);
    const double C3656 =
        C50107 + C50124 * C50277 - (ae * (C50354 * C50277 + C50251)) / C50080 -
        ((C50252 + C50357 * C50277) * ce) / C50080 +
        C50071 *
            ((-((C50152 + C50216 * C50277) * ce) / C49932) / C49999 -
             (ae * (C50214 * C50277 + C50151)) / C50080 +
             C50071 *
                 (C50124 +
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080) *
                      C50277));
    const double C50536 = C50535 - C50440;
    const double C50660 = C50071 * C50658;
    const double C50665 = C50263 * C50658;
    const double C3166 =
        (3 * (C50175 + C50071 * C50252 + C50248 * ae) +
         C50071 * (2 * C50252 + C50071 * C50367 + C50356 * ae) +
         (2 * C50248 + C50071 * C50356) * ae) /
        C49999;
    const double C3324 =
        (C50263 * (2 * C50252 + C50071 * C50367 + C50356 * ae)) / C49999;
    const double C3652 =
        (C50175 + C50071 * C50252 + C50248 * ae + C50367 * C50277) / C49999;
    const double C50493 = C50449 + C50490;
    const double C50607 = C50604 + C50581;
    const double C1646 =
        (C50263 * C50227 * ae) / C49999 - (C50263 * C50226 * ce) / C50080 +
        C50071 * C50263 *
            (3 * C50124 +
             C50076 * ((-2 * C50076 * C50119) / C50080 +
                       C50076 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080)));
    const double C138 = 5 * ((-3 * C50173) / C49932 + C50076 * C50191) +
                        C50076 * (4 * C50191 + C50076 * C50227);
    const double C317 = C50071 * (4 * C50191 + C50076 * C50227) -
                        ((4 * C50192 + C50076 * C50221) * ce) / C49932;
    const double C488 = C50263 * (4 * C50191 + C50076 * C50227);
    const double C652 = (-3 * C50173) / C49932 + C50076 * C50191 +
                        C50071 * (C50071 * C50227 - (C50221 * ce) / C49932) -
                        (C50071 * C50221 * ce) / C49932;
    const double C1029 =
        (-3 * C50173) / C49932 + C50076 * C50191 + C50227 * C50277;
    const double C1645 = C50263 * (C50071 * C50227 - (C50221 * ce) / C49932);
    const double C780 =
        2 * (C50071 * C50191 - (C50192 * ce) / C49932) +
        C50071 * (C50191 + C50071 * C50261 - (C50256 * ce) / C49932) -
        ((C50192 + C50215 * C50074) * ce) / C49932;
    const double C906 =
        C50263 * (C50191 + C50071 * C50261 - (C50256 * ce) / C49932);
    const double C1169 =
        C50071 * C50191 - (C50192 * ce) / C49932 + C50261 * C50277;
    const double C3167 =
        (-3 * (C50071 * C50251 + C50173 + C50248 * ce)) / C49932 +
        C50071 * ((-2 * C50251) / C49932 - (C50071 * C50366) / C49932 -
                  (C50356 * ce) / C49932) -
        ((2 * C50248 + C50071 * C50356) * ce) / C49932;
    const double C3325 =
        C50263 * ((-2 * C50251) / C49932 - (C50071 * C50366) / C49932 -
                  (C50356 * ce) / C49932);
    const double C3653 =
        -(C50366 * C50277 + C50071 * C50251 + C50173 + C50248 * ce) / C49932;
    const double C50492 = C50489 / C49932;
    const double C50606 = C50568 - C50603;
    const double C765 =
        ((((0 - (C49931 * C49956) / C49932) * ce) / C49932 - (0 * de) / C49961 +
          C49941 / C49932) /
             C49940 -
         ((C49931 * C49975 + 0) * de) / C49932) /
            C49940 -
        ((C49931 * (C49975 / C49940 -
                    ((C49931 * C49976 + C51260) * de) / C49932 + C49970) +
          C51306) *
         de) /
            C49932 +
        C49976 / C49940 - ((C49931 * C49970 + C51044) * de) / C49932;
    const double C766 =
        (C49975 / C49940 - ((C49931 * C49976 + C51260) * de) / C49932 +
         C49970) /
            C49940 -
        ((C49931 *
              (C49976 / C49940 - ((C49931 * C49970 + C51044) * de) / C49932) +
          C51294) *
         de) /
            C49932 +
        2 * (C49970 / C49940 - (0 * de) / C49932);
    const double C767 =
        (C49976 / C49940 - ((C49931 * C49970 + C51044) * de) / C49932) /
            C49940 -
        ((C49931 * (C49970 / C49940 - (0 * de) / C49932) + C1489) * de) /
            C49932;
    const double C1492 =
        C49975 / C49940 - ((C49931 * C49976 + C51260) * de) / C49932 + C49970;
    const double C1493 =
        C49976 / C49940 - ((C49931 * C49970 + C51044) * de) / C49932;
    const double C1385 = C1383 - C1376;
    const double C1384 = C1382 - C1372;
    const double C6729 = C6728 - C1674;
    const double C7102 = C1674 - C7091;
    const double C7101 = C1672 - C7090;
    const double C7100 = C7089 - C1672;
    const double C18221 = C18216 - C8093;
    const double C22836 = C22831 - C18217;
    const double C11015 =
        ((((0 - (C49998 * C50023) / C49999) * ae) / C49999 - (0 * be) / C50028 +
          C50008 / C49999) /
             C50007 -
         ((C49998 * C50042 + 0) * be) / C49999) /
            C50007 -
        ((C49998 * (C50042 / C50007 -
                    ((C49998 * C50043 + C51273) * be) / C49999 + C50037) +
          C51308) *
         be) /
            C49999 +
        C50043 / C50007 - ((C49998 * C50037 + C51143) * be) / C49999;
    const double C11016 =
        (C50042 / C50007 - ((C49998 * C50043 + C51273) * be) / C49999 +
         C50037) /
            C50007 -
        ((C49998 *
              (C50043 / C50007 - ((C49998 * C50037 + C51143) * be) / C49999) +
          C51300) *
         be) /
            C49999 +
        2 * (C50037 / C50007 - (0 * be) / C49999);
    const double C11017 =
        (C50043 / C50007 - ((C49998 * C50037 + C51143) * be) / C49999) /
            C50007 -
        ((C49998 * (C50037 / C50007 - (0 * be) / C49999) + C25800) * be) /
            C49999;
    const double C25803 =
        C50042 / C50007 - ((C49998 * C50043 + C51273) * be) / C49999 + C50037;
    const double C25804 =
        C50043 / C50007 - ((C49998 * C50037 + C51143) * be) / C49999;
    const double C22994 = C22985 + C22986;
    const double C22992 = C22981 + C22982;
    const double C22991 = C22979 + C22980;
    const double C23188 = C23180 + C23181;
    const double C23378 = C23370 + C23369;
    const double C29047 = C23369 + C23370;
    const double C29045 = C23368 + C23367;
    const double C29044 = C23367 + C23368;
    const double C29046 = C23366 + C23365;
    const double C29043 = C23365 + C23366;
    const double C29812 = C23962 + C23961;
    const double C29811 = C23961 + C23962;
    const double C29813 = C23960 + C23959;
    const double C29810 = C23959 + C23960;
    const double C30857 = C24723 + C24724;
    const double C30853 = C24724 + C24723;
    const double C30854 = C24721 + C24722;
    const double C30852 = C24722 + C24721;
    const double C48172 = C29837 + C29836;
    const double C48173 = C29835 + C29834;
    const double C48442 = C30203 + C30202;
    const double C48443 = C30201 + C30200;
    const double C7453 = C7450 + C1911;
    const double C7452 = C7449 - C1911;
    const double C16612 = C16606 - C6458;
    const double C35350 = C35345 + C35346;
    const double C37063 = C37056 + C37057;
    const double C37530 = C37526 + C37527;
    const double C35349 = C35343 + C35344;
    const double C37059 = C37051 + C37052;
    const double C37529 = C37521 + C37522;
    const double C16607 = C16593 - C6459;
    const double C17576 = C6459 - C17575;
    const double C17232 = C7092 - C17226;
    const double C17231 = C17225 - C7092;
    const double C19540 = C19534 + C19535;
    const double C2510 = C2508 * C51157;
    const double C2701 = C2688 - C2699;
    const double C3919 = C3918 - C3916;
    const double C5364 = C5358 + C5362;
    const double C32278 = C32274 + C32275;
    const double C21765 = C21762 - C16615;
    const double C167 = C51127 * C145;
    const double C342 = C51127 * C321;
    const double C2469 = C51143 * C321;
    const double C2681 = C51273 * C321;
    const double C8236 = C8195 * C321;
    const double C22960 = C51143 * C321;
    const double C23172 = C22935 * C321;
    const double C25840 = C51300 * C321;
    const double C508 = C51127 * C492;
    const double C2871 = C51273 * C492;
    const double C23362 = C22935 * C492;
    const double C674 = C51127 * C655;
    const double C2673 = C51143 * C655;
    const double C3051 = C51273 * C655;
    const double C8216 = C8196 * C655;
    const double C8424 = C8195 * C655;
    const double C23164 = C51143 * C655;
    const double C23542 = C22935 * C655;
    const double C25820 = C25800 * C655;
    const double C26028 = C51300 * C655;
    const double C1659 = C51127 * C911;
    const double C2865 = C51143 * C911;
    const double C4275 = C51273 * C911;
    const double C8606 = C8195 * C911;
    const double C23356 = C51143 * C911;
    const double C24718 = C22935 * C911;
    const double C26210 = C51300 * C911;
    const double C1044 = C51127 * C1033;
    const double C3489 = C51273 * C1033;
    const double C23956 = C22935 * C1033;
    const double C13889 = C8196 * C9360;
    const double C19058 = C51143 * C9360;
    const double C45653 = C25800 * C9360;
    const double C48021 = C51143 * C9360;
    const double C14013 = C8196 * C9467;
    const double C19412 = C51143 * C9467;
    const double C21553 = C51127 * C9467;
    const double C45769 = C25800 * C9467;
    const double C48334 = C51143 * C9467;
    const double C8781 = C8771 + C8772;
    const double C26385 = C26375 + C26376;
    const double C9969 = C9959 + C9960;
    const double C27541 = C27531 + C27532;
    const double C29265 = C29258 + C29259;
    const double C35555 = C35548 + C35549;
    const double C9205 = C9195 + C9196;
    const double C16025 = C16021 + C16022;
    const double C20036 = C20029 + C20030;
    const double C26793 = C26783 + C26784;
    const double C30059 = C30048 + C30049;
    const double C9972 = C9965 + C9966;
    const double C27544 = C27537 + C27538;
    const double C29267 = C29262 + C29263;
    const double C35557 = C35552 + C35553;
    const double C9208 = C9201 + C9202;
    const double C16026 = C16023 + C16024;
    const double C20038 = C20033 + C20034;
    const double C26796 = C26789 + C26790;
    const double C30061 = C30052 + C30053;
    const double C50484 = C50478 - C50452;
    const double C8884 =
        (4 * (2 * C50235 + C50071 * C50312 + C50301 * ae) +
         C50071 * (3 * C50312 + C50071 * C50436 + C50421 * ae) +
         (3 * C50301 + C50071 * C50421) * ae) /
        C49999;
    const double C9038 =
        (C50263 * (3 * C50312 + C50071 * C50436 + C50421 * ae)) / C49999;
    const double C9356 =
        (2 * C50235 + C50071 * C50312 + C50301 * ae + C50436 * C50277) / C49999;
    const double C50437 = C50435 - C50420;
    const double C50605 = C50596 + C50602;
    const double C50640 = C50638 - C50630;
    const double C8778 = C8196 * C3169;
    const double C26382 = C25800 * C3169;
    const double C16283 = C16281 * C637;
    const double C18068 = C16281 * C1494;
    const double C19403 = C19067 + C19068;
    const double C48325 = C30055 + C30054;
    const double C21556 = C21554 * C637;
    const double C22731 = C21554 * C1494;
    const double C50582 = C50574 - C50561;
    const double C19254 = C19243 + C19244;
    const double C36080 = C36078 + C36079;
    const double C16284 = C16282 * C632;
    const double C18069 = C16282 * C1489;
    const double C19404 = C19069 + C19070;
    const double C48326 = C30057 + C30056;
    const double C50434 = C50427 + C50431;
    const double C50126 = C50116 + C50125;
    const double C50368 = C50365 + C50345;
    const double C3328 =
        2 * ((-(C50263 * C50152 * ce) / C49932) / C49999 -
             (ae * C50263 * C50151) / C50080 + C50071 * C50374) -
        (ae * C50263 * C50366) / C50080 - (C50263 * C50367 * ce) / C50080 +
        C50071 * (C50374 - (ae * C50263 * C50354) / C50080 -
                  (C50263 * C50357 * ce) / C50080 +
                  C50071 * ((-(C50263 * C50216 * ce) / C49932) / C49999 -
                            (ae * C50263 * C50214) / C50080 +
                            C50071 * C50263 *
                                ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080)));
    const double C3764 =
        (((-2 * C50263 * C50151) / C49932 -
          (C50263 * (C50214 * C50277 + C50151)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50263 * C50152 + C50263 * (C50152 + C50216 * C50277)) * ce) /
            C50080 +
        C50071 *
            (2 * C50374 +
             C50263 *
                 (C50124 +
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080) *
                      C50277));
    const double C6569 =
        3 * (C50107 + C50124 * C50277) +
        C50263 *
            (2 * C50374 +
             C50263 *
                 (C50124 +
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080) *
                      C50277));
    const double C3053 = C51143 * C783;
    const double C8426 = C8196 * C783;
    const double C23544 = C51143 * C783;
    const double C26030 = C25800 * C783;
    const double C4277 = C51143 * C912;
    const double C5839 = C51127 * C912;
    const double C8608 = C8196 * C912;
    const double C24720 = C51143 * C912;
    const double C26212 = C25800 * C912;
    const double C3491 = C51143 * C1172;
    const double C6450 = C51127 * C1172;
    const double C23958 = C51143 * C1172;
    const double C6270 = C51127 * C1257;
    const double C9361 =
        2 * ((-((C50181 + C50201 * C50277) * ce) / C49932) / C49999 -
             (ae * (C50195 * C50277 + C50177)) / C50080 + C50071 * C50536) -
        (ae * (C50486 * C50277 + C50339)) / C50080 -
        ((C50340 + C50487 * C50277) * ce) / C50080 +
        C50071 *
            (C50536 - (ae * (C50466 * C50277 + C50327)) / C50080 -
             ((C50330 + C50469 * C50277) * ce) / C50080 +
             C50071 * ((-((C50201 + C50450 * C50277) * ce) / C49932) / C49999 -
                       (ae * (C50446 * C50277 + C50195)) / C50080 +
                       C50071 * ((-(C50076 *
                                    (C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50277) /
                                  C49932) /
                                     C49999 -
                                 C50444 / C50080)));
    const double C9466 =
        (-2 * C50372) / C50080 + C50263 * C50536 +
        (((-2 * C50263 * C50327) / C49932 -
          (C50263 * (C50466 * C50277 + C50327)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50263 * C50330 + C50263 * (C50330 + C50469 * C50277)) * ce) /
            C50080 +
        C50071 *
            ((((-2 * C50513) / C49932 -
               (C50263 * (C50446 * C50277 + C50195)) / C49932) *
              ae) /
                 C49999 -
             ((2 * C50512 + C50263 * (C50201 + C50450 * C50277)) * ce) /
                 C50080 +
             C50071 * ((-2 * C50514) / C50080 +
                       C50263 * ((-(C50076 *
                                    (C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50277) /
                                  C49932) /
                                     C49999 -
                                 C50444 / C50080)));
    const double C16590 =
        (((-3 * (C50195 * C50277 + C50177)) / C49932 +
          C50263 * ((-2 * C50513) / C49932 -
                    (C50263 * (C50446 * C50277 + C50195)) / C49932)) *
         ae) /
            C49999 -
        ((3 * (C50181 + C50201 * C50277) +
          C50263 * (2 * C50512 + C50263 * (C50201 + C50450 * C50277))) *
         ce) /
            C50080 +
        C50071 *
            (3 * C50536 +
             C50263 * ((-2 * C50514) / C50080 +
                       C50263 * ((-(C50076 *
                                    (C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50277) /
                                  C49932) /
                                     C49999 -
                                 C50444 / C50080)));
    const double C16721 =
        4 * ((-2 * C50372) / C50080 + C50263 * C50536) +
        C50263 *
            (3 * C50536 +
             C50263 * ((-2 * C50514) / C50080 +
                       C50263 * ((-(C50076 *
                                    (C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50277) /
                                  C49932) /
                                     C49999 -
                                 C50444 / C50080)));
    const double C50662 = C50661 + C50660;
    const double C50667 = C50666 + C50665;
    const double C50495 = C50493 + C50477;
    const double C50610 = C50071 * C50607;
    const double C11753 =
        (2 * C50263 * C50436 + C50263 * (C50436 + C50607 * C50277)) / C49999;
    const double C50494 = C50456 - C50492;
    const double C50609 = C50606 - C50586;
    const double C1508 = C172 * C1492;
    const double C1502 = C170 * C1492;
    const double C1496 = C168 * C1492;
    const double C6885 = C515 * C1492;
    const double C6879 = C513 * C1492;
    const double C7941 = C5672 * C1492;
    const double C17025 = C1049 * C1492;
    const double C18064 = C6272 * C1492;
    const double C22727 = C6577 * C1492;
    const double C1510 = C355 * C1493;
    const double C1504 = C352 * C1493;
    const double C1498 = C349 * C1493;
    const double C6887 = C1668 * C1493;
    const double C6881 = C1666 * C1493;
    const double C7943 = C6102 * C1493;
    const double C17027 = C6453 * C1493;
    const double C18066 = C6451 * C1493;
    const double C22729 = C16608 * C1493;
    const double C1386 = C1384 - C1373;
    const double C7104 = C7101 + C1673;
    const double C7103 = C7100 - C1673;
    const double C18222 = C18221 - C8096;
    const double C22837 = C22836 - C18220;
    const double C25837 = C25803 * C133;
    const double C25831 = C25803 * C122;
    const double C25829 = C25803 * C121;
    const double C25823 = C25803 * C131;
    const double C25813 = C25803 * C129;
    const double C25807 = C25803 * C120;
    const double C26025 = C25803 * C311;
    const double C26019 = C25803 * C302;
    const double C26017 = C25803 * C309;
    const double C26011 = C25803 * C301;
    const double C26207 = C25803 * C481;
    const double C26201 = C25803 * C473;
    const double C26195 = C25803 * C479;
    const double C26189 = C25803 * C472;
    const double C26377 = C25803 * C646;
    const double C26371 = C25803 * C639;
    const double C26785 = C25803 * C1024;
    const double C26779 = C25803 * C1017;
    const double C27533 = C25803 * C896;
    const double C27527 = C25803 * C885;
    const double C44894 = C25803 * C486;
    const double C44888 = C25803 * C476;
    const double C45314 = C25803 * C894;
    const double C45308 = C25803 * C884;
    const double C45306 = C25803 * C892;
    const double C45300 = C25803 * C883;
    const double C45488 = C25803 * C1016;
    const double C45482 = C25803 * C1022;
    const double C45648 = C25803 * C1163;
    const double C45642 = C25803 * C1158;
    const double C45764 = C25803 * C1254;
    const double C45758 = C25803 * C1247;
    const double C25839 = C25804 * C313;
    const double C25833 = C25804 * C303;
    const double C25827 = C25804 * C302;
    const double C25821 = C25804 * C311;
    const double C25815 = C25804 * C309;
    const double C25809 = C25804 * C301;
    const double C26027 = C25804 * C648;
    const double C26021 = C25804 * C640;
    const double C26015 = C25804 * C646;
    const double C26009 = C25804 * C639;
    const double C26209 = C25804 * C900;
    const double C26203 = C25804 * C887;
    const double C26197 = C25804 * C896;
    const double C26191 = C25804 * C885;
    const double C26379 = C25804 * C776;
    const double C26373 = C25804 * C770;
    const double C26787 = C25804 * C1165;
    const double C26781 = C25804 * C1159;
    const double C27535 = C25804 * C898;
    const double C27529 = C25804 * C886;
    const double C44896 = C25804 * C892;
    const double C44890 = C25804 * C883;
    const double C45316 = C25804 * C3321;
    const double C45310 = C25804 * C3317;
    const double C45304 = C25804 * C894;
    const double C45298 = C25804 * C884;
    const double C45486 = C25804 * C1158;
    const double C45480 = C25804 * C1163;
    const double C45650 = C25804 * C3649;
    const double C45644 = C25804 * C3645;
    const double C45766 = C25804 * C3762;
    const double C45760 = C25804 * C3757;
    const double C22998 = C22994 * C118;
    const double C22996 = C22992 * C51028;
    const double C23158 = C22992 * C51260;
    const double C24358 = C22992 * C1358;
    const double C22995 = C22991 * C118;
    const double C23157 = C22991 * C298;
    const double C24357 = C22991 * C1363;
    const double C23190 = C23188 * C299;
    const double C24359 = C23188 * C1364;
    const double C23380 = C23378 * C118;
    const double C29057 = C29047 * C118;
    const double C29055 = C29045 * C51028;
    const double C30855 = C29045 * C1358;
    const double C31325 = C29045 * C51260;
    const double C29054 = C29044 * C51028;
    const double C30851 = C29044 * C1358;
    const double C31321 = C29044 * C51260;
    const double C29056 = C29046 * C118;
    const double C30856 = C29046 * C1363;
    const double C31326 = C29046 * C298;
    const double C29053 = C29043 * C118;
    const double C30850 = C29043 * C1363;
    const double C31320 = C29043 * C298;
    const double C29832 = C29812 * C51028;
    const double C29831 = C29811 * C51028;
    const double C29833 = C29813 * C118;
    const double C29830 = C29810 * C118;
    const double C30863 = C30857 * C51044;
    const double C31327 = C30857 * C51044;
    const double C30860 = C30853 * C51044;
    const double C31323 = C30853 * C51044;
    const double C30861 = C30854 * C1364;
    const double C31324 = C30854 * C299;
    const double C30859 = C30852 * C1364;
    const double C31322 = C30852 * C299;
    const double C48174 = C48172 * C118;
    const double C48323 = C48172 * C298;
    const double C49917 = C48172 * C1363;
    const double C48175 = C48173 * C51028;
    const double C48324 = C48173 * C51260;
    const double C49918 = C48173 * C1358;
    const double C48452 = C48442 * C51028;
    const double C48453 = C48443 * C118;
    const double C37066 = C37062 - C37063;
    const double C37532 = C37525 - C37530;
    const double C37065 = C37059 - C37060;
    const double C37531 = C37529 - C37523;
    const double C16613 = C16607 - C6460;
    const double C17577 = C17576 + C6460;
    const double C17234 = C17232 + C7095;
    const double C17233 = C17231 - C7095;
    const double C177 = C166 + C167;
    const double C356 = C341 + C342;
    const double C2492 = C2468 + C2469;
    const double C2695 = C2680 + C2681;
    const double C8255 = C8235 + C8236;
    const double C22983 = C22959 + C22960;
    const double C23186 = C23171 + C23172;
    const double C518 = C507 + C508;
    const double C2884 = C2870 + C2871;
    const double C23375 = C23361 + C23362;
    const double C686 = C673 + C674;
    const double C2691 = C2672 + C2673;
    const double C3060 = C3050 + C3051;
    const double C8245 = C8215 + C8216;
    const double C8437 = C8423 + C8424;
    const double C23182 = C23163 + C23164;
    const double C23551 = C23541 + C23542;
    const double C25849 = C25819 + C25820;
    const double C1669 = C1658 + C1659;
    const double C2881 = C2864 + C2865;
    const double C4284 = C4274 + C4275;
    const double C8619 = C8605 + C8606;
    const double C23372 = C23355 + C23356;
    const double C24727 = C24717 + C24718;
    const double C1052 = C1043 + C1044;
    const double C3498 = C3488 + C3489;
    const double C23965 = C23955 + C23956;
    const double C14019 = C14012 + C14013;
    const double C19419 = C19411 + C19412;
    const double C21555 = C21552 + C21553;
    const double C45775 = C45768 + C45769;
    const double C48341 = C48333 + C48334;
    const double C16027 = C16025 * C637;
    const double C17029 = C16025 * C1494;
    const double C16028 = C16026 * C632;
    const double C17030 = C16026 * C1489;
    const double C50491 = C50484 + C50488;
    const double C13549 = C8196 * C9038;
    const double C45313 = C25800 * C9038;
    const double C13883 = C8196 * C9356;
    const double C19054 = C51143 * C9356;
    const double C45647 = C25800 * C9356;
    const double C48017 = C51143 * C9356;
    const double C9042 =
        3 * ((-(ae * C50263 * C50299) / C49932) / C49999 - C50370 / C50080 -
             (C50263 * C50302 * ce) / C50080 + C50071 * C50510) +
        (C50263 * C50437 * ae) / C49999 - (C50263 * C50436 * ce) / C50080 +
        C50071 *
            (2 * C50510 - (ae * C50263 * C50425) / C50080 -
             (C50263 * C50426 * ce) / C50080 +
             C50071 * ((-(ae * C50263 * C50405) / C49932) / C49999 -
                       C50500 / C50080 - (C50263 * C50408 * ce) / C50080 +
                       C50071 * ((-(C50263 * C50148 * ce) / C49932) / C49999 -
                                 (ae * C50263 * C50147) / C50080 -
                                 (C50071 * C50263 * C50119) / C50080)));
    const double C8885 =
        4 * ((-2 * C50234) / C49932 - (C50071 * C50311) / C49932 -
             (C50301 * ce) / C49932) +
        C50071 * ((-3 * C50311) / C49932 + C50071 * C50437 -
                  (C50421 * ce) / C49932) -
        ((3 * C50301 + C50071 * C50421) * ce) / C49932;
    const double C9039 = C50263 * ((-3 * C50311) / C49932 + C50071 * C50437 -
                                   (C50421 * ce) / C49932);
    const double C9357 = (-2 * C50234) / C49932 - (C50071 * C50311) / C49932 -
                         (C50301 * ce) / C49932 + C50437 * C50277;
    const double C50608 = C50071 * C50605;
    const double C50643 = C50640 + C50642;
    const double C8784 = C8777 + C8778;
    const double C26388 = C26381 + C26382;
    const double C19414 = C19403 * C299;
    const double C21013 = C19403 * C1364;
    const double C48336 = C48325 * C299;
    const double C49919 = C48325 * C1364;
    const double C19415 = C19404 * C51044;
    const double C21014 = C19404 * C51044;
    const double C48337 = C48326 * C51044;
    const double C49920 = C48326 * C51044;
    const double C8888 =
        4 * (2 * C50313 - (ae * C50311) / C50080 - (C50312 * ce) / C50080 +
             C50071 * C50434) +
        (((-3 * C50311) / C49932 + C50071 * C50437 - (C50421 * ce) / C49932) *
         ae) /
            C49999 -
        ((3 * C50312 + C50071 * C50436 + C50421 * ae) * ce) / C50080 +
        C50071 *
            (3 * C50434 + (C50437 * ae) / C49999 - (C50436 * ce) / C50080 +
             C50071 *
                 (2 * C50428 - (ae * C50425) / C50080 - (C50426 * ce) / C50080 +
                  C50071 * ((-(ae * C50405) / C49932) / C49999 - C50113 -
                            (C50408 * ce) / C50080 +
                            C50071 * ((-(C50148 * ce) / C49932) / C49999 -
                                      (ae * C50147) / C50080 -
                                      (C50071 * C50119) / C50080))));
    const double C146 =
        5 * (3 * C50107 + C50076 * C50126) +
        C50076 * (4 * C50126 +
                  C50076 * (3 * C50124 +
                            C50076 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C322 =
        (((-3 * (C50142 * C50089 + C50137)) / C49932 +
          C50076 * ((-2 * C50076 * C50142) / C49932 -
                    (C50076 * (C50097 * C50096 * C50133 * C50089 + C50142)) /
                        C49932)) *
         ae) /
            C49999 -
        ((3 * (C50138 + C50143 * C50089) +
          C50076 * (2 * C50076 * C50143 +
                    C50076 * (C50143 + C50097 * C50096 * C50132 * C50089))) *
         ce) /
            C50080 +
        C50071 * (3 * C50107 + C50076 * C50126);
    const double C323 =
        ((4 * ((-2 * C50076 * C50142) / C49932 - (C50076 * C50151) / C49932) +
          C50076 * ((-3 * C50151) / C49932 +
                    C50076 * ((-2 * C50076 * C50147) / C49932 -
                              (C50076 *
                               (C50112 * C50111 * C50133 * C50089 + C50147)) /
                                  C49932))) *
         ae) /
            C49999 -
        ((4 * (2 * C50076 * C50143 + C50076 * C50152) +
          C50076 * (3 * C50152 +
                    C50076 * (2 * C50076 * C50148 +
                              C50076 * (C50148 +
                                        C50112 * C50111 * C50132 * C50089)))) *
         ce) /
            C50080 +
        C50071 * (4 * C50126 +
                  C50076 * (3 * C50124 +
                            C50076 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C493 = (zP - zQ) * (3 * C50107 + C50076 * C50126);
    const double C495 =
        (zP - zQ) *
        (4 * C50126 +
         C50076 *
             (3 * C50124 +
              C50076 * ((-2 * C50076 * C50119) / C50080 +
                        C50076 * ((-((C50111 * C50112 +
                                      C50074 * bs[8] * std::pow(C50067, 8)) *
                                     C50072 * C50089) /
                                   C49932) /
                                      C49999 -
                                  C50119 / C50080))));
    const double C656 =
        (-2 * C50076 * C50093) / C50080 + C50076 * C50107 +
        ((C50071 * C50191 - (C50192 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50190 + C50192 * ae) * ce) / C50080 +
        C50071 *
            ((C50191 * ae) / C49999 - (C50190 * ce) / C50080 + C50071 * C50126);
    const double C657 =
        3 * C50107 + C50076 * C50126 +
        ((C50071 * C50227 - (C50221 * ce) / C49932) * ae) / C49999 -
        ((C50071 * C50226 + C50221 * ae) * ce) / C50080 +
        C50071 * ((C50227 * ae) / C49999 - (C50226 * ce) / C50080 +
                  C50071 * (3 * C50124 +
                            C50076 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C784 =
        2 * ((C50191 * ae) / C49999 - (C50190 * ce) / C50080 +
             C50071 * C50126) +
        ((C50191 + C50071 * C50261 - (C50256 * ce) / C49932) * ae) / C49999 -
        ((C50190 + C50071 * C50260 + C50256 * ae) * ce) / C50080 +
        C50071 * (C50126 + (C50261 * ae) / C49999 - (C50260 * ce) / C50080 +
                  C50071 * ((C50223 * ae) / C49999 - (C50222 * ce) / C50080 +
                            C50071 * ((-2 * C50076 * C50119) / C50080 +
                                      C50076 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50089) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C913 = (C50263 * C50191 * ae) / C49999 -
                        (C50263 * C50190 * ce) / C50080 +
                        C50071 * C50263 * C50126;
    const double C914 =
        C50263 * C50126 + (C50263 * C50261 * ae) / C49999 -
        (C50263 * C50260 * ce) / C50080 +
        C50071 *
            ((C50263 * C50223 * ae) / C49999 - (C50263 * C50222 * ce) / C50080 +
             C50071 * C50263 *
                 ((-2 * C50076 * C50119) / C50080 +
                  C50076 * ((-((C50111 * C50112 +
                                C50074 * bs[8] * std::pow(C50067, 8)) *
                               C50072 * C50089) /
                             C49932) /
                                C49999 -
                            C50119 / C50080)));
    const double C1034 =
        (-2 * C50237) / C50080 + C50076 * C50107 + C50126 * std::pow(C50263, 2);
    const double C1035 =
        3 * C50107 + C50076 * C50126 +
        (3 * C50124 +
         C50076 *
             ((-2 * C50076 * C50119) / C50080 +
              C50076 *
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080))) *
            std::pow(C50263, 2);
    const double C1173 =
        ((C50191 + C50223 * C50277) * ae) / C49999 -
        ((C50190 + C50222 * C50277) * ce) / C50080 +
        C50071 *
            (C50126 +
             ((-2 * C50076 * C50119) / C50080 +
              C50076 *
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080)) *
                 C50277);
    const double C1256 =
        2 * C50263 * C50126 +
        C50263 *
            (C50126 +
             ((-2 * C50076 * C50119) / C50080 +
              C50076 *
                  ((-((C50111 * C50112 + C50074 * bs[8] * std::pow(C50067, 8)) *
                      C50072 * C50089) /
                    C49932) /
                       C49999 -
                   C50119 / C50080)) *
                 C50277);
    const double C3170 =
        3 * (C50107 - (ae * C50251) / C50080 - (C50252 * ce) / C50080 +
             C50071 * C50368) +
        (((-2 * C50251) / C49932 - (C50071 * C50366) / C49932 -
          (C50356 * ce) / C49932) *
         ae) /
            C49999 -
        ((2 * C50252 + C50071 * C50367 + C50356 * ae) * ce) / C50080 +
        C50071 *
            (2 * C50368 - (ae * C50366) / C50080 - (C50367 * ce) / C50080 +
             C50071 *
                 (C50124 - (ae * C50354) / C50080 - (C50357 * ce) / C50080 +
                  C50071 *
                      ((-(C50216 * ce) / C49932) / C49999 -
                       (ae * C50214) / C50080 +
                       C50071 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50089) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080))));
    const double C3061 = C3052 + C3053;
    const double C8438 = C8425 + C8426;
    const double C23552 = C23543 + C23544;
    const double C26042 = C26029 + C26030;
    const double C4285 = C4276 + C4277;
    const double C5843 = C5838 + C5839;
    const double C8620 = C8607 + C8608;
    const double C24728 = C24719 + C24720;
    const double C26224 = C26211 + C26212;
    const double C3499 = C3490 + C3491;
    const double C6456 = C6449 + C6450;
    const double C23966 = C23957 + C23958;
    const double C6276 = C6269 + C6270;
    const double C11754 =
        2 * ((((-2 * C50499) / C49932 - (C50263 * C50649) / C49932) * ae) /
                 C49999 -
             ((2 * C50498 + C50263 * C50648) * ce) / C50080 + C50071 * C50667) +
        (((-2 * C50263 * C50425) / C49932 -
          (C50263 * (C50591 * C50277 + C50425)) / C49932) *
         ae) /
            C49999 -
        ((2 * C50263 * C50426 + C50263 * (C50426 + C50594 * C50277)) * ce) /
            C50080 +
        C50071 *
            (C50667 +
             (((-2 * C50618) / C49932 -
               (C50263 * (C50569 * C50277 + C50405)) / C49932) *
              ae) /
                 C49999 -
             ((2 * C50620 + C50263 * (C50408 + C50572 * C50277)) * ce) /
                 C50080 +
             C50071 *
                 ((((-2 * C50622) / C49932 -
                    (C50263 * (C50205 * C50277 + C50147)) / C49932) *
                   ae) /
                      C49999 -
                  ((2 * C50621 + C50263 * (C50148 + C50209 * C50277)) * ce) /
                      C50080 +
                  C50071 *
                      ((-2 * C50623) / C50080 +
                       C50263 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50277) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080))));
    const double C13999 =
        3 * C50530 + C50263 * C50667 +
        (((-3 * (C50405 * C50277 + C50299)) / C49932 +
          C50263 * ((-2 * C50618) / C49932 -
                    (C50263 * (C50569 * C50277 + C50405)) / C49932)) *
         ae) /
            C49999 -
        ((3 * (C50302 + C50408 * C50277) +
          C50263 * (2 * C50620 + C50263 * (C50408 + C50572 * C50277))) *
         ce) /
            C50080 +
        C50071 *
            ((((-3 * C50649) / C49932 +
               C50263 * ((-2 * C50622) / C49932 -
                         (C50263 * (C50205 * C50277 + C50147)) / C49932)) *
              ae) /
                 C49999 -
             ((3 * C50648 +
               C50263 * (2 * C50621 + C50263 * (C50148 + C50209 * C50277))) *
              ce) /
                 C50080 +
             C50071 *
                 (3 * C50658 +
                  C50263 *
                      ((-2 * C50623) / C50080 +
                       C50263 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50277) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080))));
    const double C14000 =
        (((-3 * (C50142 * C50277 + C50137)) / C49932 +
          C50263 * ((-2 * C50499) / C49932 - (C50263 * C50649) / C49932)) *
         ae) /
            C49999 -
        ((3 * (C50138 + C50143 * C50277) +
          C50263 * (2 * C50498 + C50263 * C50648)) *
         ce) /
            C50080 +
        C50071 * (3 * C50530 + C50263 * C50667);
    const double C16722 = 4 * ((-2 * C50370) / C50080 + C50263 * C50530) +
                          C50263 * (3 * C50530 + C50263 * C50667);
    const double C19522 =
        ((4 * ((-2 * C50499) / C49932 - (C50263 * C50649) / C49932) +
          C50263 *
              ((-3 * C50649) / C49932 +
               C50263 * ((-2 * C50622) / C49932 -
                         (C50263 * (C50205 * C50277 + C50147)) / C49932))) *
         ae) /
            C49999 -
        ((4 * (2 * C50498 + C50263 * C50648) +
          C50263 *
              (3 * C50648 +
               C50263 * (2 * C50621 + C50263 * (C50148 + C50209 * C50277)))) *
         ce) /
            C50080 +
        C50071 * (4 * C50667 +
                  C50263 * (3 * C50658 +
                            C50263 * ((-2 * C50623) / C50080 +
                                      C50263 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50277) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C21836 =
        5 * (3 * C50530 + C50263 * C50667) +
        C50263 * (4 * C50667 +
                  C50263 * (3 * C50658 +
                            C50263 * ((-2 * C50623) / C50080 +
                                      C50263 * ((-((C50111 * C50112 +
                                                    C50074 * bs[8] *
                                                        std::pow(C50067, 8)) *
                                                   C50072 * C50277) /
                                                 C49932) /
                                                    C49999 -
                                                C50119 / C50080))));
    const double C8886 =
        (4 * (2 * C50244 + C50071 * C50340 + C50329 * ae) +
         C50071 * (3 * C50340 + C50071 * C50495 + C50482 * ae) +
         (3 * C50329 + C50071 * C50482) * ae) /
        C49999;
    const double C9040 =
        (C50263 * (3 * C50340 + C50071 * C50495 + C50482 * ae)) / C49999;
    const double C9358 =
        (2 * C50244 + C50071 * C50340 + C50329 * ae + C50495 * C50277) / C49999;
    const double C50613 = C50556 + C50610;
    const double C50496 = C50494 - C50481;
    const double C50612 = C50071 * C50609;
    const double C11684 =
        3 * (C50530 - (ae * (C50405 * C50277 + C50299)) / C50080 -
             ((C50302 + C50408 * C50277) * ce) / C50080 + C50071 * C50662) +
        ((C50437 + C50609 * C50277) * ae) / C49999 -
        ((C50436 + C50607 * C50277) * ce) / C50080 +
        C50071 *
            (2 * C50662 - (ae * (C50591 * C50277 + C50425)) / C50080 -
             ((C50426 + C50594 * C50277) * ce) / C50080 +
             C50071 *
                 (C50658 - (ae * (C50569 * C50277 + C50405)) / C50080 -
                  ((C50408 + C50572 * C50277) * ce) / C50080 +
                  C50071 *
                      ((-((C50148 + C50209 * C50277) * ce) / C49932) / C49999 -
                       (ae * (C50205 * C50277 + C50147)) / C50080 +
                       C50071 * ((-((C50111 * C50112 +
                                     C50074 * bs[8] * std::pow(C50067, 8)) *
                                    C50072 * C50277) /
                                  C49932) /
                                     C49999 -
                                 C50119 / C50080))));
    const double C11752 =
        2 * C50263 * C50437 + C50263 * (C50437 + C50609 * C50277);
    const double C1388 = C1386 * C51157;
    const double C6727 = C1386 * C51275;
    const double C33504 = C1386 * C32271;
    const double C25858 = C25837 + C25838;
    const double C25855 = C25831 + C25832;
    const double C25854 = C25829 + C25830;
    const double C25851 = C25823 + C25824;
    const double C25846 = C25813 + C25814;
    const double C25843 = C25807 + C25808;
    const double C26040 = C26025 + C26026;
    const double C26037 = C26019 + C26020;
    const double C26036 = C26017 + C26018;
    const double C26033 = C26011 + C26012;
    const double C26222 = C26207 + C26208;
    const double C26219 = C26201 + C26202;
    const double C26216 = C26195 + C26196;
    const double C26213 = C26189 + C26190;
    const double C26386 = C26377 + C26378;
    const double C26383 = C26371 + C26372;
    const double C26794 = C26785 + C26786;
    const double C26791 = C26779 + C26780;
    const double C27542 = C27533 + C27534;
    const double C27539 = C27527 + C27528;
    const double C44903 = C44894 + C44895;
    const double C44900 = C44888 + C44889;
    const double C45329 = C45314 + C45315;
    const double C45326 = C45308 + C45309;
    const double C45325 = C45306 + C45307;
    const double C45322 = C45300 + C45301;
    const double C45495 = C45488 + C45489;
    const double C45492 = C45482 + C45483;
    const double C45657 = C45648 + C45649;
    const double C45654 = C45642 + C45643;
    const double C45773 = C45764 + C45765;
    const double C45770 = C45758 + C45759;
    const double C25859 = C25839 + C25840;
    const double C25856 = C25833 + C25834;
    const double C25853 = C25827 + C25828;
    const double C25850 = C25821 + C25822;
    const double C25847 = C25815 + C25816;
    const double C25844 = C25809 + C25810;
    const double C26041 = C26027 + C26028;
    const double C26038 = C26021 + C26022;
    const double C26035 = C26015 + C26016;
    const double C26032 = C26009 + C26010;
    const double C26223 = C26209 + C26210;
    const double C26220 = C26203 + C26204;
    const double C26217 = C26197 + C26198;
    const double C26214 = C26191 + C26192;
    const double C26387 = C26379 + C26380;
    const double C26384 = C26373 + C26374;
    const double C26795 = C26787 + C26788;
    const double C26792 = C26781 + C26782;
    const double C27543 = C27535 + C27536;
    const double C27540 = C27529 + C27530;
    const double C44904 = C44896 + C44897;
    const double C44901 = C44890 + C44891;
    const double C45330 = C45316 + C45317;
    const double C45327 = C45310 + C45311;
    const double C45324 = C45304 + C45305;
    const double C45321 = C45298 + C45299;
    const double C45494 = C45486 + C45487;
    const double C45491 = C45480 + C45481;
    const double C45658 = C45650 + C45651;
    const double C45655 = C45644 + C45645;
    const double C45774 = C45766 + C45767;
    const double C45771 = C45760 + C45761;
    const double C22999 = C22995 + C22996;
    const double C23179 = C23157 + C23158;
    const double C24361 = C24357 + C24358;
    const double C29060 = C29055 + C29056;
    const double C30862 = C30855 + C30856;
    const double C31329 = C31325 + C31326;
    const double C29059 = C29053 + C29054;
    const double C30858 = C30850 + C30851;
    const double C31328 = C31320 + C31321;
    const double C29843 = C29832 + C29833;
    const double C29842 = C29830 + C29831;
    const double C48176 = C48174 + C48175;
    const double C48335 = C48323 + C48324;
    const double C49921 = C49917 + C49918;
    const double C48458 = C48452 + C48453;
    const double C37068 = C37066 + C37064;
    const double C37534 = C37532 + C37528;
    const double C37067 = C37065 - C37061;
    const double C37533 = C37531 - C37524;
    const double C187 = C177 * C51028;
    const double C364 = C356 * C51044;
    const double C678 = C356 * C631;
    const double C1377 = C356 * C51044;
    const double C1511 = C356 * C51294;
    const double C2502 = C2492 + C2493;
    const double C22993 = C22983 + C22984;
    const double C526 = C518 * C51028;
    const double C1662 = C518 * C1358;
    const double C1917 = C518 * C51260;
    const double C692 = C686 * C632;
    const double C1507 = C686 * C1489;
    const double C2698 = C2691 + C2692;
    const double C23189 = C23182 + C23183;
    const double C1675 = C1669 * C51044;
    const double C1915 = C1669 * C51044;
    const double C5835 = C1669 * C631;
    const double C6888 = C1669 * C51294;
    const double C2886 = C2881 + C2880;
    const double C35342 = C2880 + C2881;
    const double C23377 = C23372 + C23371;
    const double C29048 = C23371 + C23372;
    const double C1058 = C1052 * C51028;
    const double C6447 = C1052 * C51260;
    const double C7097 = C1052 * C1358;
    const double C21557 = C21555 * C632;
    const double C22732 = C21555 * C1489;
    const double C13564 = C13548 + C13549;
    const double C45328 = C45312 + C45313;
    const double C13892 = C13882 + C13883;
    const double C19072 = C19053 + C19054;
    const double C45656 = C45646 + C45647;
    const double C48023 = C48016 + C48017;
    const double C13555 = C8196 * C9042;
    const double C45319 = C25800 * C9042;
    const double C13554 = C8201 * C9039;
    const double C45318 = C25805 * C9039;
    const double C13888 = C8201 * C9357;
    const double C19057 = C2450 * C9357;
    const double C45652 = C25805 * C9357;
    const double C48020 = C22941 * C9357;
    const double C50611 = C50582 + C50608;
    const double C19420 = C19413 - C19414;
    const double C21016 = C21015 - C21013;
    const double C348 = C51127 * C322;
    const double C2483 = C51143 * C322;
    const double C22974 = C51143 * C322;
    const double C512 = C51127 * C493;
    const double C682 = C51127 * C656;
    const double C2683 = C51143 * C656;
    const double C8238 = C8196 * C656;
    const double C23174 = C51143 * C656;
    const double C25842 = C25800 * C656;
    const double C1665 = C51127 * C913;
    const double C2873 = C51143 * C913;
    const double C23364 = C51143 * C913;
    const double C1048 = C51127 * C1034;
    const double C5847 = C5843 * C632;
    const double C6890 = C5843 * C1489;
    const double C6462 = C6456 * C51044;
    const double C7099 = C6456 * C51044;
    const double C6282 = C6276 * C51028;
    const double C19533 = C51143 * C14000;
    const double C21761 = C51127 * C14000;
    const double C48451 = C51143 * C14000;
    const double C21842 = C51127 * C16722;
    const double C50615 = C50613 + C50595;
    const double C8889 =
        4 * (2 * C50341 - (ae * C50339) / C50080 - (C50340 * ce) / C50080 +
             C50071 * C50491) +
        (((-3 * C50339) / C49932 + C50071 * C50496 - (C50482 * ce) / C49932) *
         ae) /
            C49999 -
        ((3 * C50340 + C50071 * C50495 + C50482 * ae) * ce) / C50080 +
        C50071 *
            (3 * C50491 + (C50496 * ae) / C49999 - (C50495 * ce) / C50080 +
             C50071 *
                 (2 * C50485 - (ae * C50486) / C50080 - (C50487 * ce) / C50080 +
                  C50071 * ((-(ae * C50466) / C49932) / C49999 -
                            C50444 / C50080 - (C50469 * ce) / C50080 +
                            C50071 * ((-(C50450 * ce) / C49932) / C49999 -
                                      (ae * C50446) / C50080 -
                                      (C50071 * C50076 *
                                       (C50111 * C50112 +
                                        C50074 * bs[8] * std::pow(C50067, 8)) *
                                       C50072) /
                                          C50080))));
    const double C9043 =
        3 * ((-(ae * C50263 * C50327) / C49932) / C49999 - C50372 / C50080 -
             (C50263 * C50330 * ce) / C50080 + C50071 * C50524) +
        (C50263 * C50496 * ae) / C49999 - (C50263 * C50495 * ce) / C50080 +
        C50071 *
            (2 * C50524 - (ae * C50263 * C50486) / C50080 -
             (C50263 * C50487 * ce) / C50080 +
             C50071 * ((-(ae * C50263 * C50466) / C49932) / C49999 -
                       C50514 / C50080 - (C50263 * C50469 * ce) / C50080 +
                       C50071 * ((-(C50263 * C50450 * ce) / C49932) / C49999 -
                                 (ae * C50263 * C50446) / C50080 -
                                 (C50071 * C50263 * C50076 *
                                  (C50111 * C50112 +
                                   C50074 * bs[8] * std::pow(C50067, 8)) *
                                  C50072) /
                                     C50080)));
    const double C8887 =
        4 * ((-2 * C50243) / C49932 - (C50071 * C50339) / C49932 -
             (C50329 * ce) / C49932) +
        C50071 * ((-3 * C50339) / C49932 + C50071 * C50496 -
                  (C50482 * ce) / C49932) -
        ((3 * C50329 + C50071 * C50482) * ce) / C49932;
    const double C9041 = C50263 * ((-3 * C50339) / C49932 + C50071 * C50496 -
                                   (C50482 * ce) / C49932);
    const double C9359 = (-2 * C50243) / C49932 - (C50071 * C50339) / C49932 -
                         (C50329 * ce) / C49932 + C50496 * C50277;
    const double C50614 = C50567 + C50612;
    const double C23001 = C22999 * C51157;
    const double C23192 = C23179 - C23190;
    const double C24362 = C24361 - C24359;
    const double C30865 = C30861 - C30862;
    const double C31331 = C31324 - C31329;
    const double C30864 = C30858 - C30859;
    const double C31330 = C31328 - C31322;
    const double C48342 = C48335 - C48336;
    const double C49922 = C49921 - C49919;
    const double C370 = C368 - C364;
    const double C1387 = C1385 - C1377;
    const double C2506 = C2502 * C51028;
    const double C22997 = C22993 * C51028;
    const double C529 = C526 + C525;
    const double C5669 = C525 + C526;
    const double C2700 = C2698 * C51044;
    const double C3917 = C2698 * C51044;
    const double C23191 = C23189 * C51044;
    const double C24360 = C23189 * C51044;
    const double C6730 = C6729 - C1675;
    const double C7105 = C7102 + C1675;
    const double C5514 = C5513 - C1915;
    const double C7454 = C7451 + C1915;
    const double C2888 = C2886 * C51028;
    const double C35348 = C35342 * C51028;
    const double C23379 = C23377 * C51028;
    const double C29058 = C29048 * C51028;
    const double C5670 = C1058 + C1057;
    const double C6257 = C1057 + C1058;
    const double C13567 = C13554 + C13555;
    const double C45331 = C45318 + C45319;
    const double C13895 = C13888 + C13889;
    const double C19074 = C19057 + C19058;
    const double C45659 = C45652 + C45653;
    const double C48025 = C48020 + C48021;
    const double C19421 = C19420 - C19415;
    const double C21017 = C21016 - C21014;
    const double C358 = C347 + C348;
    const double C2499 = C2482 + C2483;
    const double C22990 = C22973 + C22974;
    const double C520 = C511 + C512;
    const double C688 = C681 + C682;
    const double C2696 = C2682 + C2683;
    const double C8256 = C8237 + C8238;
    const double C23187 = C23173 + C23174;
    const double C25860 = C25841 + C25842;
    const double C1671 = C1664 + C1665;
    const double C2885 = C2872 + C2873;
    const double C23376 = C23363 + C23364;
    const double C1054 = C1047 + C1048;
    const double C19539 = C19532 + C19533;
    const double C21764 = C21760 + C21761;
    const double C48457 = C48450 + C48451;
    const double C21844 = C21841 + C21842;
    const double C11380 =
        (5 * (3 * C50312 + C50071 * C50436 + C50421 * ae) +
         C50071 * (4 * C50436 + C50071 * C50615 + C50600 * ae) +
         (4 * C50421 + C50071 * C50600) * ae) /
        C49999;
    const double C11482 =
        (C50263 * (4 * C50436 + C50071 * C50615 + C50600 * ae)) / C49999;
    const double C11682 =
        (3 * C50312 + C50071 * C50436 + C50421 * ae + C50615 * C50277) / C49999;
    const double C50616 = C50614 - C50599;
    const double C30867 = C30865 + C30863;
    const double C31333 = C31331 + C31327;
    const double C30866 = C30864 - C30860;
    const double C31332 = C31330 - C31323;
    const double C48343 = C48342 - C48337;
    const double C49923 = C49922 - C49920;
    const double C372 = C370 * C51157;
    const double C1389 = C1387 * C51157;
    const double C2509 = C2506 + C2507;
    const double C23000 = C22997 + C22998;
    const double C531 = C529 * C51157;
    const double C5360 = C529 * C51169;
    const double C32276 = C529 * C51169;
    const double C2702 = C2701 - C2700;
    const double C3920 = C3919 - C3917;
    const double C23193 = C23192 - C23191;
    const double C24363 = C24362 - C24360;
    const double C6731 = C6730 * C51169;
    const double C33505 = C6730 * C51169;
    const double C5515 = C5514 * C51169;
    const double C32427 = C5514 * C51169;
    const double C2890 = C2888 + C2889;
    const double C35351 = C35347 + C35348;
    const double C23381 = C23379 + C23380;
    const double C29061 = C29057 + C29058;
    const double C5674 = C5670 * C51169;
    const double C32575 = C5670 * C51169;
    const double C366 = C358 * C51044;
    const double C1381 = C358 * C51044;
    const double C528 = C520 * C51028;
    const double C694 = C688 * C632;
    const double C1513 = C688 * C1489;
    const double C1677 = C1671 * C51044;
    const double C1919 = C1671 * C51044;
    const double C1060 = C1054 * C51028;
    const double C21767 = C21764 * C51044;
    const double C22835 = C21764 * C51044;
    const double C21846 = C21844 * C51028;
    const double C11382 =
        5 * (3 * C50434 + (C50437 * ae) / C49999 - (C50436 * ce) / C50080 +
             C50071 * C50611) +
        ((4 * C50437 + C50071 * C50616 - (C50600 * ce) / C49932) * ae) /
            C49999 -
        ((4 * C50436 + C50071 * C50615 + C50600 * ae) * ce) / C50080 +
        C50071 *
            (4 * C50611 + (C50616 * ae) / C49999 - (C50615 * ce) / C50080 +
             C50071 *
                 (3 * C50605 + (C50609 * ae) / C49999 - (C50607 * ce) / C50080 +
                  C50071 *
                      (2 * C50597 - (ae * C50591) / C50080 -
                       (C50594 * ce) / C50080 +
                       C50071 *
                           ((-(ae * C50569) / C49932) / C49999 -
                            C50119 / C50080 - (C50572 * ce) / C50080 +
                            C50071 * ((-(C50209 * ce) / C49932) / C49999 -
                                      (ae * C50205) / C50080 -
                                      (C50071 *
                                       (C50111 * C50112 +
                                        C50074 * bs[8] * std::pow(C50067, 8)) *
                                       C50072) /
                                          C50080)))));
    const double C11484 =
        4 * (2 * C50510 - (ae * C50263 * C50425) / C50080 -
             (C50263 * C50426 * ce) / C50080 + C50071 * C50643) +
        (C50263 * C50616 * ae) / C49999 - (C50263 * C50615 * ce) / C50080 +
        C50071 *
            (3 * C50643 + (C50263 * C50609 * ae) / C49999 -
             (C50263 * C50607 * ce) / C50080 +
             C50071 *
                 (2 * C50641 - (ae * C50263 * C50591) / C50080 -
                  (C50263 * C50594 * ce) / C50080 +
                  C50071 *
                      ((-(ae * C50263 * C50569) / C49932) / C49999 -
                       C50623 / C50080 - (C50263 * C50572 * ce) / C50080 +
                       C50071 * ((-(C50263 * C50209 * ce) / C49932) / C49999 -
                                 (ae * C50263 * C50205) / C50080 -
                                 (C50071 * C50263 *
                                  (C50111 * C50112 +
                                   C50074 * bs[8] * std::pow(C50067, 8)) *
                                  C50072) /
                                     C50080))));
    const double C11381 =
        5 * ((-3 * C50311) / C49932 + C50071 * C50437 -
             (C50421 * ce) / C49932) +
        C50071 * (4 * C50437 + C50071 * C50616 - (C50600 * ce) / C49932) -
        ((4 * C50421 + C50071 * C50600) * ce) / C49932;
    const double C11483 =
        C50263 * (4 * C50437 + C50071 * C50616 - (C50600 * ce) / C49932);
    const double C11683 = (-3 * C50311) / C49932 + C50071 * C50437 -
                          (C50421 * ce) / C49932 + C50616 * C50277;
    const double C2511 = C2509 * C51157;
    const double C23002 = C23000 * C51157;
    const double C5363 = C5360 + C5361;
    const double C32279 = C32276 + C32277;
    const double C2703 = C2702 * C51157;
    const double C3921 = C3920 * C51157;
    const double C23194 = C23193 * C51157;
    const double C24364 = C24363 * C51157;
    const double C6732 = C6727 + C6731;
    const double C33506 = C33504 + C33505;
    const double C5516 = C5511 + C5515;
    const double C32428 = C32426 + C32427;
    const double C2891 = C2890 * C51157;
    const double C23382 = C23381 * C51157;
    const double C5677 = C5674 + C5671;
    const double C32577 = C32575 + C32576;
    d2ee[0] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1363 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C1358 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1364 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51157 * C51304 +
           ((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
            (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
               C51157 * C51288 +
           C24364 * C22939) *
              C51305 +
          (((C23176 + C23175) * C1364 -
            ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
            (C23178 + C23177) * C51044) *
               C51157 * C51304 +
           ((C23181 + C23180) * C1364 -
            ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
            (C23183 + C23182) * C51044) *
               C51157 * C51288 +
           ((C23184 + C23185) * C1364 - (C22993 * C1358 + C22994 * C1363) +
            (C23186 + C23187) * C51044) *
               C51157 * C22939) *
              C51291 +
          (C24364 * C51304 +
           ((C22986 + C22985) * C1363 + (C22984 + C22983) * C1358 -
            (C23185 + C23184) * C1364 - (C23187 + C23186) * C51044) *
               C51157 * C51288 +
           ((C22987 + C22988) * C1363 + (C22989 + C22990) * C1358 -
            (C22941 * C642 + C51143 * C651 + C22940 * C304 + C22935 * C314) *
                C1364 -
            (C22941 * C652 + C51143 * C657 + C22940 * C315 + C22935 * C322) *
                C51044) *
               C51157 * C22939) *
              C1362) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1492 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51306 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1493 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51294 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C1494 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C1489) *
               C51157 * C51304 +
           ((C22975 + C22976) * C1492 + (C22977 + C22978) * C51306 -
            (C23175 + C23176) * C1493 - (C23177 + C23178) * C51294 +
            (C23545 + C23546) * C1494 + (C23547 + C23548) * C1489) *
               C51157 * C51288 +
           (C22991 * C1492 + C22992 * C51306 - C23188 * C1493 -
            C23189 * C51294 + (C23549 + C23550) * C1494 +
            (C23551 + C23552) * C1489) *
               C51157 * C22939) *
              C1490 +
          (((C23176 + C23175) * C1493 -
            ((C22978 + C22977) * C51306 + (C22976 + C22975) * C1492) +
            (C23178 + C23177) * C51294 - (C23546 + C23545) * C1494 -
            (C23548 + C23547) * C1489) *
               C51157 * C51304 +
           ((C23181 + C23180) * C1493 -
            ((C22982 + C22981) * C51306 + (C22980 + C22979) * C1492) +
            (C23183 + C23182) * C51294 - (C23550 + C23549) * C1494 -
            (C23552 + C23551) * C1489) *
               C51157 * C51288 +
           ((C23184 + C23185) * C1493 - (C22993 * C51306 + C22994 * C1492) +
            (C23186 + C23187) * C51294 -
            (C22941 * C772 + C51143 * C779 + C22940 * C641 + C22935 * C649) *
                C1494 -
            (C22941 * C780 + C51143 * C784 + C22940 * C650 + C22935 * C656) *
                C1489) *
               C51157 * C22939) *
              C50999) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51157 * C51304 +
            ((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
             (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                C51157 * C51288 +
            C24364 * C22939) *
               C1490 +
           (((C23176 + C23175) * C1364 -
             ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
             (C23178 + C23177) * C51044) *
                C51157 * C51304 +
            ((C23181 + C23180) * C1364 -
             ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
             (C23183 + C23182) * C51044) *
                C51157 * C51288 +
            ((C23184 + C23185) * C1364 - (C22993 * C1358 + C22994 * C1363) +
             (C23186 + C23187) * C51044) *
                C51157 * C22939) *
               C50999) *
              C51262 +
          ((((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                 C1364 -
             ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                  C1358 +
              (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                  C1363) +
             (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C51304 +
            ((C24721 + C24722) * C1364 -
             ((C23368 + C23367) * C1358 + (C23366 + C23365) * C1363) +
             (C24723 + C24724) * C51044) *
                C51157 * C51288 +
            ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
             (C24727 + C24728) * C51044) *
                C51157 * C22939) *
               C1490 +
           (((C23365 + C23366) * C1363 + (C23367 + C23368) * C1358 -
             (C24722 + C24721) * C1364 - (C24724 + C24723) * C51044) *
                C51157 * C51304 +
            ((C23369 + C23370) * C1363 + (C23371 + C23372) * C1358 -
             (C24726 + C24725) * C1364 - (C24728 + C24727) * C51044) *
                C51157 * C51288 +
            ((C23373 + C23374) * C1363 + (C23375 + C23376) * C1358 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C1364 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51157 * C22939) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51157 * C51304 +
            ((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
             (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                C51157 * C51288 +
            C24364 * C22939) *
               C51253 +
           (((C23176 + C23175) * C1364 -
             ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
             (C23178 + C23177) * C51044) *
                C51157 * C51304 +
            ((C23181 + C23180) * C1364 -
             ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
             (C23183 + C23182) * C51044) *
                C51157 * C51288 +
            ((C23184 + C23185) * C1364 - (C22993 * C1358 + C22994 * C1363) +
             (C23186 + C23187) * C51044) *
                C51157 * C22939) *
               C50999) *
              C1775 +
          ((((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                 C1364 -
             ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                  C1358 +
              (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                  C1363) +
             (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C51304 +
            ((C24721 + C24722) * C1364 -
             ((C23368 + C23367) * C1358 + (C23366 + C23365) * C1363) +
             (C24723 + C24724) * C51044) *
                C51157 * C51288 +
            ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
             (C24727 + C24728) * C51044) *
                C51157 * C22939) *
               C51253 +
           (((C23365 + C23366) * C1363 + (C23367 + C23368) * C1358 -
             (C24722 + C24721) * C1364 - (C24724 + C24723) * C51044) *
                C51157 * C51304 +
            ((C23369 + C23370) * C1363 + (C23371 + C23372) * C1358 -
             (C24726 + C24725) * C1364 - (C24728 + C24727) * C51044) *
                C51157 * C51288 +
            ((C23373 + C23374) * C1363 + (C23375 + C23376) * C1358 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C1364 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51157 * C22939) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1492 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51306 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1493 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51294 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C1494 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C1489) *
               C51157 * C51304 +
           ((C22975 + C22976) * C1492 + (C22977 + C22978) * C51306 -
            (C23175 + C23176) * C1493 - (C23177 + C23178) * C51294 +
            (C23545 + C23546) * C1494 + (C23547 + C23548) * C1489) *
               C51157 * C51288 +
           (C22991 * C1492 + C22992 * C51306 - C23188 * C1493 -
            C23189 * C51294 + (C23549 + C23550) * C1494 +
            (C23551 + C23552) * C1489) *
               C51157 * C22939) *
              C50994 * C1775 +
          (((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                C1493 -
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C51306 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C1492) +
            (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                C51294 -
            (C22941 * C3317 + C51143 * C3320 + C22940 * C884 + C22935 * C893) *
                C1494 -
            (C22941 * C3321 + C51143 * C3326 + C22940 * C894 + C22935 * C908) *
                C1489) *
               C51157 * C51304 +
           ((C24721 + C24722) * C1493 -
            ((C23368 + C23367) * C51306 + (C23366 + C23365) * C1492) +
            (C24723 + C24724) * C51294 -
            (C22941 * C3318 + C51143 * C3322 + C22940 * C886 + C22935 * C897) *
                C1494 -
            (C22941 * C3323 + C51143 * C3327 + C22940 * C898 + C22935 * C910) *
                C1489) *
               C51157 * C51288 +
           ((C24725 + C24726) * C1493 - (C23377 * C51306 + C23378 * C1492) +
            (C24727 + C24728) * C51294 -
            (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                C1494 -
            (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                C1489) *
               C51157 * C22939) *
              C50994 * C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1363 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C1358 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1364 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51157 * C51304 +
           ((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
            (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
               C51157 * C51288 +
           C24364 * C22939) *
              C50994 * C51307 +
          (((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                C1364 -
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C1358 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C1363) +
            (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                C51044) *
               C51157 * C51304 +
           ((C24721 + C24722) * C1364 -
            ((C23368 + C23367) * C1358 + (C23366 + C23365) * C1363) +
            (C24723 + C24724) * C51044) *
               C51157 * C51288 +
           ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
            (C24727 + C24728) * C51044) *
               C51157 * C22939) *
              C50994 * C51297 +
          (((C22940 * C1016 + C22935 * C1021 + C22941 * C1158 +
             C51143 * C1162) *
                C1363 +
            (C22940 * C1022 + C22935 * C1031 + C22941 * C1163 +
             C51143 * C1170) *
                C1358 -
            (C22941 * C3645 + C51143 * C3648 + C22940 * C1158 +
             C22935 * C1162) *
                C1364 -
            (C22941 * C3649 + C51143 * C3654 + C22940 * C1163 +
             C22935 * C1170) *
                C51044) *
               C51157 * C51304 +
           ((C23959 + C23960) * C1363 + (C23961 + C23962) * C1358 -
            (C22941 * C3646 + C51143 * C3650 + C22940 * C1159 +
             C22935 * C1164) *
                C1364 -
            (C22941 * C3651 + C51143 * C3655 + C22940 * C1165 +
             C22935 * C1171) *
                C51044) *
               C51157 * C51288 +
           ((C23963 + C23964) * C1363 + (C23965 + C23966) * C1358 -
            (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
             C22935 * C1166) *
                C1364 -
            (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
             C22935 * C1172) *
                C51044) *
               C51157 * C22939) *
              C50994 * C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51157 * C51304 +
           ((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
            (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
            (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
               C51157 * C51288 +
           (C22991 * C635 + C22992 * C630 - C23188 * C636 - C23189 * C631 +
            (C23549 + C23550) * C637 + (C23551 + C23552) * C632) *
               C51157 * C22939) *
              C51253 +
          (((C23176 + C23175) * C636 -
            ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
            (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
            (C23548 + C23547) * C632) *
               C51157 * C51304 +
           ((C23181 + C23180) * C636 -
            ((C22982 + C22981) * C630 + (C22980 + C22979) * C635) +
            (C23183 + C23182) * C631 - (C23550 + C23549) * C637 -
            (C23552 + C23551) * C632) *
               C51157 * C51288 +
           ((C23184 + C23185) * C636 - (C22993 * C630 + C22994 * C635) +
            (C23186 + C23187) * C631 -
            (C22941 * C772 + C51143 * C779 + C22940 * C641 + C22935 * C649) *
                C637 -
            (C22941 * C780 + C51143 * C784 + C22940 * C650 + C22935 * C656) *
                C632) *
               C51157 * C22939) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C118 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C51304 +
           ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
               C51288 +
           C23001 * C22939) *
              C112 -
          (C23002 * C22939 +
           ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51157 *
               C51288 +
           ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51157 *
               C51304) *
              C113 +
          (C23001 * C51304 +
           ((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51157 *
               C51288 +
           ((C22987 + C22988) * C118 + (C22989 + C22990) * C51028) * C51157 *
               C22939) *
              C114 -
          (((C22941 * C317 + C51143 * C323 + C22940 * C137 + C22935 * C145) *
                C51028 +
            (C22941 * C305 + C51143 * C316 + C22940 * C124 + C22935 * C136) *
                C118) *
               C51157 * C22939 +
           ((C22990 + C22989) * C51028 + (C22988 + C22987) * C118) * C51157 *
               C51288 +
           C23002 * C51304) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C51304 +
            ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
                C51288 +
            C23001 * C22939) *
               C51253 -
           (C23002 * C22939 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51157 *
                C51288 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51157 *
                C51304) *
               C50999) *
              C1013 +
          ((((C23365 + C23366) * C118 + (C23367 + C23368) * C51028) * C51157 *
                C51304 +
            ((C23369 + C23370) * C118 + (C23371 + C23372) * C51028) * C51157 *
                C51288 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51157 *
                C22939) *
               C50999 -
           (C23382 * C22939 +
            ((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51157 *
                C51288 +
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C51028 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C118) *
                C51157 * C51304) *
               C51253) *
              C1014 +
          ((((C22940 * C1016 + C22935 * C1021 + C22941 * C1158 +
              C51143 * C1162) *
                 C118 +
             (C22940 * C1022 + C22935 * C1031 + C22941 * C1163 +
              C51143 * C1170) *
                 C51028) *
                C51157 * C51304 +
            ((C23959 + C23960) * C118 + (C23961 + C23962) * C51028) * C51157 *
                C51288 +
            ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51157 *
                C22939) *
               C51253 -
           (((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
              C22935 * C1034) *
                 C51028 +
             (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
              C22935 * C1027) *
                 C118) *
                C51157 * C22939 +
            ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51157 *
                C51288 +
            ((C23962 + C23961) * C51028 + (C23960 + C23959) * C118) * C51157 *
                C51304) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
               C765 +
           (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
               C760 -
           (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
               C766 -
           (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
               C761 +
           (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
               C767 +
           (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
               C762 -
           (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
               C768 -
           (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
               C763) *
              C51157 * C51304 +
          ((C22975 + C22976) * C765 + (C22977 + C22978) * C760 -
           (C23175 + C23176) * C766 - (C23177 + C23178) * C761 +
           (C23545 + C23546) * C767 + (C23547 + C23548) * C762 -
           (C22941 * C3160 + C51143 * C3164 + C22940 * C770 + C22935 * C775) *
               C768 -
           (C22941 * C3165 + C51143 * C3169 + C22940 * C776 + C22935 * C782) *
               C763) *
              C51157 * C51288 +
          (C22991 * C765 + C22992 * C760 - C23188 * C766 - C23189 * C761 +
           (C23549 + C23550) * C767 + (C23551 + C23552) * C762 -
           (C22941 * C3161 + C51143 * C3166 + C22940 * C771 + C22935 * C777) *
               C768 -
           (C22941 * C3167 + C51143 * C3170 + C22940 * C778 + C22935 * C783) *
               C763) *
              C51157 * C22939) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C298 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51260 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C299 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51157 * C51304 +
           ((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
            (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
               C51157 * C51288 +
           C23194 * C22939) *
              C295 +
          (((C23176 + C23175) * C299 -
            ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
            (C23178 + C23177) * C51044) *
               C51157 * C51304 +
           ((C23181 + C23180) * C299 -
            ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
            (C23183 + C23182) * C51044) *
               C51157 * C51288 +
           ((C23184 + C23185) * C299 - (C22993 * C51260 + C22994 * C298) +
            (C23186 + C23187) * C51044) *
               C51157 * C22939) *
              C296 +
          (C23194 * C51304 +
           ((C22986 + C22985) * C298 + (C22984 + C22983) * C51260 -
            (C23185 + C23184) * C299 - (C23187 + C23186) * C51044) *
               C51157 * C51288 +
           ((C22987 + C22988) * C298 + (C22989 + C22990) * C51260 -
            (C22941 * C642 + C51143 * C651 + C22940 * C304 + C22935 * C314) *
                C299 -
            (C22941 * C652 + C51143 * C657 + C22940 * C315 + C22935 * C322) *
                C51044) *
               C51157 * C22939) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C298 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51260 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C299 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51157 * C51304 +
           ((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
            (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
               C51157 * C51288 +
           C23194 * C22939) *
              C50994 * C1013 +
          (((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                C299 -
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C51260 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C298) +
            (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                C51044) *
               C51157 * C51304 +
           ((C22940 * C885 + C22935 * C895 + C22941 * C886 + C51143 * C897) *
                C299 -
            ((C23368 + C23367) * C51260 + (C23366 + C23365) * C298) +
            (C22940 * C896 + C22935 * C909 + C22941 * C898 + C51143 * C910) *
                C51044) *
               C51157 * C51288 +
           ((C22940 * C887 + C22935 * C899 + C22941 * C888 + C51143 * C901) *
                C299 -
            (C23377 * C51260 + C23378 * C298) +
            (C22940 * C900 + C22935 * C911 + C22941 * C902 + C51143 * C912) *
                C51044) *
               C51157 * C22939) *
              C50994 * C1014 +
          (((C22940 * C1016 + C22935 * C1021 + C22941 * C1158 +
             C51143 * C1162) *
                C298 +
            (C22940 * C1022 + C22935 * C1031 + C22941 * C1163 +
             C51143 * C1170) *
                C51260 -
            (C22941 * C3645 + C51143 * C3648 + C22940 * C1158 +
             C22935 * C1162) *
                C299 -
            (C22941 * C3649 + C51143 * C3654 + C22940 * C1163 +
             C22935 * C1170) *
                C51044) *
               C51157 * C51304 +
           ((C23959 + C23960) * C298 + (C23961 + C23962) * C51260 -
            (C22941 * C3646 + C51143 * C3650 + C22940 * C1159 +
             C22935 * C1164) *
                C299 -
            (C22941 * C3651 + C51143 * C3655 + C22940 * C1165 +
             C22935 * C1171) *
                C51044) *
               C51157 * C51288 +
           ((C23963 + C23964) * C298 + (C23965 + C23966) * C51260 -
            (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
             C22935 * C1166) *
                C299 -
            (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
             C22935 * C1172) *
                C51044) *
               C51157 * C22939) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51157 * C51304 +
           ((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
            (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
            (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
               C51157 * C51288 +
           (C22991 * C635 + C22992 * C630 - C23188 * C636 - C23189 * C631 +
            (C23549 + C23550) * C637 + (C23551 + C23552) * C632) *
               C51157 * C22939) *
              C50994 * C51262 +
          (((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                C636 -
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C630 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C635) +
            (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                C631 -
            (C22941 * C3317 + C51143 * C3320 + C22940 * C884 + C22935 * C893) *
                C637 -
            (C22941 * C3321 + C51143 * C3326 + C22940 * C894 + C22935 * C908) *
                C632) *
               C51157 * C51304 +
           ((C22940 * C885 + C22935 * C895 + C22941 * C886 + C51143 * C897) *
                C636 -
            ((C23368 + C23367) * C630 + (C23366 + C23365) * C635) +
            (C22940 * C896 + C22935 * C909 + C22941 * C898 + C51143 * C910) *
                C631 -
            (C22941 * C3318 + C51143 * C3322 + C22940 * C886 + C22935 * C897) *
                C637 -
            (C22941 * C3323 + C51143 * C3327 + C22940 * C898 + C22935 * C910) *
                C632) *
               C51157 * C51288 +
           ((C22940 * C887 + C22935 * C899 + C22941 * C888 + C51143 * C901) *
                C636 -
            (C23377 * C630 + C23378 * C635) +
            (C22940 * C900 + C22935 * C911 + C22941 * C902 + C51143 * C912) *
                C631 -
            (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                C637 -
            (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                C632) *
               C51157 * C22939) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C51304 +
            ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
                C51288 +
            C23001 * C22939) *
               C295 -
           (C23002 * C22939 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51157 *
                C51288 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51157 *
                C51304) *
               C296 +
           (C23001 * C51304 +
            ((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51157 *
                C51288 +
            ((C22987 + C22988) * C118 + (C22989 + C22990) * C51028) * C51157 *
                C22939) *
               C297) *
              C51262 +
          ((((C23365 + C23366) * C118 + (C23367 + C23368) * C51028) * C51157 *
                C51304 +
            ((C23369 + C23370) * C118 + (C23371 + C23372) * C51028) * C51157 *
                C51288 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51157 *
                C22939) *
               C296 -
           (C23382 * C22939 +
            ((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51157 *
                C51288 +
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C51028 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C118) *
                C51157 * C51304) *
               C295 -
           (((C22941 * C1645 + C51143 * C1646 + C22940 * C485 + C22935 * C493) *
                 C51028 +
             (C22941 * C1643 + C51143 * C1644 + C22940 * C475 + C22935 * C484) *
                 C118) *
                C51157 * C22939 +
            ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51157 *
                C51288 +
            C23382 * C51304) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C118 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C51304 +
           ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
               C51288 +
           C23001 * C22939) *
              C50994 * C1240 -
          (C23382 * C22939 +
           ((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51157 *
               C51288 +
           ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                C51028 +
            (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                C118) *
               C51157 * C51304) *
              C50994 * C1241 +
          (((C22940 * C1016 + C22935 * C1021 + C22941 * C1158 +
             C51143 * C1162) *
                C118 +
            (C22940 * C1022 + C22935 * C1031 + C22941 * C1163 +
             C51143 * C1170) *
                C51028) *
               C51157 * C51304 +
           ((C23959 + C23960) * C118 + (C23961 + C23962) * C51028) * C51157 *
               C51288 +
           ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51157 *
               C22939) *
              C50994 * C1242 -
          (((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
             C22935 * C1257) *
                C51028 +
            (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
             C22935 * C1251) *
                C118) *
               C51157 * C22939 +
           ((C22941 * C3760 + C51143 * C3765 + C22940 * C1252 +
             C22935 * C1258) *
                C51028 +
            (C22941 * C3756 + C51143 * C3761 + C22940 * C1246 +
             C22935 * C1253) *
                C118) *
               C51157 * C51288 +
           ((C22941 * C3762 + C51143 * C3766 + C22940 * C1254 +
             C22935 * C1259) *
                C51028 +
            (C22941 * C3757 + C51143 * C3763 + C22940 * C1247 +
             C22935 * C1255) *
                C118) *
               C51157 * C51304) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C51304 +
            ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
                C51288 +
            C23001 * C22939) *
               C51305 -
           (C23002 * C22939 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51157 *
                C51288 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51157 *
                C51304) *
               C51291 +
           (C23001 * C51304 +
            ((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51157 *
                C51288 +
            ((C22987 + C22988) * C118 + (C22989 + C22990) * C51028) * C51157 *
                C22939) *
               C1362) *
              C1775 +
          ((((C23365 + C23366) * C118 + (C23367 + C23368) * C51028) * C51157 *
                C51304 +
            ((C23369 + C23370) * C118 + (C23371 + C23372) * C51028) * C51157 *
                C51288 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51157 *
                C22939) *
               C51291 -
           (C23382 * C22939 +
            ((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51157 *
                C51288 +
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C51028 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C118) *
                C51157 * C51304) *
               C51305 -
           (((C22941 * C1645 + C51143 * C1646 + C22940 * C485 + C22935 * C493) *
                 C51028 +
             (C22941 * C1643 + C51143 * C1644 + C22940 * C475 + C22935 * C484) *
                 C118) *
                C51157 * C22939 +
            ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51157 *
                C51288 +
            C23382 * C51304) *
               C1362) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51157 * C51304 +
            ((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
             (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                C51157 * C51288 +
            C23194 * C22939) *
               C1490 +
           (((C23176 + C23175) * C299 -
             ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
             (C23178 + C23177) * C51044) *
                C51157 * C51304 +
            ((C23181 + C23180) * C299 -
             ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
             (C23183 + C23182) * C51044) *
                C51157 * C51288 +
            ((C23184 + C23185) * C299 - (C22993 * C51260 + C22994 * C298) +
             (C23186 + C23187) * C51044) *
                C51157 * C22939) *
               C50999) *
              C1775 +
          ((((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                 C299 -
             ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                  C51260 +
              (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                  C298) +
             (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C51304 +
            ((C24721 + C24722) * C299 -
             ((C23368 + C23367) * C51260 + (C23366 + C23365) * C298) +
             (C24723 + C24724) * C51044) *
                C51157 * C51288 +
            ((C24725 + C24726) * C299 - (C23377 * C51260 + C23378 * C298) +
             (C24727 + C24728) * C51044) *
                C51157 * C22939) *
               C1490 +
           (((C23365 + C23366) * C298 + (C23367 + C23368) * C51260 -
             (C24722 + C24721) * C299 - (C24724 + C24723) * C51044) *
                C51157 * C51304 +
            ((C23369 + C23370) * C298 + (C23371 + C23372) * C51260 -
             (C24726 + C24725) * C299 - (C24728 + C24727) * C51044) *
                C51157 * C51288 +
            ((C23373 + C23374) * C298 + (C23375 + C23376) * C51260 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C299 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51157 * C22939) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C51304 +
            ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
                C51288 +
            C23001 * C22939) *
               C1490 -
           (C23002 * C22939 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51157 *
                C51288 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51157 *
                C51304) *
               C50999) *
              C51307 +
          ((((C23365 + C23366) * C118 + (C23367 + C23368) * C51028) * C51157 *
                C51304 +
            ((C23369 + C23370) * C118 + (C23371 + C23372) * C51028) * C51157 *
                C51288 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51157 *
                C22939) *
               C50999 -
           (C23382 * C22939 +
            ((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51157 *
                C51288 +
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C51028 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C118) *
                C51157 * C51304) *
               C1490) *
              C51297 +
          ((((C22940 * C1016 + C22935 * C1021 + C22941 * C1158 +
              C51143 * C1162) *
                 C118 +
             (C22940 * C1022 + C22935 * C1031 + C22941 * C1163 +
              C51143 * C1170) *
                 C51028) *
                C51157 * C51304 +
            ((C23959 + C23960) * C118 + (C23961 + C23962) * C51028) * C51157 *
                C51288 +
            ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51157 *
                C22939) *
               C1490 -
           (((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
              C22935 * C1034) *
                 C51028 +
             (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
              C22935 * C1027) *
                 C118) *
                C51157 * C22939 +
            ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51157 *
                C51288 +
            ((C23962 + C23961) * C51028 + (C23960 + C23959) * C118) * C51157 *
                C51304) *
               C50999) *
              C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C118 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C51304 +
           ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
               C51288 +
           C23001 * C22939) *
              C112 -
          (C23002 * C22939 +
           ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51157 *
               C51288 +
           ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51157 *
               C51304) *
              C113 +
          (C23001 * C51304 +
           ((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51157 *
               C51288 +
           ((C22987 + C22988) * C118 + (C22989 + C22990) * C51028) * C51157 *
               C22939) *
              C114 -
          (((C22941 * C317 + C51143 * C323 + C22940 * C137 + C22935 * C145) *
                C51028 +
            (C22941 * C305 + C51143 * C316 + C22940 * C124 + C22935 * C136) *
                C118) *
               C51157 * C22939 +
           ((C22990 + C22989) * C51028 + (C22988 + C22987) * C118) * C51157 *
               C51288 +
           C23002 * C51304) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51157 * C51304 +
           ((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
            (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
            (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
               C51157 * C51288 +
           (C22991 * C635 + C22992 * C630 - C23188 * C636 - C23189 * C631 +
            (C23549 + C23550) * C637 + (C23551 + C23552) * C632) *
               C51157 * C22939) *
              C51253 +
          (((C23176 + C23175) * C636 -
            ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
            (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
            (C23548 + C23547) * C632) *
               C51157 * C51304 +
           ((C23181 + C23180) * C636 -
            ((C22982 + C22981) * C630 + (C22980 + C22979) * C635) +
            (C23183 + C23182) * C631 - (C23550 + C23549) * C637 -
            (C23552 + C23551) * C632) *
               C51157 * C51288 +
           ((C23184 + C23185) * C636 - (C22993 * C630 + C22994 * C635) +
            (C23186 + C23187) * C631 -
            (C22941 * C772 + C51143 * C779 + C22940 * C641 + C22935 * C649) *
                C637 -
            (C22941 * C780 + C51143 * C784 + C22940 * C650 + C22935 * C656) *
                C632) *
               C51157 * C22939) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C298 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51260 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C299 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51157 * C51304 +
           ((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
            (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
               C51157 * C51288 +
           C23194 * C22939) *
              C295 +
          (((C23176 + C23175) * C299 -
            ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
            (C23178 + C23177) * C51044) *
               C51157 * C51304 +
           ((C23181 + C23180) * C299 -
            ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
            (C23183 + C23182) * C51044) *
               C51157 * C51288 +
           ((C23184 + C23185) * C299 - (C22993 * C51260 + C22994 * C298) +
            (C23186 + C23187) * C51044) *
               C51157 * C22939) *
              C296 +
          (C23194 * C51304 +
           ((C22986 + C22985) * C298 + (C22984 + C22983) * C51260 -
            (C23185 + C23184) * C299 - (C23187 + C23186) * C51044) *
               C51157 * C51288 +
           ((C22987 + C22988) * C298 + (C22989 + C22990) * C51260 -
            (C22941 * C642 + C51143 * C651 + C22940 * C304 + C22935 * C314) *
                C299 -
            (C22941 * C652 + C51143 * C657 + C22940 * C315 + C22935 * C322) *
                C51044) *
               C51157 * C22939) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
               C765 +
           (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
               C760 -
           (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
               C766 -
           (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
               C761 +
           (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
               C767 +
           (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
               C762 -
           (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
               C768 -
           (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
               C763) *
              C51157 * C51304 +
          ((C22975 + C22976) * C765 + (C22977 + C22978) * C760 -
           (C23175 + C23176) * C766 - (C23177 + C23178) * C761 +
           (C23545 + C23546) * C767 + (C23547 + C23548) * C762 -
           (C22941 * C3160 + C51143 * C3164 + C22940 * C770 + C22935 * C775) *
               C768 -
           (C22941 * C3165 + C51143 * C3169 + C22940 * C776 + C22935 * C782) *
               C763) *
              C51157 * C51288 +
          (C22991 * C765 + C22992 * C760 - C23188 * C766 - C23189 * C761 +
           (C23549 + C23550) * C767 + (C23551 + C23552) * C762 -
           (C22941 * C3161 + C51143 * C3166 + C22940 * C771 + C22935 * C777) *
               C768 -
           (C22941 * C3167 + C51143 * C3170 + C22940 * C778 + C22935 * C783) *
               C763) *
              C51157 * C22939) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C51304 +
            ((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51157 *
                C51288 +
            C23001 * C22939) *
               C295 -
           (C23002 * C22939 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51157 *
                C51288 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51157 *
                C51304) *
               C296 +
           (C23001 * C51304 +
            ((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51157 *
                C51288 +
            ((C22987 + C22988) * C118 + (C22989 + C22990) * C51028) * C51157 *
                C22939) *
               C297) *
              C51262 +
          ((((C23365 + C23366) * C118 + (C23367 + C23368) * C51028) * C51157 *
                C51304 +
            ((C23369 + C23370) * C118 + (C23371 + C23372) * C51028) * C51157 *
                C51288 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51157 *
                C22939) *
               C296 -
           (C23382 * C22939 +
            ((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51157 *
                C51288 +
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C51028 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C118) *
                C51157 * C51304) *
               C295 -
           (((C22941 * C1645 + C51143 * C1646 + C22940 * C485 + C22935 * C493) *
                 C51028 +
             (C22941 * C1643 + C51143 * C1644 + C22940 * C475 + C22935 * C484) *
                 C118) *
                C51157 * C22939 +
            ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51157 *
                C51288 +
            C23382 * C51304) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51157 * C51304 +
           ((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
            (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
            (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
               C51157 * C51288 +
           (C22991 * C635 + C22992 * C630 - C23188 * C636 - C23189 * C631 +
            (C23549 + C23550) * C637 + (C23551 + C23552) * C632) *
               C51157 * C22939) *
              C50994 * C51262 +
          (((C22940 * C883 + C22935 * C891 + C22941 * C884 + C51143 * C893) *
                C636 -
            ((C22941 * C892 + C51143 * C907 + C22940 * C486 + C22935 * C494) *
                 C630 +
             (C22941 * C883 + C51143 * C891 + C22940 * C476 + C22935 * C487) *
                 C635) +
            (C22940 * C892 + C22935 * C907 + C22941 * C894 + C51143 * C908) *
                C631 -
            (C22941 * C3317 + C51143 * C3320 + C22940 * C884 + C22935 * C893) *
                C637 -
            (C22941 * C3321 + C51143 * C3326 + C22940 * C894 + C22935 * C908) *
                C632) *
               C51157 * C51304 +
           ((C22940 * C885 + C22935 * C895 + C22941 * C886 + C51143 * C897) *
                C636 -
            ((C23368 + C23367) * C630 + (C23366 + C23365) * C635) +
            (C22940 * C896 + C22935 * C909 + C22941 * C898 + C51143 * C910) *
                C631 -
            (C22941 * C3318 + C51143 * C3322 + C22940 * C886 + C22935 * C897) *
                C637 -
            (C22941 * C3323 + C51143 * C3327 + C22940 * C898 + C22935 * C910) *
                C632) *
               C51157 * C51288 +
           ((C22940 * C887 + C22935 * C899 + C22941 * C888 + C51143 * C901) *
                C636 -
            (C23377 * C630 + C23378 * C635) +
            (C22940 * C900 + C22935 * C911 + C22941 * C902 + C51143 * C912) *
                C631 -
            (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                C637 -
            (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                C632) *
               C51157 * C22939) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1363 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C1358 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1364 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C1363 +
                    (C25846 + C25847 + C25848) * C1358 -
                    (C26031 + C26032 + C26033) * C1364 -
                    (C26034 + C26035 + C26036) * C51044) *
                       C51157 * C50979) *
                      C51305 +
                  (((C26033 + C26032 + C26031) * C1364 -
                    ((C25848 + C25847 + C25846) * C1358 +
                     (C25845 + C25844 + C25843) * C1363) +
                    (C26036 + C26035 + C26034) * C51044) *
                       C51157 * C25801 +
                   ((C26037 + C26038 + C26039) * C1364 -
                    ((C25849 + C25850 + C25851) * C1358 +
                     (C25852 + C25853 + C25854) * C1363) +
                    (C26040 + C26041 + C26042) * C51044) *
                       C51157 * C50979) *
                      C51291 +
                  (((C25854 + C25853 + C25852) * C1363 +
                    (C25851 + C25850 + C25849) * C1358 -
                    (C26039 + C26038 + C26037) * C1364 -
                    (C26042 + C26041 + C26040) * C51044) *
                       C51157 * C25801 +
                   ((C25855 + C25856 + C25857) * C1363 +
                    (C25858 + C25859 + C25860) * C1358 -
                    (C25805 * C772 + C25800 * C779 + C25804 * C641 +
                     C51300 * C649 + C25803 * C303 + C51308 * C312) *
                        C1364 -
                    (C25805 * C780 + C25800 * C784 + C25804 * C650 +
                     C51300 * C656 + C25803 * C313 + C51308 * C321) *
                        C51044) *
                       C51157 * C50979) *
                      C1362) *
                 C51058) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1492 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51306 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1493 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51294 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C1494 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C1489) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C1492 +
                    (C25846 + C25847 + C25848) * C51306 -
                    (C26031 + C26032 + C26033) * C1493 -
                    (C26034 + C26035 + C26036) * C51294 +
                    (C26383 + C26384 + C26385) * C1494 +
                    (C26386 + C26387 + C26388) * C1489) *
                       C51157 * C50979) *
                      C1490 +
                  (((C26033 + C26032 + C26031) * C1493 -
                    ((C25848 + C25847 + C25846) * C51306 +
                     (C25845 + C25844 + C25843) * C1492) +
                    (C26036 + C26035 + C26034) * C51294 -
                    (C26385 + C26384 + C26383) * C1494 -
                    (C26388 + C26387 + C26386) * C1489) *
                       C51157 * C25801 +
                   ((C26037 + C26038 + C26039) * C1493 -
                    ((C25849 + C25850 + C25851) * C51306 +
                     (C25852 + C25853 + C25854) * C1492) +
                    (C26040 + C26041 + C26042) * C51294 -
                    (C25805 * C3161 + C25800 * C3166 + C25804 * C771 +
                     C51300 * C777 + C25803 * C640 + C51308 * C647) *
                        C1494 -
                    (C25805 * C3167 + C25800 * C3170 + C25804 * C778 +
                     C51300 * C783 + C25803 * C648 + C51308 * C655) *
                        C1489) *
                       C51157 * C50979) *
                      C50999) *
                 C51058) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C1363 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C1358 -
                     (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                      C51300 * C643 + C25803 * C300 + C51308 * C306) *
                         C1364 -
                     (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                      C51300 * C653 + C25803 * C307 + C51308 * C318) *
                         C51044) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C1363 +
                     (C25846 + C25847 + C25848) * C1358 -
                     (C26031 + C26032 + C26033) * C1364 -
                     (C26034 + C26035 + C26036) * C51044) *
                        C51157 * C50979) *
                       C1490 +
                   (((C26033 + C26032 + C26031) * C1364 -
                     ((C25848 + C25847 + C25846) * C1358 +
                      (C25845 + C25844 + C25843) * C1363) +
                     (C26036 + C26035 + C26034) * C51044) *
                        C51157 * C25801 +
                    ((C26037 + C26038 + C26039) * C1364 -
                     ((C25849 + C25850 + C25851) * C1358 +
                      (C25852 + C25853 + C25854) * C1363) +
                     (C26040 + C26041 + C26042) * C51044) *
                        C51157 * C50979) *
                       C50999) *
                      C51262 +
                  ((((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                      C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                         C1364 -
                     ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                       C51300 * C907 + C25803 * C486 + C51308 * C494) *
                          C1358 +
                      (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                       C51300 * C891 + C25803 * C476 + C51308 * C487) *
                          C1363) +
                     (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                      C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                         C51044) *
                        C51157 * C25801 +
                    ((C27539 + C27540 + C27541) * C1364 -
                     ((C26218 + C26217 + C26216) * C1358 +
                      (C26215 + C26214 + C26213) * C1363) +
                     (C27542 + C27543 + C27544) * C51044) *
                        C51157 * C50979) *
                       C1490 +
                   (((C26213 + C26214 + C26215) * C1363 +
                     (C26216 + C26217 + C26218) * C1358 -
                     (C27541 + C27540 + C27539) * C1364 -
                     (C27544 + C27543 + C27542) * C51044) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C1363 +
                     (C26222 + C26223 + C26224) * C1358 -
                     (C25805 * C3319 + C25800 * C3324 + C25804 * C888 +
                      C51300 * C901 + C25803 * C887 + C51308 * C899) *
                         C1364 -
                     (C25805 * C3325 + C25800 * C3328 + C25804 * C902 +
                      C51300 * C912 + C25803 * C900 + C51308 * C911) *
                         C51044) *
                        C51157 * C50979) *
                       C50999) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C1363 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C1358 -
                     (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                      C51300 * C643 + C25803 * C300 + C51308 * C306) *
                         C1364 -
                     (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                      C51300 * C653 + C25803 * C307 + C51308 * C318) *
                         C51044) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C1363 +
                     (C25846 + C25847 + C25848) * C1358 -
                     (C26031 + C26032 + C26033) * C1364 -
                     (C26034 + C26035 + C26036) * C51044) *
                        C51157 * C50979) *
                       C51253 +
                   (((C26033 + C26032 + C26031) * C1364 -
                     ((C25848 + C25847 + C25846) * C1358 +
                      (C25845 + C25844 + C25843) * C1363) +
                     (C26036 + C26035 + C26034) * C51044) *
                        C51157 * C25801 +
                    ((C26037 + C26038 + C26039) * C1364 -
                     ((C25849 + C25850 + C25851) * C1358 +
                      (C25852 + C25853 + C25854) * C1363) +
                     (C26040 + C26041 + C26042) * C51044) *
                        C51157 * C50979) *
                       C50999) *
                      C1775 +
                  ((((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                      C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                         C1364 -
                     ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                       C51300 * C907 + C25803 * C486 + C51308 * C494) *
                          C1358 +
                      (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                       C51300 * C891 + C25803 * C476 + C51308 * C487) *
                          C1363) +
                     (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                      C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                         C51044) *
                        C51157 * C25801 +
                    ((C27539 + C27540 + C27541) * C1364 -
                     ((C26218 + C26217 + C26216) * C1358 +
                      (C26215 + C26214 + C26213) * C1363) +
                     (C27542 + C27543 + C27544) * C51044) *
                        C51157 * C50979) *
                       C51253 +
                   (((C26213 + C26214 + C26215) * C1363 +
                     (C26216 + C26217 + C26218) * C1358 -
                     (C27541 + C27540 + C27539) * C1364 -
                     (C27544 + C27543 + C27542) * C51044) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C1363 +
                     (C26222 + C26223 + C26224) * C1358 -
                     (C25805 * C3319 + C25800 * C3324 + C25804 * C888 +
                      C51300 * C901 + C25803 * C887 + C51308 * C899) *
                         C1364 -
                     (C25805 * C3325 + C25800 * C3328 + C25804 * C902 +
                      C51300 * C912 + C25803 * C900 + C51308 * C911) *
                         C51044) *
                        C51157 * C50979) *
                       C50999) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1492 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51306 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1493 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51294 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C1494 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C1489) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C1492 +
                    (C25846 + C25847 + C25848) * C51306 -
                    (C26031 + C26032 + C26033) * C1493 -
                    (C26034 + C26035 + C26036) * C51294 +
                    (C26383 + C26384 + C26385) * C1494 +
                    (C26386 + C26387 + C26388) * C1489) *
                       C51157 * C50979) *
                      C50994 * C1775 +
                  (((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                     C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                        C1493 -
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C51306 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C1492) +
                    (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                     C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                        C51294 -
                    (C25805 * C9036 + C25800 * C9038 + C25804 * C3317 +
                     C51300 * C3320 + C25803 * C884 + C51308 * C893) *
                        C1494 -
                    (C25805 * C9039 + C25800 * C9042 + C25804 * C3321 +
                     C51300 * C3326 + C25803 * C894 + C51308 * C908) *
                        C1489) *
                       C51157 * C25801 +
                   ((C27539 + C27540 + C27541) * C1493 -
                    ((C26218 + C26217 + C26216) * C51306 +
                     (C26215 + C26214 + C26213) * C1492) +
                    (C27542 + C27543 + C27544) * C51294 -
                    (C25805 * C9037 + C25800 * C9040 + C25804 * C3318 +
                     C51300 * C3322 + C25803 * C886 + C51308 * C897) *
                        C1494 -
                    (C25805 * C9041 + C25800 * C9043 + C25804 * C3323 +
                     C51300 * C3327 + C25803 * C898 + C51308 * C910) *
                        C1489) *
                       C51157 * C50979) *
                      C50994 * C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1363 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C1358 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1364 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C1363 +
                    (C25846 + C25847 + C25848) * C1358 -
                    (C26031 + C26032 + C26033) * C1364 -
                    (C26034 + C26035 + C26036) * C51044) *
                       C51157 * C50979) *
                      C50994 * C51307 +
                  (((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                     C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                        C1364 -
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C1358 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C1363) +
                    (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                     C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                        C51044) *
                       C51157 * C25801 +
                   ((C27539 + C27540 + C27541) * C1364 -
                    ((C26218 + C26217 + C26216) * C1358 +
                     (C26215 + C26214 + C26213) * C1363) +
                    (C27542 + C27543 + C27544) * C51044) *
                       C51157 * C50979) *
                      C50994 * C51297 +
                  (((C25803 * C1016 + C51308 * C1021 + C25804 * C1158 +
                     C51300 * C1162 + C25805 * C3645 + C25800 * C3648) *
                        C1363 +
                    (C25803 * C1022 + C51308 * C1031 + C25804 * C1163 +
                     C51300 * C1170 + C25805 * C3649 + C25800 * C3654) *
                        C1358 -
                    (C25805 * C9354 + C25800 * C9356 + C25804 * C3645 +
                     C51300 * C3648 + C25803 * C1158 + C51308 * C1162) *
                        C1364 -
                    (C25805 * C9357 + C25800 * C9360 + C25804 * C3649 +
                     C51300 * C3654 + C25803 * C1163 + C51308 * C1170) *
                        C51044) *
                       C51157 * C25801 +
                   ((C26791 + C26792 + C26793) * C1363 +
                    (C26794 + C26795 + C26796) * C1358 -
                    (C25805 * C9355 + C25800 * C9358 + C25804 * C3646 +
                     C51300 * C3650 + C25803 * C1159 + C51308 * C1164) *
                        C1364 -
                    (C25805 * C9359 + C25800 * C9361 + C25804 * C3651 +
                     C51300 * C3655 + C25803 * C1165 + C51308 * C1171) *
                        C51044) *
                       C51157 * C50979) *
                      C50994 * C2019)) /
                (p * q * std::sqrt(p + q));
    d2ee[21] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C635 +
                    (C25846 + C25847 + C25848) * C630 -
                    (C26031 + C26032 + C26033) * C636 -
                    (C26034 + C26035 + C26036) * C631 +
                    (C26383 + C26384 + C26385) * C637 +
                    (C26386 + C26387 + C26388) * C632) *
                       C51157 * C50979) *
                      C51253 +
                  (((C26033 + C26032 + C26031) * C636 -
                    ((C25848 + C25847 + C25846) * C630 +
                     (C25845 + C25844 + C25843) * C635) +
                    (C26036 + C26035 + C26034) * C631 -
                    (C26385 + C26384 + C26383) * C637 -
                    (C26388 + C26387 + C26386) * C632) *
                       C51157 * C25801 +
                   ((C26037 + C26038 + C26039) * C636 -
                    ((C25849 + C25850 + C25851) * C630 +
                     (C25852 + C25853 + C25854) * C635) +
                    (C26040 + C26041 + C26042) * C631 -
                    (C25805 * C3161 + C25800 * C3166 + C25804 * C771 +
                     C51300 * C777 + C25803 * C640 + C51308 * C647) *
                        C637 -
                    (C25805 * C3167 + C25800 * C3170 + C25804 * C778 +
                     C51300 * C783 + C25803 * C648 + C51308 * C655) *
                        C632) *
                       C51157 * C50979) *
                      C50999) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C118 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51028) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C118 +
                    (C25846 + C25847 + C25848) * C51028) *
                       C51157 * C50979) *
                      C112 -
                  (((C25849 + C25850 + C25851) * C51028 +
                    (C25852 + C25853 + C25854) * C118) *
                       C51157 * C50979 +
                   ((C25848 + C25847 + C25846) * C51028 +
                    (C25845 + C25844 + C25843) * C118) *
                       C51157 * C25801) *
                      C113 +
                  (((C25854 + C25853 + C25852) * C118 +
                    (C25851 + C25850 + C25849) * C51028) *
                       C51157 * C25801 +
                   ((C25855 + C25856 + C25857) * C118 +
                    (C25858 + C25859 + C25860) * C51028) *
                       C51157 * C50979) *
                      C114 -
                  (((C25805 * C652 + C25800 * C657 + C25804 * C315 +
                     C51300 * C322 + C25803 * C134 + C51308 * C144) *
                        C51028 +
                    (C25805 * C642 + C25800 * C651 + C25804 * C304 +
                     C51300 * C314 + C25803 * C123 + C51308 * C135) *
                        C118) *
                       C51157 * C50979 +
                   ((C25860 + C25859 + C25858) * C51028 +
                    (C25857 + C25856 + C25855) * C118) *
                       C51157 * C25801) *
                      C115) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C118 +
                     (C25846 + C25847 + C25848) * C51028) *
                        C51157 * C50979) *
                       C51253 -
                   (((C25849 + C25850 + C25851) * C51028 +
                     (C25852 + C25853 + C25854) * C118) *
                        C51157 * C50979 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C51157 * C25801) *
                       C50999) *
                      C1013 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51157 * C50979) *
                       C50999 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51157 * C50979 +
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C51028 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C118) *
                        C51157 * C25801) *
                       C51253) *
                      C1014 +
                  ((((C25803 * C1016 + C51308 * C1021 + C25804 * C1158 +
                      C51300 * C1162 + C25805 * C3645 + C25800 * C3648) *
                         C118 +
                     (C25803 * C1022 + C51308 * C1031 + C25804 * C1163 +
                      C51300 * C1170 + C25805 * C3649 + C25800 * C3654) *
                         C51028) *
                        C51157 * C25801 +
                    ((C26791 + C26792 + C26793) * C118 +
                     (C26794 + C26795 + C26796) * C51028) *
                        C51157 * C50979) *
                       C51253 -
                   (((C25805 * C3653 + C25800 * C3656 + C25804 * C1167 +
                      C51300 * C1172 + C25803 * C1026 + C51308 * C1033) *
                         C51028 +
                     (C25805 * C3647 + C25800 * C3652 + C25804 * C1160 +
                      C51300 * C1166 + C25803 * C1018 + C51308 * C1025) *
                         C118) *
                        C51157 * C50979 +
                    ((C26796 + C26795 + C26794) * C51028 +
                     (C26793 + C26792 + C26791) * C118) *
                        C51157 * C25801) *
                       C50999) *
                      C1015)) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                    C51300 * C306 + C25805 * C638 + C25800 * C643) *
                       C765 +
                   (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                    C51300 * C318 + C25805 * C644 + C25800 * C653) *
                       C760 -
                   (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                    C51300 * C643 + C25803 * C300 + C51308 * C306) *
                       C766 -
                   (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                    C51300 * C653 + C25803 * C307 + C51308 * C318) *
                       C761 +
                   (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                    C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                       C767 +
                   (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                    C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                       C762 -
                   (C25805 * C8882 + C25800 * C8884 + C25804 * C3159 +
                    C51300 * C3162 + C25803 * C769 + C51308 * C773) *
                       C768 -
                   (C25805 * C8885 + C25800 * C8888 + C25804 * C3163 +
                    C51300 * C3168 + C25803 * C774 + C51308 * C781) *
                       C763) *
                      C51157 * C25801 +
                  ((C25843 + C25844 + C25845) * C765 +
                   (C25846 + C25847 + C25848) * C760 -
                   (C26031 + C26032 + C26033) * C766 -
                   (C26034 + C26035 + C26036) * C761 +
                   (C26383 + C26384 + C26385) * C767 +
                   (C26386 + C26387 + C26388) * C762 -
                   (C25805 * C8883 + C25800 * C8886 + C25804 * C3160 +
                    C51300 * C3164 + C25803 * C770 + C51308 * C775) *
                       C768 -
                   (C25805 * C8887 + C25800 * C8889 + C25804 * C3165 +
                    C51300 * C3169 + C25803 * C776 + C51308 * C782) *
                       C763) *
                      C51157 * C50979) *
                 C50994 * C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C298 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51260 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C299 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C298 +
                    (C25846 + C25847 + C25848) * C51260 -
                    (C26031 + C26032 + C26033) * C299 -
                    (C26034 + C26035 + C26036) * C51044) *
                       C51157 * C50979) *
                      C295 +
                  (((C26033 + C26032 + C26031) * C299 -
                    ((C25848 + C25847 + C25846) * C51260 +
                     (C25845 + C25844 + C25843) * C298) +
                    (C26036 + C26035 + C26034) * C51044) *
                       C51157 * C25801 +
                   ((C26037 + C26038 + C26039) * C299 -
                    ((C25849 + C25850 + C25851) * C51260 +
                     (C25852 + C25853 + C25854) * C298) +
                    (C26040 + C26041 + C26042) * C51044) *
                       C51157 * C50979) *
                      C296 +
                  (((C25854 + C25853 + C25852) * C298 +
                    (C25851 + C25850 + C25849) * C51260 -
                    (C26039 + C26038 + C26037) * C299 -
                    (C26042 + C26041 + C26040) * C51044) *
                       C51157 * C25801 +
                   ((C25855 + C25856 + C25857) * C298 +
                    (C25858 + C25859 + C25860) * C51260 -
                    (C25805 * C772 + C25800 * C779 + C25804 * C641 +
                     C51300 * C649 + C25803 * C303 + C51308 * C312) *
                        C299 -
                    (C25805 * C780 + C25800 * C784 + C25804 * C650 +
                     C51300 * C656 + C25803 * C313 + C51308 * C321) *
                        C51044) *
                       C51157 * C50979) *
                      C297) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C298 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51260 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C299 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C298 +
                    (C25846 + C25847 + C25848) * C51260 -
                    (C26031 + C26032 + C26033) * C299 -
                    (C26034 + C26035 + C26036) * C51044) *
                       C51157 * C50979) *
                      C50994 * C1013 +
                  (((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                     C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                        C299 -
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C51260 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C298) +
                    (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                     C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                        C51044) *
                       C51157 * C25801 +
                   ((C25803 * C885 + C51308 * C895 + C25804 * C886 +
                     C51300 * C897 + C25805 * C3318 + C25800 * C3322) *
                        C299 -
                    ((C26218 + C26217 + C26216) * C51260 +
                     (C26215 + C26214 + C26213) * C298) +
                    (C25803 * C896 + C51308 * C909 + C25804 * C898 +
                     C51300 * C910 + C25805 * C3323 + C25800 * C3327) *
                        C51044) *
                       C51157 * C50979) *
                      C50994 * C1014 +
                  (((C25803 * C1016 + C51308 * C1021 + C25804 * C1158 +
                     C51300 * C1162 + C25805 * C3645 + C25800 * C3648) *
                        C298 +
                    (C25803 * C1022 + C51308 * C1031 + C25804 * C1163 +
                     C51300 * C1170 + C25805 * C3649 + C25800 * C3654) *
                        C51260 -
                    (C25805 * C9354 + C25800 * C9356 + C25804 * C3645 +
                     C51300 * C3648 + C25803 * C1158 + C51308 * C1162) *
                        C299 -
                    (C25805 * C9357 + C25800 * C9360 + C25804 * C3649 +
                     C51300 * C3654 + C25803 * C1163 + C51308 * C1170) *
                        C51044) *
                       C51157 * C25801 +
                   ((C26791 + C26792 + C26793) * C298 +
                    (C26794 + C26795 + C26796) * C51260 -
                    (C25805 * C9355 + C25800 * C9358 + C25804 * C3646 +
                     C51300 * C3650 + C25803 * C1159 + C51308 * C1164) *
                        C299 -
                    (C25805 * C9359 + C25800 * C9361 + C25804 * C3651 +
                     C51300 * C3655 + C25803 * C1165 + C51308 * C1171) *
                        C51044) *
                       C51157 * C50979) *
                      C50994 * C1015)) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C635 +
                    (C25846 + C25847 + C25848) * C630 -
                    (C26031 + C26032 + C26033) * C636 -
                    (C26034 + C26035 + C26036) * C631 +
                    (C26383 + C26384 + C26385) * C637 +
                    (C26386 + C26387 + C26388) * C632) *
                       C51157 * C50979) *
                      C50994 * C51262 +
                  (((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                     C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                        C636 -
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C630 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C635) +
                    (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                     C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                        C631 -
                    (C25805 * C9036 + C25800 * C9038 + C25804 * C3317 +
                     C51300 * C3320 + C25803 * C884 + C51308 * C893) *
                        C637 -
                    (C25805 * C9039 + C25800 * C9042 + C25804 * C3321 +
                     C51300 * C3326 + C25803 * C894 + C51308 * C908) *
                        C632) *
                       C51157 * C25801 +
                   ((C25803 * C885 + C51308 * C895 + C25804 * C886 +
                     C51300 * C897 + C25805 * C3318 + C25800 * C3322) *
                        C636 -
                    ((C26218 + C26217 + C26216) * C630 +
                     (C26215 + C26214 + C26213) * C635) +
                    (C25803 * C896 + C51308 * C909 + C25804 * C898 +
                     C51300 * C910 + C25805 * C3323 + C25800 * C3327) *
                        C631 -
                    (C25805 * C9037 + C25800 * C9040 + C25804 * C3318 +
                     C51300 * C3322 + C25803 * C886 + C51308 * C897) *
                        C637 -
                    (C25805 * C9041 + C25800 * C9043 + C25804 * C3323 +
                     C51300 * C3327 + C25803 * C898 + C51308 * C910) *
                        C632) *
                       C51157 * C50979) *
                      C50994 * C51070)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C118 +
                     (C25846 + C25847 + C25848) * C51028) *
                        C51157 * C50979) *
                       C295 -
                   (((C25849 + C25850 + C25851) * C51028 +
                     (C25852 + C25853 + C25854) * C118) *
                        C51157 * C50979 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C51157 * C25801) *
                       C296 +
                   (((C25854 + C25853 + C25852) * C118 +
                     (C25851 + C25850 + C25849) * C51028) *
                        C51157 * C25801 +
                    ((C25855 + C25856 + C25857) * C118 +
                     (C25858 + C25859 + C25860) * C51028) *
                        C51157 * C50979) *
                       C297) *
                      C51262 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51157 * C50979) *
                       C296 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51157 * C50979 +
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C51028 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C118) *
                        C51157 * C25801) *
                       C295 -
                   (((C25805 * C906 + C25800 * C914 + C25804 * C904 +
                      C51300 * C913 + C25803 * C483 + C51308 * C492) *
                         C51028 +
                     (C25805 * C890 + C25800 * C905 + C25804 * C889 +
                      C51300 * C903 + C25803 * C474 + C51308 * C482) *
                         C118) *
                        C51157 * C50979 +
                    ((C26224 + C26223 + C26222) * C51028 +
                     (C26221 + C26220 + C26219) * C118) *
                        C51157 * C25801) *
                       C297) *
                      C51070)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C118 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51028) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C118 +
                    (C25846 + C25847 + C25848) * C51028) *
                       C51157 * C50979) *
                      C50994 * C1240 -
                  (((C26218 + C26217 + C26216) * C51028 +
                    (C26215 + C26214 + C26213) * C118) *
                       C51157 * C50979 +
                   ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                     C51300 * C907 + C25803 * C486 + C51308 * C494) *
                        C51028 +
                    (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                     C51300 * C891 + C25803 * C476 + C51308 * C487) *
                        C118) *
                       C51157 * C25801) *
                      C50994 * C1241 +
                  (((C25803 * C1016 + C51308 * C1021 + C25804 * C1158 +
                     C51300 * C1162 + C25805 * C3645 + C25800 * C3648) *
                        C118 +
                    (C25803 * C1022 + C51308 * C1031 + C25804 * C1163 +
                     C51300 * C1170 + C25805 * C3649 + C25800 * C3654) *
                        C51028) *
                       C51157 * C25801 +
                   ((C26791 + C26792 + C26793) * C118 +
                    (C26794 + C26795 + C26796) * C51028) *
                       C51157 * C50979) *
                      C50994 * C1242 -
                  (((C25805 * C9462 + C25800 * C9466 + C25804 * C3760 +
                     C51300 * C3765 + C25803 * C1252 + C51308 * C1258) *
                        C51028 +
                    (C25805 * C9460 + C25800 * C9463 + C25804 * C3756 +
                     C51300 * C3761 + C25803 * C1246 + C51308 * C1253) *
                        C118) *
                       C51157 * C50979 +
                   ((C25805 * C9464 + C25800 * C9467 + C25804 * C3762 +
                     C51300 * C3766 + C25803 * C1254 + C51308 * C1259) *
                        C51028 +
                    (C25805 * C9461 + C25800 * C9465 + C25804 * C3757 +
                     C51300 * C3763 + C25803 * C1247 + C51308 * C1255) *
                        C118) *
                       C51157 * C25801) *
                      C50994 * C1243)) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C118 +
                     (C25846 + C25847 + C25848) * C51028) *
                        C51157 * C50979) *
                       C51305 -
                   (((C25849 + C25850 + C25851) * C51028 +
                     (C25852 + C25853 + C25854) * C118) *
                        C51157 * C50979 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C51157 * C25801) *
                       C51291 +
                   (((C25854 + C25853 + C25852) * C118 +
                     (C25851 + C25850 + C25849) * C51028) *
                        C51157 * C25801 +
                    ((C25855 + C25856 + C25857) * C118 +
                     (C25858 + C25859 + C25860) * C51028) *
                        C51157 * C50979) *
                       C1362) *
                      C1775 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51157 * C50979) *
                       C51291 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51157 * C50979 +
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C51028 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C118) *
                        C51157 * C25801) *
                       C51305 -
                   (((C25805 * C906 + C25800 * C914 + C25804 * C904 +
                      C51300 * C913 + C25803 * C483 + C51308 * C492) *
                         C51028 +
                     (C25805 * C890 + C25800 * C905 + C25804 * C889 +
                      C51300 * C903 + C25803 * C474 + C51308 * C482) *
                         C118) *
                        C51157 * C50979 +
                    ((C26224 + C26223 + C26222) * C51028 +
                     (C26221 + C26220 + C26219) * C118) *
                        C51157 * C25801) *
                       C1362) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C298 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51260 -
                     (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                      C51300 * C643 + C25803 * C300 + C51308 * C306) *
                         C299 -
                     (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                      C51300 * C653 + C25803 * C307 + C51308 * C318) *
                         C51044) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C298 +
                     (C25846 + C25847 + C25848) * C51260 -
                     (C26031 + C26032 + C26033) * C299 -
                     (C26034 + C26035 + C26036) * C51044) *
                        C51157 * C50979) *
                       C1490 +
                   (((C26033 + C26032 + C26031) * C299 -
                     ((C25848 + C25847 + C25846) * C51260 +
                      (C25845 + C25844 + C25843) * C298) +
                     (C26036 + C26035 + C26034) * C51044) *
                        C51157 * C25801 +
                    ((C26037 + C26038 + C26039) * C299 -
                     ((C25849 + C25850 + C25851) * C51260 +
                      (C25852 + C25853 + C25854) * C298) +
                     (C26040 + C26041 + C26042) * C51044) *
                        C51157 * C50979) *
                       C50999) *
                      C1775 +
                  ((((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                      C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                         C299 -
                     ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                       C51300 * C907 + C25803 * C486 + C51308 * C494) *
                          C51260 +
                      (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                       C51300 * C891 + C25803 * C476 + C51308 * C487) *
                          C298) +
                     (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                      C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                         C51044) *
                        C51157 * C25801 +
                    ((C27539 + C27540 + C27541) * C299 -
                     ((C26218 + C26217 + C26216) * C51260 +
                      (C26215 + C26214 + C26213) * C298) +
                     (C27542 + C27543 + C27544) * C51044) *
                        C51157 * C50979) *
                       C1490 +
                   (((C26213 + C26214 + C26215) * C298 +
                     (C26216 + C26217 + C26218) * C51260 -
                     (C27541 + C27540 + C27539) * C299 -
                     (C27544 + C27543 + C27542) * C51044) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C298 +
                     (C26222 + C26223 + C26224) * C51260 -
                     (C25805 * C3319 + C25800 * C3324 + C25804 * C888 +
                      C51300 * C901 + C25803 * C887 + C51308 * C899) *
                         C299 -
                     (C25805 * C3325 + C25800 * C3328 + C25804 * C902 +
                      C51300 * C912 + C25803 * C900 + C51308 * C911) *
                         C51044) *
                        C51157 * C50979) *
                       C50999) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C118 +
                     (C25846 + C25847 + C25848) * C51028) *
                        C51157 * C50979) *
                       C1490 -
                   (((C25849 + C25850 + C25851) * C51028 +
                     (C25852 + C25853 + C25854) * C118) *
                        C51157 * C50979 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C51157 * C25801) *
                       C50999) *
                      C51307 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51157 * C50979) *
                       C50999 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51157 * C50979 +
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C51028 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C118) *
                        C51157 * C25801) *
                       C1490) *
                      C51297 +
                  ((((C25803 * C1016 + C51308 * C1021 + C25804 * C1158 +
                      C51300 * C1162 + C25805 * C3645 + C25800 * C3648) *
                         C118 +
                     (C25803 * C1022 + C51308 * C1031 + C25804 * C1163 +
                      C51300 * C1170 + C25805 * C3649 + C25800 * C3654) *
                         C51028) *
                        C51157 * C25801 +
                    ((C26791 + C26792 + C26793) * C118 +
                     (C26794 + C26795 + C26796) * C51028) *
                        C51157 * C50979) *
                       C1490 -
                   (((C25805 * C3653 + C25800 * C3656 + C25804 * C1167 +
                      C51300 * C1172 + C25803 * C1026 + C51308 * C1033) *
                         C51028 +
                     (C25805 * C3647 + C25800 * C3652 + C25804 * C1160 +
                      C51300 * C1166 + C25803 * C1018 + C51308 * C1025) *
                         C118) *
                        C51157 * C50979 +
                    ((C26796 + C26795 + C26794) * C51028 +
                     (C26793 + C26792 + C26791) * C118) *
                        C51157 * C25801) *
                       C50999) *
                      C2019)) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C118 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51028) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C118 +
                    (C25846 + C25847 + C25848) * C51028) *
                       C51157 * C50979) *
                      C112 -
                  (((C25849 + C25850 + C25851) * C51028 +
                    (C25852 + C25853 + C25854) * C118) *
                       C51157 * C50979 +
                   ((C25848 + C25847 + C25846) * C51028 +
                    (C25845 + C25844 + C25843) * C118) *
                       C51157 * C25801) *
                      C113 +
                  (((C25854 + C25853 + C25852) * C118 +
                    (C25851 + C25850 + C25849) * C51028) *
                       C51157 * C25801 +
                   ((C25855 + C25856 + C25857) * C118 +
                    (C25858 + C25859 + C25860) * C51028) *
                       C51157 * C50979) *
                      C114 -
                  (((C25805 * C652 + C25800 * C657 + C25804 * C315 +
                     C51300 * C322 + C25803 * C134 + C51308 * C144) *
                        C51028 +
                    (C25805 * C642 + C25800 * C651 + C25804 * C304 +
                     C51300 * C314 + C25803 * C123 + C51308 * C135) *
                        C118) *
                       C51157 * C50979 +
                   ((C25860 + C25859 + C25858) * C51028 +
                    (C25857 + C25856 + C25855) * C118) *
                       C51157 * C25801) *
                      C115) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C635 +
                    (C25846 + C25847 + C25848) * C630 -
                    (C26031 + C26032 + C26033) * C636 -
                    (C26034 + C26035 + C26036) * C631 +
                    (C26383 + C26384 + C26385) * C637 +
                    (C26386 + C26387 + C26388) * C632) *
                       C51157 * C50979) *
                      C51253 +
                  (((C26033 + C26032 + C26031) * C636 -
                    ((C25848 + C25847 + C25846) * C630 +
                     (C25845 + C25844 + C25843) * C635) +
                    (C26036 + C26035 + C26034) * C631 -
                    (C26385 + C26384 + C26383) * C637 -
                    (C26388 + C26387 + C26386) * C632) *
                       C51157 * C25801 +
                   ((C26037 + C26038 + C26039) * C636 -
                    ((C25849 + C25850 + C25851) * C630 +
                     (C25852 + C25853 + C25854) * C635) +
                    (C26040 + C26041 + C26042) * C631 -
                    (C25805 * C3161 + C25800 * C3166 + C25804 * C771 +
                     C51300 * C777 + C25803 * C640 + C51308 * C647) *
                        C637 -
                    (C25805 * C3167 + C25800 * C3170 + C25804 * C778 +
                     C51300 * C783 + C25803 * C648 + C51308 * C655) *
                        C632) *
                       C51157 * C50979) *
                      C50999) *
                 C51058) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C298 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51260 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C299 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C298 +
                    (C25846 + C25847 + C25848) * C51260 -
                    (C26031 + C26032 + C26033) * C299 -
                    (C26034 + C26035 + C26036) * C51044) *
                       C51157 * C50979) *
                      C295 +
                  (((C26033 + C26032 + C26031) * C299 -
                    ((C25848 + C25847 + C25846) * C51260 +
                     (C25845 + C25844 + C25843) * C298) +
                    (C26036 + C26035 + C26034) * C51044) *
                       C51157 * C25801 +
                   ((C26037 + C26038 + C26039) * C299 -
                    ((C25849 + C25850 + C25851) * C51260 +
                     (C25852 + C25853 + C25854) * C298) +
                    (C26040 + C26041 + C26042) * C51044) *
                       C51157 * C50979) *
                      C296 +
                  (((C25854 + C25853 + C25852) * C298 +
                    (C25851 + C25850 + C25849) * C51260 -
                    (C26039 + C26038 + C26037) * C299 -
                    (C26042 + C26041 + C26040) * C51044) *
                       C51157 * C25801 +
                   ((C25855 + C25856 + C25857) * C298 +
                    (C25858 + C25859 + C25860) * C51260 -
                    (C25805 * C772 + C25800 * C779 + C25804 * C641 +
                     C51300 * C649 + C25803 * C303 + C51308 * C312) *
                        C299 -
                    (C25805 * C780 + C25800 * C784 + C25804 * C650 +
                     C51300 * C656 + C25803 * C313 + C51308 * C321) *
                        C51044) *
                       C51157 * C50979) *
                      C297) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                    C51300 * C306 + C25805 * C638 + C25800 * C643) *
                       C765 +
                   (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                    C51300 * C318 + C25805 * C644 + C25800 * C653) *
                       C760 -
                   (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                    C51300 * C643 + C25803 * C300 + C51308 * C306) *
                       C766 -
                   (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                    C51300 * C653 + C25803 * C307 + C51308 * C318) *
                       C761 +
                   (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                    C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                       C767 +
                   (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                    C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                       C762 -
                   (C25805 * C8882 + C25800 * C8884 + C25804 * C3159 +
                    C51300 * C3162 + C25803 * C769 + C51308 * C773) *
                       C768 -
                   (C25805 * C8885 + C25800 * C8888 + C25804 * C3163 +
                    C51300 * C3168 + C25803 * C774 + C51308 * C781) *
                       C763) *
                      C51157 * C25801 +
                  ((C25843 + C25844 + C25845) * C765 +
                   (C25846 + C25847 + C25848) * C760 -
                   (C26031 + C26032 + C26033) * C766 -
                   (C26034 + C26035 + C26036) * C761 +
                   (C26383 + C26384 + C26385) * C767 +
                   (C26386 + C26387 + C26388) * C762 -
                   (C25805 * C8883 + C25800 * C8886 + C25804 * C3160 +
                    C51300 * C3164 + C25803 * C770 + C51308 * C775) *
                       C768 -
                   (C25805 * C8887 + C25800 * C8889 + C25804 * C3165 +
                    C51300 * C3169 + C25803 * C776 + C51308 * C782) *
                       C763) *
                      C51157 * C50979) *
                 C50994 * C51058) /
                    (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C51157 * C25801 +
                    ((C25843 + C25844 + C25845) * C118 +
                     (C25846 + C25847 + C25848) * C51028) *
                        C51157 * C50979) *
                       C295 -
                   (((C25849 + C25850 + C25851) * C51028 +
                     (C25852 + C25853 + C25854) * C118) *
                        C51157 * C50979 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C51157 * C25801) *
                       C296 +
                   (((C25854 + C25853 + C25852) * C118 +
                     (C25851 + C25850 + C25849) * C51028) *
                        C51157 * C25801 +
                    ((C25855 + C25856 + C25857) * C118 +
                     (C25858 + C25859 + C25860) * C51028) *
                        C51157 * C50979) *
                       C297) *
                      C51262 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C51157 * C25801 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51157 * C50979) *
                       C296 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51157 * C50979 +
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C51028 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C118) *
                        C51157 * C25801) *
                       C295 -
                   (((C25805 * C906 + C25800 * C914 + C25804 * C904 +
                      C51300 * C913 + C25803 * C483 + C51308 * C492) *
                         C51028 +
                     (C25805 * C890 + C25800 * C905 + C25804 * C889 +
                      C51300 * C903 + C25803 * C474 + C51308 * C482) *
                         C118) *
                        C51157 * C50979 +
                    ((C26224 + C26223 + C26222) * C51028 +
                     (C26221 + C26220 + C26219) * C118) *
                        C51157 * C25801) *
                       C297) *
                      C51070)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C51157 * C25801 +
                   ((C25843 + C25844 + C25845) * C635 +
                    (C25846 + C25847 + C25848) * C630 -
                    (C26031 + C26032 + C26033) * C636 -
                    (C26034 + C26035 + C26036) * C631 +
                    (C26383 + C26384 + C26385) * C637 +
                    (C26386 + C26387 + C26388) * C632) *
                       C51157 * C50979) *
                      C50994 * C51262 +
                  (((C25803 * C883 + C51308 * C891 + C25804 * C884 +
                     C51300 * C893 + C25805 * C3317 + C25800 * C3320) *
                        C636 -
                    ((C25805 * C894 + C25800 * C908 + C25804 * C892 +
                      C51300 * C907 + C25803 * C486 + C51308 * C494) *
                         C630 +
                     (C25805 * C884 + C25800 * C893 + C25804 * C883 +
                      C51300 * C891 + C25803 * C476 + C51308 * C487) *
                         C635) +
                    (C25803 * C892 + C51308 * C907 + C25804 * C894 +
                     C51300 * C908 + C25805 * C3321 + C25800 * C3326) *
                        C631 -
                    (C25805 * C9036 + C25800 * C9038 + C25804 * C3317 +
                     C51300 * C3320 + C25803 * C884 + C51308 * C893) *
                        C637 -
                    (C25805 * C9039 + C25800 * C9042 + C25804 * C3321 +
                     C51300 * C3326 + C25803 * C894 + C51308 * C908) *
                        C632) *
                       C51157 * C25801 +
                   ((C25803 * C885 + C51308 * C895 + C25804 * C886 +
                     C51300 * C897 + C25805 * C3318 + C25800 * C3322) *
                        C636 -
                    ((C26218 + C26217 + C26216) * C630 +
                     (C26215 + C26214 + C26213) * C635) +
                    (C25803 * C896 + C51308 * C909 + C25804 * C898 +
                     C51300 * C910 + C25805 * C3323 + C25800 * C3327) *
                        C631 -
                    (C25805 * C9037 + C25800 * C9040 + C25804 * C3318 +
                     C51300 * C3322 + C25803 * C886 + C51308 * C897) *
                        C637 -
                    (C25805 * C9041 + C25800 * C9043 + C25804 * C3323 +
                     C51300 * C3327 + C25803 * C898 + C51308 * C910) *
                        C632) *
                       C51157 * C50979) *
                      C50994 * C51070)) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51275 +
            ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
             (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
             (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                C51275 +
            (C29043 * C1363 + C29044 * C1358 - (C24722 + C24721) * C1364 -
             (C24724 + C24723) * C51044) *
                C51169) *
               C50979) *
              C51305 +
          ((((C23176 + C23175) * C1364 -
             ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
             (C23178 + C23177) * C51044) *
                C51275 +
            ((C24721 + C24722) * C1364 - (C29045 * C1358 + C29046 * C1363) +
             (C24723 + C24724) * C51044) *
                C51169) *
               C25801 +
           (((C23181 + C23180) * C1364 -
             ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
             (C23183 + C23182) * C51044) *
                C51275 +
            ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
             (C24727 + C24728) * C51044) *
                C51169) *
               C50979) *
              C51291 +
          ((C24363 * C51275 +
            (C29047 * C1363 + C29048 * C1358 - (C24726 + C24725) * C1364 -
             (C24728 + C24727) * C51044) *
                C51169) *
               C25801 +
           (((C22986 + C22985) * C1363 + (C22984 + C22983) * C1358 -
             (C23185 + C23184) * C1364 - (C23187 + C23186) * C51044) *
                C51275 +
            ((C23373 + C23374) * C1363 + (C23375 + C23376) * C1358 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C1364 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C1362) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1492 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51306 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1493 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51294 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C1494 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C1489) *
                C51275 +
            ((C29049 + C29050) * C1492 + (C29051 + C29052) * C51306 -
             (C29608 + C29609) * C1493 - (C29610 + C29611) * C51294 +
             (C29612 + C29613) * C1494 + (C29614 + C29615) * C1489) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C1492 + (C22977 + C22978) * C51306 -
             (C23175 + C23176) * C1493 - (C23177 + C23178) * C51294 +
             (C23545 + C23546) * C1494 + (C23547 + C23548) * C1489) *
                C51275 +
            (C29043 * C1492 + C29044 * C51306 - (C24722 + C24721) * C1493 -
             (C24724 + C24723) * C51294 + (C29264 + C29265) * C1494 +
             (C29266 + C29267) * C1489) *
                C51169) *
               C50979) *
              C1490 +
          ((((C23176 + C23175) * C1493 -
             ((C22978 + C22977) * C51306 + (C22976 + C22975) * C1492) +
             (C23178 + C23177) * C51294 - (C23546 + C23545) * C1494 -
             (C23548 + C23547) * C1489) *
                C51275 +
            ((C24721 + C24722) * C1493 - (C29045 * C51306 + C29046 * C1492) +
             (C24723 + C24724) * C51294 - (C29265 + C29264) * C1494 -
             (C29267 + C29266) * C1489) *
                C51169) *
               C25801 +
           (((C23181 + C23180) * C1493 -
             ((C22982 + C22981) * C51306 + (C22980 + C22979) * C1492) +
             (C23183 + C23182) * C51294 - (C23550 + C23549) * C1494 -
             (C23552 + C23551) * C1489) *
                C51275 +
            ((C24725 + C24726) * C1493 - (C23377 * C51306 + C23378 * C1492) +
             (C24727 + C24728) * C51294 -
             (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                 C1494 -
             (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                 C1489) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C1363 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C1358 -
              (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                  C1364 -
              (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                  C51044) *
                 C51275 +
             ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
              (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                 C51169) *
                C25801 +
            (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
              (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                 C51275 +
             C30866 * C51169) *
                C50979) *
               C1490 +
           ((((C23176 + C23175) * C1364 -
              ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
              (C23178 + C23177) * C51044) *
                 C51275 +
             C30867 * C51169) *
                C25801 +
            (((C23181 + C23180) * C1364 -
              ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
              (C23183 + C23182) * C51044) *
                 C51275 +
             ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
              (C24727 + C24728) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51262 +
          (((((C29609 + C29608) * C1364 -
              ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
              (C29611 + C29610) * C51044) *
                 C51275 +
             ((C30054 + C30055) * C1364 -
              ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
              (C30056 + C30057) * C51044) *
                 C51169) *
                C25801 +
            (C30867 * C51275 +
             ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
              (C30060 + C30061) * C51044) *
                 C51169) *
                C50979) *
               C1490 +
           ((C30866 * C51275 +
             (C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
              (C30061 + C30060) * C51044) *
                 C51169) *
                C25801 +
            ((C29047 * C1363 + C29048 * C1358 - (C24726 + C24725) * C1364 -
              (C24728 + C24727) * C51044) *
                 C51275 +
             ((C23963 + C23964) * C1363 + (C23965 + C23966) * C1358 -
              (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
               C22935 * C1166) *
                  C1364 -
              (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
               C22935 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C1363 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C1358 -
              (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                  C1364 -
              (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                  C51044) *
                 C51275 +
             ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
              (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                 C51169) *
                C25801 +
            (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
              (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                 C51275 +
             C30866 * C51169) *
                C50979) *
               C51253 +
           ((((C23176 + C23175) * C1364 -
              ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
              (C23178 + C23177) * C51044) *
                 C51275 +
             C30867 * C51169) *
                C25801 +
            (((C23181 + C23180) * C1364 -
              ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
              (C23183 + C23182) * C51044) *
                 C51275 +
             ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
              (C24727 + C24728) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C1775 +
          (((((C29609 + C29608) * C1364 -
              ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
              (C29611 + C29610) * C51044) *
                 C51275 +
             ((C30054 + C30055) * C1364 -
              ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
              (C30056 + C30057) * C51044) *
                 C51169) *
                C25801 +
            (C30867 * C51275 +
             ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
              (C30060 + C30061) * C51044) *
                 C51169) *
                C50979) *
               C51253 +
           ((C30866 * C51275 +
             (C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
              (C30061 + C30060) * C51044) *
                 C51169) *
                C25801 +
            ((C29047 * C1363 + C29048 * C1358 - (C24726 + C24725) * C1364 -
              (C24728 + C24727) * C51044) *
                 C51275 +
             ((C23963 + C23964) * C1363 + (C23965 + C23966) * C1358 -
              (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
               C22935 * C1166) *
                  C1364 -
              (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
               C22935 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1492 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51306 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1493 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51294 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C1494 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C1489) *
                C51275 +
            ((C29049 + C29050) * C1492 + (C29051 + C29052) * C51306 -
             (C29608 + C29609) * C1493 - (C29610 + C29611) * C51294 +
             (C29612 + C29613) * C1494 + (C29614 + C29615) * C1489) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C1492 + (C22977 + C22978) * C51306 -
             (C23175 + C23176) * C1493 - (C23177 + C23178) * C51294 +
             (C23545 + C23546) * C1494 + (C23547 + C23548) * C1489) *
                C51275 +
            (C29043 * C1492 + C29044 * C51306 - C30852 * C1493 -
             C30853 * C51294 + (C29264 + C29265) * C1494 +
             (C29266 + C29267) * C1489) *
                C51169) *
               C50979) *
              C50994 * C1775 +
          ((((C29609 + C29608) * C1493 -
             ((C29052 + C29051) * C51306 + (C29050 + C29049) * C1492) +
             (C29611 + C29610) * C51294 - (C29613 + C29612) * C1494 -
             (C29615 + C29614) * C1489) *
                C51275 +
            ((C30054 + C30055) * C1493 -
             ((C29834 + C29835) * C51306 + (C29836 + C29837) * C1492) +
             (C30056 + C30057) * C51294 -
             (C22941 * C9354 + C51143 * C9356 + C22940 * C3645 +
              C22935 * C3648) *
                 C1494 -
             (C22941 * C9357 + C51143 * C9360 + C22940 * C3649 +
              C22935 * C3654) *
                 C1489) *
                C51169) *
               C25801 +
           ((C30854 * C1493 - (C29045 * C51306 + C29046 * C1492) +
             C30857 * C51294 - (C29265 + C29264) * C1494 -
             (C29267 + C29266) * C1489) *
                C51275 +
            ((C30058 + C30059) * C1493 - (C29812 * C51306 + C29813 * C1492) +
             (C30060 + C30061) * C51294 -
             (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
              C22935 * C3650) *
                 C1494 -
             (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
              C22935 * C3655) *
                 C1489) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51275 +
            ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
             (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
             (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                C51275 +
            C30866 * C51169) *
               C50979) *
              C50994 * C51307 +
          ((((C29609 + C29608) * C1364 -
             ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
             (C29611 + C29610) * C51044) *
                C51275 +
            ((C30054 + C30055) * C1364 -
             ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
             (C30056 + C30057) * C51044) *
                C51169) *
               C25801 +
           (C30867 * C51275 +
            ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
             (C30060 + C30061) * C51044) *
                C51169) *
               C50979) *
              C50994 * C51297 +
          ((((C29837 + C29836) * C1363 + (C29835 + C29834) * C1358 -
             (C30055 + C30054) * C1364 - (C30057 + C30056) * C51044) *
                C51275 +
            ((C30200 + C30201) * C1363 + (C30202 + C30203) * C1358 -
             (C22941 * C9461 + C51143 * C9465 + C22940 * C3757 +
              C22935 * C3763) *
                 C1364 -
             (C22941 * C9464 + C51143 * C9467 + C22940 * C3762 +
              C22935 * C3766) *
                 C51044) *
                C51169) *
               C25801 +
           ((C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
             (C30061 + C30060) * C51044) *
                C51275 +
            ((C29838 + C29839) * C1363 + (C29840 + C29841) * C1358 -
             (C22941 * C9460 + C51143 * C9463 + C22940 * C3756 +
              C22935 * C3761) *
                 C1364 -
             (C22941 * C9462 + C51143 * C9466 + C22940 * C3760 +
              C22935 * C3765) *
                 C51044) *
                C51169) *
               C50979) *
              C50994 * C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C51275 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C22941 * C884 + C51143 * C893 + C22940 * C883 + C22935 * C891) *
                 C636 -
             (C22941 * C894 + C51143 * C908 + C22940 * C892 + C22935 * C907) *
                 C631 +
             (C22940 * C884 + C22935 * C893 + C22941 * C3317 + C51143 * C3320) *
                 C637 +
             (C22940 * C894 + C22935 * C908 + C22941 * C3321 + C51143 * C3326) *
                 C632) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C51275 +
            (C29043 * C635 + C29044 * C630 - (C24722 + C24721) * C636 -
             (C24724 + C24723) * C631 + (C29264 + C29265) * C637 +
             (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C51253 +
          ((((C23176 + C23175) * C636 -
             ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
             (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
             (C23548 + C23547) * C632) *
                C51275 +
            ((C24721 + C24722) * C636 - (C29045 * C630 + C29046 * C635) +
             (C24723 + C24724) * C631 - (C29265 + C29264) * C637 -
             (C29267 + C29266) * C632) *
                C51169) *
               C25801 +
           (((C23181 + C23180) * C636 -
             ((C22982 + C22981) * C630 + (C22980 + C22979) * C635) +
             (C23183 + C23182) * C631 - (C23550 + C23549) * C637 -
             (C23552 + C23551) * C632) *
                C51275 +
            ((C24725 + C24726) * C636 - (C23377 * C630 + C23378 * C635) +
             (C24727 + C24728) * C631 -
             (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                 C637 -
             (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                 C632) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51275 +
            ((C22940 * C476 + C22935 * C487 + C22941 * C883 + C51143 * C891) *
                 C118 +
             (C22940 * C486 + C22935 * C494 + C22941 * C892 + C51143 * C907) *
                 C51028) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
            ((C23365 + C23366) * C118 + (C23367 + C23368) * C51028) * C51169) *
               C50979) *
              C112 -
          ((C23381 * C51169 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51275) *
               C50979 +
           (((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51169 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51275) *
               C25801) *
              C113 +
          ((C22999 * C51275 +
            ((C23369 + C23370) * C118 + (C23371 + C23372) * C51028) * C51169) *
               C25801 +
           (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51275 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
               C50979) *
              C114 -
          ((((C22941 * C1645 + C51143 * C1646 + C22940 * C485 + C22935 * C493) *
                 C51028 +
             (C22941 * C1643 + C51143 * C1644 + C22940 * C475 + C22935 * C484) *
                 C118) *
                C51169 +
            ((C22990 + C22989) * C51028 + (C22988 + C22987) * C118) * C51275) *
               C50979 +
           (((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51169 +
            C23000 * C51275) *
               C25801) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C51275 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C25801 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
             C29059 * C51169) *
                C50979) *
               C51253 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51275) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51275) *
                C25801) *
               C50999) *
              C1013 +
          (((C29059 * C51275 + C29842 * C51169) * C25801 +
            (C29061 * C51275 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C50999 -
           ((C29843 * C51169 + C29060 * C51275) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51275) *
                C25801) *
               C51253) *
              C1014 +
          (((((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C51275 +
             ((C22940 * C1247 + C22935 * C1255 + C22941 * C3757 +
               C51143 * C3763) *
                  C118 +
              (C22940 * C1254 + C22935 * C1259 + C22941 * C3762 +
               C51143 * C3766) *
                  C51028) *
                 C51169) *
                C25801 +
            (C29842 * C51275 +
             ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C51169) *
                C50979) *
               C51253 -
           ((((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
               C22935 * C1257) *
                  C51028 +
              (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
               C22935 * C1251) *
                  C118) *
                 C51169 +
             ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51275) *
                C50979 +
            (((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C51169 +
             C29843 * C51275) *
                C25801) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C765 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C760 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C766 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C761 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C767 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C762 -
            (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
                C768 -
            (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
                C763) *
               C51275 +
           ((C29049 + C29050) * C765 + (C29051 + C29052) * C760 -
            (C22941 * C884 + C51143 * C893 + C22940 * C883 + C22935 * C891) *
                C766 -
            (C22941 * C894 + C51143 * C908 + C22940 * C892 + C22935 * C907) *
                C761 +
            (C22940 * C884 + C22935 * C893 + C22941 * C3317 + C51143 * C3320) *
                C767 +
            (C22940 * C894 + C22935 * C908 + C22941 * C3321 + C51143 * C3326) *
                C762 -
            (C22941 * C9036 + C51143 * C9038 + C22940 * C3317 +
             C22935 * C3320) *
                C768 -
            (C22941 * C9039 + C51143 * C9042 + C22940 * C3321 +
             C22935 * C3326) *
                C763) *
               C51169) *
              C25801 +
          (((C22975 + C22976) * C765 + (C22977 + C22978) * C760 -
            (C23175 + C23176) * C766 - (C23177 + C23178) * C761 +
            (C23545 + C23546) * C767 + (C23547 + C23548) * C762 -
            (C22941 * C3160 + C51143 * C3164 + C22940 * C770 + C22935 * C775) *
                C768 -
            (C22941 * C3165 + C51143 * C3169 + C22940 * C776 + C22935 * C782) *
                C763) *
               C51275 +
           (C29043 * C765 + C29044 * C760 - (C24722 + C24721) * C766 -
            (C24724 + C24723) * C761 + (C29264 + C29265) * C767 +
            (C29266 + C29267) * C762 -
            (C22941 * C9037 + C51143 * C9040 + C22940 * C3318 +
             C22935 * C3322) *
                C768 -
            (C22941 * C9041 + C51143 * C9043 + C22940 * C3323 +
             C22935 * C3327) *
                C763) *
               C51169) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51275 +
            ((C22940 * C476 + C22935 * C487 + C22941 * C883 + C51143 * C891) *
                 C298 +
             (C22940 * C486 + C22935 * C494 + C22941 * C892 + C51143 * C907) *
                 C51260 -
             (C22941 * C884 + C51143 * C893 + C22940 * C883 + C22935 * C891) *
                 C299 -
             (C22941 * C894 + C51143 * C908 + C22940 * C892 + C22935 * C907) *
                 C51044) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
             (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                C51275 +
            ((C23365 + C23366) * C298 + (C23367 + C23368) * C51260 -
             (C24722 + C24721) * C299 - (C24724 + C24723) * C51044) *
                C51169) *
               C50979) *
              C295 +
          ((((C23176 + C23175) * C299 -
             ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
             (C23178 + C23177) * C51044) *
                C51275 +
            ((C24721 + C24722) * C299 -
             ((C23368 + C23367) * C51260 + (C23366 + C23365) * C298) +
             (C24723 + C24724) * C51044) *
                C51169) *
               C25801 +
           (((C23181 + C23180) * C299 -
             ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
             (C23183 + C23182) * C51044) *
                C51275 +
            ((C24725 + C24726) * C299 - (C23377 * C51260 + C23378 * C298) +
             (C24727 + C24728) * C51044) *
                C51169) *
               C50979) *
              C296 +
          ((C23193 * C51275 +
            ((C23369 + C23370) * C298 + (C23371 + C23372) * C51260 -
             (C24726 + C24725) * C299 - (C24728 + C24727) * C51044) *
                C51169) *
               C25801 +
           (((C22986 + C22985) * C298 + (C22984 + C22983) * C51260 -
             (C23185 + C23184) * C299 - (C23187 + C23186) * C51044) *
                C51275 +
            ((C23373 + C23374) * C298 + (C23375 + C23376) * C51260 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C299 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51275 +
            ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
             (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
             (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                C51275 +
            (C29043 * C298 + C29044 * C51260 - (C24722 + C24721) * C299 -
             (C24724 + C24723) * C51044) *
                C51169) *
               C50979) *
              C50994 * C1013 +
          ((((C29609 + C29608) * C299 -
             ((C29052 + C29051) * C51260 + (C29050 + C29049) * C298) +
             (C29611 + C29610) * C51044) *
                C51275 +
            ((C30054 + C30055) * C299 -
             ((C29834 + C29835) * C51260 + (C29836 + C29837) * C298) +
             (C30056 + C30057) * C51044) *
                C51169) *
               C25801 +
           (((C24721 + C24722) * C299 - (C29045 * C51260 + C29046 * C298) +
             (C24723 + C24724) * C51044) *
                C51275 +
            ((C30058 + C30059) * C299 - (C29812 * C51260 + C29813 * C298) +
             (C30060 + C30061) * C51044) *
                C51169) *
               C50979) *
              C50994 * C1014 +
          ((((C29837 + C29836) * C298 + (C29835 + C29834) * C51260 -
             (C30055 + C30054) * C299 - (C30057 + C30056) * C51044) *
                C51275 +
            ((C22940 * C1247 + C22935 * C1255 + C22941 * C3757 +
              C51143 * C3763) *
                 C298 +
             (C22940 * C1254 + C22935 * C1259 + C22941 * C3762 +
              C51143 * C3766) *
                 C51260 -
             (C22941 * C9461 + C51143 * C9465 + C22940 * C3757 +
              C22935 * C3763) *
                 C299 -
             (C22941 * C9464 + C51143 * C9467 + C22940 * C3762 +
              C22935 * C3766) *
                 C51044) *
                C51169) *
               C25801 +
           ((C29810 * C298 + C29811 * C51260 - (C30059 + C30058) * C299 -
             (C30061 + C30060) * C51044) *
                C51275 +
            ((C29838 + C29839) * C298 + (C29840 + C29841) * C51260 -
             (C22941 * C9460 + C51143 * C9463 + C22940 * C3756 +
              C22935 * C3761) *
                 C299 -
             (C22941 * C9462 + C51143 * C9466 + C22940 * C3760 +
              C22935 * C3765) *
                 C51044) *
                C51169) *
               C50979) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C51275 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
             (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C51275 +
            (C29043 * C635 + C29044 * C630 - (C24722 + C24721) * C636 -
             (C24724 + C24723) * C631 + (C29264 + C29265) * C637 +
             (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C50994 * C51262 +
          ((((C29609 + C29608) * C636 -
             ((C29052 + C29051) * C630 + (C29050 + C29049) * C635) +
             (C29611 + C29610) * C631 - (C29613 + C29612) * C637 -
             (C29615 + C29614) * C632) *
                C51275 +
            ((C22940 * C1158 + C22935 * C1162 + C22941 * C3645 +
              C51143 * C3648) *
                 C636 -
             ((C22941 * C1163 + C51143 * C1170 + C22940 * C1022 +
               C22935 * C1031) *
                  C630 +
              (C22941 * C1158 + C51143 * C1162 + C22940 * C1016 +
               C22935 * C1021) *
                  C635) +
             (C22940 * C1163 + C22935 * C1170 + C22941 * C3649 +
              C51143 * C3654) *
                 C631 -
             (C22941 * C9354 + C51143 * C9356 + C22940 * C3645 +
              C22935 * C3648) *
                 C637 -
             (C22941 * C9357 + C51143 * C9360 + C22940 * C3649 +
              C22935 * C3654) *
                 C632) *
                C51169) *
               C25801 +
           (((C24721 + C24722) * C636 - (C29045 * C630 + C29046 * C635) +
             (C24723 + C24724) * C631 - (C29265 + C29264) * C637 -
             (C29267 + C29266) * C632) *
                C51275 +
            ((C22940 * C1159 + C22935 * C1164 + C22941 * C3646 +
              C51143 * C3650) *
                 C636 -
             ((C23962 + C23961) * C630 + (C23960 + C23959) * C635) +
             (C22940 * C1165 + C22935 * C1171 + C22941 * C3651 +
              C51143 * C3655) *
                 C631 -
             (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
              C22935 * C3650) *
                 C637 -
             (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
              C22935 * C3655) *
                 C632) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C51275 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C25801 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
             C29059 * C51169) *
                C50979) *
               C295 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51275) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51275) *
                C25801) *
               C296 +
           ((C22999 * C51275 + C29061 * C51169) * C25801 +
            (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51275 +
             ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
                C50979) *
               C297) *
              C51262 +
          (((C29059 * C51275 +
             ((C23959 + C23960) * C118 + (C23961 + C23962) * C51028) * C51169) *
                C25801 +
            (C29061 * C51275 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C296 -
           ((((C23962 + C23961) * C51028 + (C23960 + C23959) * C118) * C51169 +
             C29060 * C51275) *
                C50979 +
            (((C22941 * C1163 + C51143 * C1170 + C22940 * C1022 +
               C22935 * C1031) *
                  C51028 +
              (C22941 * C1158 + C51143 * C1162 + C22940 * C1016 +
               C22935 * C1021) *
                  C118) *
                 C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51275) *
                C25801) *
               C295 -
           ((((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
               C22935 * C1034) *
                  C51028 +
              (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
               C22935 * C1027) *
                  C118) *
                 C51169 +
             ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51275) *
                C50979 +
            (((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51169 +
             C23381 * C51275) *
                C25801) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51275 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
               C25801 +
           (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
            C29059 * C51169) *
               C50979) *
              C50994 * C1240 -
          ((C29843 * C51169 + C29060 * C51275) * C50979 +
           (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
            ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51275) *
               C25801) *
              C50994 * C1241 +
          ((((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C51275 +
            ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51169) *
               C25801 +
           (C29842 * C51275 +
            ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C51169) *
               C50979) *
              C50994 * C1242 -
          ((((C22941 * C16589 + C51143 * C16590 + C22940 * C6565 +
              C22935 * C6570) *
                 C51028 +
             (C22941 * C16587 + C51143 * C16588 + C22940 * C6561 +
              C22935 * C6566) *
                 C118) *
                C51169 +
            ((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C51275) *
               C50979 +
           (((C22941 * C13996 + C51143 * C14000 + C22940 * C6567 +
              C22935 * C6571) *
                 C51028 +
             (C22941 * C13994 + C51143 * C13998 + C22940 * C6562 +
              C22935 * C6568) *
                 C118) *
                C51169 +
            ((C30203 + C30202) * C51028 + (C30201 + C30200) * C118) * C51275) *
               C25801) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C51275 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C25801 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
             C29059 * C51169) *
                C50979) *
               C51305 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51275) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51275) *
                C25801) *
               C51291 +
           ((C22999 * C51275 + C29061 * C51169) * C25801 +
            (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51275 +
             ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
                C50979) *
               C1362) *
              C1775 +
          (((C29059 * C51275 + C29842 * C51169) * C25801 +
            (C29061 * C51275 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C51291 -
           ((C29843 * C51169 + C29060 * C51275) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51275) *
                C25801) *
               C51305 -
           ((((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
               C22935 * C1034) *
                  C51028 +
              (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
               C22935 * C1027) *
                  C118) *
                 C51169 +
             ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51275) *
                C50979 +
            (((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51169 +
             C23381 * C51275) *
                C25801) *
               C1362) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C298 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51260 -
              (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                  C299 -
              (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                  C51044) *
                 C51275 +
             ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
              (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
                 C51169) *
                C25801 +
            (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
              (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                 C51275 +
             C31332 * C51169) *
                C50979) *
               C1490 +
           ((((C23176 + C23175) * C299 -
              ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
              (C23178 + C23177) * C51044) *
                 C51275 +
             C31333 * C51169) *
                C25801 +
            (((C23181 + C23180) * C299 -
              ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
              (C23183 + C23182) * C51044) *
                 C51275 +
             ((C24725 + C24726) * C299 - (C23377 * C51260 + C23378 * C298) +
              (C24727 + C24728) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C1775 +
          (((((C29609 + C29608) * C299 -
              ((C29052 + C29051) * C51260 + (C29050 + C29049) * C298) +
              (C29611 + C29610) * C51044) *
                 C51275 +
             ((C30054 + C30055) * C299 -
              ((C29834 + C29835) * C51260 + (C29836 + C29837) * C298) +
              (C30056 + C30057) * C51044) *
                 C51169) *
                C25801 +
            (C31333 * C51275 +
             ((C30058 + C30059) * C299 - (C29812 * C51260 + C29813 * C298) +
              (C30060 + C30061) * C51044) *
                 C51169) *
                C50979) *
               C1490 +
           ((C31332 * C51275 +
             (C29810 * C298 + C29811 * C51260 - (C30059 + C30058) * C299 -
              (C30061 + C30060) * C51044) *
                 C51169) *
                C25801 +
            ((C29047 * C298 + C29048 * C51260 - (C24726 + C24725) * C299 -
              (C24728 + C24727) * C51044) *
                 C51275 +
             ((C23963 + C23964) * C298 + (C23965 + C23966) * C51260 -
              (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
               C22935 * C1166) *
                  C299 -
              (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
               C22935 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C51275 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C25801 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
             C29059 * C51169) *
                C50979) *
               C1490 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51275) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51275) *
                C25801) *
               C50999) *
              C51307 +
          (((C29059 * C51275 + C29842 * C51169) * C25801 +
            (C29061 * C51275 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C50999 -
           ((C29843 * C51169 + C29060 * C51275) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51275) *
                C25801) *
               C1490) *
              C51297 +
          (((((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C51275 +
             ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51169) *
                C25801 +
            (C29842 * C51275 +
             ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C51169) *
                C50979) *
               C1490 -
           ((((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
               C22935 * C1257) *
                  C51028 +
              (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
               C22935 * C1251) *
                  C118) *
                 C51169 +
             ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51275) *
                C50979 +
            (((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C51169 +
             C29843 * C51275) *
                C25801) *
               C50999) *
              C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51275 +
            ((C22940 * C476 + C22935 * C487 + C22941 * C883 + C51143 * C891) *
                 C118 +
             (C22940 * C486 + C22935 * C494 + C22941 * C892 + C51143 * C907) *
                 C51028) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
            ((C23365 + C23366) * C118 + (C23367 + C23368) * C51028) * C51169) *
               C50979) *
              C112 -
          ((C23381 * C51169 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51275) *
               C50979 +
           (((C23368 + C23367) * C51028 + (C23366 + C23365) * C118) * C51169 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51275) *
               C25801) *
              C113 +
          ((C22999 * C51275 +
            ((C23369 + C23370) * C118 + (C23371 + C23372) * C51028) * C51169) *
               C25801 +
           (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51275 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
               C50979) *
              C114 -
          ((((C22941 * C1645 + C51143 * C1646 + C22940 * C485 + C22935 * C493) *
                 C51028 +
             (C22941 * C1643 + C51143 * C1644 + C22940 * C475 + C22935 * C484) *
                 C118) *
                C51169 +
            ((C22990 + C22989) * C51028 + (C22988 + C22987) * C118) * C51275) *
               C50979 +
           (((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51169 +
            C23000 * C51275) *
               C25801) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C51275 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C22941 * C884 + C51143 * C893 + C22940 * C883 + C22935 * C891) *
                 C636 -
             (C22941 * C894 + C51143 * C908 + C22940 * C892 + C22935 * C907) *
                 C631 +
             (C22940 * C884 + C22935 * C893 + C22941 * C3317 + C51143 * C3320) *
                 C637 +
             (C22940 * C894 + C22935 * C908 + C22941 * C3321 + C51143 * C3326) *
                 C632) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C51275 +
            (C29043 * C635 + C29044 * C630 - (C24722 + C24721) * C636 -
             (C24724 + C24723) * C631 + (C29264 + C29265) * C637 +
             (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C51253 +
          ((((C23176 + C23175) * C636 -
             ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
             (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
             (C23548 + C23547) * C632) *
                C51275 +
            ((C24721 + C24722) * C636 - (C29045 * C630 + C29046 * C635) +
             (C24723 + C24724) * C631 - (C29265 + C29264) * C637 -
             (C29267 + C29266) * C632) *
                C51169) *
               C25801 +
           (((C23181 + C23180) * C636 -
             ((C22982 + C22981) * C630 + (C22980 + C22979) * C635) +
             (C23183 + C23182) * C631 - (C23550 + C23549) * C637 -
             (C23552 + C23551) * C632) *
                C51275 +
            ((C24725 + C24726) * C636 - (C23377 * C630 + C23378 * C635) +
             (C24727 + C24728) * C631 -
             (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                 C637 -
             (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                 C632) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51275 +
            ((C22940 * C476 + C22935 * C487 + C22941 * C883 + C51143 * C891) *
                 C298 +
             (C22940 * C486 + C22935 * C494 + C22941 * C892 + C51143 * C907) *
                 C51260 -
             (C22941 * C884 + C51143 * C893 + C22940 * C883 + C22935 * C891) *
                 C299 -
             (C22941 * C894 + C51143 * C908 + C22940 * C892 + C22935 * C907) *
                 C51044) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
             (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                C51275 +
            ((C23365 + C23366) * C298 + (C23367 + C23368) * C51260 -
             (C24722 + C24721) * C299 - (C24724 + C24723) * C51044) *
                C51169) *
               C50979) *
              C295 +
          ((((C23176 + C23175) * C299 -
             ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
             (C23178 + C23177) * C51044) *
                C51275 +
            ((C24721 + C24722) * C299 -
             ((C23368 + C23367) * C51260 + (C23366 + C23365) * C298) +
             (C24723 + C24724) * C51044) *
                C51169) *
               C25801 +
           (((C23181 + C23180) * C299 -
             ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
             (C23183 + C23182) * C51044) *
                C51275 +
            ((C24725 + C24726) * C299 - (C23377 * C51260 + C23378 * C298) +
             (C24727 + C24728) * C51044) *
                C51169) *
               C50979) *
              C296 +
          ((C23193 * C51275 +
            ((C23369 + C23370) * C298 + (C23371 + C23372) * C51260 -
             (C24726 + C24725) * C299 - (C24728 + C24727) * C51044) *
                C51169) *
               C25801 +
           (((C22986 + C22985) * C298 + (C22984 + C22983) * C51260 -
             (C23185 + C23184) * C299 - (C23187 + C23186) * C51044) *
                C51275 +
            ((C23373 + C23374) * C298 + (C23375 + C23376) * C51260 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C299 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C765 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C760 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C766 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C761 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C767 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C762 -
            (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
                C768 -
            (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
                C763) *
               C51275 +
           ((C29049 + C29050) * C765 + (C29051 + C29052) * C760 -
            (C22941 * C884 + C51143 * C893 + C22940 * C883 + C22935 * C891) *
                C766 -
            (C22941 * C894 + C51143 * C908 + C22940 * C892 + C22935 * C907) *
                C761 +
            (C22940 * C884 + C22935 * C893 + C22941 * C3317 + C51143 * C3320) *
                C767 +
            (C22940 * C894 + C22935 * C908 + C22941 * C3321 + C51143 * C3326) *
                C762 -
            (C22941 * C9036 + C51143 * C9038 + C22940 * C3317 +
             C22935 * C3320) *
                C768 -
            (C22941 * C9039 + C51143 * C9042 + C22940 * C3321 +
             C22935 * C3326) *
                C763) *
               C51169) *
              C25801 +
          (((C22975 + C22976) * C765 + (C22977 + C22978) * C760 -
            (C23175 + C23176) * C766 - (C23177 + C23178) * C761 +
            (C23545 + C23546) * C767 + (C23547 + C23548) * C762 -
            (C22941 * C3160 + C51143 * C3164 + C22940 * C770 + C22935 * C775) *
                C768 -
            (C22941 * C3165 + C51143 * C3169 + C22940 * C776 + C22935 * C782) *
                C763) *
               C51275 +
           (C29043 * C765 + C29044 * C760 - (C24722 + C24721) * C766 -
            (C24724 + C24723) * C761 + (C29264 + C29265) * C767 +
            (C29266 + C29267) * C762 -
            (C22941 * C9037 + C51143 * C9040 + C22940 * C3318 +
             C22935 * C3322) *
                C768 -
            (C22941 * C9041 + C51143 * C9043 + C22940 * C3323 +
             C22935 * C3327) *
                C763) *
               C51169) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C51275 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C25801 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C51275 +
             C29059 * C51169) *
                C50979) *
               C295 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C51275) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51275) *
                C25801) *
               C296 +
           ((C22999 * C51275 + C29061 * C51169) * C25801 +
            (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C51275 +
             ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
                C50979) *
               C297) *
              C51262 +
          (((C29059 * C51275 +
             ((C23959 + C23960) * C118 + (C23961 + C23962) * C51028) * C51169) *
                C25801 +
            (C29061 * C51275 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C296 -
           ((((C23962 + C23961) * C51028 + (C23960 + C23959) * C118) * C51169 +
             C29060 * C51275) *
                C50979 +
            (((C22941 * C1163 + C51143 * C1170 + C22940 * C1022 +
               C22935 * C1031) *
                  C51028 +
              (C22941 * C1158 + C51143 * C1162 + C22940 * C1016 +
               C22935 * C1021) *
                  C118) *
                 C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51275) *
                C25801) *
               C295 -
           ((((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
               C22935 * C1034) *
                  C51028 +
              (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
               C22935 * C1027) *
                  C118) *
                 C51169 +
             ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51275) *
                C50979 +
            (((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51169 +
             C23381 * C51275) *
                C25801) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C51275 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
             (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
                C51169) *
               C25801 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C51275 +
            (C29043 * C635 + C29044 * C630 - (C24722 + C24721) * C636 -
             (C24724 + C24723) * C631 + (C29264 + C29265) * C637 +
             (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C50994 * C51262 +
          ((((C29609 + C29608) * C636 -
             ((C29052 + C29051) * C630 + (C29050 + C29049) * C635) +
             (C29611 + C29610) * C631 - (C29613 + C29612) * C637 -
             (C29615 + C29614) * C632) *
                C51275 +
            ((C22940 * C1158 + C22935 * C1162 + C22941 * C3645 +
              C51143 * C3648) *
                 C636 -
             ((C22941 * C1163 + C51143 * C1170 + C22940 * C1022 +
               C22935 * C1031) *
                  C630 +
              (C22941 * C1158 + C51143 * C1162 + C22940 * C1016 +
               C22935 * C1021) *
                  C635) +
             (C22940 * C1163 + C22935 * C1170 + C22941 * C3649 +
              C51143 * C3654) *
                 C631 -
             (C22941 * C9354 + C51143 * C9356 + C22940 * C3645 +
              C22935 * C3648) *
                 C637 -
             (C22941 * C9357 + C51143 * C9360 + C22940 * C3649 +
              C22935 * C3654) *
                 C632) *
                C51169) *
               C25801 +
           (((C24721 + C24722) * C636 - (C29045 * C630 + C29046 * C635) +
             (C24723 + C24724) * C631 - (C29265 + C29264) * C637 -
             (C29267 + C29266) * C632) *
                C51275 +
            ((C22940 * C1159 + C22935 * C1164 + C22941 * C3646 +
              C51143 * C3650) *
                 C636 -
             ((C23962 + C23961) * C630 + (C23960 + C23959) * C635) +
             (C22940 * C1165 + C22935 * C1171 + C22941 * C3651 +
              C51143 * C3655) *
                 C631 -
             (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
              C22935 * C3650) *
                 C637 -
             (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
              C22935 * C3655) *
                 C632) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C32271 +
            ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
             (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
             (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                C32271 +
            C30866 * C51169) *
               C50979) *
              C51305 +
          ((((C23176 + C23175) * C1364 -
             ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
             (C23178 + C23177) * C51044) *
                C32271 +
            C30867 * C51169) *
               C51246 +
           (((C23181 + C23180) * C1364 -
             ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
             (C23183 + C23182) * C51044) *
                C32271 +
            ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
             (C24727 + C24728) * C51044) *
                C51169) *
               C50979) *
              C51291 +
          ((C24363 * C32271 +
            (C29047 * C1363 + C29048 * C1358 - (C24726 + C24725) * C1364 -
             (C24728 + C24727) * C51044) *
                C51169) *
               C51246 +
           (((C22986 + C22985) * C1363 + (C22984 + C22983) * C1358 -
             (C23185 + C23184) * C1364 - (C23187 + C23186) * C51044) *
                C32271 +
            ((C23373 + C23374) * C1363 + (C23375 + C23376) * C1358 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C1364 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C1362) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1492 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51306 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1493 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51294 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C1494 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C1489) *
                C32271 +
            ((C29049 + C29050) * C1492 + (C29051 + C29052) * C51306 -
             (C29608 + C29609) * C1493 - (C29610 + C29611) * C51294 +
             (C29612 + C29613) * C1494 + (C29614 + C29615) * C1489) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C1492 + (C22977 + C22978) * C51306 -
             (C23175 + C23176) * C1493 - (C23177 + C23178) * C51294 +
             (C23545 + C23546) * C1494 + (C23547 + C23548) * C1489) *
                C32271 +
            (C29043 * C1492 + C29044 * C51306 - C30852 * C1493 -
             C30853 * C51294 + (C29264 + C29265) * C1494 +
             (C29266 + C29267) * C1489) *
                C51169) *
               C50979) *
              C1490 +
          ((((C23176 + C23175) * C1493 -
             ((C22978 + C22977) * C51306 + (C22976 + C22975) * C1492) +
             (C23178 + C23177) * C51294 - (C23546 + C23545) * C1494 -
             (C23548 + C23547) * C1489) *
                C32271 +
            (C30854 * C1493 - (C29045 * C51306 + C29046 * C1492) +
             C30857 * C51294 - (C29265 + C29264) * C1494 -
             (C29267 + C29266) * C1489) *
                C51169) *
               C51246 +
           (((C23181 + C23180) * C1493 -
             ((C22982 + C22981) * C51306 + (C22980 + C22979) * C1492) +
             (C23183 + C23182) * C51294 - (C23550 + C23549) * C1494 -
             (C23552 + C23551) * C1489) *
                C32271 +
            ((C24725 + C24726) * C1493 - (C23377 * C51306 + C23378 * C1492) +
             (C24727 + C24728) * C51294 -
             (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                 C1494 -
             (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                 C1489) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C1363 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C1358 -
              (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                  C1364 -
              (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                  C51044) *
                 C32271 +
             ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
              (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                 C51169) *
                C51246 +
            (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
              (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                 C32271 +
             C30866 * C51169) *
                C50979) *
               C1490 +
           ((((C23176 + C23175) * C1364 -
              ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
              (C23178 + C23177) * C51044) *
                 C32271 +
             C30867 * C51169) *
                C51246 +
            (((C23181 + C23180) * C1364 -
              ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
              (C23183 + C23182) * C51044) *
                 C32271 +
             ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
              (C24727 + C24728) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51262 +
          (((((C29609 + C29608) * C1364 -
              ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
              (C29611 + C29610) * C51044) *
                 C32271 +
             ((C30054 + C30055) * C1364 -
              ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
              (C30056 + C30057) * C51044) *
                 C51169) *
                C51246 +
            (C30867 * C32271 +
             ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
              (C30060 + C30061) * C51044) *
                 C51169) *
                C50979) *
               C1490 +
           ((C30866 * C32271 +
             (C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
              (C30061 + C30060) * C51044) *
                 C51169) *
                C51246 +
            ((C29047 * C1363 + C29048 * C1358 - (C24726 + C24725) * C1364 -
              (C24728 + C24727) * C51044) *
                 C32271 +
             ((C23963 + C23964) * C1363 + (C23965 + C23966) * C1358 -
              (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
               C22935 * C1166) *
                  C1364 -
              (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
               C22935 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C1363 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C1358 -
              (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                  C1364 -
              (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                  C51044) *
                 C32271 +
             ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
              (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                 C51169) *
                C51246 +
            (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
              (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                 C32271 +
             C30866 * C51169) *
                C50979) *
               C51253 +
           ((((C23176 + C23175) * C1364 -
              ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
              (C23178 + C23177) * C51044) *
                 C32271 +
             C30867 * C51169) *
                C51246 +
            (((C23181 + C23180) * C1364 -
              ((C22982 + C22981) * C1358 + (C22980 + C22979) * C1363) +
              (C23183 + C23182) * C51044) *
                 C32271 +
             ((C24725 + C24726) * C1364 - (C23377 * C1358 + C23378 * C1363) +
              (C24727 + C24728) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C1775 +
          (((((C29609 + C29608) * C1364 -
              ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
              (C29611 + C29610) * C51044) *
                 C32271 +
             ((C30054 + C30055) * C1364 -
              ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
              (C30056 + C30057) * C51044) *
                 C51169) *
                C51246 +
            (C30867 * C32271 +
             ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
              (C30060 + C30061) * C51044) *
                 C51169) *
                C50979) *
               C51253 +
           ((C30866 * C32271 +
             (C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
              (C30061 + C30060) * C51044) *
                 C51169) *
                C51246 +
            ((C29047 * C1363 + C29048 * C1358 - (C24726 + C24725) * C1364 -
              (C24728 + C24727) * C51044) *
                 C32271 +
             ((C23963 + C23964) * C1363 + (C23965 + C23966) * C1358 -
              (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
               C22935 * C1166) *
                  C1364 -
              (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
               C22935 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1492 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51306 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1493 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51294 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C1494 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C1489) *
                C32271 +
            ((C29049 + C29050) * C1492 + (C29051 + C29052) * C51306 -
             (C29608 + C29609) * C1493 - (C29610 + C29611) * C51294 +
             (C29612 + C29613) * C1494 + (C29614 + C29615) * C1489) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C1492 + (C22977 + C22978) * C51306 -
             (C23175 + C23176) * C1493 - (C23177 + C23178) * C51294 +
             (C23545 + C23546) * C1494 + (C23547 + C23548) * C1489) *
                C32271 +
            (C29043 * C1492 + C29044 * C51306 - C30852 * C1493 -
             C30853 * C51294 + (C29264 + C29265) * C1494 +
             (C29266 + C29267) * C1489) *
                C51169) *
               C50979) *
              C50994 * C1775 +
          ((((C29609 + C29608) * C1493 -
             ((C29052 + C29051) * C51306 + (C29050 + C29049) * C1492) +
             (C29611 + C29610) * C51294 - (C29613 + C29612) * C1494 -
             (C29615 + C29614) * C1489) *
                C32271 +
            ((C30054 + C30055) * C1493 -
             ((C29834 + C29835) * C51306 + (C29836 + C29837) * C1492) +
             (C30056 + C30057) * C51294 -
             (C22941 * C9354 + C51143 * C9356 + C22940 * C3645 +
              C22935 * C3648) *
                 C1494 -
             (C22941 * C9357 + C51143 * C9360 + C22940 * C3649 +
              C22935 * C3654) *
                 C1489) *
                C51169) *
               C51246 +
           ((C30854 * C1493 - (C29045 * C51306 + C29046 * C1492) +
             C30857 * C51294 - (C29265 + C29264) * C1494 -
             (C29267 + C29266) * C1489) *
                C32271 +
            ((C30058 + C30059) * C1493 - (C29812 * C51306 + C29813 * C1492) +
             (C30060 + C30061) * C51294 -
             (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
              C22935 * C3650) *
                 C1494 -
             (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
              C22935 * C3655) *
                 C1489) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C32271 +
            ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
             (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C1363 + (C22977 + C22978) * C1358 -
             (C23175 + C23176) * C1364 - (C23177 + C23178) * C51044) *
                C32271 +
            C30866 * C51169) *
               C50979) *
              C50994 * C51307 +
          ((((C29609 + C29608) * C1364 -
             ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
             (C29611 + C29610) * C51044) *
                C32271 +
            ((C30054 + C30055) * C1364 -
             ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
             (C30056 + C30057) * C51044) *
                C51169) *
               C51246 +
           (C30867 * C32271 +
            ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
             (C30060 + C30061) * C51044) *
                C51169) *
               C50979) *
              C50994 * C51297 +
          ((((C29837 + C29836) * C1363 + (C29835 + C29834) * C1358 -
             (C30055 + C30054) * C1364 - (C30057 + C30056) * C51044) *
                C32271 +
            ((C30200 + C30201) * C1363 + (C30202 + C30203) * C1358 -
             (C22941 * C9461 + C51143 * C9465 + C22940 * C3757 +
              C22935 * C3763) *
                 C1364 -
             (C22941 * C9464 + C51143 * C9467 + C22940 * C3762 +
              C22935 * C3766) *
                 C51044) *
                C51169) *
               C51246 +
           ((C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
             (C30061 + C30060) * C51044) *
                C32271 +
            ((C29838 + C29839) * C1363 + (C29840 + C29841) * C1358 -
             (C22941 * C9460 + C51143 * C9463 + C22940 * C3756 +
              C22935 * C3761) *
                 C1364 -
             (C22941 * C9462 + C51143 * C9466 + C22940 * C3760 +
              C22935 * C3765) *
                 C51044) *
                C51169) *
               C50979) *
              C50994 * C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
             (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C32271 +
            (C29043 * C635 + C29044 * C630 - C30852 * C636 - C30853 * C631 +
             (C29264 + C29265) * C637 + (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C51253 +
          ((((C23176 + C23175) * C636 -
             ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
             (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
             (C23548 + C23547) * C632) *
                C32271 +
            (C30854 * C636 - (C29045 * C630 + C29046 * C635) + C30857 * C631 -
             (C29265 + C29264) * C637 - (C29267 + C29266) * C632) *
                C51169) *
               C51246 +
           (((C23181 + C23180) * C636 -
             ((C22982 + C22981) * C630 + (C22980 + C22979) * C635) +
             (C23183 + C23182) * C631 - (C23550 + C23549) * C637 -
             (C23552 + C23551) * C632) *
                C32271 +
            ((C24725 + C24726) * C636 - (C23377 * C630 + C23378 * C635) +
             (C24727 + C24728) * C631 -
             (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                 C637 -
             (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                 C632) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C32271 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
               C51246 +
           (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
            C29059 * C51169) *
               C50979) *
              C112 -
          ((C23381 * C51169 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C32271) *
               C50979 +
           (C29060 * C51169 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C32271) *
               C51246) *
              C113 +
          ((C22999 * C32271 + C29061 * C51169) * C51246 +
           (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C32271 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
               C50979) *
              C114 -
          ((((C22941 * C1645 + C51143 * C1646 + C22940 * C485 + C22935 * C493) *
                 C51028 +
             (C22941 * C1643 + C51143 * C1644 + C22940 * C475 + C22935 * C484) *
                 C118) *
                C51169 +
            ((C22990 + C22989) * C51028 + (C22988 + C22987) * C118) * C32271) *
               C50979 +
           (((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51169 +
            C23000 * C32271) *
               C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C51246 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
             C29059 * C51169) *
                C50979) *
               C51253 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C32271) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C32271) *
                C51246) *
               C50999) *
              C1013 +
          (((C29059 * C32271 + C29842 * C51169) * C51246 +
            (C29061 * C32271 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C50999 -
           ((C29843 * C51169 + C29060 * C32271) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C32271) *
                C51246) *
               C51253) *
              C1014 +
          (((((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C32271 +
             ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51169) *
                C51246 +
            (C29842 * C32271 +
             ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C51169) *
                C50979) *
               C51253 -
           ((((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
               C22935 * C1257) *
                  C51028 +
              (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
               C22935 * C1251) *
                  C118) *
                 C51169 +
             ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C32271) *
                C50979 +
            (((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C51169 +
             C29843 * C32271) *
                C51246) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C765 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C760 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C766 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C761 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C767 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C762 -
            (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
                C768 -
            (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
                C763) *
               C32271 +
           ((C29049 + C29050) * C765 + (C29051 + C29052) * C760 -
            (C29608 + C29609) * C766 - (C29610 + C29611) * C761 +
            (C29612 + C29613) * C767 + (C29614 + C29615) * C762 -
            (C22941 * C9036 + C51143 * C9038 + C22940 * C3317 +
             C22935 * C3320) *
                C768 -
            (C22941 * C9039 + C51143 * C9042 + C22940 * C3321 +
             C22935 * C3326) *
                C763) *
               C51169) *
              C51246 +
          (((C22975 + C22976) * C765 + (C22977 + C22978) * C760 -
            (C23175 + C23176) * C766 - (C23177 + C23178) * C761 +
            (C23545 + C23546) * C767 + (C23547 + C23548) * C762 -
            (C22941 * C3160 + C51143 * C3164 + C22940 * C770 + C22935 * C775) *
                C768 -
            (C22941 * C3165 + C51143 * C3169 + C22940 * C776 + C22935 * C782) *
                C763) *
               C32271 +
           (C29043 * C765 + C29044 * C760 - C30852 * C766 - C30853 * C761 +
            (C29264 + C29265) * C767 + (C29266 + C29267) * C762 -
            (C22941 * C9037 + C51143 * C9040 + C22940 * C3318 +
             C22935 * C3322) *
                C768 -
            (C22941 * C9041 + C51143 * C9043 + C22940 * C3323 +
             C22935 * C3327) *
                C763) *
               C51169) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C32271 +
            ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
             (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
             (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                C32271 +
            C31332 * C51169) *
               C50979) *
              C295 +
          ((((C23176 + C23175) * C299 -
             ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
             (C23178 + C23177) * C51044) *
                C32271 +
            C31333 * C51169) *
               C51246 +
           (((C23181 + C23180) * C299 -
             ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
             (C23183 + C23182) * C51044) *
                C32271 +
            ((C24725 + C24726) * C299 - (C23377 * C51260 + C23378 * C298) +
             (C24727 + C24728) * C51044) *
                C51169) *
               C50979) *
              C296 +
          ((C23193 * C32271 +
            (C29047 * C298 + C29048 * C51260 - (C24726 + C24725) * C299 -
             (C24728 + C24727) * C51044) *
                C51169) *
               C51246 +
           (((C22986 + C22985) * C298 + (C22984 + C22983) * C51260 -
             (C23185 + C23184) * C299 - (C23187 + C23186) * C51044) *
                C32271 +
            ((C23373 + C23374) * C298 + (C23375 + C23376) * C51260 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C299 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C32271 +
            ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
             (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
             (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                C32271 +
            C31332 * C51169) *
               C50979) *
              C50994 * C1013 +
          ((((C29609 + C29608) * C299 -
             ((C29052 + C29051) * C51260 + (C29050 + C29049) * C298) +
             (C29611 + C29610) * C51044) *
                C32271 +
            ((C30054 + C30055) * C299 -
             ((C29834 + C29835) * C51260 + (C29836 + C29837) * C298) +
             (C30056 + C30057) * C51044) *
                C51169) *
               C51246 +
           (C31333 * C32271 +
            ((C30058 + C30059) * C299 - (C29812 * C51260 + C29813 * C298) +
             (C30060 + C30061) * C51044) *
                C51169) *
               C50979) *
              C50994 * C1014 +
          ((((C29837 + C29836) * C298 + (C29835 + C29834) * C51260 -
             (C30055 + C30054) * C299 - (C30057 + C30056) * C51044) *
                C32271 +
            ((C30200 + C30201) * C298 + (C30202 + C30203) * C51260 -
             (C22941 * C9461 + C51143 * C9465 + C22940 * C3757 +
              C22935 * C3763) *
                 C299 -
             (C22941 * C9464 + C51143 * C9467 + C22940 * C3762 +
              C22935 * C3766) *
                 C51044) *
                C51169) *
               C51246 +
           ((C29810 * C298 + C29811 * C51260 - (C30059 + C30058) * C299 -
             (C30061 + C30060) * C51044) *
                C32271 +
            ((C29838 + C29839) * C298 + (C29840 + C29841) * C51260 -
             (C22941 * C9460 + C51143 * C9463 + C22940 * C3756 +
              C22935 * C3761) *
                 C299 -
             (C22941 * C9462 + C51143 * C9466 + C22940 * C3760 +
              C22935 * C3765) *
                 C51044) *
                C51169) *
               C50979) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
             (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C32271 +
            (C29043 * C635 + C29044 * C630 - C30852 * C636 - C30853 * C631 +
             (C29264 + C29265) * C637 + (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C50994 * C51262 +
          ((((C29609 + C29608) * C636 -
             ((C29052 + C29051) * C630 + (C29050 + C29049) * C635) +
             (C29611 + C29610) * C631 - (C29613 + C29612) * C637 -
             (C29615 + C29614) * C632) *
                C32271 +
            ((C30054 + C30055) * C636 -
             ((C29834 + C29835) * C630 + (C29836 + C29837) * C635) +
             (C30056 + C30057) * C631 -
             (C22941 * C9354 + C51143 * C9356 + C22940 * C3645 +
              C22935 * C3648) *
                 C637 -
             (C22941 * C9357 + C51143 * C9360 + C22940 * C3649 +
              C22935 * C3654) *
                 C632) *
                C51169) *
               C51246 +
           ((C30854 * C636 - (C29045 * C630 + C29046 * C635) + C30857 * C631 -
             (C29265 + C29264) * C637 - (C29267 + C29266) * C632) *
                C32271 +
            ((C30058 + C30059) * C636 - (C29812 * C630 + C29813 * C635) +
             (C30060 + C30061) * C631 -
             (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
              C22935 * C3650) *
                 C637 -
             (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
              C22935 * C3655) *
                 C632) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C51246 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
             C29059 * C51169) *
                C50979) *
               C295 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C32271) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C32271) *
                C51246) *
               C296 +
           ((C22999 * C32271 + C29061 * C51169) * C51246 +
            (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C32271 +
             ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
                C50979) *
               C297) *
              C51262 +
          (((C29059 * C32271 + C29842 * C51169) * C51246 +
            (C29061 * C32271 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C296 -
           ((C29843 * C51169 + C29060 * C32271) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C32271) *
                C51246) *
               C295 -
           ((((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
               C22935 * C1034) *
                  C51028 +
              (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
               C22935 * C1027) *
                  C118) *
                 C51169 +
             ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C32271) *
                C50979 +
            (((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51169 +
             C23381 * C32271) *
                C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C32271 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
               C51246 +
           (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
            C29059 * C51169) *
               C50979) *
              C50994 * C1240 -
          ((C29843 * C51169 + C29060 * C32271) * C50979 +
           (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
            ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C32271) *
               C51246) *
              C50994 * C1241 +
          ((((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C32271 +
            ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51169) *
               C51246 +
           (C29842 * C32271 +
            ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C51169) *
               C50979) *
              C50994 * C1242 -
          ((((C22941 * C16589 + C51143 * C16590 + C22940 * C6565 +
              C22935 * C6570) *
                 C51028 +
             (C22941 * C16587 + C51143 * C16588 + C22940 * C6561 +
              C22935 * C6566) *
                 C118) *
                C51169 +
            ((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C32271) *
               C50979 +
           (((C22941 * C13996 + C51143 * C14000 + C22940 * C6567 +
              C22935 * C6571) *
                 C51028 +
             (C22941 * C13994 + C51143 * C13998 + C22940 * C6562 +
              C22935 * C6568) *
                 C118) *
                C51169 +
            ((C30203 + C30202) * C51028 + (C30201 + C30200) * C118) * C32271) *
               C51246) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C51246 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
             C29059 * C51169) *
                C50979) *
               C51305 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C32271) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C32271) *
                C51246) *
               C51291 +
           ((C22999 * C32271 + C29061 * C51169) * C51246 +
            (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C32271 +
             ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
                C50979) *
               C1362) *
              C1775 +
          (((C29059 * C32271 + C29842 * C51169) * C51246 +
            (C29061 * C32271 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C51291 -
           ((C29843 * C51169 + C29060 * C32271) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C32271) *
                C51246) *
               C51305 -
           ((((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
               C22935 * C1034) *
                  C51028 +
              (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
               C22935 * C1027) *
                  C118) *
                 C51169 +
             ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C32271) *
                C50979 +
            (((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51169 +
             C23381 * C32271) *
                C51246) *
               C1362) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C298 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51260 -
              (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                  C299 -
              (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                  C51044) *
                 C32271 +
             ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
              (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
                 C51169) *
                C51246 +
            (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
              (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                 C32271 +
             C31332 * C51169) *
                C50979) *
               C1490 +
           ((((C23176 + C23175) * C299 -
              ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
              (C23178 + C23177) * C51044) *
                 C32271 +
             C31333 * C51169) *
                C51246 +
            (((C23181 + C23180) * C299 -
              ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
              (C23183 + C23182) * C51044) *
                 C32271 +
             ((C24725 + C24726) * C299 - (C23377 * C51260 + C23378 * C298) +
              (C24727 + C24728) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C1775 +
          (((((C29609 + C29608) * C299 -
              ((C29052 + C29051) * C51260 + (C29050 + C29049) * C298) +
              (C29611 + C29610) * C51044) *
                 C32271 +
             ((C30054 + C30055) * C299 -
              ((C29834 + C29835) * C51260 + (C29836 + C29837) * C298) +
              (C30056 + C30057) * C51044) *
                 C51169) *
                C51246 +
            (C31333 * C32271 +
             ((C30058 + C30059) * C299 - (C29812 * C51260 + C29813 * C298) +
              (C30060 + C30061) * C51044) *
                 C51169) *
                C50979) *
               C1490 +
           ((C31332 * C32271 +
             (C29810 * C298 + C29811 * C51260 - (C30059 + C30058) * C299 -
              (C30061 + C30060) * C51044) *
                 C51169) *
                C51246 +
            ((C29047 * C298 + C29048 * C51260 - (C24726 + C24725) * C299 -
              (C24728 + C24727) * C51044) *
                 C32271 +
             ((C23963 + C23964) * C298 + (C23965 + C23966) * C51260 -
              (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
               C22935 * C1166) *
                  C299 -
              (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
               C22935 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C51246 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
             C29059 * C51169) *
                C50979) *
               C1490 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C32271) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C32271) *
                C51246) *
               C50999) *
              C51307 +
          (((C29059 * C32271 + C29842 * C51169) * C51246 +
            (C29061 * C32271 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C50999 -
           ((C29843 * C51169 + C29060 * C32271) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C32271) *
                C51246) *
               C1490) *
              C51297 +
          (((((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C32271 +
             ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51169) *
                C51246 +
            (C29842 * C32271 +
             ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C51169) *
                C50979) *
               C1490 -
           ((((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
               C22935 * C1257) *
                  C51028 +
              (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
               C22935 * C1251) *
                  C118) *
                 C51169 +
             ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C32271) *
                C50979 +
            (((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C51169 +
             C29843 * C32271) *
                C51246) *
               C50999) *
              C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C32271 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
               C51246 +
           (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
            C29059 * C51169) *
               C50979) *
              C112 -
          ((C23381 * C51169 +
            ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C32271) *
               C50979 +
           (C29060 * C51169 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C32271) *
               C51246) *
              C113 +
          ((C22999 * C32271 + C29061 * C51169) * C51246 +
           (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C32271 +
            ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
               C50979) *
              C114 -
          ((((C22941 * C1645 + C51143 * C1646 + C22940 * C485 + C22935 * C493) *
                 C51028 +
             (C22941 * C1643 + C51143 * C1644 + C22940 * C475 + C22935 * C484) *
                 C118) *
                C51169 +
            ((C22990 + C22989) * C51028 + (C22988 + C22987) * C118) * C32271) *
               C50979 +
           (((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51169 +
            C23000 * C32271) *
               C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
             (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C32271 +
            (C29043 * C635 + C29044 * C630 - C30852 * C636 - C30853 * C631 +
             (C29264 + C29265) * C637 + (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C51253 +
          ((((C23176 + C23175) * C636 -
             ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
             (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
             (C23548 + C23547) * C632) *
                C32271 +
            (C30854 * C636 - (C29045 * C630 + C29046 * C635) + C30857 * C631 -
             (C29265 + C29264) * C637 - (C29267 + C29266) * C632) *
                C51169) *
               C51246 +
           (((C23181 + C23180) * C636 -
             ((C22982 + C22981) * C630 + (C22980 + C22979) * C635) +
             (C23183 + C23182) * C631 - (C23550 + C23549) * C637 -
             (C23552 + C23551) * C632) *
                C32271 +
            ((C24725 + C24726) * C636 - (C23377 * C630 + C23378 * C635) +
             (C24727 + C24728) * C631 -
             (C22941 * C3319 + C51143 * C3324 + C22940 * C888 + C22935 * C901) *
                 C637 -
             (C22941 * C3325 + C51143 * C3328 + C22940 * C902 + C22935 * C912) *
                 C632) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C32271 +
            ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
             (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C298 + (C22977 + C22978) * C51260 -
             (C23175 + C23176) * C299 - (C23177 + C23178) * C51044) *
                C32271 +
            C31332 * C51169) *
               C50979) *
              C295 +
          ((((C23176 + C23175) * C299 -
             ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
             (C23178 + C23177) * C51044) *
                C32271 +
            C31333 * C51169) *
               C51246 +
           (((C23181 + C23180) * C299 -
             ((C22982 + C22981) * C51260 + (C22980 + C22979) * C298) +
             (C23183 + C23182) * C51044) *
                C32271 +
            ((C24725 + C24726) * C299 - (C23377 * C51260 + C23378 * C298) +
             (C24727 + C24728) * C51044) *
                C51169) *
               C50979) *
              C296 +
          ((C23193 * C32271 +
            (C29047 * C298 + C29048 * C51260 - (C24726 + C24725) * C299 -
             (C24728 + C24727) * C51044) *
                C51169) *
               C51246 +
           (((C22986 + C22985) * C298 + (C22984 + C22983) * C51260 -
             (C23185 + C23184) * C299 - (C23187 + C23186) * C51044) *
                C32271 +
            ((C23373 + C23374) * C298 + (C23375 + C23376) * C51260 -
             (C22941 * C890 + C51143 * C905 + C22940 * C889 + C22935 * C903) *
                 C299 -
             (C22941 * C906 + C51143 * C914 + C22940 * C904 + C22935 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C765 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C760 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C766 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C761 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C767 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C762 -
            (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
                C768 -
            (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
                C763) *
               C32271 +
           ((C29049 + C29050) * C765 + (C29051 + C29052) * C760 -
            (C29608 + C29609) * C766 - (C29610 + C29611) * C761 +
            (C29612 + C29613) * C767 + (C29614 + C29615) * C762 -
            (C22941 * C9036 + C51143 * C9038 + C22940 * C3317 +
             C22935 * C3320) *
                C768 -
            (C22941 * C9039 + C51143 * C9042 + C22940 * C3321 +
             C22935 * C3326) *
                C763) *
               C51169) *
              C51246 +
          (((C22975 + C22976) * C765 + (C22977 + C22978) * C760 -
            (C23175 + C23176) * C766 - (C23177 + C23178) * C761 +
            (C23545 + C23546) * C767 + (C23547 + C23548) * C762 -
            (C22941 * C3160 + C51143 * C3164 + C22940 * C770 + C22935 * C775) *
                C768 -
            (C22941 * C3165 + C51143 * C3169 + C22940 * C776 + C22935 * C782) *
                C763) *
               C32271 +
           (C29043 * C765 + C29044 * C760 - C30852 * C766 - C30853 * C761 +
            (C29264 + C29265) * C767 + (C29266 + C29267) * C762 -
            (C22941 * C9037 + C51143 * C9040 + C22940 * C3318 +
             C22935 * C3322) *
                C768 -
            (C22941 * C9041 + C51143 * C9043 + C22940 * C3323 +
             C22935 * C3327) *
                C763) *
               C51169) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                  C118 +
              (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51169) *
                C51246 +
            (((C22975 + C22976) * C118 + (C22977 + C22978) * C51028) * C32271 +
             C29059 * C51169) *
                C50979) *
               C295 -
           ((C23381 * C51169 +
             ((C22982 + C22981) * C51028 + (C22980 + C22979) * C118) * C32271) *
                C50979 +
            (C29060 * C51169 +
             ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C32271) *
                C51246) *
               C296 +
           ((C22999 * C32271 + C29061 * C51169) * C51246 +
            (((C22986 + C22985) * C118 + (C22984 + C22983) * C51028) * C32271 +
             ((C23373 + C23374) * C118 + (C23375 + C23376) * C51028) * C51169) *
                C50979) *
               C297) *
              C51262 +
          (((C29059 * C32271 + C29842 * C51169) * C51246 +
            (C29061 * C32271 +
             ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C51169) *
                C50979) *
               C296 -
           ((C29843 * C51169 + C29060 * C32271) * C50979 +
            (((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51169 +
             ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C32271) *
                C51246) *
               C295 -
           ((((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
               C22935 * C1034) *
                  C51028 +
              (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
               C22935 * C1027) *
                  C118) *
                 C51169 +
             ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C32271) *
                C50979 +
            (((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51169 +
             C23381 * C32271) *
                C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C635 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C630 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C636 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C631 +
             (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                 C637 +
             (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
             (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
             (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
                C51169) *
               C51246 +
           (((C22975 + C22976) * C635 + (C22977 + C22978) * C630 -
             (C23175 + C23176) * C636 - (C23177 + C23178) * C631 +
             (C23545 + C23546) * C637 + (C23547 + C23548) * C632) *
                C32271 +
            (C29043 * C635 + C29044 * C630 - C30852 * C636 - C30853 * C631 +
             (C29264 + C29265) * C637 + (C29266 + C29267) * C632) *
                C51169) *
               C50979) *
              C50994 * C51262 +
          ((((C29609 + C29608) * C636 -
             ((C29052 + C29051) * C630 + (C29050 + C29049) * C635) +
             (C29611 + C29610) * C631 - (C29613 + C29612) * C637 -
             (C29615 + C29614) * C632) *
                C32271 +
            ((C30054 + C30055) * C636 -
             ((C29834 + C29835) * C630 + (C29836 + C29837) * C635) +
             (C30056 + C30057) * C631 -
             (C22941 * C9354 + C51143 * C9356 + C22940 * C3645 +
              C22935 * C3648) *
                 C637 -
             (C22941 * C9357 + C51143 * C9360 + C22940 * C3649 +
              C22935 * C3654) *
                 C632) *
                C51169) *
               C51246 +
           ((C30854 * C636 - (C29045 * C630 + C29046 * C635) + C30857 * C631 -
             (C29265 + C29264) * C637 - (C29267 + C29266) * C632) *
                C32271 +
            ((C30058 + C30059) * C636 - (C29812 * C630 + C29813 * C635) +
             (C30060 + C30061) * C631 -
             (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
              C22935 * C3650) *
                 C637 -
             (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
              C22935 * C3655) *
                 C632) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[60] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1363 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C1358 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1364 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C1363 +
                    (C44903 + C44904 + C44905) * C1358 -
                    (C45320 + C45321 + C45322) * C1364 -
                    (C45323 + C45324 + C45325) * C51044) *
                       C51169) *
                      C50974 * C51305 +
                  (((C26033 + C26032 + C26031) * C1364 -
                    ((C25848 + C25847 + C25846) * C1358 +
                     (C25845 + C25844 + C25843) * C1363) +
                    (C26036 + C26035 + C26034) * C51044) *
                       C32271 +
                   ((C27539 + C27540 + C27541) * C1364 -
                    ((C26218 + C26217 + C26216) * C1358 +
                     (C26215 + C26214 + C26213) * C1363) +
                    (C27542 + C27543 + C27544) * C51044) *
                       C51169) *
                      C50974 * C51291 +
                  (((C25854 + C25853 + C25852) * C1363 +
                    (C25851 + C25850 + C25849) * C1358 -
                    (C26039 + C26038 + C26037) * C1364 -
                    (C26042 + C26041 + C26040) * C51044) *
                       C32271 +
                   ((C26219 + C26220 + C26221) * C1363 +
                    (C26222 + C26223 + C26224) * C1358 -
                    (C25805 * C3319 + C25800 * C3324 + C25804 * C888 +
                     C51300 * C901 + C25803 * C887 + C51308 * C899) *
                        C1364 -
                    (C25805 * C3325 + C25800 * C3328 + C25804 * C902 +
                     C51300 * C912 + C25803 * C900 + C51308 * C911) *
                        C51044) *
                       C51169) *
                      C50974 * C1362) *
                 C51058) /
                (p * q * std::sqrt(p + q));
    d2ee[61] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1492 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51306 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1493 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51294 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C1494 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C1489) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C1492 +
                    (C44903 + C44904 + C44905) * C51306 -
                    (C45320 + C45321 + C45322) * C1493 -
                    (C45323 + C45324 + C45325) * C51294 +
                    (C45326 + C45327 + C45328) * C1494 +
                    (C45329 + C45330 + C45331) * C1489) *
                       C51169) *
                      C50974 * C1490 +
                  (((C26033 + C26032 + C26031) * C1493 -
                    ((C25848 + C25847 + C25846) * C51306 +
                     (C25845 + C25844 + C25843) * C1492) +
                    (C26036 + C26035 + C26034) * C51294 -
                    (C26385 + C26384 + C26383) * C1494 -
                    (C26388 + C26387 + C26386) * C1489) *
                       C32271 +
                   ((C27539 + C27540 + C27541) * C1493 -
                    ((C26218 + C26217 + C26216) * C51306 +
                     (C26215 + C26214 + C26213) * C1492) +
                    (C27542 + C27543 + C27544) * C51294 -
                    (C25805 * C9037 + C25800 * C9040 + C25804 * C3318 +
                     C51300 * C3322 + C25803 * C886 + C51308 * C897) *
                        C1494 -
                    (C25805 * C9041 + C25800 * C9043 + C25804 * C3323 +
                     C51300 * C3327 + C25803 * C898 + C51308 * C910) *
                        C1489) *
                       C51169) *
                      C50974 * C50999) *
                 C51058) /
                (p * q * std::sqrt(p + q));
    d2ee[62] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C1363 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C1358 -
                     (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                      C51300 * C643 + C25803 * C300 + C51308 * C306) *
                         C1364 -
                     (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                      C51300 * C653 + C25803 * C307 + C51308 * C318) *
                         C51044) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C1363 +
                     (C44903 + C44904 + C44905) * C1358 -
                     (C45320 + C45321 + C45322) * C1364 -
                     (C45323 + C45324 + C45325) * C51044) *
                        C51169) *
                       C50974 * C1490 +
                   (((C26033 + C26032 + C26031) * C1364 -
                     ((C25848 + C25847 + C25846) * C1358 +
                      (C25845 + C25844 + C25843) * C1363) +
                     (C26036 + C26035 + C26034) * C51044) *
                        C32271 +
                    ((C27539 + C27540 + C27541) * C1364 -
                     ((C26218 + C26217 + C26216) * C1358 +
                      (C26215 + C26214 + C26213) * C1363) +
                     (C27542 + C27543 + C27544) * C51044) *
                        C51169) *
                       C50974 * C50999) *
                      C51262 +
                  ((((C45322 + C45321 + C45320) * C1364 -
                     ((C44905 + C44904 + C44903) * C1358 +
                      (C44902 + C44901 + C44900) * C1363) +
                     (C45325 + C45324 + C45323) * C51044) *
                        C32271 +
                    ((C45654 + C45655 + C45656) * C1364 -
                     ((C45490 + C45491 + C45492) * C1358 +
                      (C45493 + C45494 + C45495) * C1363) +
                     (C45657 + C45658 + C45659) * C51044) *
                        C51169) *
                       C50974 * C1490 +
                   (((C26213 + C26214 + C26215) * C1363 +
                     (C26216 + C26217 + C26218) * C1358 -
                     (C27541 + C27540 + C27539) * C1364 -
                     (C27544 + C27543 + C27542) * C51044) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C1363 +
                     (C26794 + C26795 + C26796) * C1358 -
                     (C25805 * C9355 + C25800 * C9358 + C25804 * C3646 +
                      C51300 * C3650 + C25803 * C1159 + C51308 * C1164) *
                         C1364 -
                     (C25805 * C9359 + C25800 * C9361 + C25804 * C3651 +
                      C51300 * C3655 + C25803 * C1165 + C51308 * C1171) *
                         C51044) *
                        C51169) *
                       C50974 * C50999) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[63] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C1363 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C1358 -
                     (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                      C51300 * C643 + C25803 * C300 + C51308 * C306) *
                         C1364 -
                     (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                      C51300 * C653 + C25803 * C307 + C51308 * C318) *
                         C51044) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C1363 +
                     (C44903 + C44904 + C44905) * C1358 -
                     (C45320 + C45321 + C45322) * C1364 -
                     (C45323 + C45324 + C45325) * C51044) *
                        C51169) *
                       C50974 * C51253 +
                   (((C26033 + C26032 + C26031) * C1364 -
                     ((C25848 + C25847 + C25846) * C1358 +
                      (C25845 + C25844 + C25843) * C1363) +
                     (C26036 + C26035 + C26034) * C51044) *
                        C32271 +
                    ((C27539 + C27540 + C27541) * C1364 -
                     ((C26218 + C26217 + C26216) * C1358 +
                      (C26215 + C26214 + C26213) * C1363) +
                     (C27542 + C27543 + C27544) * C51044) *
                        C51169) *
                       C50974 * C50999) *
                      C1775 +
                  ((((C45322 + C45321 + C45320) * C1364 -
                     ((C44905 + C44904 + C44903) * C1358 +
                      (C44902 + C44901 + C44900) * C1363) +
                     (C45325 + C45324 + C45323) * C51044) *
                        C32271 +
                    ((C45654 + C45655 + C45656) * C1364 -
                     ((C45490 + C45491 + C45492) * C1358 +
                      (C45493 + C45494 + C45495) * C1363) +
                     (C45657 + C45658 + C45659) * C51044) *
                        C51169) *
                       C50974 * C51253 +
                   (((C26213 + C26214 + C26215) * C1363 +
                     (C26216 + C26217 + C26218) * C1358 -
                     (C27541 + C27540 + C27539) * C1364 -
                     (C27544 + C27543 + C27542) * C51044) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C1363 +
                     (C26794 + C26795 + C26796) * C1358 -
                     (C25805 * C9355 + C25800 * C9358 + C25804 * C3646 +
                      C51300 * C3650 + C25803 * C1159 + C51308 * C1164) *
                         C1364 -
                     (C25805 * C9359 + C25800 * C9361 + C25804 * C3651 +
                      C51300 * C3655 + C25803 * C1165 + C51308 * C1171) *
                         C51044) *
                        C51169) *
                       C50974 * C50999) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[64] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1492 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51306 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1493 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51294 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C1494 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C1489) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C1492 +
                    (C44903 + C44904 + C44905) * C51306 -
                    (C45320 + C45321 + C45322) * C1493 -
                    (C45323 + C45324 + C45325) * C51294 +
                    (C45326 + C45327 + C45328) * C1494 +
                    (C45329 + C45330 + C45331) * C1489) *
                       C51169) *
                      C50974 * C50994 * C1775 +
                  (((C45322 + C45321 + C45320) * C1493 -
                    ((C44905 + C44904 + C44903) * C51306 +
                     (C44902 + C44901 + C44900) * C1492) +
                    (C45325 + C45324 + C45323) * C51294 -
                    (C45328 + C45327 + C45326) * C1494 -
                    (C45331 + C45330 + C45329) * C1489) *
                       C32271 +
                   ((C45654 + C45655 + C45656) * C1493 -
                    ((C45490 + C45491 + C45492) * C51306 +
                     (C45493 + C45494 + C45495) * C1492) +
                    (C45657 + C45658 + C45659) * C51294 -
                    (C25805 * C11681 + C25800 * C11682 + C25804 * C9354 +
                     C51300 * C9356 + C25803 * C3645 + C51308 * C3648) *
                        C1494 -
                    (C25805 * C11683 + C25800 * C11684 + C25804 * C9357 +
                     C51300 * C9360 + C25803 * C3649 + C51308 * C3654) *
                        C1489) *
                       C51169) *
                      C50974 * C50994 * C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[65] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C1363 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C1358 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C1364 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C1363 +
                    (C44903 + C44904 + C44905) * C1358 -
                    (C45320 + C45321 + C45322) * C1364 -
                    (C45323 + C45324 + C45325) * C51044) *
                       C51169) *
                      C50974 * C50994 * C51307 +
                  (((C45322 + C45321 + C45320) * C1364 -
                    ((C44905 + C44904 + C44903) * C1358 +
                     (C44902 + C44901 + C44900) * C1363) +
                    (C45325 + C45324 + C45323) * C51044) *
                       C32271 +
                   ((C45654 + C45655 + C45656) * C1364 -
                    ((C45490 + C45491 + C45492) * C1358 +
                     (C45493 + C45494 + C45495) * C1363) +
                    (C45657 + C45658 + C45659) * C51044) *
                       C51169) *
                      C50974 * C50994 * C51297 +
                  (((C45495 + C45494 + C45493) * C1363 +
                    (C45492 + C45491 + C45490) * C1358 -
                    (C45656 + C45655 + C45654) * C1364 -
                    (C45659 + C45658 + C45657) * C51044) *
                       C32271 +
                   ((C45770 + C45771 + C45772) * C1363 +
                    (C45773 + C45774 + C45775) * C1358 -
                    (C25805 * C11751 + C25800 * C11753 + C25804 * C9461 +
                     C51300 * C9465 + C25803 * C3757 + C51308 * C3763) *
                        C1364 -
                    (C25805 * C11752 + C25800 * C11754 + C25804 * C9464 +
                     C51300 * C9467 + C25803 * C3762 + C51308 * C3766) *
                        C51044) *
                       C51169) *
                      C50974 * C50994 * C2019)) /
                (p * q * std::sqrt(p + q));
    d2ee[66] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C635 +
                    (C44903 + C44904 + C44905) * C630 -
                    (C25805 * C3317 + C25800 * C3320 + C25804 * C884 +
                     C51300 * C893 + C25803 * C883 + C51308 * C891) *
                        C636 -
                    (C25805 * C3321 + C25800 * C3326 + C25804 * C894 +
                     C51300 * C908 + C25803 * C892 + C51308 * C907) *
                        C631 +
                    (C25803 * C884 + C51308 * C893 + C25804 * C3317 +
                     C51300 * C3320 + C25805 * C9036 + C25800 * C9038) *
                        C637 +
                    (C25803 * C894 + C51308 * C908 + C25804 * C3321 +
                     C51300 * C3326 + C25805 * C9039 + C25800 * C9042) *
                        C632) *
                       C51169) *
                      C50974 * C51253 +
                  (((C26033 + C26032 + C26031) * C636 -
                    ((C25848 + C25847 + C25846) * C630 +
                     (C25845 + C25844 + C25843) * C635) +
                    (C26036 + C26035 + C26034) * C631 -
                    (C26385 + C26384 + C26383) * C637 -
                    (C26388 + C26387 + C26386) * C632) *
                       C32271 +
                   ((C27539 + C27540 + C27541) * C636 -
                    ((C26218 + C26217 + C26216) * C630 +
                     (C26215 + C26214 + C26213) * C635) +
                    (C27542 + C27543 + C27544) * C631 -
                    (C25805 * C9037 + C25800 * C9040 + C25804 * C3318 +
                     C51300 * C3322 + C25803 * C886 + C51308 * C897) *
                        C637 -
                    (C25805 * C9041 + C25800 * C9043 + C25804 * C3323 +
                     C51300 * C3327 + C25803 * C898 + C51308 * C910) *
                        C632) *
                       C51169) *
                      C50974 * C50999) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C118 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51028) *
                       C32271 +
                   ((C25803 * C476 + C51308 * C487 + C25804 * C883 +
                     C51300 * C891 + C25805 * C884 + C25800 * C893) *
                        C118 +
                    (C25803 * C486 + C51308 * C494 + C25804 * C892 +
                     C51300 * C907 + C25805 * C894 + C25800 * C908) *
                        C51028) *
                       C51169) *
                      C50974 * C112 -
                  (((C26218 + C26217 + C26216) * C51028 +
                    (C26215 + C26214 + C26213) * C118) *
                       C51169 +
                   ((C25848 + C25847 + C25846) * C51028 +
                    (C25845 + C25844 + C25843) * C118) *
                       C32271) *
                      C50974 * C113 +
                  (((C25854 + C25853 + C25852) * C118 +
                    (C25851 + C25850 + C25849) * C51028) *
                       C32271 +
                   ((C26219 + C26220 + C26221) * C118 +
                    (C26222 + C26223 + C26224) * C51028) *
                       C51169) *
                      C50974 * C114 -
                  (((C25805 * C906 + C25800 * C914 + C25804 * C904 +
                     C51300 * C913 + C25803 * C483 + C51308 * C492) *
                        C51028 +
                    (C25805 * C890 + C25800 * C905 + C25804 * C889 +
                     C51300 * C903 + C25803 * C474 + C51308 * C482) *
                        C118) *
                       C51169 +
                   ((C25860 + C25859 + C25858) * C51028 +
                    (C25857 + C25856 + C25855) * C118) *
                       C32271) *
                      C50974 * C115) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C118 +
                     (C44903 + C44904 + C44905) * C51028) *
                        C51169) *
                       C50974 * C51253 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51169 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C32271) *
                       C50974 * C50999) *
                      C1013 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C118 +
                     (C26794 + C26795 + C26796) * C51028) *
                        C51169) *
                       C50974 * C50999 -
                   (((C45490 + C45491 + C45492) * C51028 +
                     (C45493 + C45494 + C45495) * C118) *
                        C51169 +
                    ((C44905 + C44904 + C44903) * C51028 +
                     (C44902 + C44901 + C44900) * C118) *
                        C32271) *
                       C50974 * C51253) *
                      C1014 +
                  ((((C45495 + C45494 + C45493) * C118 +
                     (C45492 + C45491 + C45490) * C51028) *
                        C32271 +
                    ((C25803 * C1247 + C51308 * C1255 + C25804 * C3757 +
                      C51300 * C3763 + C25805 * C9461 + C25800 * C9465) *
                         C118 +
                     (C25803 * C1254 + C51308 * C1259 + C25804 * C3762 +
                      C51300 * C3766 + C25805 * C9464 + C25800 * C9467) *
                         C51028) *
                        C51169) *
                       C50974 * C51253 -
                   (((C25805 * C9462 + C25800 * C9466 + C25804 * C3760 +
                      C51300 * C3765 + C25803 * C1252 + C51308 * C1258) *
                         C51028 +
                     (C25805 * C9460 + C25800 * C9463 + C25804 * C3756 +
                      C51300 * C3761 + C25803 * C1246 + C51308 * C1253) *
                         C118) *
                        C51169 +
                    ((C26796 + C26795 + C26794) * C51028 +
                     (C26793 + C26792 + C26791) * C118) *
                        C32271) *
                       C50974 * C50999) *
                      C1015)) /
                    (p * q * std::sqrt(p + q));
    d2ee[67] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                    C51300 * C306 + C25805 * C638 + C25800 * C643) *
                       C765 +
                   (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                    C51300 * C318 + C25805 * C644 + C25800 * C653) *
                       C760 -
                   (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                    C51300 * C643 + C25803 * C300 + C51308 * C306) *
                       C766 -
                   (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                    C51300 * C653 + C25803 * C307 + C51308 * C318) *
                       C761 +
                   (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                    C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                       C767 +
                   (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                    C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                       C762 -
                   (C25805 * C8882 + C25800 * C8884 + C25804 * C3159 +
                    C51300 * C3162 + C25803 * C769 + C51308 * C773) *
                       C768 -
                   (C25805 * C8885 + C25800 * C8888 + C25804 * C3163 +
                    C51300 * C3168 + C25803 * C774 + C51308 * C781) *
                       C763) *
                      C32271 +
                  ((C44900 + C44901 + C44902) * C765 +
                   (C44903 + C44904 + C44905) * C760 -
                   (C25805 * C3317 + C25800 * C3320 + C25804 * C884 +
                    C51300 * C893 + C25803 * C883 + C51308 * C891) *
                       C766 -
                   (C25805 * C3321 + C25800 * C3326 + C25804 * C894 +
                    C51300 * C908 + C25803 * C892 + C51308 * C907) *
                       C761 +
                   (C25803 * C884 + C51308 * C893 + C25804 * C3317 +
                    C51300 * C3320 + C25805 * C9036 + C25800 * C9038) *
                       C767 +
                   (C25803 * C894 + C51308 * C908 + C25804 * C3321 +
                    C51300 * C3326 + C25805 * C9039 + C25800 * C9042) *
                       C762 -
                   (C25805 * C11481 + C25800 * C11482 + C25804 * C9036 +
                    C51300 * C9038 + C25803 * C3317 + C51308 * C3320) *
                       C768 -
                   (C25805 * C11483 + C25800 * C11484 + C25804 * C9039 +
                    C51300 * C9042 + C25803 * C3321 + C51308 * C3326) *
                       C763) *
                      C51169) *
                 C50974 * C50994 * C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C298 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51260 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C299 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C32271 +
                   ((C25803 * C476 + C51308 * C487 + C25804 * C883 +
                     C51300 * C891 + C25805 * C884 + C25800 * C893) *
                        C298 +
                    (C25803 * C486 + C51308 * C494 + C25804 * C892 +
                     C51300 * C907 + C25805 * C894 + C25800 * C908) *
                        C51260 -
                    (C25805 * C3317 + C25800 * C3320 + C25804 * C884 +
                     C51300 * C893 + C25803 * C883 + C51308 * C891) *
                        C299 -
                    (C25805 * C3321 + C25800 * C3326 + C25804 * C894 +
                     C51300 * C908 + C25803 * C892 + C51308 * C907) *
                        C51044) *
                       C51169) *
                      C50974 * C295 +
                  (((C26033 + C26032 + C26031) * C299 -
                    ((C25848 + C25847 + C25846) * C51260 +
                     (C25845 + C25844 + C25843) * C298) +
                    (C26036 + C26035 + C26034) * C51044) *
                       C32271 +
                   ((C27539 + C27540 + C27541) * C299 -
                    ((C26218 + C26217 + C26216) * C51260 +
                     (C26215 + C26214 + C26213) * C298) +
                    (C27542 + C27543 + C27544) * C51044) *
                       C51169) *
                      C50974 * C296 +
                  (((C25854 + C25853 + C25852) * C298 +
                    (C25851 + C25850 + C25849) * C51260 -
                    (C26039 + C26038 + C26037) * C299 -
                    (C26042 + C26041 + C26040) * C51044) *
                       C32271 +
                   ((C26219 + C26220 + C26221) * C298 +
                    (C26222 + C26223 + C26224) * C51260 -
                    (C25805 * C3319 + C25800 * C3324 + C25804 * C888 +
                     C51300 * C901 + C25803 * C887 + C51308 * C899) *
                        C299 -
                    (C25805 * C3325 + C25800 * C3328 + C25804 * C902 +
                     C51300 * C912 + C25803 * C900 + C51308 * C911) *
                        C51044) *
                       C51169) *
                      C50974 * C297) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C298 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51260 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C299 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C298 +
                    (C44903 + C44904 + C44905) * C51260 -
                    (C45320 + C45321 + C45322) * C299 -
                    (C45323 + C45324 + C45325) * C51044) *
                       C51169) *
                      C50974 * C50994 * C1013 +
                  (((C45322 + C45321 + C45320) * C299 -
                    ((C44905 + C44904 + C44903) * C51260 +
                     (C44902 + C44901 + C44900) * C298) +
                    (C45325 + C45324 + C45323) * C51044) *
                       C32271 +
                   ((C45654 + C45655 + C45656) * C299 -
                    ((C45490 + C45491 + C45492) * C51260 +
                     (C45493 + C45494 + C45495) * C298) +
                    (C45657 + C45658 + C45659) * C51044) *
                       C51169) *
                      C50974 * C50994 * C1014 +
                  (((C45495 + C45494 + C45493) * C298 +
                    (C45492 + C45491 + C45490) * C51260 -
                    (C45656 + C45655 + C45654) * C299 -
                    (C45659 + C45658 + C45657) * C51044) *
                       C32271 +
                   ((C25803 * C1247 + C51308 * C1255 + C25804 * C3757 +
                     C51300 * C3763 + C25805 * C9461 + C25800 * C9465) *
                        C298 +
                    (C25803 * C1254 + C51308 * C1259 + C25804 * C3762 +
                     C51300 * C3766 + C25805 * C9464 + C25800 * C9467) *
                        C51260 -
                    (C25805 * C11751 + C25800 * C11753 + C25804 * C9461 +
                     C51300 * C9465 + C25803 * C3757 + C51308 * C3763) *
                        C299 -
                    (C25805 * C11752 + C25800 * C11754 + C25804 * C9464 +
                     C51300 * C9467 + C25803 * C3762 + C51308 * C3766) *
                        C51044) *
                       C51169) *
                      C50974 * C50994 * C1015)) /
                    (p * q * std::sqrt(p + q));
    d2ee[68] += (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C635 +
                    (C44903 + C44904 + C44905) * C630 -
                    (C45320 + C45321 + C45322) * C636 -
                    (C45323 + C45324 + C45325) * C631 +
                    (C45326 + C45327 + C45328) * C637 +
                    (C45329 + C45330 + C45331) * C632) *
                       C51169) *
                      C50974 * C50994 * C51262 +
                  (((C45322 + C45321 + C45320) * C636 -
                    ((C44905 + C44904 + C44903) * C630 +
                     (C44902 + C44901 + C44900) * C635) +
                    (C45325 + C45324 + C45323) * C631 -
                    (C45328 + C45327 + C45326) * C637 -
                    (C45331 + C45330 + C45329) * C632) *
                       C32271 +
                   ((C25803 * C1158 + C51308 * C1162 + C25804 * C3645 +
                     C51300 * C3648 + C25805 * C9354 + C25800 * C9356) *
                        C636 -
                    ((C25805 * C3649 + C25800 * C3654 + C25804 * C1163 +
                      C51300 * C1170 + C25803 * C1022 + C51308 * C1031) *
                         C630 +
                     (C25805 * C3645 + C25800 * C3648 + C25804 * C1158 +
                      C51300 * C1162 + C25803 * C1016 + C51308 * C1021) *
                         C635) +
                    (C25803 * C1163 + C51308 * C1170 + C25804 * C3649 +
                     C51300 * C3654 + C25805 * C9357 + C25800 * C9360) *
                        C631 -
                    (C25805 * C11681 + C25800 * C11682 + C25804 * C9354 +
                     C51300 * C9356 + C25803 * C3645 + C51308 * C3648) *
                        C637 -
                    (C25805 * C11683 + C25800 * C11684 + C25804 * C9357 +
                     C51300 * C9360 + C25803 * C3649 + C51308 * C3654) *
                        C632) *
                       C51169) *
                      C50974 * C50994 * C51070)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C118 +
                     (C44903 + C44904 + C44905) * C51028) *
                        C51169) *
                       C50974 * C295 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51169 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C32271) *
                       C50974 * C296 +
                   (((C25854 + C25853 + C25852) * C118 +
                     (C25851 + C25850 + C25849) * C51028) *
                        C32271 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51169) *
                       C50974 * C297) *
                      C51262 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C118 +
                     (C26794 + C26795 + C26796) * C51028) *
                        C51169) *
                       C50974 * C296 -
                   (((C25805 * C3649 + C25800 * C3654 + C25804 * C1163 +
                      C51300 * C1170 + C25803 * C1022 + C51308 * C1031) *
                         C51028 +
                     (C25805 * C3645 + C25800 * C3648 + C25804 * C1158 +
                      C51300 * C1162 + C25803 * C1016 + C51308 * C1021) *
                         C118) *
                        C51169 +
                    ((C44905 + C44904 + C44903) * C51028 +
                     (C44902 + C44901 + C44900) * C118) *
                        C32271) *
                       C50974 * C295 -
                   (((C25805 * C3653 + C25800 * C3656 + C25804 * C1167 +
                      C51300 * C1172 + C25803 * C1026 + C51308 * C1033) *
                         C51028 +
                     (C25805 * C3647 + C25800 * C3652 + C25804 * C1160 +
                      C51300 * C1166 + C25803 * C1018 + C51308 * C1025) *
                         C118) *
                        C51169 +
                    ((C26224 + C26223 + C26222) * C51028 +
                     (C26221 + C26220 + C26219) * C118) *
                        C32271) *
                       C50974 * C297) *
                      C51070)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C118 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51028) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C118 +
                    (C44903 + C44904 + C44905) * C51028) *
                       C51169) *
                      C50974 * C50994 * C1240 -
                  (((C45490 + C45491 + C45492) * C51028 +
                    (C45493 + C45494 + C45495) * C118) *
                       C51169 +
                   ((C44905 + C44904 + C44903) * C51028 +
                    (C44902 + C44901 + C44900) * C118) *
                       C32271) *
                      C50974 * C50994 * C1241 +
                  (((C45495 + C45494 + C45493) * C118 +
                    (C45492 + C45491 + C45490) * C51028) *
                       C32271 +
                   ((C45770 + C45771 + C45772) * C118 +
                    (C45773 + C45774 + C45775) * C51028) *
                       C51169) *
                      C50974 * C50994 * C1242 -
                  (((C25805 * C13995 + C25800 * C13999 + C25804 * C13996 +
                     C51300 * C14000 + C25803 * C6567 + C51308 * C6571) *
                        C51028 +
                    (C25805 * C13993 + C25800 * C13997 + C25804 * C13994 +
                     C51300 * C13998 + C25803 * C6562 + C51308 * C6568) *
                        C118) *
                       C51169 +
                   ((C45775 + C45774 + C45773) * C51028 +
                    (C45772 + C45771 + C45770) * C118) *
                       C32271) *
                      C50974 * C50994 * C1243)) /
                    (p * q * std::sqrt(p + q));
    d2ee[69] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C118 +
                     (C44903 + C44904 + C44905) * C51028) *
                        C51169) *
                       C50974 * C51305 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51169 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C32271) *
                       C50974 * C51291 +
                   (((C25854 + C25853 + C25852) * C118 +
                     (C25851 + C25850 + C25849) * C51028) *
                        C32271 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51169) *
                       C50974 * C1362) *
                      C1775 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C118 +
                     (C26794 + C26795 + C26796) * C51028) *
                        C51169) *
                       C50974 * C51291 -
                   (((C45490 + C45491 + C45492) * C51028 +
                     (C45493 + C45494 + C45495) * C118) *
                        C51169 +
                    ((C44905 + C44904 + C44903) * C51028 +
                     (C44902 + C44901 + C44900) * C118) *
                        C32271) *
                       C50974 * C51305 -
                   (((C25805 * C3653 + C25800 * C3656 + C25804 * C1167 +
                      C51300 * C1172 + C25803 * C1026 + C51308 * C1033) *
                         C51028 +
                     (C25805 * C3647 + C25800 * C3652 + C25804 * C1160 +
                      C51300 * C1166 + C25803 * C1018 + C51308 * C1025) *
                         C118) *
                        C51169 +
                    ((C26224 + C26223 + C26222) * C51028 +
                     (C26221 + C26220 + C26219) * C118) *
                        C32271) *
                       C50974 * C1362) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[70] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C298 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51260 -
                     (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                      C51300 * C643 + C25803 * C300 + C51308 * C306) *
                         C299 -
                     (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                      C51300 * C653 + C25803 * C307 + C51308 * C318) *
                         C51044) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C298 +
                     (C44903 + C44904 + C44905) * C51260 -
                     (C45320 + C45321 + C45322) * C299 -
                     (C45323 + C45324 + C45325) * C51044) *
                        C51169) *
                       C50974 * C1490 +
                   (((C26033 + C26032 + C26031) * C299 -
                     ((C25848 + C25847 + C25846) * C51260 +
                      (C25845 + C25844 + C25843) * C298) +
                     (C26036 + C26035 + C26034) * C51044) *
                        C32271 +
                    ((C27539 + C27540 + C27541) * C299 -
                     ((C26218 + C26217 + C26216) * C51260 +
                      (C26215 + C26214 + C26213) * C298) +
                     (C27542 + C27543 + C27544) * C51044) *
                        C51169) *
                       C50974 * C50999) *
                      C1775 +
                  ((((C45322 + C45321 + C45320) * C299 -
                     ((C44905 + C44904 + C44903) * C51260 +
                      (C44902 + C44901 + C44900) * C298) +
                     (C45325 + C45324 + C45323) * C51044) *
                        C32271 +
                    ((C45654 + C45655 + C45656) * C299 -
                     ((C45490 + C45491 + C45492) * C51260 +
                      (C45493 + C45494 + C45495) * C298) +
                     (C45657 + C45658 + C45659) * C51044) *
                        C51169) *
                       C50974 * C1490 +
                   (((C26213 + C26214 + C26215) * C298 +
                     (C26216 + C26217 + C26218) * C51260 -
                     (C27541 + C27540 + C27539) * C299 -
                     (C27544 + C27543 + C27542) * C51044) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C298 +
                     (C26794 + C26795 + C26796) * C51260 -
                     (C25805 * C9355 + C25800 * C9358 + C25804 * C3646 +
                      C51300 * C3650 + C25803 * C1159 + C51308 * C1164) *
                         C299 -
                     (C25805 * C9359 + C25800 * C9361 + C25804 * C3651 +
                      C51300 * C3655 + C25803 * C1165 + C51308 * C1171) *
                         C51044) *
                        C51169) *
                       C50974 * C50999) *
                      C51070)) /
                (p * q * std::sqrt(p + q));
    d2ee[71] += (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C118 +
                     (C44903 + C44904 + C44905) * C51028) *
                        C51169) *
                       C50974 * C1490 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51169 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C32271) *
                       C50974 * C50999) *
                      C51307 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C118 +
                     (C26794 + C26795 + C26796) * C51028) *
                        C51169) *
                       C50974 * C50999 -
                   (((C45490 + C45491 + C45492) * C51028 +
                     (C45493 + C45494 + C45495) * C118) *
                        C51169 +
                    ((C44905 + C44904 + C44903) * C51028 +
                     (C44902 + C44901 + C44900) * C118) *
                        C32271) *
                       C50974 * C1490) *
                      C51297 +
                  ((((C45495 + C45494 + C45493) * C118 +
                     (C45492 + C45491 + C45490) * C51028) *
                        C32271 +
                    ((C45770 + C45771 + C45772) * C118 +
                     (C45773 + C45774 + C45775) * C51028) *
                        C51169) *
                       C50974 * C1490 -
                   (((C25805 * C9462 + C25800 * C9466 + C25804 * C3760 +
                      C51300 * C3765 + C25803 * C1252 + C51308 * C1258) *
                         C51028 +
                     (C25805 * C9460 + C25800 * C9463 + C25804 * C3756 +
                      C51300 * C3761 + C25803 * C1246 + C51308 * C1253) *
                         C118) *
                        C51169 +
                    ((C26796 + C26795 + C26794) * C51028 +
                     (C26793 + C26792 + C26791) * C118) *
                        C32271) *
                       C50974 * C50999) *
                      C2019)) /
                (p * q * std::sqrt(p + q));
    d2ee[72] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C118 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51028) *
                       C32271 +
                   ((C25803 * C476 + C51308 * C487 + C25804 * C883 +
                     C51300 * C891 + C25805 * C884 + C25800 * C893) *
                        C118 +
                    (C25803 * C486 + C51308 * C494 + C25804 * C892 +
                     C51300 * C907 + C25805 * C894 + C25800 * C908) *
                        C51028) *
                       C51169) *
                      C50974 * C112 -
                  (((C26218 + C26217 + C26216) * C51028 +
                    (C26215 + C26214 + C26213) * C118) *
                       C51169 +
                   ((C25848 + C25847 + C25846) * C51028 +
                    (C25845 + C25844 + C25843) * C118) *
                       C32271) *
                      C50974 * C113 +
                  (((C25854 + C25853 + C25852) * C118 +
                    (C25851 + C25850 + C25849) * C51028) *
                       C32271 +
                   ((C26219 + C26220 + C26221) * C118 +
                    (C26222 + C26223 + C26224) * C51028) *
                       C51169) *
                      C50974 * C114 -
                  (((C25805 * C906 + C25800 * C914 + C25804 * C904 +
                     C51300 * C913 + C25803 * C483 + C51308 * C492) *
                        C51028 +
                    (C25805 * C890 + C25800 * C905 + C25804 * C889 +
                     C51300 * C903 + C25803 * C474 + C51308 * C482) *
                        C118) *
                       C51169 +
                   ((C25860 + C25859 + C25858) * C51028 +
                    (C25857 + C25856 + C25855) * C118) *
                       C32271) *
                      C50974 * C115) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C635 +
                    (C44903 + C44904 + C44905) * C630 -
                    (C25805 * C3317 + C25800 * C3320 + C25804 * C884 +
                     C51300 * C893 + C25803 * C883 + C51308 * C891) *
                        C636 -
                    (C25805 * C3321 + C25800 * C3326 + C25804 * C894 +
                     C51300 * C908 + C25803 * C892 + C51308 * C907) *
                        C631 +
                    (C25803 * C884 + C51308 * C893 + C25804 * C3317 +
                     C51300 * C3320 + C25805 * C9036 + C25800 * C9038) *
                        C637 +
                    (C25803 * C894 + C51308 * C908 + C25804 * C3321 +
                     C51300 * C3326 + C25805 * C9039 + C25800 * C9042) *
                        C632) *
                       C51169) *
                      C50974 * C51253 +
                  (((C26033 + C26032 + C26031) * C636 -
                    ((C25848 + C25847 + C25846) * C630 +
                     (C25845 + C25844 + C25843) * C635) +
                    (C26036 + C26035 + C26034) * C631 -
                    (C26385 + C26384 + C26383) * C637 -
                    (C26388 + C26387 + C26386) * C632) *
                       C32271 +
                   ((C27539 + C27540 + C27541) * C636 -
                    ((C26218 + C26217 + C26216) * C630 +
                     (C26215 + C26214 + C26213) * C635) +
                    (C27542 + C27543 + C27544) * C631 -
                    (C25805 * C9037 + C25800 * C9040 + C25804 * C3318 +
                     C51300 * C3322 + C25803 * C886 + C51308 * C897) *
                        C637 -
                    (C25805 * C9041 + C25800 * C9043 + C25804 * C3323 +
                     C51300 * C3327 + C25803 * C898 + C51308 * C910) *
                        C632) *
                       C51169) *
                      C50974 * C50999) *
                 C51058) /
                    (p * q * std::sqrt(p + q));
    d2ee[73] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C298 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C51260 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C299 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C51044) *
                       C32271 +
                   ((C25803 * C476 + C51308 * C487 + C25804 * C883 +
                     C51300 * C891 + C25805 * C884 + C25800 * C893) *
                        C298 +
                    (C25803 * C486 + C51308 * C494 + C25804 * C892 +
                     C51300 * C907 + C25805 * C894 + C25800 * C908) *
                        C51260 -
                    (C25805 * C3317 + C25800 * C3320 + C25804 * C884 +
                     C51300 * C893 + C25803 * C883 + C51308 * C891) *
                        C299 -
                    (C25805 * C3321 + C25800 * C3326 + C25804 * C894 +
                     C51300 * C908 + C25803 * C892 + C51308 * C907) *
                        C51044) *
                       C51169) *
                      C50974 * C295 +
                  (((C26033 + C26032 + C26031) * C299 -
                    ((C25848 + C25847 + C25846) * C51260 +
                     (C25845 + C25844 + C25843) * C298) +
                    (C26036 + C26035 + C26034) * C51044) *
                       C32271 +
                   ((C27539 + C27540 + C27541) * C299 -
                    ((C26218 + C26217 + C26216) * C51260 +
                     (C26215 + C26214 + C26213) * C298) +
                    (C27542 + C27543 + C27544) * C51044) *
                       C51169) *
                      C50974 * C296 +
                  (((C25854 + C25853 + C25852) * C298 +
                    (C25851 + C25850 + C25849) * C51260 -
                    (C26039 + C26038 + C26037) * C299 -
                    (C26042 + C26041 + C26040) * C51044) *
                       C32271 +
                   ((C26219 + C26220 + C26221) * C298 +
                    (C26222 + C26223 + C26224) * C51260 -
                    (C25805 * C3319 + C25800 * C3324 + C25804 * C888 +
                     C51300 * C901 + C25803 * C887 + C51308 * C899) *
                        C299 -
                    (C25805 * C3325 + C25800 * C3328 + C25804 * C902 +
                     C51300 * C912 + C25803 * C900 + C51308 * C911) *
                        C51044) *
                       C51169) *
                      C50974 * C297) *
                 C51058) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                    C51300 * C306 + C25805 * C638 + C25800 * C643) *
                       C765 +
                   (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                    C51300 * C318 + C25805 * C644 + C25800 * C653) *
                       C760 -
                   (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                    C51300 * C643 + C25803 * C300 + C51308 * C306) *
                       C766 -
                   (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                    C51300 * C653 + C25803 * C307 + C51308 * C318) *
                       C761 +
                   (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                    C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                       C767 +
                   (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                    C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                       C762 -
                   (C25805 * C8882 + C25800 * C8884 + C25804 * C3159 +
                    C51300 * C3162 + C25803 * C769 + C51308 * C773) *
                       C768 -
                   (C25805 * C8885 + C25800 * C8888 + C25804 * C3163 +
                    C51300 * C3168 + C25803 * C774 + C51308 * C781) *
                       C763) *
                      C32271 +
                  ((C44900 + C44901 + C44902) * C765 +
                   (C44903 + C44904 + C44905) * C760 -
                   (C25805 * C3317 + C25800 * C3320 + C25804 * C884 +
                    C51300 * C893 + C25803 * C883 + C51308 * C891) *
                       C766 -
                   (C25805 * C3321 + C25800 * C3326 + C25804 * C894 +
                    C51300 * C908 + C25803 * C892 + C51308 * C907) *
                       C761 +
                   (C25803 * C884 + C51308 * C893 + C25804 * C3317 +
                    C51300 * C3320 + C25805 * C9036 + C25800 * C9038) *
                       C767 +
                   (C25803 * C894 + C51308 * C908 + C25804 * C3321 +
                    C51300 * C3326 + C25805 * C9039 + C25800 * C9042) *
                       C762 -
                   (C25805 * C11481 + C25800 * C11482 + C25804 * C9036 +
                    C51300 * C9038 + C25803 * C3317 + C51308 * C3320) *
                       C768 -
                   (C25805 * C11483 + C25800 * C11484 + C25804 * C9039 +
                    C51300 * C9042 + C25803 * C3321 + C51308 * C3326) *
                       C763) *
                      C51169) *
                 C50974 * C50994 * C51058) /
                    (p * q * std::sqrt(p + q));
    d2ee[74] += (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                      C51300 * C306 + C25805 * C638 + C25800 * C643) *
                         C118 +
                     (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                      C51300 * C318 + C25805 * C644 + C25800 * C653) *
                         C51028) *
                        C32271 +
                    ((C44900 + C44901 + C44902) * C118 +
                     (C44903 + C44904 + C44905) * C51028) *
                        C51169) *
                       C50974 * C295 -
                   (((C26218 + C26217 + C26216) * C51028 +
                     (C26215 + C26214 + C26213) * C118) *
                        C51169 +
                    ((C25848 + C25847 + C25846) * C51028 +
                     (C25845 + C25844 + C25843) * C118) *
                        C32271) *
                       C50974 * C296 +
                   (((C25854 + C25853 + C25852) * C118 +
                     (C25851 + C25850 + C25849) * C51028) *
                        C32271 +
                    ((C26219 + C26220 + C26221) * C118 +
                     (C26222 + C26223 + C26224) * C51028) *
                        C51169) *
                       C50974 * C297) *
                      C51262 +
                  ((((C26213 + C26214 + C26215) * C118 +
                     (C26216 + C26217 + C26218) * C51028) *
                        C32271 +
                    ((C26791 + C26792 + C26793) * C118 +
                     (C26794 + C26795 + C26796) * C51028) *
                        C51169) *
                       C50974 * C296 -
                   (((C25805 * C3649 + C25800 * C3654 + C25804 * C1163 +
                      C51300 * C1170 + C25803 * C1022 + C51308 * C1031) *
                         C51028 +
                     (C25805 * C3645 + C25800 * C3648 + C25804 * C1158 +
                      C51300 * C1162 + C25803 * C1016 + C51308 * C1021) *
                         C118) *
                        C51169 +
                    ((C44905 + C44904 + C44903) * C51028 +
                     (C44902 + C44901 + C44900) * C118) *
                        C32271) *
                       C50974 * C295 -
                   (((C25805 * C3653 + C25800 * C3656 + C25804 * C1167 +
                      C51300 * C1172 + C25803 * C1026 + C51308 * C1033) *
                         C51028 +
                     (C25805 * C3647 + C25800 * C3652 + C25804 * C1160 +
                      C51300 * C1166 + C25803 * C1018 + C51308 * C1025) *
                         C118) *
                        C51169 +
                    ((C26224 + C26223 + C26222) * C51028 +
                     (C26221 + C26220 + C26219) * C118) *
                        C32271) *
                       C50974 * C297) *
                      C51070)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C25803 * C119 + C51308 * C126 + C25804 * C300 +
                     C51300 * C306 + C25805 * C638 + C25800 * C643) *
                        C635 +
                    (C25803 * C127 + C51308 * C140 + C25804 * C307 +
                     C51300 * C318 + C25805 * C644 + C25800 * C653) *
                        C630 -
                    (C25805 * C769 + C25800 * C773 + C25804 * C638 +
                     C51300 * C643 + C25803 * C300 + C51308 * C306) *
                        C636 -
                    (C25805 * C774 + C25800 * C781 + C25804 * C644 +
                     C51300 * C653 + C25803 * C307 + C51308 * C318) *
                        C631 +
                    (C25803 * C638 + C51308 * C643 + C25804 * C769 +
                     C51300 * C773 + C25805 * C3159 + C25800 * C3162) *
                        C637 +
                    (C25803 * C644 + C51308 * C653 + C25804 * C774 +
                     C51300 * C781 + C25805 * C3163 + C25800 * C3168) *
                        C632) *
                       C32271 +
                   ((C44900 + C44901 + C44902) * C635 +
                    (C44903 + C44904 + C44905) * C630 -
                    (C45320 + C45321 + C45322) * C636 -
                    (C45323 + C45324 + C45325) * C631 +
                    (C45326 + C45327 + C45328) * C637 +
                    (C45329 + C45330 + C45331) * C632) *
                       C51169) *
                      C50974 * C50994 * C51262 +
                  (((C45322 + C45321 + C45320) * C636 -
                    ((C44905 + C44904 + C44903) * C630 +
                     (C44902 + C44901 + C44900) * C635) +
                    (C45325 + C45324 + C45323) * C631 -
                    (C45328 + C45327 + C45326) * C637 -
                    (C45331 + C45330 + C45329) * C632) *
                       C32271 +
                   ((C25803 * C1158 + C51308 * C1162 + C25804 * C3645 +
                     C51300 * C3648 + C25805 * C9354 + C25800 * C9356) *
                        C636 -
                    ((C25805 * C3649 + C25800 * C3654 + C25804 * C1163 +
                      C51300 * C1170 + C25803 * C1022 + C51308 * C1031) *
                         C630 +
                     (C25805 * C3645 + C25800 * C3648 + C25804 * C1158 +
                      C51300 * C1162 + C25803 * C1016 + C51308 * C1021) *
                         C635) +
                    (C25803 * C1163 + C51308 * C1170 + C25804 * C3649 +
                     C51300 * C3654 + C25805 * C9357 + C25800 * C9360) *
                        C631 -
                    (C25805 * C11681 + C25800 * C11682 + C25804 * C9354 +
                     C51300 * C9356 + C25803 * C3645 + C51308 * C3648) *
                        C637 -
                    (C25805 * C11683 + C25800 * C11684 + C25804 * C9357 +
                     C51300 * C9360 + C25803 * C3649 + C51308 * C3654) *
                        C632) *
                       C51169) *
                      C50974 * C50994 * C51070)) /
                    (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1363 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C1358 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1364 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51309 +
           ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
            (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
               C51303 +
           (C48172 * C1363 + C48173 * C1358 - C48325 * C1364 -
            C48326 * C51044) *
               C38474) *
              C50974 * C51305 +
          (((C23176 + C23175) * C1364 -
            ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
            (C23178 + C23177) * C51044) *
               C51309 +
           C30867 * C51303 +
           ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
            (C30060 + C30061) * C51044) *
               C38474) *
              C50974 * C51291 +
          (C24363 * C51309 +
           (C29047 * C1363 + C29048 * C1358 - (C24726 + C24725) * C1364 -
            (C24728 + C24727) * C51044) *
               C51303 +
           ((C23963 + C23964) * C1363 + (C23965 + C23966) * C1358 -
            (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
             C22935 * C1166) *
                C1364 -
            (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
             C22935 * C1172) *
                C51044) *
               C38474) *
              C50974 * C1362) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1492 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51306 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1493 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51294 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C1494 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C1489) *
               C51309 +
           ((C29049 + C29050) * C1492 + (C29051 + C29052) * C51306 -
            (C29608 + C29609) * C1493 - (C29610 + C29611) * C51294 +
            (C29612 + C29613) * C1494 + (C29614 + C29615) * C1489) *
               C51303 +
           (C48172 * C1492 + C48173 * C51306 - C48325 * C1493 -
            C48326 * C51294 + (C48022 + C48023) * C1494 +
            (C48024 + C48025) * C1489) *
               C38474) *
              C50974 * C1490 +
          (((C23176 + C23175) * C1493 -
            ((C22978 + C22977) * C51306 + (C22976 + C22975) * C1492) +
            (C23178 + C23177) * C51294 - (C23546 + C23545) * C1494 -
            (C23548 + C23547) * C1489) *
               C51309 +
           (C30854 * C1493 - (C29045 * C51306 + C29046 * C1492) +
            C30857 * C51294 - (C29265 + C29264) * C1494 -
            (C29267 + C29266) * C1489) *
               C51303 +
           ((C30058 + C30059) * C1493 - (C29812 * C51306 + C29813 * C1492) +
            (C30060 + C30061) * C51294 -
            (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
             C22935 * C3650) *
                C1494 -
            (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
             C22935 * C3655) *
                C1489) *
               C38474) *
              C50974 * C50999) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51309 +
            ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
             (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                C51303 +
            (C48172 * C1363 + C48173 * C1358 - C48325 * C1364 -
             C48326 * C51044) *
                C38474) *
               C50974 * C1490 +
           (((C23176 + C23175) * C1364 -
             ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
             (C23178 + C23177) * C51044) *
                C51309 +
            C30867 * C51303 +
            ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
             (C30060 + C30061) * C51044) *
                C38474) *
               C50974 * C50999) *
              C51262 +
          ((((C29609 + C29608) * C1364 -
             ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
             (C29611 + C29610) * C51044) *
                C51309 +
            ((C30054 + C30055) * C1364 -
             ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
             (C30056 + C30057) * C51044) *
                C51303 +
            ((C48338 + C48339) * C1364 - (C48442 * C1358 + C48443 * C1363) +
             (C48340 + C48341) * C51044) *
                C38474) *
               C50974 * C1490 +
           (C30866 * C51309 +
            (C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
             (C30061 + C30060) * C51044) *
                C51303 +
            ((C29838 + C29839) * C1363 + (C29840 + C29841) * C1358 -
             (C22941 * C9460 + C51143 * C9463 + C22940 * C3756 +
              C22935 * C3761) *
                 C1364 -
             (C22941 * C9462 + C51143 * C9466 + C22940 * C3760 +
              C22935 * C3765) *
                 C51044) *
                C38474) *
               C50974 * C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C1363 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C1358 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C1364 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51309 +
            ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
             (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
                C51303 +
            (C48172 * C1363 + C48173 * C1358 - C48325 * C1364 -
             C48326 * C51044) *
                C38474) *
               C50974 * C51253 +
           (((C23176 + C23175) * C1364 -
             ((C22978 + C22977) * C1358 + (C22976 + C22975) * C1363) +
             (C23178 + C23177) * C51044) *
                C51309 +
            C30867 * C51303 +
            ((C30058 + C30059) * C1364 - (C29812 * C1358 + C29813 * C1363) +
             (C30060 + C30061) * C51044) *
                C38474) *
               C50974 * C50999) *
              C1775 +
          ((((C29609 + C29608) * C1364 -
             ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
             (C29611 + C29610) * C51044) *
                C51309 +
            ((C30054 + C30055) * C1364 -
             ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
             (C30056 + C30057) * C51044) *
                C51303 +
            ((C48338 + C48339) * C1364 - (C48442 * C1358 + C48443 * C1363) +
             (C48340 + C48341) * C51044) *
                C38474) *
               C50974 * C51253 +
           (C30866 * C51309 +
            (C29810 * C1363 + C29811 * C1358 - (C30059 + C30058) * C1364 -
             (C30061 + C30060) * C51044) *
                C51303 +
            ((C29838 + C29839) * C1363 + (C29840 + C29841) * C1358 -
             (C22941 * C9460 + C51143 * C9463 + C22940 * C3756 +
              C22935 * C3761) *
                 C1364 -
             (C22941 * C9462 + C51143 * C9466 + C22940 * C3760 +
              C22935 * C3765) *
                 C51044) *
                C38474) *
               C50974 * C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1492 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51306 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1493 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51294 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C1494 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C1489) *
               C51309 +
           ((C29049 + C29050) * C1492 + (C29051 + C29052) * C51306 -
            (C29608 + C29609) * C1493 - (C29610 + C29611) * C51294 +
            (C29612 + C29613) * C1494 + (C29614 + C29615) * C1489) *
               C51303 +
           (C48172 * C1492 + C48173 * C51306 - C48325 * C1493 -
            C48326 * C51294 + (C48022 + C48023) * C1494 +
            (C48024 + C48025) * C1489) *
               C38474) *
              C50974 * C50994 * C1775 +
          (((C29609 + C29608) * C1493 -
            ((C29052 + C29051) * C51306 + (C29050 + C29049) * C1492) +
            (C29611 + C29610) * C51294 - (C29613 + C29612) * C1494 -
            (C29615 + C29614) * C1489) *
               C51309 +
           ((C30054 + C30055) * C1493 -
            ((C29834 + C29835) * C51306 + (C29836 + C29837) * C1492) +
            (C30056 + C30057) * C51294 - (C48023 + C48022) * C1494 -
            (C48025 + C48024) * C1489) *
               C51303 +
           ((C48338 + C48339) * C1493 - (C48442 * C51306 + C48443 * C1492) +
            (C48340 + C48341) * C51294 -
            (C22941 * C11751 + C51143 * C11753 + C22940 * C9461 +
             C22935 * C9465) *
                C1494 -
            (C22941 * C11752 + C51143 * C11754 + C22940 * C9464 +
             C22935 * C9467) *
                C1489) *
               C38474) *
              C50974 * C50994 * C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C1363 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C1358 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C1364 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51309 +
           ((C29049 + C29050) * C1363 + (C29051 + C29052) * C1358 -
            (C29608 + C29609) * C1364 - (C29610 + C29611) * C51044) *
               C51303 +
           C49923 * C38474) *
              C50974 * C50994 * C51307 +
          (((C29609 + C29608) * C1364 -
            ((C29052 + C29051) * C1358 + (C29050 + C29049) * C1363) +
            (C29611 + C29610) * C51044) *
               C51309 +
           ((C30054 + C30055) * C1364 -
            ((C29834 + C29835) * C1358 + (C29836 + C29837) * C1363) +
            (C30056 + C30057) * C51044) *
               C51303 +
           ((C48338 + C48339) * C1364 - (C48442 * C1358 + C48443 * C1363) +
            (C48340 + C48341) * C51044) *
               C38474) *
              C50974 * C50994 * C51297 +
          (C49923 * C51309 +
           ((C30200 + C30201) * C1363 + (C30202 + C30203) * C1358 -
            (C48339 + C48338) * C1364 - (C48341 + C48340) * C51044) *
               C51303 +
           ((C48454 + C48455) * C1363 + (C48456 + C48457) * C1358 -
            (C22941 * C13993 + C51143 * C13997 + C22940 * C13994 +
             C22935 * C13998) *
                C1364 -
            (C22941 * C13995 + C51143 * C13999 + C22940 * C13996 +
             C22935 * C14000) *
                C51044) *
               C38474) *
              C50974 * C50994 * C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51309 +
           ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
            (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
            (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
               C51303 +
           ((C29837 + C29836) * C635 + (C29835 + C29834) * C630 -
            (C30055 + C30054) * C636 - (C30057 + C30056) * C631 +
            (C22940 * C3645 + C22935 * C3648 + C22941 * C9354 +
             C51143 * C9356) *
                C637 +
            (C22940 * C3649 + C22935 * C3654 + C22941 * C9357 +
             C51143 * C9360) *
                C632) *
               C38474) *
              C50974 * C51253 +
          (((C23176 + C23175) * C636 -
            ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
            (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
            (C23548 + C23547) * C632) *
               C51309 +
           (C30854 * C636 - (C29045 * C630 + C29046 * C635) + C30857 * C631 -
            (C29265 + C29264) * C637 - (C29267 + C29266) * C632) *
               C51303 +
           ((C30058 + C30059) * C636 - (C29812 * C630 + C29813 * C635) +
            (C30060 + C30061) * C631 -
            (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
             C22935 * C3650) *
                C637 -
            (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
             C22935 * C3655) *
                C632) *
               C38474) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C118 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51028) *
               C51309 +
           ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
           ((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C38474) *
              C50974 * C112 -
          (C29843 * C38474 + C29060 * C51303 +
           ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51309) *
              C50974 * C113 +
          (C22999 * C51309 + C29061 * C51303 +
           ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C38474) *
              C50974 * C114 -
          (((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
             C22935 * C1034) *
                C51028 +
            (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
             C22935 * C1027) *
                C118) *
               C38474 +
           ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51303 +
           C23000 * C51309) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51309 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
            C48176 * C38474) *
               C50974 * C51253 -
           (C29843 * C38474 + C29060 * C51303 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51309) *
               C50974 * C50999) *
              C1013 +
          ((C29059 * C51309 + C29842 * C51303 +
            ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C38474) *
               C50974 * C50999 -
           (((C30203 + C30202) * C51028 + (C30201 + C30200) * C118) * C38474 +
            ((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51303 +
            ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51309) *
               C50974 * C51253) *
              C1014 +
          ((C48176 * C51309 +
            ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51303 +
            ((C22940 * C6562 + C22935 * C6568 + C22941 * C13994 +
              C51143 * C13998) *
                 C118 +
             (C22940 * C6567 + C22935 * C6571 + C22941 * C13996 +
              C51143 * C14000) *
                 C51028) *
                C38474) *
               C50974 * C51253 -
           (((C22941 * C16589 + C51143 * C16590 + C22940 * C6565 +
              C22935 * C6570) *
                 C51028 +
             (C22941 * C16587 + C51143 * C16588 + C22940 * C6561 +
              C22935 * C6566) *
                 C118) *
                C38474 +
            ((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C51303 +
            C29843 * C51309) *
               C50974 * C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
               C765 +
           (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
               C760 -
           (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
               C766 -
           (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
               C761 +
           (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
               C767 +
           (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
               C762 -
           (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
               C768 -
           (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
               C763) *
              C51309 +
          ((C29049 + C29050) * C765 + (C29051 + C29052) * C760 -
           (C29608 + C29609) * C766 - (C29610 + C29611) * C761 +
           (C29612 + C29613) * C767 + (C29614 + C29615) * C762 -
           (C22941 * C9036 + C51143 * C9038 + C22940 * C3317 + C22935 * C3320) *
               C768 -
           (C22941 * C9039 + C51143 * C9042 + C22940 * C3321 + C22935 * C3326) *
               C763) *
              C51303 +
          ((C29837 + C29836) * C765 + (C29835 + C29834) * C760 -
           (C30055 + C30054) * C766 - (C30057 + C30056) * C761 +
           (C22940 * C3645 + C22935 * C3648 + C22941 * C9354 + C51143 * C9356) *
               C767 +
           (C22940 * C3649 + C22935 * C3654 + C22941 * C9357 + C51143 * C9360) *
               C762 -
           (C22941 * C11681 + C51143 * C11682 + C22940 * C9354 +
            C22935 * C9356) *
               C768 -
           (C22941 * C11683 + C51143 * C11684 + C22940 * C9357 +
            C22935 * C9360) *
               C763) *
              C38474) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C298 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51260 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C299 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51309 +
           ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
            (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
               C51303 +
           ((C29837 + C29836) * C298 + (C29835 + C29834) * C51260 -
            (C30055 + C30054) * C299 - (C30057 + C30056) * C51044) *
               C38474) *
              C50974 * C295 +
          (((C23176 + C23175) * C299 -
            ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
            (C23178 + C23177) * C51044) *
               C51309 +
           C31333 * C51303 +
           ((C30058 + C30059) * C299 - (C29812 * C51260 + C29813 * C298) +
            (C30060 + C30061) * C51044) *
               C38474) *
              C50974 * C296 +
          (C23193 * C51309 +
           (C29047 * C298 + C29048 * C51260 - (C24726 + C24725) * C299 -
            (C24728 + C24727) * C51044) *
               C51303 +
           ((C23963 + C23964) * C298 + (C23965 + C23966) * C51260 -
            (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
             C22935 * C1166) *
                C299 -
            (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
             C22935 * C1172) *
                C51044) *
               C38474) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C298 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51260 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C299 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51309 +
           ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
            (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
               C51303 +
           C48343 * C38474) *
              C50974 * C50994 * C1013 +
          (((C29609 + C29608) * C299 -
            ((C29052 + C29051) * C51260 + (C29050 + C29049) * C298) +
            (C29611 + C29610) * C51044) *
               C51309 +
           ((C30054 + C30055) * C299 -
            ((C29834 + C29835) * C51260 + (C29836 + C29837) * C298) +
            (C30056 + C30057) * C51044) *
               C51303 +
           ((C48338 + C48339) * C299 -
            ((C30203 + C30202) * C51260 + (C30201 + C30200) * C298) +
            (C48340 + C48341) * C51044) *
               C38474) *
              C50974 * C50994 * C1014 +
          (C48343 * C51309 +
           ((C30200 + C30201) * C298 + (C30202 + C30203) * C51260 -
            (C48339 + C48338) * C299 - (C48341 + C48340) * C51044) *
               C51303 +
           ((C22940 * C6562 + C22935 * C6568 + C22941 * C13994 +
             C51143 * C13998) *
                C298 +
            (C22940 * C6567 + C22935 * C6571 + C22941 * C13996 +
             C51143 * C14000) *
                C51260 -
            (C22941 * C13993 + C51143 * C13997 + C22940 * C13994 +
             C22935 * C13998) *
                C299 -
            (C22941 * C13995 + C51143 * C13999 + C22940 * C13996 +
             C22935 * C14000) *
                C51044) *
               C38474) *
              C50974 * C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51309 +
           ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
            (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
            (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
               C51303 +
           ((C29837 + C29836) * C635 + (C29835 + C29834) * C630 -
            (C30055 + C30054) * C636 - (C30057 + C30056) * C631 +
            (C48022 + C48023) * C637 + (C48024 + C48025) * C632) *
               C38474) *
              C50974 * C50994 * C51262 +
          (((C29609 + C29608) * C636 -
            ((C29052 + C29051) * C630 + (C29050 + C29049) * C635) +
            (C29611 + C29610) * C631 - (C29613 + C29612) * C637 -
            (C29615 + C29614) * C632) *
               C51309 +
           ((C30054 + C30055) * C636 -
            ((C29834 + C29835) * C630 + (C29836 + C29837) * C635) +
            (C30056 + C30057) * C631 - (C48023 + C48022) * C637 -
            (C48025 + C48024) * C632) *
               C51303 +
           ((C22940 * C3757 + C22935 * C3763 + C22941 * C9461 +
             C51143 * C9465) *
                C636 -
            ((C30203 + C30202) * C630 + (C30201 + C30200) * C635) +
            (C22940 * C3762 + C22935 * C3766 + C22941 * C9464 +
             C51143 * C9467) *
                C631 -
            (C22941 * C11751 + C51143 * C11753 + C22940 * C9461 +
             C22935 * C9465) *
                C637 -
            (C22941 * C11752 + C51143 * C11754 + C22940 * C9464 +
             C22935 * C9467) *
                C632) *
               C38474) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51309 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
            ((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C38474) *
               C50974 * C295 -
           (C29843 * C38474 + C29060 * C51303 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51309) *
               C50974 * C296 +
           (C22999 * C51309 + C29061 * C51303 +
            ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C38474) *
               C50974 * C297) *
              C51262 +
          ((C29059 * C51309 + C29842 * C51303 +
            ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C38474) *
               C50974 * C296 -
           (((C30203 + C30202) * C51028 + (C30201 + C30200) * C118) * C38474 +
            ((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51303 +
            ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51309) *
               C50974 * C295 -
           (((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
              C22935 * C1257) *
                 C51028 +
             (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
              C22935 * C1251) *
                 C118) *
                C38474 +
            ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51303 +
            C23381 * C51309) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C118 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51028) *
               C51309 +
           ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
           C48176 * C38474) *
              C50974 * C50994 * C1240 -
          (C48458 * C38474 +
           ((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51303 +
           ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51309) *
              C50974 * C50994 * C1241 +
          (C48176 * C51309 +
           ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51303 +
           ((C48454 + C48455) * C118 + (C48456 + C48457) * C51028) * C38474) *
              C50974 * C50994 * C1242 -
          (((C22941 * C19520 + C51143 * C19522 + C22940 * C16719 +
             C22935 * C16722) *
                C51028 +
            (C22941 * C19519 + C51143 * C19521 + C22940 * C16716 +
             C22935 * C16720) *
                C118) *
               C38474 +
           ((C48457 + C48456) * C51028 + (C48455 + C48454) * C118) * C51303 +
           C48458 * C51309) *
              C50974 * C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51309 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
            C48176 * C38474) *
               C50974 * C51305 -
           (C29843 * C38474 + C29060 * C51303 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51309) *
               C50974 * C51291 +
           (C22999 * C51309 + C29061 * C51303 +
            ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C38474) *
               C50974 * C1362) *
              C1775 +
          ((C29059 * C51309 + C29842 * C51303 +
            ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C38474) *
               C50974 * C51291 -
           (C48458 * C38474 +
            ((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51303 +
            ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51309) *
               C50974 * C51305 -
           (((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
              C22935 * C1257) *
                 C51028 +
             (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
              C22935 * C1251) *
                 C118) *
                C38474 +
            ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51303 +
            C23381 * C51309) *
               C50974 * C1362) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C298 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51260 -
             (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                 C299 -
             (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                 C51044) *
                C51309 +
            ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
             (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
                C51303 +
            C48343 * C38474) *
               C50974 * C1490 +
           (((C23176 + C23175) * C299 -
             ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
             (C23178 + C23177) * C51044) *
                C51309 +
            C31333 * C51303 +
            ((C30058 + C30059) * C299 - (C29812 * C51260 + C29813 * C298) +
             (C30060 + C30061) * C51044) *
                C38474) *
               C50974 * C50999) *
              C1775 +
          ((((C29609 + C29608) * C299 -
             ((C29052 + C29051) * C51260 + (C29050 + C29049) * C298) +
             (C29611 + C29610) * C51044) *
                C51309 +
            ((C30054 + C30055) * C299 -
             ((C29834 + C29835) * C51260 + (C29836 + C29837) * C298) +
             (C30056 + C30057) * C51044) *
                C51303 +
            ((C48338 + C48339) * C299 - (C48442 * C51260 + C48443 * C298) +
             (C48340 + C48341) * C51044) *
                C38474) *
               C50974 * C1490 +
           (C31332 * C51309 +
            (C29810 * C298 + C29811 * C51260 - (C30059 + C30058) * C299 -
             (C30061 + C30060) * C51044) *
                C51303 +
            ((C29838 + C29839) * C298 + (C29840 + C29841) * C51260 -
             (C22941 * C9460 + C51143 * C9463 + C22940 * C3756 +
              C22935 * C3761) *
                 C299 -
             (C22941 * C9462 + C51143 * C9466 + C22940 * C3760 +
              C22935 * C3765) *
                 C51044) *
                C38474) *
               C50974 * C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51309 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
            C48176 * C38474) *
               C50974 * C1490 -
           (C29843 * C38474 + C29060 * C51303 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51309) *
               C50974 * C50999) *
              C51307 +
          ((C29059 * C51309 + C29842 * C51303 +
            ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C38474) *
               C50974 * C50999 -
           (C48458 * C38474 +
            ((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51303 +
            ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51309) *
               C50974 * C1490) *
              C51297 +
          ((C48176 * C51309 +
            ((C30200 + C30201) * C118 + (C30202 + C30203) * C51028) * C51303 +
            ((C48454 + C48455) * C118 + (C48456 + C48457) * C51028) * C38474) *
               C50974 * C1490 -
           (((C22941 * C16589 + C51143 * C16590 + C22940 * C6565 +
              C22935 * C6570) *
                 C51028 +
             (C22941 * C16587 + C51143 * C16588 + C22940 * C6561 +
              C22935 * C6566) *
                 C118) *
                C38474 +
            ((C29841 + C29840) * C51028 + (C29839 + C29838) * C118) * C51303 +
            C29843 * C51309) *
               C50974 * C50999) *
              C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C118 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51028) *
               C51309 +
           ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
           ((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C38474) *
              C50974 * C112 -
          (C29843 * C38474 + C29060 * C51303 +
           ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51309) *
              C50974 * C113 +
          (C22999 * C51309 + C29061 * C51303 +
           ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C38474) *
              C50974 * C114 -
          (((C22941 * C1169 + C51143 * C1173 + C22940 * C1028 +
             C22935 * C1034) *
                C51028 +
            (C22941 * C1161 + C51143 * C1168 + C22940 * C1019 +
             C22935 * C1027) *
                C118) *
               C38474 +
           ((C23376 + C23375) * C51028 + (C23374 + C23373) * C118) * C51303 +
           C23000 * C51309) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51309 +
           ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
            (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
            (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
               C51303 +
           ((C29837 + C29836) * C635 + (C29835 + C29834) * C630 -
            (C30055 + C30054) * C636 - (C30057 + C30056) * C631 +
            (C22940 * C3645 + C22935 * C3648 + C22941 * C9354 +
             C51143 * C9356) *
                C637 +
            (C22940 * C3649 + C22935 * C3654 + C22941 * C9357 +
             C51143 * C9360) *
                C632) *
               C38474) *
              C50974 * C51253 +
          (((C23176 + C23175) * C636 -
            ((C22978 + C22977) * C630 + (C22976 + C22975) * C635) +
            (C23178 + C23177) * C631 - (C23546 + C23545) * C637 -
            (C23548 + C23547) * C632) *
               C51309 +
           (C30854 * C636 - (C29045 * C630 + C29046 * C635) + C30857 * C631 -
            (C29265 + C29264) * C637 - (C29267 + C29266) * C632) *
               C51303 +
           ((C30058 + C30059) * C636 - (C29812 * C630 + C29813 * C635) +
            (C30060 + C30061) * C631 -
            (C22941 * C9355 + C51143 * C9358 + C22940 * C3646 +
             C22935 * C3650) *
                C637 -
            (C22941 * C9359 + C51143 * C9361 + C22940 * C3651 +
             C22935 * C3655) *
                C632) *
               C38474) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C298 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C51260 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C299 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C51044) *
               C51309 +
           ((C29049 + C29050) * C298 + (C29051 + C29052) * C51260 -
            (C29608 + C29609) * C299 - (C29610 + C29611) * C51044) *
               C51303 +
           ((C29837 + C29836) * C298 + (C29835 + C29834) * C51260 -
            (C30055 + C30054) * C299 - (C30057 + C30056) * C51044) *
               C38474) *
              C50974 * C295 +
          (((C23176 + C23175) * C299 -
            ((C22978 + C22977) * C51260 + (C22976 + C22975) * C298) +
            (C23178 + C23177) * C51044) *
               C51309 +
           C31333 * C51303 +
           ((C30058 + C30059) * C299 - (C29812 * C51260 + C29813 * C298) +
            (C30060 + C30061) * C51044) *
               C38474) *
              C50974 * C296 +
          (C23193 * C51309 +
           (C29047 * C298 + C29048 * C51260 - (C24726 + C24725) * C299 -
            (C24728 + C24727) * C51044) *
               C51303 +
           ((C23963 + C23964) * C298 + (C23965 + C23966) * C51260 -
            (C22941 * C3647 + C51143 * C3652 + C22940 * C1160 +
             C22935 * C1166) *
                C299 -
            (C22941 * C3653 + C51143 * C3656 + C22940 * C1167 +
             C22935 * C1172) *
                C51044) *
               C38474) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
               C765 +
           (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
               C760 -
           (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
               C766 -
           (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
               C761 +
           (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
               C767 +
           (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
               C762 -
           (C22941 * C3159 + C51143 * C3162 + C22940 * C769 + C22935 * C773) *
               C768 -
           (C22941 * C3163 + C51143 * C3168 + C22940 * C774 + C22935 * C781) *
               C763) *
              C51309 +
          ((C29049 + C29050) * C765 + (C29051 + C29052) * C760 -
           (C29608 + C29609) * C766 - (C29610 + C29611) * C761 +
           (C29612 + C29613) * C767 + (C29614 + C29615) * C762 -
           (C22941 * C9036 + C51143 * C9038 + C22940 * C3317 + C22935 * C3320) *
               C768 -
           (C22941 * C9039 + C51143 * C9042 + C22940 * C3321 + C22935 * C3326) *
               C763) *
              C51303 +
          ((C29837 + C29836) * C765 + (C29835 + C29834) * C760 -
           (C30055 + C30054) * C766 - (C30057 + C30056) * C761 +
           (C22940 * C3645 + C22935 * C3648 + C22941 * C9354 + C51143 * C9356) *
               C767 +
           (C22940 * C3649 + C22935 * C3654 + C22941 * C9357 + C51143 * C9360) *
               C762 -
           (C22941 * C11681 + C51143 * C11682 + C22940 * C9354 +
            C22935 * C9356) *
               C768 -
           (C22941 * C11683 + C51143 * C11684 + C22940 * C9357 +
            C22935 * C9360) *
               C763) *
              C38474) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                 C118 +
             (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                 C51028) *
                C51309 +
            ((C29049 + C29050) * C118 + (C29051 + C29052) * C51028) * C51303 +
            ((C29837 + C29836) * C118 + (C29835 + C29834) * C51028) * C38474) *
               C50974 * C295 -
           (C29843 * C38474 + C29060 * C51303 +
            ((C22978 + C22977) * C51028 + (C22976 + C22975) * C118) * C51309) *
               C50974 * C296 +
           (C22999 * C51309 + C29061 * C51303 +
            ((C23963 + C23964) * C118 + (C23965 + C23966) * C51028) * C38474) *
               C50974 * C297) *
              C51262 +
          ((C29059 * C51309 + C29842 * C51303 +
            ((C29838 + C29839) * C118 + (C29840 + C29841) * C51028) * C38474) *
               C50974 * C296 -
           (((C30203 + C30202) * C51028 + (C30201 + C30200) * C118) * C38474 +
            ((C29834 + C29835) * C51028 + (C29836 + C29837) * C118) * C51303 +
            ((C29052 + C29051) * C51028 + (C29050 + C29049) * C118) * C51309) *
               C50974 * C295 -
           (((C22941 * C3758 + C51143 * C3764 + C22940 * C1250 +
              C22935 * C1257) *
                 C51028 +
             (C22941 * C3755 + C51143 * C3759 + C22940 * C1245 +
              C22935 * C1251) *
                 C118) *
                C38474 +
            ((C23966 + C23965) * C51028 + (C23964 + C23963) * C118) * C51303 +
            C23381 * C51309) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C22940 * C119 + C22935 * C126 + C22941 * C300 + C51143 * C306) *
                C635 +
            (C22940 * C127 + C22935 * C140 + C22941 * C307 + C51143 * C318) *
                C630 -
            (C22941 * C638 + C51143 * C643 + C22940 * C300 + C22935 * C306) *
                C636 -
            (C22941 * C644 + C51143 * C653 + C22940 * C307 + C22935 * C318) *
                C631 +
            (C22940 * C638 + C22935 * C643 + C22941 * C769 + C51143 * C773) *
                C637 +
            (C22940 * C644 + C22935 * C653 + C22941 * C774 + C51143 * C781) *
                C632) *
               C51309 +
           ((C29049 + C29050) * C635 + (C29051 + C29052) * C630 -
            (C29608 + C29609) * C636 - (C29610 + C29611) * C631 +
            (C29612 + C29613) * C637 + (C29614 + C29615) * C632) *
               C51303 +
           ((C29837 + C29836) * C635 + (C29835 + C29834) * C630 -
            (C30055 + C30054) * C636 - (C30057 + C30056) * C631 +
            (C48022 + C48023) * C637 + (C48024 + C48025) * C632) *
               C38474) *
              C50974 * C50994 * C51262 +
          (((C29609 + C29608) * C636 -
            ((C29052 + C29051) * C630 + (C29050 + C29049) * C635) +
            (C29611 + C29610) * C631 - (C29613 + C29612) * C637 -
            (C29615 + C29614) * C632) *
               C51309 +
           ((C30054 + C30055) * C636 -
            ((C29834 + C29835) * C630 + (C29836 + C29837) * C635) +
            (C30056 + C30057) * C631 - (C48023 + C48022) * C637 -
            (C48025 + C48024) * C632) *
               C51303 +
           ((C22940 * C3757 + C22935 * C3763 + C22941 * C9461 +
             C51143 * C9465) *
                C636 -
            ((C30203 + C30202) * C630 + (C30201 + C30200) * C635) +
            (C22940 * C3762 + C22935 * C3766 + C22941 * C9464 +
             C51143 * C9467) *
                C631 -
            (C22941 * C11751 + C51143 * C11753 + C22940 * C9461 +
             C22935 * C9465) *
                C637 -
            (C22941 * C11752 + C51143 * C11754 + C22940 * C9464 +
             C22935 * C9467) *
                C632) *
               C38474) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
            (C8427 + C8428 + C8429) * C1364 -
            (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C51305 +
          (((C8429 + C8428 + C8427) * C1364 -
            ((C8244 + C8243 + C8242) * C1358 +
             (C8241 + C8240 + C8239) * C1363) +
            (C8432 + C8431 + C8430) * C51044) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C1364 -
            ((C8245 + C8246 + C8247) * C1358 +
             (C8248 + C8249 + C8250) * C1363) +
            (C8436 + C8437 + C8438) * C51044) *
               C51157 * C50979) *
              C51291 +
          (((C8250 + C8249 + C8248) * C1363 + (C8247 + C8246 + C8245) * C1358 -
            (C8435 + C8434 + C8433) * C1364 -
            (C8438 + C8437 + C8436) * C51044) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C1363 + (C8254 + C8255 + C8256) * C1358 -
            (C8201 * C772 + C8196 * C779 + C8200 * C641 + C8195 * C649 +
             C8199 * C303 + C8194 * C312) *
                C1364 -
            (C8201 * C780 + C8196 * C784 + C8200 * C650 + C8195 * C656 +
             C8199 * C313 + C8194 * C321) *
                C51044) *
               C51157 * C50979) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1363 +
            (C117 * C127 + C51127 * C140) * C1358 -
            (C117 * C300 + C51127 * C306) * C1364 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
           C1389 * C111) *
              C51305 +
          ((C1368 - (C1367 + C1366) + C1369) * C51157 * C108 +
           (C1372 - (C1371 + C1370) + C1373) * C51157 * C109 +
           (C1376 - (C1375 + C1374) + C1377) * C51157 * C110 +
           (C1378 - (C1379 + C1380) + C1381) * C51157 * C111) *
              C51291 +
          (C1388 * C108 + C1389 * C109 +
           (C1380 + C1379 - C1378 - C1381) * C51157 * C110 +
           (C176 * C1363 + C177 * C1358 -
            (C117 * C305 + C51127 * C316) * C1364 -
            (C117 * C317 + C51127 * C323) * C51044) *
               C51157 * C111) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C15575 +
            (C7085 + C7086 - C7087 - C7088) * C15576 +
            (C8095 + C8094 - C8093 - C8096) * C15577) *
               C51246 +
           ((C1366 + C1367 - C1368 - C1369) * C15575 + C7103 * C15576 +
            (C7094 + C7093 - C7092 - C7095) * C15577) *
               C50979) *
              C51305 +
          (((C1368 - (C1367 + C1366) + C1369) * C15575 + C7104 * C15576 +
            (C7092 - (C7093 + C7094) + C7095) * C15577) *
               C51246 +
           ((C1372 - (C1371 + C1370) + C1373) * C15575 + C7105 * C15576 +
            (C7096 - (C7097 + C7098) + C7099) * C15577) *
               C50979) *
              C51291 +
          ((C1386 * C15575 + C6730 * C15576 +
            (C7098 + C7097 - C7096 - C7099) * C15577) *
               C51246 +
           (C1387 * C15575 + (C1663 + C1662 - C1676 - C1677) * C15576 +
            (C1053 * C1363 + C1054 * C1358 -
             (C117 * C1161 + C51127 * C1168) * C1364 -
             (C117 * C1169 + C51127 * C1173) * C51044) *
                C15577) *
               C50979) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1492 + (C8242 + C8243 + C8244) * C51306 -
            (C8427 + C8428 + C8429) * C1493 - (C8430 + C8431 + C8432) * C51294 +
            (C8779 + C8780 + C8781) * C1494 + (C8782 + C8783 + C8784) * C1489) *
               C51157 * C50979) *
              C1490 +
          (((C8429 + C8428 + C8427) * C1493 -
            ((C8244 + C8243 + C8242) * C51306 +
             (C8241 + C8240 + C8239) * C1492) +
            (C8432 + C8431 + C8430) * C51294 - (C8781 + C8780 + C8779) * C1494 -
            (C8784 + C8783 + C8782) * C1489) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C1493 -
            ((C8245 + C8246 + C8247) * C51306 +
             (C8248 + C8249 + C8250) * C1492) +
            (C8436 + C8437 + C8438) * C51294 -
            (C8201 * C3161 + C8196 * C3166 + C8200 * C771 + C8195 * C777 +
             C8199 * C640 + C8194 * C647) *
                C1494 -
            (C8201 * C3167 + C8196 * C3170 + C8200 * C778 + C8195 * C783 +
             C8199 * C648 + C8194 * C655) *
                C1489) *
               C51157 * C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1492 +
            (C117 * C127 + C51127 * C140) * C51306 -
            (C117 * C300 + C51127 * C306) * C1493 -
            (C117 * C307 + C51127 * C318) * C51294 +
            (C117 * C638 + C51127 * C643) * C1494 +
            (C117 * C644 + C51127 * C653) * C1489) *
               C51157 * C108 +
           (C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51157 * C109 +
           (C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51157 * C110 +
           (C1508 + C1509 - C1510 - C1511 + C1512 + C1513) * C51157 * C111) *
              C1490 +
          ((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C51157 * C108 +
           (C1504 - (C1503 + C1502) + C1505 - C1506 - C1507) * C51157 * C109 +
           (C1510 - (C1509 + C1508) + C1511 - C1512 - C1513) * C51157 * C110 +
           (C357 * C1493 - (C174 * C51306 + C175 * C1492) + C358 * C51294 -
            (C117 * C642 + C51127 * C651) * C1494 -
            (C117 * C652 + C51127 * C657) * C1489) *
               C51157 * C111) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C15575 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C15576 +
            (C6272 * C1492 + C6271 * C51306 - C6451 * C1493 - C6452 * C51294 +
             C16281 * C1494 + C16282 * C1489) *
                C15577) *
               C51246 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C15575 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C15576 +
            (C17025 + C17026 - C17027 - C17028 + C17029 + C17030) * C15577) *
               C50979) *
              C1490 +
          (((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C15575 +
            (C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C15576 +
            (C17027 - (C17026 + C17025) + C17028 - C17029 - C17030) * C15577) *
               C51246 +
           ((C1504 - (C1503 + C1502) + C1505 - C1506 - C1507) * C15575 +
            (C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C15576 +
            (C6455 * C1493 - (C1052 * C51306 + C1051 * C1492) + C6456 * C51294 -
             (C117 * C3647 + C51127 * C3652) * C1494 -
             (C117 * C3653 + C51127 * C3656) * C1489) *
                C15577) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
             (C8427 + C8428 + C8429) * C1364 -
             (C8430 + C8431 + C8432) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51157 * C51246 +
            ((C8433 + C8434 + C8435) * C1364 -
             ((C8245 + C8246 + C8247) * C1358 +
              (C8248 + C8249 + C8250) * C1363) +
             (C8436 + C8437 + C8438) * C51044) *
                C51157 * C50979) *
               C50999) *
              C51262 +
          ((((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
              C8201 * C3317 + C8196 * C3320) *
                 C1364 -
             ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
               C8199 * C486 + C8194 * C494) *
                  C1358 +
              (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
               C8199 * C476 + C8194 * C487) *
                  C1363) +
             (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
              C8201 * C3321 + C8196 * C3326) *
                 C51044) *
                C51157 * C51246 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C1363 + (C8618 + C8619 + C8620) * C1358 -
             (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
              C8199 * C887 + C8194 * C899) *
                 C1364 -
             (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
              C8199 * C900 + C8194 * C911) *
                 C51044) *
                C51157 * C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51157 * C108 +
            (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
            C1389 * C111) *
               C1490 +
           ((C1368 - (C1367 + C1366) + C1369) * C51157 * C108 +
            (C1372 - (C1371 + C1370) + C1373) * C51157 * C109 +
            (C1376 - (C1375 + C1374) + C1377) * C51157 * C110 +
            (C1378 - (C1379 + C1380) + C1381) * C51157 * C111) *
               C50999) *
              C51262 +
          ((((C117 * C883 + C51127 * C891) * C1364 -
             ((C117 * C486 + C51127 * C494) * C1358 +
              (C117 * C476 + C51127 * C487) * C1363) +
             (C117 * C892 + C51127 * C907) * C51044) *
                C51157 * C108 +
            (C1672 - (C1650 + C1651) + C1673) * C51157 * C109 +
            (C1674 - (C1656 + C1657) + C1675) * C51157 * C110 +
            (C1676 - (C1662 + C1663) + C1677) * C51157 * C111) *
               C1490 +
           ((C1651 + C1650 - C1672 - C1673) * C51157 * C108 +
            (C1657 + C1656 - C1674 - C1675) * C51157 * C109 +
            (C1663 + C1662 - C1676 - C1677) * C51157 * C110 +
            (C519 * C1363 + C520 * C1358 -
             (C117 * C1643 + C51127 * C1644) * C1364 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51157 * C111) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C15575 +
             (C7085 + C7086 - C7087 - C7088) * C15576 +
             (C8095 + C8094 - C8093 - C8096) * C15577) *
                C51246 +
            ((C1366 + C1367 - C1368 - C1369) * C15575 + C7103 * C15576 +
             C17233 * C15577) *
                C50979) *
               C1490 +
           (((C1368 - (C1367 + C1366) + C1369) * C15575 + C7104 * C15576 +
             C17234 * C15577) *
                C51246 +
            ((C1372 - (C1371 + C1370) + C1373) * C15575 + C7105 * C15576 +
             (C7096 - (C7097 + C7098) + C7099) * C15577) *
                C50979) *
               C50999) *
              C51262 +
          ((((C7087 - (C7086 + C7085) + C7088) * C15575 +
             (C8093 - (C8094 + C8095) + C8096) * C15576 +
             (C16608 * C1364 - (C6578 * C1358 + C6577 * C1363) +
              C16609 * C51044) *
                 C15577) *
                C51246 +
            (C7104 * C15575 + C17234 * C15576 +
             (C17227 - (C17228 + C17229) + C17230) * C15577) *
                C50979) *
               C1490 +
           ((C7103 * C15575 + C17233 * C15576 +
             (C17229 + C17228 - C17227 - C17230) * C15577) *
                C51246 +
            (C6730 * C15575 + (C7098 + C7097 - C7096 - C7099) * C15576 +
             (C6275 * C1363 + C6276 * C1358 -
              (C117 * C3755 + C51127 * C3759) * C1364 -
              (C117 * C3758 + C51127 * C3764) * C51044) *
                 C15577) *
                C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
             (C8427 + C8428 + C8429) * C1364 -
             (C8430 + C8431 + C8432) * C51044) *
                C51157 * C50979) *
               C51253 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51157 * C51246 +
            ((C8433 + C8434 + C8435) * C1364 -
             ((C8245 + C8246 + C8247) * C1358 +
              (C8248 + C8249 + C8250) * C1363) +
             (C8436 + C8437 + C8438) * C51044) *
                C51157 * C50979) *
               C50999) *
              C1775 +
          ((((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
              C8201 * C3317 + C8196 * C3320) *
                 C1364 -
             ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
               C8199 * C486 + C8194 * C494) *
                  C1358 +
              (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
               C8199 * C476 + C8194 * C487) *
                  C1363) +
             (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
              C8201 * C3321 + C8196 * C3326) *
                 C51044) *
                C51157 * C51246 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51157 * C50979) *
               C51253 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C1363 + (C8618 + C8619 + C8620) * C1358 -
             (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
              C8199 * C887 + C8194 * C899) *
                 C1364 -
             (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
              C8199 * C900 + C8194 * C911) *
                 C51044) *
                C51157 * C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51157 * C108 +
            (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
            C1389 * C111) *
               C51253 +
           ((C1368 - (C1367 + C1366) + C1369) * C51157 * C108 +
            (C1372 - (C1371 + C1370) + C1373) * C51157 * C109 +
            (C1376 - (C1375 + C1374) + C1377) * C51157 * C110 +
            (C1378 - (C1379 + C1380) + C1381) * C51157 * C111) *
               C50999) *
              C1775 +
          ((((C117 * C883 + C51127 * C891) * C1364 -
             ((C117 * C486 + C51127 * C494) * C1358 +
              (C117 * C476 + C51127 * C487) * C1363) +
             (C117 * C892 + C51127 * C907) * C51044) *
                C51157 * C108 +
            (C1672 - (C1650 + C1651) + C1673) * C51157 * C109 +
            (C1674 - (C1656 + C1657) + C1675) * C51157 * C110 +
            (C1676 - (C1662 + C1663) + C1677) * C51157 * C111) *
               C51253 +
           ((C1651 + C1650 - C1672 - C1673) * C51157 * C108 +
            (C1657 + C1656 - C1674 - C1675) * C51157 * C109 +
            (C1663 + C1662 - C1676 - C1677) * C51157 * C110 +
            (C519 * C1363 + C520 * C1358 -
             (C117 * C1643 + C51127 * C1644) * C1364 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51157 * C111) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C15575 +
             (C7085 + C7086 - C7087 - C7088) * C15576 +
             (C8095 + C8094 - C8093 - C8096) * C15577) *
                C51246 +
            ((C1366 + C1367 - C1368 - C1369) * C15575 + C7103 * C15576 +
             C17233 * C15577) *
                C50979) *
               C51253 +
           (((C1368 - (C1367 + C1366) + C1369) * C15575 + C7104 * C15576 +
             C17234 * C15577) *
                C51246 +
            ((C1372 - (C1371 + C1370) + C1373) * C15575 + C7105 * C15576 +
             (C7096 - (C7097 + C7098) + C7099) * C15577) *
                C50979) *
               C50999) *
              C1775 +
          ((((C7087 - (C7086 + C7085) + C7088) * C15575 +
             (C8093 - (C8094 + C8095) + C8096) * C15576 +
             (C16608 * C1364 - (C6578 * C1358 + C6577 * C1363) +
              C16609 * C51044) *
                 C15577) *
                C51246 +
            (C7104 * C15575 + C17234 * C15576 +
             (C17227 - (C17228 + C17229) + C17230) * C15577) *
                C50979) *
               C51253 +
           ((C7103 * C15575 + C17233 * C15576 +
             (C17229 + C17228 - C17227 - C17230) * C15577) *
                C51246 +
            (C6730 * C15575 + (C7098 + C7097 - C7096 - C7099) * C15576 +
             (C6275 * C1363 + C6276 * C1358 -
              (C117 * C3755 + C51127 * C3759) * C1364 -
              (C117 * C3758 + C51127 * C3764) * C51044) *
                 C15577) *
                C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1492 + (C8242 + C8243 + C8244) * C51306 -
            (C8427 + C8428 + C8429) * C1493 - (C8430 + C8431 + C8432) * C51294 +
            (C8779 + C8780 + C8781) * C1494 + (C8782 + C8783 + C8784) * C1489) *
               C51157 * C50979) *
              C50994 * C1775 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C1493 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51306 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C1492) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C51294 -
            (C8201 * C9036 + C8196 * C9038 + C8200 * C3317 + C8195 * C3320 +
             C8199 * C884 + C8194 * C893) *
                C1494 -
            (C8201 * C9039 + C8196 * C9042 + C8200 * C3321 + C8195 * C3326 +
             C8199 * C894 + C8194 * C908) *
                C1489) *
               C51157 * C51246 +
           ((C9967 + C9968 + C9969) * C1493 -
            ((C8614 + C8613 + C8612) * C51306 +
             (C8611 + C8610 + C8609) * C1492) +
            (C9970 + C9971 + C9972) * C51294 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C1494 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C1489) *
               C51157 * C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1492 +
            (C117 * C127 + C51127 * C140) * C51306 -
            (C117 * C300 + C51127 * C306) * C1493 -
            (C117 * C307 + C51127 * C318) * C51294 +
            (C117 * C638 + C51127 * C643) * C1494 +
            (C117 * C644 + C51127 * C653) * C1489) *
               C51157 * C108 +
           (C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51157 * C109 +
           (C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51157 * C110 +
           (C1508 + C1509 - C1510 - C1511 + C1512 + C1513) * C51157 * C111) *
              C50994 * C1775 +
          (((C117 * C883 + C51127 * C891) * C1493 -
            ((C117 * C486 + C51127 * C494) * C51306 +
             (C117 * C476 + C51127 * C487) * C1492) +
            (C117 * C892 + C51127 * C907) * C51294 -
            (C117 * C884 + C51127 * C893) * C1494 -
            (C117 * C894 + C51127 * C908) * C1489) *
               C51157 * C108 +
           (C1666 * C1493 - (C514 * C51306 + C513 * C1492) + C1667 * C51294 -
            (C117 * C886 + C51127 * C897) * C1494 -
            (C117 * C898 + C51127 * C910) * C1489) *
               C51157 * C109 +
           (C1668 * C1493 - (C516 * C51306 + C515 * C1492) + C1669 * C51294 -
            (C117 * C888 + C51127 * C901) * C1494 -
            (C117 * C902 + C51127 * C912) * C1489) *
               C51157 * C110 +
           (C1670 * C1493 - (C518 * C51306 + C517 * C1492) + C1671 * C51294 -
            (C117 * C890 + C51127 * C905) * C1494 -
            (C117 * C906 + C51127 * C914) * C1489) *
               C51157 * C111) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C15575 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C15576 +
            (C18064 + C18065 - C18066 - C18067 + C18068 + C18069) * C15577) *
               C51246 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C15575 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C15576 +
            (C17025 + C17026 - C17027 - C17028 + C17029 + C17030) * C15577) *
               C50979) *
              C50994 * C1775 +
          (((C7943 - (C7942 + C7941) + C7944 - C7945 - C7946) * C15575 +
            (C18066 - (C18065 + C18064) + C18067 - C18068 - C18069) * C15576 +
            (C16608 * C1493 - (C6578 * C51306 + C6577 * C1492) +
             C16609 * C51294 - (C117 * C9461 + C51127 * C9465) * C1494 -
             (C117 * C9464 + C51127 * C9467) * C1489) *
                C15577) *
               C51246 +
           ((C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C15575 +
            (C17027 - (C17026 + C17025) + C17028 - C17029 - C17030) * C15576 +
            (C16610 * C1493 - (C6274 * C51306 + C6273 * C1492) +
             C16611 * C51294 - (C117 * C9460 + C51127 * C9463) * C1494 -
             (C117 * C9462 + C51127 * C9466) * C1489) *
                C15577) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
            (C8427 + C8428 + C8429) * C1364 -
            (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C50994 * C51307 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C1364 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C1358 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C1363) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C51044) *
               C51157 * C51246 +
           ((C9967 + C9968 + C9969) * C1364 -
            ((C8614 + C8613 + C8612) * C1358 +
             (C8611 + C8610 + C8609) * C1363) +
            (C9970 + C9971 + C9972) * C51044) *
               C51157 * C50979) *
              C50994 * C51297 +
          (((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
             C8201 * C3645 + C8196 * C3648) *
                C1363 +
            (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
             C8201 * C3649 + C8196 * C3654) *
                C1358 -
            (C8201 * C9354 + C8196 * C9356 + C8200 * C3645 + C8195 * C3648 +
             C8199 * C1158 + C8194 * C1162) *
                C1364 -
            (C8201 * C9357 + C8196 * C9360 + C8200 * C3649 + C8195 * C3654 +
             C8199 * C1163 + C8194 * C1170) *
                C51044) *
               C51157 * C51246 +
           ((C9203 + C9204 + C9205) * C1363 + (C9206 + C9207 + C9208) * C1358 -
            (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
             C8199 * C1159 + C8194 * C1164) *
                C1364 -
            (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
             C8199 * C1165 + C8194 * C1171) *
                C51044) *
               C51157 * C50979) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1363 +
            (C117 * C127 + C51127 * C140) * C1358 -
            (C117 * C300 + C51127 * C306) * C1364 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
           C1389 * C111) *
              C50994 * C51307 +
          (((C117 * C883 + C51127 * C891) * C1364 -
            ((C117 * C486 + C51127 * C494) * C1358 +
             (C117 * C476 + C51127 * C487) * C1363) +
            (C117 * C892 + C51127 * C907) * C51044) *
               C51157 * C108 +
           (C1672 - (C1650 + C1651) + C1673) * C51157 * C109 +
           (C1674 - (C1656 + C1657) + C1675) * C51157 * C110 +
           (C1676 - (C1662 + C1663) + C1677) * C51157 * C111) *
              C50994 * C51297 +
          (((C117 * C1016 + C51127 * C1021) * C1363 +
            (C117 * C1022 + C51127 * C1031) * C1358 -
            (C117 * C1158 + C51127 * C1162) * C1364 -
            (C117 * C1163 + C51127 * C1170) * C51044) *
               C51157 * C108 +
           (C1049 * C1363 + C1050 * C1358 -
            (C117 * C1159 + C51127 * C1164) * C1364 -
            (C117 * C1165 + C51127 * C1171) * C51044) *
               C51157 * C109 +
           (C1051 * C1363 + C1052 * C1358 -
            (C117 * C1160 + C51127 * C1166) * C1364 -
            (C117 * C1167 + C51127 * C1172) * C51044) *
               C51157 * C110 +
           (C1053 * C1363 + C1054 * C1358 -
            (C117 * C1161 + C51127 * C1168) * C1364 -
            (C117 * C1169 + C51127 * C1173) * C51044) *
               C51157 * C111) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C15575 +
            (C7085 + C7086 - C7087 - C7088) * C15576 + C18222 * C15577) *
               C51246 +
           ((C1366 + C1367 - C1368 - C1369) * C15575 + C7103 * C15576 +
            C17233 * C15577) *
               C50979) *
              C50994 * C51307 +
          (((C7087 - (C7086 + C7085) + C7088) * C15575 +
            (C8093 - (C8094 + C8095) + C8096) * C15576 +
            (C18217 - (C18218 + C18219) + C18220) * C15577) *
               C51246 +
           (C7104 * C15575 + C17234 * C15576 +
            (C17227 - (C17228 + C17229) + C17230) * C15577) *
               C50979) *
              C50994 * C51297 +
          ((C18222 * C15575 + (C18219 + C18218 - C18217 - C18220) * C15576 +
            (C16729 * C1363 + C16730 * C1358 -
             (C117 * C13994 + C51127 * C13998) * C1364 -
             (C117 * C13996 + C51127 * C14000) * C51044) *
                C15577) *
               C51246 +
           (C17233 * C15575 + (C17229 + C17228 - C17227 - C17230) * C15576 +
            (C16438 * C1363 + C16439 * C1358 -
             (C117 * C16587 + C51127 * C16588) * C1364 -
             (C117 * C16589 + C51127 * C16590) * C51044) *
                C15577) *
               C50979) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51127 * C126) * C118 +
                (C117 * C127 + C51127 * C140) * C51028) *
                   C51157 * C108 +
               (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
                  C112 -
              (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
               (C179 + C178) * C51157 * C108) *
                  C113 +
              (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
               (C186 + C187) * C51157 * C111) *
                  C114 -
              (((C117 * C138 + C51127 * C146) * C51028 +
                (C117 * C125 + C51127 * C139) * C118) *
                   C51157 * C111 +
               (C187 + C186) * C51157 * C110 + C194 * C109 + C195 * C108) *
                  C115) *
             C51058 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51127 * C126) * C635 +
                (C117 * C127 + C51127 * C140) * C630 -
                (C117 * C300 + C51127 * C306) * C636 -
                (C117 * C307 + C51127 * C318) * C631 +
                (C117 * C638 + C51127 * C643) * C637 +
                (C117 * C644 + C51127 * C653) * C632) *
                   C51157 * C108 +
               (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
               (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
               (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
                  C51253 +
              ((C661 - (C660 + C659) + C662 - C689 - C690) * C51157 * C108 +
               (C669 - (C668 + C667) + C670 - C691 - C692) * C51157 * C109 +
               (C677 - (C676 + C675) + C678 - C693 - C694) * C51157 * C110 +
               (C357 * C636 - (C174 * C630 + C175 * C635) + C358 * C631 -
                (C117 * C642 + C51127 * C651) * C637 -
                (C117 * C652 + C51127 * C657) * C632) *
                   C51157 * C111) *
                  C50999) *
             C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C51253 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C50999) *
              C1013 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C50999 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C51253) *
              C1014 +
          ((((C117 * C1016 + C51127 * C1021) * C118 +
             (C117 * C1022 + C51127 * C1031) * C51028) *
                C51157 * C108 +
            (C1055 + C1056) * C51157 * C109 + (C1057 + C1058) * C51157 * C110 +
            (C1059 + C1060) * C51157 * C111) *
               C51253 -
           (((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C51157 * C111 +
            (C1060 + C1059) * C51157 * C110 + (C1058 + C1057) * C51157 * C109 +
            (C1056 + C1055) * C51157 * C108) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C118 + (C8242 + C8243 + C8244) * C51028) *
               C51157 * C50979) *
              C112 -
          (((C8245 + C8246 + C8247) * C51028 + (C8248 + C8249 + C8250) * C118) *
               C51157 * C50979 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51157 * C51246) *
              C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C118 + (C8254 + C8255 + C8256) * C51028) *
               C51157 * C50979) *
              C114 -
          (((C8201 * C652 + C8196 * C657 + C8200 * C315 + C8195 * C322 +
             C8199 * C134 + C8194 * C144) *
                C51028 +
            (C8201 * C642 + C8196 * C651 + C8200 * C304 + C8195 * C314 +
             C8199 * C123 + C8194 * C135) *
                C118) *
               C51157 * C50979 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51157 * C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C636 -
            ((C8245 + C8246 + C8247) * C630 + (C8248 + C8249 + C8250) * C635) +
            (C8436 + C8437 + C8438) * C631 -
            (C8201 * C3161 + C8196 * C3166 + C8200 * C771 + C8195 * C777 +
             C8199 * C640 + C8194 * C647) *
                C637 -
            (C8201 * C3167 + C8196 * C3170 + C8200 * C778 + C8195 * C783 +
             C8199 * C648 + C8194 * C655) *
                C632) *
               C51157 * C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C51253 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C50999) *
              C1013 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C50999 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C51253) *
              C1014 +
          ((((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
              C8201 * C3645 + C8196 * C3648) *
                 C118 +
             (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
              C8201 * C3649 + C8196 * C3654) *
                 C51028) *
                C51157 * C51246 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51157 * C50979) *
               C51253 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51157 * C50979 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51157 * C51246) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C15575 +
            (C5675 + C5676) * C15576 + (C6278 + C6277) * C15577) *
               C51246 +
           ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
               C50979) *
              C112 -
          ((C5670 * C15577 + C530 * C15576 + (C181 + C180) * C15575) * C50979 +
           (C6258 * C15577 + C5668 * C15576 + (C179 + C178) * C15575) *
               C51246) *
              C113 +
          ((C188 * C15575 + C5359 * C15576 + C6257 * C15577) * C51246 +
           (C189 * C15575 + C5669 * C15576 + (C1059 + C1060) * C15577) *
               C50979) *
              C114 -
          ((((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C15577 +
            (C528 + C527) * C15576 + C190 * C15575) *
               C50979 +
           ((C1060 + C1059) * C15577 + C529 * C15576 + C191 * C15575) *
               C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C15575 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C15576 +
            (C6272 * C635 + C6271 * C630 - C6451 * C636 - C6452 * C631 +
             (C117 * C3645 + C51127 * C3648) * C637 +
             (C117 * C3649 + C51127 * C3654) * C632) *
                C15577) *
               C51246 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C15575 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C15576 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C15577) *
               C50979) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C15575 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C15576 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C15577) *
               C51246 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C15575 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C15576 +
            (C6455 * C636 - (C1052 * C630 + C1051 * C635) + C6456 * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C15577) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C15575 +
             (C5675 + C5676) * C15576 + C16431 * C15577) *
                C51246 +
            ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
                C50979) *
               C51253 -
           ((C5670 * C15577 + C530 * C15576 + (C181 + C180) * C15575) * C50979 +
            (C6258 * C15577 + C5668 * C15576 + (C179 + C178) * C15575) *
                C51246) *
               C50999) *
              C1013 +
          (((C5667 * C15575 + C6256 * C15576 + C16432 * C15577) * C51246 +
            (C5359 * C15575 + C6257 * C15576 + (C6281 + C6282) * C15577) *
                C50979) *
               C50999 -
           ((C16433 * C15577 + C6258 * C15576 + C5668 * C15575) * C50979 +
            ((C6580 + C6579) * C15577 + (C6277 + C6278) * C15576 +
             (C5676 + C5675) * C15575) *
                C51246) *
               C51253) *
              C1014 +
          (((C16431 * C15575 + (C6579 + C6580) * C15576 +
             ((C117 * C6562 + C51127 * C6568) * C118 +
              (C117 * C6567 + C51127 * C6571) * C51028) *
                 C15577) *
                C51246 +
            (C6256 * C15575 + C16432 * C15576 + (C16440 + C16441) * C15577) *
                C50979) *
               C51253 -
           ((((C117 * C6563 + C51127 * C6569) * C51028 +
              (C117 * C6560 + C51127 * C6564) * C118) *
                 C15577 +
             (C6282 + C6281) * C15576 + C5670 * C15575) *
                C50979 +
            ((C16441 + C16440) * C15577 + C16433 * C15576 + C6258 * C15575) *
                C51246) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51127 * C126) * C298 +
                (C117 * C127 + C51127 * C140) * C51260 -
                (C117 * C300 + C51127 * C306) * C299 -
                (C117 * C307 + C51127 * C318) * C51044) *
                   C51157 * C108 +
               (C325 + C326 - C359 - C360) * C51157 * C109 + C371 * C110 +
               C372 * C111) *
                  C295 +
              ((C359 - (C326 + C325) + C360) * C51157 * C108 +
               (C361 - (C332 + C331) + C362) * C51157 * C109 +
               (C363 - (C338 + C337) + C364) * C51157 * C110 +
               (C365 - (C345 + C346) + C366) * C51157 * C111) *
                  C296 +
              (C371 * C108 + C372 * C109 +
               (C346 + C345 - C365 - C366) * C51157 * C110 +
               (C176 * C298 + C177 * C51260 -
                (C117 * C305 + C51127 * C316) * C299 -
                (C117 * C317 + C51127 * C323) * C51044) *
                   C51157 * C111) *
                  C297) *
             C51058 +
         0.5 * std::pow(Pi, 2.5) *
             (((C117 * C119 + C51127 * C126) * C765 +
               (C117 * C127 + C51127 * C140) * C760 -
               (C117 * C300 + C51127 * C306) * C766 -
               (C117 * C307 + C51127 * C318) * C761 +
               (C117 * C638 + C51127 * C643) * C767 +
               (C117 * C644 + C51127 * C653) * C762 -
               (C117 * C769 + C51127 * C773) * C768 -
               (C117 * C774 + C51127 * C781) * C763) *
                  C51157 * C108 +
              (C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
               C683 * C767 + C684 * C762 -
               (C117 * C770 + C51127 * C775) * C768 -
               (C117 * C776 + C51127 * C782) * C763) *
                  C51157 * C109 +
              (C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 +
               C685 * C767 + C686 * C762 -
               (C117 * C771 + C51127 * C777) * C768 -
               (C117 * C778 + C51127 * C783) * C763) *
                  C51157 * C110 +
              (C172 * C765 + C173 * C760 - C355 * C766 - C356 * C761 +
               C687 * C767 + C688 * C762 -
               (C117 * C772 + C51127 * C779) * C768 -
               (C117 * C780 + C51127 * C784) * C763) *
                  C51157 * C111) *
             C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * ((((C117 * C119 + C51127 * C126) * C298 +
                                (C117 * C127 + C51127 * C140) * C51260 -
                                (C117 * C300 + C51127 * C306) * C299 -
                                (C117 * C307 + C51127 * C318) * C51044) *
                                   C51157 * C108 +
                               (C325 + C326 - C359 - C360) * C51157 * C109 +
                               C371 * C110 + C372 * C111) *
                                  C50994 * C1013 +
                              (((C117 * C883 + C51127 * C891) * C299 -
                                ((C117 * C486 + C51127 * C494) * C51260 +
                                 (C117 * C476 + C51127 * C487) * C298) +
                                (C117 * C892 + C51127 * C907) * C51044) *
                                   C51157 * C108 +
                               ((C117 * C885 + C51127 * C895) * C299 -
                                (C514 * C51260 + C513 * C298) +
                                (C117 * C896 + C51127 * C909) * C51044) *
                                   C51157 * C109 +
                               ((C117 * C887 + C51127 * C899) * C299 -
                                (C516 * C51260 + C515 * C298) +
                                (C117 * C900 + C51127 * C911) * C51044) *
                                   C51157 * C110 +
                               ((C117 * C889 + C51127 * C903) * C299 -
                                (C518 * C51260 + C517 * C298) +
                                (C117 * C904 + C51127 * C913) * C51044) *
                                   C51157 * C111) *
                                  C50994 * C1014 +
                              (((C117 * C1016 + C51127 * C1021) * C298 +
                                (C117 * C1022 + C51127 * C1031) * C51260 -
                                (C117 * C1158 + C51127 * C1162) * C299 -
                                (C117 * C1163 + C51127 * C1170) * C51044) *
                                   C51157 * C108 +
                               (C1049 * C298 + C1050 * C51260 -
                                (C117 * C1159 + C51127 * C1164) * C299 -
                                (C117 * C1165 + C51127 * C1171) * C51044) *
                                   C51157 * C109 +
                               (C1051 * C298 + C1052 * C51260 -
                                (C117 * C1160 + C51127 * C1166) * C299 -
                                (C117 * C1167 + C51127 * C1172) * C51044) *
                                   C51157 * C110 +
                               (C1053 * C298 + C1054 * C51260 -
                                (C117 * C1161 + C51127 * C1168) * C299 -
                                (C117 * C1169 + C51127 * C1173) * C51044) *
                                   C51157 * C111) *
                                  C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
            (C8427 + C8428 + C8429) * C299 - (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C299 -
            ((C8245 + C8246 + C8247) * C51260 +
             (C8248 + C8249 + C8250) * C298) +
            (C8436 + C8437 + C8438) * C51044) *
               C51157 * C50979) *
              C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C298 + (C8254 + C8255 + C8256) * C51260 -
            (C8201 * C772 + C8196 * C779 + C8200 * C641 + C8195 * C649 +
             C8199 * C303 + C8194 * C312) *
                C299 -
            (C8201 * C780 + C8196 * C784 + C8200 * C650 + C8195 * C656 +
             C8199 * C313 + C8194 * C321) *
                C51044) *
               C51157 * C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51157 * C51246 +
          ((C8239 + C8240 + C8241) * C765 + (C8242 + C8243 + C8244) * C760 -
           (C8427 + C8428 + C8429) * C766 - (C8430 + C8431 + C8432) * C761 +
           (C8779 + C8780 + C8781) * C767 + (C8782 + C8783 + C8784) * C762 -
           (C8201 * C8883 + C8196 * C8886 + C8200 * C3160 + C8195 * C3164 +
            C8199 * C770 + C8194 * C775) *
               C768 -
           (C8201 * C8887 + C8196 * C8889 + C8200 * C3165 + C8195 * C3169 +
            C8199 * C776 + C8194 * C782) *
               C763) *
              C51157 * C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
            (C8427 + C8428 + C8429) * C299 - (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C50994 * C1013 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C299 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51260 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C298) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C51044) *
               C51157 * C51246 +
           ((C8199 * C885 + C8194 * C895 + C8200 * C886 + C8195 * C897 +
             C8201 * C3318 + C8196 * C3322) *
                C299 -
            ((C8614 + C8613 + C8612) * C51260 +
             (C8611 + C8610 + C8609) * C298) +
            (C8199 * C896 + C8194 * C909 + C8200 * C898 + C8195 * C910 +
             C8201 * C3323 + C8196 * C3327) *
                C51044) *
               C51157 * C50979) *
              C50994 * C1014 +
          (((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
             C8201 * C3645 + C8196 * C3648) *
                C298 +
            (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
             C8201 * C3649 + C8196 * C3654) *
                C51260 -
            (C8201 * C9354 + C8196 * C9356 + C8200 * C3645 + C8195 * C3648 +
             C8199 * C1158 + C8194 * C1162) *
                C299 -
            (C8201 * C9357 + C8196 * C9360 + C8200 * C3649 + C8195 * C3654 +
             C8199 * C1163 + C8194 * C1170) *
                C51044) *
               C51157 * C51246 +
           ((C9203 + C9204 + C9205) * C298 + (C9206 + C9207 + C9208) * C51260 -
            (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
             C8199 * C1159 + C8194 * C1164) *
                C299 -
            (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
             C8199 * C1165 + C8194 * C1171) *
                C51044) *
               C51157 * C50979) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C15575 +
            (C6429 + C6430 - C6431 - C6432) * C15576 +
            (C6436 + C6435 - C6457 - C6458) * C15577) *
               C51246 +
           ((C325 + C326 - C359 - C360) * C15575 + C7452 * C15576 +
            (C6442 + C6441 - C6459 - C6460) * C15577) *
               C50979) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C15575 + C7453 * C15576 +
            (C6459 - (C6441 + C6442) + C6460) * C15577) *
               C51246 +
           ((C361 - (C332 + C331) + C362) * C15575 + C7454 * C15576 +
            (C6461 - (C6447 + C6448) + C6462) * C15577) *
               C50979) *
              C296 +
          ((C369 * C15575 + C5514 * C15576 +
            (C6448 + C6447 - C6461 - C6462) * C15577) *
               C51246 +
           (C370 * C15575 + (C1918 + C1917 - C1916 - C1919) * C15576 +
            (C1053 * C298 + C1054 * C51260 -
             (C117 * C1161 + C51127 * C1168) * C299 -
             (C117 * C1169 + C51127 * C1173) * C51044) *
                C15577) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C15575 +
           (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
            C6104 * C767 + C6105 * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C15576 +
           (C6272 * C765 + C6271 * C760 - C6451 * C766 - C6452 * C761 +
            (C117 * C3645 + C51127 * C3648) * C767 +
            (C117 * C3649 + C51127 * C3654) * C762 -
            (C117 * C9354 + C51127 * C9356) * C768 -
            (C117 * C9357 + C51127 * C9360) * C763) *
               C15577) *
              C51246 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C15575 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C15576 +
           (C1049 * C765 + C1050 * C760 - C6453 * C766 - C6454 * C761 +
            C16025 * C767 + C16026 * C762 -
            (C117 * C9355 + C51127 * C9358) * C768 -
            (C117 * C9359 + C51127 * C9361) * C763) *
               C15577) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C15575 +
            (C6429 + C6430 - C6431 - C6432) * C15576 + C16612 * C15577) *
               C51246 +
           ((C325 + C326 - C359 - C360) * C15575 + C7452 * C15576 +
            C16613 * C15577) *
               C50979) *
              C50994 * C1013 +
          (((C6431 - (C6430 + C6429) + C6432) * C15575 +
            (C6457 - (C6435 + C6436) + C6458) * C15576 +
            (C16614 - (C16596 + C16597) + C16615) * C15577) *
               C51246 +
           (C7453 * C15575 + (C6459 - (C6441 + C6442) + C6460) * C15576 +
            (C16616 - (C16602 + C16603) + C16617) * C15577) *
               C50979) *
              C50994 * C1014 +
          ((C16612 * C15575 + (C16597 + C16596 - C16614 - C16615) * C15576 +
            ((C117 * C6562 + C51127 * C6568) * C298 +
             (C117 * C6567 + C51127 * C6571) * C51260 -
             (C117 * C13994 + C51127 * C13998) * C299 -
             (C117 * C13996 + C51127 * C14000) * C51044) *
                C15577) *
               C51246 +
           (C16613 * C15575 + (C16603 + C16602 - C16616 - C16617) * C15576 +
            (C16438 * C298 + C16439 * C51260 -
             (C117 * C16587 + C51127 * C16588) * C299 -
             (C117 * C16589 + C51127 * C16590) * C51044) *
                C15577) *
               C50979) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51127 * C126) * C118 +
                 (C117 * C127 + C51127 * C140) * C51028) *
                    C51157 * C108 +
                (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
                   C295 -
               (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
                (C179 + C178) * C51157 * C108) *
                   C296 +
               (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
                (C186 + C187) * C51157 * C111) *
                   C297) *
                  C51262 +
              (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
                (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
                   C296 -
               (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
                ((C117 * C486 + C51127 * C494) * C51028 +
                 (C117 * C476 + C51127 * C487) * C118) *
                    C51157 * C108) *
                   C295 -
               (((C117 * C488 + C51127 * C495) * C51028 +
                 (C117 * C477 + C51127 * C489) * C118) *
                    C51157 * C111 +
                (C528 + C527) * C51157 * C110 + C531 * C109 + C532 * C108) *
                   C297) *
                  C51070) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51127 * C126) * C635 +
                (C117 * C127 + C51127 * C140) * C630 -
                (C117 * C300 + C51127 * C306) * C636 -
                (C117 * C307 + C51127 * C318) * C631 +
                (C117 * C638 + C51127 * C643) * C637 +
                (C117 * C644 + C51127 * C653) * C632) *
                   C51157 * C108 +
               (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
               (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
               (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
                  C50994 * C51262 +
              (((C117 * C883 + C51127 * C891) * C636 -
                ((C117 * C486 + C51127 * C494) * C630 +
                 (C117 * C476 + C51127 * C487) * C635) +
                (C117 * C892 + C51127 * C907) * C631 -
                (C117 * C884 + C51127 * C893) * C637 -
                (C117 * C894 + C51127 * C908) * C632) *
                   C51157 * C108 +
               ((C117 * C885 + C51127 * C895) * C636 -
                (C514 * C630 + C513 * C635) +
                (C117 * C896 + C51127 * C909) * C631 -
                (C117 * C886 + C51127 * C897) * C637 -
                (C117 * C898 + C51127 * C910) * C632) *
                   C51157 * C109 +
               ((C117 * C887 + C51127 * C899) * C636 -
                (C516 * C630 + C515 * C635) +
                (C117 * C900 + C51127 * C911) * C631 -
                (C117 * C888 + C51127 * C901) * C637 -
                (C117 * C902 + C51127 * C912) * C632) *
                   C51157 * C110 +
               ((C117 * C889 + C51127 * C903) * C636 -
                (C518 * C630 + C517 * C635) +
                (C117 * C904 + C51127 * C913) * C631 -
                (C117 * C890 + C51127 * C905) * C637 -
                (C117 * C906 + C51127 * C914) * C632) *
                   C51157 * C111) *
                  C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C51157 * C108 +
           (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
              C50994 * C1240 -
          (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
           ((C117 * C486 + C51127 * C494) * C51028 +
            (C117 * C476 + C51127 * C487) * C118) *
               C51157 * C108) *
              C50994 * C1241 +
          (((C117 * C1016 + C51127 * C1021) * C118 +
            (C117 * C1022 + C51127 * C1031) * C51028) *
               C51157 * C108 +
           (C1055 + C1056) * C51157 * C109 + (C1057 + C1058) * C51157 * C110 +
           (C1059 + C1060) * C51157 * C111) *
              C50994 * C1242 -
          (((C117 * C1248 + C51127 * C1256) * C51028 +
            (C117 * C1244 + C51127 * C1249) * C118) *
               C51157 * C111 +
           ((C117 * C1250 + C51127 * C1257) * C51028 +
            (C117 * C1245 + C51127 * C1251) * C118) *
               C51157 * C110 +
           ((C117 * C1252 + C51127 * C1258) * C51028 +
            (C117 * C1246 + C51127 * C1253) * C118) *
               C51157 * C109 +
           ((C117 * C1254 + C51127 * C1259) * C51028 +
            (C117 * C1247 + C51127 * C1255) * C118) *
               C51157 * C108) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C295 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51157 * C51246 +
            ((C8251 + C8252 + C8253) * C118 +
             (C8254 + C8255 + C8256) * C51028) *
                C51157 * C50979) *
               C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C296 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C295 -
           (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
              C8199 * C483 + C8194 * C492) *
                 C51028 +
             (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
              C8199 * C474 + C8194 * C482) *
                 C118) *
                C51157 * C50979 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51157 * C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C50994 * C51262 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C636 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C630 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C635) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C631 -
            (C8201 * C9036 + C8196 * C9038 + C8200 * C3317 + C8195 * C3320 +
             C8199 * C884 + C8194 * C893) *
                C637 -
            (C8201 * C9039 + C8196 * C9042 + C8200 * C3321 + C8195 * C3326 +
             C8199 * C894 + C8194 * C908) *
                C632) *
               C51157 * C51246 +
           ((C8199 * C885 + C8194 * C895 + C8200 * C886 + C8195 * C897 +
             C8201 * C3318 + C8196 * C3322) *
                C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C8199 * C896 + C8194 * C909 + C8200 * C898 + C8195 * C910 +
             C8201 * C3323 + C8196 * C3327) *
                C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51157 * C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C118 + (C8242 + C8243 + C8244) * C51028) *
               C51157 * C50979) *
              C50994 * C1240 -
          (((C8614 + C8613 + C8612) * C51028 + (C8611 + C8610 + C8609) * C118) *
               C51157 * C50979 +
           ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
             C8199 * C486 + C8194 * C494) *
                C51028 +
            (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
             C8199 * C476 + C8194 * C487) *
                C118) *
               C51157 * C51246) *
              C50994 * C1241 +
          (((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
             C8201 * C3645 + C8196 * C3648) *
                C118 +
            (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
             C8201 * C3649 + C8196 * C3654) *
                C51028) *
               C51157 * C51246 +
           ((C9203 + C9204 + C9205) * C118 + (C9206 + C9207 + C9208) * C51028) *
               C51157 * C50979) *
              C50994 * C1242 -
          (((C8201 * C9462 + C8196 * C9466 + C8200 * C3760 + C8195 * C3765 +
             C8199 * C1252 + C8194 * C1258) *
                C51028 +
            (C8201 * C9460 + C8196 * C9463 + C8200 * C3756 + C8195 * C3761 +
             C8199 * C1246 + C8194 * C1253) *
                C118) *
               C51157 * C50979 +
           ((C8201 * C9464 + C8196 * C9467 + C8200 * C3762 + C8195 * C3766 +
             C8199 * C1254 + C8194 * C1259) *
                C51028 +
            (C8201 * C9461 + C8196 * C9465 + C8200 * C3757 + C8195 * C3763 +
             C8199 * C1247 + C8194 * C1255) *
                C118) *
               C51157 * C51246) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C15575 +
             (C5675 + C5676) * C15576 + (C6278 + C6277) * C15577) *
                C51246 +
            ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
                C50979) *
               C295 -
           ((C5670 * C15577 + C530 * C15576 + (C181 + C180) * C15575) * C50979 +
            (C6258 * C15577 + C5668 * C15576 + (C179 + C178) * C15575) *
                C51246) *
               C296 +
           ((C188 * C15575 + C5359 * C15576 + C6257 * C15577) * C51246 +
            (C189 * C15575 + C5669 * C15576 + (C1059 + C1060) * C15577) *
                C50979) *
               C297) *
              C51262 +
          (((C5667 * C15575 + C6256 * C15576 + (C6279 + C6280) * C15577) *
                C51246 +
            (C5359 * C15575 + C6257 * C15576 + (C6281 + C6282) * C15577) *
                C50979) *
               C296 -
           (((C6280 + C6279) * C15577 + C6258 * C15576 + C5668 * C15575) *
                C50979 +
            ((C6580 + C6579) * C15577 + (C6277 + C6278) * C15576 +
             (C5676 + C5675) * C15575) *
                C51246) *
               C295 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C15577 +
             (C1060 + C1059) * C15576 + C529 * C15575) *
                C50979 +
            ((C6282 + C6281) * C15577 + C5670 * C15576 + C530 * C15575) *
                C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C15575 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C15576 +
            (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C15577) *
               C51246 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C15575 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C15576 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C15577) *
               C50979) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C15575 +
            (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C15576 +
            ((C117 * C3757 + C51127 * C3763) * C636 -
             (C6578 * C630 + C6577 * C635) +
             (C117 * C3762 + C51127 * C3766) * C631 -
             (C117 * C9461 + C51127 * C9465) * C637 -
             (C117 * C9464 + C51127 * C9467) * C632) *
                C15577) *
               C51246 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C15575 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C15576 +
            ((C117 * C3756 + C51127 * C3761) * C636 -
             (C6274 * C630 + C6273 * C635) +
             (C117 * C3760 + C51127 * C3765) * C631 -
             (C117 * C9460 + C51127 * C9463) * C637 -
             (C117 * C9462 + C51127 * C9466) * C632) *
                C15577) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C15575 +
            (C5675 + C5676) * C15576 + C16431 * C15577) *
               C51246 +
           ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
               C50979) *
              C50994 * C1240 -
          ((C16433 * C15577 + C6258 * C15576 + C5668 * C15575) * C50979 +
           (C16724 * C15577 + (C6277 + C6278) * C15576 +
            (C5676 + C5675) * C15575) *
               C51246) *
              C50994 * C1241 +
          ((C16431 * C15575 + (C6579 + C6580) * C15576 +
            (C16731 + C16732) * C15577) *
               C51246 +
           (C6256 * C15575 + C16432 * C15576 + (C16440 + C16441) * C15577) *
               C50979) *
              C50994 * C1242 -
          ((((C117 * C16717 + C51127 * C16721) * C51028 +
             (C117 * C16715 + C51127 * C16718) * C118) *
                C15577 +
            (C16441 + C16440) * C15576 + C16433 * C15575) *
               C50979 +
           (((C117 * C16719 + C51127 * C16722) * C51028 +
             (C117 * C16716 + C51127 * C16720) * C118) *
                C15577 +
            (C16732 + C16731) * C15576 + C16724 * C15575) *
               C51246) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C51305 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C51291 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51157 * C51246 +
            ((C8251 + C8252 + C8253) * C118 +
             (C8254 + C8255 + C8256) * C51028) *
                C51157 * C50979) *
               C1362) *
              C1775 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C51291 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C51305 -
           (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
              C8199 * C483 + C8194 * C492) *
                 C51028 +
             (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
              C8199 * C474 + C8194 * C482) *
                 C118) *
                C51157 * C50979 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51157 * C51246) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C51305 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C51291 +
           (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
            (C186 + C187) * C51157 * C111) *
               C1362) *
              C1775 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C51291 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C51305 -
           (((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51157 * C111 +
            (C528 + C527) * C51157 * C110 + C531 * C109 + C532 * C108) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C15575 +
             (C5675 + C5676) * C15576 + C16431 * C15577) *
                C51246 +
            ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
                C50979) *
               C51305 -
           ((C5670 * C15577 + C530 * C15576 + (C181 + C180) * C15575) * C50979 +
            (C6258 * C15577 + C5668 * C15576 + (C179 + C178) * C15575) *
                C51246) *
               C51291 +
           ((C188 * C15575 + C5359 * C15576 + C6257 * C15577) * C51246 +
            (C189 * C15575 + C5669 * C15576 + (C1059 + C1060) * C15577) *
                C50979) *
               C1362) *
              C1775 +
          (((C5667 * C15575 + C6256 * C15576 + C16432 * C15577) * C51246 +
            (C5359 * C15575 + C6257 * C15576 + (C6281 + C6282) * C15577) *
                C50979) *
               C51291 -
           ((C16433 * C15577 + C6258 * C15576 + C5668 * C15575) * C50979 +
            (C16724 * C15577 + (C6277 + C6278) * C15576 +
             (C5676 + C5675) * C15575) *
                C51246) *
               C51305 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C15577 +
             (C1060 + C1059) * C15576 + C529 * C15575) *
                C50979 +
            ((C6282 + C6281) * C15577 + C5670 * C15576 + C530 * C15575) *
                C51246) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C298 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51260 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C299 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
             (C8427 + C8428 + C8429) * C299 -
             (C8430 + C8431 + C8432) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8429 + C8428 + C8427) * C299 -
             ((C8244 + C8243 + C8242) * C51260 +
              (C8241 + C8240 + C8239) * C298) +
             (C8432 + C8431 + C8430) * C51044) *
                C51157 * C51246 +
            ((C8433 + C8434 + C8435) * C299 -
             ((C8245 + C8246 + C8247) * C51260 +
              (C8248 + C8249 + C8250) * C298) +
             (C8436 + C8437 + C8438) * C51044) *
                C51157 * C50979) *
               C50999) *
              C1775 +
          ((((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
              C8201 * C3317 + C8196 * C3320) *
                 C299 -
             ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
               C8199 * C486 + C8194 * C494) *
                  C51260 +
              (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
               C8199 * C476 + C8194 * C487) *
                  C298) +
             (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
              C8201 * C3321 + C8196 * C3326) *
                 C51044) *
                C51157 * C51246 +
            ((C9967 + C9968 + C9969) * C299 -
             ((C8614 + C8613 + C8612) * C51260 +
              (C8611 + C8610 + C8609) * C298) +
             (C9970 + C9971 + C9972) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8609 + C8610 + C8611) * C298 + (C8612 + C8613 + C8614) * C51260 -
             (C9969 + C9968 + C9967) * C299 -
             (C9972 + C9971 + C9970) * C51044) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C298 + (C8618 + C8619 + C8620) * C51260 -
             (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
              C8199 * C887 + C8194 * C899) *
                 C299 -
             (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
              C8199 * C900 + C8194 * C911) *
                 C51044) *
                C51157 * C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51157 * C108 +
            (C325 + C326 - C359 - C360) * C51157 * C109 + C371 * C110 +
            C372 * C111) *
               C1490 +
           ((C359 - (C326 + C325) + C360) * C51157 * C108 +
            (C361 - (C332 + C331) + C362) * C51157 * C109 +
            (C363 - (C338 + C337) + C364) * C51157 * C110 +
            (C365 - (C345 + C346) + C366) * C51157 * C111) *
               C50999) *
              C1775 +
          ((((C117 * C883 + C51127 * C891) * C299 -
             ((C117 * C486 + C51127 * C494) * C51260 +
              (C117 * C476 + C51127 * C487) * C298) +
             (C117 * C892 + C51127 * C907) * C51044) *
                C51157 * C108 +
            (C1908 - (C1909 + C1910) + C1911) * C51157 * C109 +
            (C1912 - (C1913 + C1914) + C1915) * C51157 * C110 +
            (C1916 - (C1917 + C1918) + C1919) * C51157 * C111) *
               C1490 +
           ((C1910 + C1909 - C1908 - C1911) * C51157 * C108 +
            (C1914 + C1913 - C1912 - C1915) * C51157 * C109 +
            (C1918 + C1917 - C1916 - C1919) * C51157 * C110 +
            (C519 * C298 + C520 * C51260 -
             (C117 * C1643 + C51127 * C1644) * C299 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51157 * C111) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C298 +
              (C117 * C127 + C51127 * C140) * C51260 -
              (C117 * C300 + C51127 * C306) * C299 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C15575 +
             (C6429 + C6430 - C6431 - C6432) * C15576 + C16612 * C15577) *
                C51246 +
            ((C325 + C326 - C359 - C360) * C15575 + C7452 * C15576 +
             C16613 * C15577) *
                C50979) *
               C1490 +
           (((C359 - (C326 + C325) + C360) * C15575 + C7453 * C15576 +
             C17577 * C15577) *
                C51246 +
            ((C361 - (C332 + C331) + C362) * C15575 + C7454 * C15576 +
             (C6461 - (C6447 + C6448) + C6462) * C15577) *
                C50979) *
               C50999) *
              C1775 +
          ((((C6431 - (C6430 + C6429) + C6432) * C15575 +
             (C6457 - (C6435 + C6436) + C6458) * C15576 +
             (C16614 - (C16596 + C16597) + C16615) * C15577) *
                C51246 +
            (C7453 * C15575 + C17577 * C15576 +
             (C16616 - (C16602 + C16603) + C16617) * C15577) *
                C50979) *
               C1490 +
           ((C7452 * C15575 + C16613 * C15576 +
             (C16603 + C16602 - C16616 - C16617) * C15577) *
                C51246 +
            (C5514 * C15575 + (C6448 + C6447 - C6461 - C6462) * C15576 +
             (C6275 * C298 + C6276 * C51260 -
              (C117 * C3755 + C51127 * C3759) * C299 -
              (C117 * C3758 + C51127 * C3764) * C51044) *
                 C15577) *
                C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C1490 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C50999) *
              C51307 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C50999 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C1490) *
              C51297 +
          ((((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
              C8201 * C3645 + C8196 * C3648) *
                 C118 +
             (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
              C8201 * C3649 + C8196 * C3654) *
                 C51028) *
                C51157 * C51246 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51157 * C50979) *
               C1490 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51157 * C50979 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51157 * C51246) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C1490 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C50999) *
              C51307 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C50999 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C1490) *
              C51297 +
          ((((C117 * C1016 + C51127 * C1021) * C118 +
             (C117 * C1022 + C51127 * C1031) * C51028) *
                C51157 * C108 +
            (C1055 + C1056) * C51157 * C109 + (C1057 + C1058) * C51157 * C110 +
            (C1059 + C1060) * C51157 * C111) *
               C1490 -
           (((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C51157 * C111 +
            (C1060 + C1059) * C51157 * C110 + (C1058 + C1057) * C51157 * C109 +
            (C1056 + C1055) * C51157 * C108) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C15575 +
             (C5675 + C5676) * C15576 + C16431 * C15577) *
                C51246 +
            ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
                C50979) *
               C1490 -
           ((C5670 * C15577 + C530 * C15576 + (C181 + C180) * C15575) * C50979 +
            (C6258 * C15577 + C5668 * C15576 + (C179 + C178) * C15575) *
                C51246) *
               C50999) *
              C51307 +
          (((C5667 * C15575 + C6256 * C15576 + C16432 * C15577) * C51246 +
            (C5359 * C15575 + C6257 * C15576 + (C6281 + C6282) * C15577) *
                C50979) *
               C50999 -
           ((C16433 * C15577 + C6258 * C15576 + C5668 * C15575) * C50979 +
            (C16724 * C15577 + (C6277 + C6278) * C15576 +
             (C5676 + C5675) * C15575) *
                C51246) *
               C1490) *
              C51297 +
          (((C16431 * C15575 + (C6579 + C6580) * C15576 +
             (C16731 + C16732) * C15577) *
                C51246 +
            (C6256 * C15575 + C16432 * C15576 + (C16440 + C16441) * C15577) *
                C50979) *
               C1490 -
           ((((C117 * C6563 + C51127 * C6569) * C51028 +
              (C117 * C6560 + C51127 * C6564) * C118) *
                 C15577 +
             (C6282 + C6281) * C15576 + C5670 * C15575) *
                C50979 +
            ((C16441 + C16440) * C15577 + C16433 * C15576 + C6258 * C15575) *
                C51246) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C51157 * C108 +
           (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
           (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
           (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
              C51253 +
          ((C661 - (C660 + C659) + C662 - C689 - C690) * C51157 * C108 +
           (C669 - (C668 + C667) + C670 - C691 - C692) * C51157 * C109 +
           (C677 - (C676 + C675) + C678 - C693 - C694) * C51157 * C110 +
           (C357 * C636 - (C174 * C630 + C175 * C635) + C358 * C631 -
            (C117 * C642 + C51127 * C651) * C637 -
            (C117 * C652 + C51127 * C657) * C632) *
               C51157 * C111) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C51157 * C108 +
           (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
              C112 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
           (C179 + C178) * C51157 * C108) *
              C113 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
           (C186 + C187) * C51157 * C111) *
              C114 -
          (((C117 * C138 + C51127 * C146) * C51028 +
            (C117 * C125 + C51127 * C139) * C118) *
               C51157 * C111 +
           (C187 + C186) * C51157 * C110 + C194 * C109 + C195 * C108) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C118 + (C8242 + C8243 + C8244) * C51028) *
               C51157 * C50979) *
              C112 -
          (((C8245 + C8246 + C8247) * C51028 + (C8248 + C8249 + C8250) * C118) *
               C51157 * C50979 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51157 * C51246) *
              C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C118 + (C8254 + C8255 + C8256) * C51028) *
               C51157 * C50979) *
              C114 -
          (((C8201 * C652 + C8196 * C657 + C8200 * C315 + C8195 * C322 +
             C8199 * C134 + C8194 * C144) *
                C51028 +
            (C8201 * C642 + C8196 * C651 + C8200 * C304 + C8195 * C314 +
             C8199 * C123 + C8194 * C135) *
                C118) *
               C51157 * C50979 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51157 * C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C636 -
            ((C8245 + C8246 + C8247) * C630 + (C8248 + C8249 + C8250) * C635) +
            (C8436 + C8437 + C8438) * C631 -
            (C8201 * C3161 + C8196 * C3166 + C8200 * C771 + C8195 * C777 +
             C8199 * C640 + C8194 * C647) *
                C637 -
            (C8201 * C3167 + C8196 * C3170 + C8200 * C778 + C8195 * C783 +
             C8199 * C648 + C8194 * C655) *
                C632) *
               C51157 * C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C15575 +
            (C5675 + C5676) * C15576 + (C6278 + C6277) * C15577) *
               C51246 +
           ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
               C50979) *
              C112 -
          ((C5670 * C15577 + C530 * C15576 + (C181 + C180) * C15575) * C50979 +
           (C6258 * C15577 + C5668 * C15576 + (C179 + C178) * C15575) *
               C51246) *
              C113 +
          ((C188 * C15575 + C5359 * C15576 + C6257 * C15577) * C51246 +
           (C189 * C15575 + C5669 * C15576 + (C1059 + C1060) * C15577) *
               C50979) *
              C114 -
          ((((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C15577 +
            (C528 + C527) * C15576 + C190 * C15575) *
               C50979 +
           ((C1060 + C1059) * C15577 + C529 * C15576 + C191 * C15575) *
               C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C15575 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C15576 +
            (C6272 * C635 + C6271 * C630 - C6451 * C636 - C6452 * C631 +
             (C117 * C3645 + C51127 * C3648) * C637 +
             (C117 * C3649 + C51127 * C3654) * C632) *
                C15577) *
               C51246 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C15575 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C15576 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C15577) *
               C50979) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C15575 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C15576 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C15577) *
               C51246 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C15575 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C15576 +
            (C6455 * C636 - (C1052 * C630 + C1051 * C635) + C6456 * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C15577) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51127 * C126) * C765 +
           (C117 * C127 + C51127 * C140) * C760 -
           (C117 * C300 + C51127 * C306) * C766 -
           (C117 * C307 + C51127 * C318) * C761 +
           (C117 * C638 + C51127 * C643) * C767 +
           (C117 * C644 + C51127 * C653) * C762 -
           (C117 * C769 + C51127 * C773) * C768 -
           (C117 * C774 + C51127 * C781) * C763) *
              C51157 * C108 +
          (C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 + C683 * C767 +
           C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
           (C117 * C776 + C51127 * C782) * C763) *
              C51157 * C109 +
          (C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 + C685 * C767 +
           C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
           (C117 * C778 + C51127 * C783) * C763) *
              C51157 * C110 +
          (C172 * C765 + C173 * C760 - C355 * C766 - C356 * C761 + C687 * C767 +
           C688 * C762 - (C117 * C772 + C51127 * C779) * C768 -
           (C117 * C780 + C51127 * C784) * C763) *
              C51157 * C111) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C298 +
            (C117 * C127 + C51127 * C140) * C51260 -
            (C117 * C300 + C51127 * C306) * C299 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C325 + C326 - C359 - C360) * C51157 * C109 + C371 * C110 +
           C372 * C111) *
              C295 +
          ((C359 - (C326 + C325) + C360) * C51157 * C108 +
           (C361 - (C332 + C331) + C362) * C51157 * C109 +
           (C363 - (C338 + C337) + C364) * C51157 * C110 +
           (C365 - (C345 + C346) + C366) * C51157 * C111) *
              C296 +
          (C371 * C108 + C372 * C109 +
           (C346 + C345 - C365 - C366) * C51157 * C110 +
           (C176 * C298 + C177 * C51260 - (C117 * C305 + C51127 * C316) * C299 -
            (C117 * C317 + C51127 * C323) * C51044) *
               C51157 * C111) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
            (C8427 + C8428 + C8429) * C299 - (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C299 -
            ((C8245 + C8246 + C8247) * C51260 +
             (C8248 + C8249 + C8250) * C298) +
            (C8436 + C8437 + C8438) * C51044) *
               C51157 * C50979) *
              C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C298 + (C8254 + C8255 + C8256) * C51260 -
            (C8201 * C772 + C8196 * C779 + C8200 * C641 + C8195 * C649 +
             C8199 * C303 + C8194 * C312) *
                C299 -
            (C8201 * C780 + C8196 * C784 + C8200 * C650 + C8195 * C656 +
             C8199 * C313 + C8194 * C321) *
                C51044) *
               C51157 * C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51157 * C51246 +
          ((C8239 + C8240 + C8241) * C765 + (C8242 + C8243 + C8244) * C760 -
           (C8427 + C8428 + C8429) * C766 - (C8430 + C8431 + C8432) * C761 +
           (C8779 + C8780 + C8781) * C767 + (C8782 + C8783 + C8784) * C762 -
           (C8201 * C8883 + C8196 * C8886 + C8200 * C3160 + C8195 * C3164 +
            C8199 * C770 + C8194 * C775) *
               C768 -
           (C8201 * C8887 + C8196 * C8889 + C8200 * C3165 + C8195 * C3169 +
            C8199 * C776 + C8194 * C782) *
               C763) *
              C51157 * C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C15575 +
            (C6429 + C6430 - C6431 - C6432) * C15576 +
            (C6436 + C6435 - C6457 - C6458) * C15577) *
               C51246 +
           ((C325 + C326 - C359 - C360) * C15575 + C7452 * C15576 +
            (C6442 + C6441 - C6459 - C6460) * C15577) *
               C50979) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C15575 + C7453 * C15576 +
            (C6459 - (C6441 + C6442) + C6460) * C15577) *
               C51246 +
           ((C361 - (C332 + C331) + C362) * C15575 + C7454 * C15576 +
            (C6461 - (C6447 + C6448) + C6462) * C15577) *
               C50979) *
              C296 +
          ((C369 * C15575 + C5514 * C15576 +
            (C6448 + C6447 - C6461 - C6462) * C15577) *
               C51246 +
           (C370 * C15575 + (C1918 + C1917 - C1916 - C1919) * C15576 +
            (C1053 * C298 + C1054 * C51260 -
             (C117 * C1161 + C51127 * C1168) * C299 -
             (C117 * C1169 + C51127 * C1173) * C51044) *
                C15577) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C15575 +
           (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
            C6104 * C767 + C6105 * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C15576 +
           (C6272 * C765 + C6271 * C760 - C6451 * C766 - C6452 * C761 +
            (C117 * C3645 + C51127 * C3648) * C767 +
            (C117 * C3649 + C51127 * C3654) * C762 -
            (C117 * C9354 + C51127 * C9356) * C768 -
            (C117 * C9357 + C51127 * C9360) * C763) *
               C15577) *
              C51246 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C15575 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C15576 +
           (C1049 * C765 + C1050 * C760 - C6453 * C766 - C6454 * C761 +
            C16025 * C767 + C16026 * C762 -
            (C117 * C9355 + C51127 * C9358) * C768 -
            (C117 * C9359 + C51127 * C9361) * C763) *
               C15577) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C51157 * C108 +
           (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
           (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
           (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
              C50994 * C51262 +
          (((C117 * C883 + C51127 * C891) * C636 -
            ((C117 * C486 + C51127 * C494) * C630 +
             (C117 * C476 + C51127 * C487) * C635) +
            (C117 * C892 + C51127 * C907) * C631 -
            (C117 * C884 + C51127 * C893) * C637 -
            (C117 * C894 + C51127 * C908) * C632) *
               C51157 * C108 +
           ((C117 * C885 + C51127 * C895) * C636 - (C514 * C630 + C513 * C635) +
            (C117 * C896 + C51127 * C909) * C631 -
            (C117 * C886 + C51127 * C897) * C637 -
            (C117 * C898 + C51127 * C910) * C632) *
               C51157 * C109 +
           ((C117 * C887 + C51127 * C899) * C636 - (C516 * C630 + C515 * C635) +
            (C117 * C900 + C51127 * C911) * C631 -
            (C117 * C888 + C51127 * C901) * C637 -
            (C117 * C902 + C51127 * C912) * C632) *
               C51157 * C110 +
           ((C117 * C889 + C51127 * C903) * C636 - (C518 * C630 + C517 * C635) +
            (C117 * C904 + C51127 * C913) * C631 -
            (C117 * C890 + C51127 * C905) * C637 -
            (C117 * C906 + C51127 * C914) * C632) *
               C51157 * C111) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C295 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C296 +
           (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
            (C186 + C187) * C51157 * C111) *
               C297) *
              C51262 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C296 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C295 -
           (((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51157 * C111 +
            (C528 + C527) * C51157 * C110 + C531 * C109 + C532 * C108) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C295 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51157 * C51246 +
            ((C8251 + C8252 + C8253) * C118 +
             (C8254 + C8255 + C8256) * C51028) *
                C51157 * C50979) *
               C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C296 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C295 -
           (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
              C8199 * C483 + C8194 * C492) *
                 C51028 +
             (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
              C8199 * C474 + C8194 * C482) *
                 C118) *
                C51157 * C50979 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51157 * C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C50994 * C51262 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C636 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C630 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C635) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C631 -
            (C8201 * C9036 + C8196 * C9038 + C8200 * C3317 + C8195 * C3320 +
             C8199 * C884 + C8194 * C893) *
                C637 -
            (C8201 * C9039 + C8196 * C9042 + C8200 * C3321 + C8195 * C3326 +
             C8199 * C894 + C8194 * C908) *
                C632) *
               C51157 * C51246 +
           ((C8199 * C885 + C8194 * C895 + C8200 * C886 + C8195 * C897 +
             C8201 * C3318 + C8196 * C3322) *
                C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C8199 * C896 + C8194 * C909 + C8200 * C898 + C8195 * C910 +
             C8201 * C3323 + C8196 * C3327) *
                C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51157 * C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C15575 +
             (C5675 + C5676) * C15576 + (C6278 + C6277) * C15577) *
                C51246 +
            ((C178 + C179) * C15575 + C5667 * C15576 + C6256 * C15577) *
                C50979) *
               C295 -
           ((C5670 * C15577 + C530 * C15576 + (C181 + C180) * C15575) * C50979 +
            (C6258 * C15577 + C5668 * C15576 + (C179 + C178) * C15575) *
                C51246) *
               C296 +
           ((C188 * C15575 + C5359 * C15576 + C6257 * C15577) * C51246 +
            (C189 * C15575 + C5669 * C15576 + (C1059 + C1060) * C15577) *
                C50979) *
               C297) *
              C51262 +
          (((C5667 * C15575 + C6256 * C15576 + (C6279 + C6280) * C15577) *
                C51246 +
            (C5359 * C15575 + C6257 * C15576 + (C6281 + C6282) * C15577) *
                C50979) *
               C296 -
           (((C6280 + C6279) * C15577 + C6258 * C15576 + C5668 * C15575) *
                C50979 +
            ((C6580 + C6579) * C15577 + (C6277 + C6278) * C15576 +
             (C5676 + C5675) * C15575) *
                C51246) *
               C295 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C15577 +
             (C1060 + C1059) * C15576 + C529 * C15575) *
                C50979 +
            ((C6282 + C6281) * C15577 + C5670 * C15576 + C530 * C15575) *
                C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C15575 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C15576 +
            (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C15577) *
               C51246 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C15575 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C15576 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C15577) *
               C50979) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C15575 +
            (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C15576 +
            ((C117 * C3757 + C51127 * C3763) * C636 -
             (C6578 * C630 + C6577 * C635) +
             (C117 * C3762 + C51127 * C3766) * C631 -
             (C117 * C9461 + C51127 * C9465) * C637 -
             (C117 * C9464 + C51127 * C9467) * C632) *
                C15577) *
               C51246 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C15575 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C15576 +
            ((C117 * C3756 + C51127 * C3761) * C636 -
             (C6274 * C630 + C6273 * C635) +
             (C117 * C3760 + C51127 * C3765) * C631 -
             (C117 * C9460 + C51127 * C9463) * C637 -
             (C117 * C9462 + C51127 * C9466) * C632) *
                C15577) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1363 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C1358 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1364 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C51305 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C1364 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C1358 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C1363) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51044) *
              C51157 * C50974 * C51291 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C1363 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C1358 -
           (C11018 * C3161 + C11013 * C3166 + C11017 * C771 + C11012 * C777 +
            C11016 * C640 + C11011 * C647 + C11015 * C302 + C11010 * C310) *
               C1364 -
           (C11018 * C3167 + C11013 * C3170 + C11017 * C778 + C11012 * C783 +
            C11016 * C648 + C11011 * C655 + C11015 * C311 + C11010 * C320) *
               C51044) *
              C51157 * C50974 * C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1363 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C1358 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1364 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
            (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C3921 * C2448) *
              C51305 +
          (((C2685 + C2684) * C1364 -
            ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
            (C2687 + C2686) * C51044) *
               C51157 * C2446 +
           ((C2690 + C2689) * C1364 -
            ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
            (C2692 + C2691) * C51044) *
               C51157 * C2447 +
           ((C2693 + C2694) * C1364 - (C2502 * C1358 + C2503 * C1363) +
            (C2695 + C2696) * C51044) *
               C51157 * C2448) *
              C51291 +
          (C3921 * C2446 +
           ((C2495 + C2494) * C1363 + (C2493 + C2492) * C1358 -
            (C2694 + C2693) * C1364 - (C2696 + C2695) * C51044) *
               C51157 * C2447 +
           ((C2496 + C2497) * C1363 + (C2498 + C2499) * C1358 -
            (C2450 * C642 + C51143 * C651 + C2449 * C304 + C51273 * C314) *
                C1364 -
            (C2450 * C652 + C51143 * C657 + C2449 * C315 + C51273 * C322) *
                C51044) *
               C51157 * C2448) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1363 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C1358 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1364 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C15575 +
           ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
            (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
               C15576 +
           (C19221 * C1363 + C19222 * C1358 - C19403 * C1364 -
            C19404 * C51044) *
               C15577) *
              C50974 * C51305 +
          (((C2685 + C2684) * C1364 -
            ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
            (C2687 + C2686) * C51044) *
               C15575 +
           ((C4278 + C4279) * C1364 -
            ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
            (C4280 + C4281) * C51044) *
               C15576 +
           ((C2449 * C1159 + C51273 * C1164 + C2450 * C3646 + C51143 * C3650) *
                C1364 -
            (C19223 * C1358 + C19224 * C1363) +
            (C2449 * C1165 + C51273 * C1171 + C2450 * C3651 + C51143 * C3655) *
                C51044) *
               C15577) *
              C50974 * C51291 +
          (C3920 * C15575 +
           ((C2878 + C2879) * C1363 + (C2880 + C2881) * C1358 -
            (C4283 + C4282) * C1364 - (C4285 + C4284) * C51044) *
               C15576 +
           ((C3496 + C3497) * C1363 + (C3498 + C3499) * C1358 -
            (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 + C51273 * C1166) *
                C1364 -
            (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 + C51273 * C1172) *
                C51044) *
               C15577) *
              C50974 * C1362) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1492 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51306 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1493 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51294 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C1494 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C1489) *
              C51157 * C50974 * C1490 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C1493 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51306 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C1492) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51294 -
           (C11018 * C8883 + C11013 * C8886 + C11017 * C3160 + C11012 * C3164 +
            C11016 * C770 + C11011 * C775 + C11015 * C639 + C11010 * C645) *
               C1494 -
           (C11018 * C8887 + C11013 * C8889 + C11017 * C3165 + C11012 * C3169 +
            C11016 * C776 + C11011 * C782 + C11015 * C646 + C11010 * C654) *
               C1489) *
              C51157 * C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1492 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51306 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1493 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51294 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C1494 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C1489) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1492 + (C2486 + C2487) * C51306 -
            (C2684 + C2685) * C1493 - (C2686 + C2687) * C51294 +
            (C3054 + C3055) * C1494 + (C3056 + C3057) * C1489) *
               C51157 * C2447 +
           (C2500 * C1492 + C2501 * C51306 - C2697 * C1493 - C2698 * C51294 +
            (C3058 + C3059) * C1494 + (C3060 + C3061) * C1489) *
               C51157 * C2448) *
              C1490 +
          (((C2685 + C2684) * C1493 -
            ((C2487 + C2486) * C51306 + (C2485 + C2484) * C1492) +
            (C2687 + C2686) * C51294 - (C3055 + C3054) * C1494 -
            (C3057 + C3056) * C1489) *
               C51157 * C2446 +
           ((C2690 + C2689) * C1493 -
            ((C2491 + C2490) * C51306 + (C2489 + C2488) * C1492) +
            (C2692 + C2691) * C51294 - (C3059 + C3058) * C1494 -
            (C3061 + C3060) * C1489) *
               C51157 * C2447 +
           ((C2693 + C2694) * C1493 - (C2502 * C51306 + C2503 * C1492) +
            (C2695 + C2696) * C51294 -
            (C2450 * C772 + C51143 * C779 + C2449 * C641 + C51273 * C649) *
                C1494 -
            (C2450 * C780 + C51143 * C784 + C2449 * C650 + C51273 * C656) *
                C1489) *
               C51157 * C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1492 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51306 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1493 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51294 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C1494 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C1489) *
               C15575 +
           ((C18629 + C18630) * C1492 + (C18631 + C18632) * C51306 -
            (C19059 + C19060) * C1493 - (C19061 + C19062) * C51294 +
            (C19063 + C19064) * C1494 + (C19065 + C19066) * C1489) *
               C15576 +
           (C19221 * C1492 + C19222 * C51306 - C19403 * C1493 -
            C19404 * C51294 + (C19071 + C19072) * C1494 +
            (C19073 + C19074) * C1489) *
               C15577) *
              C50974 * C1490 +
          (((C2685 + C2684) * C1493 -
            ((C2487 + C2486) * C51306 + (C2485 + C2484) * C1492) +
            (C2687 + C2686) * C51294 - (C3055 + C3054) * C1494 -
            (C3057 + C3056) * C1489) *
               C15575 +
           ((C4278 + C4279) * C1493 -
            ((C2877 + C2876) * C51306 + (C2875 + C2874) * C1492) +
            (C4280 + C4281) * C51294 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C1494 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C1489) *
               C15576 +
           ((C2449 * C1159 + C51273 * C1164 + C2450 * C3646 + C51143 * C3650) *
                C1493 -
            (C19223 * C51306 + C19224 * C1492) +
            (C2449 * C1165 + C51273 * C1171 + C2450 * C3651 + C51143 * C3655) *
                C51294 -
            (C2450 * C9355 + C51143 * C9358 + C2449 * C3646 + C51273 * C3650) *
                C1494 -
            (C2450 * C9359 + C51143 * C9361 + C2449 * C3651 + C51273 * C3655) *
                C1489) *
               C15577) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C1363 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C1358 -
            (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
             C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
                C1364 -
            (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
             C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
             C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
                C1364 -
            ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
              C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                 C1358 +
             (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
              C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                 C1363) +
            (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
             C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51262 +
          (((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
             C11017 * C3317 + C11012 * C3320 + C11018 * C9036 +
             C11013 * C9038) *
                C1364 -
            ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
              C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                 C1358 +
             (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
              C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                 C1363) +
            (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
             C11017 * C3321 + C11012 * C3326 + C11018 * C9039 +
             C11013 * C9042) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C1363 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C1358 -
            (C11018 * C9037 + C11013 * C9040 + C11017 * C3318 + C11012 * C3322 +
             C11016 * C886 + C11011 * C897 + C11015 * C885 + C11010 * C895) *
                C1364 -
            (C11018 * C9041 + C11013 * C9043 + C11017 * C3323 + C11012 * C3327 +
             C11016 * C898 + C11011 * C910 + C11015 * C896 + C11010 * C909) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C51157 * C2446 +
            ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
             (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                C51157 * C2447 +
            C3921 * C2448) *
               C1490 +
           (((C2685 + C2684) * C1364 -
             ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
             (C2687 + C2686) * C51044) *
                C51157 * C2446 +
            ((C2690 + C2689) * C1364 -
             ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
             (C2692 + C2691) * C51044) *
                C51157 * C2447 +
            ((C2693 + C2694) * C1364 - (C2502 * C1358 + C2503 * C1363) +
             (C2695 + C2696) * C51044) *
                C51157 * C2448) *
               C50999) *
              C51262 +
          ((((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                 C1364 -
             ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                  C1358 +
              (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                  C1363) +
             (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C2446 +
            ((C4278 + C4279) * C1364 -
             ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
             (C4280 + C4281) * C51044) *
                C51157 * C2447 +
            ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
             (C4284 + C4285) * C51044) *
                C51157 * C2448) *
               C1490 +
           (((C2874 + C2875) * C1363 + (C2876 + C2877) * C1358 -
             (C4279 + C4278) * C1364 - (C4281 + C4280) * C51044) *
                C51157 * C2446 +
            ((C2878 + C2879) * C1363 + (C2880 + C2881) * C1358 -
             (C4283 + C4282) * C1364 - (C4285 + C4284) * C51044) *
                C51157 * C2447 +
            ((C2882 + C2883) * C1363 + (C2884 + C2885) * C1358 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C1364 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51157 * C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C15575 +
            ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
             (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
                C15576 +
            (C19221 * C1363 + C19222 * C1358 - C19403 * C1364 -
             C19404 * C51044) *
                C15577) *
               C50974 * C1490 +
           (((C2685 + C2684) * C1364 -
             ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
             (C2687 + C2686) * C51044) *
                C15575 +
            ((C4278 + C4279) * C1364 -
             ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
             (C4280 + C4281) * C51044) *
                C15576 +
            ((C20035 + C20036) * C1364 - (C19223 * C1358 + C19224 * C1363) +
             (C20037 + C20038) * C51044) *
                C15577) *
               C50974 * C50999) *
              C51262 +
          ((((C19060 + C19059) * C1364 -
             ((C18632 + C18631) * C1358 + (C18630 + C18629) * C1363) +
             (C19062 + C19061) * C51044) *
                C15575 +
            ((C19068 + C19067) * C1364 -
             ((C18636 + C18635) * C1358 + (C18634 + C18633) * C1363) +
             (C19070 + C19069) * C51044) *
                C15576 +
            ((C19416 + C19417) * C1364 - (C19524 * C1358 + C19525 * C1363) +
             (C19418 + C19419) * C51044) *
                C15577) *
               C50974 * C1490 +
           (((C2874 + C2875) * C1363 + (C2876 + C2877) * C1358 -
             (C4279 + C4278) * C1364 - (C4281 + C4280) * C51044) *
                C15575 +
            ((C3492 + C3493) * C1363 + (C3494 + C3495) * C1358 -
             (C20036 + C20035) * C1364 - (C20038 + C20037) * C51044) *
                C15576 +
            ((C19245 + C19246) * C1363 + (C19247 + C19248) * C1358 -
             (C2450 * C9460 + C51143 * C9463 + C2449 * C3756 + C51273 * C3761) *
                 C1364 -
             (C2450 * C9462 + C51143 * C9466 + C2449 * C3760 + C51273 * C3765) *
                 C51044) *
                C15577) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C1363 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C1358 -
            (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
             C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
                C1364 -
            (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
             C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
                C51044) *
               C51157 * C50974 * C51253 +
           ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
             C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
                C1364 -
            ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
              C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                 C1358 +
             (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
              C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                 C1363) +
            (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
             C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
                C51044) *
               C51157 * C50974 * C50999) *
              C1775 +
          (((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
             C11017 * C3317 + C11012 * C3320 + C11018 * C9036 +
             C11013 * C9038) *
                C1364 -
            ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
              C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                 C1358 +
             (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
              C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                 C1363) +
            (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
             C11017 * C3321 + C11012 * C3326 + C11018 * C9039 +
             C11013 * C9042) *
                C51044) *
               C51157 * C50974 * C51253 +
           ((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C1363 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C1358 -
            (C11018 * C9037 + C11013 * C9040 + C11017 * C3318 + C11012 * C3322 +
             C11016 * C886 + C11011 * C897 + C11015 * C885 + C11010 * C895) *
                C1364 -
            (C11018 * C9041 + C11013 * C9043 + C11017 * C3323 + C11012 * C3327 +
             C11016 * C898 + C11011 * C910 + C11015 * C896 + C11010 * C909) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C51157 * C2446 +
            ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
             (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                C51157 * C2447 +
            C3921 * C2448) *
               C51253 +
           (((C2685 + C2684) * C1364 -
             ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
             (C2687 + C2686) * C51044) *
                C51157 * C2446 +
            ((C2690 + C2689) * C1364 -
             ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
             (C2692 + C2691) * C51044) *
                C51157 * C2447 +
            ((C2693 + C2694) * C1364 - (C2502 * C1358 + C2503 * C1363) +
             (C2695 + C2696) * C51044) *
                C51157 * C2448) *
               C50999) *
              C1775 +
          ((((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                 C1364 -
             ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                  C1358 +
              (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                  C1363) +
             (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C2446 +
            ((C4278 + C4279) * C1364 -
             ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
             (C4280 + C4281) * C51044) *
                C51157 * C2447 +
            ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
             (C4284 + C4285) * C51044) *
                C51157 * C2448) *
               C51253 +
           (((C2874 + C2875) * C1363 + (C2876 + C2877) * C1358 -
             (C4279 + C4278) * C1364 - (C4281 + C4280) * C51044) *
                C51157 * C2446 +
            ((C2878 + C2879) * C1363 + (C2880 + C2881) * C1358 -
             (C4283 + C4282) * C1364 - (C4285 + C4284) * C51044) *
                C51157 * C2447 +
            ((C2882 + C2883) * C1363 + (C2884 + C2885) * C1358 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C1364 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51157 * C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C15575 +
            ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
             (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
                C15576 +
            (C19221 * C1363 + C19222 * C1358 - C19403 * C1364 -
             C19404 * C51044) *
                C15577) *
               C50974 * C51253 +
           (((C2685 + C2684) * C1364 -
             ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
             (C2687 + C2686) * C51044) *
                C15575 +
            ((C4278 + C4279) * C1364 -
             ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
             (C4280 + C4281) * C51044) *
                C15576 +
            ((C20035 + C20036) * C1364 - (C19223 * C1358 + C19224 * C1363) +
             (C20037 + C20038) * C51044) *
                C15577) *
               C50974 * C50999) *
              C1775 +
          ((((C19060 + C19059) * C1364 -
             ((C18632 + C18631) * C1358 + (C18630 + C18629) * C1363) +
             (C19062 + C19061) * C51044) *
                C15575 +
            ((C19068 + C19067) * C1364 -
             ((C18636 + C18635) * C1358 + (C18634 + C18633) * C1363) +
             (C19070 + C19069) * C51044) *
                C15576 +
            ((C19416 + C19417) * C1364 - (C19524 * C1358 + C19525 * C1363) +
             (C19418 + C19419) * C51044) *
                C15577) *
               C50974 * C51253 +
           (((C2874 + C2875) * C1363 + (C2876 + C2877) * C1358 -
             (C4279 + C4278) * C1364 - (C4281 + C4280) * C51044) *
                C15575 +
            ((C3492 + C3493) * C1363 + (C3494 + C3495) * C1358 -
             (C20036 + C20035) * C1364 - (C20038 + C20037) * C51044) *
                C15576 +
            ((C19245 + C19246) * C1363 + (C19247 + C19248) * C1358 -
             (C2450 * C9460 + C51143 * C9463 + C2449 * C3756 + C51273 * C3761) *
                 C1364 -
             (C2450 * C9462 + C51143 * C9466 + C2449 * C3760 + C51273 * C3765) *
                 C51044) *
                C15577) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1492 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51306 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1493 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51294 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C1494 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C1489) *
              C51157 * C50974 * C50994 * C1775 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C1493 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51306 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C1492) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C51294 -
           (C11018 * C11481 + C11013 * C11482 + C11017 * C9036 +
            C11012 * C9038 + C11016 * C3317 + C11011 * C3320 + C11015 * C884 +
            C11010 * C893) *
               C1494 -
           (C11018 * C11483 + C11013 * C11484 + C11017 * C9039 +
            C11012 * C9042 + C11016 * C3321 + C11011 * C3326 + C11015 * C894 +
            C11010 * C908) *
               C1489) *
              C51157 * C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1492 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51306 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1493 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51294 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C1494 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C1489) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1492 + (C2486 + C2487) * C51306 -
            (C2684 + C2685) * C1493 - (C2686 + C2687) * C51294 +
            (C3054 + C3055) * C1494 + (C3056 + C3057) * C1489) *
               C51157 * C2447 +
           (C2500 * C1492 + C2501 * C51306 - C2697 * C1493 - C2698 * C51294 +
            (C3058 + C3059) * C1494 + (C3060 + C3061) * C1489) *
               C51157 * C2448) *
              C50994 * C1775 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C1493 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51306 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C1492) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C51294 -
            (C2450 * C3317 + C51143 * C3320 + C2449 * C884 + C51273 * C893) *
                C1494 -
            (C2450 * C3321 + C51143 * C3326 + C2449 * C894 + C51273 * C908) *
                C1489) *
               C51157 * C2446 +
           ((C4278 + C4279) * C1493 -
            ((C2877 + C2876) * C51306 + (C2875 + C2874) * C1492) +
            (C4280 + C4281) * C51294 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C1494 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C1489) *
               C51157 * C2447 +
           ((C4282 + C4283) * C1493 - (C2886 * C51306 + C2887 * C1492) +
            (C4284 + C4285) * C51294 -
            (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                C1494 -
            (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                C1489) *
               C51157 * C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1492 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51306 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1493 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51294 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C1494 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C1489) *
               C15575 +
           ((C18629 + C18630) * C1492 + (C18631 + C18632) * C51306 -
            (C19059 + C19060) * C1493 - (C19061 + C19062) * C51294 +
            (C19063 + C19064) * C1494 + (C19065 + C19066) * C1489) *
               C15576 +
           (C19221 * C1492 + C19222 * C51306 - C19403 * C1493 -
            C19404 * C51294 + (C19071 + C19072) * C1494 +
            (C19073 + C19074) * C1489) *
               C15577) *
              C50974 * C50994 * C1775 +
          (((C19060 + C19059) * C1493 -
            ((C18632 + C18631) * C51306 + (C18630 + C18629) * C1492) +
            (C19062 + C19061) * C51294 - (C19064 + C19063) * C1494 -
            (C19066 + C19065) * C1489) *
               C15575 +
           ((C19068 + C19067) * C1493 -
            ((C18636 + C18635) * C51306 + (C18634 + C18633) * C1492) +
            (C19070 + C19069) * C51294 - (C19072 + C19071) * C1494 -
            (C19074 + C19073) * C1489) *
               C15576 +
           ((C19416 + C19417) * C1493 - (C19524 * C51306 + C19525 * C1492) +
            (C19418 + C19419) * C51294 -
            (C2450 * C11751 + C51143 * C11753 + C2449 * C9461 +
             C51273 * C9465) *
                C1494 -
            (C2450 * C11752 + C51143 * C11754 + C2449 * C9464 +
             C51273 * C9467) *
                C1489) *
               C15577) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1363 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C1358 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1364 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C50994 * C51307 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C1364 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C1358 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C1363) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C51044) *
              C51157 * C50974 * C50994 * C51297 +
          ((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
            C11017 * C3645 + C11012 * C3648 + C11018 * C9354 + C11013 * C9356) *
               C1363 +
           (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
            C11017 * C3649 + C11012 * C3654 + C11018 * C9357 + C11013 * C9360) *
               C1358 -
           (C11018 * C11681 + C11013 * C11682 + C11017 * C9354 +
            C11012 * C9356 + C11016 * C3645 + C11011 * C3648 + C11015 * C1158 +
            C11010 * C1162) *
               C1364 -
           (C11018 * C11683 + C11013 * C11684 + C11017 * C9357 +
            C11012 * C9360 + C11016 * C3649 + C11011 * C3654 + C11015 * C1163 +
            C11010 * C1170) *
               C51044) *
              C51157 * C50974 * C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1363 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C1358 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1364 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
            (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C3921 * C2448) *
              C50994 * C51307 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C1364 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C1358 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C1363) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C51044) *
               C51157 * C2446 +
           ((C4278 + C4279) * C1364 -
            ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
            (C4280 + C4281) * C51044) *
               C51157 * C2447 +
           ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
            (C4284 + C4285) * C51044) *
               C51157 * C2448) *
              C50994 * C51297 +
          (((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C1363 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C1358 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C1364 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C51044) *
               C51157 * C2446 +
           ((C3492 + C3493) * C1363 + (C3494 + C3495) * C1358 -
            (C2450 * C3646 + C51143 * C3650 + C2449 * C1159 + C51273 * C1164) *
                C1364 -
            (C2450 * C3651 + C51143 * C3655 + C2449 * C1165 + C51273 * C1171) *
                C51044) *
               C51157 * C2447 +
           ((C3496 + C3497) * C1363 + (C3498 + C3499) * C1358 -
            (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 + C51273 * C1166) *
                C1364 -
            (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 + C51273 * C1172) *
                C51044) *
               C51157 * C2448) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1363 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C1358 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1364 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C15575 +
           ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
            (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
               C15576 +
           C21017 * C15577) *
              C50974 * C50994 * C51307 +
          (((C19060 + C19059) * C1364 -
            ((C18632 + C18631) * C1358 + (C18630 + C18629) * C1363) +
            (C19062 + C19061) * C51044) *
               C15575 +
           ((C19068 + C19067) * C1364 -
            ((C18636 + C18635) * C1358 + (C18634 + C18633) * C1363) +
            (C19070 + C19069) * C51044) *
               C15576 +
           ((C19416 + C19417) * C1364 - (C19524 * C1358 + C19525 * C1363) +
            (C19418 + C19419) * C51044) *
               C15577) *
              C50974 * C50994 * C51297 +
          (C21017 * C15575 +
           ((C19252 + C19251) * C1363 + (C19250 + C19249) * C1358 -
            (C19417 + C19416) * C1364 - (C19419 + C19418) * C51044) *
               C15576 +
           ((C19536 + C19537) * C1363 + (C19538 + C19539) * C1358 -
            (C2450 * C13993 + C51143 * C13997 + C2449 * C13994 +
             C51273 * C13998) *
                C1364 -
            (C2450 * C13995 + C51143 * C13999 + C2449 * C13996 +
             C51273 * C14000) *
                C51044) *
               C15577) *
              C50974 * C50994 * C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                    C118 +
                (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                    C51028) *
                   C51157 * C2446 +
               ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                   C2447 +
               C2510 * C2448) *
                  C112 -
              (C2511 * C2448 +
               ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                   C2447 +
               ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                   C2446) *
                  C113 +
              (C2510 * C2446 +
               ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
                   C2447 +
               ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
                   C2448) *
                  C114 -
              (((C2450 * C317 + C51143 * C323 + C2449 * C137 + C51273 * C145) *
                    C51028 +
                (C2450 * C305 + C51143 * C316 + C2449 * C124 + C51273 * C136) *
                    C118) *
                   C51157 * C2448 +
               ((C2499 + C2498) * C51028 + (C2497 + C2496) * C118) * C51157 *
                   C2447 +
               C2511 * C2446) *
                  C115) *
             C51058 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                    C635 +
                (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                    C630 -
                (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                    C636 -
                (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                    C631 +
                (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                    C637 +
                (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                    C632) *
                   C51157 * C2446 +
               ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
                (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
                (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
                   C51157 * C2447 +
               (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
                (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
                   C51157 * C2448) *
                  C51253 +
              (((C2685 + C2684) * C636 -
                ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
                (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
                (C3057 + C3056) * C632) *
                   C51157 * C2446 +
               ((C2690 + C2689) * C636 -
                ((C2491 + C2490) * C630 + (C2489 + C2488) * C635) +
                (C2692 + C2691) * C631 - (C3059 + C3058) * C637 -
                (C3061 + C3060) * C632) *
                   C51157 * C2447 +
               ((C2693 + C2694) * C636 - (C2502 * C630 + C2503 * C635) +
                (C2695 + C2696) * C631 -
                (C2450 * C772 + C51143 * C779 + C2449 * C641 + C51273 * C649) *
                    C637 -
                (C2450 * C780 + C51143 * C784 + C2449 * C650 + C51273 * C656) *
                    C632) *
                   C51157 * C2448) *
                  C50999) *
             C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C51253 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C50999) *
              C1013 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C50999 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C51253) *
              C1014 +
          ((((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                 C118 +
             (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                 C51028) *
                C51157 * C2446 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51157 *
                C2447 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51157 *
                C2448) *
               C51253 -
           (((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 + C51273 * C1034) *
                 C51028 +
             (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 + C51273 * C1027) *
                 C118) *
                C51157 * C2448 +
            ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C51157 *
                C2447 +
            ((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C51157 *
                C2446) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C118 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51028) *
              C51157 * C50974 * C112 -
          ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
            C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
               C51028 +
           (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
            C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
               C118) *
              C51157 * C50974 * C113 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C118 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51028) *
              C51157 * C50974 * C114 -
          ((C11018 * C780 + C11013 * C784 + C11017 * C650 + C11012 * C656 +
            C11016 * C313 + C11011 * C321 + C11015 * C133 + C11010 * C143) *
               C51028 +
           (C11018 * C772 + C11013 * C779 + C11017 * C641 + C11012 * C649 +
            C11016 * C303 + C11011 * C312 + C11015 * C122 + C11010 * C132) *
               C118) *
              C51157 * C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C51253 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C636 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C630 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C635) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C631 -
           (C11018 * C8883 + C11013 * C8886 + C11017 * C3160 + C11012 * C3164 +
            C11016 * C770 + C11011 * C775 + C11015 * C639 + C11010 * C645) *
               C637 -
           (C11018 * C8887 + C11013 * C8889 + C11017 * C3165 + C11012 * C3169 +
            C11016 * C776 + C11011 * C782 + C11015 * C646 + C11010 * C654) *
               C632) *
              C51157 * C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C51253 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C50999) *
              C1013 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C50999 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C51253) *
              C1014 +
          (((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
             C11017 * C3645 + C11012 * C3648 + C11018 * C9354 +
             C11013 * C9356) *
                C118 +
            (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
             C11017 * C3649 + C11012 * C3654 + C11018 * C9357 +
             C11013 * C9360) *
                C51028) *
               C51157 * C50974 * C51253 -
           ((C11018 * C9359 + C11013 * C9361 + C11017 * C3651 + C11012 * C3655 +
             C11016 * C1165 + C11011 * C1171 + C11015 * C1024 +
             C11010 * C1032) *
                C51028 +
            (C11018 * C9355 + C11013 * C9358 + C11017 * C3646 + C11012 * C3650 +
             C11016 * C1159 + C11011 * C1164 + C11015 * C1017 +
             C11010 * C1023) *
                C118) *
               C51157 * C50974 * C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C15575 +
           ((C2449 * C476 + C51273 * C487 + C2450 * C883 + C51143 * C891) *
                C118 +
            (C2449 * C486 + C51273 * C494 + C2450 * C892 + C51143 * C907) *
                C51028) *
               C15576 +
           ((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C118 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51028) *
               C15577) *
              C50974 * C112 -
          (((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C15577 +
           ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C15576 +
           ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C15575) *
              C50974 * C113 +
          (C2508 * C15575 +
           ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C15576 +
           ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C15577) *
              C50974 * C114 -
          (((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 + C51273 * C1034) *
                C51028 +
            (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 + C51273 * C1027) *
                C118) *
               C15577 +
           ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C15576 +
           C2509 * C15575) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C15575 +
           ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
            (C2450 * C884 + C51143 * C893 + C2449 * C883 + C51273 * C891) *
                C636 -
            (C2450 * C894 + C51143 * C908 + C2449 * C892 + C51273 * C907) *
                C631 +
            (C2449 * C884 + C51273 * C893 + C2450 * C3317 + C51143 * C3320) *
                C637 +
            (C2449 * C894 + C51273 * C908 + C2450 * C3321 + C51143 * C3326) *
                C632) *
               C15576 +
           ((C18633 + C18634) * C635 + (C18635 + C18636) * C630 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C636 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C631 +
            (C2449 * C3645 + C51273 * C3648 + C2450 * C9354 + C51143 * C9356) *
                C637 +
            (C2449 * C3649 + C51273 * C3654 + C2450 * C9357 + C51143 * C9360) *
                C632) *
               C15577) *
              C50974 * C51253 +
          (((C2685 + C2684) * C636 -
            ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
            (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
            (C3057 + C3056) * C632) *
               C15575 +
           ((C4278 + C4279) * C636 -
            ((C2877 + C2876) * C630 + (C2875 + C2874) * C635) +
            (C4280 + C4281) * C631 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C637 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C632) *
               C15576 +
           ((C2449 * C1159 + C51273 * C1164 + C2450 * C3646 + C51143 * C3650) *
                C636 -
            ((C3495 + C3494) * C630 + (C3493 + C3492) * C635) +
            (C2449 * C1165 + C51273 * C1171 + C2450 * C3651 + C51143 * C3655) *
                C631 -
            (C2450 * C9355 + C51143 * C9358 + C2449 * C3646 + C51273 * C3650) *
                C637 -
            (C2450 * C9359 + C51143 * C9361 + C2449 * C3651 + C51273 * C3655) *
                C632) *
               C15577) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C15575 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C15576 +
            C19253 * C15577) *
               C50974 * C51253 -
           (C19254 * C15577 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C15576 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C15575) *
               C50974 * C50999) *
              C1013 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C15575 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C15576 +
            ((C19245 + C19246) * C118 + (C19247 + C19248) * C51028) * C15577) *
               C50974 * C50999 -
           (((C19249 + C19250) * C51028 + (C19251 + C19252) * C118) * C15577 +
            ((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C15576 +
            ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C15575) *
               C50974 * C51253) *
              C1014 +
          ((C19253 * C15575 +
            ((C19252 + C19251) * C118 + (C19250 + C19249) * C51028) * C15576 +
            ((C2449 * C6562 + C51273 * C6568 + C2450 * C13994 +
              C51143 * C13998) *
                 C118 +
             (C2449 * C6567 + C51273 * C6571 + C2450 * C13996 +
              C51143 * C14000) *
                 C51028) *
                C15577) *
               C50974 * C51253 -
           (((C2450 * C16589 + C51143 * C16590 + C2449 * C6565 +
              C51273 * C6570) *
                 C51028 +
             (C2450 * C16587 + C51143 * C16588 + C2449 * C6561 +
              C51273 * C6566) *
                 C118) *
                C15577 +
            ((C19248 + C19247) * C51028 + (C19246 + C19245) * C118) * C15576 +
            C19254 * C15575) *
               C50974 * C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                    C298 +
                (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                    C51260 -
                (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                    C299 -
                (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                    C51044) *
                   C51157 * C2446 +
               ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
                (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
                   C51157 * C2447 +
               C2703 * C2448) *
                  C295 +
              (((C2685 + C2684) * C299 -
                ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
                (C2687 + C2686) * C51044) *
                   C51157 * C2446 +
               ((C2690 + C2689) * C299 -
                ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
                (C2692 + C2691) * C51044) *
                   C51157 * C2447 +
               ((C2693 + C2694) * C299 - (C2502 * C51260 + C2503 * C298) +
                (C2695 + C2696) * C51044) *
                   C51157 * C2448) *
                  C296 +
              (C2703 * C2446 +
               ((C2495 + C2494) * C298 + (C2493 + C2492) * C51260 -
                (C2694 + C2693) * C299 - (C2696 + C2695) * C51044) *
                   C51157 * C2447 +
               ((C2496 + C2497) * C298 + (C2498 + C2499) * C51260 -
                (C2450 * C642 + C51143 * C651 + C2449 * C304 + C51273 * C314) *
                    C299 -
                (C2450 * C652 + C51143 * C657 + C2449 * C315 + C51273 * C322) *
                    C51044) *
                   C51157 * C2448) *
                  C297) *
             C51058 +
         0.5 * std::pow(Pi, 2.5) *
             (((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                   C765 +
               (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                   C760 -
               (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                   C766 -
               (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                   C761 +
               (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                   C767 +
               (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                   C762 -
               (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
                   C768 -
               (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
                   C763) *
                  C51157 * C2446 +
              ((C2484 + C2485) * C765 + (C2486 + C2487) * C760 -
               (C2684 + C2685) * C766 - (C2686 + C2687) * C761 +
               (C3054 + C3055) * C767 + (C3056 + C3057) * C762 -
               (C2450 * C3160 + C51143 * C3164 + C2449 * C770 + C51273 * C775) *
                   C768 -
               (C2450 * C3165 + C51143 * C3169 + C2449 * C776 + C51273 * C782) *
                   C763) *
                  C51157 * C2447 +
              (C2500 * C765 + C2501 * C760 - C2697 * C766 - C2698 * C761 +
               (C3058 + C3059) * C767 + (C3060 + C3061) * C762 -
               (C2450 * C3161 + C51143 * C3166 + C2449 * C771 + C51273 * C777) *
                   C768 -
               (C2450 * C3167 + C51143 * C3170 + C2449 * C778 + C51273 * C783) *
                   C763) *
                  C51157 * C2448) *
             C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
            (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C2703 * C2448) *
              C50994 * C1013 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C299 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51260 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C298) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C51044) *
               C51157 * C2446 +
           ((C2449 * C885 + C51273 * C895 + C2450 * C886 + C51143 * C897) *
                C299 -
            ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
            (C2449 * C896 + C51273 * C909 + C2450 * C898 + C51143 * C910) *
                C51044) *
               C51157 * C2447 +
           ((C2449 * C887 + C51273 * C899 + C2450 * C888 + C51143 * C901) *
                C299 -
            (C2886 * C51260 + C2887 * C298) +
            (C2449 * C900 + C51273 * C911 + C2450 * C902 + C51143 * C912) *
                C51044) *
               C51157 * C2448) *
              C50994 * C1014 +
          (((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C298 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51260 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C299 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C51044) *
               C51157 * C2446 +
           ((C3492 + C3493) * C298 + (C3494 + C3495) * C51260 -
            (C2450 * C3646 + C51143 * C3650 + C2449 * C1159 + C51273 * C1164) *
                C299 -
            (C2450 * C3651 + C51143 * C3655 + C2449 * C1165 + C51273 * C1171) *
                C51044) *
               C51157 * C2447 +
           ((C3496 + C3497) * C298 + (C3498 + C3499) * C51260 -
            (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 + C51273 * C1166) *
                C299 -
            (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 + C51273 * C1172) *
                C51044) *
               C51157 * C2448) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C298 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51260 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C299 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C295 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C299 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51260 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C298) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51044) *
              C51157 * C50974 * C296 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C298 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51260 -
           (C11018 * C3161 + C11013 * C3166 + C11017 * C771 + C11012 * C777 +
            C11016 * C640 + C11011 * C647 + C11015 * C302 + C11010 * C310) *
               C299 -
           (C11018 * C3167 + C11013 * C3170 + C11017 * C778 + C11012 * C783 +
            C11016 * C648 + C11011 * C655 + C11015 * C311 + C11010 * C320) *
               C51044) *
              C51157 * C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
           C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
              C765 +
          (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
           C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
              C760 -
          (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
           C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
              C766 -
          (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
           C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
              C761 +
          (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
           C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
              C767 +
          (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
           C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
              C762 -
          (C11018 * C11379 + C11013 * C11380 + C11017 * C8882 + C11012 * C8884 +
           C11016 * C3159 + C11011 * C3162 + C11015 * C769 + C11010 * C773) *
              C768 -
          (C11018 * C11381 + C11013 * C11382 + C11017 * C8885 + C11012 * C8888 +
           C11016 * C3163 + C11011 * C3168 + C11015 * C774 + C11010 * C781) *
              C763) *
         C51157 * C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C298 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51260 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C299 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C50994 * C1013 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C299 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51260 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C298) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C51044) *
              C51157 * C50974 * C50994 * C1014 +
          ((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
            C11017 * C3645 + C11012 * C3648 + C11018 * C9354 + C11013 * C9356) *
               C298 +
           (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
            C11017 * C3649 + C11012 * C3654 + C11018 * C9357 + C11013 * C9360) *
               C51260 -
           (C11018 * C11681 + C11013 * C11682 + C11017 * C9354 +
            C11012 * C9356 + C11016 * C3645 + C11011 * C3648 + C11015 * C1158 +
            C11010 * C1162) *
               C299 -
           (C11018 * C11683 + C11013 * C11684 + C11017 * C9357 +
            C11012 * C9360 + C11016 * C3649 + C11011 * C3654 + C11015 * C1163 +
            C11010 * C1170) *
               C51044) *
              C51157 * C50974 * C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C15575 +
           ((C2449 * C476 + C51273 * C487 + C2450 * C883 + C51143 * C891) *
                C298 +
            (C2449 * C486 + C51273 * C494 + C2450 * C892 + C51143 * C907) *
                C51260 -
            (C2450 * C884 + C51143 * C893 + C2449 * C883 + C51273 * C891) *
                C299 -
            (C2450 * C894 + C51143 * C908 + C2449 * C892 + C51273 * C907) *
                C51044) *
               C15576 +
           ((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C298 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51260 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C299 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C51044) *
               C15577) *
              C50974 * C295 +
          (((C2685 + C2684) * C299 -
            ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
            (C2687 + C2686) * C51044) *
               C15575 +
           ((C4278 + C4279) * C299 -
            ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
            (C4280 + C4281) * C51044) *
               C15576 +
           ((C2449 * C1159 + C51273 * C1164 + C2450 * C3646 + C51143 * C3650) *
                C299 -
            ((C3495 + C3494) * C51260 + (C3493 + C3492) * C298) +
            (C2449 * C1165 + C51273 * C1171 + C2450 * C3651 + C51143 * C3655) *
                C51044) *
               C15577) *
              C50974 * C296 +
          (C2702 * C15575 +
           ((C2878 + C2879) * C298 + (C2880 + C2881) * C51260 -
            (C4283 + C4282) * C299 - (C4285 + C4284) * C51044) *
               C15576 +
           ((C3496 + C3497) * C298 + (C3498 + C3499) * C51260 -
            (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 + C51273 * C1166) *
                C299 -
            (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 + C51273 * C1172) *
                C51044) *
               C15577) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
               C765 +
           (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
               C760 -
           (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
               C766 -
           (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
               C761 +
           (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
               C767 +
           (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
               C762 -
           (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
               C768 -
           (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
               C763) *
              C15575 +
          ((C18629 + C18630) * C765 + (C18631 + C18632) * C760 -
           (C2450 * C884 + C51143 * C893 + C2449 * C883 + C51273 * C891) *
               C766 -
           (C2450 * C894 + C51143 * C908 + C2449 * C892 + C51273 * C907) *
               C761 +
           (C2449 * C884 + C51273 * C893 + C2450 * C3317 + C51143 * C3320) *
               C767 +
           (C2449 * C894 + C51273 * C908 + C2450 * C3321 + C51143 * C3326) *
               C762 -
           (C2450 * C9036 + C51143 * C9038 + C2449 * C3317 + C51273 * C3320) *
               C768 -
           (C2450 * C9039 + C51143 * C9042 + C2449 * C3321 + C51273 * C3326) *
               C763) *
              C15576 +
          ((C18633 + C18634) * C765 + (C18635 + C18636) * C760 -
           (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
               C766 -
           (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
               C761 +
           (C2449 * C3645 + C51273 * C3648 + C2450 * C9354 + C51143 * C9356) *
               C767 +
           (C2449 * C3649 + C51273 * C3654 + C2450 * C9357 + C51143 * C9360) *
               C762 -
           (C2450 * C11681 + C51143 * C11682 + C2449 * C9354 + C51273 * C9356) *
               C768 -
           (C2450 * C11683 + C51143 * C11684 + C2449 * C9357 + C51273 * C9360) *
               C763) *
              C15577) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C15575 +
           ((C18629 + C18630) * C298 + (C18631 + C18632) * C51260 -
            (C19059 + C19060) * C299 - (C19061 + C19062) * C51044) *
               C15576 +
           C19421 * C15577) *
              C50974 * C50994 * C1013 +
          (((C19060 + C19059) * C299 -
            ((C18632 + C18631) * C51260 + (C18630 + C18629) * C298) +
            (C19062 + C19061) * C51044) *
               C15575 +
           ((C19068 + C19067) * C299 -
            ((C18636 + C18635) * C51260 + (C18634 + C18633) * C298) +
            (C19070 + C19069) * C51044) *
               C15576 +
           ((C19416 + C19417) * C299 -
            ((C19249 + C19250) * C51260 + (C19251 + C19252) * C298) +
            (C19418 + C19419) * C51044) *
               C15577) *
              C50974 * C50994 * C1014 +
          (C19421 * C15575 +
           ((C19252 + C19251) * C298 + (C19250 + C19249) * C51260 -
            (C19417 + C19416) * C299 - (C19419 + C19418) * C51044) *
               C15576 +
           ((C2449 * C6562 + C51273 * C6568 + C2450 * C13994 +
             C51143 * C13998) *
                C298 +
            (C2449 * C6567 + C51273 * C6571 + C2450 * C13996 +
             C51143 * C14000) *
                C51260 -
            (C2450 * C13993 + C51143 * C13997 + C2449 * C13994 +
             C51273 * C13998) *
                C299 -
            (C2450 * C13995 + C51143 * C13999 + C2449 * C13996 +
             C51273 * C14000) *
                C51044) *
               C15577) *
              C50974 * C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                     C118 +
                 (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                     C51028) *
                    C51157 * C2446 +
                ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                    C2447 +
                C2510 * C2448) *
                   C295 -
               (C2511 * C2448 +
                ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                    C2447 +
                ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                    C2446) *
                   C296 +
               (C2510 * C2446 +
                ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
                    C2447 +
                ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
                    C2448) *
                   C297) *
                  C51262 +
              ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                    C2446 +
                ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                    C2447 +
                ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                    C2448) *
                   C296 -
               (C2891 * C2448 +
                ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                    C2447 +
                ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                     C51028 +
                 (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                     C118) *
                    C51157 * C2446) *
                   C295 -
               (((C2450 * C1645 + C51143 * C1646 + C2449 * C485 +
                  C51273 * C493) *
                     C51028 +
                 (C2450 * C1643 + C51143 * C1644 + C2449 * C475 +
                  C51273 * C484) *
                     C118) *
                    C51157 * C2448 +
                ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51157 *
                    C2447 +
                C2891 * C2446) *
                   C297) *
                  C51070) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                    C635 +
                (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                    C630 -
                (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                    C636 -
                (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                    C631 +
                (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                    C637 +
                (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                    C632) *
                   C51157 * C2446 +
               ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
                (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
                (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
                   C51157 * C2447 +
               (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
                (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
                   C51157 * C2448) *
                  C50994 * C51262 +
              (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                    C636 -
                ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                     C630 +
                 (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                     C635) +
                (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                    C631 -
                (C2450 * C3317 + C51143 * C3320 + C2449 * C884 +
                 C51273 * C893) *
                    C637 -
                (C2450 * C3321 + C51143 * C3326 + C2449 * C894 +
                 C51273 * C908) *
                    C632) *
                   C51157 * C2446 +
               ((C2449 * C885 + C51273 * C895 + C2450 * C886 + C51143 * C897) *
                    C636 -
                ((C2877 + C2876) * C630 + (C2875 + C2874) * C635) +
                (C2449 * C896 + C51273 * C909 + C2450 * C898 + C51143 * C910) *
                    C631 -
                (C2450 * C3318 + C51143 * C3322 + C2449 * C886 +
                 C51273 * C897) *
                    C637 -
                (C2450 * C3323 + C51143 * C3327 + C2449 * C898 +
                 C51273 * C910) *
                    C632) *
                   C51157 * C2447 +
               ((C2449 * C887 + C51273 * C899 + C2450 * C888 + C51143 * C901) *
                    C636 -
                (C2886 * C630 + C2887 * C635) +
                (C2449 * C900 + C51273 * C911 + C2450 * C902 + C51143 * C912) *
                    C631 -
                (C2450 * C3319 + C51143 * C3324 + C2449 * C888 +
                 C51273 * C901) *
                    C637 -
                (C2450 * C3325 + C51143 * C3328 + C2449 * C902 +
                 C51273 * C912) *
                    C632) *
                   C51157 * C2448) *
                  C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
               C2447 +
           C2510 * C2448) *
              C50994 * C1240 -
          (C2891 * C2448 +
           ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
               C2447 +
           ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                C51028 +
            (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                C118) *
               C51157 * C2446) *
              C50994 * C1241 +
          (((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C118 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51028) *
               C51157 * C2446 +
           ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51157 *
               C2447 +
           ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51157 *
               C2448) *
              C50994 * C1242 -
          (((C2450 * C3758 + C51143 * C3764 + C2449 * C1250 + C51273 * C1257) *
                C51028 +
            (C2450 * C3755 + C51143 * C3759 + C2449 * C1245 + C51273 * C1251) *
                C118) *
               C51157 * C2448 +
           ((C2450 * C3760 + C51143 * C3765 + C2449 * C1252 + C51273 * C1258) *
                C51028 +
            (C2450 * C3756 + C51143 * C3761 + C2449 * C1246 + C51273 * C1253) *
                C118) *
               C51157 * C2447 +
           ((C2450 * C3762 + C51143 * C3766 + C2449 * C1254 + C51273 * C1259) *
                C51028 +
            (C2450 * C3757 + C51143 * C3763 + C2449 * C1247 + C51273 * C1255) *
                C118) *
               C51157 * C2446) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C295 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C296 +
           ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
             C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
                C118 +
            (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
             C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
                C51028) *
               C51157 * C50974 * C297) *
              C51262 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C296 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C295 -
           ((C11018 * C3325 + C11013 * C3328 + C11017 * C902 + C11012 * C912 +
             C11016 * C900 + C11011 * C911 + C11015 * C481 + C11010 * C491) *
                C51028 +
            (C11018 * C3319 + C11013 * C3324 + C11017 * C888 + C11012 * C901 +
             C11016 * C887 + C11011 * C899 + C11015 * C473 + C11010 * C480) *
                C118) *
               C51157 * C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C50994 * C51262 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C636 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C630 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C635) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C631 -
           (C11018 * C11481 + C11013 * C11482 + C11017 * C9036 +
            C11012 * C9038 + C11016 * C3317 + C11011 * C3320 + C11015 * C884 +
            C11010 * C893) *
               C637 -
           (C11018 * C11483 + C11013 * C11484 + C11017 * C9039 +
            C11012 * C9042 + C11016 * C3321 + C11011 * C3326 + C11015 * C894 +
            C11010 * C908) *
               C632) *
              C51157 * C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C118 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51028) *
              C51157 * C50974 * C50994 * C1240 -
          ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
            C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
               C51028 +
           (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
            C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
               C118) *
              C51157 * C50974 * C50994 * C1241 +
          ((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
            C11017 * C3645 + C11012 * C3648 + C11018 * C9354 + C11013 * C9356) *
               C118 +
           (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
            C11017 * C3649 + C11012 * C3654 + C11018 * C9357 + C11013 * C9360) *
               C51028) *
              C51157 * C50974 * C50994 * C1242 -
          ((C11018 * C11752 + C11013 * C11754 + C11017 * C9464 +
            C11012 * C9467 + C11016 * C3762 + C11011 * C3766 + C11015 * C1254 +
            C11010 * C1259) *
               C51028 +
           (C11018 * C11751 + C11013 * C11753 + C11017 * C9461 +
            C11012 * C9465 + C11016 * C3757 + C11011 * C3763 + C11015 * C1247 +
            C11010 * C1255) *
               C118) *
              C51157 * C50974 * C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C15575 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C15576 +
            ((C18633 + C18634) * C118 + (C18635 + C18636) * C51028) * C15577) *
               C50974 * C295 -
           (((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C15577 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C15576 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C15575) *
               C50974 * C296 +
           (C2508 * C15575 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C15576 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C15577) *
               C50974 * C297) *
              C51262 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C15575 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C15576 +
            ((C2449 * C1246 + C51273 * C1253 + C2450 * C3756 + C51143 * C3761) *
                 C118 +
             (C2449 * C1252 + C51273 * C1258 + C2450 * C3760 + C51143 * C3765) *
                 C51028) *
                C15577) *
               C50974 * C296 -
           (((C2450 * C3762 + C51143 * C3766 + C2449 * C1254 + C51273 * C1259) *
                 C51028 +
             (C2450 * C3757 + C51143 * C3763 + C2449 * C1247 + C51273 * C1255) *
                 C118) *
                C15577 +
            ((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C15576 +
            ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C15575) *
               C50974 * C295 -
           (((C2450 * C3758 + C51143 * C3764 + C2449 * C1250 + C51273 * C1257) *
                 C51028 +
             (C2450 * C3755 + C51143 * C3759 + C2449 * C1245 + C51273 * C1251) *
                 C118) *
                C15577 +
            ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C15576 +
            C2890 * C15575) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C15575 +
           ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
            (C19059 + C19060) * C636 - (C19061 + C19062) * C631 +
            (C19063 + C19064) * C637 + (C19065 + C19066) * C632) *
               C15576 +
           ((C18633 + C18634) * C635 + (C18635 + C18636) * C630 -
            (C19067 + C19068) * C636 - (C19069 + C19070) * C631 +
            (C19071 + C19072) * C637 + (C19073 + C19074) * C632) *
               C15577) *
              C50974 * C50994 * C51262 +
          (((C19060 + C19059) * C636 -
            ((C18632 + C18631) * C630 + (C18630 + C18629) * C635) +
            (C19062 + C19061) * C631 - (C19064 + C19063) * C637 -
            (C19066 + C19065) * C632) *
               C15575 +
           ((C19068 + C19067) * C636 -
            ((C18636 + C18635) * C630 + (C18634 + C18633) * C635) +
            (C19070 + C19069) * C631 - (C19072 + C19071) * C637 -
            (C19074 + C19073) * C632) *
               C15576 +
           ((C2449 * C3757 + C51273 * C3763 + C2450 * C9461 + C51143 * C9465) *
                C636 -
            ((C2450 * C3762 + C51143 * C3766 + C2449 * C1254 + C51273 * C1259) *
                 C630 +
             (C2450 * C3757 + C51143 * C3763 + C2449 * C1247 + C51273 * C1255) *
                 C635) +
            (C2449 * C3762 + C51273 * C3766 + C2450 * C9464 + C51143 * C9467) *
                C631 -
            (C2450 * C11751 + C51143 * C11753 + C2449 * C9461 +
             C51273 * C9465) *
                C637 -
            (C2450 * C11752 + C51143 * C11754 + C2449 * C9464 +
             C51273 * C9467) *
                C632) *
               C15577) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C15575 +
           ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C15576 +
           C19253 * C15577) *
              C50974 * C50994 * C1240 -
          (C19540 * C15577 +
           ((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C15576 +
           ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C15575) *
              C50974 * C50994 * C1241 +
          (C19253 * C15575 +
           ((C19252 + C19251) * C118 + (C19250 + C19249) * C51028) * C15576 +
           ((C19536 + C19537) * C118 + (C19538 + C19539) * C51028) * C15577) *
              C50974 * C50994 * C1242 -
          (((C2450 * C19520 + C51143 * C19522 + C2449 * C16719 +
             C51273 * C16722) *
                C51028 +
            (C2450 * C19519 + C51143 * C19521 + C2449 * C16716 +
             C51273 * C16720) *
                C118) *
               C15577 +
           ((C19539 + C19538) * C51028 + (C19537 + C19536) * C118) * C15576 +
           C19540 * C15575) *
              C50974 * C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C51305 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C51291 +
           ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
             C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
                C118 +
            (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
             C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
                C51028) *
               C51157 * C50974 * C1362) *
              C1775 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C51291 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C51305 -
           ((C11018 * C3325 + C11013 * C3328 + C11017 * C902 + C11012 * C912 +
             C11016 * C900 + C11011 * C911 + C11015 * C481 + C11010 * C491) *
                C51028 +
            (C11018 * C3319 + C11013 * C3324 + C11017 * C888 + C11012 * C901 +
             C11016 * C887 + C11011 * C899 + C11015 * C473 + C11010 * C480) *
                C118) *
               C51157 * C50974 * C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C51305 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C51291 +
           (C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
                C2448) *
               C1362) *
              C1775 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C51291 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C51305 -
           (((C2450 * C1645 + C51143 * C1646 + C2449 * C485 + C51273 * C493) *
                 C51028 +
             (C2450 * C1643 + C51143 * C1644 + C2449 * C475 + C51273 * C484) *
                 C118) *
                C51157 * C2448 +
            ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51157 *
                C2447 +
            C2891 * C2446) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C15575 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C15576 +
            C19253 * C15577) *
               C50974 * C51305 -
           (C19254 * C15577 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C15576 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C15575) *
               C50974 * C51291 +
           (C2508 * C15575 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C15576 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C15577) *
               C50974 * C1362) *
              C1775 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C15575 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C15576 +
            ((C19245 + C19246) * C118 + (C19247 + C19248) * C51028) * C15577) *
               C50974 * C51291 -
           (C19540 * C15577 +
            ((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C15576 +
            ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C15575) *
               C50974 * C51305 -
           (((C2450 * C3758 + C51143 * C3764 + C2449 * C1250 + C51273 * C1257) *
                 C51028 +
             (C2450 * C3755 + C51143 * C3759 + C2449 * C1245 + C51273 * C1251) *
                 C118) *
                C15577 +
            ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C15576 +
            C2890 * C15575) *
               C50974 * C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C298 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51260 -
            (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
             C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
                C299 -
            (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
             C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
             C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
                C299 -
            ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
              C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                 C51260 +
             (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
              C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                 C298) +
            (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
             C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
                C51044) *
               C51157 * C50974 * C50999) *
              C1775 +
          (((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
             C11017 * C3317 + C11012 * C3320 + C11018 * C9036 +
             C11013 * C9038) *
                C299 -
            ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
              C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                 C51260 +
             (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
              C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                 C298) +
            (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
             C11017 * C3321 + C11012 * C3326 + C11018 * C9039 +
             C11013 * C9042) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C298 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51260 -
            (C11018 * C9037 + C11013 * C9040 + C11017 * C3318 + C11012 * C3322 +
             C11016 * C886 + C11011 * C897 + C11015 * C885 + C11010 * C895) *
                C299 -
            (C11018 * C9041 + C11013 * C9043 + C11017 * C3323 + C11012 * C3327 +
             C11016 * C898 + C11011 * C910 + C11015 * C896 + C11010 * C909) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C298 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51260 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C299 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C51157 * C2446 +
            ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
             (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
                C51157 * C2447 +
            C2703 * C2448) *
               C1490 +
           (((C2685 + C2684) * C299 -
             ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
             (C2687 + C2686) * C51044) *
                C51157 * C2446 +
            ((C2690 + C2689) * C299 -
             ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
             (C2692 + C2691) * C51044) *
                C51157 * C2447 +
            ((C2693 + C2694) * C299 - (C2502 * C51260 + C2503 * C298) +
             (C2695 + C2696) * C51044) *
                C51157 * C2448) *
               C50999) *
              C1775 +
          ((((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                 C299 -
             ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                  C51260 +
              (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                  C298) +
             (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C2446 +
            ((C4278 + C4279) * C299 -
             ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
             (C4280 + C4281) * C51044) *
                C51157 * C2447 +
            ((C4282 + C4283) * C299 - (C2886 * C51260 + C2887 * C298) +
             (C4284 + C4285) * C51044) *
                C51157 * C2448) *
               C1490 +
           (((C2874 + C2875) * C298 + (C2876 + C2877) * C51260 -
             (C4279 + C4278) * C299 - (C4281 + C4280) * C51044) *
                C51157 * C2446 +
            ((C2878 + C2879) * C298 + (C2880 + C2881) * C51260 -
             (C4283 + C4282) * C299 - (C4285 + C4284) * C51044) *
                C51157 * C2447 +
            ((C2882 + C2883) * C298 + (C2884 + C2885) * C51260 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C299 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51157 * C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C298 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51260 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C299 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C15575 +
            ((C18629 + C18630) * C298 + (C18631 + C18632) * C51260 -
             (C19059 + C19060) * C299 - (C19061 + C19062) * C51044) *
                C15576 +
            C19421 * C15577) *
               C50974 * C1490 +
           (((C2685 + C2684) * C299 -
             ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
             (C2687 + C2686) * C51044) *
                C15575 +
            ((C4278 + C4279) * C299 -
             ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
             (C4280 + C4281) * C51044) *
                C15576 +
            ((C20035 + C20036) * C299 - (C19223 * C51260 + C19224 * C298) +
             (C20037 + C20038) * C51044) *
                C15577) *
               C50974 * C50999) *
              C1775 +
          ((((C19060 + C19059) * C299 -
             ((C18632 + C18631) * C51260 + (C18630 + C18629) * C298) +
             (C19062 + C19061) * C51044) *
                C15575 +
            ((C19068 + C19067) * C299 -
             ((C18636 + C18635) * C51260 + (C18634 + C18633) * C298) +
             (C19070 + C19069) * C51044) *
                C15576 +
            ((C19416 + C19417) * C299 - (C19524 * C51260 + C19525 * C298) +
             (C19418 + C19419) * C51044) *
                C15577) *
               C50974 * C1490 +
           (((C2874 + C2875) * C298 + (C2876 + C2877) * C51260 -
             (C4279 + C4278) * C299 - (C4281 + C4280) * C51044) *
                C15575 +
            ((C3492 + C3493) * C298 + (C3494 + C3495) * C51260 -
             (C20036 + C20035) * C299 - (C20038 + C20037) * C51044) *
                C15576 +
            ((C19245 + C19246) * C298 + (C19247 + C19248) * C51260 -
             (C2450 * C9460 + C51143 * C9463 + C2449 * C3756 + C51273 * C3761) *
                 C299 -
             (C2450 * C9462 + C51143 * C9466 + C2449 * C3760 + C51273 * C3765) *
                 C51044) *
                C15577) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C1490 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C50999) *
              C51307 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C50999 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C1490) *
              C51297 +
          (((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
             C11017 * C3645 + C11012 * C3648 + C11018 * C9354 +
             C11013 * C9356) *
                C118 +
            (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
             C11017 * C3649 + C11012 * C3654 + C11018 * C9357 +
             C11013 * C9360) *
                C51028) *
               C51157 * C50974 * C1490 -
           ((C11018 * C9359 + C11013 * C9361 + C11017 * C3651 + C11012 * C3655 +
             C11016 * C1165 + C11011 * C1171 + C11015 * C1024 +
             C11010 * C1032) *
                C51028 +
            (C11018 * C9355 + C11013 * C9358 + C11017 * C3646 + C11012 * C3650 +
             C11016 * C1159 + C11011 * C1164 + C11015 * C1017 +
             C11010 * C1023) *
                C118) *
               C51157 * C50974 * C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C1490 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C50999) *
              C51307 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C50999 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C1490) *
              C51297 +
          ((((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                 C118 +
             (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                 C51028) *
                C51157 * C2446 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51157 *
                C2447 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51157 *
                C2448) *
               C1490 -
           (((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 + C51273 * C1034) *
                 C51028 +
             (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 + C51273 * C1027) *
                 C118) *
                C51157 * C2448 +
            ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C51157 *
                C2447 +
            ((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C51157 *
                C2446) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C15575 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C15576 +
            C19253 * C15577) *
               C50974 * C1490 -
           (C19254 * C15577 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C15576 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C15575) *
               C50974 * C50999) *
              C51307 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C15575 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C15576 +
            ((C19245 + C19246) * C118 + (C19247 + C19248) * C51028) * C15577) *
               C50974 * C50999 -
           (C19540 * C15577 +
            ((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C15576 +
            ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C15575) *
               C50974 * C1490) *
              C51297 +
          ((C19253 * C15575 +
            ((C19252 + C19251) * C118 + (C19250 + C19249) * C51028) * C15576 +
            ((C19536 + C19537) * C118 + (C19538 + C19539) * C51028) * C15577) *
               C50974 * C1490 -
           (((C2450 * C16589 + C51143 * C16590 + C2449 * C6565 +
              C51273 * C6570) *
                 C51028 +
             (C2450 * C16587 + C51143 * C16588 + C2449 * C6561 +
              C51273 * C6566) *
                 C118) *
                C15577 +
            ((C19248 + C19247) * C51028 + (C19246 + C19245) * C118) * C15576 +
            C19254 * C15575) *
               C50974 * C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C51157 * C2446 +
           ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
            (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
            (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
               C51157 * C2447 +
           (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
            (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
               C51157 * C2448) *
              C51253 +
          (((C2685 + C2684) * C636 -
            ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
            (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
            (C3057 + C3056) * C632) *
               C51157 * C2446 +
           ((C2690 + C2689) * C636 -
            ((C2491 + C2490) * C630 + (C2489 + C2488) * C635) +
            (C2692 + C2691) * C631 - (C3059 + C3058) * C637 -
            (C3061 + C3060) * C632) *
               C51157 * C2447 +
           ((C2693 + C2694) * C636 - (C2502 * C630 + C2503 * C635) +
            (C2695 + C2696) * C631 -
            (C2450 * C772 + C51143 * C779 + C2449 * C641 + C51273 * C649) *
                C637 -
            (C2450 * C780 + C51143 * C784 + C2449 * C650 + C51273 * C656) *
                C632) *
               C51157 * C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
               C2447 +
           C2510 * C2448) *
              C112 -
          (C2511 * C2448 +
           ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
               C2447 +
           ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
               C2446) *
              C113 +
          (C2510 * C2446 +
           ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
               C2447 +
           ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
               C2448) *
              C114 -
          (((C2450 * C317 + C51143 * C323 + C2449 * C137 + C51273 * C145) *
                C51028 +
            (C2450 * C305 + C51143 * C316 + C2449 * C124 + C51273 * C136) *
                C118) *
               C51157 * C2448 +
           ((C2499 + C2498) * C51028 + (C2497 + C2496) * C118) * C51157 *
               C2447 +
           C2511 * C2446) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C118 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51028) *
              C51157 * C50974 * C112 -
          ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
            C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
               C51028 +
           (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
            C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
               C118) *
              C51157 * C50974 * C113 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C118 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51028) *
              C51157 * C50974 * C114 -
          ((C11018 * C780 + C11013 * C784 + C11017 * C650 + C11012 * C656 +
            C11016 * C313 + C11011 * C321 + C11015 * C133 + C11010 * C143) *
               C51028 +
           (C11018 * C772 + C11013 * C779 + C11017 * C641 + C11012 * C649 +
            C11016 * C303 + C11011 * C312 + C11015 * C122 + C11010 * C132) *
               C118) *
              C51157 * C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C51253 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C636 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C630 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C635) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C631 -
           (C11018 * C8883 + C11013 * C8886 + C11017 * C3160 + C11012 * C3164 +
            C11016 * C770 + C11011 * C775 + C11015 * C639 + C11010 * C645) *
               C637 -
           (C11018 * C8887 + C11013 * C8889 + C11017 * C3165 + C11012 * C3169 +
            C11016 * C776 + C11011 * C782 + C11015 * C646 + C11010 * C654) *
               C632) *
              C51157 * C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C15575 +
           ((C2449 * C476 + C51273 * C487 + C2450 * C883 + C51143 * C891) *
                C118 +
            (C2449 * C486 + C51273 * C494 + C2450 * C892 + C51143 * C907) *
                C51028) *
               C15576 +
           ((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C118 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51028) *
               C15577) *
              C50974 * C112 -
          (((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C15577 +
           ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C15576 +
           ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C15575) *
              C50974 * C113 +
          (C2508 * C15575 +
           ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C15576 +
           ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C15577) *
              C50974 * C114 -
          (((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 + C51273 * C1034) *
                C51028 +
            (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 + C51273 * C1027) *
                C118) *
               C15577 +
           ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C15576 +
           C2509 * C15575) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C15575 +
           ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
            (C2450 * C884 + C51143 * C893 + C2449 * C883 + C51273 * C891) *
                C636 -
            (C2450 * C894 + C51143 * C908 + C2449 * C892 + C51273 * C907) *
                C631 +
            (C2449 * C884 + C51273 * C893 + C2450 * C3317 + C51143 * C3320) *
                C637 +
            (C2449 * C894 + C51273 * C908 + C2450 * C3321 + C51143 * C3326) *
                C632) *
               C15576 +
           ((C18633 + C18634) * C635 + (C18635 + C18636) * C630 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C636 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C631 +
            (C2449 * C3645 + C51273 * C3648 + C2450 * C9354 + C51143 * C9356) *
                C637 +
            (C2449 * C3649 + C51273 * C3654 + C2450 * C9357 + C51143 * C9360) *
                C632) *
               C15577) *
              C50974 * C51253 +
          (((C2685 + C2684) * C636 -
            ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
            (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
            (C3057 + C3056) * C632) *
               C15575 +
           ((C4278 + C4279) * C636 -
            ((C2877 + C2876) * C630 + (C2875 + C2874) * C635) +
            (C4280 + C4281) * C631 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C637 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C632) *
               C15576 +
           ((C2449 * C1159 + C51273 * C1164 + C2450 * C3646 + C51143 * C3650) *
                C636 -
            ((C3495 + C3494) * C630 + (C3493 + C3492) * C635) +
            (C2449 * C1165 + C51273 * C1171 + C2450 * C3651 + C51143 * C3655) *
                C631 -
            (C2450 * C9355 + C51143 * C9358 + C2449 * C3646 + C51273 * C3650) *
                C637 -
            (C2450 * C9359 + C51143 * C9361 + C2449 * C3651 + C51273 * C3655) *
                C632) *
               C15577) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
               C765 +
           (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
               C760 -
           (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
               C766 -
           (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
               C761 +
           (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
               C767 +
           (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
               C762 -
           (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
               C768 -
           (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
               C763) *
              C51157 * C2446 +
          ((C2484 + C2485) * C765 + (C2486 + C2487) * C760 -
           (C2684 + C2685) * C766 - (C2686 + C2687) * C761 +
           (C3054 + C3055) * C767 + (C3056 + C3057) * C762 -
           (C2450 * C3160 + C51143 * C3164 + C2449 * C770 + C51273 * C775) *
               C768 -
           (C2450 * C3165 + C51143 * C3169 + C2449 * C776 + C51273 * C782) *
               C763) *
              C51157 * C2447 +
          (C2500 * C765 + C2501 * C760 - C2697 * C766 - C2698 * C761 +
           (C3058 + C3059) * C767 + (C3060 + C3061) * C762 -
           (C2450 * C3161 + C51143 * C3166 + C2449 * C771 + C51273 * C777) *
               C768 -
           (C2450 * C3167 + C51143 * C3170 + C2449 * C778 + C51273 * C783) *
               C763) *
              C51157 * C2448) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
            (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C2703 * C2448) *
              C295 +
          (((C2685 + C2684) * C299 -
            ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
            (C2687 + C2686) * C51044) *
               C51157 * C2446 +
           ((C2690 + C2689) * C299 -
            ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
            (C2692 + C2691) * C51044) *
               C51157 * C2447 +
           ((C2693 + C2694) * C299 - (C2502 * C51260 + C2503 * C298) +
            (C2695 + C2696) * C51044) *
               C51157 * C2448) *
              C296 +
          (C2703 * C2446 +
           ((C2495 + C2494) * C298 + (C2493 + C2492) * C51260 -
            (C2694 + C2693) * C299 - (C2696 + C2695) * C51044) *
               C51157 * C2447 +
           ((C2496 + C2497) * C298 + (C2498 + C2499) * C51260 -
            (C2450 * C642 + C51143 * C651 + C2449 * C304 + C51273 * C314) *
                C299 -
            (C2450 * C652 + C51143 * C657 + C2449 * C315 + C51273 * C322) *
                C51044) *
               C51157 * C2448) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C298 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51260 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C299 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C295 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C299 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51260 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C298) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51044) *
              C51157 * C50974 * C296 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C298 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51260 -
           (C11018 * C3161 + C11013 * C3166 + C11017 * C771 + C11012 * C777 +
            C11016 * C640 + C11011 * C647 + C11015 * C302 + C11010 * C310) *
               C299 -
           (C11018 * C3167 + C11013 * C3170 + C11017 * C778 + C11012 * C783 +
            C11016 * C648 + C11011 * C655 + C11015 * C311 + C11010 * C320) *
               C51044) *
              C51157 * C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
           C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
              C765 +
          (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
           C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
              C760 -
          (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
           C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
              C766 -
          (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
           C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
              C761 +
          (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
           C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
              C767 +
          (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
           C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
              C762 -
          (C11018 * C11379 + C11013 * C11380 + C11017 * C8882 + C11012 * C8884 +
           C11016 * C3159 + C11011 * C3162 + C11015 * C769 + C11010 * C773) *
              C768 -
          (C11018 * C11381 + C11013 * C11382 + C11017 * C8885 + C11012 * C8888 +
           C11016 * C3163 + C11011 * C3168 + C11015 * C774 + C11010 * C781) *
              C763) *
         C51157 * C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C15575 +
           ((C2449 * C476 + C51273 * C487 + C2450 * C883 + C51143 * C891) *
                C298 +
            (C2449 * C486 + C51273 * C494 + C2450 * C892 + C51143 * C907) *
                C51260 -
            (C2450 * C884 + C51143 * C893 + C2449 * C883 + C51273 * C891) *
                C299 -
            (C2450 * C894 + C51143 * C908 + C2449 * C892 + C51273 * C907) *
                C51044) *
               C15576 +
           ((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C298 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51260 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C299 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C51044) *
               C15577) *
              C50974 * C295 +
          (((C2685 + C2684) * C299 -
            ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
            (C2687 + C2686) * C51044) *
               C15575 +
           ((C4278 + C4279) * C299 -
            ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
            (C4280 + C4281) * C51044) *
               C15576 +
           ((C2449 * C1159 + C51273 * C1164 + C2450 * C3646 + C51143 * C3650) *
                C299 -
            ((C3495 + C3494) * C51260 + (C3493 + C3492) * C298) +
            (C2449 * C1165 + C51273 * C1171 + C2450 * C3651 + C51143 * C3655) *
                C51044) *
               C15577) *
              C50974 * C296 +
          (C2702 * C15575 +
           ((C2878 + C2879) * C298 + (C2880 + C2881) * C51260 -
            (C4283 + C4282) * C299 - (C4285 + C4284) * C51044) *
               C15576 +
           ((C3496 + C3497) * C298 + (C3498 + C3499) * C51260 -
            (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 + C51273 * C1166) *
                C299 -
            (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 + C51273 * C1172) *
                C51044) *
               C15577) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
               C765 +
           (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
               C760 -
           (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
               C766 -
           (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
               C761 +
           (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
               C767 +
           (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
               C762 -
           (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
               C768 -
           (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
               C763) *
              C15575 +
          ((C18629 + C18630) * C765 + (C18631 + C18632) * C760 -
           (C2450 * C884 + C51143 * C893 + C2449 * C883 + C51273 * C891) *
               C766 -
           (C2450 * C894 + C51143 * C908 + C2449 * C892 + C51273 * C907) *
               C761 +
           (C2449 * C884 + C51273 * C893 + C2450 * C3317 + C51143 * C3320) *
               C767 +
           (C2449 * C894 + C51273 * C908 + C2450 * C3321 + C51143 * C3326) *
               C762 -
           (C2450 * C9036 + C51143 * C9038 + C2449 * C3317 + C51273 * C3320) *
               C768 -
           (C2450 * C9039 + C51143 * C9042 + C2449 * C3321 + C51273 * C3326) *
               C763) *
              C15576 +
          ((C18633 + C18634) * C765 + (C18635 + C18636) * C760 -
           (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
               C766 -
           (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
               C761 +
           (C2449 * C3645 + C51273 * C3648 + C2450 * C9354 + C51143 * C9356) *
               C767 +
           (C2449 * C3649 + C51273 * C3654 + C2450 * C9357 + C51143 * C9360) *
               C762 -
           (C2450 * C11681 + C51143 * C11682 + C2449 * C9354 + C51273 * C9356) *
               C768 -
           (C2450 * C11683 + C51143 * C11684 + C2449 * C9357 + C51273 * C9360) *
               C763) *
              C15577) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C51157 * C2446 +
           ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
            (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
            (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
               C51157 * C2447 +
           (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
            (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
               C51157 * C2448) *
              C50994 * C51262 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C636 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C630 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C635) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C631 -
            (C2450 * C3317 + C51143 * C3320 + C2449 * C884 + C51273 * C893) *
                C637 -
            (C2450 * C3321 + C51143 * C3326 + C2449 * C894 + C51273 * C908) *
                C632) *
               C51157 * C2446 +
           ((C2449 * C885 + C51273 * C895 + C2450 * C886 + C51143 * C897) *
                C636 -
            ((C2877 + C2876) * C630 + (C2875 + C2874) * C635) +
            (C2449 * C896 + C51273 * C909 + C2450 * C898 + C51143 * C910) *
                C631 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C637 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C632) *
               C51157 * C2447 +
           ((C2449 * C887 + C51273 * C899 + C2450 * C888 + C51143 * C901) *
                C636 -
            (C2886 * C630 + C2887 * C635) +
            (C2449 * C900 + C51273 * C911 + C2450 * C902 + C51143 * C912) *
                C631 -
            (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                C637 -
            (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                C632) *
               C51157 * C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C295 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C296 +
           (C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
                C2448) *
               C297) *
              C51262 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C296 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C295 -
           (((C2450 * C1645 + C51143 * C1646 + C2449 * C485 + C51273 * C493) *
                 C51028 +
             (C2450 * C1643 + C51143 * C1644 + C2449 * C475 + C51273 * C484) *
                 C118) *
                C51157 * C2448 +
            ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51157 *
                C2447 +
            C2891 * C2446) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C295 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C296 +
           ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
             C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
                C118 +
            (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
             C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
                C51028) *
               C51157 * C50974 * C297) *
              C51262 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C296 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C295 -
           ((C11018 * C3325 + C11013 * C3328 + C11017 * C902 + C11012 * C912 +
             C11016 * C900 + C11011 * C911 + C11015 * C481 + C11010 * C491) *
                C51028 +
            (C11018 * C3319 + C11013 * C3324 + C11017 * C888 + C11012 * C901 +
             C11016 * C887 + C11011 * C899 + C11015 * C473 + C11010 * C480) *
                C118) *
               C51157 * C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C50994 * C51262 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C636 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C630 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C635) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C631 -
           (C11018 * C11481 + C11013 * C11482 + C11017 * C9036 +
            C11012 * C9038 + C11016 * C3317 + C11011 * C3320 + C11015 * C884 +
            C11010 * C893) *
               C637 -
           (C11018 * C11483 + C11013 * C11484 + C11017 * C9039 +
            C11012 * C9042 + C11016 * C3321 + C11011 * C3326 + C11015 * C894 +
            C11010 * C908) *
               C632) *
              C51157 * C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C15575 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C15576 +
            ((C18633 + C18634) * C118 + (C18635 + C18636) * C51028) * C15577) *
               C50974 * C295 -
           (((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C15577 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C15576 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C15575) *
               C50974 * C296 +
           (C2508 * C15575 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C15576 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C15577) *
               C50974 * C297) *
              C51262 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C15575 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C15576 +
            ((C2449 * C1246 + C51273 * C1253 + C2450 * C3756 + C51143 * C3761) *
                 C118 +
             (C2449 * C1252 + C51273 * C1258 + C2450 * C3760 + C51143 * C3765) *
                 C51028) *
                C15577) *
               C50974 * C296 -
           (((C2450 * C3762 + C51143 * C3766 + C2449 * C1254 + C51273 * C1259) *
                 C51028 +
             (C2450 * C3757 + C51143 * C3763 + C2449 * C1247 + C51273 * C1255) *
                 C118) *
                C15577 +
            ((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C15576 +
            ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C15575) *
               C50974 * C295 -
           (((C2450 * C3758 + C51143 * C3764 + C2449 * C1250 + C51273 * C1257) *
                 C51028 +
             (C2450 * C3755 + C51143 * C3759 + C2449 * C1245 + C51273 * C1251) *
                 C118) *
                C15577 +
            ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C15576 +
            C2890 * C15575) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C15575 +
           ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
            (C19059 + C19060) * C636 - (C19061 + C19062) * C631 +
            (C19063 + C19064) * C637 + (C19065 + C19066) * C632) *
               C15576 +
           ((C18633 + C18634) * C635 + (C18635 + C18636) * C630 -
            (C19067 + C19068) * C636 - (C19069 + C19070) * C631 +
            (C19071 + C19072) * C637 + (C19073 + C19074) * C632) *
               C15577) *
              C50974 * C50994 * C51262 +
          (((C19060 + C19059) * C636 -
            ((C18632 + C18631) * C630 + (C18630 + C18629) * C635) +
            (C19062 + C19061) * C631 - (C19064 + C19063) * C637 -
            (C19066 + C19065) * C632) *
               C15575 +
           ((C19068 + C19067) * C636 -
            ((C18636 + C18635) * C630 + (C18634 + C18633) * C635) +
            (C19070 + C19069) * C631 - (C19072 + C19071) * C637 -
            (C19074 + C19073) * C632) *
               C15576 +
           ((C2449 * C3757 + C51273 * C3763 + C2450 * C9461 + C51143 * C9465) *
                C636 -
            ((C2450 * C3762 + C51143 * C3766 + C2449 * C1254 + C51273 * C1259) *
                 C630 +
             (C2450 * C3757 + C51143 * C3763 + C2449 * C1247 + C51273 * C1255) *
                 C635) +
            (C2449 * C3762 + C51273 * C3766 + C2450 * C9464 + C51143 * C9467) *
                C631 -
            (C2450 * C11751 + C51143 * C11753 + C2449 * C9461 +
             C51273 * C9465) *
                C637 -
            (C2450 * C11752 + C51143 * C11754 + C2449 * C9464 +
             C51273 * C9467) *
                C632) *
               C15577) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1363 +
            (C13139 + C13140 + C13141) * C1358 -
            (C13556 + C13557 + C13558) * C1364 -
            (C13559 + C13560 + C13561) * C51044) *
               C51169) *
              C50974 * C51305 +
          (((C8429 + C8428 + C8427) * C1364 -
            ((C8244 + C8243 + C8242) * C1358 +
             (C8241 + C8240 + C8239) * C1363) +
            (C8432 + C8431 + C8430) * C51044) *
               C51275 +
           ((C9967 + C9968 + C9969) * C1364 -
            ((C8614 + C8613 + C8612) * C1358 +
             (C8611 + C8610 + C8609) * C1363) +
            (C9970 + C9971 + C9972) * C51044) *
               C51169) *
              C50974 * C51291 +
          (((C8250 + C8249 + C8248) * C1363 + (C8247 + C8246 + C8245) * C1358 -
            (C8435 + C8434 + C8433) * C1364 -
            (C8438 + C8437 + C8436) * C51044) *
               C51275 +
           ((C8615 + C8616 + C8617) * C1363 + (C8618 + C8619 + C8620) * C1358 -
            (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
             C8199 * C887 + C8194 * C899) *
                C1364 -
            (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
             C8199 * C900 + C8194 * C911) *
                C51044) *
               C51169) *
              C50974 * C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            (C5672 * C1363 + C5673 * C1358 - C6102 * C1364 - C6103 * C51044) *
                C51169) *
               C2446 +
           ((C1366 + C1367 - C1368 - C1369) * C51275 +
            (C1651 + C1650 - C1672 - C1673) * C51169) *
               C2447 +
           C6732 * C2448) *
              C51305 +
          (((C1368 - (C1367 + C1366) + C1369) * C51275 +
            (C1672 - (C1650 + C1651) + C1673) * C51169) *
               C2446 +
           ((C1372 - (C1371 + C1370) + C1373) * C51275 +
            (C1674 - (C1656 + C1657) + C1675) * C51169) *
               C2447 +
           ((C1376 - (C1375 + C1374) + C1377) * C51275 +
            (C1676 - (C1662 + C1663) + C1677) * C51169) *
               C2448) *
              C51291 +
          (C6732 * C2446 +
           (C1387 * C51275 + (C1663 + C1662 - C1676 - C1677) * C51169) * C2447 +
           ((C1380 + C1379 - C1378 - C1381) * C51275 +
            (C519 * C1363 + C520 * C1358 -
             (C117 * C1643 + C51127 * C1644) * C1364 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C2448) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1363 +
            (C117 * C127 + C51127 * C140) * C1358 -
            (C117 * C300 + C51127 * C306) * C1364 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C21083 +
           (C7085 + C7086 - C7087 - C7088) * C21084 + C18222 * C21085 +
           (C18219 + C18218 - C18217 - C18220) * C21086) *
              C50974 * C51305 +
          ((C1368 - (C1367 + C1366) + C1369) * C21083 + C7104 * C21084 +
           C17234 * C21085 + (C17227 - (C17228 + C17229) + C17230) * C21086) *
              C50974 * C51291 +
          (C1386 * C21083 + C6730 * C21084 +
           (C7098 + C7097 - C7096 - C7099) * C21085 +
           (C6275 * C1363 + C6276 * C1358 -
            (C117 * C3755 + C51127 * C3759) * C1364 -
            (C117 * C3758 + C51127 * C3764) * C51044) *
               C21086) *
              C50974 * C1362) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1492 +
            (C13139 + C13140 + C13141) * C51306 -
            (C13556 + C13557 + C13558) * C1493 -
            (C13559 + C13560 + C13561) * C51294 +
            (C13562 + C13563 + C13564) * C1494 +
            (C13565 + C13566 + C13567) * C1489) *
               C51169) *
              C50974 * C1490 +
          (((C8429 + C8428 + C8427) * C1493 -
            ((C8244 + C8243 + C8242) * C51306 +
             (C8241 + C8240 + C8239) * C1492) +
            (C8432 + C8431 + C8430) * C51294 - (C8781 + C8780 + C8779) * C1494 -
            (C8784 + C8783 + C8782) * C1489) *
               C51275 +
           ((C9967 + C9968 + C9969) * C1493 -
            ((C8614 + C8613 + C8612) * C51306 +
             (C8611 + C8610 + C8609) * C1492) +
            (C9970 + C9971 + C9972) * C51294 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C1494 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C1489) *
               C51169) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C51275 +
            (C5672 * C1492 + C5673 * C51306 - C6102 * C1493 - C6103 * C51294 +
             C6104 * C1494 + C6105 * C1489) *
                C51169) *
               C2446 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51275 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51169) *
               C2447 +
           ((C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51275 +
            (C6885 + C6886 - C6887 - C6888 + C6889 + C6890) * C51169) *
               C2448) *
              C1490 +
          (((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C51275 +
            (C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C51169) *
               C2446 +
           ((C1504 - (C1503 + C1502) + C1505 - C1506 - C1507) * C51275 +
            (C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C51169) *
               C2447 +
           ((C1510 - (C1509 + C1508) + C1511 - C1512 - C1513) * C51275 +
            (C1670 * C1493 - (C518 * C51306 + C517 * C1492) + C1671 * C51294 -
             (C117 * C890 + C51127 * C905) * C1494 -
             (C117 * C906 + C51127 * C914) * C1489) *
                C51169) *
               C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1492 +
            (C117 * C127 + C51127 * C140) * C51306 -
            (C117 * C300 + C51127 * C306) * C1493 -
            (C117 * C307 + C51127 * C318) * C51294 +
            (C117 * C638 + C51127 * C643) * C1494 +
            (C117 * C644 + C51127 * C653) * C1489) *
               C21083 +
           (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C21084 +
           (C18064 + C18065 - C18066 - C18067 + C18068 + C18069) * C21085 +
           (C6577 * C1492 + C6578 * C51306 - C16608 * C1493 - C16609 * C51294 +
            C21554 * C1494 + C21555 * C1489) *
               C21086) *
              C50974 * C1490 +
          ((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C21083 +
           (C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C21084 +
           (C17027 - (C17026 + C17025) + C17028 - C17029 - C17030) * C21085 +
           (C16610 * C1493 - (C6274 * C51306 + C6273 * C1492) +
            C16611 * C51294 - (C117 * C9460 + C51127 * C9463) * C1494 -
            (C117 * C9462 + C51127 * C9466) * C1489) *
               C21086) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51275 +
            ((C13136 + C13137 + C13138) * C1363 +
             (C13139 + C13140 + C13141) * C1358 -
             (C13556 + C13557 + C13558) * C1364 -
             (C13559 + C13560 + C13561) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51275 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51169) *
               C50974 * C50999) *
              C51262 +
          ((((C13558 + C13557 + C13556) * C1364 -
             ((C13141 + C13140 + C13139) * C1358 +
              (C13138 + C13137 + C13136) * C1363) +
             (C13561 + C13560 + C13559) * C51044) *
                C51275 +
            ((C13890 + C13891 + C13892) * C1364 -
             ((C13726 + C13727 + C13728) * C1358 +
              (C13729 + C13730 + C13731) * C1363) +
             (C13893 + C13894 + C13895) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51275 +
            ((C9203 + C9204 + C9205) * C1363 + (C9206 + C9207 + C9208) * C1358 -
             (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
              C8199 * C1159 + C8194 * C1164) *
                 C1364 -
             (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
              C8199 * C1165 + C8194 * C1171) *
                 C51044) *
                C51169) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51275 +
             (C7085 + C7086 - C7087 - C7088) * C51169) *
                C2446 +
            ((C1366 + C1367 - C1368 - C1369) * C51275 + C7103 * C51169) *
                C2447 +
            C6732 * C2448) *
               C1490 +
           (((C1368 - (C1367 + C1366) + C1369) * C51275 + C7104 * C51169) *
                C2446 +
            ((C1372 - (C1371 + C1370) + C1373) * C51275 + C7105 * C51169) *
                C2447 +
            ((C1376 - (C1375 + C1374) + C1377) * C51275 +
             (C1676 - (C1662 + C1663) + C1677) * C51169) *
                C2448) *
               C50999) *
              C51262 +
          ((((C7087 - (C7086 + C7085) + C7088) * C51275 +
             (C6451 * C1364 - (C6271 * C1358 + C6272 * C1363) +
              C6452 * C51044) *
                 C51169) *
                C2446 +
            (C7104 * C51275 + (C7092 - (C7093 + C7094) + C7095) * C51169) *
                C2447 +
            (C7105 * C51275 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
                C2448) *
               C1490 +
           ((C7103 * C51275 + (C7094 + C7093 - C7092 - C7095) * C51169) *
                C2446 +
            (C6730 * C51275 + (C7098 + C7097 - C7096 - C7099) * C51169) *
                C2447 +
            ((C1663 + C1662 - C1676 - C1677) * C51275 +
             (C1053 * C1363 + C1054 * C1358 -
              (C117 * C1161 + C51127 * C1168) * C1364 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C21083 +
            (C7085 + C7086 - C7087 - C7088) * C21084 + C18222 * C21085 +
            (C18219 + C18218 - C18217 - C18220) * C21086) *
               C50974 * C1490 +
           ((C1368 - (C1367 + C1366) + C1369) * C21083 + C7104 * C21084 +
            C17234 * C21085 + (C17227 - (C17228 + C17229) + C17230) * C21086) *
               C50974 * C50999) *
              C51262 +
          (((C7087 - (C7086 + C7085) + C7088) * C21083 +
            (C8093 - (C8094 + C8095) + C8096) * C21084 +
            (C18217 - (C18218 + C18219) + C18220) * C21085 +
            (C21763 * C1364 - (C16730 * C1358 + C16729 * C1363) +
             C21764 * C51044) *
                C21086) *
               C50974 * C1490 +
           (C7103 * C21083 + C17233 * C21084 +
            (C17229 + C17228 - C17227 - C17230) * C21085 +
            (C16438 * C1363 + C16439 * C1358 -
             (C117 * C16587 + C51127 * C16588) * C1364 -
             (C117 * C16589 + C51127 * C16590) * C51044) *
                C21086) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51275 +
            ((C13136 + C13137 + C13138) * C1363 +
             (C13139 + C13140 + C13141) * C1358 -
             (C13556 + C13557 + C13558) * C1364 -
             (C13559 + C13560 + C13561) * C51044) *
                C51169) *
               C50974 * C51253 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51275 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51169) *
               C50974 * C50999) *
              C1775 +
          ((((C13558 + C13557 + C13556) * C1364 -
             ((C13141 + C13140 + C13139) * C1358 +
              (C13138 + C13137 + C13136) * C1363) +
             (C13561 + C13560 + C13559) * C51044) *
                C51275 +
            ((C13890 + C13891 + C13892) * C1364 -
             ((C13726 + C13727 + C13728) * C1358 +
              (C13729 + C13730 + C13731) * C1363) +
             (C13893 + C13894 + C13895) * C51044) *
                C51169) *
               C50974 * C51253 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51275 +
            ((C9203 + C9204 + C9205) * C1363 + (C9206 + C9207 + C9208) * C1358 -
             (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
              C8199 * C1159 + C8194 * C1164) *
                 C1364 -
             (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
              C8199 * C1165 + C8194 * C1171) *
                 C51044) *
                C51169) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51275 +
             (C7085 + C7086 - C7087 - C7088) * C51169) *
                C2446 +
            ((C1366 + C1367 - C1368 - C1369) * C51275 + C7103 * C51169) *
                C2447 +
            C6732 * C2448) *
               C51253 +
           (((C1368 - (C1367 + C1366) + C1369) * C51275 + C7104 * C51169) *
                C2446 +
            ((C1372 - (C1371 + C1370) + C1373) * C51275 + C7105 * C51169) *
                C2447 +
            ((C1376 - (C1375 + C1374) + C1377) * C51275 +
             (C1676 - (C1662 + C1663) + C1677) * C51169) *
                C2448) *
               C50999) *
              C1775 +
          ((((C7087 - (C7086 + C7085) + C7088) * C51275 +
             (C6451 * C1364 - (C6271 * C1358 + C6272 * C1363) +
              C6452 * C51044) *
                 C51169) *
                C2446 +
            (C7104 * C51275 + (C7092 - (C7093 + C7094) + C7095) * C51169) *
                C2447 +
            (C7105 * C51275 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
                C2448) *
               C51253 +
           ((C7103 * C51275 + (C7094 + C7093 - C7092 - C7095) * C51169) *
                C2446 +
            (C6730 * C51275 + (C7098 + C7097 - C7096 - C7099) * C51169) *
                C2447 +
            ((C1663 + C1662 - C1676 - C1677) * C51275 +
             (C1053 * C1363 + C1054 * C1358 -
              (C117 * C1161 + C51127 * C1168) * C1364 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C21083 +
            (C7085 + C7086 - C7087 - C7088) * C21084 + C18222 * C21085 +
            (C18219 + C18218 - C18217 - C18220) * C21086) *
               C50974 * C51253 +
           ((C1368 - (C1367 + C1366) + C1369) * C21083 + C7104 * C21084 +
            C17234 * C21085 + (C17227 - (C17228 + C17229) + C17230) * C21086) *
               C50974 * C50999) *
              C1775 +
          (((C7087 - (C7086 + C7085) + C7088) * C21083 +
            (C8093 - (C8094 + C8095) + C8096) * C21084 +
            (C18217 - (C18218 + C18219) + C18220) * C21085 +
            (C21763 * C1364 - (C16730 * C1358 + C16729 * C1363) +
             C21764 * C51044) *
                C21086) *
               C50974 * C51253 +
           (C7103 * C21083 + C17233 * C21084 +
            (C17229 + C17228 - C17227 - C17230) * C21085 +
            (C16438 * C1363 + C16439 * C1358 -
             (C117 * C16587 + C51127 * C16588) * C1364 -
             (C117 * C16589 + C51127 * C16590) * C51044) *
                C21086) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1492 +
            (C13139 + C13140 + C13141) * C51306 -
            (C13556 + C13557 + C13558) * C1493 -
            (C13559 + C13560 + C13561) * C51294 +
            (C13562 + C13563 + C13564) * C1494 +
            (C13565 + C13566 + C13567) * C1489) *
               C51169) *
              C50974 * C50994 * C1775 +
          (((C13558 + C13557 + C13556) * C1493 -
            ((C13141 + C13140 + C13139) * C51306 +
             (C13138 + C13137 + C13136) * C1492) +
            (C13561 + C13560 + C13559) * C51294 -
            (C13564 + C13563 + C13562) * C1494 -
            (C13567 + C13566 + C13565) * C1489) *
               C51275 +
           ((C13890 + C13891 + C13892) * C1493 -
            ((C13726 + C13727 + C13728) * C51306 +
             (C13729 + C13730 + C13731) * C1492) +
            (C13893 + C13894 + C13895) * C51294 -
            (C8201 * C11681 + C8196 * C11682 + C8200 * C9354 + C8195 * C9356 +
             C8199 * C3645 + C8194 * C3648) *
                C1494 -
            (C8201 * C11683 + C8196 * C11684 + C8200 * C9357 + C8195 * C9360 +
             C8199 * C3649 + C8194 * C3654) *
                C1489) *
               C51169) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C51275 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C51169) *
               C2446 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51275 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51169) *
               C2447 +
           ((C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51275 +
            (C6885 + C6886 - C6887 - C6888 + C6889 + C6890) * C51169) *
               C2448) *
              C50994 * C1775 +
          (((C7943 - (C7942 + C7941) + C7944 - C7945 - C7946) * C51275 +
            (C6451 * C1493 - (C6271 * C51306 + C6272 * C1492) + C6452 * C51294 -
             (C117 * C3645 + C51127 * C3648) * C1494 -
             (C117 * C3649 + C51127 * C3654) * C1489) *
                C51169) *
               C2446 +
           ((C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C51275 +
            (C6453 * C1493 - (C1050 * C51306 + C1049 * C1492) + C6454 * C51294 -
             (C117 * C3646 + C51127 * C3650) * C1494 -
             (C117 * C3651 + C51127 * C3655) * C1489) *
                C51169) *
               C2447 +
           ((C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C51275 +
            (C6455 * C1493 - (C1052 * C51306 + C1051 * C1492) + C6456 * C51294 -
             (C117 * C3647 + C51127 * C3652) * C1494 -
             (C117 * C3653 + C51127 * C3656) * C1489) *
                C51169) *
               C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1492 +
            (C117 * C127 + C51127 * C140) * C51306 -
            (C117 * C300 + C51127 * C306) * C1493 -
            (C117 * C307 + C51127 * C318) * C51294 +
            (C117 * C638 + C51127 * C643) * C1494 +
            (C117 * C644 + C51127 * C653) * C1489) *
               C21083 +
           (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C21084 +
           (C18064 + C18065 - C18066 - C18067 + C18068 + C18069) * C21085 +
           (C22727 + C22728 - C22729 - C22730 + C22731 + C22732) * C21086) *
              C50974 * C50994 * C1775 +
          ((C7943 - (C7942 + C7941) + C7944 - C7945 - C7946) * C21083 +
           (C18066 - (C18065 + C18064) + C18067 - C18068 - C18069) * C21084 +
           (C22729 - (C22728 + C22727) + C22730 - C22731 - C22732) * C21085 +
           (C21763 * C1493 - (C16730 * C51306 + C16729 * C1492) +
            C21764 * C51294 - (C117 * C13993 + C51127 * C13997) * C1494 -
            (C117 * C13995 + C51127 * C13999) * C1489) *
               C21086) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1363 +
            (C13139 + C13140 + C13141) * C1358 -
            (C13556 + C13557 + C13558) * C1364 -
            (C13559 + C13560 + C13561) * C51044) *
               C51169) *
              C50974 * C50994 * C51307 +
          (((C13558 + C13557 + C13556) * C1364 -
            ((C13141 + C13140 + C13139) * C1358 +
             (C13138 + C13137 + C13136) * C1363) +
            (C13561 + C13560 + C13559) * C51044) *
               C51275 +
           ((C13890 + C13891 + C13892) * C1364 -
            ((C13726 + C13727 + C13728) * C1358 +
             (C13729 + C13730 + C13731) * C1363) +
            (C13893 + C13894 + C13895) * C51044) *
               C51169) *
              C50974 * C50994 * C51297 +
          (((C13731 + C13730 + C13729) * C1363 +
            (C13728 + C13727 + C13726) * C1358 -
            (C13892 + C13891 + C13890) * C1364 -
            (C13895 + C13894 + C13893) * C51044) *
               C51275 +
           ((C14014 + C14015 + C14016) * C1363 +
            (C14017 + C14018 + C14019) * C1358 -
            (C8201 * C11751 + C8196 * C11753 + C8200 * C9461 + C8195 * C9465 +
             C8199 * C3757 + C8194 * C3763) *
                C1364 -
            (C8201 * C11752 + C8196 * C11754 + C8200 * C9464 + C8195 * C9467 +
             C8199 * C3762 + C8194 * C3766) *
                C51044) *
               C51169) *
              C50974 * C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            (C7085 + C7086 - C7087 - C7088) * C51169) *
               C2446 +
           ((C1366 + C1367 - C1368 - C1369) * C51275 + C7103 * C51169) * C2447 +
           C6732 * C2448) *
              C50994 * C51307 +
          (((C7087 - (C7086 + C7085) + C7088) * C51275 +
            (C8093 - (C8094 + C8095) + C8096) * C51169) *
               C2446 +
           (C7104 * C51275 + (C7092 - (C7093 + C7094) + C7095) * C51169) *
               C2447 +
           (C7105 * C51275 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
               C2448) *
              C50994 * C51297 +
          (((C8095 + C8094 - C8093 - C8096) * C51275 +
            (C6577 * C1363 + C6578 * C1358 -
             (C117 * C3757 + C51127 * C3763) * C1364 -
             (C117 * C3762 + C51127 * C3766) * C51044) *
                C51169) *
               C2446 +
           ((C7094 + C7093 - C7092 - C7095) * C51275 +
            (C6273 * C1363 + C6274 * C1358 -
             (C117 * C3756 + C51127 * C3761) * C1364 -
             (C117 * C3760 + C51127 * C3765) * C51044) *
                C51169) *
               C2447 +
           ((C7098 + C7097 - C7096 - C7099) * C51275 +
            (C6275 * C1363 + C6276 * C1358 -
             (C117 * C3755 + C51127 * C3759) * C1364 -
             (C117 * C3758 + C51127 * C3764) * C51044) *
                C51169) *
               C2448) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1363 +
            (C117 * C127 + C51127 * C140) * C1358 -
            (C117 * C300 + C51127 * C306) * C1364 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C21083 +
           (C7085 + C7086 - C7087 - C7088) * C21084 + C18222 * C21085 +
           C22837 * C21086) *
              C50974 * C50994 * C51307 +
          ((C7087 - (C7086 + C7085) + C7088) * C21083 +
           (C8093 - (C8094 + C8095) + C8096) * C21084 +
           (C18217 - (C18218 + C18219) + C18220) * C21085 +
           (C22832 - (C22833 + C22834) + C22835) * C21086) *
              C50974 * C50994 * C51297 +
          (C18222 * C21083 + C22837 * C21084 +
           (C22834 + C22833 - C22832 - C22835) * C21085 +
           (C21843 * C1363 + C21844 * C1358 -
            (C117 * C19519 + C51127 * C19521) * C1364 -
            (C117 * C19520 + C51127 * C19522) * C51044) *
               C21086) *
              C50974 * C50994 * C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51127 * C126) * C118 +
                 (C117 * C127 + C51127 * C140) * C51028) *
                    C51275 +
                ((C117 * C476 + C51127 * C487) * C118 +
                 (C117 * C486 + C51127 * C494) * C51028) *
                    C51169) *
                   C2446 +
               ((C178 + C179) * C51275 + (C521 + C522) * C51169) * C2447 +
               C5364 * C2448) *
                  C112 -
              (C5363 * C2448 +
               (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
               ((C522 + C521) * C51169 + (C179 + C178) * C51275) * C2446) *
                  C113 +
              (C5364 * C2446 +
               (C189 * C51275 + (C525 + C526) * C51169) * C2447 +
               ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
                  C114 -
              ((((C117 * C488 + C51127 * C495) * C51028 +
                 (C117 * C477 + C51127 * C489) * C118) *
                    C51169 +
                (C187 + C186) * C51275) *
                   C2448 +
               ((C528 + C527) * C51169 + C190 * C51275) * C2447 +
               C5363 * C2446) *
                  C115) *
             C51058 +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51127 * C126) * C635 +
                 (C117 * C127 + C51127 * C140) * C630 -
                 (C117 * C300 + C51127 * C306) * C636 -
                 (C117 * C307 + C51127 * C318) * C631 +
                 (C117 * C638 + C51127 * C643) * C637 +
                 (C117 * C644 + C51127 * C653) * C632) *
                    C51275 +
                (C5672 * C635 + C5673 * C630 -
                 (C117 * C883 + C51127 * C891) * C636 -
                 (C117 * C892 + C51127 * C907) * C631 +
                 (C117 * C884 + C51127 * C893) * C637 +
                 (C117 * C894 + C51127 * C908) * C632) *
                    C51169) *
                   C2446 +
               ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
                (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
                   C2447 +
               ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
                (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
                   C2448) *
                  C51253 +
              (((C661 - (C660 + C659) + C662 - C689 - C690) * C51275 +
                (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51169) *
                   C2446 +
               ((C669 - (C668 + C667) + C670 - C691 - C692) * C51275 +
                (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51169) *
                   C2447 +
               ((C677 - (C676 + C675) + C678 - C693 - C694) * C51275 +
                (C1670 * C636 - (C518 * C630 + C517 * C635) + C1671 * C631 -
                 (C117 * C890 + C51127 * C905) * C637 -
                 (C117 * C906 + C51127 * C914) * C632) *
                    C51169) *
                   C2448) *
                  C50999) *
             C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C51253 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C50999) *
              C1013 +
          (((C5667 * C51275 + C6256 * C51169) * C2446 +
            (C5359 * C51275 + C6257 * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C50999 -
           (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
               C51253) *
              C1014 +
          ((((C6278 + C6277) * C51275 +
             ((C117 * C1247 + C51127 * C1255) * C118 +
              (C117 * C1254 + C51127 * C1259) * C51028) *
                 C51169) *
                C2446 +
            (C6256 * C51275 + (C6279 + C6280) * C51169) * C2447 +
            (C6257 * C51275 + (C6281 + C6282) * C51169) * C2448) *
               C51253 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C51169 +
             (C1060 + C1059) * C51275) *
                C2448 +
            ((C6282 + C6281) * C51169 + C5670 * C51275) * C2447 +
            ((C6280 + C6279) * C51169 + C6258 * C51275) * C2446) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C118 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51028) *
               C51169) *
              C50974 * C112 -
          (((C8614 + C8613 + C8612) * C51028 + (C8611 + C8610 + C8609) * C118) *
               C51169 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51275) *
              C50974 * C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51275 +
           ((C8615 + C8616 + C8617) * C118 + (C8618 + C8619 + C8620) * C51028) *
               C51169) *
              C50974 * C114 -
          (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
             C8199 * C483 + C8194 * C492) *
                C51028 +
            (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
             C8199 * C474 + C8194 * C482) *
                C118) *
               C51169 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51275) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C636 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C631 +
            (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
             C8201 * C9036 + C8196 * C9038) *
                C637 +
            (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
             C8201 * C9039 + C8196 * C9042) *
                C632) *
               C51169) *
              C50974 * C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51275 +
           ((C9967 + C9968 + C9969) * C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C9970 + C9971 + C9972) * C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51169) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C51253 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C50999) *
              C1013 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C50999 -
           (((C13726 + C13727 + C13728) * C51028 +
             (C13729 + C13730 + C13731) * C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C51253) *
              C1014 +
          ((((C13731 + C13730 + C13729) * C118 +
             (C13728 + C13727 + C13726) * C51028) *
                C51275 +
            ((C8199 * C1247 + C8194 * C1255 + C8200 * C3757 + C8195 * C3763 +
              C8201 * C9461 + C8196 * C9465) *
                 C118 +
             (C8199 * C1254 + C8194 * C1259 + C8200 * C3762 + C8195 * C3766 +
              C8201 * C9464 + C8196 * C9467) *
                 C51028) *
                C51169) *
               C50974 * C51253 -
           (((C8201 * C9462 + C8196 * C9466 + C8200 * C3760 + C8195 * C3765 +
              C8199 * C1252 + C8194 * C1258) *
                 C51028 +
             (C8201 * C9460 + C8196 * C9463 + C8200 * C3756 + C8195 * C3761 +
              C8199 * C1246 + C8194 * C1253) *
                 C118) *
                C51169 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51275) *
               C50974 * C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C21083 +
           (C5675 + C5676) * C21084 + C16431 * C21085 +
           (C6579 + C6580) * C21086) *
              C50974 * C112 -
          (C16433 * C21086 + C6258 * C21085 + C5668 * C21084 +
           (C179 + C178) * C21083) *
              C50974 * C113 +
          (C188 * C21083 + C5359 * C21084 + C6257 * C21085 +
           (C6281 + C6282) * C21086) *
              C50974 * C114 -
          (((C117 * C1248 + C51127 * C1256) * C51028 +
            (C117 * C1244 + C51127 * C1249) * C118) *
               C21086 +
           (C1060 + C1059) * C21085 + C529 * C21084 + C191 * C21083) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C21083 +
           (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C21084 +
           (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C21085 +
           (C6577 * C635 + C6578 * C630 - C16608 * C636 - C16609 * C631 +
            (C117 * C9461 + C51127 * C9465) * C637 +
            (C117 * C9464 + C51127 * C9467) * C632) *
               C21086) *
              C50974 * C51253 +
          ((C661 - (C660 + C659) + C662 - C689 - C690) * C21083 +
           (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C21084 +
           (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C21085 +
           (C16610 * C636 - (C6274 * C630 + C6273 * C635) + C16611 * C631 -
            (C117 * C9460 + C51127 * C9463) * C637 -
            (C117 * C9462 + C51127 * C9466) * C632) *
               C21086) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C21083 +
            (C5675 + C5676) * C21084 + C16431 * C21085 + C21656 * C21086) *
               C50974 * C51253 -
           (C16433 * C21086 + C6258 * C21085 + C5668 * C21084 +
            (C179 + C178) * C21083) *
               C50974 * C50999) *
              C1013 +
          ((C5667 * C21083 + C6256 * C21084 + C16432 * C21085 +
            (C16440 + C16441) * C21086) *
               C50974 * C50999 -
           ((C16732 + C16731) * C21086 + C16724 * C21085 +
            (C6277 + C6278) * C21084 + (C5676 + C5675) * C21083) *
               C50974 * C51253) *
              C1014 +
          ((C16431 * C21083 + C21656 * C21084 + (C16731 + C16732) * C21085 +
            ((C117 * C16716 + C51127 * C16720) * C118 +
             (C117 * C16719 + C51127 * C16722) * C51028) *
                C21086) *
               C50974 * C51253 -
           (((C117 * C16717 + C51127 * C16721) * C51028 +
             (C117 * C16715 + C51127 * C16718) * C118) *
                C21086 +
            (C16441 + C16440) * C21085 + C16433 * C21084 + C6258 * C21083) *
               C50974 * C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51127 * C126) * C298 +
                 (C117 * C127 + C51127 * C140) * C51260 -
                 (C117 * C300 + C51127 * C306) * C299 -
                 (C117 * C307 + C51127 * C318) * C51044) *
                    C51275 +
                ((C117 * C476 + C51127 * C487) * C298 +
                 (C117 * C486 + C51127 * C494) * C51260 -
                 (C117 * C883 + C51127 * C891) * C299 -
                 (C117 * C892 + C51127 * C907) * C51044) *
                    C51169) *
                   C2446 +
               ((C325 + C326 - C359 - C360) * C51275 +
                (C1910 + C1909 - C1908 - C1911) * C51169) *
                   C2447 +
               C5516 * C2448) *
                  C295 +
              (((C359 - (C326 + C325) + C360) * C51275 +
                (C1908 - (C1909 + C1910) + C1911) * C51169) *
                   C2446 +
               ((C361 - (C332 + C331) + C362) * C51275 +
                (C1912 - (C1913 + C1914) + C1915) * C51169) *
                   C2447 +
               ((C363 - (C338 + C337) + C364) * C51275 +
                (C1916 - (C1917 + C1918) + C1919) * C51169) *
                   C2448) *
                  C296 +
              (C5516 * C2446 +
               (C370 * C51275 + (C1918 + C1917 - C1916 - C1919) * C51169) *
                   C2447 +
               ((C346 + C345 - C365 - C366) * C51275 +
                (C519 * C298 + C520 * C51260 -
                 (C117 * C1643 + C51127 * C1644) * C299 -
                 (C117 * C1645 + C51127 * C1646) * C51044) *
                    C51169) *
                   C2448) *
                  C297) *
             C51058 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C117 * C119 + C51127 * C126) * C765 +
                (C117 * C127 + C51127 * C140) * C760 -
                (C117 * C300 + C51127 * C306) * C766 -
                (C117 * C307 + C51127 * C318) * C761 +
                (C117 * C638 + C51127 * C643) * C767 +
                (C117 * C644 + C51127 * C653) * C762 -
                (C117 * C769 + C51127 * C773) * C768 -
                (C117 * C774 + C51127 * C781) * C763) *
                   C51275 +
               (C5672 * C765 + C5673 * C760 -
                (C117 * C883 + C51127 * C891) * C766 -
                (C117 * C892 + C51127 * C907) * C761 +
                (C117 * C884 + C51127 * C893) * C767 +
                (C117 * C894 + C51127 * C908) * C762 -
                (C117 * C3317 + C51127 * C3320) * C768 -
                (C117 * C3321 + C51127 * C3326) * C763) *
                   C51169) *
                  C2446 +
              ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
                C683 * C767 + C684 * C762 -
                (C117 * C770 + C51127 * C775) * C768 -
                (C117 * C776 + C51127 * C782) * C763) *
                   C51275 +
               (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
                C5840 * C767 + C5841 * C762 -
                (C117 * C3318 + C51127 * C3322) * C768 -
                (C117 * C3323 + C51127 * C3327) * C763) *
                   C51169) *
                  C2447 +
              ((C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 +
                C685 * C767 + C686 * C762 -
                (C117 * C771 + C51127 * C777) * C768 -
                (C117 * C778 + C51127 * C783) * C763) *
                   C51275 +
               (C515 * C765 + C516 * C760 - C1668 * C766 - C1669 * C761 +
                C5842 * C767 + C5843 * C762 -
                (C117 * C3319 + C51127 * C3324) * C768 -
                (C117 * C3325 + C51127 * C3328) * C763) *
                   C51169) *
                  C2448) *
             C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) * (((((C117 * C119 + C51127 * C126) * C298 +
                                 (C117 * C127 + C51127 * C140) * C51260 -
                                 (C117 * C300 + C51127 * C306) * C299 -
                                 (C117 * C307 + C51127 * C318) * C51044) *
                                    C51275 +
                                (C6429 + C6430 - C6431 - C6432) * C51169) *
                                   C2446 +
                               ((C325 + C326 - C359 - C360) * C51275 +
                                (C1910 + C1909 - C1908 - C1911) * C51169) *
                                   C2447 +
                               C5516 * C2448) *
                                  C50994 * C1013 +
                              (((C6431 - (C6430 + C6429) + C6432) * C51275 +
                                (C6457 - (C6435 + C6436) + C6458) * C51169) *
                                   C2446 +
                               ((C1908 - (C1909 + C1910) + C1911) * C51275 +
                                (C6459 - (C6441 + C6442) + C6460) * C51169) *
                                   C2447 +
                               ((C1912 - (C1913 + C1914) + C1915) * C51275 +
                                (C6461 - (C6447 + C6448) + C6462) * C51169) *
                                   C2448) *
                                  C50994 * C1014 +
                              (((C6436 + C6435 - C6457 - C6458) * C51275 +
                                ((C117 * C1247 + C51127 * C1255) * C298 +
                                 (C117 * C1254 + C51127 * C1259) * C51260 -
                                 (C117 * C3757 + C51127 * C3763) * C299 -
                                 (C117 * C3762 + C51127 * C3766) * C51044) *
                                    C51169) *
                                   C2446 +
                               ((C6442 + C6441 - C6459 - C6460) * C51275 +
                                (C6273 * C298 + C6274 * C51260 -
                                 (C117 * C3756 + C51127 * C3761) * C299 -
                                 (C117 * C3760 + C51127 * C3765) * C51044) *
                                    C51169) *
                                   C2447 +
                               ((C6448 + C6447 - C6461 - C6462) * C51275 +
                                (C6275 * C298 + C6276 * C51260 -
                                 (C117 * C3755 + C51127 * C3759) * C299 -
                                 (C117 * C3758 + C51127 * C3764) * C51044) *
                                    C51169) *
                                   C2448) *
                                  C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C298 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51260 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C299 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C51044) *
               C51169) *
              C50974 * C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51275 +
           ((C9967 + C9968 + C9969) * C299 -
            ((C8614 + C8613 + C8612) * C51260 +
             (C8611 + C8610 + C8609) * C298) +
            (C9970 + C9971 + C9972) * C51044) *
               C51169) *
              C50974 * C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51275 +
           ((C8615 + C8616 + C8617) * C298 + (C8618 + C8619 + C8620) * C51260 -
            (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
             C8199 * C887 + C8194 * C899) *
                C299 -
            (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
             C8199 * C900 + C8194 * C911) *
                C51044) *
               C51169) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51275 +
          ((C13136 + C13137 + C13138) * C765 +
           (C13139 + C13140 + C13141) * C760 -
           (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
            C8199 * C883 + C8194 * C891) *
               C766 -
           (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
            C8199 * C892 + C8194 * C907) *
               C761 +
           (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
            C8201 * C9036 + C8196 * C9038) *
               C767 +
           (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
            C8201 * C9039 + C8196 * C9042) *
               C762 -
           (C8201 * C11481 + C8196 * C11482 + C8200 * C9036 + C8195 * C9038 +
            C8199 * C3317 + C8194 * C3320) *
               C768 -
           (C8201 * C11483 + C8196 * C11484 + C8200 * C9039 + C8195 * C9042 +
            C8199 * C3321 + C8194 * C3326) *
               C763) *
              C51169) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C13136 + C13137 + C13138) * C298 +
            (C13139 + C13140 + C13141) * C51260 -
            (C13556 + C13557 + C13558) * C299 -
            (C13559 + C13560 + C13561) * C51044) *
               C51169) *
              C50974 * C50994 * C1013 +
          (((C13558 + C13557 + C13556) * C299 -
            ((C13141 + C13140 + C13139) * C51260 +
             (C13138 + C13137 + C13136) * C298) +
            (C13561 + C13560 + C13559) * C51044) *
               C51275 +
           ((C13890 + C13891 + C13892) * C299 -
            ((C13726 + C13727 + C13728) * C51260 +
             (C13729 + C13730 + C13731) * C298) +
            (C13893 + C13894 + C13895) * C51044) *
               C51169) *
              C50974 * C50994 * C1014 +
          (((C13731 + C13730 + C13729) * C298 +
            (C13728 + C13727 + C13726) * C51260 -
            (C13892 + C13891 + C13890) * C299 -
            (C13895 + C13894 + C13893) * C51044) *
               C51275 +
           ((C8199 * C1247 + C8194 * C1255 + C8200 * C3757 + C8195 * C3763 +
             C8201 * C9461 + C8196 * C9465) *
                C298 +
            (C8199 * C1254 + C8194 * C1259 + C8200 * C3762 + C8195 * C3766 +
             C8201 * C9464 + C8196 * C9467) *
                C51260 -
            (C8201 * C11751 + C8196 * C11753 + C8200 * C9461 + C8195 * C9465 +
             C8199 * C3757 + C8194 * C3763) *
                C299 -
            (C8201 * C11752 + C8196 * C11754 + C8200 * C9464 + C8195 * C9467 +
             C8199 * C3762 + C8194 * C3766) *
                C51044) *
               C51169) *
              C50974 * C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C298 +
            (C117 * C127 + C51127 * C140) * C51260 -
            (C117 * C300 + C51127 * C306) * C299 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C21083 +
           (C6429 + C6430 - C6431 - C6432) * C21084 + C16612 * C21085 +
           (C16597 + C16596 - C16614 - C16615) * C21086) *
              C50974 * C295 +
          ((C359 - (C326 + C325) + C360) * C21083 + C7453 * C21084 +
           C17577 * C21085 + (C16616 - (C16602 + C16603) + C16617) * C21086) *
              C50974 * C296 +
          (C369 * C21083 + C5514 * C21084 +
           (C6448 + C6447 - C6461 - C6462) * C21085 +
           (C6275 * C298 + C6276 * C51260 -
            (C117 * C3755 + C51127 * C3759) * C299 -
            (C117 * C3758 + C51127 * C3764) * C51044) *
               C21086) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C117 * C119 + C51127 * C126) * C765 +
           (C117 * C127 + C51127 * C140) * C760 -
           (C117 * C300 + C51127 * C306) * C766 -
           (C117 * C307 + C51127 * C318) * C761 +
           (C117 * C638 + C51127 * C643) * C767 +
           (C117 * C644 + C51127 * C653) * C762 -
           (C117 * C769 + C51127 * C773) * C768 -
           (C117 * C774 + C51127 * C781) * C763) *
              C21083 +
          (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
           C6104 * C767 + C6105 * C762 -
           (C117 * C3317 + C51127 * C3320) * C768 -
           (C117 * C3321 + C51127 * C3326) * C763) *
              C21084 +
          (C6272 * C765 + C6271 * C760 - C6451 * C766 - C6452 * C761 +
           C16281 * C767 + C16282 * C762 -
           (C117 * C9354 + C51127 * C9356) * C768 -
           (C117 * C9357 + C51127 * C9360) * C763) *
              C21085 +
          (C6577 * C765 + C6578 * C760 - C16608 * C766 - C16609 * C761 +
           (C117 * C9461 + C51127 * C9465) * C767 +
           (C117 * C9464 + C51127 * C9467) * C762 -
           (C117 * C11751 + C51127 * C11753) * C768 -
           (C117 * C11752 + C51127 * C11754) * C763) *
              C21086) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C298 +
            (C117 * C127 + C51127 * C140) * C51260 -
            (C117 * C300 + C51127 * C306) * C299 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C21083 +
           (C6429 + C6430 - C6431 - C6432) * C21084 + C16612 * C21085 +
           C21765 * C21086) *
              C50974 * C50994 * C1013 +
          ((C6431 - (C6430 + C6429) + C6432) * C21083 +
           (C6457 - (C6435 + C6436) + C6458) * C21084 +
           (C16614 - (C16596 + C16597) + C16615) * C21085 +
           (C21766 - (C21758 + C21759) + C21767) * C21086) *
              C50974 * C50994 * C1014 +
          (C16612 * C21083 + C21765 * C21084 +
           (C21759 + C21758 - C21766 - C21767) * C21085 +
           ((C117 * C16716 + C51127 * C16720) * C298 +
            (C117 * C16719 + C51127 * C16722) * C51260 -
            (C117 * C19519 + C51127 * C19521) * C299 -
            (C117 * C19520 + C51127 * C19522) * C51044) *
               C21086) *
              C50974 * C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (0.5 * std::pow(Pi, 2.5) *
             ((((((C117 * C119 + C51127 * C126) * C118 +
                  (C117 * C127 + C51127 * C140) * C51028) *
                     C51275 +
                 (C5675 + C5676) * C51169) *
                    C2446 +
                ((C178 + C179) * C51275 + C5667 * C51169) * C2447 +
                C5364 * C2448) *
                   C295 -
               (C5363 * C2448 +
                (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
                (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
                   C296 +
               (C5364 * C2446 + (C189 * C51275 + C5669 * C51169) * C2447 +
                ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
                   C297) *
                  C51262 +
              (((C5667 * C51275 + (C1055 + C1056) * C51169) * C2446 +
                (C5359 * C51275 + (C1057 + C1058) * C51169) * C2447 +
                (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
                   C296 -
               (C5677 * C2448 +
                ((C1056 + C1055) * C51169 + C5668 * C51275) * C2447 +
                (((C117 * C1022 + C51127 * C1031) * C51028 +
                  (C117 * C1016 + C51127 * C1021) * C118) *
                     C51169 +
                 (C5676 + C5675) * C51275) *
                    C2446) *
                   C295 -
               ((((C117 * C1029 + C51127 * C1035) * C51028 +
                  (C117 * C1020 + C51127 * C1030) * C118) *
                     C51169 +
                 (C528 + C527) * C51275) *
                    C2448 +
                ((C1060 + C1059) * C51169 + C529 * C51275) * C2447 +
                C5677 * C2446) *
                   C297) *
                  C51070) +
         0.5 * std::pow(Pi, 2.5) *
             (((((C117 * C119 + C51127 * C126) * C635 +
                 (C117 * C127 + C51127 * C140) * C630 -
                 (C117 * C300 + C51127 * C306) * C636 -
                 (C117 * C307 + C51127 * C318) * C631 +
                 (C117 * C638 + C51127 * C643) * C637 +
                 (C117 * C644 + C51127 * C653) * C632) *
                    C51275 +
                (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
                   C2446 +
               ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
                (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
                   C2447 +
               ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
                (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
                   C2448) *
                  C50994 * C51262 +
              (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C51275 +
                ((C117 * C1158 + C51127 * C1162) * C636 -
                 ((C117 * C1022 + C51127 * C1031) * C630 +
                  (C117 * C1016 + C51127 * C1021) * C635) +
                 (C117 * C1163 + C51127 * C1170) * C631 -
                 (C117 * C3645 + C51127 * C3648) * C637 -
                 (C117 * C3649 + C51127 * C3654) * C632) *
                    C51169) *
                   C2446 +
               ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51275 +
                ((C117 * C1159 + C51127 * C1164) * C636 -
                 (C1050 * C630 + C1049 * C635) +
                 (C117 * C1165 + C51127 * C1171) * C631 -
                 (C117 * C3646 + C51127 * C3650) * C637 -
                 (C117 * C3651 + C51127 * C3655) * C632) *
                    C51169) *
                   C2447 +
               ((C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51275 +
                ((C117 * C1160 + C51127 * C1166) * C636 -
                 (C1052 * C630 + C1051 * C635) +
                 (C117 * C1167 + C51127 * C1172) * C631 -
                 (C117 * C3647 + C51127 * C3652) * C637 -
                 (C117 * C3653 + C51127 * C3656) * C632) *
                    C51169) *
                   C2448) *
                  C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51275 +
            (C5675 + C5676) * C51169) *
               C2446 +
           ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
              C50994 * C1240 -
          (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
           ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
              C50994 * C1241 +
          (((C6278 + C6277) * C51275 + (C6579 + C6580) * C51169) * C2446 +
           (C6256 * C51275 + (C6279 + C6280) * C51169) * C2447 +
           (C6257 * C51275 + (C6281 + C6282) * C51169) * C2448) *
              C50994 * C1242 -
          ((((C117 * C6563 + C51127 * C6569) * C51028 +
             (C117 * C6560 + C51127 * C6564) * C118) *
                C51169 +
            (C6282 + C6281) * C51275) *
               C2448 +
           (((C117 * C6565 + C51127 * C6570) * C51028 +
             (C117 * C6561 + C51127 * C6566) * C118) *
                C51169 +
            (C6280 + C6279) * C51275) *
               C2447 +
           (((C117 * C6567 + C51127 * C6571) * C51028 +
             (C117 * C6562 + C51127 * C6568) * C118) *
                C51169 +
            (C6580 + C6579) * C51275) *
               C2446) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C295 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51275 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51169) *
               C50974 * C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C296 -
           (((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C51028 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C295 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51169 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51275) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C13556 + C13557 + C13558) * C636 -
            (C13559 + C13560 + C13561) * C631 +
            (C13562 + C13563 + C13564) * C637 +
            (C13565 + C13566 + C13567) * C632) *
               C51169) *
              C50974 * C50994 * C51262 +
          (((C13558 + C13557 + C13556) * C636 -
            ((C13141 + C13140 + C13139) * C630 +
             (C13138 + C13137 + C13136) * C635) +
            (C13561 + C13560 + C13559) * C631 -
            (C13564 + C13563 + C13562) * C637 -
            (C13567 + C13566 + C13565) * C632) *
               C51275 +
           ((C8199 * C1158 + C8194 * C1162 + C8200 * C3645 + C8195 * C3648 +
             C8201 * C9354 + C8196 * C9356) *
                C636 -
            ((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C630 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C635) +
            (C8199 * C1163 + C8194 * C1170 + C8200 * C3649 + C8195 * C3654 +
             C8201 * C9357 + C8196 * C9360) *
                C631 -
            (C8201 * C11681 + C8196 * C11682 + C8200 * C9354 + C8195 * C9356 +
             C8199 * C3645 + C8194 * C3648) *
                C637 -
            (C8201 * C11683 + C8196 * C11684 + C8200 * C9357 + C8195 * C9360 +
             C8199 * C3649 + C8194 * C3654) *
                C632) *
               C51169) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51275 +
           ((C13136 + C13137 + C13138) * C118 +
            (C13139 + C13140 + C13141) * C51028) *
               C51169) *
              C50974 * C50994 * C1240 -
          (((C13726 + C13727 + C13728) * C51028 +
            (C13729 + C13730 + C13731) * C118) *
               C51169 +
           ((C13141 + C13140 + C13139) * C51028 +
            (C13138 + C13137 + C13136) * C118) *
               C51275) *
              C50974 * C50994 * C1241 +
          (((C13731 + C13730 + C13729) * C118 +
            (C13728 + C13727 + C13726) * C51028) *
               C51275 +
           ((C14014 + C14015 + C14016) * C118 +
            (C14017 + C14018 + C14019) * C51028) *
               C51169) *
              C50974 * C50994 * C1242 -
          (((C8201 * C13995 + C8196 * C13999 + C8200 * C13996 + C8195 * C14000 +
             C8199 * C6567 + C8194 * C6571) *
                C51028 +
            (C8201 * C13993 + C8196 * C13997 + C8200 * C13994 + C8195 * C13998 +
             C8199 * C6562 + C8194 * C6568) *
                C118) *
               C51169 +
           ((C14019 + C14018 + C14017) * C51028 +
            (C14016 + C14015 + C14014) * C118) *
               C51275) *
              C50974 * C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C21083 +
            (C5675 + C5676) * C21084 + C16431 * C21085 +
            (C6579 + C6580) * C21086) *
               C50974 * C295 -
           (C16433 * C21086 + C6258 * C21085 + C5668 * C21084 +
            (C179 + C178) * C21083) *
               C50974 * C296 +
           (C188 * C21083 + C5359 * C21084 + C6257 * C21085 +
            (C6281 + C6282) * C21086) *
               C50974 * C297) *
              C51262 +
          ((C5667 * C21083 + C6256 * C21084 + C16432 * C21085 +
            (C16440 + C16441) * C21086) *
               C50974 * C296 -
           ((C16732 + C16731) * C21086 + C16724 * C21085 +
            (C6277 + C6278) * C21084 + (C5676 + C5675) * C21083) *
               C50974 * C295 -
           (((C117 * C6563 + C51127 * C6569) * C51028 +
             (C117 * C6560 + C51127 * C6564) * C118) *
                C21086 +
            (C6282 + C6281) * C21085 + C5670 * C21084 + C530 * C21083) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C21083 +
           (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C21084 +
           (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C21085 +
           (C21546 + C21547 - C21548 - C21549 + C21556 + C21557) * C21086) *
              C50974 * C50994 * C51262 +
          ((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C21083 +
           (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C21084 +
           (C21548 - (C21547 + C21546) + C21549 - C21556 - C21557) * C21085 +
           ((C117 * C13994 + C51127 * C13998) * C636 -
            (C16730 * C630 + C16729 * C635) +
            (C117 * C13996 + C51127 * C14000) * C631 -
            (C117 * C13993 + C51127 * C13997) * C637 -
            (C117 * C13995 + C51127 * C13999) * C632) *
               C21086) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C21083 +
           (C5675 + C5676) * C21084 + C16431 * C21085 + C21656 * C21086) *
              C50974 * C50994 * C1240 -
          (C21838 * C21086 + C16724 * C21085 + (C6277 + C6278) * C21084 +
           (C5676 + C5675) * C21083) *
              C50974 * C50994 * C1241 +
          (C16431 * C21083 + C21656 * C21084 + (C16731 + C16732) * C21085 +
           (C21845 + C21846) * C21086) *
              C50974 * C50994 * C1242 -
          (((C117 * C21834 + C51127 * C21836) * C51028 +
            (C117 * C21833 + C51127 * C21835) * C118) *
               C21086 +
           (C21846 + C21845) * C21085 + C21838 * C21084 + C16724 * C21083) *
              C50974 * C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C51305 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C51291 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51275 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51169) *
               C50974 * C1362) *
              C1775 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C51291 -
           (((C13726 + C13727 + C13728) * C51028 +
             (C13729 + C13730 + C13731) * C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C51305 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51169 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51275) *
               C50974 * C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C51305 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C51291 +
           (C5364 * C2446 + (C189 * C51275 + C5669 * C51169) * C2447 +
            ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
               C1362) *
              C1775 +
          (((C5667 * C51275 + C6256 * C51169) * C2446 +
            (C5359 * C51275 + C6257 * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C51291 -
           (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
               C51305 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C51275) *
                C2448 +
            ((C1060 + C1059) * C51169 + C529 * C51275) * C2447 +
            C5677 * C2446) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C21083 +
            (C5675 + C5676) * C21084 + C16431 * C21085 + C21656 * C21086) *
               C50974 * C51305 -
           (C16433 * C21086 + C6258 * C21085 + C5668 * C21084 +
            (C179 + C178) * C21083) *
               C50974 * C51291 +
           (C188 * C21083 + C5359 * C21084 + C6257 * C21085 +
            (C6281 + C6282) * C21086) *
               C50974 * C1362) *
              C1775 +
          ((C5667 * C21083 + C6256 * C21084 + C16432 * C21085 +
            (C16440 + C16441) * C21086) *
               C50974 * C51291 -
           (C21838 * C21086 + C16724 * C21085 + (C6277 + C6278) * C21084 +
            (C5676 + C5675) * C21083) *
               C50974 * C51305 -
           (((C117 * C6563 + C51127 * C6569) * C51028 +
             (C117 * C6560 + C51127 * C6564) * C118) *
                C21086 +
            (C6282 + C6281) * C21085 + C5670 * C21084 + C530 * C21083) *
               C50974 * C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C298 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51260 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C299 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51275 +
            ((C13136 + C13137 + C13138) * C298 +
             (C13139 + C13140 + C13141) * C51260 -
             (C13556 + C13557 + C13558) * C299 -
             (C13559 + C13560 + C13561) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8429 + C8428 + C8427) * C299 -
             ((C8244 + C8243 + C8242) * C51260 +
              (C8241 + C8240 + C8239) * C298) +
             (C8432 + C8431 + C8430) * C51044) *
                C51275 +
            ((C9967 + C9968 + C9969) * C299 -
             ((C8614 + C8613 + C8612) * C51260 +
              (C8611 + C8610 + C8609) * C298) +
             (C9970 + C9971 + C9972) * C51044) *
                C51169) *
               C50974 * C50999) *
              C1775 +
          ((((C13558 + C13557 + C13556) * C299 -
             ((C13141 + C13140 + C13139) * C51260 +
              (C13138 + C13137 + C13136) * C298) +
             (C13561 + C13560 + C13559) * C51044) *
                C51275 +
            ((C13890 + C13891 + C13892) * C299 -
             ((C13726 + C13727 + C13728) * C51260 +
              (C13729 + C13730 + C13731) * C298) +
             (C13893 + C13894 + C13895) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8609 + C8610 + C8611) * C298 + (C8612 + C8613 + C8614) * C51260 -
             (C9969 + C9968 + C9967) * C299 -
             (C9972 + C9971 + C9970) * C51044) *
                C51275 +
            ((C9203 + C9204 + C9205) * C298 + (C9206 + C9207 + C9208) * C51260 -
             (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
              C8199 * C1159 + C8194 * C1164) *
                 C299 -
             (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
              C8199 * C1165 + C8194 * C1171) *
                 C51044) *
                C51169) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C298 +
              (C117 * C127 + C51127 * C140) * C51260 -
              (C117 * C300 + C51127 * C306) * C299 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51275 +
             (C6429 + C6430 - C6431 - C6432) * C51169) *
                C2446 +
            ((C325 + C326 - C359 - C360) * C51275 + C7452 * C51169) * C2447 +
            C5516 * C2448) *
               C1490 +
           (((C359 - (C326 + C325) + C360) * C51275 + C7453 * C51169) * C2446 +
            ((C361 - (C332 + C331) + C362) * C51275 + C7454 * C51169) * C2447 +
            ((C363 - (C338 + C337) + C364) * C51275 +
             (C1916 - (C1917 + C1918) + C1919) * C51169) *
                C2448) *
               C50999) *
              C1775 +
          ((((C6431 - (C6430 + C6429) + C6432) * C51275 +
             (C6457 - (C6435 + C6436) + C6458) * C51169) *
                C2446 +
            (C7453 * C51275 + (C6459 - (C6441 + C6442) + C6460) * C51169) *
                C2447 +
            (C7454 * C51275 + (C6461 - (C6447 + C6448) + C6462) * C51169) *
                C2448) *
               C1490 +
           ((C7452 * C51275 + (C6442 + C6441 - C6459 - C6460) * C51169) *
                C2446 +
            (C5514 * C51275 + (C6448 + C6447 - C6461 - C6462) * C51169) *
                C2447 +
            ((C1918 + C1917 - C1916 - C1919) * C51275 +
             (C1053 * C298 + C1054 * C51260 -
              (C117 * C1161 + C51127 * C1168) * C299 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C21083 +
            (C6429 + C6430 - C6431 - C6432) * C21084 + C16612 * C21085 +
            C21765 * C21086) *
               C50974 * C1490 +
           ((C359 - (C326 + C325) + C360) * C21083 + C7453 * C21084 +
            C17577 * C21085 + (C16616 - (C16602 + C16603) + C16617) * C21086) *
               C50974 * C50999) *
              C1775 +
          (((C6431 - (C6430 + C6429) + C6432) * C21083 +
            (C6457 - (C6435 + C6436) + C6458) * C21084 +
            (C16614 - (C16596 + C16597) + C16615) * C21085 +
            (C21766 - (C21758 + C21759) + C21767) * C21086) *
               C50974 * C1490 +
           (C7452 * C21083 + C16613 * C21084 +
            (C16603 + C16602 - C16616 - C16617) * C21085 +
            (C16438 * C298 + C16439 * C51260 -
             (C117 * C16587 + C51127 * C16588) * C299 -
             (C117 * C16589 + C51127 * C16590) * C51044) *
                C21086) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C1490 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C50999) *
              C51307 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C50999 -
           (((C13726 + C13727 + C13728) * C51028 +
             (C13729 + C13730 + C13731) * C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C1490) *
              C51297 +
          ((((C13731 + C13730 + C13729) * C118 +
             (C13728 + C13727 + C13726) * C51028) *
                C51275 +
            ((C14014 + C14015 + C14016) * C118 +
             (C14017 + C14018 + C14019) * C51028) *
                C51169) *
               C50974 * C1490 -
           (((C8201 * C9462 + C8196 * C9466 + C8200 * C3760 + C8195 * C3765 +
              C8199 * C1252 + C8194 * C1258) *
                 C51028 +
             (C8201 * C9460 + C8196 * C9463 + C8200 * C3756 + C8195 * C3761 +
              C8199 * C1246 + C8194 * C1253) *
                 C118) *
                C51169 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51275) *
               C50974 * C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C1490 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C50999) *
              C51307 +
          (((C5667 * C51275 + C6256 * C51169) * C2446 +
            (C5359 * C51275 + C6257 * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C50999 -
           (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
               C1490) *
              C51297 +
          ((((C6278 + C6277) * C51275 + (C6579 + C6580) * C51169) * C2446 +
            (C6256 * C51275 + (C6279 + C6280) * C51169) * C2447 +
            (C6257 * C51275 + (C6281 + C6282) * C51169) * C2448) *
               C1490 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C51169 +
             (C1060 + C1059) * C51275) *
                C2448 +
            ((C6282 + C6281) * C51169 + C5670 * C51275) * C2447 +
            ((C6280 + C6279) * C51169 + C6258 * C51275) * C2446) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C21083 +
            (C5675 + C5676) * C21084 + C16431 * C21085 + C21656 * C21086) *
               C50974 * C1490 -
           (C16433 * C21086 + C6258 * C21085 + C5668 * C21084 +
            (C179 + C178) * C21083) *
               C50974 * C50999) *
              C51307 +
          ((C5667 * C21083 + C6256 * C21084 + C16432 * C21085 +
            (C16440 + C16441) * C21086) *
               C50974 * C50999 -
           (C21838 * C21086 + C16724 * C21085 + (C6277 + C6278) * C21084 +
            (C5676 + C5675) * C21083) *
               C50974 * C1490) *
              C51297 +
          ((C16431 * C21083 + C21656 * C21084 + (C16731 + C16732) * C21085 +
            (C21845 + C21846) * C21086) *
               C50974 * C1490 -
           (((C117 * C16717 + C51127 * C16721) * C51028 +
             (C117 * C16715 + C51127 * C16718) * C118) *
                C21086 +
            (C16441 + C16440) * C21085 + C16433 * C21084 + C6258 * C21083) *
               C50974 * C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51275 +
            (C5672 * C635 + C5673 * C630 -
             (C117 * C883 + C51127 * C891) * C636 -
             (C117 * C892 + C51127 * C907) * C631 +
             (C117 * C884 + C51127 * C893) * C637 +
             (C117 * C894 + C51127 * C908) * C632) *
                C51169) *
               C2446 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C2447 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C2448) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C51275 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51169) *
               C2446 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C51275 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51169) *
               C2447 +
           ((C677 - (C676 + C675) + C678 - C693 - C694) * C51275 +
            (C1670 * C636 - (C518 * C630 + C517 * C635) + C1671 * C631 -
             (C117 * C890 + C51127 * C905) * C637 -
             (C117 * C906 + C51127 * C914) * C632) *
                C51169) *
               C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51275 +
            ((C117 * C476 + C51127 * C487) * C118 +
             (C117 * C486 + C51127 * C494) * C51028) *
                C51169) *
               C2446 +
           ((C178 + C179) * C51275 + (C521 + C522) * C51169) * C2447 +
           C5364 * C2448) *
              C112 -
          (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
           ((C522 + C521) * C51169 + (C179 + C178) * C51275) * C2446) *
              C113 +
          (C5364 * C2446 + (C189 * C51275 + (C525 + C526) * C51169) * C2447 +
           ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
              C114 -
          ((((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51169 +
            (C187 + C186) * C51275) *
               C2448 +
           ((C528 + C527) * C51169 + C190 * C51275) * C2447 + C5363 * C2446) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C118 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51028) *
               C51169) *
              C50974 * C112 -
          (((C8614 + C8613 + C8612) * C51028 + (C8611 + C8610 + C8609) * C118) *
               C51169 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51275) *
              C50974 * C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51275 +
           ((C8615 + C8616 + C8617) * C118 + (C8618 + C8619 + C8620) * C51028) *
               C51169) *
              C50974 * C114 -
          (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
             C8199 * C483 + C8194 * C492) *
                C51028 +
            (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
             C8199 * C474 + C8194 * C482) *
                C118) *
               C51169 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51275) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C636 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C631 +
            (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
             C8201 * C9036 + C8196 * C9038) *
                C637 +
            (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
             C8201 * C9039 + C8196 * C9042) *
                C632) *
               C51169) *
              C50974 * C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51275 +
           ((C9967 + C9968 + C9969) * C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C9970 + C9971 + C9972) * C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51169) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C21083 +
           (C5675 + C5676) * C21084 + C16431 * C21085 +
           (C6579 + C6580) * C21086) *
              C50974 * C112 -
          (C16433 * C21086 + C6258 * C21085 + C5668 * C21084 +
           (C179 + C178) * C21083) *
              C50974 * C113 +
          (C188 * C21083 + C5359 * C21084 + C6257 * C21085 +
           (C6281 + C6282) * C21086) *
              C50974 * C114 -
          (((C117 * C1248 + C51127 * C1256) * C51028 +
            (C117 * C1244 + C51127 * C1249) * C118) *
               C21086 +
           (C1060 + C1059) * C21085 + C529 * C21084 + C191 * C21083) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C21083 +
           (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C21084 +
           (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C21085 +
           (C6577 * C635 + C6578 * C630 - C16608 * C636 - C16609 * C631 +
            (C117 * C9461 + C51127 * C9465) * C637 +
            (C117 * C9464 + C51127 * C9467) * C632) *
               C21086) *
              C50974 * C51253 +
          ((C661 - (C660 + C659) + C662 - C689 - C690) * C21083 +
           (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C21084 +
           (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C21085 +
           (C16610 * C636 - (C6274 * C630 + C6273 * C635) + C16611 * C631 -
            (C117 * C9460 + C51127 * C9463) * C637 -
            (C117 * C9462 + C51127 * C9466) * C632) *
               C21086) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C51275 +
           (C5672 * C765 + C5673 * C760 - (C117 * C883 + C51127 * C891) * C766 -
            (C117 * C892 + C51127 * C907) * C761 +
            (C117 * C884 + C51127 * C893) * C767 +
            (C117 * C894 + C51127 * C908) * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C51169) *
              C2446 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C51275 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C51169) *
              C2447 +
          ((C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 +
            C685 * C767 + C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
            (C117 * C778 + C51127 * C783) * C763) *
               C51275 +
           (C515 * C765 + C516 * C760 - C1668 * C766 - C1669 * C761 +
            C5842 * C767 + C5843 * C762 -
            (C117 * C3319 + C51127 * C3324) * C768 -
            (C117 * C3325 + C51127 * C3328) * C763) *
               C51169) *
              C2448) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            ((C117 * C476 + C51127 * C487) * C298 +
             (C117 * C486 + C51127 * C494) * C51260 -
             (C117 * C883 + C51127 * C891) * C299 -
             (C117 * C892 + C51127 * C907) * C51044) *
                C51169) *
               C2446 +
           ((C325 + C326 - C359 - C360) * C51275 +
            (C1910 + C1909 - C1908 - C1911) * C51169) *
               C2447 +
           C5516 * C2448) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C51275 +
            (C1908 - (C1909 + C1910) + C1911) * C51169) *
               C2446 +
           ((C361 - (C332 + C331) + C362) * C51275 +
            (C1912 - (C1913 + C1914) + C1915) * C51169) *
               C2447 +
           ((C363 - (C338 + C337) + C364) * C51275 +
            (C1916 - (C1917 + C1918) + C1919) * C51169) *
               C2448) *
              C296 +
          (C5516 * C2446 +
           (C370 * C51275 + (C1918 + C1917 - C1916 - C1919) * C51169) * C2447 +
           ((C346 + C345 - C365 - C366) * C51275 +
            (C519 * C298 + C520 * C51260 -
             (C117 * C1643 + C51127 * C1644) * C299 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C2448) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C298 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51260 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C299 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C51044) *
               C51169) *
              C50974 * C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51275 +
           ((C9967 + C9968 + C9969) * C299 -
            ((C8614 + C8613 + C8612) * C51260 +
             (C8611 + C8610 + C8609) * C298) +
            (C9970 + C9971 + C9972) * C51044) *
               C51169) *
              C50974 * C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51275 +
           ((C8615 + C8616 + C8617) * C298 + (C8618 + C8619 + C8620) * C51260 -
            (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
             C8199 * C887 + C8194 * C899) *
                C299 -
            (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
             C8199 * C900 + C8194 * C911) *
                C51044) *
               C51169) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51275 +
          ((C13136 + C13137 + C13138) * C765 +
           (C13139 + C13140 + C13141) * C760 -
           (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
            C8199 * C883 + C8194 * C891) *
               C766 -
           (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
            C8199 * C892 + C8194 * C907) *
               C761 +
           (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
            C8201 * C9036 + C8196 * C9038) *
               C767 +
           (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
            C8201 * C9039 + C8196 * C9042) *
               C762 -
           (C8201 * C11481 + C8196 * C11482 + C8200 * C9036 + C8195 * C9038 +
            C8199 * C3317 + C8194 * C3320) *
               C768 -
           (C8201 * C11483 + C8196 * C11484 + C8200 * C9039 + C8195 * C9042 +
            C8199 * C3321 + C8194 * C3326) *
               C763) *
              C51169) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C298 +
            (C117 * C127 + C51127 * C140) * C51260 -
            (C117 * C300 + C51127 * C306) * C299 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C21083 +
           (C6429 + C6430 - C6431 - C6432) * C21084 + C16612 * C21085 +
           (C16597 + C16596 - C16614 - C16615) * C21086) *
              C50974 * C295 +
          ((C359 - (C326 + C325) + C360) * C21083 + C7453 * C21084 +
           C17577 * C21085 + (C16616 - (C16602 + C16603) + C16617) * C21086) *
              C50974 * C296 +
          (C369 * C21083 + C5514 * C21084 +
           (C6448 + C6447 - C6461 - C6462) * C21085 +
           (C6275 * C298 + C6276 * C51260 -
            (C117 * C3755 + C51127 * C3759) * C299 -
            (C117 * C3758 + C51127 * C3764) * C51044) *
               C21086) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51127 * C126) * C765 +
           (C117 * C127 + C51127 * C140) * C760 -
           (C117 * C300 + C51127 * C306) * C766 -
           (C117 * C307 + C51127 * C318) * C761 +
           (C117 * C638 + C51127 * C643) * C767 +
           (C117 * C644 + C51127 * C653) * C762 -
           (C117 * C769 + C51127 * C773) * C768 -
           (C117 * C774 + C51127 * C781) * C763) *
              C21083 +
          (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
           C6104 * C767 + C6105 * C762 -
           (C117 * C3317 + C51127 * C3320) * C768 -
           (C117 * C3321 + C51127 * C3326) * C763) *
              C21084 +
          (C6272 * C765 + C6271 * C760 - C6451 * C766 - C6452 * C761 +
           C16281 * C767 + C16282 * C762 -
           (C117 * C9354 + C51127 * C9356) * C768 -
           (C117 * C9357 + C51127 * C9360) * C763) *
              C21085 +
          (C6577 * C765 + C6578 * C760 - C16608 * C766 - C16609 * C761 +
           (C117 * C9461 + C51127 * C9465) * C767 +
           (C117 * C9464 + C51127 * C9467) * C762 -
           (C117 * C11751 + C51127 * C11753) * C768 -
           (C117 * C11752 + C51127 * C11754) * C763) *
              C21086) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51275 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
               C2446 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C2447 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C2448) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C51275 +
            ((C117 * C1158 + C51127 * C1162) * C636 -
             ((C117 * C1022 + C51127 * C1031) * C630 +
              (C117 * C1016 + C51127 * C1021) * C635) +
             (C117 * C1163 + C51127 * C1170) * C631 -
             (C117 * C3645 + C51127 * C3648) * C637 -
             (C117 * C3649 + C51127 * C3654) * C632) *
                C51169) *
               C2446 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51275 +
            ((C117 * C1159 + C51127 * C1164) * C636 -
             (C1050 * C630 + C1049 * C635) +
             (C117 * C1165 + C51127 * C1171) * C631 -
             (C117 * C3646 + C51127 * C3650) * C637 -
             (C117 * C3651 + C51127 * C3655) * C632) *
                C51169) *
               C2447 +
           ((C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51275 +
            ((C117 * C1160 + C51127 * C1166) * C636 -
             (C1052 * C630 + C1051 * C635) +
             (C117 * C1167 + C51127 * C1172) * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C51169) *
               C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C295 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C296 +
           (C5364 * C2446 + (C189 * C51275 + C5669 * C51169) * C2447 +
            ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
               C297) *
              C51262 +
          (((C5667 * C51275 + (C1055 + C1056) * C51169) * C2446 +
            (C5359 * C51275 + (C1057 + C1058) * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C296 -
           (C5677 * C2448 +
            ((C1056 + C1055) * C51169 + C5668 * C51275) * C2447 +
            (((C117 * C1022 + C51127 * C1031) * C51028 +
              (C117 * C1016 + C51127 * C1021) * C118) *
                 C51169 +
             (C5676 + C5675) * C51275) *
                C2446) *
               C295 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C51275) *
                C2448 +
            ((C1060 + C1059) * C51169 + C529 * C51275) * C2447 +
            C5677 * C2446) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C295 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51275 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51169) *
               C50974 * C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C296 -
           (((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C51028 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C295 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51169 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51275) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C13556 + C13557 + C13558) * C636 -
            (C13559 + C13560 + C13561) * C631 +
            (C13562 + C13563 + C13564) * C637 +
            (C13565 + C13566 + C13567) * C632) *
               C51169) *
              C50974 * C50994 * C51262 +
          (((C13558 + C13557 + C13556) * C636 -
            ((C13141 + C13140 + C13139) * C630 +
             (C13138 + C13137 + C13136) * C635) +
            (C13561 + C13560 + C13559) * C631 -
            (C13564 + C13563 + C13562) * C637 -
            (C13567 + C13566 + C13565) * C632) *
               C51275 +
           ((C8199 * C1158 + C8194 * C1162 + C8200 * C3645 + C8195 * C3648 +
             C8201 * C9354 + C8196 * C9356) *
                C636 -
            ((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C630 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C635) +
            (C8199 * C1163 + C8194 * C1170 + C8200 * C3649 + C8195 * C3654 +
             C8201 * C9357 + C8196 * C9360) *
                C631 -
            (C8201 * C11681 + C8196 * C11682 + C8200 * C9354 + C8195 * C9356 +
             C8199 * C3645 + C8194 * C3648) *
                C637 -
            (C8201 * C11683 + C8196 * C11684 + C8200 * C9357 + C8195 * C9360 +
             C8199 * C3649 + C8194 * C3654) *
                C632) *
               C51169) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C21083 +
            (C5675 + C5676) * C21084 + C16431 * C21085 +
            (C6579 + C6580) * C21086) *
               C50974 * C295 -
           (C16433 * C21086 + C6258 * C21085 + C5668 * C21084 +
            (C179 + C178) * C21083) *
               C50974 * C296 +
           (C188 * C21083 + C5359 * C21084 + C6257 * C21085 +
            (C6281 + C6282) * C21086) *
               C50974 * C297) *
              C51262 +
          ((C5667 * C21083 + C6256 * C21084 + C16432 * C21085 +
            (C16440 + C16441) * C21086) *
               C50974 * C296 -
           ((C16732 + C16731) * C21086 + C16724 * C21085 +
            (C6277 + C6278) * C21084 + (C5676 + C5675) * C21083) *
               C50974 * C295 -
           (((C117 * C6563 + C51127 * C6569) * C51028 +
             (C117 * C6560 + C51127 * C6564) * C118) *
                C21086 +
            (C6282 + C6281) * C21085 + C5670 * C21084 + C530 * C21083) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C21083 +
           (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C21084 +
           (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C21085 +
           (C21546 + C21547 - C21548 - C21549 + C21556 + C21557) * C21086) *
              C50974 * C50994 * C51262 +
          ((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C21083 +
           (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C21084 +
           (C21548 - (C21547 + C21546) + C21549 - C21556 - C21557) * C21085 +
           ((C117 * C13994 + C51127 * C13998) * C636 -
            (C16730 * C630 + C16729 * C635) +
            (C117 * C13996 + C51127 * C14000) * C631 -
            (C117 * C13993 + C51127 * C13997) * C637 -
            (C117 * C13995 + C51127 * C13999) * C632) *
               C21086) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C32271 +
            (C7085 + C7086 - C7087 - C7088) * C51169) *
               C51304 +
           ((C1366 + C1367 - C1368 - C1369) * C32271 + C7103 * C51169) *
               C51288 +
           C33506 * C22939) *
              C51305 +
          (((C1368 - (C1367 + C1366) + C1369) * C32271 + C7104 * C51169) *
               C51304 +
           ((C1372 - (C1371 + C1370) + C1373) * C32271 + C7105 * C51169) *
               C51288 +
           ((C1376 - (C1375 + C1374) + C1377) * C32271 +
            (C1676 - (C1662 + C1663) + C1677) * C51169) *
               C22939) *
              C51291 +
          (C33506 * C51304 +
           (C1387 * C32271 + (C1663 + C1662 - C1676 - C1677) * C51169) *
               C51288 +
           ((C1380 + C1379 - C1378 - C1381) * C32271 +
            (C519 * C1363 + C520 * C1358 -
             (C117 * C1643 + C51127 * C1644) * C1364 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C22939) *
              C1362) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C32271 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C51169) *
               C51304 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C32271 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51169) *
               C51288 +
           ((C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C32271 +
            (C6885 + C6886 - C6887 - C6888 + C6889 + C6890) * C51169) *
               C22939) *
              C1490 +
          (((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C32271 +
            (C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C51169) *
               C51304 +
           ((C1504 - (C1503 + C1502) + C1505 - C1506 - C1507) * C32271 +
            (C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C51169) *
               C51288 +
           ((C1510 - (C1509 + C1508) + C1511 - C1512 - C1513) * C32271 +
            (C1670 * C1493 - (C518 * C51306 + C517 * C1492) + C1671 * C51294 -
             (C117 * C890 + C51127 * C905) * C1494 -
             (C117 * C906 + C51127 * C914) * C1489) *
                C51169) *
               C22939) *
              C50999) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C32271 +
             (C7085 + C7086 - C7087 - C7088) * C51169) *
                C51304 +
            ((C1366 + C1367 - C1368 - C1369) * C32271 + C7103 * C51169) *
                C51288 +
            C33506 * C22939) *
               C1490 +
           (((C1368 - (C1367 + C1366) + C1369) * C32271 + C7104 * C51169) *
                C51304 +
            ((C1372 - (C1371 + C1370) + C1373) * C32271 + C7105 * C51169) *
                C51288 +
            ((C1376 - (C1375 + C1374) + C1377) * C32271 +
             (C1676 - (C1662 + C1663) + C1677) * C51169) *
                C22939) *
               C50999) *
              C51262 +
          ((((C7087 - (C7086 + C7085) + C7088) * C32271 +
             (C8093 - (C8094 + C8095) + C8096) * C51169) *
                C51304 +
            (C7104 * C32271 + C17234 * C51169) * C51288 +
            (C7105 * C32271 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
                C22939) *
               C1490 +
           ((C7103 * C32271 + C17233 * C51169) * C51304 +
            (C6730 * C32271 + (C7098 + C7097 - C7096 - C7099) * C51169) *
                C51288 +
            ((C1663 + C1662 - C1676 - C1677) * C32271 +
             (C1053 * C1363 + C1054 * C1358 -
              (C117 * C1161 + C51127 * C1168) * C1364 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C22939) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C32271 +
             (C7085 + C7086 - C7087 - C7088) * C51169) *
                C51304 +
            ((C1366 + C1367 - C1368 - C1369) * C32271 + C7103 * C51169) *
                C51288 +
            C33506 * C22939) *
               C51253 +
           (((C1368 - (C1367 + C1366) + C1369) * C32271 + C7104 * C51169) *
                C51304 +
            ((C1372 - (C1371 + C1370) + C1373) * C32271 + C7105 * C51169) *
                C51288 +
            ((C1376 - (C1375 + C1374) + C1377) * C32271 +
             (C1676 - (C1662 + C1663) + C1677) * C51169) *
                C22939) *
               C50999) *
              C1775 +
          ((((C7087 - (C7086 + C7085) + C7088) * C32271 +
             (C8093 - (C8094 + C8095) + C8096) * C51169) *
                C51304 +
            (C7104 * C32271 + C17234 * C51169) * C51288 +
            (C7105 * C32271 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
                C22939) *
               C51253 +
           ((C7103 * C32271 + C17233 * C51169) * C51304 +
            (C6730 * C32271 + (C7098 + C7097 - C7096 - C7099) * C51169) *
                C51288 +
            ((C1663 + C1662 - C1676 - C1677) * C32271 +
             (C1053 * C1363 + C1054 * C1358 -
              (C117 * C1161 + C51127 * C1168) * C1364 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C22939) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C32271 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C51169) *
               C51304 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C32271 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51169) *
               C51288 +
           ((C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C32271 +
            (C6885 + C6886 - C6887 - C6888 + C6889 + C6890) * C51169) *
               C22939) *
              C50994 * C1775 +
          (((C7943 - (C7942 + C7941) + C7944 - C7945 - C7946) * C32271 +
            (C18066 - (C18065 + C18064) + C18067 - C18068 - C18069) * C51169) *
               C51304 +
           ((C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C32271 +
            (C17027 - (C17026 + C17025) + C17028 - C17029 - C17030) * C51169) *
               C51288 +
           ((C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C32271 +
            (C6455 * C1493 - (C1052 * C51306 + C1051 * C1492) + C6456 * C51294 -
             (C117 * C3647 + C51127 * C3652) * C1494 -
             (C117 * C3653 + C51127 * C3656) * C1489) *
                C51169) *
               C22939) *
              C50994 * C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C32271 +
            (C7085 + C7086 - C7087 - C7088) * C51169) *
               C51304 +
           ((C1366 + C1367 - C1368 - C1369) * C32271 + C7103 * C51169) *
               C51288 +
           C33506 * C22939) *
              C50994 * C51307 +
          (((C7087 - (C7086 + C7085) + C7088) * C32271 +
            (C8093 - (C8094 + C8095) + C8096) * C51169) *
               C51304 +
           (C7104 * C32271 + C17234 * C51169) * C51288 +
           (C7105 * C32271 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
               C22939) *
              C50994 * C51297 +
          ((C18222 * C32271 + C22837 * C51169) * C51304 +
           (C17233 * C32271 + (C17229 + C17228 - C17227 - C17230) * C51169) *
               C51288 +
           ((C7098 + C7097 - C7096 - C7099) * C32271 +
            (C6275 * C1363 + C6276 * C1358 -
             (C117 * C3755 + C51127 * C3759) * C1364 -
             (C117 * C3758 + C51127 * C3764) * C51044) *
                C51169) *
               C22939) *
              C50994 * C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C32271 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
               C51304 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C32271 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C51288 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C32271 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C22939) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C32271 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51169) *
               C51304 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C32271 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51169) *
               C51288 +
           ((C677 - (C676 + C675) + C678 - C693 - C694) * C32271 +
            (C1670 * C636 - (C518 * C630 + C517 * C635) + C1671 * C631 -
             (C117 * C890 + C51127 * C905) * C637 -
             (C117 * C906 + C51127 * C914) * C632) *
                C51169) *
               C22939) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C32271 +
            (C5675 + C5676) * C51169) *
               C51304 +
           ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
           C32278 * C22939) *
              C112 -
          (C32279 * C22939 + (C530 * C51169 + (C181 + C180) * C32271) * C51288 +
           (C5668 * C51169 + (C179 + C178) * C32271) * C51304) *
              C113 +
          (C32278 * C51304 + (C189 * C32271 + C5669 * C51169) * C51288 +
           ((C185 + C184) * C32271 + (C527 + C528) * C51169) * C22939) *
              C114 -
          ((((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51169 +
            (C187 + C186) * C32271) *
               C22939 +
           ((C528 + C527) * C51169 + C190 * C32271) * C51288 +
           C32279 * C51304) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C32271 +
             (C5675 + C5676) * C51169) *
                C51304 +
            ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
            C32278 * C22939) *
               C51253 -
           (C32279 * C22939 +
            (C530 * C51169 + (C181 + C180) * C32271) * C51288 +
            (C5668 * C51169 + (C179 + C178) * C32271) * C51304) *
               C50999) *
              C1013 +
          (((C5667 * C32271 + C6256 * C51169) * C51304 +
            (C5359 * C32271 + C6257 * C51169) * C51288 +
            (C5669 * C32271 + (C1059 + C1060) * C51169) * C22939) *
               C50999 -
           (C32577 * C22939 + (C6258 * C51169 + C5668 * C32271) * C51288 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C32271) * C51304) *
               C51253) *
              C1014 +
          (((C16431 * C32271 + C21656 * C51169) * C51304 +
            (C6256 * C32271 + C16432 * C51169) * C51288 +
            (C6257 * C32271 + (C6281 + C6282) * C51169) * C22939) *
               C51253 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C51169 +
             (C1060 + C1059) * C32271) *
                C22939 +
            ((C6282 + C6281) * C51169 + C5670 * C32271) * C51288 +
            (C16433 * C51169 + C6258 * C32271) * C51304) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C32271 +
           (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
            C6104 * C767 + C6105 * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C51169) *
              C51304 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C32271 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C51169) *
              C51288 +
          ((C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 +
            C685 * C767 + C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
            (C117 * C778 + C51127 * C783) * C763) *
               C32271 +
           (C515 * C765 + C516 * C760 - C1668 * C766 - C1669 * C761 +
            C5842 * C767 + C5843 * C762 -
            (C117 * C3319 + C51127 * C3324) * C768 -
            (C117 * C3325 + C51127 * C3328) * C763) *
               C51169) *
              C22939) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C32271 +
            (C6429 + C6430 - C6431 - C6432) * C51169) *
               C51304 +
           ((C325 + C326 - C359 - C360) * C32271 + C7452 * C51169) * C51288 +
           C32428 * C22939) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C32271 + C7453 * C51169) * C51304 +
           ((C361 - (C332 + C331) + C362) * C32271 + C7454 * C51169) * C51288 +
           ((C363 - (C338 + C337) + C364) * C32271 +
            (C1916 - (C1917 + C1918) + C1919) * C51169) *
               C22939) *
              C296 +
          (C32428 * C51304 +
           (C370 * C32271 + (C1918 + C1917 - C1916 - C1919) * C51169) * C51288 +
           ((C346 + C345 - C365 - C366) * C32271 +
            (C519 * C298 + C520 * C51260 -
             (C117 * C1643 + C51127 * C1644) * C299 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C22939) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C32271 +
            (C6429 + C6430 - C6431 - C6432) * C51169) *
               C51304 +
           ((C325 + C326 - C359 - C360) * C32271 + C7452 * C51169) * C51288 +
           C32428 * C22939) *
              C50994 * C1013 +
          (((C6431 - (C6430 + C6429) + C6432) * C32271 +
            (C6457 - (C6435 + C6436) + C6458) * C51169) *
               C51304 +
           (C7453 * C32271 + C17577 * C51169) * C51288 +
           (C7454 * C32271 + (C6461 - (C6447 + C6448) + C6462) * C51169) *
               C22939) *
              C50994 * C1014 +
          ((C16612 * C32271 + C21765 * C51169) * C51304 +
           (C16613 * C32271 + (C16603 + C16602 - C16616 - C16617) * C51169) *
               C51288 +
           ((C6448 + C6447 - C6461 - C6462) * C32271 +
            (C6275 * C298 + C6276 * C51260 -
             (C117 * C3755 + C51127 * C3759) * C299 -
             (C117 * C3758 + C51127 * C3764) * C51044) *
                C51169) *
               C22939) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C32271 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
               C51304 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C32271 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C51288 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C32271 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C22939) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C32271 +
            (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C51169) *
               C51304 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C32271 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C51169) *
               C51288 +
           ((C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C32271 +
            (C6455 * C636 - (C1052 * C630 + C1051 * C635) + C6456 * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C51169) *
               C22939) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C32271 +
             (C5675 + C5676) * C51169) *
                C51304 +
            ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
            C32278 * C22939) *
               C295 -
           (C32279 * C22939 +
            (C530 * C51169 + (C181 + C180) * C32271) * C51288 +
            (C5668 * C51169 + (C179 + C178) * C32271) * C51304) *
               C296 +
           (C32278 * C51304 + (C189 * C32271 + C5669 * C51169) * C51288 +
            ((C185 + C184) * C32271 + (C527 + C528) * C51169) * C22939) *
               C297) *
              C51262 +
          (((C5667 * C32271 + C6256 * C51169) * C51304 +
            (C5359 * C32271 + C6257 * C51169) * C51288 +
            (C5669 * C32271 + (C1059 + C1060) * C51169) * C22939) *
               C296 -
           (C32577 * C22939 + (C6258 * C51169 + C5668 * C32271) * C51288 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C32271) * C51304) *
               C295 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C32271) *
                C22939 +
            ((C1060 + C1059) * C51169 + C529 * C32271) * C51288 +
            C32577 * C51304) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C32271 +
            (C5675 + C5676) * C51169) *
               C51304 +
           ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
           C32278 * C22939) *
              C50994 * C1240 -
          (C32577 * C22939 + (C6258 * C51169 + C5668 * C32271) * C51288 +
           ((C6277 + C6278) * C51169 + (C5676 + C5675) * C32271) * C51304) *
              C50994 * C1241 +
          ((C16431 * C32271 + C21656 * C51169) * C51304 +
           (C6256 * C32271 + C16432 * C51169) * C51288 +
           (C6257 * C32271 + (C6281 + C6282) * C51169) * C22939) *
              C50994 * C1242 -
          ((((C117 * C6563 + C51127 * C6569) * C51028 +
             (C117 * C6560 + C51127 * C6564) * C118) *
                C51169 +
            (C6282 + C6281) * C32271) *
               C22939 +
           ((C16441 + C16440) * C51169 + C16433 * C32271) * C51288 +
           (C21838 * C51169 + C16724 * C32271) * C51304) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C32271 +
             (C5675 + C5676) * C51169) *
                C51304 +
            ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
            C32278 * C22939) *
               C51305 -
           (C32279 * C22939 +
            (C530 * C51169 + (C181 + C180) * C32271) * C51288 +
            (C5668 * C51169 + (C179 + C178) * C32271) * C51304) *
               C51291 +
           (C32278 * C51304 + (C189 * C32271 + C5669 * C51169) * C51288 +
            ((C185 + C184) * C32271 + (C527 + C528) * C51169) * C22939) *
               C1362) *
              C1775 +
          (((C5667 * C32271 + C6256 * C51169) * C51304 +
            (C5359 * C32271 + C6257 * C51169) * C51288 +
            (C5669 * C32271 + (C1059 + C1060) * C51169) * C22939) *
               C51291 -
           (C32577 * C22939 + (C6258 * C51169 + C5668 * C32271) * C51288 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C32271) * C51304) *
               C51305 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C32271) *
                C22939 +
            ((C1060 + C1059) * C51169 + C529 * C32271) * C51288 +
            C32577 * C51304) *
               C1362) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C298 +
              (C117 * C127 + C51127 * C140) * C51260 -
              (C117 * C300 + C51127 * C306) * C299 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C32271 +
             (C6429 + C6430 - C6431 - C6432) * C51169) *
                C51304 +
            ((C325 + C326 - C359 - C360) * C32271 + C7452 * C51169) * C51288 +
            C32428 * C22939) *
               C1490 +
           (((C359 - (C326 + C325) + C360) * C32271 + C7453 * C51169) * C51304 +
            ((C361 - (C332 + C331) + C362) * C32271 + C7454 * C51169) * C51288 +
            ((C363 - (C338 + C337) + C364) * C32271 +
             (C1916 - (C1917 + C1918) + C1919) * C51169) *
                C22939) *
               C50999) *
              C1775 +
          ((((C6431 - (C6430 + C6429) + C6432) * C32271 +
             (C6457 - (C6435 + C6436) + C6458) * C51169) *
                C51304 +
            (C7453 * C32271 + C17577 * C51169) * C51288 +
            (C7454 * C32271 + (C6461 - (C6447 + C6448) + C6462) * C51169) *
                C22939) *
               C1490 +
           ((C7452 * C32271 + C16613 * C51169) * C51304 +
            (C5514 * C32271 + (C6448 + C6447 - C6461 - C6462) * C51169) *
                C51288 +
            ((C1918 + C1917 - C1916 - C1919) * C32271 +
             (C1053 * C298 + C1054 * C51260 -
              (C117 * C1161 + C51127 * C1168) * C299 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C22939) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C32271 +
             (C5675 + C5676) * C51169) *
                C51304 +
            ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
            C32278 * C22939) *
               C1490 -
           (C32279 * C22939 +
            (C530 * C51169 + (C181 + C180) * C32271) * C51288 +
            (C5668 * C51169 + (C179 + C178) * C32271) * C51304) *
               C50999) *
              C51307 +
          (((C5667 * C32271 + C6256 * C51169) * C51304 +
            (C5359 * C32271 + C6257 * C51169) * C51288 +
            (C5669 * C32271 + (C1059 + C1060) * C51169) * C22939) *
               C50999 -
           (C32577 * C22939 + (C6258 * C51169 + C5668 * C32271) * C51288 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C32271) * C51304) *
               C1490) *
              C51297 +
          (((C16431 * C32271 + C21656 * C51169) * C51304 +
            (C6256 * C32271 + C16432 * C51169) * C51288 +
            (C6257 * C32271 + (C6281 + C6282) * C51169) * C22939) *
               C1490 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C51169 +
             (C1060 + C1059) * C32271) *
                C22939 +
            ((C6282 + C6281) * C51169 + C5670 * C32271) * C51288 +
            (C16433 * C51169 + C6258 * C32271) * C51304) *
               C50999) *
              C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C32271 +
            (C5675 + C5676) * C51169) *
               C51304 +
           ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
           C32278 * C22939) *
              C112 -
          (C32279 * C22939 + (C530 * C51169 + (C181 + C180) * C32271) * C51288 +
           (C5668 * C51169 + (C179 + C178) * C32271) * C51304) *
              C113 +
          (C32278 * C51304 + (C189 * C32271 + C5669 * C51169) * C51288 +
           ((C185 + C184) * C32271 + (C527 + C528) * C51169) * C22939) *
              C114 -
          ((((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51169 +
            (C187 + C186) * C32271) *
               C22939 +
           ((C528 + C527) * C51169 + C190 * C32271) * C51288 +
           C32279 * C51304) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C32271 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
               C51304 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C32271 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C51288 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C32271 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C22939) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C32271 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51169) *
               C51304 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C32271 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51169) *
               C51288 +
           ((C677 - (C676 + C675) + C678 - C693 - C694) * C32271 +
            (C1670 * C636 - (C518 * C630 + C517 * C635) + C1671 * C631 -
             (C117 * C890 + C51127 * C905) * C637 -
             (C117 * C906 + C51127 * C914) * C632) *
                C51169) *
               C22939) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C32271 +
            (C6429 + C6430 - C6431 - C6432) * C51169) *
               C51304 +
           ((C325 + C326 - C359 - C360) * C32271 + C7452 * C51169) * C51288 +
           C32428 * C22939) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C32271 + C7453 * C51169) * C51304 +
           ((C361 - (C332 + C331) + C362) * C32271 + C7454 * C51169) * C51288 +
           ((C363 - (C338 + C337) + C364) * C32271 +
            (C1916 - (C1917 + C1918) + C1919) * C51169) *
               C22939) *
              C296 +
          (C32428 * C51304 +
           (C370 * C32271 + (C1918 + C1917 - C1916 - C1919) * C51169) * C51288 +
           ((C346 + C345 - C365 - C366) * C32271 +
            (C519 * C298 + C520 * C51260 -
             (C117 * C1643 + C51127 * C1644) * C299 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C22939) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C32271 +
           (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
            C6104 * C767 + C6105 * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C51169) *
              C51304 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C32271 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C51169) *
              C51288 +
          ((C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 +
            C685 * C767 + C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
            (C117 * C778 + C51127 * C783) * C763) *
               C32271 +
           (C515 * C765 + C516 * C760 - C1668 * C766 - C1669 * C761 +
            C5842 * C767 + C5843 * C762 -
            (C117 * C3319 + C51127 * C3324) * C768 -
            (C117 * C3325 + C51127 * C3328) * C763) *
               C51169) *
              C22939) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C32271 +
             (C5675 + C5676) * C51169) *
                C51304 +
            ((C178 + C179) * C32271 + C5667 * C51169) * C51288 +
            C32278 * C22939) *
               C295 -
           (C32279 * C22939 +
            (C530 * C51169 + (C181 + C180) * C32271) * C51288 +
            (C5668 * C51169 + (C179 + C178) * C32271) * C51304) *
               C296 +
           (C32278 * C51304 + (C189 * C32271 + C5669 * C51169) * C51288 +
            ((C185 + C184) * C32271 + (C527 + C528) * C51169) * C22939) *
               C297) *
              C51262 +
          (((C5667 * C32271 + C6256 * C51169) * C51304 +
            (C5359 * C32271 + C6257 * C51169) * C51288 +
            (C5669 * C32271 + (C1059 + C1060) * C51169) * C22939) *
               C296 -
           (C32577 * C22939 + (C6258 * C51169 + C5668 * C32271) * C51288 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C32271) * C51304) *
               C295 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C32271) *
                C22939 +
            ((C1060 + C1059) * C51169 + C529 * C32271) * C51288 +
            C32577 * C51304) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C32271 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
               C51304 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C32271 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C51288 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C32271 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C22939) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C32271 +
            (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C51169) *
               C51304 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C32271 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C51169) *
               C51288 +
           ((C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C32271 +
            (C6455 * C636 - (C1052 * C630 + C1051 * C635) + C6456 * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C51169) *
               C22939) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C32271 +
            ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
             (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
             (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                C32271 +
            (C35337 * C1363 + C35338 * C1358 - (C4279 + C4278) * C1364 -
             (C4281 + C4280) * C51044) *
                C51169) *
               C50979) *
              C51305 +
          ((((C2685 + C2684) * C1364 -
             ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
             (C2687 + C2686) * C51044) *
                C32271 +
            ((C4278 + C4279) * C1364 - (C35339 * C1358 + C35340 * C1363) +
             (C4280 + C4281) * C51044) *
                C51169) *
               C25801 +
           (((C2690 + C2689) * C1364 -
             ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
             (C2692 + C2691) * C51044) *
                C32271 +
            ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
             (C4284 + C4285) * C51044) *
                C51169) *
               C50979) *
              C51291 +
          ((C3920 * C32271 +
            (C35341 * C1363 + C35342 * C1358 - (C4283 + C4282) * C1364 -
             (C4285 + C4284) * C51044) *
                C51169) *
               C25801 +
           (((C2495 + C2494) * C1363 + (C2493 + C2492) * C1358 -
             (C2694 + C2693) * C1364 - (C2696 + C2695) * C51044) *
                C32271 +
            ((C2882 + C2883) * C1363 + (C2884 + C2885) * C1358 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C1364 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C1362) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1492 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51306 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1493 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51294 +
             (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                 C1494 +
             (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                 C1489) *
                C32271 +
            ((C18629 + C18630) * C1492 + (C18631 + C18632) * C51306 -
             (C19059 + C19060) * C1493 - (C19061 + C19062) * C51294 +
             (C19063 + C19064) * C1494 + (C19065 + C19066) * C1489) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C1492 + (C2486 + C2487) * C51306 -
             (C2684 + C2685) * C1493 - (C2686 + C2687) * C51294 +
             (C3054 + C3055) * C1494 + (C3056 + C3057) * C1489) *
                C32271 +
            (C35337 * C1492 + C35338 * C51306 - (C4279 + C4278) * C1493 -
             (C4281 + C4280) * C51294 + (C35554 + C35555) * C1494 +
             (C35556 + C35557) * C1489) *
                C51169) *
               C50979) *
              C1490 +
          ((((C2685 + C2684) * C1493 -
             ((C2487 + C2486) * C51306 + (C2485 + C2484) * C1492) +
             (C2687 + C2686) * C51294 - (C3055 + C3054) * C1494 -
             (C3057 + C3056) * C1489) *
                C32271 +
            ((C4278 + C4279) * C1493 - (C35339 * C51306 + C35340 * C1492) +
             (C4280 + C4281) * C51294 - (C35555 + C35554) * C1494 -
             (C35557 + C35556) * C1489) *
                C51169) *
               C25801 +
           (((C2690 + C2689) * C1493 -
             ((C2491 + C2490) * C51306 + (C2489 + C2488) * C1492) +
             (C2692 + C2691) * C51294 - (C3059 + C3058) * C1494 -
             (C3061 + C3060) * C1489) *
                C32271 +
            ((C4282 + C4283) * C1493 - (C2886 * C51306 + C2887 * C1492) +
             (C4284 + C4285) * C51294 -
             (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                 C1494 -
             (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                 C1489) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C1363 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C1358 -
              (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                  C1364 -
              (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                  C51044) *
                 C32271 +
             ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
              (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
                 C51169) *
                C25801 +
            (((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
              (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                 C32271 +
             C37067 * C51169) *
                C50979) *
               C1490 +
           ((((C2685 + C2684) * C1364 -
              ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
              (C2687 + C2686) * C51044) *
                 C32271 +
             C37068 * C51169) *
                C25801 +
            (((C2690 + C2689) * C1364 -
              ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
              (C2692 + C2691) * C51044) *
                 C32271 +
             ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
              (C4284 + C4285) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51262 +
          (((((C19060 + C19059) * C1364 -
              ((C18632 + C18631) * C1358 + (C18630 + C18629) * C1363) +
              (C19062 + C19061) * C51044) *
                 C32271 +
             ((C19068 + C19067) * C1364 -
              ((C18636 + C18635) * C1358 + (C18634 + C18633) * C1363) +
              (C19070 + C19069) * C51044) *
                 C51169) *
                C25801 +
            (C37068 * C32271 +
             ((C20035 + C20036) * C1364 - (C19223 * C1358 + C19224 * C1363) +
              (C20037 + C20038) * C51044) *
                 C51169) *
                C50979) *
               C1490 +
           ((C37067 * C32271 +
             (C36076 * C1363 + C36077 * C1358 - (C20036 + C20035) * C1364 -
              (C20038 + C20037) * C51044) *
                 C51169) *
                C25801 +
            ((C35341 * C1363 + C35342 * C1358 - (C4283 + C4282) * C1364 -
              (C4285 + C4284) * C51044) *
                 C32271 +
             ((C3496 + C3497) * C1363 + (C3498 + C3499) * C1358 -
              (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 +
               C51273 * C1166) *
                  C1364 -
              (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 +
               C51273 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C1363 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C1358 -
              (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                  C1364 -
              (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                  C51044) *
                 C32271 +
             ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
              (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
                 C51169) *
                C25801 +
            (((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
              (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                 C32271 +
             C37067 * C51169) *
                C50979) *
               C51253 +
           ((((C2685 + C2684) * C1364 -
              ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
              (C2687 + C2686) * C51044) *
                 C32271 +
             C37068 * C51169) *
                C25801 +
            (((C2690 + C2689) * C1364 -
              ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
              (C2692 + C2691) * C51044) *
                 C32271 +
             ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
              (C4284 + C4285) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C1775 +
          (((((C19060 + C19059) * C1364 -
              ((C18632 + C18631) * C1358 + (C18630 + C18629) * C1363) +
              (C19062 + C19061) * C51044) *
                 C32271 +
             ((C19068 + C19067) * C1364 -
              ((C18636 + C18635) * C1358 + (C18634 + C18633) * C1363) +
              (C19070 + C19069) * C51044) *
                 C51169) *
                C25801 +
            (C37068 * C32271 +
             ((C20035 + C20036) * C1364 - (C19223 * C1358 + C19224 * C1363) +
              (C20037 + C20038) * C51044) *
                 C51169) *
                C50979) *
               C51253 +
           ((C37067 * C32271 +
             (C36076 * C1363 + C36077 * C1358 - (C20036 + C20035) * C1364 -
              (C20038 + C20037) * C51044) *
                 C51169) *
                C25801 +
            ((C35341 * C1363 + C35342 * C1358 - (C4283 + C4282) * C1364 -
              (C4285 + C4284) * C51044) *
                 C32271 +
             ((C3496 + C3497) * C1363 + (C3498 + C3499) * C1358 -
              (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 +
               C51273 * C1166) *
                  C1364 -
              (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 +
               C51273 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1492 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51306 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1493 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51294 +
             (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                 C1494 +
             (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                 C1489) *
                C32271 +
            ((C18629 + C18630) * C1492 + (C18631 + C18632) * C51306 -
             (C19059 + C19060) * C1493 - (C19061 + C19062) * C51294 +
             (C19063 + C19064) * C1494 + (C19065 + C19066) * C1489) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C1492 + (C2486 + C2487) * C51306 -
             (C2684 + C2685) * C1493 - (C2686 + C2687) * C51294 +
             (C3054 + C3055) * C1494 + (C3056 + C3057) * C1489) *
                C32271 +
            (C35337 * C1492 + C35338 * C51306 - C37053 * C1493 -
             C37054 * C51294 + (C35554 + C35555) * C1494 +
             (C35556 + C35557) * C1489) *
                C51169) *
               C50979) *
              C50994 * C1775 +
          ((((C19060 + C19059) * C1493 -
             ((C18632 + C18631) * C51306 + (C18630 + C18629) * C1492) +
             (C19062 + C19061) * C51294 - (C19064 + C19063) * C1494 -
             (C19066 + C19065) * C1489) *
                C32271 +
            ((C19068 + C19067) * C1493 -
             ((C18636 + C18635) * C51306 + (C18634 + C18633) * C1492) +
             (C19070 + C19069) * C51294 - (C19072 + C19071) * C1494 -
             (C19074 + C19073) * C1489) *
                C51169) *
               C25801 +
           ((C37055 * C1493 - (C35339 * C51306 + C35340 * C1492) +
             C37058 * C51294 - (C35555 + C35554) * C1494 -
             (C35557 + C35556) * C1489) *
                C32271 +
            ((C20035 + C20036) * C1493 - (C19223 * C51306 + C19224 * C1492) +
             (C20037 + C20038) * C51294 -
             (C2450 * C9355 + C51143 * C9358 + C2449 * C3646 + C51273 * C3650) *
                 C1494 -
             (C2450 * C9359 + C51143 * C9361 + C2449 * C3651 + C51273 * C3655) *
                 C1489) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C32271 +
            ((C18629 + C18630) * C1363 + (C18631 + C18632) * C1358 -
             (C19059 + C19060) * C1364 - (C19061 + C19062) * C51044) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
             (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                C32271 +
            C37067 * C51169) *
               C50979) *
              C50994 * C51307 +
          ((((C19060 + C19059) * C1364 -
             ((C18632 + C18631) * C1358 + (C18630 + C18629) * C1363) +
             (C19062 + C19061) * C51044) *
                C32271 +
            ((C19068 + C19067) * C1364 -
             ((C18636 + C18635) * C1358 + (C18634 + C18633) * C1363) +
             (C19070 + C19069) * C51044) *
                C51169) *
               C25801 +
           (C37068 * C32271 +
            ((C20035 + C20036) * C1364 - (C19223 * C1358 + C19224 * C1363) +
             (C20037 + C20038) * C51044) *
                C51169) *
               C50979) *
              C50994 * C51297 +
          ((C21017 * C32271 +
            ((C19252 + C19251) * C1363 + (C19250 + C19249) * C1358 -
             (C19417 + C19416) * C1364 - (C19419 + C19418) * C51044) *
                C51169) *
               C25801 +
           ((C36076 * C1363 + C36077 * C1358 - (C20036 + C20035) * C1364 -
             (C20038 + C20037) * C51044) *
                C32271 +
            ((C19245 + C19246) * C1363 + (C19247 + C19248) * C1358 -
             (C2450 * C9460 + C51143 * C9463 + C2449 * C3756 + C51273 * C3761) *
                 C1364 -
             (C2450 * C9462 + C51143 * C9466 + C2449 * C3760 + C51273 * C3765) *
                 C51044) *
                C51169) *
               C50979) *
              C50994 * C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C635 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C630 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C636 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C631 +
             (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                 C637 +
             (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
             (C19059 + C19060) * C636 - (C19061 + C19062) * C631 +
             (C19063 + C19064) * C637 + (C19065 + C19066) * C632) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
             (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
             (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
                C32271 +
            (C35337 * C635 + C35338 * C630 - (C4279 + C4278) * C636 -
             (C4281 + C4280) * C631 + (C35554 + C35555) * C637 +
             (C35556 + C35557) * C632) *
                C51169) *
               C50979) *
              C51253 +
          ((((C2685 + C2684) * C636 -
             ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
             (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
             (C3057 + C3056) * C632) *
                C32271 +
            ((C4278 + C4279) * C636 - (C35339 * C630 + C35340 * C635) +
             (C4280 + C4281) * C631 - (C35555 + C35554) * C637 -
             (C35557 + C35556) * C632) *
                C51169) *
               C25801 +
           (((C2690 + C2689) * C636 -
             ((C2491 + C2490) * C630 + (C2489 + C2488) * C635) +
             (C2692 + C2691) * C631 - (C3059 + C3058) * C637 -
             (C3061 + C3060) * C632) *
                C32271 +
            ((C4282 + C4283) * C636 - (C2886 * C630 + C2887 * C635) +
             (C4284 + C4285) * C631 -
             (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                 C637 -
             (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                 C632) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C32271 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
               C25801 +
           (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
            ((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51169) *
               C50979) *
              C112 -
          ((C2890 * C51169 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C32271) *
               C50979 +
           (((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51169 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C32271) *
               C25801) *
              C113 +
          ((C2508 * C32271 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51169) *
               C25801 +
           (((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C32271 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51169) *
               C50979) *
              C114 -
          ((((C2450 * C1645 + C51143 * C1646 + C2449 * C485 + C51273 * C493) *
                 C51028 +
             (C2450 * C1643 + C51143 * C1644 + C2449 * C475 + C51273 * C484) *
                 C118) *
                C51169 +
            ((C2499 + C2498) * C51028 + (C2497 + C2496) * C118) * C32271) *
               C50979 +
           (((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51169 +
            C2509 * C32271) *
               C25801) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C118 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
                C25801 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
             C35349 * C51169) *
                C50979) *
               C51253 -
           ((C2890 * C51169 +
             ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C32271) *
                C50979 +
            (C35350 * C51169 +
             ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C32271) *
                C25801) *
               C50999) *
              C1013 +
          (((C35349 * C32271 + C36080 * C51169) * C25801 +
            (C35351 * C32271 +
             ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51169) *
                C50979) *
               C50999 -
           ((C19254 * C51169 + C35350 * C32271) * C50979 +
            (((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C51169 +
             ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C32271) *
                C25801) *
               C51253) *
              C1014 +
          (((C19253 * C32271 +
             ((C19252 + C19251) * C118 + (C19250 + C19249) * C51028) * C51169) *
                C25801 +
            (C36080 * C32271 +
             ((C19245 + C19246) * C118 + (C19247 + C19248) * C51028) * C51169) *
                C50979) *
               C51253 -
           ((((C2450 * C3758 + C51143 * C3764 + C2449 * C1250 +
               C51273 * C1257) *
                  C51028 +
              (C2450 * C3755 + C51143 * C3759 + C2449 * C1245 +
               C51273 * C1251) *
                  C118) *
                 C51169 +
             ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C32271) *
                C50979 +
            (((C19248 + C19247) * C51028 + (C19246 + C19245) * C118) * C51169 +
             C19254 * C32271) *
                C25801) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C765 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C760 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C766 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C761 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C767 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C762 -
            (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
                C768 -
            (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
                C763) *
               C32271 +
           ((C18629 + C18630) * C765 + (C18631 + C18632) * C760 -
            (C19059 + C19060) * C766 - (C19061 + C19062) * C761 +
            (C19063 + C19064) * C767 + (C19065 + C19066) * C762 -
            (C2450 * C9036 + C51143 * C9038 + C2449 * C3317 + C51273 * C3320) *
                C768 -
            (C2450 * C9039 + C51143 * C9042 + C2449 * C3321 + C51273 * C3326) *
                C763) *
               C51169) *
              C25801 +
          (((C2484 + C2485) * C765 + (C2486 + C2487) * C760 -
            (C2684 + C2685) * C766 - (C2686 + C2687) * C761 +
            (C3054 + C3055) * C767 + (C3056 + C3057) * C762 -
            (C2450 * C3160 + C51143 * C3164 + C2449 * C770 + C51273 * C775) *
                C768 -
            (C2450 * C3165 + C51143 * C3169 + C2449 * C776 + C51273 * C782) *
                C763) *
               C32271 +
           (C35337 * C765 + C35338 * C760 - (C4279 + C4278) * C766 -
            (C4281 + C4280) * C761 + (C35554 + C35555) * C767 +
            (C35556 + C35557) * C762 -
            (C2450 * C9037 + C51143 * C9040 + C2449 * C3318 + C51273 * C3322) *
                C768 -
            (C2450 * C9041 + C51143 * C9043 + C2449 * C3323 + C51273 * C3327) *
                C763) *
               C51169) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C298 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51260 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C299 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C32271 +
            ((C18629 + C18630) * C298 + (C18631 + C18632) * C51260 -
             (C19059 + C19060) * C299 - (C19061 + C19062) * C51044) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
             (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
                C32271 +
            ((C2874 + C2875) * C298 + (C2876 + C2877) * C51260 -
             (C4279 + C4278) * C299 - (C4281 + C4280) * C51044) *
                C51169) *
               C50979) *
              C295 +
          ((((C2685 + C2684) * C299 -
             ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
             (C2687 + C2686) * C51044) *
                C32271 +
            ((C4278 + C4279) * C299 -
             ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
             (C4280 + C4281) * C51044) *
                C51169) *
               C25801 +
           (((C2690 + C2689) * C299 -
             ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
             (C2692 + C2691) * C51044) *
                C32271 +
            ((C4282 + C4283) * C299 - (C2886 * C51260 + C2887 * C298) +
             (C4284 + C4285) * C51044) *
                C51169) *
               C50979) *
              C296 +
          ((C2702 * C32271 +
            ((C2878 + C2879) * C298 + (C2880 + C2881) * C51260 -
             (C4283 + C4282) * C299 - (C4285 + C4284) * C51044) *
                C51169) *
               C25801 +
           (((C2495 + C2494) * C298 + (C2493 + C2492) * C51260 -
             (C2694 + C2693) * C299 - (C2696 + C2695) * C51044) *
                C32271 +
            ((C2882 + C2883) * C298 + (C2884 + C2885) * C51260 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C299 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C298 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51260 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C299 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C32271 +
            ((C18629 + C18630) * C298 + (C18631 + C18632) * C51260 -
             (C19059 + C19060) * C299 - (C19061 + C19062) * C51044) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
             (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
                C32271 +
            (C35337 * C298 + C35338 * C51260 - (C4279 + C4278) * C299 -
             (C4281 + C4280) * C51044) *
                C51169) *
               C50979) *
              C50994 * C1013 +
          ((((C19060 + C19059) * C299 -
             ((C18632 + C18631) * C51260 + (C18630 + C18629) * C298) +
             (C19062 + C19061) * C51044) *
                C32271 +
            ((C19068 + C19067) * C299 -
             ((C18636 + C18635) * C51260 + (C18634 + C18633) * C298) +
             (C19070 + C19069) * C51044) *
                C51169) *
               C25801 +
           (((C4278 + C4279) * C299 - (C35339 * C51260 + C35340 * C298) +
             (C4280 + C4281) * C51044) *
                C32271 +
            ((C20035 + C20036) * C299 - (C19223 * C51260 + C19224 * C298) +
             (C20037 + C20038) * C51044) *
                C51169) *
               C50979) *
              C50994 * C1014 +
          ((C19421 * C32271 +
            ((C19252 + C19251) * C298 + (C19250 + C19249) * C51260 -
             (C19417 + C19416) * C299 - (C19419 + C19418) * C51044) *
                C51169) *
               C25801 +
           ((C36076 * C298 + C36077 * C51260 - (C20036 + C20035) * C299 -
             (C20038 + C20037) * C51044) *
                C32271 +
            ((C19245 + C19246) * C298 + (C19247 + C19248) * C51260 -
             (C2450 * C9460 + C51143 * C9463 + C2449 * C3756 + C51273 * C3761) *
                 C299 -
             (C2450 * C9462 + C51143 * C9466 + C2449 * C3760 + C51273 * C3765) *
                 C51044) *
                C51169) *
               C50979) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C635 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C630 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C636 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C631 +
             (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                 C637 +
             (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
             (C19059 + C19060) * C636 - (C19061 + C19062) * C631 +
             (C19063 + C19064) * C637 + (C19065 + C19066) * C632) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
             (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
             (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
                C32271 +
            (C35337 * C635 + C35338 * C630 - (C4279 + C4278) * C636 -
             (C4281 + C4280) * C631 + (C35554 + C35555) * C637 +
             (C35556 + C35557) * C632) *
                C51169) *
               C50979) *
              C50994 * C51262 +
          ((((C19060 + C19059) * C636 -
             ((C18632 + C18631) * C630 + (C18630 + C18629) * C635) +
             (C19062 + C19061) * C631 - (C19064 + C19063) * C637 -
             (C19066 + C19065) * C632) *
                C32271 +
            ((C19068 + C19067) * C636 -
             ((C18636 + C18635) * C630 + (C18634 + C18633) * C635) +
             (C19070 + C19069) * C631 - (C19072 + C19071) * C637 -
             (C19074 + C19073) * C632) *
                C51169) *
               C25801 +
           (((C4278 + C4279) * C636 - (C35339 * C630 + C35340 * C635) +
             (C4280 + C4281) * C631 - (C35555 + C35554) * C637 -
             (C35557 + C35556) * C632) *
                C32271 +
            ((C20035 + C20036) * C636 - (C19223 * C630 + C19224 * C635) +
             (C20037 + C20038) * C631 -
             (C2450 * C9355 + C51143 * C9358 + C2449 * C3646 + C51273 * C3650) *
                 C637 -
             (C2450 * C9359 + C51143 * C9361 + C2449 * C3651 + C51273 * C3655) *
                 C632) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C118 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
                C25801 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
             C35349 * C51169) *
                C50979) *
               C295 -
           ((C2890 * C51169 +
             ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C32271) *
                C50979 +
            (C35350 * C51169 +
             ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C32271) *
                C25801) *
               C296 +
           ((C2508 * C32271 + C35351 * C51169) * C25801 +
            (((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C32271 +
             ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51169) *
                C50979) *
               C297) *
              C51262 +
          (((C35349 * C32271 +
             ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51169) *
                C25801 +
            (C35351 * C32271 +
             ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51169) *
                C50979) *
               C296 -
           ((C19254 * C51169 + C35350 * C32271) * C50979 +
            (((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C51169 +
             ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C32271) *
                C25801) *
               C295 -
           ((((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 +
               C51273 * C1034) *
                  C51028 +
              (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 +
               C51273 * C1027) *
                  C118) *
                 C51169 +
             ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C32271) *
                C50979 +
            (((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C51169 +
             C2890 * C32271) *
                C25801) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C32271 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
               C25801 +
           (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
            C35349 * C51169) *
               C50979) *
              C50994 * C1240 -
          ((C19254 * C51169 + C35350 * C32271) * C50979 +
           (((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C51169 +
            ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C32271) *
               C25801) *
              C50994 * C1241 +
          ((C19253 * C32271 +
            ((C19252 + C19251) * C118 + (C19250 + C19249) * C51028) * C51169) *
               C25801 +
           (C36080 * C32271 +
            ((C19245 + C19246) * C118 + (C19247 + C19248) * C51028) * C51169) *
               C50979) *
              C50994 * C1242 -
          ((((C2450 * C16589 + C51143 * C16590 + C2449 * C6565 +
              C51273 * C6570) *
                 C51028 +
             (C2450 * C16587 + C51143 * C16588 + C2449 * C6561 +
              C51273 * C6566) *
                 C118) *
                C51169 +
            ((C19248 + C19247) * C51028 + (C19246 + C19245) * C118) * C32271) *
               C50979 +
           (((C19539 + C19538) * C51028 + (C19537 + C19536) * C118) * C51169 +
            C19540 * C32271) *
               C25801) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C118 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
                C25801 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
             C35349 * C51169) *
                C50979) *
               C51305 -
           ((C2890 * C51169 +
             ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C32271) *
                C50979 +
            (C35350 * C51169 +
             ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C32271) *
                C25801) *
               C51291 +
           ((C2508 * C32271 + C35351 * C51169) * C25801 +
            (((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C32271 +
             ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51169) *
                C50979) *
               C1362) *
              C1775 +
          (((C35349 * C32271 + C36080 * C51169) * C25801 +
            (C35351 * C32271 +
             ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51169) *
                C50979) *
               C51291 -
           ((C19254 * C51169 + C35350 * C32271) * C50979 +
            (((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C51169 +
             ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C32271) *
                C25801) *
               C51305 -
           ((((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 +
               C51273 * C1034) *
                  C51028 +
              (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 +
               C51273 * C1027) *
                  C118) *
                 C51169 +
             ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C32271) *
                C50979 +
            (((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C51169 +
             C2890 * C32271) *
                C25801) *
               C1362) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C298 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C51260 -
              (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                  C299 -
              (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                  C51044) *
                 C32271 +
             ((C18629 + C18630) * C298 + (C18631 + C18632) * C51260 -
              (C19059 + C19060) * C299 - (C19061 + C19062) * C51044) *
                 C51169) *
                C25801 +
            (((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
              (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
                 C32271 +
             C37533 * C51169) *
                C50979) *
               C1490 +
           ((((C2685 + C2684) * C299 -
              ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
              (C2687 + C2686) * C51044) *
                 C32271 +
             C37534 * C51169) *
                C25801 +
            (((C2690 + C2689) * C299 -
              ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
              (C2692 + C2691) * C51044) *
                 C32271 +
             ((C4282 + C4283) * C299 - (C2886 * C51260 + C2887 * C298) +
              (C4284 + C4285) * C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C1775 +
          (((((C19060 + C19059) * C299 -
              ((C18632 + C18631) * C51260 + (C18630 + C18629) * C298) +
              (C19062 + C19061) * C51044) *
                 C32271 +
             ((C19068 + C19067) * C299 -
              ((C18636 + C18635) * C51260 + (C18634 + C18633) * C298) +
              (C19070 + C19069) * C51044) *
                 C51169) *
                C25801 +
            (C37534 * C32271 +
             ((C20035 + C20036) * C299 - (C19223 * C51260 + C19224 * C298) +
              (C20037 + C20038) * C51044) *
                 C51169) *
                C50979) *
               C1490 +
           ((C37533 * C32271 +
             (C36076 * C298 + C36077 * C51260 - (C20036 + C20035) * C299 -
              (C20038 + C20037) * C51044) *
                 C51169) *
                C25801 +
            ((C35341 * C298 + C35342 * C51260 - (C4283 + C4282) * C299 -
              (C4285 + C4284) * C51044) *
                 C32271 +
             ((C3496 + C3497) * C298 + (C3498 + C3499) * C51260 -
              (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 +
               C51273 * C1166) *
                  C299 -
              (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 +
               C51273 * C1172) *
                  C51044) *
                 C51169) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C118 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
                C25801 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
             C35349 * C51169) *
                C50979) *
               C1490 -
           ((C2890 * C51169 +
             ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C32271) *
                C50979 +
            (C35350 * C51169 +
             ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C32271) *
                C25801) *
               C50999) *
              C51307 +
          (((C35349 * C32271 + C36080 * C51169) * C25801 +
            (C35351 * C32271 +
             ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51169) *
                C50979) *
               C50999 -
           ((C19254 * C51169 + C35350 * C32271) * C50979 +
            (((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C51169 +
             ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C32271) *
                C25801) *
               C1490) *
              C51297 +
          (((C19253 * C32271 +
             ((C19252 + C19251) * C118 + (C19250 + C19249) * C51028) * C51169) *
                C25801 +
            (C36080 * C32271 +
             ((C19245 + C19246) * C118 + (C19247 + C19248) * C51028) * C51169) *
                C50979) *
               C1490 -
           ((((C2450 * C3758 + C51143 * C3764 + C2449 * C1250 +
               C51273 * C1257) *
                  C51028 +
              (C2450 * C3755 + C51143 * C3759 + C2449 * C1245 +
               C51273 * C1251) *
                  C118) *
                 C51169 +
             ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C32271) *
                C50979 +
            (((C19248 + C19247) * C51028 + (C19246 + C19245) * C118) * C51169 +
             C19254 * C32271) *
                C25801) *
               C50999) *
              C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C32271 +
            ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
               C25801 +
           (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
            ((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51169) *
               C50979) *
              C112 -
          ((C2890 * C51169 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C32271) *
               C50979 +
           (((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51169 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C32271) *
               C25801) *
              C113 +
          ((C2508 * C32271 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51169) *
               C25801 +
           (((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C32271 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51169) *
               C50979) *
              C114 -
          ((((C2450 * C1645 + C51143 * C1646 + C2449 * C485 + C51273 * C493) *
                 C51028 +
             (C2450 * C1643 + C51143 * C1644 + C2449 * C475 + C51273 * C484) *
                 C118) *
                C51169 +
            ((C2499 + C2498) * C51028 + (C2497 + C2496) * C118) * C32271) *
               C50979 +
           (((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51169 +
            C2509 * C32271) *
               C25801) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C635 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C630 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C636 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C631 +
             (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                 C637 +
             (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
             (C19059 + C19060) * C636 - (C19061 + C19062) * C631 +
             (C19063 + C19064) * C637 + (C19065 + C19066) * C632) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
             (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
             (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
                C32271 +
            (C35337 * C635 + C35338 * C630 - (C4279 + C4278) * C636 -
             (C4281 + C4280) * C631 + (C35554 + C35555) * C637 +
             (C35556 + C35557) * C632) *
                C51169) *
               C50979) *
              C51253 +
          ((((C2685 + C2684) * C636 -
             ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
             (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
             (C3057 + C3056) * C632) *
                C32271 +
            ((C4278 + C4279) * C636 - (C35339 * C630 + C35340 * C635) +
             (C4280 + C4281) * C631 - (C35555 + C35554) * C637 -
             (C35557 + C35556) * C632) *
                C51169) *
               C25801 +
           (((C2690 + C2689) * C636 -
             ((C2491 + C2490) * C630 + (C2489 + C2488) * C635) +
             (C2692 + C2691) * C631 - (C3059 + C3058) * C637 -
             (C3061 + C3060) * C632) *
                C32271 +
            ((C4282 + C4283) * C636 - (C2886 * C630 + C2887 * C635) +
             (C4284 + C4285) * C631 -
             (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                 C637 -
             (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                 C632) *
                C51169) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C298 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51260 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C299 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C32271 +
            ((C18629 + C18630) * C298 + (C18631 + C18632) * C51260 -
             (C19059 + C19060) * C299 - (C19061 + C19062) * C51044) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
             (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
                C32271 +
            ((C2874 + C2875) * C298 + (C2876 + C2877) * C51260 -
             (C4279 + C4278) * C299 - (C4281 + C4280) * C51044) *
                C51169) *
               C50979) *
              C295 +
          ((((C2685 + C2684) * C299 -
             ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
             (C2687 + C2686) * C51044) *
                C32271 +
            ((C4278 + C4279) * C299 -
             ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
             (C4280 + C4281) * C51044) *
                C51169) *
               C25801 +
           (((C2690 + C2689) * C299 -
             ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
             (C2692 + C2691) * C51044) *
                C32271 +
            ((C4282 + C4283) * C299 - (C2886 * C51260 + C2887 * C298) +
             (C4284 + C4285) * C51044) *
                C51169) *
               C50979) *
              C296 +
          ((C2702 * C32271 +
            ((C2878 + C2879) * C298 + (C2880 + C2881) * C51260 -
             (C4283 + C4282) * C299 - (C4285 + C4284) * C51044) *
                C51169) *
               C25801 +
           (((C2495 + C2494) * C298 + (C2493 + C2492) * C51260 -
             (C2694 + C2693) * C299 - (C2696 + C2695) * C51044) *
                C32271 +
            ((C2882 + C2883) * C298 + (C2884 + C2885) * C51260 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C299 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51169) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C765 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C760 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C766 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C761 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C767 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C762 -
            (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
                C768 -
            (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
                C763) *
               C32271 +
           ((C18629 + C18630) * C765 + (C18631 + C18632) * C760 -
            (C19059 + C19060) * C766 - (C19061 + C19062) * C761 +
            (C19063 + C19064) * C767 + (C19065 + C19066) * C762 -
            (C2450 * C9036 + C51143 * C9038 + C2449 * C3317 + C51273 * C3320) *
                C768 -
            (C2450 * C9039 + C51143 * C9042 + C2449 * C3321 + C51273 * C3326) *
                C763) *
               C51169) *
              C25801 +
          (((C2484 + C2485) * C765 + (C2486 + C2487) * C760 -
            (C2684 + C2685) * C766 - (C2686 + C2687) * C761 +
            (C3054 + C3055) * C767 + (C3056 + C3057) * C762 -
            (C2450 * C3160 + C51143 * C3164 + C2449 * C770 + C51273 * C775) *
                C768 -
            (C2450 * C3165 + C51143 * C3169 + C2449 * C776 + C51273 * C782) *
                C763) *
               C32271 +
           (C35337 * C765 + C35338 * C760 - (C4279 + C4278) * C766 -
            (C4281 + C4280) * C761 + (C35554 + C35555) * C767 +
            (C35556 + C35557) * C762 -
            (C2450 * C9037 + C51143 * C9040 + C2449 * C3318 + C51273 * C3322) *
                C768 -
            (C2450 * C9041 + C51143 * C9043 + C2449 * C3323 + C51273 * C3327) *
                C763) *
               C51169) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                  C118 +
              (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                  C51028) *
                 C32271 +
             ((C18629 + C18630) * C118 + (C18631 + C18632) * C51028) * C51169) *
                C25801 +
            (((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C32271 +
             C35349 * C51169) *
                C50979) *
               C295 -
           ((C2890 * C51169 +
             ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C32271) *
                C50979 +
            (C35350 * C51169 +
             ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C32271) *
                C25801) *
               C296 +
           ((C2508 * C32271 + C35351 * C51169) * C25801 +
            (((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C32271 +
             ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51169) *
                C50979) *
               C297) *
              C51262 +
          (((C35349 * C32271 +
             ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51169) *
                C25801 +
            (C35351 * C32271 +
             ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51169) *
                C50979) *
               C296 -
           ((C19254 * C51169 + C35350 * C32271) * C50979 +
            (((C18636 + C18635) * C51028 + (C18634 + C18633) * C118) * C51169 +
             ((C18632 + C18631) * C51028 + (C18630 + C18629) * C118) * C32271) *
                C25801) *
               C295 -
           ((((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 +
               C51273 * C1034) *
                  C51028 +
              (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 +
               C51273 * C1027) *
                  C118) *
                 C51169 +
             ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C32271) *
                C50979 +
            (((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C51169 +
             C2890 * C32271) *
                C25801) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C635 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C630 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C636 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C631 +
             (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                 C637 +
             (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                 C632) *
                C32271 +
            ((C18629 + C18630) * C635 + (C18631 + C18632) * C630 -
             (C19059 + C19060) * C636 - (C19061 + C19062) * C631 +
             (C19063 + C19064) * C637 + (C19065 + C19066) * C632) *
                C51169) *
               C25801 +
           (((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
             (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
             (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
                C32271 +
            (C35337 * C635 + C35338 * C630 - (C4279 + C4278) * C636 -
             (C4281 + C4280) * C631 + (C35554 + C35555) * C637 +
             (C35556 + C35557) * C632) *
                C51169) *
               C50979) *
              C50994 * C51262 +
          ((((C19060 + C19059) * C636 -
             ((C18632 + C18631) * C630 + (C18630 + C18629) * C635) +
             (C19062 + C19061) * C631 - (C19064 + C19063) * C637 -
             (C19066 + C19065) * C632) *
                C32271 +
            ((C19068 + C19067) * C636 -
             ((C18636 + C18635) * C630 + (C18634 + C18633) * C635) +
             (C19070 + C19069) * C631 - (C19072 + C19071) * C637 -
             (C19074 + C19073) * C632) *
                C51169) *
               C25801 +
           (((C4278 + C4279) * C636 - (C35339 * C630 + C35340 * C635) +
             (C4280 + C4281) * C631 - (C35555 + C35554) * C637 -
             (C35557 + C35556) * C632) *
                C32271 +
            ((C20035 + C20036) * C636 - (C19223 * C630 + C19224 * C635) +
             (C20037 + C20038) * C631 -
             (C2450 * C9355 + C51143 * C9358 + C2449 * C3646 + C51273 * C3650) *
                 C637 -
             (C2450 * C9359 + C51143 * C9361 + C2449 * C3651 + C51273 * C3655) *
                 C632) *
                C51169) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51309 +
            (C7085 + C7086 - C7087 - C7088) * C51303 + C18222 * C38474) *
               C25801 +
           ((C1366 + C1367 - C1368 - C1369) * C51309 + C7103 * C51303 +
            C17233 * C38474) *
               C50979) *
              C51305 +
          (((C1368 - (C1367 + C1366) + C1369) * C51309 + C7104 * C51303 +
            C17234 * C38474) *
               C25801 +
           ((C1372 - (C1371 + C1370) + C1373) * C51309 + C7105 * C51303 +
            (C7096 - (C7097 + C7098) + C7099) * C38474) *
               C50979) *
              C51291 +
          ((C1386 * C51309 + C6730 * C51303 +
            (C7098 + C7097 - C7096 - C7099) * C38474) *
               C25801 +
           (C1387 * C51309 + (C1663 + C1662 - C1676 - C1677) * C51303 +
            (C1053 * C1363 + C1054 * C1358 -
             (C117 * C1161 + C51127 * C1168) * C1364 -
             (C117 * C1169 + C51127 * C1173) * C51044) *
                C38474) *
               C50979) *
              C1362) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C51309 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C51303 +
            (C18064 + C18065 - C18066 - C18067 + C18068 + C18069) * C38474) *
               C25801 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51309 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51303 +
            (C17025 + C17026 - C17027 - C17028 + C17029 + C17030) * C38474) *
               C50979) *
              C1490 +
          (((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C51309 +
            (C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C51303 +
            (C17027 - (C17026 + C17025) + C17028 - C17029 - C17030) * C38474) *
               C25801 +
           ((C1504 - (C1503 + C1502) + C1505 - C1506 - C1507) * C51309 +
            (C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C51303 +
            (C6455 * C1493 - (C1052 * C51306 + C1051 * C1492) + C6456 * C51294 -
             (C117 * C3647 + C51127 * C3652) * C1494 -
             (C117 * C3653 + C51127 * C3656) * C1489) *
                C38474) *
               C50979) *
              C50999) *
         C51058) /
        (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51309 +
             (C7085 + C7086 - C7087 - C7088) * C51303 + C18222 * C38474) *
                C25801 +
            ((C1366 + C1367 - C1368 - C1369) * C51309 + C7103 * C51303 +
             C17233 * C38474) *
                C50979) *
               C1490 +
           (((C1368 - (C1367 + C1366) + C1369) * C51309 + C7104 * C51303 +
             C17234 * C38474) *
                C25801 +
            ((C1372 - (C1371 + C1370) + C1373) * C51309 + C7105 * C51303 +
             (C7096 - (C7097 + C7098) + C7099) * C38474) *
                C50979) *
               C50999) *
              C51262 +
          ((((C7087 - (C7086 + C7085) + C7088) * C51309 +
             (C8093 - (C8094 + C8095) + C8096) * C51303 +
             (C18217 - (C18218 + C18219) + C18220) * C38474) *
                C25801 +
            (C7104 * C51309 + C17234 * C51303 +
             (C17227 - (C17228 + C17229) + C17230) * C38474) *
                C50979) *
               C1490 +
           ((C7103 * C51309 + C17233 * C51303 +
             (C17229 + C17228 - C17227 - C17230) * C38474) *
                C25801 +
            (C6730 * C51309 + (C7098 + C7097 - C7096 - C7099) * C51303 +
             (C6275 * C1363 + C6276 * C1358 -
              (C117 * C3755 + C51127 * C3759) * C1364 -
              (C117 * C3758 + C51127 * C3764) * C51044) *
                 C38474) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51309 +
             (C7085 + C7086 - C7087 - C7088) * C51303 + C18222 * C38474) *
                C25801 +
            ((C1366 + C1367 - C1368 - C1369) * C51309 + C7103 * C51303 +
             C17233 * C38474) *
                C50979) *
               C51253 +
           (((C1368 - (C1367 + C1366) + C1369) * C51309 + C7104 * C51303 +
             C17234 * C38474) *
                C25801 +
            ((C1372 - (C1371 + C1370) + C1373) * C51309 + C7105 * C51303 +
             (C7096 - (C7097 + C7098) + C7099) * C38474) *
                C50979) *
               C50999) *
              C1775 +
          ((((C7087 - (C7086 + C7085) + C7088) * C51309 +
             (C8093 - (C8094 + C8095) + C8096) * C51303 +
             (C18217 - (C18218 + C18219) + C18220) * C38474) *
                C25801 +
            (C7104 * C51309 + C17234 * C51303 +
             (C17227 - (C17228 + C17229) + C17230) * C38474) *
                C50979) *
               C51253 +
           ((C7103 * C51309 + C17233 * C51303 +
             (C17229 + C17228 - C17227 - C17230) * C38474) *
                C25801 +
            (C6730 * C51309 + (C7098 + C7097 - C7096 - C7099) * C51303 +
             (C6275 * C1363 + C6276 * C1358 -
              (C117 * C3755 + C51127 * C3759) * C1364 -
              (C117 * C3758 + C51127 * C3764) * C51044) *
                 C38474) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C51309 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C51303 +
            (C18064 + C18065 - C18066 - C18067 + C18068 + C18069) * C38474) *
               C25801 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51309 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51303 +
            (C17025 + C17026 - C17027 - C17028 + C17029 + C17030) * C38474) *
               C50979) *
              C50994 * C1775 +
          (((C7943 - (C7942 + C7941) + C7944 - C7945 - C7946) * C51309 +
            (C18066 - (C18065 + C18064) + C18067 - C18068 - C18069) * C51303 +
            (C22729 - (C22728 + C22727) + C22730 - C22731 - C22732) * C38474) *
               C25801 +
           ((C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C51309 +
            (C17027 - (C17026 + C17025) + C17028 - C17029 - C17030) * C51303 +
            (C16610 * C1493 - (C6274 * C51306 + C6273 * C1492) +
             C16611 * C51294 - (C117 * C9460 + C51127 * C9463) * C1494 -
             (C117 * C9462 + C51127 * C9466) * C1489) *
                C38474) *
               C50979) *
              C50994 * C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51309 +
            (C7085 + C7086 - C7087 - C7088) * C51303 + C18222 * C38474) *
               C25801 +
           ((C1366 + C1367 - C1368 - C1369) * C51309 + C7103 * C51303 +
            C17233 * C38474) *
               C50979) *
              C50994 * C51307 +
          (((C7087 - (C7086 + C7085) + C7088) * C51309 +
            (C8093 - (C8094 + C8095) + C8096) * C51303 +
            (C18217 - (C18218 + C18219) + C18220) * C38474) *
               C25801 +
           (C7104 * C51309 + C17234 * C51303 +
            (C17227 - (C17228 + C17229) + C17230) * C38474) *
               C50979) *
              C50994 * C51297 +
          ((C18222 * C51309 + C22837 * C51303 +
            (C22834 + C22833 - C22832 - C22835) * C38474) *
               C25801 +
           (C17233 * C51309 + (C17229 + C17228 - C17227 - C17230) * C51303 +
            (C16438 * C1363 + C16439 * C1358 -
             (C117 * C16587 + C51127 * C16588) * C1364 -
             (C117 * C16589 + C51127 * C16590) * C51044) *
                C38474) *
               C50979) *
              C50994 * C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51309 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51303 +
            (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C38474) *
               C25801 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51309 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51303 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C38474) *
               C50979) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C51309 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51303 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C38474) *
               C25801 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C51309 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51303 +
            (C6455 * C636 - (C1052 * C630 + C1051 * C635) + C6456 * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C38474) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51309 +
            (C5675 + C5676) * C51303 + C16431 * C38474) *
               C25801 +
           ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
               C50979) *
              C112 -
          ((C5670 * C38474 + C530 * C51303 + (C181 + C180) * C51309) * C50979 +
           (C6258 * C38474 + C5668 * C51303 + (C179 + C178) * C51309) *
               C25801) *
              C113 +
          ((C188 * C51309 + C5359 * C51303 + C6257 * C38474) * C25801 +
           (C189 * C51309 + C5669 * C51303 + (C1059 + C1060) * C38474) *
               C50979) *
              C114 -
          ((((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C38474 +
            (C528 + C527) * C51303 + C190 * C51309) *
               C50979 +
           ((C1060 + C1059) * C38474 + C529 * C51303 + C191 * C51309) *
               C25801) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51309 +
             (C5675 + C5676) * C51303 + C16431 * C38474) *
                C25801 +
            ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
                C50979) *
               C51253 -
           ((C5670 * C38474 + C530 * C51303 + (C181 + C180) * C51309) * C50979 +
            (C6258 * C38474 + C5668 * C51303 + (C179 + C178) * C51309) *
                C25801) *
               C50999) *
              C1013 +
          (((C5667 * C51309 + C6256 * C51303 + C16432 * C38474) * C25801 +
            (C5359 * C51309 + C6257 * C51303 + (C6281 + C6282) * C38474) *
                C50979) *
               C50999 -
           ((C16433 * C38474 + C6258 * C51303 + C5668 * C51309) * C50979 +
            (C16724 * C38474 + (C6277 + C6278) * C51303 +
             (C5676 + C5675) * C51309) *
                C25801) *
               C51253) *
              C1014 +
          (((C16431 * C51309 + C21656 * C51303 + (C16731 + C16732) * C38474) *
                C25801 +
            (C6256 * C51309 + C16432 * C51303 + (C16440 + C16441) * C38474) *
                C50979) *
               C51253 -
           ((((C117 * C6563 + C51127 * C6569) * C51028 +
              (C117 * C6560 + C51127 * C6564) * C118) *
                 C38474 +
             (C6282 + C6281) * C51303 + C5670 * C51309) *
                C50979 +
            ((C16441 + C16440) * C38474 + C16433 * C51303 + C6258 * C51309) *
                C25801) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C51309 +
           (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
            C6104 * C767 + C6105 * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C51303 +
           (C6272 * C765 + C6271 * C760 - C6451 * C766 - C6452 * C761 +
            C16281 * C767 + C16282 * C762 -
            (C117 * C9354 + C51127 * C9356) * C768 -
            (C117 * C9357 + C51127 * C9360) * C763) *
               C38474) *
              C25801 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C51309 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C51303 +
           (C1049 * C765 + C1050 * C760 - C6453 * C766 - C6454 * C761 +
            C16025 * C767 + C16026 * C762 -
            (C117 * C9355 + C51127 * C9358) * C768 -
            (C117 * C9359 + C51127 * C9361) * C763) *
               C38474) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51309 +
            (C6429 + C6430 - C6431 - C6432) * C51303 + C16612 * C38474) *
               C25801 +
           ((C325 + C326 - C359 - C360) * C51309 + C7452 * C51303 +
            C16613 * C38474) *
               C50979) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C51309 + C7453 * C51303 +
            C17577 * C38474) *
               C25801 +
           ((C361 - (C332 + C331) + C362) * C51309 + C7454 * C51303 +
            (C6461 - (C6447 + C6448) + C6462) * C38474) *
               C50979) *
              C296 +
          ((C369 * C51309 + C5514 * C51303 +
            (C6448 + C6447 - C6461 - C6462) * C38474) *
               C25801 +
           (C370 * C51309 + (C1918 + C1917 - C1916 - C1919) * C51303 +
            (C1053 * C298 + C1054 * C51260 -
             (C117 * C1161 + C51127 * C1168) * C299 -
             (C117 * C1169 + C51127 * C1173) * C51044) *
                C38474) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51309 +
            (C6429 + C6430 - C6431 - C6432) * C51303 + C16612 * C38474) *
               C25801 +
           ((C325 + C326 - C359 - C360) * C51309 + C7452 * C51303 +
            C16613 * C38474) *
               C50979) *
              C50994 * C1013 +
          (((C6431 - (C6430 + C6429) + C6432) * C51309 +
            (C6457 - (C6435 + C6436) + C6458) * C51303 +
            (C16614 - (C16596 + C16597) + C16615) * C38474) *
               C25801 +
           (C7453 * C51309 + C17577 * C51303 +
            (C16616 - (C16602 + C16603) + C16617) * C38474) *
               C50979) *
              C50994 * C1014 +
          ((C16612 * C51309 + C21765 * C51303 +
            (C21759 + C21758 - C21766 - C21767) * C38474) *
               C25801 +
           (C16613 * C51309 + (C16603 + C16602 - C16616 - C16617) * C51303 +
            (C16438 * C298 + C16439 * C51260 -
             (C117 * C16587 + C51127 * C16588) * C299 -
             (C117 * C16589 + C51127 * C16590) * C51044) *
                C38474) *
               C50979) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (-std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51309 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51303 +
            (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C38474) *
               C25801 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51309 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51303 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C38474) *
               C50979) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C51309 +
            (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C51303 +
            (C21548 - (C21547 + C21546) + C21549 - C21556 - C21557) * C38474) *
               C25801 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51309 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C51303 +
            (C16610 * C636 - (C6274 * C630 + C6273 * C635) + C16611 * C631 -
             (C117 * C9460 + C51127 * C9463) * C637 -
             (C117 * C9462 + C51127 * C9466) * C632) *
                C38474) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51309 +
             (C5675 + C5676) * C51303 + C16431 * C38474) *
                C25801 +
            ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
                C50979) *
               C295 -
           ((C5670 * C38474 + C530 * C51303 + (C181 + C180) * C51309) * C50979 +
            (C6258 * C38474 + C5668 * C51303 + (C179 + C178) * C51309) *
                C25801) *
               C296 +
           ((C188 * C51309 + C5359 * C51303 + C6257 * C38474) * C25801 +
            (C189 * C51309 + C5669 * C51303 + (C1059 + C1060) * C38474) *
                C50979) *
               C297) *
              C51262 +
          (((C5667 * C51309 + C6256 * C51303 + C16432 * C38474) * C25801 +
            (C5359 * C51309 + C6257 * C51303 + (C6281 + C6282) * C38474) *
                C50979) *
               C296 -
           ((C16433 * C38474 + C6258 * C51303 + C5668 * C51309) * C50979 +
            (C16724 * C38474 + (C6277 + C6278) * C51303 +
             (C5676 + C5675) * C51309) *
                C25801) *
               C295 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C38474 +
             (C1060 + C1059) * C51303 + C529 * C51309) *
                C50979 +
            ((C6282 + C6281) * C38474 + C5670 * C51303 + C530 * C51309) *
                C25801) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51309 +
            (C5675 + C5676) * C51303 + C16431 * C38474) *
               C25801 +
           ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
               C50979) *
              C50994 * C1240 -
          ((C16433 * C38474 + C6258 * C51303 + C5668 * C51309) * C50979 +
           (C16724 * C38474 + (C6277 + C6278) * C51303 +
            (C5676 + C5675) * C51309) *
               C25801) *
              C50994 * C1241 +
          ((C16431 * C51309 + C21656 * C51303 + (C16731 + C16732) * C38474) *
               C25801 +
           (C6256 * C51309 + C16432 * C51303 + (C16440 + C16441) * C38474) *
               C50979) *
              C50994 * C1242 -
          ((((C117 * C16717 + C51127 * C16721) * C51028 +
             (C117 * C16715 + C51127 * C16718) * C118) *
                C38474 +
            (C16441 + C16440) * C51303 + C16433 * C51309) *
               C50979 +
           ((C21846 + C21845) * C38474 + C21838 * C51303 + C16724 * C51309) *
               C25801) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51309 +
             (C5675 + C5676) * C51303 + C16431 * C38474) *
                C25801 +
            ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
                C50979) *
               C51305 -
           ((C5670 * C38474 + C530 * C51303 + (C181 + C180) * C51309) * C50979 +
            (C6258 * C38474 + C5668 * C51303 + (C179 + C178) * C51309) *
                C25801) *
               C51291 +
           ((C188 * C51309 + C5359 * C51303 + C6257 * C38474) * C25801 +
            (C189 * C51309 + C5669 * C51303 + (C1059 + C1060) * C38474) *
                C50979) *
               C1362) *
              C1775 +
          (((C5667 * C51309 + C6256 * C51303 + C16432 * C38474) * C25801 +
            (C5359 * C51309 + C6257 * C51303 + (C6281 + C6282) * C38474) *
                C50979) *
               C51291 -
           ((C16433 * C38474 + C6258 * C51303 + C5668 * C51309) * C50979 +
            (C16724 * C38474 + (C6277 + C6278) * C51303 +
             (C5676 + C5675) * C51309) *
                C25801) *
               C51305 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C38474 +
             (C1060 + C1059) * C51303 + C529 * C51309) *
                C50979 +
            ((C6282 + C6281) * C38474 + C5670 * C51303 + C530 * C51309) *
                C25801) *
               C1362) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C298 +
              (C117 * C127 + C51127 * C140) * C51260 -
              (C117 * C300 + C51127 * C306) * C299 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51309 +
             (C6429 + C6430 - C6431 - C6432) * C51303 + C16612 * C38474) *
                C25801 +
            ((C325 + C326 - C359 - C360) * C51309 + C7452 * C51303 +
             C16613 * C38474) *
                C50979) *
               C1490 +
           (((C359 - (C326 + C325) + C360) * C51309 + C7453 * C51303 +
             C17577 * C38474) *
                C25801 +
            ((C361 - (C332 + C331) + C362) * C51309 + C7454 * C51303 +
             (C6461 - (C6447 + C6448) + C6462) * C38474) *
                C50979) *
               C50999) *
              C1775 +
          ((((C6431 - (C6430 + C6429) + C6432) * C51309 +
             (C6457 - (C6435 + C6436) + C6458) * C51303 +
             (C16614 - (C16596 + C16597) + C16615) * C38474) *
                C25801 +
            (C7453 * C51309 + C17577 * C51303 +
             (C16616 - (C16602 + C16603) + C16617) * C38474) *
                C50979) *
               C1490 +
           ((C7452 * C51309 + C16613 * C51303 +
             (C16603 + C16602 - C16616 - C16617) * C38474) *
                C25801 +
            (C5514 * C51309 + (C6448 + C6447 - C6461 - C6462) * C51303 +
             (C6275 * C298 + C6276 * C51260 -
              (C117 * C3755 + C51127 * C3759) * C299 -
              (C117 * C3758 + C51127 * C3764) * C51044) *
                 C38474) *
                C50979) *
               C50999) *
              C51070)) /
        (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51309 +
             (C5675 + C5676) * C51303 + C16431 * C38474) *
                C25801 +
            ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
                C50979) *
               C1490 -
           ((C5670 * C38474 + C530 * C51303 + (C181 + C180) * C51309) * C50979 +
            (C6258 * C38474 + C5668 * C51303 + (C179 + C178) * C51309) *
                C25801) *
               C50999) *
              C51307 +
          (((C5667 * C51309 + C6256 * C51303 + C16432 * C38474) * C25801 +
            (C5359 * C51309 + C6257 * C51303 + (C6281 + C6282) * C38474) *
                C50979) *
               C50999 -
           ((C16433 * C38474 + C6258 * C51303 + C5668 * C51309) * C50979 +
            (C16724 * C38474 + (C6277 + C6278) * C51303 +
             (C5676 + C5675) * C51309) *
                C25801) *
               C1490) *
              C51297 +
          (((C16431 * C51309 + C21656 * C51303 + (C16731 + C16732) * C38474) *
                C25801 +
            (C6256 * C51309 + C16432 * C51303 + (C16440 + C16441) * C38474) *
                C50979) *
               C1490 -
           ((((C117 * C6563 + C51127 * C6569) * C51028 +
              (C117 * C6560 + C51127 * C6564) * C118) *
                 C38474 +
             (C6282 + C6281) * C51303 + C5670 * C51309) *
                C50979 +
            ((C16441 + C16440) * C38474 + C16433 * C51303 + C6258 * C51309) *
                C25801) *
               C50999) *
              C2019)) /
        (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51309 +
            (C5675 + C5676) * C51303 + C16431 * C38474) *
               C25801 +
           ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
               C50979) *
              C112 -
          ((C5670 * C38474 + C530 * C51303 + (C181 + C180) * C51309) * C50979 +
           (C6258 * C38474 + C5668 * C51303 + (C179 + C178) * C51309) *
               C25801) *
              C113 +
          ((C188 * C51309 + C5359 * C51303 + C6257 * C38474) * C25801 +
           (C189 * C51309 + C5669 * C51303 + (C1059 + C1060) * C38474) *
               C50979) *
              C114 -
          ((((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C38474 +
            (C528 + C527) * C51303 + C190 * C51309) *
               C50979 +
           ((C1060 + C1059) * C38474 + C529 * C51303 + C191 * C51309) *
               C25801) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51309 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51303 +
            (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C38474) *
               C25801 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51309 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51303 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C38474) *
               C50979) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C51309 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51303 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C38474) *
               C25801 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C51309 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51303 +
            (C6455 * C636 - (C1052 * C630 + C1051 * C635) + C6456 * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C38474) *
               C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51309 +
            (C6429 + C6430 - C6431 - C6432) * C51303 + C16612 * C38474) *
               C25801 +
           ((C325 + C326 - C359 - C360) * C51309 + C7452 * C51303 +
            C16613 * C38474) *
               C50979) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C51309 + C7453 * C51303 +
            C17577 * C38474) *
               C25801 +
           ((C361 - (C332 + C331) + C362) * C51309 + C7454 * C51303 +
            (C6461 - (C6447 + C6448) + C6462) * C38474) *
               C50979) *
              C296 +
          ((C369 * C51309 + C5514 * C51303 +
            (C6448 + C6447 - C6461 - C6462) * C38474) *
               C25801 +
           (C370 * C51309 + (C1918 + C1917 - C1916 - C1919) * C51303 +
            (C1053 * C298 + C1054 * C51260 -
             (C117 * C1161 + C51127 * C1168) * C299 -
             (C117 * C1169 + C51127 * C1173) * C51044) *
                C38474) *
               C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C51309 +
           (C5672 * C765 + C5673 * C760 - C6102 * C766 - C6103 * C761 +
            C6104 * C767 + C6105 * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C51303 +
           (C6272 * C765 + C6271 * C760 - C6451 * C766 - C6452 * C761 +
            C16281 * C767 + C16282 * C762 -
            (C117 * C9354 + C51127 * C9356) * C768 -
            (C117 * C9357 + C51127 * C9360) * C763) *
               C38474) *
              C25801 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C51309 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C51303 +
           (C1049 * C765 + C1050 * C760 - C6453 * C766 - C6454 * C761 +
            C16025 * C767 + C16026 * C762 -
            (C117 * C9355 + C51127 * C9358) * C768 -
            (C117 * C9359 + C51127 * C9361) * C763) *
               C38474) *
              C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51309 +
             (C5675 + C5676) * C51303 + C16431 * C38474) *
                C25801 +
            ((C178 + C179) * C51309 + C5667 * C51303 + C6256 * C38474) *
                C50979) *
               C295 -
           ((C5670 * C38474 + C530 * C51303 + (C181 + C180) * C51309) * C50979 +
            (C6258 * C38474 + C5668 * C51303 + (C179 + C178) * C51309) *
                C25801) *
               C296 +
           ((C188 * C51309 + C5359 * C51303 + C6257 * C38474) * C25801 +
            (C189 * C51309 + C5669 * C51303 + (C1059 + C1060) * C38474) *
                C50979) *
               C297) *
              C51262 +
          (((C5667 * C51309 + C6256 * C51303 + C16432 * C38474) * C25801 +
            (C5359 * C51309 + C6257 * C51303 + (C6281 + C6282) * C38474) *
                C50979) *
               C296 -
           ((C16433 * C38474 + C6258 * C51303 + C5668 * C51309) * C50979 +
            (C16724 * C38474 + (C6277 + C6278) * C51303 +
             (C5676 + C5675) * C51309) *
                C25801) *
               C295 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C38474 +
             (C1060 + C1059) * C51303 + C529 * C51309) *
                C50979 +
            ((C6282 + C6281) * C38474 + C5670 * C51303 + C530 * C51309) *
                C25801) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51309 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51303 +
            (C16273 + C16274 - C16275 - C16276 + C16283 + C16284) * C38474) *
               C25801 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51309 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51303 +
            (C16017 + C16018 - C16019 - C16020 + C16027 + C16028) * C38474) *
               C50979) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C51309 +
            (C16275 - (C16274 + C16273) + C16276 - C16283 - C16284) * C51303 +
            (C21548 - (C21547 + C21546) + C21549 - C21556 - C21557) * C38474) *
               C25801 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51309 +
            (C16019 - (C16018 + C16017) + C16020 - C16027 - C16028) * C51303 +
            (C16610 * C636 - (C6274 * C630 + C6273 * C635) + C16611 * C631 -
             (C117 * C9460 + C51127 * C9463) * C637 -
             (C117 * C9462 + C51127 * C9466) * C632) *
                C38474) *
               C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1363 +
            (C117 * C127 + C51127 * C140) * C1358 -
            (C117 * C300 + C51127 * C306) * C1364 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
           C1389 * C111) *
              C51305 +
          ((C1368 - (C1367 + C1366) + C1369) * C51157 * C108 +
           (C1372 - (C1371 + C1370) + C1373) * C51157 * C109 +
           (C1376 - (C1375 + C1374) + C1377) * C51157 * C110 +
           (C1378 - (C1379 + C1380) + C1381) * C51157 * C111) *
              C51291 +
          (C1388 * C108 + C1389 * C109 +
           (C1380 + C1379 - C1378 - C1381) * C51157 * C110 +
           (C176 * C1363 + C177 * C1358 -
            (C117 * C305 + C51127 * C316) * C1364 -
            (C117 * C317 + C51127 * C323) * C51044) *
               C51157 * C111) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
            (C8427 + C8428 + C8429) * C1364 -
            (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C51305 +
          (((C8429 + C8428 + C8427) * C1364 -
            ((C8244 + C8243 + C8242) * C1358 +
             (C8241 + C8240 + C8239) * C1363) +
            (C8432 + C8431 + C8430) * C51044) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C1364 -
            ((C8245 + C8246 + C8247) * C1358 +
             (C8248 + C8249 + C8250) * C1363) +
            (C8436 + C8437 + C8438) * C51044) *
               C51157 * C50979) *
              C51291 +
          (((C8250 + C8249 + C8248) * C1363 + (C8247 + C8246 + C8245) * C1358 -
            (C8435 + C8434 + C8433) * C1364 -
            (C8438 + C8437 + C8436) * C51044) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C1363 + (C8254 + C8255 + C8256) * C1358 -
            (C8201 * C772 + C8196 * C779 + C8200 * C641 + C8195 * C649 +
             C8199 * C303 + C8194 * C312) *
                C1364 -
            (C8201 * C780 + C8196 * C784 + C8200 * C650 + C8195 * C656 +
             C8199 * C313 + C8194 * C321) *
                C51044) *
               C51157 * C50979) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1492 +
            (C117 * C127 + C51127 * C140) * C51306 -
            (C117 * C300 + C51127 * C306) * C1493 -
            (C117 * C307 + C51127 * C318) * C51294 +
            (C117 * C638 + C51127 * C643) * C1494 +
            (C117 * C644 + C51127 * C653) * C1489) *
               C51157 * C108 +
           (C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51157 * C109 +
           (C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51157 * C110 +
           (C1508 + C1509 - C1510 - C1511 + C1512 + C1513) * C51157 * C111) *
              C1490 +
          ((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C51157 * C108 +
           (C1504 - (C1503 + C1502) + C1505 - C1506 - C1507) * C51157 * C109 +
           (C1510 - (C1509 + C1508) + C1511 - C1512 - C1513) * C51157 * C110 +
           (C357 * C1493 - (C174 * C51306 + C175 * C1492) + C358 * C51294 -
            (C117 * C642 + C51127 * C651) * C1494 -
            (C117 * C652 + C51127 * C657) * C1489) *
               C51157 * C111) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1492 + (C8242 + C8243 + C8244) * C51306 -
            (C8427 + C8428 + C8429) * C1493 - (C8430 + C8431 + C8432) * C51294 +
            (C8779 + C8780 + C8781) * C1494 + (C8782 + C8783 + C8784) * C1489) *
               C51157 * C50979) *
              C1490 +
          (((C8429 + C8428 + C8427) * C1493 -
            ((C8244 + C8243 + C8242) * C51306 +
             (C8241 + C8240 + C8239) * C1492) +
            (C8432 + C8431 + C8430) * C51294 - (C8781 + C8780 + C8779) * C1494 -
            (C8784 + C8783 + C8782) * C1489) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C1493 -
            ((C8245 + C8246 + C8247) * C51306 +
             (C8248 + C8249 + C8250) * C1492) +
            (C8436 + C8437 + C8438) * C51294 -
            (C8201 * C3161 + C8196 * C3166 + C8200 * C771 + C8195 * C777 +
             C8199 * C640 + C8194 * C647) *
                C1494 -
            (C8201 * C3167 + C8196 * C3170 + C8200 * C778 + C8195 * C783 +
             C8199 * C648 + C8194 * C655) *
                C1489) *
               C51157 * C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51157 * C108 +
            (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
            C1389 * C111) *
               C1490 +
           ((C1368 - (C1367 + C1366) + C1369) * C51157 * C108 +
            (C1372 - (C1371 + C1370) + C1373) * C51157 * C109 +
            (C1376 - (C1375 + C1374) + C1377) * C51157 * C110 +
            (C1378 - (C1379 + C1380) + C1381) * C51157 * C111) *
               C50999) *
              C51262 +
          ((((C117 * C883 + C51127 * C891) * C1364 -
             ((C117 * C486 + C51127 * C494) * C1358 +
              (C117 * C476 + C51127 * C487) * C1363) +
             (C117 * C892 + C51127 * C907) * C51044) *
                C51157 * C108 +
            (C1672 - (C1650 + C1651) + C1673) * C51157 * C109 +
            (C1674 - (C1656 + C1657) + C1675) * C51157 * C110 +
            (C1676 - (C1662 + C1663) + C1677) * C51157 * C111) *
               C1490 +
           ((C1651 + C1650 - C1672 - C1673) * C51157 * C108 +
            (C1657 + C1656 - C1674 - C1675) * C51157 * C109 +
            (C1663 + C1662 - C1676 - C1677) * C51157 * C110 +
            (C519 * C1363 + C520 * C1358 -
             (C117 * C1643 + C51127 * C1644) * C1364 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51157 * C111) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
             (C8427 + C8428 + C8429) * C1364 -
             (C8430 + C8431 + C8432) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51157 * C51246 +
            ((C8433 + C8434 + C8435) * C1364 -
             ((C8245 + C8246 + C8247) * C1358 +
              (C8248 + C8249 + C8250) * C1363) +
             (C8436 + C8437 + C8438) * C51044) *
                C51157 * C50979) *
               C50999) *
              C51262 +
          ((((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
              C8201 * C3317 + C8196 * C3320) *
                 C1364 -
             ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
               C8199 * C486 + C8194 * C494) *
                  C1358 +
              (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
               C8199 * C476 + C8194 * C487) *
                  C1363) +
             (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
              C8201 * C3321 + C8196 * C3326) *
                 C51044) *
                C51157 * C51246 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C1363 + (C8618 + C8619 + C8620) * C1358 -
             (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
              C8199 * C887 + C8194 * C899) *
                 C1364 -
             (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
              C8199 * C900 + C8194 * C911) *
                 C51044) *
                C51157 * C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51157 * C108 +
            (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
            C1389 * C111) *
               C51253 +
           ((C1368 - (C1367 + C1366) + C1369) * C51157 * C108 +
            (C1372 - (C1371 + C1370) + C1373) * C51157 * C109 +
            (C1376 - (C1375 + C1374) + C1377) * C51157 * C110 +
            (C1378 - (C1379 + C1380) + C1381) * C51157 * C111) *
               C50999) *
              C1775 +
          ((((C117 * C883 + C51127 * C891) * C1364 -
             ((C117 * C486 + C51127 * C494) * C1358 +
              (C117 * C476 + C51127 * C487) * C1363) +
             (C117 * C892 + C51127 * C907) * C51044) *
                C51157 * C108 +
            (C1672 - (C1650 + C1651) + C1673) * C51157 * C109 +
            (C1674 - (C1656 + C1657) + C1675) * C51157 * C110 +
            (C1676 - (C1662 + C1663) + C1677) * C51157 * C111) *
               C51253 +
           ((C1651 + C1650 - C1672 - C1673) * C51157 * C108 +
            (C1657 + C1656 - C1674 - C1675) * C51157 * C109 +
            (C1663 + C1662 - C1676 - C1677) * C51157 * C110 +
            (C519 * C1363 + C520 * C1358 -
             (C117 * C1643 + C51127 * C1644) * C1364 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51157 * C111) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
             (C8427 + C8428 + C8429) * C1364 -
             (C8430 + C8431 + C8432) * C51044) *
                C51157 * C50979) *
               C51253 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51157 * C51246 +
            ((C8433 + C8434 + C8435) * C1364 -
             ((C8245 + C8246 + C8247) * C1358 +
              (C8248 + C8249 + C8250) * C1363) +
             (C8436 + C8437 + C8438) * C51044) *
                C51157 * C50979) *
               C50999) *
              C1775 +
          ((((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
              C8201 * C3317 + C8196 * C3320) *
                 C1364 -
             ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
               C8199 * C486 + C8194 * C494) *
                  C1358 +
              (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
               C8199 * C476 + C8194 * C487) *
                  C1363) +
             (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
              C8201 * C3321 + C8196 * C3326) *
                 C51044) *
                C51157 * C51246 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51157 * C50979) *
               C51253 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C1363 + (C8618 + C8619 + C8620) * C1358 -
             (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
              C8199 * C887 + C8194 * C899) *
                 C1364 -
             (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
              C8199 * C900 + C8194 * C911) *
                 C51044) *
                C51157 * C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1492 +
            (C117 * C127 + C51127 * C140) * C51306 -
            (C117 * C300 + C51127 * C306) * C1493 -
            (C117 * C307 + C51127 * C318) * C51294 +
            (C117 * C638 + C51127 * C643) * C1494 +
            (C117 * C644 + C51127 * C653) * C1489) *
               C51157 * C108 +
           (C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51157 * C109 +
           (C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51157 * C110 +
           (C1508 + C1509 - C1510 - C1511 + C1512 + C1513) * C51157 * C111) *
              C50994 * C1775 +
          (((C117 * C883 + C51127 * C891) * C1493 -
            ((C117 * C486 + C51127 * C494) * C51306 +
             (C117 * C476 + C51127 * C487) * C1492) +
            (C117 * C892 + C51127 * C907) * C51294 -
            (C117 * C884 + C51127 * C893) * C1494 -
            (C117 * C894 + C51127 * C908) * C1489) *
               C51157 * C108 +
           (C1666 * C1493 - (C514 * C51306 + C513 * C1492) + C1667 * C51294 -
            (C117 * C886 + C51127 * C897) * C1494 -
            (C117 * C898 + C51127 * C910) * C1489) *
               C51157 * C109 +
           (C1668 * C1493 - (C516 * C51306 + C515 * C1492) + C1669 * C51294 -
            (C117 * C888 + C51127 * C901) * C1494 -
            (C117 * C902 + C51127 * C912) * C1489) *
               C51157 * C110 +
           (C1670 * C1493 - (C518 * C51306 + C517 * C1492) + C1671 * C51294 -
            (C117 * C890 + C51127 * C905) * C1494 -
            (C117 * C906 + C51127 * C914) * C1489) *
               C51157 * C111) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1492 + (C8242 + C8243 + C8244) * C51306 -
            (C8427 + C8428 + C8429) * C1493 - (C8430 + C8431 + C8432) * C51294 +
            (C8779 + C8780 + C8781) * C1494 + (C8782 + C8783 + C8784) * C1489) *
               C51157 * C50979) *
              C50994 * C1775 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C1493 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51306 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C1492) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C51294 -
            (C8201 * C9036 + C8196 * C9038 + C8200 * C3317 + C8195 * C3320 +
             C8199 * C884 + C8194 * C893) *
                C1494 -
            (C8201 * C9039 + C8196 * C9042 + C8200 * C3321 + C8195 * C3326 +
             C8199 * C894 + C8194 * C908) *
                C1489) *
               C51157 * C51246 +
           ((C9967 + C9968 + C9969) * C1493 -
            ((C8614 + C8613 + C8612) * C51306 +
             (C8611 + C8610 + C8609) * C1492) +
            (C9970 + C9971 + C9972) * C51294 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C1494 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C1489) *
               C51157 * C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C1363 +
            (C117 * C127 + C51127 * C140) * C1358 -
            (C117 * C300 + C51127 * C306) * C1364 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C1366 + C1367 - C1368 - C1369) * C51157 * C109 + C1388 * C110 +
           C1389 * C111) *
              C50994 * C51307 +
          (((C117 * C883 + C51127 * C891) * C1364 -
            ((C117 * C486 + C51127 * C494) * C1358 +
             (C117 * C476 + C51127 * C487) * C1363) +
            (C117 * C892 + C51127 * C907) * C51044) *
               C51157 * C108 +
           (C1672 - (C1650 + C1651) + C1673) * C51157 * C109 +
           (C1674 - (C1656 + C1657) + C1675) * C51157 * C110 +
           (C1676 - (C1662 + C1663) + C1677) * C51157 * C111) *
              C50994 * C51297 +
          (((C117 * C1016 + C51127 * C1021) * C1363 +
            (C117 * C1022 + C51127 * C1031) * C1358 -
            (C117 * C1158 + C51127 * C1162) * C1364 -
            (C117 * C1163 + C51127 * C1170) * C51044) *
               C51157 * C108 +
           (C1049 * C1363 + C1050 * C1358 -
            (C117 * C1159 + C51127 * C1164) * C1364 -
            (C117 * C1165 + C51127 * C1171) * C51044) *
               C51157 * C109 +
           (C1051 * C1363 + C1052 * C1358 -
            (C117 * C1160 + C51127 * C1166) * C1364 -
            (C117 * C1167 + C51127 * C1172) * C51044) *
               C51157 * C110 +
           (C1053 * C1363 + C1054 * C1358 -
            (C117 * C1161 + C51127 * C1168) * C1364 -
            (C117 * C1169 + C51127 * C1173) * C51044) *
               C51157 * C111) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C1363 + (C8242 + C8243 + C8244) * C1358 -
            (C8427 + C8428 + C8429) * C1364 -
            (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C50994 * C51307 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C1364 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C1358 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C1363) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C51044) *
               C51157 * C51246 +
           ((C9967 + C9968 + C9969) * C1364 -
            ((C8614 + C8613 + C8612) * C1358 +
             (C8611 + C8610 + C8609) * C1363) +
            (C9970 + C9971 + C9972) * C51044) *
               C51157 * C50979) *
              C50994 * C51297 +
          (((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
             C8201 * C3645 + C8196 * C3648) *
                C1363 +
            (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
             C8201 * C3649 + C8196 * C3654) *
                C1358 -
            (C8201 * C9354 + C8196 * C9356 + C8200 * C3645 + C8195 * C3648 +
             C8199 * C1158 + C8194 * C1162) *
                C1364 -
            (C8201 * C9357 + C8196 * C9360 + C8200 * C3649 + C8195 * C3654 +
             C8199 * C1163 + C8194 * C1170) *
                C51044) *
               C51157 * C51246 +
           ((C9203 + C9204 + C9205) * C1363 + (C9206 + C9207 + C9208) * C1358 -
            (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
             C8199 * C1159 + C8194 * C1164) *
                C1364 -
            (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
             C8199 * C1165 + C8194 * C1171) *
                C51044) *
               C51157 * C50979) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C51157 * C108 +
           (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
           (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
           (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
              C51253 +
          ((C661 - (C660 + C659) + C662 - C689 - C690) * C51157 * C108 +
           (C669 - (C668 + C667) + C670 - C691 - C692) * C51157 * C109 +
           (C677 - (C676 + C675) + C678 - C693 - C694) * C51157 * C110 +
           (C357 * C636 - (C174 * C630 + C175 * C635) + C358 * C631 -
            (C117 * C642 + C51127 * C651) * C637 -
            (C117 * C652 + C51127 * C657) * C632) *
               C51157 * C111) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C51157 * C108 +
           (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
              C112 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
           (C179 + C178) * C51157 * C108) *
              C113 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
           (C186 + C187) * C51157 * C111) *
              C114 -
          (((C117 * C138 + C51127 * C146) * C51028 +
            (C117 * C125 + C51127 * C139) * C118) *
               C51157 * C111 +
           (C187 + C186) * C51157 * C110 + C194 * C109 + C195 * C108) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C51253 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C50999) *
              C1013 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C50999 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C51253) *
              C1014 +
          ((((C117 * C1016 + C51127 * C1021) * C118 +
             (C117 * C1022 + C51127 * C1031) * C51028) *
                C51157 * C108 +
            (C1055 + C1056) * C51157 * C109 + (C1057 + C1058) * C51157 * C110 +
            (C1059 + C1060) * C51157 * C111) *
               C51253 -
           (((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C51157 * C111 +
            (C1060 + C1059) * C51157 * C110 + (C1058 + C1057) * C51157 * C109 +
            (C1056 + C1055) * C51157 * C108) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C118 + (C8242 + C8243 + C8244) * C51028) *
               C51157 * C50979) *
              C112 -
          (((C8245 + C8246 + C8247) * C51028 + (C8248 + C8249 + C8250) * C118) *
               C51157 * C50979 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51157 * C51246) *
              C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C118 + (C8254 + C8255 + C8256) * C51028) *
               C51157 * C50979) *
              C114 -
          (((C8201 * C652 + C8196 * C657 + C8200 * C315 + C8195 * C322 +
             C8199 * C134 + C8194 * C144) *
                C51028 +
            (C8201 * C642 + C8196 * C651 + C8200 * C304 + C8195 * C314 +
             C8199 * C123 + C8194 * C135) *
                C118) *
               C51157 * C50979 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51157 * C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C636 -
            ((C8245 + C8246 + C8247) * C630 + (C8248 + C8249 + C8250) * C635) +
            (C8436 + C8437 + C8438) * C631 -
            (C8201 * C3161 + C8196 * C3166 + C8200 * C771 + C8195 * C777 +
             C8199 * C640 + C8194 * C647) *
                C637 -
            (C8201 * C3167 + C8196 * C3170 + C8200 * C778 + C8195 * C783 +
             C8199 * C648 + C8194 * C655) *
                C632) *
               C51157 * C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C51253 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C50999) *
              C1013 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C50999 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C51253) *
              C1014 +
          ((((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
              C8201 * C3645 + C8196 * C3648) *
                 C118 +
             (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
              C8201 * C3649 + C8196 * C3654) *
                 C51028) *
                C51157 * C51246 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51157 * C50979) *
               C51253 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51157 * C50979 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51157 * C51246) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51127 * C126) * C765 +
           (C117 * C127 + C51127 * C140) * C760 -
           (C117 * C300 + C51127 * C306) * C766 -
           (C117 * C307 + C51127 * C318) * C761 +
           (C117 * C638 + C51127 * C643) * C767 +
           (C117 * C644 + C51127 * C653) * C762 -
           (C117 * C769 + C51127 * C773) * C768 -
           (C117 * C774 + C51127 * C781) * C763) *
              C51157 * C108 +
          (C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 + C683 * C767 +
           C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
           (C117 * C776 + C51127 * C782) * C763) *
              C51157 * C109 +
          (C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 + C685 * C767 +
           C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
           (C117 * C778 + C51127 * C783) * C763) *
              C51157 * C110 +
          (C172 * C765 + C173 * C760 - C355 * C766 - C356 * C761 + C687 * C767 +
           C688 * C762 - (C117 * C772 + C51127 * C779) * C768 -
           (C117 * C780 + C51127 * C784) * C763) *
              C51157 * C111) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C298 +
            (C117 * C127 + C51127 * C140) * C51260 -
            (C117 * C300 + C51127 * C306) * C299 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C325 + C326 - C359 - C360) * C51157 * C109 + C371 * C110 +
           C372 * C111) *
              C295 +
          ((C359 - (C326 + C325) + C360) * C51157 * C108 +
           (C361 - (C332 + C331) + C362) * C51157 * C109 +
           (C363 - (C338 + C337) + C364) * C51157 * C110 +
           (C365 - (C345 + C346) + C366) * C51157 * C111) *
              C296 +
          (C371 * C108 + C372 * C109 +
           (C346 + C345 - C365 - C366) * C51157 * C110 +
           (C176 * C298 + C177 * C51260 - (C117 * C305 + C51127 * C316) * C299 -
            (C117 * C317 + C51127 * C323) * C51044) *
               C51157 * C111) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C298 +
            (C117 * C127 + C51127 * C140) * C51260 -
            (C117 * C300 + C51127 * C306) * C299 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C325 + C326 - C359 - C360) * C51157 * C109 + C371 * C110 +
           C372 * C111) *
              C50994 * C1013 +
          (((C117 * C883 + C51127 * C891) * C299 -
            ((C117 * C486 + C51127 * C494) * C51260 +
             (C117 * C476 + C51127 * C487) * C298) +
            (C117 * C892 + C51127 * C907) * C51044) *
               C51157 * C108 +
           ((C117 * C885 + C51127 * C895) * C299 -
            (C514 * C51260 + C513 * C298) +
            (C117 * C896 + C51127 * C909) * C51044) *
               C51157 * C109 +
           ((C117 * C887 + C51127 * C899) * C299 -
            (C516 * C51260 + C515 * C298) +
            (C117 * C900 + C51127 * C911) * C51044) *
               C51157 * C110 +
           ((C117 * C889 + C51127 * C903) * C299 -
            (C518 * C51260 + C517 * C298) +
            (C117 * C904 + C51127 * C913) * C51044) *
               C51157 * C111) *
              C50994 * C1014 +
          (((C117 * C1016 + C51127 * C1021) * C298 +
            (C117 * C1022 + C51127 * C1031) * C51260 -
            (C117 * C1158 + C51127 * C1162) * C299 -
            (C117 * C1163 + C51127 * C1170) * C51044) *
               C51157 * C108 +
           (C1049 * C298 + C1050 * C51260 -
            (C117 * C1159 + C51127 * C1164) * C299 -
            (C117 * C1165 + C51127 * C1171) * C51044) *
               C51157 * C109 +
           (C1051 * C298 + C1052 * C51260 -
            (C117 * C1160 + C51127 * C1166) * C299 -
            (C117 * C1167 + C51127 * C1172) * C51044) *
               C51157 * C110 +
           (C1053 * C298 + C1054 * C51260 -
            (C117 * C1161 + C51127 * C1168) * C299 -
            (C117 * C1169 + C51127 * C1173) * C51044) *
               C51157 * C111) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
            (C8427 + C8428 + C8429) * C299 - (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C299 -
            ((C8245 + C8246 + C8247) * C51260 +
             (C8248 + C8249 + C8250) * C298) +
            (C8436 + C8437 + C8438) * C51044) *
               C51157 * C50979) *
              C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C298 + (C8254 + C8255 + C8256) * C51260 -
            (C8201 * C772 + C8196 * C779 + C8200 * C641 + C8195 * C649 +
             C8199 * C303 + C8194 * C312) *
                C299 -
            (C8201 * C780 + C8196 * C784 + C8200 * C650 + C8195 * C656 +
             C8199 * C313 + C8194 * C321) *
                C51044) *
               C51157 * C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51157 * C51246 +
          ((C8239 + C8240 + C8241) * C765 + (C8242 + C8243 + C8244) * C760 -
           (C8427 + C8428 + C8429) * C766 - (C8430 + C8431 + C8432) * C761 +
           (C8779 + C8780 + C8781) * C767 + (C8782 + C8783 + C8784) * C762 -
           (C8201 * C8883 + C8196 * C8886 + C8200 * C3160 + C8195 * C3164 +
            C8199 * C770 + C8194 * C775) *
               C768 -
           (C8201 * C8887 + C8196 * C8889 + C8200 * C3165 + C8195 * C3169 +
            C8199 * C776 + C8194 * C782) *
               C763) *
              C51157 * C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
            (C8427 + C8428 + C8429) * C299 - (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C50994 * C1013 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C299 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51260 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C298) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C51044) *
               C51157 * C51246 +
           ((C8199 * C885 + C8194 * C895 + C8200 * C886 + C8195 * C897 +
             C8201 * C3318 + C8196 * C3322) *
                C299 -
            ((C8614 + C8613 + C8612) * C51260 +
             (C8611 + C8610 + C8609) * C298) +
            (C8199 * C896 + C8194 * C909 + C8200 * C898 + C8195 * C910 +
             C8201 * C3323 + C8196 * C3327) *
                C51044) *
               C51157 * C50979) *
              C50994 * C1014 +
          (((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
             C8201 * C3645 + C8196 * C3648) *
                C298 +
            (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
             C8201 * C3649 + C8196 * C3654) *
                C51260 -
            (C8201 * C9354 + C8196 * C9356 + C8200 * C3645 + C8195 * C3648 +
             C8199 * C1158 + C8194 * C1162) *
                C299 -
            (C8201 * C9357 + C8196 * C9360 + C8200 * C3649 + C8195 * C3654 +
             C8199 * C1163 + C8194 * C1170) *
                C51044) *
               C51157 * C51246 +
           ((C9203 + C9204 + C9205) * C298 + (C9206 + C9207 + C9208) * C51260 -
            (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
             C8199 * C1159 + C8194 * C1164) *
                C299 -
            (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
             C8199 * C1165 + C8194 * C1171) *
                C51044) *
               C51157 * C50979) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C51157 * C108 +
           (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
           (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
           (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
              C50994 * C51262 +
          (((C117 * C883 + C51127 * C891) * C636 -
            ((C117 * C486 + C51127 * C494) * C630 +
             (C117 * C476 + C51127 * C487) * C635) +
            (C117 * C892 + C51127 * C907) * C631 -
            (C117 * C884 + C51127 * C893) * C637 -
            (C117 * C894 + C51127 * C908) * C632) *
               C51157 * C108 +
           ((C117 * C885 + C51127 * C895) * C636 - (C514 * C630 + C513 * C635) +
            (C117 * C896 + C51127 * C909) * C631 -
            (C117 * C886 + C51127 * C897) * C637 -
            (C117 * C898 + C51127 * C910) * C632) *
               C51157 * C109 +
           ((C117 * C887 + C51127 * C899) * C636 - (C516 * C630 + C515 * C635) +
            (C117 * C900 + C51127 * C911) * C631 -
            (C117 * C888 + C51127 * C901) * C637 -
            (C117 * C902 + C51127 * C912) * C632) *
               C51157 * C110 +
           ((C117 * C889 + C51127 * C903) * C636 - (C518 * C630 + C517 * C635) +
            (C117 * C904 + C51127 * C913) * C631 -
            (C117 * C890 + C51127 * C905) * C637 -
            (C117 * C906 + C51127 * C914) * C632) *
               C51157 * C111) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C295 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C296 +
           (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
            (C186 + C187) * C51157 * C111) *
               C297) *
              C51262 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C296 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C295 -
           (((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51157 * C111 +
            (C528 + C527) * C51157 * C110 + C531 * C109 + C532 * C108) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C51157 * C108 +
           (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
              C50994 * C1240 -
          (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
           ((C117 * C486 + C51127 * C494) * C51028 +
            (C117 * C476 + C51127 * C487) * C118) *
               C51157 * C108) *
              C50994 * C1241 +
          (((C117 * C1016 + C51127 * C1021) * C118 +
            (C117 * C1022 + C51127 * C1031) * C51028) *
               C51157 * C108 +
           (C1055 + C1056) * C51157 * C109 + (C1057 + C1058) * C51157 * C110 +
           (C1059 + C1060) * C51157 * C111) *
              C50994 * C1242 -
          (((C117 * C1248 + C51127 * C1256) * C51028 +
            (C117 * C1244 + C51127 * C1249) * C118) *
               C51157 * C111 +
           ((C117 * C1250 + C51127 * C1257) * C51028 +
            (C117 * C1245 + C51127 * C1251) * C118) *
               C51157 * C110 +
           ((C117 * C1252 + C51127 * C1258) * C51028 +
            (C117 * C1246 + C51127 * C1253) * C118) *
               C51157 * C109 +
           ((C117 * C1254 + C51127 * C1259) * C51028 +
            (C117 * C1247 + C51127 * C1255) * C118) *
               C51157 * C108) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C295 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51157 * C51246 +
            ((C8251 + C8252 + C8253) * C118 +
             (C8254 + C8255 + C8256) * C51028) *
                C51157 * C50979) *
               C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C296 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C295 -
           (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
              C8199 * C483 + C8194 * C492) *
                 C51028 +
             (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
              C8199 * C474 + C8194 * C482) *
                 C118) *
                C51157 * C50979 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51157 * C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C50994 * C51262 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C636 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C630 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C635) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C631 -
            (C8201 * C9036 + C8196 * C9038 + C8200 * C3317 + C8195 * C3320 +
             C8199 * C884 + C8194 * C893) *
                C637 -
            (C8201 * C9039 + C8196 * C9042 + C8200 * C3321 + C8195 * C3326 +
             C8199 * C894 + C8194 * C908) *
                C632) *
               C51157 * C51246 +
           ((C8199 * C885 + C8194 * C895 + C8200 * C886 + C8195 * C897 +
             C8201 * C3318 + C8196 * C3322) *
                C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C8199 * C896 + C8194 * C909 + C8200 * C898 + C8195 * C910 +
             C8201 * C3323 + C8196 * C3327) *
                C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51157 * C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C118 + (C8242 + C8243 + C8244) * C51028) *
               C51157 * C50979) *
              C50994 * C1240 -
          (((C8614 + C8613 + C8612) * C51028 + (C8611 + C8610 + C8609) * C118) *
               C51157 * C50979 +
           ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
             C8199 * C486 + C8194 * C494) *
                C51028 +
            (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
             C8199 * C476 + C8194 * C487) *
                C118) *
               C51157 * C51246) *
              C50994 * C1241 +
          (((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
             C8201 * C3645 + C8196 * C3648) *
                C118 +
            (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
             C8201 * C3649 + C8196 * C3654) *
                C51028) *
               C51157 * C51246 +
           ((C9203 + C9204 + C9205) * C118 + (C9206 + C9207 + C9208) * C51028) *
               C51157 * C50979) *
              C50994 * C1242 -
          (((C8201 * C9462 + C8196 * C9466 + C8200 * C3760 + C8195 * C3765 +
             C8199 * C1252 + C8194 * C1258) *
                C51028 +
            (C8201 * C9460 + C8196 * C9463 + C8200 * C3756 + C8195 * C3761 +
             C8199 * C1246 + C8194 * C1253) *
                C118) *
               C51157 * C50979 +
           ((C8201 * C9464 + C8196 * C9467 + C8200 * C3762 + C8195 * C3766 +
             C8199 * C1254 + C8194 * C1259) *
                C51028 +
            (C8201 * C9461 + C8196 * C9465 + C8200 * C3757 + C8195 * C3763 +
             C8199 * C1247 + C8194 * C1255) *
                C118) *
               C51157 * C51246) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C51305 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C51291 +
           (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
            (C186 + C187) * C51157 * C111) *
               C1362) *
              C1775 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C51291 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C51305 -
           (((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51157 * C111 +
            (C528 + C527) * C51157 * C110 + C531 * C109 + C532 * C108) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C51305 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C51291 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51157 * C51246 +
            ((C8251 + C8252 + C8253) * C118 +
             (C8254 + C8255 + C8256) * C51028) *
                C51157 * C50979) *
               C1362) *
              C1775 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C51291 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C51305 -
           (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
              C8199 * C483 + C8194 * C492) *
                 C51028 +
             (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
              C8199 * C474 + C8194 * C482) *
                 C118) *
                C51157 * C50979 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51157 * C51246) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51157 * C108 +
            (C325 + C326 - C359 - C360) * C51157 * C109 + C371 * C110 +
            C372 * C111) *
               C1490 +
           ((C359 - (C326 + C325) + C360) * C51157 * C108 +
            (C361 - (C332 + C331) + C362) * C51157 * C109 +
            (C363 - (C338 + C337) + C364) * C51157 * C110 +
            (C365 - (C345 + C346) + C366) * C51157 * C111) *
               C50999) *
              C1775 +
          ((((C117 * C883 + C51127 * C891) * C299 -
             ((C117 * C486 + C51127 * C494) * C51260 +
              (C117 * C476 + C51127 * C487) * C298) +
             (C117 * C892 + C51127 * C907) * C51044) *
                C51157 * C108 +
            (C1908 - (C1909 + C1910) + C1911) * C51157 * C109 +
            (C1912 - (C1913 + C1914) + C1915) * C51157 * C110 +
            (C1916 - (C1917 + C1918) + C1919) * C51157 * C111) *
               C1490 +
           ((C1910 + C1909 - C1908 - C1911) * C51157 * C108 +
            (C1914 + C1913 - C1912 - C1915) * C51157 * C109 +
            (C1918 + C1917 - C1916 - C1919) * C51157 * C110 +
            (C519 * C298 + C520 * C51260 -
             (C117 * C1643 + C51127 * C1644) * C299 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51157 * C111) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C298 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51260 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C299 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
             (C8427 + C8428 + C8429) * C299 -
             (C8430 + C8431 + C8432) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8429 + C8428 + C8427) * C299 -
             ((C8244 + C8243 + C8242) * C51260 +
              (C8241 + C8240 + C8239) * C298) +
             (C8432 + C8431 + C8430) * C51044) *
                C51157 * C51246 +
            ((C8433 + C8434 + C8435) * C299 -
             ((C8245 + C8246 + C8247) * C51260 +
              (C8248 + C8249 + C8250) * C298) +
             (C8436 + C8437 + C8438) * C51044) *
                C51157 * C50979) *
               C50999) *
              C1775 +
          ((((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
              C8201 * C3317 + C8196 * C3320) *
                 C299 -
             ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
               C8199 * C486 + C8194 * C494) *
                  C51260 +
              (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
               C8199 * C476 + C8194 * C487) *
                  C298) +
             (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
              C8201 * C3321 + C8196 * C3326) *
                 C51044) *
                C51157 * C51246 +
            ((C9967 + C9968 + C9969) * C299 -
             ((C8614 + C8613 + C8612) * C51260 +
              (C8611 + C8610 + C8609) * C298) +
             (C9970 + C9971 + C9972) * C51044) *
                C51157 * C50979) *
               C1490 +
           (((C8609 + C8610 + C8611) * C298 + (C8612 + C8613 + C8614) * C51260 -
             (C9969 + C9968 + C9967) * C299 -
             (C9972 + C9971 + C9970) * C51044) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C298 + (C8618 + C8619 + C8620) * C51260 -
             (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
              C8199 * C887 + C8194 * C899) *
                 C299 -
             (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
              C8199 * C900 + C8194 * C911) *
                 C51044) *
                C51157 * C50979) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C1490 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C50999) *
              C51307 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C50999 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C1490) *
              C51297 +
          ((((C117 * C1016 + C51127 * C1021) * C118 +
             (C117 * C1022 + C51127 * C1031) * C51028) *
                C51157 * C108 +
            (C1055 + C1056) * C51157 * C109 + (C1057 + C1058) * C51157 * C110 +
            (C1059 + C1060) * C51157 * C111) *
               C1490 -
           (((C117 * C1029 + C51127 * C1035) * C51028 +
             (C117 * C1020 + C51127 * C1030) * C118) *
                C51157 * C111 +
            (C1060 + C1059) * C51157 * C110 + (C1058 + C1057) * C51157 * C109 +
            (C1056 + C1055) * C51157 * C108) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C1490 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C50999) *
              C51307 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C50999 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C1490) *
              C51297 +
          ((((C8199 * C1016 + C8194 * C1021 + C8200 * C1158 + C8195 * C1162 +
              C8201 * C3645 + C8196 * C3648) *
                 C118 +
             (C8199 * C1022 + C8194 * C1031 + C8200 * C1163 + C8195 * C1170 +
              C8201 * C3649 + C8196 * C3654) *
                 C51028) *
                C51157 * C51246 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51157 * C50979) *
               C1490 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51157 * C50979 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51157 * C51246) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C118 +
            (C117 * C127 + C51127 * C140) * C51028) *
               C51157 * C108 +
           (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
              C112 -
          (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
           (C179 + C178) * C51157 * C108) *
              C113 +
          (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
           (C186 + C187) * C51157 * C111) *
              C114 -
          (((C117 * C138 + C51127 * C146) * C51028 +
            (C117 * C125 + C51127 * C139) * C118) *
               C51157 * C111 +
           (C187 + C186) * C51157 * C110 + C194 * C109 + C195 * C108) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C51157 * C108 +
           (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
           (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
           (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
              C51253 +
          ((C661 - (C660 + C659) + C662 - C689 - C690) * C51157 * C108 +
           (C669 - (C668 + C667) + C670 - C691 - C692) * C51157 * C109 +
           (C677 - (C676 + C675) + C678 - C693 - C694) * C51157 * C110 +
           (C357 * C636 - (C174 * C630 + C175 * C635) + C358 * C631 -
            (C117 * C642 + C51127 * C651) * C637 -
            (C117 * C652 + C51127 * C657) * C632) *
               C51157 * C111) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C118 + (C8242 + C8243 + C8244) * C51028) *
               C51157 * C50979) *
              C112 -
          (((C8245 + C8246 + C8247) * C51028 + (C8248 + C8249 + C8250) * C118) *
               C51157 * C50979 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51157 * C51246) *
              C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C118 + (C8254 + C8255 + C8256) * C51028) *
               C51157 * C50979) *
              C114 -
          (((C8201 * C652 + C8196 * C657 + C8200 * C315 + C8195 * C322 +
             C8199 * C134 + C8194 * C144) *
                C51028 +
            (C8201 * C642 + C8196 * C651 + C8200 * C304 + C8195 * C314 +
             C8199 * C123 + C8194 * C135) *
                C118) *
               C51157 * C50979 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51157 * C51246) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C636 -
            ((C8245 + C8246 + C8247) * C630 + (C8248 + C8249 + C8250) * C635) +
            (C8436 + C8437 + C8438) * C631 -
            (C8201 * C3161 + C8196 * C3166 + C8200 * C771 + C8195 * C777 +
             C8199 * C640 + C8194 * C647) *
                C637 -
            (C8201 * C3167 + C8196 * C3170 + C8200 * C778 + C8195 * C783 +
             C8199 * C648 + C8194 * C655) *
                C632) *
               C51157 * C50979) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C298 +
            (C117 * C127 + C51127 * C140) * C51260 -
            (C117 * C300 + C51127 * C306) * C299 -
            (C117 * C307 + C51127 * C318) * C51044) *
               C51157 * C108 +
           (C325 + C326 - C359 - C360) * C51157 * C109 + C371 * C110 +
           C372 * C111) *
              C295 +
          ((C359 - (C326 + C325) + C360) * C51157 * C108 +
           (C361 - (C332 + C331) + C362) * C51157 * C109 +
           (C363 - (C338 + C337) + C364) * C51157 * C110 +
           (C365 - (C345 + C346) + C366) * C51157 * C111) *
              C296 +
          (C371 * C108 + C372 * C109 +
           (C346 + C345 - C365 - C366) * C51157 * C110 +
           (C176 * C298 + C177 * C51260 - (C117 * C305 + C51127 * C316) * C299 -
            (C117 * C317 + C51127 * C323) * C51044) *
               C51157 * C111) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C117 * C119 + C51127 * C126) * C765 +
           (C117 * C127 + C51127 * C140) * C760 -
           (C117 * C300 + C51127 * C306) * C766 -
           (C117 * C307 + C51127 * C318) * C761 +
           (C117 * C638 + C51127 * C643) * C767 +
           (C117 * C644 + C51127 * C653) * C762 -
           (C117 * C769 + C51127 * C773) * C768 -
           (C117 * C774 + C51127 * C781) * C763) *
              C51157 * C108 +
          (C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 + C683 * C767 +
           C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
           (C117 * C776 + C51127 * C782) * C763) *
              C51157 * C109 +
          (C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 + C685 * C767 +
           C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
           (C117 * C778 + C51127 * C783) * C763) *
              C51157 * C110 +
          (C172 * C765 + C173 * C760 - C355 * C766 - C356 * C761 + C687 * C767 +
           C688 * C762 - (C117 * C772 + C51127 * C779) * C768 -
           (C117 * C780 + C51127 * C784) * C763) *
              C51157 * C111) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C298 + (C8242 + C8243 + C8244) * C51260 -
            (C8427 + C8428 + C8429) * C299 - (C8430 + C8431 + C8432) * C51044) *
               C51157 * C50979) *
              C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51157 * C51246 +
           ((C8433 + C8434 + C8435) * C299 -
            ((C8245 + C8246 + C8247) * C51260 +
             (C8248 + C8249 + C8250) * C298) +
            (C8436 + C8437 + C8438) * C51044) *
               C51157 * C50979) *
              C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51157 * C51246 +
           ((C8251 + C8252 + C8253) * C298 + (C8254 + C8255 + C8256) * C51260 -
            (C8201 * C772 + C8196 * C779 + C8200 * C641 + C8195 * C649 +
             C8199 * C303 + C8194 * C312) *
                C299 -
            (C8201 * C780 + C8196 * C784 + C8200 * C650 + C8195 * C656 +
             C8199 * C313 + C8194 * C321) *
                C51044) *
               C51157 * C50979) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51157 * C51246 +
          ((C8239 + C8240 + C8241) * C765 + (C8242 + C8243 + C8244) * C760 -
           (C8427 + C8428 + C8429) * C766 - (C8430 + C8431 + C8432) * C761 +
           (C8779 + C8780 + C8781) * C767 + (C8782 + C8783 + C8784) * C762 -
           (C8201 * C8883 + C8196 * C8886 + C8200 * C3160 + C8195 * C3164 +
            C8199 * C770 + C8194 * C775) *
               C768 -
           (C8201 * C8887 + C8196 * C8889 + C8200 * C3165 + C8195 * C3169 +
            C8199 * C776 + C8194 * C782) *
               C763) *
              C51157 * C50979) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51157 * C108 +
            (C178 + C179) * C51157 * C109 + C192 * C110 + C193 * C111) *
               C295 -
           (C194 * C111 + C195 * C110 + (C181 + C180) * C51157 * C109 +
            (C179 + C178) * C51157 * C108) *
               C296 +
           (C192 * C108 + C193 * C109 + (C185 + C184) * C51157 * C110 +
            (C186 + C187) * C51157 * C111) *
               C297) *
              C51262 +
          (((C521 + C522) * C51157 * C108 + (C523 + C524) * C51157 * C109 +
            (C525 + C526) * C51157 * C110 + (C527 + C528) * C51157 * C111) *
               C296 -
           (C531 * C111 + C532 * C110 + (C522 + C521) * C51157 * C109 +
            ((C117 * C486 + C51127 * C494) * C51028 +
             (C117 * C476 + C51127 * C487) * C118) *
                C51157 * C108) *
               C295 -
           (((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51157 * C111 +
            (C528 + C527) * C51157 * C110 + C531 * C109 + C532 * C108) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C635 +
            (C117 * C127 + C51127 * C140) * C630 -
            (C117 * C300 + C51127 * C306) * C636 -
            (C117 * C307 + C51127 * C318) * C631 +
            (C117 * C638 + C51127 * C643) * C637 +
            (C117 * C644 + C51127 * C653) * C632) *
               C51157 * C108 +
           (C659 + C660 - C661 - C662 + C689 + C690) * C51157 * C109 +
           (C667 + C668 - C669 - C670 + C691 + C692) * C51157 * C110 +
           (C675 + C676 - C677 - C678 + C693 + C694) * C51157 * C111) *
              C50994 * C51262 +
          (((C117 * C883 + C51127 * C891) * C636 -
            ((C117 * C486 + C51127 * C494) * C630 +
             (C117 * C476 + C51127 * C487) * C635) +
            (C117 * C892 + C51127 * C907) * C631 -
            (C117 * C884 + C51127 * C893) * C637 -
            (C117 * C894 + C51127 * C908) * C632) *
               C51157 * C108 +
           ((C117 * C885 + C51127 * C895) * C636 - (C514 * C630 + C513 * C635) +
            (C117 * C896 + C51127 * C909) * C631 -
            (C117 * C886 + C51127 * C897) * C637 -
            (C117 * C898 + C51127 * C910) * C632) *
               C51157 * C109 +
           ((C117 * C887 + C51127 * C899) * C636 - (C516 * C630 + C515 * C635) +
            (C117 * C900 + C51127 * C911) * C631 -
            (C117 * C888 + C51127 * C901) * C637 -
            (C117 * C902 + C51127 * C912) * C632) *
               C51157 * C110 +
           ((C117 * C889 + C51127 * C903) * C636 - (C518 * C630 + C517 * C635) +
            (C117 * C904 + C51127 * C913) * C631 -
            (C117 * C890 + C51127 * C905) * C637 -
            (C117 * C906 + C51127 * C914) * C632) *
               C51157 * C111) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51157 * C51246 +
            ((C8239 + C8240 + C8241) * C118 +
             (C8242 + C8243 + C8244) * C51028) *
                C51157 * C50979) *
               C295 -
           (((C8245 + C8246 + C8247) * C51028 +
             (C8248 + C8249 + C8250) * C118) *
                C51157 * C50979 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51157 * C51246) *
               C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51157 * C51246 +
            ((C8251 + C8252 + C8253) * C118 +
             (C8254 + C8255 + C8256) * C51028) *
                C51157 * C50979) *
               C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51157 * C51246 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51157 * C50979) *
               C296 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51157 * C50979 +
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C51028 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C118) *
                C51157 * C51246) *
               C295 -
           (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
              C8199 * C483 + C8194 * C492) *
                 C51028 +
             (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
              C8199 * C474 + C8194 * C482) *
                 C118) *
                C51157 * C50979 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51157 * C51246) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51157 * C51246 +
           ((C8239 + C8240 + C8241) * C635 + (C8242 + C8243 + C8244) * C630 -
            (C8427 + C8428 + C8429) * C636 - (C8430 + C8431 + C8432) * C631 +
            (C8779 + C8780 + C8781) * C637 + (C8782 + C8783 + C8784) * C632) *
               C51157 * C50979) *
              C50994 * C51262 +
          (((C8199 * C883 + C8194 * C891 + C8200 * C884 + C8195 * C893 +
             C8201 * C3317 + C8196 * C3320) *
                C636 -
            ((C8201 * C894 + C8196 * C908 + C8200 * C892 + C8195 * C907 +
              C8199 * C486 + C8194 * C494) *
                 C630 +
             (C8201 * C884 + C8196 * C893 + C8200 * C883 + C8195 * C891 +
              C8199 * C476 + C8194 * C487) *
                 C635) +
            (C8199 * C892 + C8194 * C907 + C8200 * C894 + C8195 * C908 +
             C8201 * C3321 + C8196 * C3326) *
                C631 -
            (C8201 * C9036 + C8196 * C9038 + C8200 * C3317 + C8195 * C3320 +
             C8199 * C884 + C8194 * C893) *
                C637 -
            (C8201 * C9039 + C8196 * C9042 + C8200 * C3321 + C8195 * C3326 +
             C8199 * C894 + C8194 * C908) *
                C632) *
               C51157 * C51246 +
           ((C8199 * C885 + C8194 * C895 + C8200 * C886 + C8195 * C897 +
             C8201 * C3318 + C8196 * C3322) *
                C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C8199 * C896 + C8194 * C909 + C8200 * C898 + C8195 * C910 +
             C8201 * C3323 + C8196 * C3327) *
                C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51157 * C50979) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1363 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C1358 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1364 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
            (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C3921 * C2448) *
              C51305 +
          (((C2685 + C2684) * C1364 -
            ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
            (C2687 + C2686) * C51044) *
               C51157 * C2446 +
           ((C2690 + C2689) * C1364 -
            ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
            (C2692 + C2691) * C51044) *
               C51157 * C2447 +
           ((C2693 + C2694) * C1364 - (C2502 * C1358 + C2503 * C1363) +
            (C2695 + C2696) * C51044) *
               C51157 * C2448) *
              C51291 +
          (C3921 * C2446 +
           ((C2495 + C2494) * C1363 + (C2493 + C2492) * C1358 -
            (C2694 + C2693) * C1364 - (C2696 + C2695) * C51044) *
               C51157 * C2447 +
           ((C2496 + C2497) * C1363 + (C2498 + C2499) * C1358 -
            (C2450 * C642 + C51143 * C651 + C2449 * C304 + C51273 * C314) *
                C1364 -
            (C2450 * C652 + C51143 * C657 + C2449 * C315 + C51273 * C322) *
                C51044) *
               C51157 * C2448) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1363 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C1358 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1364 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C51305 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C1364 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C1358 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C1363) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51044) *
              C51157 * C50974 * C51291 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C1363 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C1358 -
           (C11018 * C3161 + C11013 * C3166 + C11017 * C771 + C11012 * C777 +
            C11016 * C640 + C11011 * C647 + C11015 * C302 + C11010 * C310) *
               C1364 -
           (C11018 * C3167 + C11013 * C3170 + C11017 * C778 + C11012 * C783 +
            C11016 * C648 + C11011 * C655 + C11015 * C311 + C11010 * C320) *
               C51044) *
              C51157 * C50974 * C1362) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1492 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51306 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1493 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51294 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C1494 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C1489) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1492 + (C2486 + C2487) * C51306 -
            (C2684 + C2685) * C1493 - (C2686 + C2687) * C51294 +
            (C3054 + C3055) * C1494 + (C3056 + C3057) * C1489) *
               C51157 * C2447 +
           (C2500 * C1492 + C2501 * C51306 - C2697 * C1493 - C2698 * C51294 +
            (C3058 + C3059) * C1494 + (C3060 + C3061) * C1489) *
               C51157 * C2448) *
              C1490 +
          (((C2685 + C2684) * C1493 -
            ((C2487 + C2486) * C51306 + (C2485 + C2484) * C1492) +
            (C2687 + C2686) * C51294 - (C3055 + C3054) * C1494 -
            (C3057 + C3056) * C1489) *
               C51157 * C2446 +
           ((C2690 + C2689) * C1493 -
            ((C2491 + C2490) * C51306 + (C2489 + C2488) * C1492) +
            (C2692 + C2691) * C51294 - (C3059 + C3058) * C1494 -
            (C3061 + C3060) * C1489) *
               C51157 * C2447 +
           ((C2693 + C2694) * C1493 - (C2502 * C51306 + C2503 * C1492) +
            (C2695 + C2696) * C51294 -
            (C2450 * C772 + C51143 * C779 + C2449 * C641 + C51273 * C649) *
                C1494 -
            (C2450 * C780 + C51143 * C784 + C2449 * C650 + C51273 * C656) *
                C1489) *
               C51157 * C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1492 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51306 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1493 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51294 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C1494 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C1489) *
              C51157 * C50974 * C1490 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C1493 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51306 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C1492) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51294 -
           (C11018 * C8883 + C11013 * C8886 + C11017 * C3160 + C11012 * C3164 +
            C11016 * C770 + C11011 * C775 + C11015 * C639 + C11010 * C645) *
               C1494 -
           (C11018 * C8887 + C11013 * C8889 + C11017 * C3165 + C11012 * C3169 +
            C11016 * C776 + C11011 * C782 + C11015 * C646 + C11010 * C654) *
               C1489) *
              C51157 * C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C51157 * C2446 +
            ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
             (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                C51157 * C2447 +
            C3921 * C2448) *
               C1490 +
           (((C2685 + C2684) * C1364 -
             ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
             (C2687 + C2686) * C51044) *
                C51157 * C2446 +
            ((C2690 + C2689) * C1364 -
             ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
             (C2692 + C2691) * C51044) *
                C51157 * C2447 +
            ((C2693 + C2694) * C1364 - (C2502 * C1358 + C2503 * C1363) +
             (C2695 + C2696) * C51044) *
                C51157 * C2448) *
               C50999) *
              C51262 +
          ((((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                 C1364 -
             ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                  C1358 +
              (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                  C1363) +
             (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C2446 +
            ((C4278 + C4279) * C1364 -
             ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
             (C4280 + C4281) * C51044) *
                C51157 * C2447 +
            ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
             (C4284 + C4285) * C51044) *
                C51157 * C2448) *
               C1490 +
           (((C2874 + C2875) * C1363 + (C2876 + C2877) * C1358 -
             (C4279 + C4278) * C1364 - (C4281 + C4280) * C51044) *
                C51157 * C2446 +
            ((C2878 + C2879) * C1363 + (C2880 + C2881) * C1358 -
             (C4283 + C4282) * C1364 - (C4285 + C4284) * C51044) *
                C51157 * C2447 +
            ((C2882 + C2883) * C1363 + (C2884 + C2885) * C1358 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C1364 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51157 * C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C1363 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C1358 -
            (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
             C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
                C1364 -
            (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
             C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
             C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
                C1364 -
            ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
              C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                 C1358 +
             (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
              C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                 C1363) +
            (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
             C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51262 +
          (((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
             C11017 * C3317 + C11012 * C3320 + C11018 * C9036 +
             C11013 * C9038) *
                C1364 -
            ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
              C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                 C1358 +
             (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
              C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                 C1363) +
            (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
             C11017 * C3321 + C11012 * C3326 + C11018 * C9039 +
             C11013 * C9042) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C1363 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C1358 -
            (C11018 * C9037 + C11013 * C9040 + C11017 * C3318 + C11012 * C3322 +
             C11016 * C886 + C11011 * C897 + C11015 * C885 + C11010 * C895) *
                C1364 -
            (C11018 * C9041 + C11013 * C9043 + C11017 * C3323 + C11012 * C3327 +
             C11016 * C898 + C11011 * C910 + C11015 * C896 + C11010 * C909) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C1363 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C1358 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C1364 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C51157 * C2446 +
            ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
             (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
                C51157 * C2447 +
            C3921 * C2448) *
               C51253 +
           (((C2685 + C2684) * C1364 -
             ((C2487 + C2486) * C1358 + (C2485 + C2484) * C1363) +
             (C2687 + C2686) * C51044) *
                C51157 * C2446 +
            ((C2690 + C2689) * C1364 -
             ((C2491 + C2490) * C1358 + (C2489 + C2488) * C1363) +
             (C2692 + C2691) * C51044) *
                C51157 * C2447 +
            ((C2693 + C2694) * C1364 - (C2502 * C1358 + C2503 * C1363) +
             (C2695 + C2696) * C51044) *
                C51157 * C2448) *
               C50999) *
              C1775 +
          ((((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                 C1364 -
             ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                  C1358 +
              (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                  C1363) +
             (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C2446 +
            ((C4278 + C4279) * C1364 -
             ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
             (C4280 + C4281) * C51044) *
                C51157 * C2447 +
            ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
             (C4284 + C4285) * C51044) *
                C51157 * C2448) *
               C51253 +
           (((C2874 + C2875) * C1363 + (C2876 + C2877) * C1358 -
             (C4279 + C4278) * C1364 - (C4281 + C4280) * C51044) *
                C51157 * C2446 +
            ((C2878 + C2879) * C1363 + (C2880 + C2881) * C1358 -
             (C4283 + C4282) * C1364 - (C4285 + C4284) * C51044) *
                C51157 * C2447 +
            ((C2882 + C2883) * C1363 + (C2884 + C2885) * C1358 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C1364 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51157 * C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C1363 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C1358 -
            (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
             C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
                C1364 -
            (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
             C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
                C51044) *
               C51157 * C50974 * C51253 +
           ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
             C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
                C1364 -
            ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
              C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                 C1358 +
             (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
              C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                 C1363) +
            (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
             C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
                C51044) *
               C51157 * C50974 * C50999) *
              C1775 +
          (((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
             C11017 * C3317 + C11012 * C3320 + C11018 * C9036 +
             C11013 * C9038) *
                C1364 -
            ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
              C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                 C1358 +
             (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
              C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                 C1363) +
            (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
             C11017 * C3321 + C11012 * C3326 + C11018 * C9039 +
             C11013 * C9042) *
                C51044) *
               C51157 * C50974 * C51253 +
           ((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C1363 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C1358 -
            (C11018 * C9037 + C11013 * C9040 + C11017 * C3318 + C11012 * C3322 +
             C11016 * C886 + C11011 * C897 + C11015 * C885 + C11010 * C895) *
                C1364 -
            (C11018 * C9041 + C11013 * C9043 + C11017 * C3323 + C11012 * C3327 +
             C11016 * C898 + C11011 * C910 + C11015 * C896 + C11010 * C909) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1492 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51306 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1493 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51294 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C1494 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C1489) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1492 + (C2486 + C2487) * C51306 -
            (C2684 + C2685) * C1493 - (C2686 + C2687) * C51294 +
            (C3054 + C3055) * C1494 + (C3056 + C3057) * C1489) *
               C51157 * C2447 +
           (C2500 * C1492 + C2501 * C51306 - C2697 * C1493 - C2698 * C51294 +
            (C3058 + C3059) * C1494 + (C3060 + C3061) * C1489) *
               C51157 * C2448) *
              C50994 * C1775 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C1493 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51306 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C1492) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C51294 -
            (C2450 * C3317 + C51143 * C3320 + C2449 * C884 + C51273 * C893) *
                C1494 -
            (C2450 * C3321 + C51143 * C3326 + C2449 * C894 + C51273 * C908) *
                C1489) *
               C51157 * C2446 +
           ((C4278 + C4279) * C1493 -
            ((C2877 + C2876) * C51306 + (C2875 + C2874) * C1492) +
            (C4280 + C4281) * C51294 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C1494 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C1489) *
               C51157 * C2447 +
           ((C4282 + C4283) * C1493 - (C2886 * C51306 + C2887 * C1492) +
            (C4284 + C4285) * C51294 -
            (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                C1494 -
            (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                C1489) *
               C51157 * C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1492 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51306 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1493 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51294 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C1494 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C1489) *
              C51157 * C50974 * C50994 * C1775 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C1493 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51306 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C1492) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C51294 -
           (C11018 * C11481 + C11013 * C11482 + C11017 * C9036 +
            C11012 * C9038 + C11016 * C3317 + C11011 * C3320 + C11015 * C884 +
            C11010 * C893) *
               C1494 -
           (C11018 * C11483 + C11013 * C11484 + C11017 * C9039 +
            C11012 * C9042 + C11016 * C3321 + C11011 * C3326 + C11015 * C894 +
            C11010 * C908) *
               C1489) *
              C51157 * C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C1363 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C1358 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C1364 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C1363 + (C2486 + C2487) * C1358 -
            (C2684 + C2685) * C1364 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C3921 * C2448) *
              C50994 * C51307 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C1364 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C1358 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C1363) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C51044) *
               C51157 * C2446 +
           ((C4278 + C4279) * C1364 -
            ((C2877 + C2876) * C1358 + (C2875 + C2874) * C1363) +
            (C4280 + C4281) * C51044) *
               C51157 * C2447 +
           ((C4282 + C4283) * C1364 - (C2886 * C1358 + C2887 * C1363) +
            (C4284 + C4285) * C51044) *
               C51157 * C2448) *
              C50994 * C51297 +
          (((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C1363 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C1358 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C1364 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C51044) *
               C51157 * C2446 +
           ((C3492 + C3493) * C1363 + (C3494 + C3495) * C1358 -
            (C2450 * C3646 + C51143 * C3650 + C2449 * C1159 + C51273 * C1164) *
                C1364 -
            (C2450 * C3651 + C51143 * C3655 + C2449 * C1165 + C51273 * C1171) *
                C51044) *
               C51157 * C2447 +
           ((C3496 + C3497) * C1363 + (C3498 + C3499) * C1358 -
            (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 + C51273 * C1166) *
                C1364 -
            (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 + C51273 * C1172) *
                C51044) *
               C51157 * C2448) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C1363 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C1358 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C1364 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C50994 * C51307 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C1364 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C1358 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C1363) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C51044) *
              C51157 * C50974 * C50994 * C51297 +
          ((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
            C11017 * C3645 + C11012 * C3648 + C11018 * C9354 + C11013 * C9356) *
               C1363 +
           (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
            C11017 * C3649 + C11012 * C3654 + C11018 * C9357 + C11013 * C9360) *
               C1358 -
           (C11018 * C11681 + C11013 * C11682 + C11017 * C9354 +
            C11012 * C9356 + C11016 * C3645 + C11011 * C3648 + C11015 * C1158 +
            C11010 * C1162) *
               C1364 -
           (C11018 * C11683 + C11013 * C11684 + C11017 * C9357 +
            C11012 * C9360 + C11016 * C3649 + C11011 * C3654 + C11015 * C1163 +
            C11010 * C1170) *
               C51044) *
              C51157 * C50974 * C50994 * C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C51157 * C2446 +
           ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
            (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
            (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
               C51157 * C2447 +
           (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
            (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
               C51157 * C2448) *
              C51253 +
          (((C2685 + C2684) * C636 -
            ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
            (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
            (C3057 + C3056) * C632) *
               C51157 * C2446 +
           ((C2690 + C2689) * C636 -
            ((C2491 + C2490) * C630 + (C2489 + C2488) * C635) +
            (C2692 + C2691) * C631 - (C3059 + C3058) * C637 -
            (C3061 + C3060) * C632) *
               C51157 * C2447 +
           ((C2693 + C2694) * C636 - (C2502 * C630 + C2503 * C635) +
            (C2695 + C2696) * C631 -
            (C2450 * C772 + C51143 * C779 + C2449 * C641 + C51273 * C649) *
                C637 -
            (C2450 * C780 + C51143 * C784 + C2449 * C650 + C51273 * C656) *
                C632) *
               C51157 * C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
               C2447 +
           C2510 * C2448) *
              C112 -
          (C2511 * C2448 +
           ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
               C2447 +
           ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
               C2446) *
              C113 +
          (C2510 * C2446 +
           ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
               C2447 +
           ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
               C2448) *
              C114 -
          (((C2450 * C317 + C51143 * C323 + C2449 * C137 + C51273 * C145) *
                C51028 +
            (C2450 * C305 + C51143 * C316 + C2449 * C124 + C51273 * C136) *
                C118) *
               C51157 * C2448 +
           ((C2499 + C2498) * C51028 + (C2497 + C2496) * C118) * C51157 *
               C2447 +
           C2511 * C2446) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C51253 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C50999) *
              C1013 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C50999 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C51253) *
              C1014 +
          ((((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                 C118 +
             (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                 C51028) *
                C51157 * C2446 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51157 *
                C2447 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51157 *
                C2448) *
               C51253 -
           (((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 + C51273 * C1034) *
                 C51028 +
             (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 + C51273 * C1027) *
                 C118) *
                C51157 * C2448 +
            ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C51157 *
                C2447 +
            ((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C51157 *
                C2446) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C118 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51028) *
              C51157 * C50974 * C112 -
          ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
            C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
               C51028 +
           (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
            C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
               C118) *
              C51157 * C50974 * C113 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C118 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51028) *
              C51157 * C50974 * C114 -
          ((C11018 * C780 + C11013 * C784 + C11017 * C650 + C11012 * C656 +
            C11016 * C313 + C11011 * C321 + C11015 * C133 + C11010 * C143) *
               C51028 +
           (C11018 * C772 + C11013 * C779 + C11017 * C641 + C11012 * C649 +
            C11016 * C303 + C11011 * C312 + C11015 * C122 + C11010 * C132) *
               C118) *
              C51157 * C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C51253 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C636 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C630 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C635) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C631 -
           (C11018 * C8883 + C11013 * C8886 + C11017 * C3160 + C11012 * C3164 +
            C11016 * C770 + C11011 * C775 + C11015 * C639 + C11010 * C645) *
               C637 -
           (C11018 * C8887 + C11013 * C8889 + C11017 * C3165 + C11012 * C3169 +
            C11016 * C776 + C11011 * C782 + C11015 * C646 + C11010 * C654) *
               C632) *
              C51157 * C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C51253 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C50999) *
              C1013 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C50999 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C51253) *
              C1014 +
          (((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
             C11017 * C3645 + C11012 * C3648 + C11018 * C9354 +
             C11013 * C9356) *
                C118 +
            (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
             C11017 * C3649 + C11012 * C3654 + C11018 * C9357 +
             C11013 * C9360) *
                C51028) *
               C51157 * C50974 * C51253 -
           ((C11018 * C9359 + C11013 * C9361 + C11017 * C3651 + C11012 * C3655 +
             C11016 * C1165 + C11011 * C1171 + C11015 * C1024 +
             C11010 * C1032) *
                C51028 +
            (C11018 * C9355 + C11013 * C9358 + C11017 * C3646 + C11012 * C3650 +
             C11016 * C1159 + C11011 * C1164 + C11015 * C1017 +
             C11010 * C1023) *
                C118) *
               C51157 * C50974 * C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
               C765 +
           (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
               C760 -
           (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
               C766 -
           (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
               C761 +
           (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
               C767 +
           (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
               C762 -
           (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
               C768 -
           (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
               C763) *
              C51157 * C2446 +
          ((C2484 + C2485) * C765 + (C2486 + C2487) * C760 -
           (C2684 + C2685) * C766 - (C2686 + C2687) * C761 +
           (C3054 + C3055) * C767 + (C3056 + C3057) * C762 -
           (C2450 * C3160 + C51143 * C3164 + C2449 * C770 + C51273 * C775) *
               C768 -
           (C2450 * C3165 + C51143 * C3169 + C2449 * C776 + C51273 * C782) *
               C763) *
              C51157 * C2447 +
          (C2500 * C765 + C2501 * C760 - C2697 * C766 - C2698 * C761 +
           (C3058 + C3059) * C767 + (C3060 + C3061) * C762 -
           (C2450 * C3161 + C51143 * C3166 + C2449 * C771 + C51273 * C777) *
               C768 -
           (C2450 * C3167 + C51143 * C3170 + C2449 * C778 + C51273 * C783) *
               C763) *
              C51157 * C2448) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
            (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C2703 * C2448) *
              C295 +
          (((C2685 + C2684) * C299 -
            ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
            (C2687 + C2686) * C51044) *
               C51157 * C2446 +
           ((C2690 + C2689) * C299 -
            ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
            (C2692 + C2691) * C51044) *
               C51157 * C2447 +
           ((C2693 + C2694) * C299 - (C2502 * C51260 + C2503 * C298) +
            (C2695 + C2696) * C51044) *
               C51157 * C2448) *
              C296 +
          (C2703 * C2446 +
           ((C2495 + C2494) * C298 + (C2493 + C2492) * C51260 -
            (C2694 + C2693) * C299 - (C2696 + C2695) * C51044) *
               C51157 * C2447 +
           ((C2496 + C2497) * C298 + (C2498 + C2499) * C51260 -
            (C2450 * C642 + C51143 * C651 + C2449 * C304 + C51273 * C314) *
                C299 -
            (C2450 * C652 + C51143 * C657 + C2449 * C315 + C51273 * C322) *
                C51044) *
               C51157 * C2448) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
            (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C2703 * C2448) *
              C50994 * C1013 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C299 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51260 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C298) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C51044) *
               C51157 * C2446 +
           ((C2449 * C885 + C51273 * C895 + C2450 * C886 + C51143 * C897) *
                C299 -
            ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
            (C2449 * C896 + C51273 * C909 + C2450 * C898 + C51143 * C910) *
                C51044) *
               C51157 * C2447 +
           ((C2449 * C887 + C51273 * C899 + C2450 * C888 + C51143 * C901) *
                C299 -
            (C2886 * C51260 + C2887 * C298) +
            (C2449 * C900 + C51273 * C911 + C2450 * C902 + C51143 * C912) *
                C51044) *
               C51157 * C2448) *
              C50994 * C1014 +
          (((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C298 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51260 -
            (C2450 * C3645 + C51143 * C3648 + C2449 * C1158 + C51273 * C1162) *
                C299 -
            (C2450 * C3649 + C51143 * C3654 + C2449 * C1163 + C51273 * C1170) *
                C51044) *
               C51157 * C2446 +
           ((C3492 + C3493) * C298 + (C3494 + C3495) * C51260 -
            (C2450 * C3646 + C51143 * C3650 + C2449 * C1159 + C51273 * C1164) *
                C299 -
            (C2450 * C3651 + C51143 * C3655 + C2449 * C1165 + C51273 * C1171) *
                C51044) *
               C51157 * C2447 +
           ((C3496 + C3497) * C298 + (C3498 + C3499) * C51260 -
            (C2450 * C3647 + C51143 * C3652 + C2449 * C1160 + C51273 * C1166) *
                C299 -
            (C2450 * C3653 + C51143 * C3656 + C2449 * C1167 + C51273 * C1172) *
                C51044) *
               C51157 * C2448) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C298 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51260 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C299 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C295 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C299 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51260 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C298) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51044) *
              C51157 * C50974 * C296 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C298 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51260 -
           (C11018 * C3161 + C11013 * C3166 + C11017 * C771 + C11012 * C777 +
            C11016 * C640 + C11011 * C647 + C11015 * C302 + C11010 * C310) *
               C299 -
           (C11018 * C3167 + C11013 * C3170 + C11017 * C778 + C11012 * C783 +
            C11016 * C648 + C11011 * C655 + C11015 * C311 + C11010 * C320) *
               C51044) *
              C51157 * C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
           C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
              C765 +
          (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
           C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
              C760 -
          (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
           C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
              C766 -
          (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
           C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
              C761 +
          (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
           C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
              C767 +
          (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
           C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
              C762 -
          (C11018 * C11379 + C11013 * C11380 + C11017 * C8882 + C11012 * C8884 +
           C11016 * C3159 + C11011 * C3162 + C11015 * C769 + C11010 * C773) *
              C768 -
          (C11018 * C11381 + C11013 * C11382 + C11017 * C8885 + C11012 * C8888 +
           C11016 * C3163 + C11011 * C3168 + C11015 * C774 + C11010 * C781) *
              C763) *
         C51157 * C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C298 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51260 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C299 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C50994 * C1013 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C299 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51260 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C298) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C51044) *
              C51157 * C50974 * C50994 * C1014 +
          ((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
            C11017 * C3645 + C11012 * C3648 + C11018 * C9354 + C11013 * C9356) *
               C298 +
           (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
            C11017 * C3649 + C11012 * C3654 + C11018 * C9357 + C11013 * C9360) *
               C51260 -
           (C11018 * C11681 + C11013 * C11682 + C11017 * C9354 +
            C11012 * C9356 + C11016 * C3645 + C11011 * C3648 + C11015 * C1158 +
            C11010 * C1162) *
               C299 -
           (C11018 * C11683 + C11013 * C11684 + C11017 * C9357 +
            C11012 * C9360 + C11016 * C3649 + C11011 * C3654 + C11015 * C1163 +
            C11010 * C1170) *
               C51044) *
              C51157 * C50974 * C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C51157 * C2446 +
           ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
            (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
            (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
               C51157 * C2447 +
           (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
            (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
               C51157 * C2448) *
              C50994 * C51262 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C636 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C630 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C635) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C631 -
            (C2450 * C3317 + C51143 * C3320 + C2449 * C884 + C51273 * C893) *
                C637 -
            (C2450 * C3321 + C51143 * C3326 + C2449 * C894 + C51273 * C908) *
                C632) *
               C51157 * C2446 +
           ((C2449 * C885 + C51273 * C895 + C2450 * C886 + C51143 * C897) *
                C636 -
            ((C2877 + C2876) * C630 + (C2875 + C2874) * C635) +
            (C2449 * C896 + C51273 * C909 + C2450 * C898 + C51143 * C910) *
                C631 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C637 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C632) *
               C51157 * C2447 +
           ((C2449 * C887 + C51273 * C899 + C2450 * C888 + C51143 * C901) *
                C636 -
            (C2886 * C630 + C2887 * C635) +
            (C2449 * C900 + C51273 * C911 + C2450 * C902 + C51143 * C912) *
                C631 -
            (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                C637 -
            (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                C632) *
               C51157 * C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C295 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C296 +
           (C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
                C2448) *
               C297) *
              C51262 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C296 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C295 -
           (((C2450 * C1645 + C51143 * C1646 + C2449 * C485 + C51273 * C493) *
                 C51028 +
             (C2450 * C1643 + C51143 * C1644 + C2449 * C475 + C51273 * C484) *
                 C118) *
                C51157 * C2448 +
            ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51157 *
                C2447 +
            C2891 * C2446) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
               C2447 +
           C2510 * C2448) *
              C50994 * C1240 -
          (C2891 * C2448 +
           ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
               C2447 +
           ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                C51028 +
            (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                C118) *
               C51157 * C2446) *
              C50994 * C1241 +
          (((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                C118 +
            (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                C51028) *
               C51157 * C2446 +
           ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51157 *
               C2447 +
           ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51157 *
               C2448) *
              C50994 * C1242 -
          (((C2450 * C3758 + C51143 * C3764 + C2449 * C1250 + C51273 * C1257) *
                C51028 +
            (C2450 * C3755 + C51143 * C3759 + C2449 * C1245 + C51273 * C1251) *
                C118) *
               C51157 * C2448 +
           ((C2450 * C3760 + C51143 * C3765 + C2449 * C1252 + C51273 * C1258) *
                C51028 +
            (C2450 * C3756 + C51143 * C3761 + C2449 * C1246 + C51273 * C1253) *
                C118) *
               C51157 * C2447 +
           ((C2450 * C3762 + C51143 * C3766 + C2449 * C1254 + C51273 * C1259) *
                C51028 +
            (C2450 * C3757 + C51143 * C3763 + C2449 * C1247 + C51273 * C1255) *
                C118) *
               C51157 * C2446) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C295 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C296 +
           ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
             C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
                C118 +
            (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
             C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
                C51028) *
               C51157 * C50974 * C297) *
              C51262 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C296 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C295 -
           ((C11018 * C3325 + C11013 * C3328 + C11017 * C902 + C11012 * C912 +
             C11016 * C900 + C11011 * C911 + C11015 * C481 + C11010 * C491) *
                C51028 +
            (C11018 * C3319 + C11013 * C3324 + C11017 * C888 + C11012 * C901 +
             C11016 * C887 + C11011 * C899 + C11015 * C473 + C11010 * C480) *
                C118) *
               C51157 * C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C50994 * C51262 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C636 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C630 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C635) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C631 -
           (C11018 * C11481 + C11013 * C11482 + C11017 * C9036 +
            C11012 * C9038 + C11016 * C3317 + C11011 * C3320 + C11015 * C884 +
            C11010 * C893) *
               C637 -
           (C11018 * C11483 + C11013 * C11484 + C11017 * C9039 +
            C11012 * C9042 + C11016 * C3321 + C11011 * C3326 + C11015 * C894 +
            C11010 * C908) *
               C632) *
              C51157 * C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C118 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51028) *
              C51157 * C50974 * C50994 * C1240 -
          ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
            C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
               C51028 +
           (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
            C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
               C118) *
              C51157 * C50974 * C50994 * C1241 +
          ((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
            C11017 * C3645 + C11012 * C3648 + C11018 * C9354 + C11013 * C9356) *
               C118 +
           (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
            C11017 * C3649 + C11012 * C3654 + C11018 * C9357 + C11013 * C9360) *
               C51028) *
              C51157 * C50974 * C50994 * C1242 -
          ((C11018 * C11752 + C11013 * C11754 + C11017 * C9464 +
            C11012 * C9467 + C11016 * C3762 + C11011 * C3766 + C11015 * C1254 +
            C11010 * C1259) *
               C51028 +
           (C11018 * C11751 + C11013 * C11753 + C11017 * C9461 +
            C11012 * C9465 + C11016 * C3757 + C11011 * C3763 + C11015 * C1247 +
            C11010 * C1255) *
               C118) *
              C51157 * C50974 * C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C51305 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C51291 +
           (C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
                C2448) *
               C1362) *
              C1775 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C51291 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C51305 -
           (((C2450 * C1645 + C51143 * C1646 + C2449 * C485 + C51273 * C493) *
                 C51028 +
             (C2450 * C1643 + C51143 * C1644 + C2449 * C475 + C51273 * C484) *
                 C118) *
                C51157 * C2448 +
            ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51157 *
                C2447 +
            C2891 * C2446) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C51305 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C51291 +
           ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
             C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
                C118 +
            (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
             C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
                C51028) *
               C51157 * C50974 * C1362) *
              C1775 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C51291 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C51305 -
           ((C11018 * C3325 + C11013 * C3328 + C11017 * C902 + C11012 * C912 +
             C11016 * C900 + C11011 * C911 + C11015 * C481 + C11010 * C491) *
                C51028 +
            (C11018 * C3319 + C11013 * C3324 + C11017 * C888 + C11012 * C901 +
             C11016 * C887 + C11011 * C899 + C11015 * C473 + C11010 * C480) *
                C118) *
               C51157 * C50974 * C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C298 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51260 -
             (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                 C299 -
             (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                 C51044) *
                C51157 * C2446 +
            ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
             (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
                C51157 * C2447 +
            C2703 * C2448) *
               C1490 +
           (((C2685 + C2684) * C299 -
             ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
             (C2687 + C2686) * C51044) *
                C51157 * C2446 +
            ((C2690 + C2689) * C299 -
             ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
             (C2692 + C2691) * C51044) *
                C51157 * C2447 +
            ((C2693 + C2694) * C299 - (C2502 * C51260 + C2503 * C298) +
             (C2695 + C2696) * C51044) *
                C51157 * C2448) *
               C50999) *
              C1775 +
          ((((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                 C299 -
             ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                  C51260 +
              (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                  C298) +
             (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                 C51044) *
                C51157 * C2446 +
            ((C4278 + C4279) * C299 -
             ((C2877 + C2876) * C51260 + (C2875 + C2874) * C298) +
             (C4280 + C4281) * C51044) *
                C51157 * C2447 +
            ((C4282 + C4283) * C299 - (C2886 * C51260 + C2887 * C298) +
             (C4284 + C4285) * C51044) *
                C51157 * C2448) *
               C1490 +
           (((C2874 + C2875) * C298 + (C2876 + C2877) * C51260 -
             (C4279 + C4278) * C299 - (C4281 + C4280) * C51044) *
                C51157 * C2446 +
            ((C2878 + C2879) * C298 + (C2880 + C2881) * C51260 -
             (C4283 + C4282) * C299 - (C4285 + C4284) * C51044) *
                C51157 * C2447 +
            ((C2882 + C2883) * C298 + (C2884 + C2885) * C51260 -
             (C2450 * C890 + C51143 * C905 + C2449 * C889 + C51273 * C903) *
                 C299 -
             (C2450 * C906 + C51143 * C914 + C2449 * C904 + C51273 * C913) *
                 C51044) *
                C51157 * C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C298 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51260 -
            (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
             C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
                C299 -
            (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
             C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
             C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
                C299 -
            ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
              C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                 C51260 +
             (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
              C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                 C298) +
            (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
             C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
                C51044) *
               C51157 * C50974 * C50999) *
              C1775 +
          (((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
             C11017 * C3317 + C11012 * C3320 + C11018 * C9036 +
             C11013 * C9038) *
                C299 -
            ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
              C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                 C51260 +
             (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
              C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                 C298) +
            (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
             C11017 * C3321 + C11012 * C3326 + C11018 * C9039 +
             C11013 * C9042) *
                C51044) *
               C51157 * C50974 * C1490 +
           ((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C298 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51260 -
            (C11018 * C9037 + C11013 * C9040 + C11017 * C3318 + C11012 * C3322 +
             C11016 * C886 + C11011 * C897 + C11015 * C885 + C11010 * C895) *
                C299 -
            (C11018 * C9041 + C11013 * C9043 + C11017 * C3323 + C11012 * C3327 +
             C11016 * C898 + C11011 * C910 + C11015 * C896 + C11010 * C909) *
                C51044) *
               C51157 * C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C1490 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C50999) *
              C51307 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C50999 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C1490) *
              C51297 +
          ((((C2449 * C1016 + C51273 * C1021 + C2450 * C1158 + C51143 * C1162) *
                 C118 +
             (C2449 * C1022 + C51273 * C1031 + C2450 * C1163 + C51143 * C1170) *
                 C51028) *
                C51157 * C2446 +
            ((C3492 + C3493) * C118 + (C3494 + C3495) * C51028) * C51157 *
                C2447 +
            ((C3496 + C3497) * C118 + (C3498 + C3499) * C51028) * C51157 *
                C2448) *
               C1490 -
           (((C2450 * C1169 + C51143 * C1173 + C2449 * C1028 + C51273 * C1034) *
                 C51028 +
             (C2450 * C1161 + C51143 * C1168 + C2449 * C1019 + C51273 * C1027) *
                 C118) *
                C51157 * C2448 +
            ((C3499 + C3498) * C51028 + (C3497 + C3496) * C118) * C51157 *
                C2447 +
            ((C3495 + C3494) * C51028 + (C3493 + C3492) * C118) * C51157 *
                C2446) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C1490 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C50999) *
              C51307 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C50999 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C1490) *
              C51297 +
          (((C11015 * C1016 + C11010 * C1021 + C11016 * C1158 + C11011 * C1162 +
             C11017 * C3645 + C11012 * C3648 + C11018 * C9354 +
             C11013 * C9356) *
                C118 +
            (C11015 * C1022 + C11010 * C1031 + C11016 * C1163 + C11011 * C1170 +
             C11017 * C3649 + C11012 * C3654 + C11018 * C9357 +
             C11013 * C9360) *
                C51028) *
               C51157 * C50974 * C1490 -
           ((C11018 * C9359 + C11013 * C9361 + C11017 * C3651 + C11012 * C3655 +
             C11016 * C1165 + C11011 * C1171 + C11015 * C1024 +
             C11010 * C1032) *
                C51028 +
            (C11018 * C9355 + C11013 * C9358 + C11017 * C3646 + C11012 * C3650 +
             C11016 * C1159 + C11011 * C1164 + C11015 * C1017 +
             C11010 * C1023) *
                C118) *
               C51157 * C50974 * C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C118 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51028) *
               C51157 * C2446 +
           ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
               C2447 +
           C2510 * C2448) *
              C112 -
          (C2511 * C2448 +
           ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
               C2447 +
           ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
               C2446) *
              C113 +
          (C2510 * C2446 +
           ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
               C2447 +
           ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
               C2448) *
              C114 -
          (((C2450 * C317 + C51143 * C323 + C2449 * C137 + C51273 * C145) *
                C51028 +
            (C2450 * C305 + C51143 * C316 + C2449 * C124 + C51273 * C136) *
                C118) *
               C51157 * C2448 +
           ((C2499 + C2498) * C51028 + (C2497 + C2496) * C118) * C51157 *
               C2447 +
           C2511 * C2446) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C51157 * C2446 +
           ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
            (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
            (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
               C51157 * C2447 +
           (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
            (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
               C51157 * C2448) *
              C51253 +
          (((C2685 + C2684) * C636 -
            ((C2487 + C2486) * C630 + (C2485 + C2484) * C635) +
            (C2687 + C2686) * C631 - (C3055 + C3054) * C637 -
            (C3057 + C3056) * C632) *
               C51157 * C2446 +
           ((C2690 + C2689) * C636 -
            ((C2491 + C2490) * C630 + (C2489 + C2488) * C635) +
            (C2692 + C2691) * C631 - (C3059 + C3058) * C637 -
            (C3061 + C3060) * C632) *
               C51157 * C2447 +
           ((C2693 + C2694) * C636 - (C2502 * C630 + C2503 * C635) +
            (C2695 + C2696) * C631 -
            (C2450 * C772 + C51143 * C779 + C2449 * C641 + C51273 * C649) *
                C637 -
            (C2450 * C780 + C51143 * C784 + C2449 * C650 + C51273 * C656) *
                C632) *
               C51157 * C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C118 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51028) *
              C51157 * C50974 * C112 -
          ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
            C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
               C51028 +
           (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
            C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
               C118) *
              C51157 * C50974 * C113 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C118 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51028) *
              C51157 * C50974 * C114 -
          ((C11018 * C780 + C11013 * C784 + C11017 * C650 + C11012 * C656 +
            C11016 * C313 + C11011 * C321 + C11015 * C133 + C11010 * C143) *
               C51028 +
           (C11018 * C772 + C11013 * C779 + C11017 * C641 + C11012 * C649 +
            C11016 * C303 + C11011 * C312 + C11015 * C122 + C11010 * C132) *
               C118) *
              C51157 * C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C51253 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C636 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C630 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C635) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C631 -
           (C11018 * C8883 + C11013 * C8886 + C11017 * C3160 + C11012 * C3164 +
            C11016 * C770 + C11011 * C775 + C11015 * C639 + C11010 * C645) *
               C637 -
           (C11018 * C8887 + C11013 * C8889 + C11017 * C3165 + C11012 * C3169 +
            C11016 * C776 + C11011 * C782 + C11015 * C646 + C11010 * C654) *
               C632) *
              C51157 * C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C298 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C51260 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C299 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C51044) *
               C51157 * C2446 +
           ((C2484 + C2485) * C298 + (C2486 + C2487) * C51260 -
            (C2684 + C2685) * C299 - (C2686 + C2687) * C51044) *
               C51157 * C2447 +
           C2703 * C2448) *
              C295 +
          (((C2685 + C2684) * C299 -
            ((C2487 + C2486) * C51260 + (C2485 + C2484) * C298) +
            (C2687 + C2686) * C51044) *
               C51157 * C2446 +
           ((C2690 + C2689) * C299 -
            ((C2491 + C2490) * C51260 + (C2489 + C2488) * C298) +
            (C2692 + C2691) * C51044) *
               C51157 * C2447 +
           ((C2693 + C2694) * C299 - (C2502 * C51260 + C2503 * C298) +
            (C2695 + C2696) * C51044) *
               C51157 * C2448) *
              C296 +
          (C2703 * C2446 +
           ((C2495 + C2494) * C298 + (C2493 + C2492) * C51260 -
            (C2694 + C2693) * C299 - (C2696 + C2695) * C51044) *
               C51157 * C2447 +
           ((C2496 + C2497) * C298 + (C2498 + C2499) * C51260 -
            (C2450 * C642 + C51143 * C651 + C2449 * C304 + C51273 * C314) *
                C299 -
            (C2450 * C652 + C51143 * C657 + C2449 * C315 + C51273 * C322) *
                C51044) *
               C51157 * C2448) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
               C765 +
           (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
               C760 -
           (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
               C766 -
           (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
               C761 +
           (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
               C767 +
           (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
               C762 -
           (C2450 * C3159 + C51143 * C3162 + C2449 * C769 + C51273 * C773) *
               C768 -
           (C2450 * C3163 + C51143 * C3168 + C2449 * C774 + C51273 * C781) *
               C763) *
              C51157 * C2446 +
          ((C2484 + C2485) * C765 + (C2486 + C2487) * C760 -
           (C2684 + C2685) * C766 - (C2686 + C2687) * C761 +
           (C3054 + C3055) * C767 + (C3056 + C3057) * C762 -
           (C2450 * C3160 + C51143 * C3164 + C2449 * C770 + C51273 * C775) *
               C768 -
           (C2450 * C3165 + C51143 * C3169 + C2449 * C776 + C51273 * C782) *
               C763) *
              C51157 * C2447 +
          (C2500 * C765 + C2501 * C760 - C2697 * C766 - C2698 * C761 +
           (C3058 + C3059) * C767 + (C3060 + C3061) * C762 -
           (C2450 * C3161 + C51143 * C3166 + C2449 * C771 + C51273 * C777) *
               C768 -
           (C2450 * C3167 + C51143 * C3170 + C2449 * C778 + C51273 * C783) *
               C763) *
              C51157 * C2448) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C298 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C51260 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C299 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C51044) *
              C51157 * C50974 * C295 +
          ((C11015 * C301 + C11010 * C308 + C11016 * C639 + C11011 * C645 +
            C11017 * C770 + C11012 * C775 + C11018 * C3160 + C11013 * C3164) *
               C299 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51260 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C298) +
           (C11015 * C309 + C11010 * C319 + C11016 * C646 + C11011 * C654 +
            C11017 * C776 + C11012 * C782 + C11018 * C3165 + C11013 * C3169) *
               C51044) *
              C51157 * C50974 * C296 +
          ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
            C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
               C298 +
           (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
            C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
               C51260 -
           (C11018 * C3161 + C11013 * C3166 + C11017 * C771 + C11012 * C777 +
            C11016 * C640 + C11011 * C647 + C11015 * C302 + C11010 * C310) *
               C299 -
           (C11018 * C3167 + C11013 * C3170 + C11017 * C778 + C11012 * C783 +
            C11016 * C648 + C11011 * C655 + C11015 * C311 + C11010 * C320) *
               C51044) *
              C51157 * C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
           C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
              C765 +
          (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
           C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
              C760 -
          (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
           C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
              C766 -
          (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
           C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
              C761 +
          (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
           C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
              C767 +
          (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
           C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
              C762 -
          (C11018 * C11379 + C11013 * C11380 + C11017 * C8882 + C11012 * C8884 +
           C11016 * C3159 + C11011 * C3162 + C11015 * C769 + C11010 * C773) *
              C768 -
          (C11018 * C11381 + C11013 * C11382 + C11017 * C8885 + C11012 * C8888 +
           C11016 * C3163 + C11011 * C3168 + C11015 * C774 + C11010 * C781) *
              C763) *
         C51157 * C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                 C118 +
             (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                 C51028) *
                C51157 * C2446 +
            ((C2484 + C2485) * C118 + (C2486 + C2487) * C51028) * C51157 *
                C2447 +
            C2510 * C2448) *
               C295 -
           (C2511 * C2448 +
            ((C2491 + C2490) * C51028 + (C2489 + C2488) * C118) * C51157 *
                C2447 +
            ((C2487 + C2486) * C51028 + (C2485 + C2484) * C118) * C51157 *
                C2446) *
               C296 +
           (C2510 * C2446 +
            ((C2495 + C2494) * C118 + (C2493 + C2492) * C51028) * C51157 *
                C2447 +
            ((C2496 + C2497) * C118 + (C2498 + C2499) * C51028) * C51157 *
                C2448) *
               C297) *
              C51262 +
          ((((C2874 + C2875) * C118 + (C2876 + C2877) * C51028) * C51157 *
                C2446 +
            ((C2878 + C2879) * C118 + (C2880 + C2881) * C51028) * C51157 *
                C2447 +
            ((C2882 + C2883) * C118 + (C2884 + C2885) * C51028) * C51157 *
                C2448) *
               C296 -
           (C2891 * C2448 +
            ((C2877 + C2876) * C51028 + (C2875 + C2874) * C118) * C51157 *
                C2447 +
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C51028 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C118) *
                C51157 * C2446) *
               C295 -
           (((C2450 * C1645 + C51143 * C1646 + C2449 * C485 + C51273 * C493) *
                 C51028 +
             (C2450 * C1643 + C51143 * C1644 + C2449 * C475 + C51273 * C484) *
                 C118) *
                C51157 * C2448 +
            ((C2885 + C2884) * C51028 + (C2883 + C2882) * C118) * C51157 *
                C2447 +
            C2891 * C2446) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2449 * C119 + C51273 * C126 + C2450 * C300 + C51143 * C306) *
                C635 +
            (C2449 * C127 + C51273 * C140 + C2450 * C307 + C51143 * C318) *
                C630 -
            (C2450 * C638 + C51143 * C643 + C2449 * C300 + C51273 * C306) *
                C636 -
            (C2450 * C644 + C51143 * C653 + C2449 * C307 + C51273 * C318) *
                C631 +
            (C2449 * C638 + C51273 * C643 + C2450 * C769 + C51143 * C773) *
                C637 +
            (C2449 * C644 + C51273 * C653 + C2450 * C774 + C51143 * C781) *
                C632) *
               C51157 * C2446 +
           ((C2484 + C2485) * C635 + (C2486 + C2487) * C630 -
            (C2684 + C2685) * C636 - (C2686 + C2687) * C631 +
            (C3054 + C3055) * C637 + (C3056 + C3057) * C632) *
               C51157 * C2447 +
           (C2500 * C635 + C2501 * C630 - C2697 * C636 - C2698 * C631 +
            (C3058 + C3059) * C637 + (C3060 + C3061) * C632) *
               C51157 * C2448) *
              C50994 * C51262 +
          (((C2449 * C883 + C51273 * C891 + C2450 * C884 + C51143 * C893) *
                C636 -
            ((C2450 * C892 + C51143 * C907 + C2449 * C486 + C51273 * C494) *
                 C630 +
             (C2450 * C883 + C51143 * C891 + C2449 * C476 + C51273 * C487) *
                 C635) +
            (C2449 * C892 + C51273 * C907 + C2450 * C894 + C51143 * C908) *
                C631 -
            (C2450 * C3317 + C51143 * C3320 + C2449 * C884 + C51273 * C893) *
                C637 -
            (C2450 * C3321 + C51143 * C3326 + C2449 * C894 + C51273 * C908) *
                C632) *
               C51157 * C2446 +
           ((C2449 * C885 + C51273 * C895 + C2450 * C886 + C51143 * C897) *
                C636 -
            ((C2877 + C2876) * C630 + (C2875 + C2874) * C635) +
            (C2449 * C896 + C51273 * C909 + C2450 * C898 + C51143 * C910) *
                C631 -
            (C2450 * C3318 + C51143 * C3322 + C2449 * C886 + C51273 * C897) *
                C637 -
            (C2450 * C3323 + C51143 * C3327 + C2449 * C898 + C51273 * C910) *
                C632) *
               C51157 * C2447 +
           ((C2449 * C887 + C51273 * C899 + C2450 * C888 + C51143 * C901) *
                C636 -
            (C2886 * C630 + C2887 * C635) +
            (C2449 * C900 + C51273 * C911 + C2450 * C902 + C51143 * C912) *
                C631 -
            (C2450 * C3319 + C51143 * C3324 + C2449 * C888 + C51273 * C901) *
                C637 -
            (C2450 * C3325 + C51143 * C3328 + C2449 * C902 + C51273 * C912) *
                C632) *
               C51157 * C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
             C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
                C118 +
            (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
             C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
                C51028) *
               C51157 * C50974 * C295 -
           ((C11018 * C776 + C11013 * C782 + C11017 * C646 + C11012 * C654 +
             C11016 * C309 + C11011 * C319 + C11015 * C129 + C11010 * C141) *
                C51028 +
            (C11018 * C770 + C11013 * C775 + C11017 * C639 + C11012 * C645 +
             C11016 * C301 + C11011 * C308 + C11015 * C120 + C11010 * C128) *
                C118) *
               C51157 * C50974 * C296 +
           ((C11015 * C121 + C11010 * C130 + C11016 * C302 + C11011 * C310 +
             C11017 * C640 + C11012 * C647 + C11018 * C771 + C11013 * C777) *
                C118 +
            (C11015 * C131 + C11010 * C142 + C11016 * C311 + C11011 * C320 +
             C11017 * C648 + C11012 * C655 + C11018 * C778 + C11013 * C783) *
                C51028) *
               C51157 * C50974 * C297) *
              C51262 +
          (((C11015 * C472 + C11010 * C478 + C11016 * C885 + C11011 * C895 +
             C11017 * C886 + C11012 * C897 + C11018 * C3318 + C11013 * C3322) *
                C118 +
            (C11015 * C479 + C11010 * C490 + C11016 * C896 + C11011 * C909 +
             C11017 * C898 + C11012 * C910 + C11018 * C3323 + C11013 * C3327) *
                C51028) *
               C51157 * C50974 * C296 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C51028 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C118) *
               C51157 * C50974 * C295 -
           ((C11018 * C3325 + C11013 * C3328 + C11017 * C902 + C11012 * C912 +
             C11016 * C900 + C11011 * C911 + C11015 * C481 + C11010 * C491) *
                C51028 +
            (C11018 * C3319 + C11013 * C3324 + C11017 * C888 + C11012 * C901 +
             C11016 * C887 + C11011 * C899 + C11015 * C473 + C11010 * C480) *
                C118) *
               C51157 * C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C11015 * C119 + C11010 * C126 + C11016 * C300 + C11011 * C306 +
            C11017 * C638 + C11012 * C643 + C11018 * C769 + C11013 * C773) *
               C635 +
           (C11015 * C127 + C11010 * C140 + C11016 * C307 + C11011 * C318 +
            C11017 * C644 + C11012 * C653 + C11018 * C774 + C11013 * C781) *
               C630 -
           (C11018 * C3159 + C11013 * C3162 + C11017 * C769 + C11012 * C773 +
            C11016 * C638 + C11011 * C643 + C11015 * C300 + C11010 * C306) *
               C636 -
           (C11018 * C3163 + C11013 * C3168 + C11017 * C774 + C11012 * C781 +
            C11016 * C644 + C11011 * C653 + C11015 * C307 + C11010 * C318) *
               C631 +
           (C11015 * C638 + C11010 * C643 + C11016 * C769 + C11011 * C773 +
            C11017 * C3159 + C11012 * C3162 + C11018 * C8882 + C11013 * C8884) *
               C637 +
           (C11015 * C644 + C11010 * C653 + C11016 * C774 + C11011 * C781 +
            C11017 * C3163 + C11012 * C3168 + C11018 * C8885 + C11013 * C8888) *
               C632) *
              C51157 * C50974 * C50994 * C51262 +
          ((C11015 * C883 + C11010 * C891 + C11016 * C884 + C11011 * C893 +
            C11017 * C3317 + C11012 * C3320 + C11018 * C9036 + C11013 * C9038) *
               C636 -
           ((C11018 * C3321 + C11013 * C3326 + C11017 * C894 + C11012 * C908 +
             C11016 * C892 + C11011 * C907 + C11015 * C486 + C11010 * C494) *
                C630 +
            (C11018 * C3317 + C11013 * C3320 + C11017 * C884 + C11012 * C893 +
             C11016 * C883 + C11011 * C891 + C11015 * C476 + C11010 * C487) *
                C635) +
           (C11015 * C892 + C11010 * C907 + C11016 * C894 + C11011 * C908 +
            C11017 * C3321 + C11012 * C3326 + C11018 * C9039 + C11013 * C9042) *
               C631 -
           (C11018 * C11481 + C11013 * C11482 + C11017 * C9036 +
            C11012 * C9038 + C11016 * C3317 + C11011 * C3320 + C11015 * C884 +
            C11010 * C893) *
               C637 -
           (C11018 * C11483 + C11013 * C11484 + C11017 * C9039 +
            C11012 * C9042 + C11016 * C3321 + C11011 * C3326 + C11015 * C894 +
            C11010 * C908) *
               C632) *
              C51157 * C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            (C5672 * C1363 + C5673 * C1358 - C6102 * C1364 - C6103 * C51044) *
                C51169) *
               C2446 +
           ((C1366 + C1367 - C1368 - C1369) * C51275 +
            (C1651 + C1650 - C1672 - C1673) * C51169) *
               C2447 +
           C6732 * C2448) *
              C51305 +
          (((C1368 - (C1367 + C1366) + C1369) * C51275 +
            (C1672 - (C1650 + C1651) + C1673) * C51169) *
               C2446 +
           ((C1372 - (C1371 + C1370) + C1373) * C51275 +
            (C1674 - (C1656 + C1657) + C1675) * C51169) *
               C2447 +
           ((C1376 - (C1375 + C1374) + C1377) * C51275 +
            (C1676 - (C1662 + C1663) + C1677) * C51169) *
               C2448) *
              C51291 +
          (C6732 * C2446 +
           (C1387 * C51275 + (C1663 + C1662 - C1676 - C1677) * C51169) * C2447 +
           ((C1380 + C1379 - C1378 - C1381) * C51275 +
            (C519 * C1363 + C520 * C1358 -
             (C117 * C1643 + C51127 * C1644) * C1364 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C2448) *
              C1362) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1363 +
            (C13139 + C13140 + C13141) * C1358 -
            (C13556 + C13557 + C13558) * C1364 -
            (C13559 + C13560 + C13561) * C51044) *
               C51169) *
              C50974 * C51305 +
          (((C8429 + C8428 + C8427) * C1364 -
            ((C8244 + C8243 + C8242) * C1358 +
             (C8241 + C8240 + C8239) * C1363) +
            (C8432 + C8431 + C8430) * C51044) *
               C51275 +
           ((C9967 + C9968 + C9969) * C1364 -
            ((C8614 + C8613 + C8612) * C1358 +
             (C8611 + C8610 + C8609) * C1363) +
            (C9970 + C9971 + C9972) * C51044) *
               C51169) *
              C50974 * C51291 +
          (((C8250 + C8249 + C8248) * C1363 + (C8247 + C8246 + C8245) * C1358 -
            (C8435 + C8434 + C8433) * C1364 -
            (C8438 + C8437 + C8436) * C51044) *
               C51275 +
           ((C8615 + C8616 + C8617) * C1363 + (C8618 + C8619 + C8620) * C1358 -
            (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
             C8199 * C887 + C8194 * C899) *
                C1364 -
            (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
             C8199 * C900 + C8194 * C911) *
                C51044) *
               C51169) *
              C50974 * C1362) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C51275 +
            (C5672 * C1492 + C5673 * C51306 - C6102 * C1493 - C6103 * C51294 +
             C6104 * C1494 + C6105 * C1489) *
                C51169) *
               C2446 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51275 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51169) *
               C2447 +
           ((C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51275 +
            (C6885 + C6886 - C6887 - C6888 + C6889 + C6890) * C51169) *
               C2448) *
              C1490 +
          (((C1498 - (C1497 + C1496) + C1499 - C1500 - C1501) * C51275 +
            (C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C51169) *
               C2446 +
           ((C1504 - (C1503 + C1502) + C1505 - C1506 - C1507) * C51275 +
            (C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C51169) *
               C2447 +
           ((C1510 - (C1509 + C1508) + C1511 - C1512 - C1513) * C51275 +
            (C1670 * C1493 - (C518 * C51306 + C517 * C1492) + C1671 * C51294 -
             (C117 * C890 + C51127 * C905) * C1494 -
             (C117 * C906 + C51127 * C914) * C1489) *
                C51169) *
               C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1492 +
            (C13139 + C13140 + C13141) * C51306 -
            (C13556 + C13557 + C13558) * C1493 -
            (C13559 + C13560 + C13561) * C51294 +
            (C13562 + C13563 + C13564) * C1494 +
            (C13565 + C13566 + C13567) * C1489) *
               C51169) *
              C50974 * C1490 +
          (((C8429 + C8428 + C8427) * C1493 -
            ((C8244 + C8243 + C8242) * C51306 +
             (C8241 + C8240 + C8239) * C1492) +
            (C8432 + C8431 + C8430) * C51294 - (C8781 + C8780 + C8779) * C1494 -
            (C8784 + C8783 + C8782) * C1489) *
               C51275 +
           ((C9967 + C9968 + C9969) * C1493 -
            ((C8614 + C8613 + C8612) * C51306 +
             (C8611 + C8610 + C8609) * C1492) +
            (C9970 + C9971 + C9972) * C51294 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C1494 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C1489) *
               C51169) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51275 +
             (C7085 + C7086 - C7087 - C7088) * C51169) *
                C2446 +
            ((C1366 + C1367 - C1368 - C1369) * C51275 + C7103 * C51169) *
                C2447 +
            C6732 * C2448) *
               C1490 +
           (((C1368 - (C1367 + C1366) + C1369) * C51275 + C7104 * C51169) *
                C2446 +
            ((C1372 - (C1371 + C1370) + C1373) * C51275 + C7105 * C51169) *
                C2447 +
            ((C1376 - (C1375 + C1374) + C1377) * C51275 +
             (C1676 - (C1662 + C1663) + C1677) * C51169) *
                C2448) *
               C50999) *
              C51262 +
          ((((C7087 - (C7086 + C7085) + C7088) * C51275 +
             (C6451 * C1364 - (C6271 * C1358 + C6272 * C1363) +
              C6452 * C51044) *
                 C51169) *
                C2446 +
            (C7104 * C51275 + (C7092 - (C7093 + C7094) + C7095) * C51169) *
                C2447 +
            (C7105 * C51275 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
                C2448) *
               C1490 +
           ((C7103 * C51275 + (C7094 + C7093 - C7092 - C7095) * C51169) *
                C2446 +
            (C6730 * C51275 + (C7098 + C7097 - C7096 - C7099) * C51169) *
                C2447 +
            ((C1663 + C1662 - C1676 - C1677) * C51275 +
             (C1053 * C1363 + C1054 * C1358 -
              (C117 * C1161 + C51127 * C1168) * C1364 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51275 +
            ((C13136 + C13137 + C13138) * C1363 +
             (C13139 + C13140 + C13141) * C1358 -
             (C13556 + C13557 + C13558) * C1364 -
             (C13559 + C13560 + C13561) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51275 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51169) *
               C50974 * C50999) *
              C51262 +
          ((((C13558 + C13557 + C13556) * C1364 -
             ((C13141 + C13140 + C13139) * C1358 +
              (C13138 + C13137 + C13136) * C1363) +
             (C13561 + C13560 + C13559) * C51044) *
                C51275 +
            ((C13890 + C13891 + C13892) * C1364 -
             ((C13726 + C13727 + C13728) * C1358 +
              (C13729 + C13730 + C13731) * C1363) +
             (C13893 + C13894 + C13895) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51275 +
            ((C9203 + C9204 + C9205) * C1363 + (C9206 + C9207 + C9208) * C1358 -
             (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
              C8199 * C1159 + C8194 * C1164) *
                 C1364 -
             (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
              C8199 * C1165 + C8194 * C1171) *
                 C51044) *
                C51169) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C1363 +
              (C117 * C127 + C51127 * C140) * C1358 -
              (C117 * C300 + C51127 * C306) * C1364 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51275 +
             (C7085 + C7086 - C7087 - C7088) * C51169) *
                C2446 +
            ((C1366 + C1367 - C1368 - C1369) * C51275 + C7103 * C51169) *
                C2447 +
            C6732 * C2448) *
               C51253 +
           (((C1368 - (C1367 + C1366) + C1369) * C51275 + C7104 * C51169) *
                C2446 +
            ((C1372 - (C1371 + C1370) + C1373) * C51275 + C7105 * C51169) *
                C2447 +
            ((C1376 - (C1375 + C1374) + C1377) * C51275 +
             (C1676 - (C1662 + C1663) + C1677) * C51169) *
                C2448) *
               C50999) *
              C1775 +
          ((((C7087 - (C7086 + C7085) + C7088) * C51275 +
             (C6451 * C1364 - (C6271 * C1358 + C6272 * C1363) +
              C6452 * C51044) *
                 C51169) *
                C2446 +
            (C7104 * C51275 + (C7092 - (C7093 + C7094) + C7095) * C51169) *
                C2447 +
            (C7105 * C51275 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
                C2448) *
               C51253 +
           ((C7103 * C51275 + (C7094 + C7093 - C7092 - C7095) * C51169) *
                C2446 +
            (C6730 * C51275 + (C7098 + C7097 - C7096 - C7099) * C51169) *
                C2447 +
            ((C1663 + C1662 - C1676 - C1677) * C51275 +
             (C1053 * C1363 + C1054 * C1358 -
              (C117 * C1161 + C51127 * C1168) * C1364 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C1363 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C1358 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C1364 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51275 +
            ((C13136 + C13137 + C13138) * C1363 +
             (C13139 + C13140 + C13141) * C1358 -
             (C13556 + C13557 + C13558) * C1364 -
             (C13559 + C13560 + C13561) * C51044) *
                C51169) *
               C50974 * C51253 +
           (((C8429 + C8428 + C8427) * C1364 -
             ((C8244 + C8243 + C8242) * C1358 +
              (C8241 + C8240 + C8239) * C1363) +
             (C8432 + C8431 + C8430) * C51044) *
                C51275 +
            ((C9967 + C9968 + C9969) * C1364 -
             ((C8614 + C8613 + C8612) * C1358 +
              (C8611 + C8610 + C8609) * C1363) +
             (C9970 + C9971 + C9972) * C51044) *
                C51169) *
               C50974 * C50999) *
              C1775 +
          ((((C13558 + C13557 + C13556) * C1364 -
             ((C13141 + C13140 + C13139) * C1358 +
              (C13138 + C13137 + C13136) * C1363) +
             (C13561 + C13560 + C13559) * C51044) *
                C51275 +
            ((C13890 + C13891 + C13892) * C1364 -
             ((C13726 + C13727 + C13728) * C1358 +
              (C13729 + C13730 + C13731) * C1363) +
             (C13893 + C13894 + C13895) * C51044) *
                C51169) *
               C50974 * C51253 +
           (((C8609 + C8610 + C8611) * C1363 + (C8612 + C8613 + C8614) * C1358 -
             (C9969 + C9968 + C9967) * C1364 -
             (C9972 + C9971 + C9970) * C51044) *
                C51275 +
            ((C9203 + C9204 + C9205) * C1363 + (C9206 + C9207 + C9208) * C1358 -
             (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
              C8199 * C1159 + C8194 * C1164) *
                 C1364 -
             (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
              C8199 * C1165 + C8194 * C1171) *
                 C51044) *
                C51169) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1492 +
             (C117 * C127 + C51127 * C140) * C51306 -
             (C117 * C300 + C51127 * C306) * C1493 -
             (C117 * C307 + C51127 * C318) * C51294 +
             (C117 * C638 + C51127 * C643) * C1494 +
             (C117 * C644 + C51127 * C653) * C1489) *
                C51275 +
            (C7941 + C7942 - C7943 - C7944 + C7945 + C7946) * C51169) *
               C2446 +
           ((C1496 + C1497 - C1498 - C1499 + C1500 + C1501) * C51275 +
            (C6879 + C6880 - C6881 - C6882 + C6883 + C6884) * C51169) *
               C2447 +
           ((C1502 + C1503 - C1504 - C1505 + C1506 + C1507) * C51275 +
            (C6885 + C6886 - C6887 - C6888 + C6889 + C6890) * C51169) *
               C2448) *
              C50994 * C1775 +
          (((C7943 - (C7942 + C7941) + C7944 - C7945 - C7946) * C51275 +
            (C6451 * C1493 - (C6271 * C51306 + C6272 * C1492) + C6452 * C51294 -
             (C117 * C3645 + C51127 * C3648) * C1494 -
             (C117 * C3649 + C51127 * C3654) * C1489) *
                C51169) *
               C2446 +
           ((C6881 - (C6880 + C6879) + C6882 - C6883 - C6884) * C51275 +
            (C6453 * C1493 - (C1050 * C51306 + C1049 * C1492) + C6454 * C51294 -
             (C117 * C3646 + C51127 * C3650) * C1494 -
             (C117 * C3651 + C51127 * C3655) * C1489) *
                C51169) *
               C2447 +
           ((C6887 - (C6886 + C6885) + C6888 - C6889 - C6890) * C51275 +
            (C6455 * C1493 - (C1052 * C51306 + C1051 * C1492) + C6456 * C51294 -
             (C117 * C3647 + C51127 * C3652) * C1494 -
             (C117 * C3653 + C51127 * C3656) * C1489) *
                C51169) *
               C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1492 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51306 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1493 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51294 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C1494 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C1489) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1492 +
            (C13139 + C13140 + C13141) * C51306 -
            (C13556 + C13557 + C13558) * C1493 -
            (C13559 + C13560 + C13561) * C51294 +
            (C13562 + C13563 + C13564) * C1494 +
            (C13565 + C13566 + C13567) * C1489) *
               C51169) *
              C50974 * C50994 * C1775 +
          (((C13558 + C13557 + C13556) * C1493 -
            ((C13141 + C13140 + C13139) * C51306 +
             (C13138 + C13137 + C13136) * C1492) +
            (C13561 + C13560 + C13559) * C51294 -
            (C13564 + C13563 + C13562) * C1494 -
            (C13567 + C13566 + C13565) * C1489) *
               C51275 +
           ((C13890 + C13891 + C13892) * C1493 -
            ((C13726 + C13727 + C13728) * C51306 +
             (C13729 + C13730 + C13731) * C1492) +
            (C13893 + C13894 + C13895) * C51294 -
            (C8201 * C11681 + C8196 * C11682 + C8200 * C9354 + C8195 * C9356 +
             C8199 * C3645 + C8194 * C3648) *
                C1494 -
            (C8201 * C11683 + C8196 * C11684 + C8200 * C9357 + C8195 * C9360 +
             C8199 * C3649 + C8194 * C3654) *
                C1489) *
               C51169) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C1363 +
             (C117 * C127 + C51127 * C140) * C1358 -
             (C117 * C300 + C51127 * C306) * C1364 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            (C7085 + C7086 - C7087 - C7088) * C51169) *
               C2446 +
           ((C1366 + C1367 - C1368 - C1369) * C51275 + C7103 * C51169) * C2447 +
           C6732 * C2448) *
              C50994 * C51307 +
          (((C7087 - (C7086 + C7085) + C7088) * C51275 +
            (C8093 - (C8094 + C8095) + C8096) * C51169) *
               C2446 +
           (C7104 * C51275 + (C7092 - (C7093 + C7094) + C7095) * C51169) *
               C2447 +
           (C7105 * C51275 + (C7096 - (C7097 + C7098) + C7099) * C51169) *
               C2448) *
              C50994 * C51297 +
          (((C8095 + C8094 - C8093 - C8096) * C51275 +
            (C6577 * C1363 + C6578 * C1358 -
             (C117 * C3757 + C51127 * C3763) * C1364 -
             (C117 * C3762 + C51127 * C3766) * C51044) *
                C51169) *
               C2446 +
           ((C7094 + C7093 - C7092 - C7095) * C51275 +
            (C6273 * C1363 + C6274 * C1358 -
             (C117 * C3756 + C51127 * C3761) * C1364 -
             (C117 * C3760 + C51127 * C3765) * C51044) *
                C51169) *
               C2447 +
           ((C7098 + C7097 - C7096 - C7099) * C51275 +
            (C6275 * C1363 + C6276 * C1358 -
             (C117 * C3755 + C51127 * C3759) * C1364 -
             (C117 * C3758 + C51127 * C3764) * C51044) *
                C51169) *
               C2448) *
              C50994 * C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C1363 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C1358 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C1364 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C13136 + C13137 + C13138) * C1363 +
            (C13139 + C13140 + C13141) * C1358 -
            (C13556 + C13557 + C13558) * C1364 -
            (C13559 + C13560 + C13561) * C51044) *
               C51169) *
              C50974 * C50994 * C51307 +
          (((C13558 + C13557 + C13556) * C1364 -
            ((C13141 + C13140 + C13139) * C1358 +
             (C13138 + C13137 + C13136) * C1363) +
            (C13561 + C13560 + C13559) * C51044) *
               C51275 +
           ((C13890 + C13891 + C13892) * C1364 -
            ((C13726 + C13727 + C13728) * C1358 +
             (C13729 + C13730 + C13731) * C1363) +
            (C13893 + C13894 + C13895) * C51044) *
               C51169) *
              C50974 * C50994 * C51297 +
          (((C13731 + C13730 + C13729) * C1363 +
            (C13728 + C13727 + C13726) * C1358 -
            (C13892 + C13891 + C13890) * C1364 -
            (C13895 + C13894 + C13893) * C51044) *
               C51275 +
           ((C14014 + C14015 + C14016) * C1363 +
            (C14017 + C14018 + C14019) * C1358 -
            (C8201 * C11751 + C8196 * C11753 + C8200 * C9461 + C8195 * C9465 +
             C8199 * C3757 + C8194 * C3763) *
                C1364 -
            (C8201 * C11752 + C8196 * C11754 + C8200 * C9464 + C8195 * C9467 +
             C8199 * C3762 + C8194 * C3766) *
                C51044) *
               C51169) *
              C50974 * C50994 * C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51275 +
            (C5672 * C635 + C5673 * C630 -
             (C117 * C883 + C51127 * C891) * C636 -
             (C117 * C892 + C51127 * C907) * C631 +
             (C117 * C884 + C51127 * C893) * C637 +
             (C117 * C894 + C51127 * C908) * C632) *
                C51169) *
               C2446 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C2447 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C2448) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C51275 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51169) *
               C2446 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C51275 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51169) *
               C2447 +
           ((C677 - (C676 + C675) + C678 - C693 - C694) * C51275 +
            (C1670 * C636 - (C518 * C630 + C517 * C635) + C1671 * C631 -
             (C117 * C890 + C51127 * C905) * C637 -
             (C117 * C906 + C51127 * C914) * C632) *
                C51169) *
               C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51275 +
            ((C117 * C476 + C51127 * C487) * C118 +
             (C117 * C486 + C51127 * C494) * C51028) *
                C51169) *
               C2446 +
           ((C178 + C179) * C51275 + (C521 + C522) * C51169) * C2447 +
           C5364 * C2448) *
              C112 -
          (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
           ((C522 + C521) * C51169 + (C179 + C178) * C51275) * C2446) *
              C113 +
          (C5364 * C2446 + (C189 * C51275 + (C525 + C526) * C51169) * C2447 +
           ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
              C114 -
          ((((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51169 +
            (C187 + C186) * C51275) *
               C2448 +
           ((C528 + C527) * C51169 + C190 * C51275) * C2447 + C5363 * C2446) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C51253 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C50999) *
              C1013 +
          (((C5667 * C51275 + C6256 * C51169) * C2446 +
            (C5359 * C51275 + C6257 * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C50999 -
           (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
               C51253) *
              C1014 +
          ((((C6278 + C6277) * C51275 +
             ((C117 * C1247 + C51127 * C1255) * C118 +
              (C117 * C1254 + C51127 * C1259) * C51028) *
                 C51169) *
                C2446 +
            (C6256 * C51275 + (C6279 + C6280) * C51169) * C2447 +
            (C6257 * C51275 + (C6281 + C6282) * C51169) * C2448) *
               C51253 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C51169 +
             (C1060 + C1059) * C51275) *
                C2448 +
            ((C6282 + C6281) * C51169 + C5670 * C51275) * C2447 +
            ((C6280 + C6279) * C51169 + C6258 * C51275) * C2446) *
               C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C118 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51028) *
               C51169) *
              C50974 * C112 -
          (((C8614 + C8613 + C8612) * C51028 + (C8611 + C8610 + C8609) * C118) *
               C51169 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51275) *
              C50974 * C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51275 +
           ((C8615 + C8616 + C8617) * C118 + (C8618 + C8619 + C8620) * C51028) *
               C51169) *
              C50974 * C114 -
          (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
             C8199 * C483 + C8194 * C492) *
                C51028 +
            (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
             C8199 * C474 + C8194 * C482) *
                C118) *
               C51169 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51275) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C636 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C631 +
            (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
             C8201 * C9036 + C8196 * C9038) *
                C637 +
            (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
             C8201 * C9039 + C8196 * C9042) *
                C632) *
               C51169) *
              C50974 * C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51275 +
           ((C9967 + C9968 + C9969) * C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C9970 + C9971 + C9972) * C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51169) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C51253 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C50999) *
              C1013 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C50999 -
           (((C13726 + C13727 + C13728) * C51028 +
             (C13729 + C13730 + C13731) * C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C51253) *
              C1014 +
          ((((C13731 + C13730 + C13729) * C118 +
             (C13728 + C13727 + C13726) * C51028) *
                C51275 +
            ((C8199 * C1247 + C8194 * C1255 + C8200 * C3757 + C8195 * C3763 +
              C8201 * C9461 + C8196 * C9465) *
                 C118 +
             (C8199 * C1254 + C8194 * C1259 + C8200 * C3762 + C8195 * C3766 +
              C8201 * C9464 + C8196 * C9467) *
                 C51028) *
                C51169) *
               C50974 * C51253 -
           (((C8201 * C9462 + C8196 * C9466 + C8200 * C3760 + C8195 * C3765 +
              C8199 * C1252 + C8194 * C1258) *
                 C51028 +
             (C8201 * C9460 + C8196 * C9463 + C8200 * C3756 + C8195 * C3761 +
              C8199 * C1246 + C8194 * C1253) *
                 C118) *
                C51169 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51275) *
               C50974 * C50999) *
              C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C51275 +
           (C5672 * C765 + C5673 * C760 - (C117 * C883 + C51127 * C891) * C766 -
            (C117 * C892 + C51127 * C907) * C761 +
            (C117 * C884 + C51127 * C893) * C767 +
            (C117 * C894 + C51127 * C908) * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C51169) *
              C2446 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C51275 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C51169) *
              C2447 +
          ((C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 +
            C685 * C767 + C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
            (C117 * C778 + C51127 * C783) * C763) *
               C51275 +
           (C515 * C765 + C516 * C760 - C1668 * C766 - C1669 * C761 +
            C5842 * C767 + C5843 * C762 -
            (C117 * C3319 + C51127 * C3324) * C768 -
            (C117 * C3325 + C51127 * C3328) * C763) *
               C51169) *
              C2448) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            ((C117 * C476 + C51127 * C487) * C298 +
             (C117 * C486 + C51127 * C494) * C51260 -
             (C117 * C883 + C51127 * C891) * C299 -
             (C117 * C892 + C51127 * C907) * C51044) *
                C51169) *
               C2446 +
           ((C325 + C326 - C359 - C360) * C51275 +
            (C1910 + C1909 - C1908 - C1911) * C51169) *
               C2447 +
           C5516 * C2448) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C51275 +
            (C1908 - (C1909 + C1910) + C1911) * C51169) *
               C2446 +
           ((C361 - (C332 + C331) + C362) * C51275 +
            (C1912 - (C1913 + C1914) + C1915) * C51169) *
               C2447 +
           ((C363 - (C338 + C337) + C364) * C51275 +
            (C1916 - (C1917 + C1918) + C1919) * C51169) *
               C2448) *
              C296 +
          (C5516 * C2446 +
           (C370 * C51275 + (C1918 + C1917 - C1916 - C1919) * C51169) * C2447 +
           ((C346 + C345 - C365 - C366) * C51275 +
            (C519 * C298 + C520 * C51260 -
             (C117 * C1643 + C51127 * C1644) * C299 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C2448) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            (C6429 + C6430 - C6431 - C6432) * C51169) *
               C2446 +
           ((C325 + C326 - C359 - C360) * C51275 +
            (C1910 + C1909 - C1908 - C1911) * C51169) *
               C2447 +
           C5516 * C2448) *
              C50994 * C1013 +
          (((C6431 - (C6430 + C6429) + C6432) * C51275 +
            (C6457 - (C6435 + C6436) + C6458) * C51169) *
               C2446 +
           ((C1908 - (C1909 + C1910) + C1911) * C51275 +
            (C6459 - (C6441 + C6442) + C6460) * C51169) *
               C2447 +
           ((C1912 - (C1913 + C1914) + C1915) * C51275 +
            (C6461 - (C6447 + C6448) + C6462) * C51169) *
               C2448) *
              C50994 * C1014 +
          (((C6436 + C6435 - C6457 - C6458) * C51275 +
            ((C117 * C1247 + C51127 * C1255) * C298 +
             (C117 * C1254 + C51127 * C1259) * C51260 -
             (C117 * C3757 + C51127 * C3763) * C299 -
             (C117 * C3762 + C51127 * C3766) * C51044) *
                C51169) *
               C2446 +
           ((C6442 + C6441 - C6459 - C6460) * C51275 +
            (C6273 * C298 + C6274 * C51260 -
             (C117 * C3756 + C51127 * C3761) * C299 -
             (C117 * C3760 + C51127 * C3765) * C51044) *
                C51169) *
               C2447 +
           ((C6448 + C6447 - C6461 - C6462) * C51275 +
            (C6275 * C298 + C6276 * C51260 -
             (C117 * C3755 + C51127 * C3759) * C299 -
             (C117 * C3758 + C51127 * C3764) * C51044) *
                C51169) *
               C2448) *
              C50994 * C1015)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C298 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51260 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C299 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C51044) *
               C51169) *
              C50974 * C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51275 +
           ((C9967 + C9968 + C9969) * C299 -
            ((C8614 + C8613 + C8612) * C51260 +
             (C8611 + C8610 + C8609) * C298) +
            (C9970 + C9971 + C9972) * C51044) *
               C51169) *
              C50974 * C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51275 +
           ((C8615 + C8616 + C8617) * C298 + (C8618 + C8619 + C8620) * C51260 -
            (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
             C8199 * C887 + C8194 * C899) *
                C299 -
            (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
             C8199 * C900 + C8194 * C911) *
                C51044) *
               C51169) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51275 +
          ((C13136 + C13137 + C13138) * C765 +
           (C13139 + C13140 + C13141) * C760 -
           (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
            C8199 * C883 + C8194 * C891) *
               C766 -
           (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
            C8199 * C892 + C8194 * C907) *
               C761 +
           (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
            C8201 * C9036 + C8196 * C9038) *
               C767 +
           (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
            C8201 * C9039 + C8196 * C9042) *
               C762 -
           (C8201 * C11481 + C8196 * C11482 + C8200 * C9036 + C8195 * C9038 +
            C8199 * C3317 + C8194 * C3320) *
               C768 -
           (C8201 * C11483 + C8196 * C11484 + C8200 * C9039 + C8195 * C9042 +
            C8199 * C3321 + C8194 * C3326) *
               C763) *
              C51169) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C13136 + C13137 + C13138) * C298 +
            (C13139 + C13140 + C13141) * C51260 -
            (C13556 + C13557 + C13558) * C299 -
            (C13559 + C13560 + C13561) * C51044) *
               C51169) *
              C50974 * C50994 * C1013 +
          (((C13558 + C13557 + C13556) * C299 -
            ((C13141 + C13140 + C13139) * C51260 +
             (C13138 + C13137 + C13136) * C298) +
            (C13561 + C13560 + C13559) * C51044) *
               C51275 +
           ((C13890 + C13891 + C13892) * C299 -
            ((C13726 + C13727 + C13728) * C51260 +
             (C13729 + C13730 + C13731) * C298) +
            (C13893 + C13894 + C13895) * C51044) *
               C51169) *
              C50974 * C50994 * C1014 +
          (((C13731 + C13730 + C13729) * C298 +
            (C13728 + C13727 + C13726) * C51260 -
            (C13892 + C13891 + C13890) * C299 -
            (C13895 + C13894 + C13893) * C51044) *
               C51275 +
           ((C8199 * C1247 + C8194 * C1255 + C8200 * C3757 + C8195 * C3763 +
             C8201 * C9461 + C8196 * C9465) *
                C298 +
            (C8199 * C1254 + C8194 * C1259 + C8200 * C3762 + C8195 * C3766 +
             C8201 * C9464 + C8196 * C9467) *
                C51260 -
            (C8201 * C11751 + C8196 * C11753 + C8200 * C9461 + C8195 * C9465 +
             C8199 * C3757 + C8194 * C3763) *
                C299 -
            (C8201 * C11752 + C8196 * C11754 + C8200 * C9464 + C8195 * C9467 +
             C8199 * C3762 + C8194 * C3766) *
                C51044) *
               C51169) *
              C50974 * C50994 * C1015)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51275 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
               C2446 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C2447 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C2448) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C51275 +
            ((C117 * C1158 + C51127 * C1162) * C636 -
             ((C117 * C1022 + C51127 * C1031) * C630 +
              (C117 * C1016 + C51127 * C1021) * C635) +
             (C117 * C1163 + C51127 * C1170) * C631 -
             (C117 * C3645 + C51127 * C3648) * C637 -
             (C117 * C3649 + C51127 * C3654) * C632) *
                C51169) *
               C2446 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51275 +
            ((C117 * C1159 + C51127 * C1164) * C636 -
             (C1050 * C630 + C1049 * C635) +
             (C117 * C1165 + C51127 * C1171) * C631 -
             (C117 * C3646 + C51127 * C3650) * C637 -
             (C117 * C3651 + C51127 * C3655) * C632) *
                C51169) *
               C2447 +
           ((C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51275 +
            ((C117 * C1160 + C51127 * C1166) * C636 -
             (C1052 * C630 + C1051 * C635) +
             (C117 * C1167 + C51127 * C1172) * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C51169) *
               C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C295 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C296 +
           (C5364 * C2446 + (C189 * C51275 + C5669 * C51169) * C2447 +
            ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
               C297) *
              C51262 +
          (((C5667 * C51275 + (C1055 + C1056) * C51169) * C2446 +
            (C5359 * C51275 + (C1057 + C1058) * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C296 -
           (C5677 * C2448 +
            ((C1056 + C1055) * C51169 + C5668 * C51275) * C2447 +
            (((C117 * C1022 + C51127 * C1031) * C51028 +
              (C117 * C1016 + C51127 * C1021) * C118) *
                 C51169 +
             (C5676 + C5675) * C51275) *
                C2446) *
               C295 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C51275) *
                C2448 +
            ((C1060 + C1059) * C51169 + C529 * C51275) * C2447 +
            C5677 * C2446) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51275 +
            (C5675 + C5676) * C51169) *
               C2446 +
           ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
              C50994 * C1240 -
          (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
           ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
              C50994 * C1241 +
          (((C6278 + C6277) * C51275 + (C6579 + C6580) * C51169) * C2446 +
           (C6256 * C51275 + (C6279 + C6280) * C51169) * C2447 +
           (C6257 * C51275 + (C6281 + C6282) * C51169) * C2448) *
              C50994 * C1242 -
          ((((C117 * C6563 + C51127 * C6569) * C51028 +
             (C117 * C6560 + C51127 * C6564) * C118) *
                C51169 +
            (C6282 + C6281) * C51275) *
               C2448 +
           (((C117 * C6565 + C51127 * C6570) * C51028 +
             (C117 * C6561 + C51127 * C6566) * C118) *
                C51169 +
            (C6280 + C6279) * C51275) *
               C2447 +
           (((C117 * C6567 + C51127 * C6571) * C51028 +
             (C117 * C6562 + C51127 * C6568) * C118) *
                C51169 +
            (C6580 + C6579) * C51275) *
               C2446) *
              C50994 * C1243)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C295 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51275 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51169) *
               C50974 * C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C296 -
           (((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C51028 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C295 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51169 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51275) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C13556 + C13557 + C13558) * C636 -
            (C13559 + C13560 + C13561) * C631 +
            (C13562 + C13563 + C13564) * C637 +
            (C13565 + C13566 + C13567) * C632) *
               C51169) *
              C50974 * C50994 * C51262 +
          (((C13558 + C13557 + C13556) * C636 -
            ((C13141 + C13140 + C13139) * C630 +
             (C13138 + C13137 + C13136) * C635) +
            (C13561 + C13560 + C13559) * C631 -
            (C13564 + C13563 + C13562) * C637 -
            (C13567 + C13566 + C13565) * C632) *
               C51275 +
           ((C8199 * C1158 + C8194 * C1162 + C8200 * C3645 + C8195 * C3648 +
             C8201 * C9354 + C8196 * C9356) *
                C636 -
            ((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C630 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C635) +
            (C8199 * C1163 + C8194 * C1170 + C8200 * C3649 + C8195 * C3654 +
             C8201 * C9357 + C8196 * C9360) *
                C631 -
            (C8201 * C11681 + C8196 * C11682 + C8200 * C9354 + C8195 * C9356 +
             C8199 * C3645 + C8194 * C3648) *
                C637 -
            (C8201 * C11683 + C8196 * C11684 + C8200 * C9357 + C8195 * C9360 +
             C8199 * C3649 + C8194 * C3654) *
                C632) *
               C51169) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51275 +
           ((C13136 + C13137 + C13138) * C118 +
            (C13139 + C13140 + C13141) * C51028) *
               C51169) *
              C50974 * C50994 * C1240 -
          (((C13726 + C13727 + C13728) * C51028 +
            (C13729 + C13730 + C13731) * C118) *
               C51169 +
           ((C13141 + C13140 + C13139) * C51028 +
            (C13138 + C13137 + C13136) * C118) *
               C51275) *
              C50974 * C50994 * C1241 +
          (((C13731 + C13730 + C13729) * C118 +
            (C13728 + C13727 + C13726) * C51028) *
               C51275 +
           ((C14014 + C14015 + C14016) * C118 +
            (C14017 + C14018 + C14019) * C51028) *
               C51169) *
              C50974 * C50994 * C1242 -
          (((C8201 * C13995 + C8196 * C13999 + C8200 * C13996 + C8195 * C14000 +
             C8199 * C6567 + C8194 * C6571) *
                C51028 +
            (C8201 * C13993 + C8196 * C13997 + C8200 * C13994 + C8195 * C13998 +
             C8199 * C6562 + C8194 * C6568) *
                C118) *
               C51169 +
           ((C14019 + C14018 + C14017) * C51028 +
            (C14016 + C14015 + C14014) * C118) *
               C51275) *
              C50974 * C50994 * C1243)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C51305 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C51291 +
           (C5364 * C2446 + (C189 * C51275 + C5669 * C51169) * C2447 +
            ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
               C1362) *
              C1775 +
          (((C5667 * C51275 + C6256 * C51169) * C2446 +
            (C5359 * C51275 + C6257 * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C51291 -
           (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
               C51305 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C51275) *
                C2448 +
            ((C1060 + C1059) * C51169 + C529 * C51275) * C2447 +
            C5677 * C2446) *
               C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C51305 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C51291 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51275 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51169) *
               C50974 * C1362) *
              C1775 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C51291 -
           (((C13726 + C13727 + C13728) * C51028 +
             (C13729 + C13730 + C13731) * C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C51305 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51169 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51275) *
               C50974 * C1362) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C298 +
              (C117 * C127 + C51127 * C140) * C51260 -
              (C117 * C300 + C51127 * C306) * C299 -
              (C117 * C307 + C51127 * C318) * C51044) *
                 C51275 +
             (C6429 + C6430 - C6431 - C6432) * C51169) *
                C2446 +
            ((C325 + C326 - C359 - C360) * C51275 + C7452 * C51169) * C2447 +
            C5516 * C2448) *
               C1490 +
           (((C359 - (C326 + C325) + C360) * C51275 + C7453 * C51169) * C2446 +
            ((C361 - (C332 + C331) + C362) * C51275 + C7454 * C51169) * C2447 +
            ((C363 - (C338 + C337) + C364) * C51275 +
             (C1916 - (C1917 + C1918) + C1919) * C51169) *
                C2448) *
               C50999) *
              C1775 +
          ((((C6431 - (C6430 + C6429) + C6432) * C51275 +
             (C6457 - (C6435 + C6436) + C6458) * C51169) *
                C2446 +
            (C7453 * C51275 + (C6459 - (C6441 + C6442) + C6460) * C51169) *
                C2447 +
            (C7454 * C51275 + (C6461 - (C6447 + C6448) + C6462) * C51169) *
                C2448) *
               C1490 +
           ((C7452 * C51275 + (C6442 + C6441 - C6459 - C6460) * C51169) *
                C2446 +
            (C5514 * C51275 + (C6448 + C6447 - C6461 - C6462) * C51169) *
                C2447 +
            ((C1918 + C1917 - C1916 - C1919) * C51275 +
             (C1053 * C298 + C1054 * C51260 -
              (C117 * C1161 + C51127 * C1168) * C299 -
              (C117 * C1169 + C51127 * C1173) * C51044) *
                 C51169) *
                C2448) *
               C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C298 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51260 -
             (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
              C8199 * C300 + C8194 * C306) *
                 C299 -
             (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
              C8199 * C307 + C8194 * C318) *
                 C51044) *
                C51275 +
            ((C13136 + C13137 + C13138) * C298 +
             (C13139 + C13140 + C13141) * C51260 -
             (C13556 + C13557 + C13558) * C299 -
             (C13559 + C13560 + C13561) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8429 + C8428 + C8427) * C299 -
             ((C8244 + C8243 + C8242) * C51260 +
              (C8241 + C8240 + C8239) * C298) +
             (C8432 + C8431 + C8430) * C51044) *
                C51275 +
            ((C9967 + C9968 + C9969) * C299 -
             ((C8614 + C8613 + C8612) * C51260 +
              (C8611 + C8610 + C8609) * C298) +
             (C9970 + C9971 + C9972) * C51044) *
                C51169) *
               C50974 * C50999) *
              C1775 +
          ((((C13558 + C13557 + C13556) * C299 -
             ((C13141 + C13140 + C13139) * C51260 +
              (C13138 + C13137 + C13136) * C298) +
             (C13561 + C13560 + C13559) * C51044) *
                C51275 +
            ((C13890 + C13891 + C13892) * C299 -
             ((C13726 + C13727 + C13728) * C51260 +
              (C13729 + C13730 + C13731) * C298) +
             (C13893 + C13894 + C13895) * C51044) *
                C51169) *
               C50974 * C1490 +
           (((C8609 + C8610 + C8611) * C298 + (C8612 + C8613 + C8614) * C51260 -
             (C9969 + C9968 + C9967) * C299 -
             (C9972 + C9971 + C9970) * C51044) *
                C51275 +
            ((C9203 + C9204 + C9205) * C298 + (C9206 + C9207 + C9208) * C51260 -
             (C8201 * C9355 + C8196 * C9358 + C8200 * C3646 + C8195 * C3650 +
              C8199 * C1159 + C8194 * C1164) *
                 C299 -
             (C8201 * C9359 + C8196 * C9361 + C8200 * C3651 + C8195 * C3655 +
              C8199 * C1165 + C8194 * C1171) *
                 C51044) *
                C51169) *
               C50974 * C50999) *
              C51070)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C1490 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C50999) *
              C51307 +
          (((C5667 * C51275 + C6256 * C51169) * C2446 +
            (C5359 * C51275 + C6257 * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C50999 -
           (C5677 * C2448 + (C6258 * C51169 + C5668 * C51275) * C2447 +
            ((C6277 + C6278) * C51169 + (C5676 + C5675) * C51275) * C2446) *
               C1490) *
              C51297 +
          ((((C6278 + C6277) * C51275 + (C6579 + C6580) * C51169) * C2446 +
            (C6256 * C51275 + (C6279 + C6280) * C51169) * C2447 +
            (C6257 * C51275 + (C6281 + C6282) * C51169) * C2448) *
               C1490 -
           ((((C117 * C1248 + C51127 * C1256) * C51028 +
              (C117 * C1244 + C51127 * C1249) * C118) *
                 C51169 +
             (C1060 + C1059) * C51275) *
                C2448 +
            ((C6282 + C6281) * C51169 + C5670 * C51275) * C2447 +
            ((C6280 + C6279) * C51169 + C6258 * C51275) * C2446) *
               C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C1490 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C50999) *
              C51307 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C50999 -
           (((C13726 + C13727 + C13728) * C51028 +
             (C13729 + C13730 + C13731) * C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C1490) *
              C51297 +
          ((((C13731 + C13730 + C13729) * C118 +
             (C13728 + C13727 + C13726) * C51028) *
                C51275 +
            ((C14014 + C14015 + C14016) * C118 +
             (C14017 + C14018 + C14019) * C51028) *
                C51169) *
               C50974 * C1490 -
           (((C8201 * C9462 + C8196 * C9466 + C8200 * C3760 + C8195 * C3765 +
              C8199 * C1252 + C8194 * C1258) *
                 C51028 +
             (C8201 * C9460 + C8196 * C9463 + C8200 * C3756 + C8195 * C3761 +
              C8199 * C1246 + C8194 * C1253) *
                 C118) *
                C51169 +
            ((C9208 + C9207 + C9206) * C51028 +
             (C9205 + C9204 + C9203) * C118) *
                C51275) *
               C50974 * C50999) *
              C2019)) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C118 +
             (C117 * C127 + C51127 * C140) * C51028) *
                C51275 +
            ((C117 * C476 + C51127 * C487) * C118 +
             (C117 * C486 + C51127 * C494) * C51028) *
                C51169) *
               C2446 +
           ((C178 + C179) * C51275 + (C521 + C522) * C51169) * C2447 +
           C5364 * C2448) *
              C112 -
          (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
           ((C522 + C521) * C51169 + (C179 + C178) * C51275) * C2446) *
              C113 +
          (C5364 * C2446 + (C189 * C51275 + (C525 + C526) * C51169) * C2447 +
           ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
              C114 -
          ((((C117 * C488 + C51127 * C495) * C51028 +
             (C117 * C477 + C51127 * C489) * C118) *
                C51169 +
            (C187 + C186) * C51275) *
               C2448 +
           ((C528 + C527) * C51169 + C190 * C51275) * C2447 + C5363 * C2446) *
              C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51275 +
            (C5672 * C635 + C5673 * C630 -
             (C117 * C883 + C51127 * C891) * C636 -
             (C117 * C892 + C51127 * C907) * C631 +
             (C117 * C884 + C51127 * C893) * C637 +
             (C117 * C894 + C51127 * C908) * C632) *
                C51169) *
               C2446 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C2447 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C2448) *
              C51253 +
          (((C661 - (C660 + C659) + C662 - C689 - C690) * C51275 +
            (C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51169) *
               C2446 +
           ((C669 - (C668 + C667) + C670 - C691 - C692) * C51275 +
            (C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51169) *
               C2447 +
           ((C677 - (C676 + C675) + C678 - C693 - C694) * C51275 +
            (C1670 * C636 - (C518 * C630 + C517 * C635) + C1671 * C631 -
             (C117 * C890 + C51127 * C905) * C637 -
             (C117 * C906 + C51127 * C914) * C632) *
                C51169) *
               C2448) *
              C50999) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C118 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51028) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C118 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51028) *
               C51169) *
              C50974 * C112 -
          (((C8614 + C8613 + C8612) * C51028 + (C8611 + C8610 + C8609) * C118) *
               C51169 +
           ((C8244 + C8243 + C8242) * C51028 + (C8241 + C8240 + C8239) * C118) *
               C51275) *
              C50974 * C113 +
          (((C8250 + C8249 + C8248) * C118 + (C8247 + C8246 + C8245) * C51028) *
               C51275 +
           ((C8615 + C8616 + C8617) * C118 + (C8618 + C8619 + C8620) * C51028) *
               C51169) *
              C50974 * C114 -
          (((C8201 * C906 + C8196 * C914 + C8200 * C904 + C8195 * C913 +
             C8199 * C483 + C8194 * C492) *
                C51028 +
            (C8201 * C890 + C8196 * C905 + C8200 * C889 + C8195 * C903 +
             C8199 * C474 + C8194 * C482) *
                C118) *
               C51169 +
           ((C8256 + C8255 + C8254) * C51028 + (C8253 + C8252 + C8251) * C118) *
               C51275) *
              C50974 * C115) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C636 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C631 +
            (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
             C8201 * C9036 + C8196 * C9038) *
                C637 +
            (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
             C8201 * C9039 + C8196 * C9042) *
                C632) *
               C51169) *
              C50974 * C51253 +
          (((C8429 + C8428 + C8427) * C636 -
            ((C8244 + C8243 + C8242) * C630 + (C8241 + C8240 + C8239) * C635) +
            (C8432 + C8431 + C8430) * C631 - (C8781 + C8780 + C8779) * C637 -
            (C8784 + C8783 + C8782) * C632) *
               C51275 +
           ((C9967 + C9968 + C9969) * C636 -
            ((C8614 + C8613 + C8612) * C630 + (C8611 + C8610 + C8609) * C635) +
            (C9970 + C9971 + C9972) * C631 -
            (C8201 * C9037 + C8196 * C9040 + C8200 * C3318 + C8195 * C3322 +
             C8199 * C886 + C8194 * C897) *
                C637 -
            (C8201 * C9041 + C8196 * C9043 + C8200 * C3323 + C8195 * C3327 +
             C8199 * C898 + C8194 * C910) *
                C632) *
               C51169) *
              C50974 * C50999) *
         C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C298 +
             (C117 * C127 + C51127 * C140) * C51260 -
             (C117 * C300 + C51127 * C306) * C299 -
             (C117 * C307 + C51127 * C318) * C51044) *
                C51275 +
            ((C117 * C476 + C51127 * C487) * C298 +
             (C117 * C486 + C51127 * C494) * C51260 -
             (C117 * C883 + C51127 * C891) * C299 -
             (C117 * C892 + C51127 * C907) * C51044) *
                C51169) *
               C2446 +
           ((C325 + C326 - C359 - C360) * C51275 +
            (C1910 + C1909 - C1908 - C1911) * C51169) *
               C2447 +
           C5516 * C2448) *
              C295 +
          (((C359 - (C326 + C325) + C360) * C51275 +
            (C1908 - (C1909 + C1910) + C1911) * C51169) *
               C2446 +
           ((C361 - (C332 + C331) + C362) * C51275 +
            (C1912 - (C1913 + C1914) + C1915) * C51169) *
               C2447 +
           ((C363 - (C338 + C337) + C364) * C51275 +
            (C1916 - (C1917 + C1918) + C1919) * C51169) *
               C2448) *
              C296 +
          (C5516 * C2446 +
           (C370 * C51275 + (C1918 + C1917 - C1916 - C1919) * C51169) * C2447 +
           ((C346 + C345 - C365 - C366) * C51275 +
            (C519 * C298 + C520 * C51260 -
             (C117 * C1643 + C51127 * C1644) * C299 -
             (C117 * C1645 + C51127 * C1646) * C51044) *
                C51169) *
               C2448) *
              C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C117 * C119 + C51127 * C126) * C765 +
            (C117 * C127 + C51127 * C140) * C760 -
            (C117 * C300 + C51127 * C306) * C766 -
            (C117 * C307 + C51127 * C318) * C761 +
            (C117 * C638 + C51127 * C643) * C767 +
            (C117 * C644 + C51127 * C653) * C762 -
            (C117 * C769 + C51127 * C773) * C768 -
            (C117 * C774 + C51127 * C781) * C763) *
               C51275 +
           (C5672 * C765 + C5673 * C760 - (C117 * C883 + C51127 * C891) * C766 -
            (C117 * C892 + C51127 * C907) * C761 +
            (C117 * C884 + C51127 * C893) * C767 +
            (C117 * C894 + C51127 * C908) * C762 -
            (C117 * C3317 + C51127 * C3320) * C768 -
            (C117 * C3321 + C51127 * C3326) * C763) *
               C51169) *
              C2446 +
          ((C168 * C765 + C169 * C760 - C349 * C766 - C350 * C761 +
            C683 * C767 + C684 * C762 - (C117 * C770 + C51127 * C775) * C768 -
            (C117 * C776 + C51127 * C782) * C763) *
               C51275 +
           (C513 * C765 + C514 * C760 - C1666 * C766 - C1667 * C761 +
            C5840 * C767 + C5841 * C762 -
            (C117 * C3318 + C51127 * C3322) * C768 -
            (C117 * C3323 + C51127 * C3327) * C763) *
               C51169) *
              C2447 +
          ((C170 * C765 + C171 * C760 - C352 * C766 - C353 * C761 +
            C685 * C767 + C686 * C762 - (C117 * C771 + C51127 * C777) * C768 -
            (C117 * C778 + C51127 * C783) * C763) *
               C51275 +
           (C515 * C765 + C516 * C760 - C1668 * C766 - C1669 * C761 +
            C5842 * C767 + C5843 * C762 -
            (C117 * C3319 + C51127 * C3324) * C768 -
            (C117 * C3325 + C51127 * C3328) * C763) *
               C51169) *
              C2448) *
         C50994 * C51058) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C298 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C51260 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C299 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C51044) *
               C51275 +
           ((C8199 * C476 + C8194 * C487 + C8200 * C883 + C8195 * C891 +
             C8201 * C884 + C8196 * C893) *
                C298 +
            (C8199 * C486 + C8194 * C494 + C8200 * C892 + C8195 * C907 +
             C8201 * C894 + C8196 * C908) *
                C51260 -
            (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
             C8199 * C883 + C8194 * C891) *
                C299 -
            (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
             C8199 * C892 + C8194 * C907) *
                C51044) *
               C51169) *
              C50974 * C295 +
          (((C8429 + C8428 + C8427) * C299 -
            ((C8244 + C8243 + C8242) * C51260 +
             (C8241 + C8240 + C8239) * C298) +
            (C8432 + C8431 + C8430) * C51044) *
               C51275 +
           ((C9967 + C9968 + C9969) * C299 -
            ((C8614 + C8613 + C8612) * C51260 +
             (C8611 + C8610 + C8609) * C298) +
            (C9970 + C9971 + C9972) * C51044) *
               C51169) *
              C50974 * C296 +
          (((C8250 + C8249 + C8248) * C298 + (C8247 + C8246 + C8245) * C51260 -
            (C8435 + C8434 + C8433) * C299 - (C8438 + C8437 + C8436) * C51044) *
               C51275 +
           ((C8615 + C8616 + C8617) * C298 + (C8618 + C8619 + C8620) * C51260 -
            (C8201 * C3319 + C8196 * C3324 + C8200 * C888 + C8195 * C901 +
             C8199 * C887 + C8194 * C899) *
                C299 -
            (C8201 * C3325 + C8196 * C3328 + C8200 * C902 + C8195 * C912 +
             C8199 * C900 + C8194 * C911) *
                C51044) *
               C51169) *
              C50974 * C297) *
         C51058) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
            C8201 * C638 + C8196 * C643) *
               C765 +
           (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
            C8201 * C644 + C8196 * C653) *
               C760 -
           (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
            C8199 * C300 + C8194 * C306) *
               C766 -
           (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
            C8199 * C307 + C8194 * C318) *
               C761 +
           (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
            C8201 * C3159 + C8196 * C3162) *
               C767 +
           (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
            C8201 * C3163 + C8196 * C3168) *
               C762 -
           (C8201 * C8882 + C8196 * C8884 + C8200 * C3159 + C8195 * C3162 +
            C8199 * C769 + C8194 * C773) *
               C768 -
           (C8201 * C8885 + C8196 * C8888 + C8200 * C3163 + C8195 * C3168 +
            C8199 * C774 + C8194 * C781) *
               C763) *
              C51275 +
          ((C13136 + C13137 + C13138) * C765 +
           (C13139 + C13140 + C13141) * C760 -
           (C8201 * C3317 + C8196 * C3320 + C8200 * C884 + C8195 * C893 +
            C8199 * C883 + C8194 * C891) *
               C766 -
           (C8201 * C3321 + C8196 * C3326 + C8200 * C894 + C8195 * C908 +
            C8199 * C892 + C8194 * C907) *
               C761 +
           (C8199 * C884 + C8194 * C893 + C8200 * C3317 + C8195 * C3320 +
            C8201 * C9036 + C8196 * C9038) *
               C767 +
           (C8199 * C894 + C8194 * C908 + C8200 * C3321 + C8195 * C3326 +
            C8201 * C9039 + C8196 * C9042) *
               C762 -
           (C8201 * C11481 + C8196 * C11482 + C8200 * C9036 + C8195 * C9038 +
            C8199 * C3317 + C8194 * C3320) *
               C768 -
           (C8201 * C11483 + C8196 * C11484 + C8200 * C9039 + C8195 * C9042 +
            C8199 * C3321 + C8194 * C3326) *
               C763) *
              C51169) *
         C50974 * C50994 * C51058) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C117 * C119 + C51127 * C126) * C118 +
              (C117 * C127 + C51127 * C140) * C51028) *
                 C51275 +
             (C5675 + C5676) * C51169) *
                C2446 +
            ((C178 + C179) * C51275 + C5667 * C51169) * C2447 + C5364 * C2448) *
               C295 -
           (C5363 * C2448 + (C530 * C51169 + (C181 + C180) * C51275) * C2447 +
            (C5668 * C51169 + (C179 + C178) * C51275) * C2446) *
               C296 +
           (C5364 * C2446 + (C189 * C51275 + C5669 * C51169) * C2447 +
            ((C185 + C184) * C51275 + (C527 + C528) * C51169) * C2448) *
               C297) *
              C51262 +
          (((C5667 * C51275 + (C1055 + C1056) * C51169) * C2446 +
            (C5359 * C51275 + (C1057 + C1058) * C51169) * C2447 +
            (C5669 * C51275 + (C1059 + C1060) * C51169) * C2448) *
               C296 -
           (C5677 * C2448 +
            ((C1056 + C1055) * C51169 + C5668 * C51275) * C2447 +
            (((C117 * C1022 + C51127 * C1031) * C51028 +
              (C117 * C1016 + C51127 * C1021) * C118) *
                 C51169 +
             (C5676 + C5675) * C51275) *
                C2446) *
               C295 -
           ((((C117 * C1029 + C51127 * C1035) * C51028 +
              (C117 * C1020 + C51127 * C1030) * C118) *
                 C51169 +
             (C528 + C527) * C51275) *
                C2448 +
            ((C1060 + C1059) * C51169 + C529 * C51275) * C2447 +
            C5677 * C2446) *
               C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C117 * C119 + C51127 * C126) * C635 +
             (C117 * C127 + C51127 * C140) * C630 -
             (C117 * C300 + C51127 * C306) * C636 -
             (C117 * C307 + C51127 * C318) * C631 +
             (C117 * C638 + C51127 * C643) * C637 +
             (C117 * C644 + C51127 * C653) * C632) *
                C51275 +
            (C6092 + C6093 - C6106 - C6107 + C6108 + C6109) * C51169) *
               C2446 +
           ((C659 + C660 - C661 - C662 + C689 + C690) * C51275 +
            (C5824 + C5825 - C5826 - C5827 + C5844 + C5845) * C51169) *
               C2447 +
           ((C667 + C668 - C669 - C670 + C691 + C692) * C51275 +
            (C5832 + C5833 - C5834 - C5835 + C5846 + C5847) * C51169) *
               C2448) *
              C50994 * C51262 +
          (((C6106 - (C6093 + C6092) + C6107 - C6108 - C6109) * C51275 +
            ((C117 * C1158 + C51127 * C1162) * C636 -
             ((C117 * C1022 + C51127 * C1031) * C630 +
              (C117 * C1016 + C51127 * C1021) * C635) +
             (C117 * C1163 + C51127 * C1170) * C631 -
             (C117 * C3645 + C51127 * C3648) * C637 -
             (C117 * C3649 + C51127 * C3654) * C632) *
                C51169) *
               C2446 +
           ((C5826 - (C5825 + C5824) + C5827 - C5844 - C5845) * C51275 +
            ((C117 * C1159 + C51127 * C1164) * C636 -
             (C1050 * C630 + C1049 * C635) +
             (C117 * C1165 + C51127 * C1171) * C631 -
             (C117 * C3646 + C51127 * C3650) * C637 -
             (C117 * C3651 + C51127 * C3655) * C632) *
                C51169) *
               C2447 +
           ((C5834 - (C5833 + C5832) + C5835 - C5846 - C5847) * C51275 +
            ((C117 * C1160 + C51127 * C1166) * C636 -
             (C1052 * C630 + C1051 * C635) +
             (C117 * C1167 + C51127 * C1172) * C631 -
             (C117 * C3647 + C51127 * C3652) * C637 -
             (C117 * C3653 + C51127 * C3656) * C632) *
                C51169) *
               C2448) *
              C50994 * C51070)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
              C8201 * C638 + C8196 * C643) *
                 C118 +
             (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
              C8201 * C644 + C8196 * C653) *
                 C51028) *
                C51275 +
            ((C13136 + C13137 + C13138) * C118 +
             (C13139 + C13140 + C13141) * C51028) *
                C51169) *
               C50974 * C295 -
           (((C8614 + C8613 + C8612) * C51028 +
             (C8611 + C8610 + C8609) * C118) *
                C51169 +
            ((C8244 + C8243 + C8242) * C51028 +
             (C8241 + C8240 + C8239) * C118) *
                C51275) *
               C50974 * C296 +
           (((C8250 + C8249 + C8248) * C118 +
             (C8247 + C8246 + C8245) * C51028) *
                C51275 +
            ((C8615 + C8616 + C8617) * C118 +
             (C8618 + C8619 + C8620) * C51028) *
                C51169) *
               C50974 * C297) *
              C51262 +
          ((((C8609 + C8610 + C8611) * C118 +
             (C8612 + C8613 + C8614) * C51028) *
                C51275 +
            ((C9203 + C9204 + C9205) * C118 +
             (C9206 + C9207 + C9208) * C51028) *
                C51169) *
               C50974 * C296 -
           (((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C51028 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C118) *
                C51169 +
            ((C13141 + C13140 + C13139) * C51028 +
             (C13138 + C13137 + C13136) * C118) *
                C51275) *
               C50974 * C295 -
           (((C8201 * C3653 + C8196 * C3656 + C8200 * C1167 + C8195 * C1172 +
              C8199 * C1026 + C8194 * C1033) *
                 C51028 +
             (C8201 * C3647 + C8196 * C3652 + C8200 * C1160 + C8195 * C1166 +
              C8199 * C1018 + C8194 * C1025) *
                 C118) *
                C51169 +
            ((C8620 + C8619 + C8618) * C51028 +
             (C8617 + C8616 + C8615) * C118) *
                C51275) *
               C50974 * C297) *
              C51070)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C8199 * C119 + C8194 * C126 + C8200 * C300 + C8195 * C306 +
             C8201 * C638 + C8196 * C643) *
                C635 +
            (C8199 * C127 + C8194 * C140 + C8200 * C307 + C8195 * C318 +
             C8201 * C644 + C8196 * C653) *
                C630 -
            (C8201 * C769 + C8196 * C773 + C8200 * C638 + C8195 * C643 +
             C8199 * C300 + C8194 * C306) *
                C636 -
            (C8201 * C774 + C8196 * C781 + C8200 * C644 + C8195 * C653 +
             C8199 * C307 + C8194 * C318) *
                C631 +
            (C8199 * C638 + C8194 * C643 + C8200 * C769 + C8195 * C773 +
             C8201 * C3159 + C8196 * C3162) *
                C637 +
            (C8199 * C644 + C8194 * C653 + C8200 * C774 + C8195 * C781 +
             C8201 * C3163 + C8196 * C3168) *
                C632) *
               C51275 +
           ((C13136 + C13137 + C13138) * C635 +
            (C13139 + C13140 + C13141) * C630 -
            (C13556 + C13557 + C13558) * C636 -
            (C13559 + C13560 + C13561) * C631 +
            (C13562 + C13563 + C13564) * C637 +
            (C13565 + C13566 + C13567) * C632) *
               C51169) *
              C50974 * C50994 * C51262 +
          (((C13558 + C13557 + C13556) * C636 -
            ((C13141 + C13140 + C13139) * C630 +
             (C13138 + C13137 + C13136) * C635) +
            (C13561 + C13560 + C13559) * C631 -
            (C13564 + C13563 + C13562) * C637 -
            (C13567 + C13566 + C13565) * C632) *
               C51275 +
           ((C8199 * C1158 + C8194 * C1162 + C8200 * C3645 + C8195 * C3648 +
             C8201 * C9354 + C8196 * C9356) *
                C636 -
            ((C8201 * C3649 + C8196 * C3654 + C8200 * C1163 + C8195 * C1170 +
              C8199 * C1022 + C8194 * C1031) *
                 C630 +
             (C8201 * C3645 + C8196 * C3648 + C8200 * C1158 + C8195 * C1162 +
              C8199 * C1016 + C8194 * C1021) *
                 C635) +
            (C8199 * C1163 + C8194 * C1170 + C8200 * C3649 + C8195 * C3654 +
             C8201 * C9357 + C8196 * C9360) *
                C631 -
            (C8201 * C11681 + C8196 * C11682 + C8200 * C9354 + C8195 * C9356 +
             C8199 * C3645 + C8194 * C3648) *
                C637 -
            (C8201 * C11683 + C8196 * C11684 + C8200 * C9357 + C8195 * C9360 +
             C8199 * C3649 + C8194 * C3654) *
                C632) *
               C51169) *
              C50974 * C50994 * C51070)) /
            (p * q * std::sqrt(p + q));
}
